    .INCLUDE "asm/macro.inc"
    .SYNTAX UNIFIED
    
	thumb_func_start sub_809E3E8
sub_809E3E8: @ 0x0809E3E8
	push {r4, lr}
	adds r4, r0, #0
	adds r3, r1, #0
	ldrb r2, [r4, #9]
	lsls r0, r2, #0x1a
	cmp r0, #0
	blt _0809E422
	lsrs r0, r2, #7
	cmp r0, #0
	bne _0809E422
	lsls r0, r2, #0x1b
	lsrs r0, r0, #0x1b
	cmp r0, #0x1e
	bhi _0809E414
	adds r1, r0, #1
	movs r0, #0x1f
	ands r1, r0
	movs r0, #0x20
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r4, #9]
_0809E414:
	cmp r3, #9
	bhi _0809E42C
	adds r0, r4, #0
	movs r1, #1
	bl sub_809E38C
	b _0809E42C
_0809E422:
	ldrb r1, [r4, #9]
	movs r0, #0x20
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r4, #9]
_0809E42C:
	ldrb r0, [r4, #9]
	lsls r0, r0, #0x1a
	cmp r0, #0
	bge _0809E43C
	adds r0, r4, #0
	movs r1, #1
	bl sub_809E370
_0809E43C:
	ldrb r1, [r4, #9]
	movs r0, #0x21
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r4, #9]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_809E458
sub_809E458: @ 0x0809E458
	push {r4, lr}
	adds r4, r0, #0
	bl sub_809E2D4
	movs r0, #0
	strh r0, [r4, #0x14]
	ldrb r1, [r4, #0x16]
	subs r0, #8
	ands r0, r1
	movs r1, #0x39
	rsbs r1, r1, #0
	ands r0, r1
	strb r0, [r4, #0x16]
	ldrh r1, [r4, #0x16]
	ldr r0, _0809E494 @ =0xFFFFFE3F
	ands r0, r1
	strh r0, [r4, #0x16]
	ldrb r1, [r4, #0x17]
	movs r0, #0xf
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #0x71
	rsbs r1, r1, #0
	ands r0, r1
	strb r0, [r4, #0x17]
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0809E494: .4byte 0xFFFFFE3F

	thumb_func_start sub_809E498
sub_809E498: @ 0x0809E498
	ldrh r0, [r0, #0x14]
	bx lr

	thumb_func_start sub_809E49C
sub_809E49C: @ 0x0809E49C
	ldrb r0, [r0, #0x16]
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1d
	bx lr

	thumb_func_start sub_809E4A4
sub_809E4A4: @ 0x0809E4A4
	ldrb r0, [r0, #0x17]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1d
	bx lr

	thumb_func_start sub_809E4AC
sub_809E4AC: @ 0x0809E4AC
	ldrh r0, [r0, #0x16]
	lsls r0, r0, #0x17
	lsrs r0, r0, #0x1d
	bx lr

	thumb_func_start sub_809E4B4
sub_809E4B4: @ 0x0809E4B4
	ldrb r0, [r0, #0x17]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1d
	bx lr

	thumb_func_start sub_809E4BC
sub_809E4BC: @ 0x0809E4BC
	ldrb r0, [r0, #0x17]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1d
	bx lr

	thumb_func_start sub_809E4C4
sub_809E4C4: @ 0x0809E4C4
	push {lr}
	adds r2, r0, #0
	ldrh r0, [r2, #0x14]
	adds r0, r0, r1
	cmp r0, #0
	bge _0809E4D4
	movs r0, #0
	b _0809E4DC
_0809E4D4:
	ldr r1, _0809E4E4 @ =0x0000FFFF
	cmp r0, r1
	bls _0809E4DC
	adds r0, r1, #0
_0809E4DC:
	strh r0, [r2, #0x14]
	pop {r0}
	bx r0
	.align 2, 0
_0809E4E4: .4byte 0x0000FFFF

	thumb_func_start sub_809E4E8
sub_809E4E8: @ 0x0809E4E8
	push {lr}
	rsbs r1, r1, #0
	bl sub_809E4C4
	pop {r0}
	bx r0

	thumb_func_start sub_809E4F4
sub_809E4F4: @ 0x0809E4F4
	strh r1, [r0, #0x14]
	bx lr

	thumb_func_start sub_809E4F8
sub_809E4F8: @ 0x0809E4F8
	push {lr}
	adds r3, r0, #0
	ldrb r2, [r3, #0x16]
	lsls r0, r2, #0x1d
	lsrs r0, r0, #0x1d
	cmp r0, #5
	bhi _0809E51C
	adds r1, r0, #1
	movs r0, #7
	ands r1, r0
	movs r0, #8
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x39
	rsbs r1, r1, #0
	ands r0, r1
	strb r0, [r3, #0x16]
_0809E51C:
	pop {r0}
	bx r0

	thumb_func_start sub_809E520
sub_809E520: @ 0x0809E520
	push {lr}
	adds r2, r0, #0
	ldrh r3, [r2, #0x16]
	lsls r0, r3, #0x17
	lsrs r0, r0, #0x1d
	cmp r0, #4
	bhi _0809E548
	adds r1, r0, #1
	movs r0, #7
	ands r1, r0
	lsls r1, r1, #6
	ldr r0, _0809E54C @ =0xFFFFFE3F
	ands r0, r3
	orrs r0, r1
	strh r0, [r2, #0x16]
	ldrb r1, [r2, #0x17]
	movs r0, #0xf
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r2, #0x17]
_0809E548:
	pop {r0}
	bx r0
	.align 2, 0
_0809E54C: .4byte 0xFFFFFE3F

	thumb_func_start sub_809E550
sub_809E550: @ 0x0809E550
	push {lr}
	adds r3, r0, #0
	ldrb r2, [r3, #0x17]
	lsls r0, r2, #0x19
	lsrs r0, r0, #0x1d
	cmp r0, #4
	bhi _0809E570
	adds r0, #1
	movs r1, #7
	ands r0, r1
	lsls r0, r0, #4
	movs r1, #0x71
	rsbs r1, r1, #0
	ands r1, r2
	orrs r1, r0
	strb r1, [r3, #0x17]
_0809E570:
	pop {r0}
	bx r0

	thumb_func_start sub_809E574
sub_809E574: @ 0x0809E574
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r5, r2, #0
	lsls r1, r1, #0x18
	lsrs r6, r1, #0x18
	bl sub_809E350
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809E590
	adds r0, r4, #0
	movs r1, #0xc8
	bl sub_809E4C4
_0809E590:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_809E3E8
	adds r0, r4, #0
	bl sub_809E340
	cmp r0, #0
	beq _0809E5AE
	cmp r5, #9
	bhi _0809E5AE
	adds r0, r4, #0
	movs r1, #0xc8
	bl sub_809E4E8
_0809E5AE:
	cmp r6, #0
	beq _0809E5E8
	ldrb r0, [r4, #0x16]
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1d
	cmp r0, #5
	bls _0809E5E0
	adds r0, r4, #0
	bl sub_809E340
	cmp r0, #4
	bls _0809E5E8
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	cmp r0, #9
	bgt _0809E5E8
	movs r1, #0xfa
	lsls r1, r1, #2
	adds r0, r4, #0
	bl sub_809E4E8
	b _0809E5E8
_0809E5E0:
	adds r0, r4, #0
	movs r1, #0x64
	bl sub_809E4E8
_0809E5E8:
	ldrb r2, [r4, #0x16]
	lsls r0, r2, #0x1a
	lsrs r0, r0, #0x1d
	cmp r0, #6
	bhi _0809E604
	adds r0, #1
	movs r1, #7
	ands r0, r1
	lsls r0, r0, #3
	movs r1, #0x39
	rsbs r1, r1, #0
	ands r1, r2
	orrs r1, r0
	strb r1, [r4, #0x16]
_0809E604:
	ldrb r2, [r4, #0x17]
	lsls r0, r2, #0x1c
	lsrs r0, r0, #0x1d
	cmp r0, #6
	bhi _0809E620
	adds r0, #1
	movs r1, #7
	ands r0, r1
	lsls r0, r0, #1
	movs r1, #0xf
	rsbs r1, r1, #0
	ands r1, r2
	orrs r1, r0
	strb r1, [r4, #0x17]
_0809E620:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_809E628
sub_809E628: @ 0x0809E628
	push {r4, lr}
	adds r4, r0, #0
	bl sub_809E2D4
	ldrb r0, [r4, #0x1a]
	movs r1, #3
	orrs r0, r1
	movs r1, #0x1d
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #4
	ands r0, r1
	strb r0, [r4, #0x1a]
	movs r0, #0
	str r0, [r4, #0x1c]
	strb r0, [r4, #0x14]
	strb r0, [r4, #0x15]
	strb r0, [r4, #0x16]
	strb r0, [r4, #0x17]
	strb r0, [r4, #0x18]
	strb r0, [r4, #0x19]
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_809E65C
sub_809E65C: @ 0x0809E65C
	ldrb r0, [r0, #0x1a]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	bx lr

	thumb_func_start sub_809E664
sub_809E664: @ 0x0809E664
	ldrb r0, [r0, #0x1a]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1d
	bx lr

	thumb_func_start sub_809E66C
sub_809E66C: @ 0x0809E66C
	push {lr}
	cmp r1, #2
	bls _0809E676
	movs r0, #0
	b _0809E67C
_0809E676:
	adds r0, #0x14
	adds r0, r0, r1
	ldrb r0, [r0]
_0809E67C:
	pop {r1}
	bx r1

	thumb_func_start sub_809E680
sub_809E680: @ 0x0809E680
	ldrb r0, [r0, #0x1a]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1f
	bx lr

	thumb_func_start sub_809E688
sub_809E688: @ 0x0809E688
	push {lr}
	cmp r1, #2
	bls _0809E692
	movs r0, #0
	b _0809E698
_0809E692:
	adds r0, #0x17
	adds r0, r0, r1
	ldrb r0, [r0]
_0809E698:
	pop {r1}
	bx r1

	thumb_func_start sub_809E69C
sub_809E69C: @ 0x0809E69C
	push {lr}
	adds r3, r1, #0
	cmp r3, #2
	bhi _0809E6BE
	adds r0, #0x14
	adds r1, r0, r3
	ldrb r1, [r1]
	adds r1, r1, r2
	cmp r1, #0
	bge _0809E6B4
	movs r1, #0
	b _0809E6BA
_0809E6B4:
	cmp r1, #0xff
	bls _0809E6BA
	movs r1, #0xff
_0809E6BA:
	adds r0, r0, r3
	strb r1, [r0]
_0809E6BE:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_809E6C4
sub_809E6C4: @ 0x0809E6C4
	push {r4, lr}
	movs r3, #3
	ands r1, r3
	ldrb r4, [r0, #0x1a]
	movs r3, #4
	rsbs r3, r3, #0
	ands r3, r4
	orrs r3, r1
	movs r1, #7
	ands r2, r1
	lsls r2, r2, #2
	movs r1, #0x1d
	rsbs r1, r1, #0
	ands r3, r1
	orrs r3, r2
	strb r3, [r0, #0x1a]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_809E6EC
sub_809E6EC: @ 0x0809E6EC
	ldrb r2, [r0, #0x1a]
	movs r1, #0x1d
	rsbs r1, r1, #0
	ands r1, r2
	movs r2, #4
	orrs r1, r2
	strb r1, [r0, #0x1a]
	bx lr

	thumb_func_start sub_809E6FC
sub_809E6FC: @ 0x0809E6FC
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r3, r1, #0
	lsls r2, r2, #0x18
	lsrs r5, r2, #0x18
	ldrb r0, [r4, #0x1a]
	movs r1, #0x20
	orrs r0, r1
	strb r0, [r4, #0x1a]
	cmp r5, #0
	beq _0809E722
	adds r0, r4, #0
	adds r0, #0x17
	adds r1, r0, r3
	ldrb r0, [r1]
	cmp r0, #0x1f
	beq _0809E722
	adds r0, #1
	strb r0, [r1]
_0809E722:
	adds r0, r4, #0
	adds r0, #0x17
	adds r0, r0, r3
	ldrb r0, [r0]
	movs r2, #1
	cmp r0, #5
	bls _0809E73E
	movs r2, #2
	cmp r0, #0xa
	bls _0809E73E
	movs r2, #4
	cmp r0, #0x10
	bhi _0809E73E
	movs r2, #3
_0809E73E:
	cmp r5, #0
	bne _0809E744
	rsbs r2, r2, #0
_0809E744:
	adds r0, r4, #0
	adds r1, r3, #0
	bl sub_809E69C
	adds r0, r4, #0
	movs r1, #1
	bl sub_809E370
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_809E75C
sub_809E75C: @ 0x0809E75C
	push {r4, lr}
	adds r3, r0, #0
	ldrb r2, [r3, #0x1a]
	movs r4, #0x1c
	adds r0, r4, #0
	ands r0, r2
	cmp r0, #0
	beq _0809E798
	lsls r0, r2, #0x1b
	lsrs r0, r0, #0x1d
	subs r0, #1
	movs r1, #7
	ands r0, r1
	lsls r0, r0, #2
	movs r1, #0x1d
	rsbs r1, r1, #0
	ands r1, r2
	orrs r1, r0
	strb r1, [r3, #0x1a]
	adds r0, r1, #0
	ands r0, r4
	cmp r0, #0
	bne _0809E790
	movs r0, #3
	orrs r1, r0
	strb r1, [r3, #0x1a]
_0809E790:
	adds r0, r3, #0
	movs r1, #2
	bl sub_809E38C
_0809E798:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_809E7A0
sub_809E7A0: @ 0x0809E7A0
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	ldrb r1, [r4, #0x1a]
	movs r0, #0x21
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r4, #0x1a]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_809E7C8
sub_809E7C8: @ 0x0809E7C8
	movs r1, #0
	str r1, [r0, #0x1c]
	bx lr
	.align 2, 0

	thumb_func_start sub_809E7D0
sub_809E7D0: @ 0x0809E7D0
	movs r1, #1
	str r1, [r0, #0x1c]
	bx lr
	.align 2, 0

	thumb_func_start sub_809E7D8
sub_809E7D8: @ 0x0809E7D8
	ldr r1, [r1]
	str r1, [r0, #0x20]
	movs r1, #2
	str r1, [r0, #0x1c]
	bx lr
	.align 2, 0

	thumb_func_start sub_809E7E4
sub_809E7E4: @ 0x0809E7E4
	ldr r1, [r1]
	str r1, [r0, #0x20]
	movs r1, #3
	str r1, [r0, #0x1c]
	bx lr
	.align 2, 0

	thumb_func_start sub_809E7F0
sub_809E7F0: @ 0x0809E7F0
	ldr r1, [r1]
	str r1, [r0, #0x20]
	movs r1, #4
	str r1, [r0, #0x1c]
	bx lr
	.align 2, 0

	thumb_func_start sub_809E7FC
sub_809E7FC: @ 0x0809E7FC
	movs r1, #5
	str r1, [r0, #0x1c]
	bx lr
	.align 2, 0

	thumb_func_start sub_809E804
sub_809E804: @ 0x0809E804
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r7, r0, #0
	cmp r1, #6
	bhi _0809E894
	ldr r0, _0809E88C @ =gUnknown_081040EC
	lsls r1, r1, #2
	mov r8, r1
	add r8, r0
	mov r0, r8
	ldrb r6, [r0]
	ldrb r1, [r0, #1]
	mov sb, r1
	mov r3, sp
	movs r2, #0x1c
	ldrh r1, [r3]
	ldr r4, _0809E890 @ =0xFFFFFC00
	adds r0, r4, #0
	ands r0, r1
	orrs r0, r2
	strh r0, [r3]
	movs r0, #0x3f
	mov sl, r0
	adds r1, r6, #0
	ands r1, r0
	lsls r1, r1, #2
	ldrb r5, [r3, #1]
	movs r2, #3
	adds r0, r2, #0
	ands r0, r5
	orrs r0, r1
	strb r0, [r3, #1]
	lsrs r6, r6, #6
	ldrh r1, [r3, #2]
	adds r0, r4, #0
	ands r0, r1
	orrs r0, r6
	strh r0, [r3, #2]
	mov r0, sb
	mov r1, sl
	ands r0, r1
	lsls r0, r0, #2
	ldrb r1, [r3, #3]
	ands r2, r1
	orrs r2, r0
	strb r2, [r3, #3]
	mov r0, sb
	lsrs r0, r0, #6
	mov sb, r0
	ldrh r0, [r3, #4]
	ands r4, r0
	mov r1, sb
	orrs r4, r1
	strh r4, [r3, #4]
	mov r0, r8
	ldrb r4, [r0, #2]
	adds r0, r7, #0
	mov r1, sp
	movs r2, #6
	bl sub_80D3994
	strb r4, [r7, #6]
	b _0809E8CE
	.align 2, 0
_0809E88C: .4byte gUnknown_081040EC
_0809E890: .4byte 0xFFFFFC00
_0809E894:
	mov r1, sp
	movs r4, #0x1c
	ldrh r2, [r1]
	ldr r3, _0809E8E0 @ =0xFFFFFC00
	adds r0, r3, #0
	ands r0, r2
	orrs r0, r4
	strh r0, [r1]
	movs r5, #0
	ldrb r4, [r1, #1]
	movs r2, #3
	adds r0, r2, #0
	ands r0, r4
	strb r0, [r1, #1]
	ldrh r4, [r1, #2]
	adds r0, r3, #0
	ands r0, r4
	strh r0, [r1, #2]
	ldrb r0, [r1, #3]
	ands r2, r0
	strb r2, [r1, #3]
	ldrh r0, [r1, #4]
	ands r3, r0
	strh r3, [r1, #4]
	adds r0, r7, #0
	movs r2, #6
	bl sub_80D3994
	strb r5, [r7, #6]
_0809E8CE:
	adds r0, r7, #0
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0809E8E0: .4byte 0xFFFFFC00

	thumb_func_start sub_809E8E4
sub_809E8E4: @ 0x0809E8E4
	push {r4, lr}
	adds r2, r0, #0
	adds r4, r1, #0
	ldrb r1, [r2]
	lsls r1, r1, #0x1c
	ldrb r0, [r4]
	lsls r0, r0, #0x1c
	lsrs r3, r1, #0x1c
	cmp r1, r0
	bne _0809E960
	cmp r3, #8
	bhi _0809E960
	lsls r0, r3, #2
	ldr r1, _0809E908 @ =_0809E90C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809E908: .4byte _0809E90C
_0809E90C: @ jump table
	.4byte _0809E930 @ case 0
	.4byte _0809E934 @ case 1
	.4byte _0809E934 @ case 2
	.4byte _0809E950 @ case 3
	.4byte _0809E950 @ case 4
	.4byte _0809E960 @ case 5
	.4byte _0809E950 @ case 6
	.4byte _0809E950 @ case 7
	.4byte _0809E950 @ case 8
_0809E930:
	movs r0, #1
	b _0809E962
_0809E934:
	movs r3, #0
	ldr r0, [r2]
	ldr r2, _0809E94C @ =0x00FFFF00
	ands r0, r2
	ldr r1, [r4]
	ands r1, r2
	cmp r0, r1
	bne _0809E946
	movs r3, #1
_0809E946:
	adds r0, r3, #0
	b _0809E962
	.align 2, 0
_0809E94C: .4byte 0x00FFFF00
_0809E950:
	movs r1, #0
	ldrb r0, [r2, #1]
	ldrb r4, [r4, #1]
	cmp r0, r4
	bne _0809E95C
	movs r1, #1
_0809E95C:
	adds r0, r1, #0
	b _0809E962
_0809E960:
	movs r0, #0
_0809E962:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_809E968
sub_809E968: @ 0x0809E968
	push {r4, lr}
	adds r2, r1, #0
	adds r4, r0, #0
	adds r4, #0x38
	adds r1, r4, #0
	bl sub_80E3E9C
	adds r1, r0, #0
	eors r1, r4
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r0, r0, #0x1f
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_809E988
sub_809E988: @ 0x0809E988
	lsls r1, r1, #3
	adds r1, r1, r0
	ldm r2!, {r0, r3}
	stm r1!, {r0, r3}
	bx lr
	.align 2, 0

	thumb_func_start sub_809E994
sub_809E994: @ 0x0809E994
	push {r4, lr}
	sub sp, #8
	lsls r1, r1, #3
	mov r4, sp
	ldrb r3, [r4]
	movs r2, #0x10
	rsbs r2, r2, #0
	ands r2, r3
	strb r2, [r4]
	adds r1, r1, r0
	mov r0, sp
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	add sp, #8
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_809E9B8
sub_809E9B8: @ 0x0809E9B8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x10
	adds r7, r0, #0
	add r1, sp, #8
	movs r4, #0x1d
	ldrh r2, [r1]
	ldr r3, _0809EA64 @ =0xFFFFFC00
	adds r0, r3, #0
	ands r0, r2
	orrs r0, r4
	strh r0, [r1]
	movs r6, #0x90
	ldrb r4, [r1, #1]
	movs r2, #3
	adds r0, r2, #0
	ands r0, r4
	orrs r0, r6
	strb r0, [r1, #1]
	movs r5, #1
	ldrh r4, [r1, #2]
	adds r0, r3, #0
	ands r0, r4
	orrs r0, r5
	strh r0, [r1, #2]
	ldrb r0, [r1, #3]
	ands r2, r0
	orrs r2, r6
	strb r2, [r1, #3]
	ldrh r0, [r1, #4]
	ands r3, r0
	orrs r3, r5
	strh r3, [r1, #4]
	mov r4, sp
	movs r0, #0
	mov r8, r0
	mov r0, sp
	movs r2, #6
	bl sub_80D3994
	mov r1, r8
	strb r1, [r4, #6]
	adds r0, r7, #0
	mov r1, sp
	bl sub_809E2D4
	adds r5, r7, #0
	adds r5, #0x14
	ldr r6, _0809EA68 @ =gUnknown_08104108
	adds r0, r6, #0
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, #0xc
	bls _0809EA2A
	movs r4, #0xc
_0809EA2A:
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl sub_80D3994
	adds r0, r5, r4
	mov r1, r8
	strb r1, [r0]
	adds r2, r7, #0
	adds r2, #0x24
	ldrb r1, [r2]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #0x7d
	rsbs r1, r1, #0
	ands r0, r1
	strb r0, [r2]
	adds r0, r7, #0
	adds r0, #0x25
	mov r1, r8
	strb r1, [r0]
	adds r0, r7, #0
	add sp, #0x10
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0809EA64: .4byte 0xFFFFFC00
_0809EA68: .4byte gUnknown_08104108

	thumb_func_start sub_809EA6C
sub_809EA6C: @ 0x0809EA6C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	mov r8, r1
	adds r1, r2, #0
	bl sub_809E2D4
	adds r6, r5, #0
	adds r6, #0x14
	ldr r7, _0809EAC8 @ =gUnknown_08104108
	adds r0, r7, #0
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, #0xc
	bls _0809EA90
	movs r4, #0xc
_0809EA90:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl sub_80D3994
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
	adds r1, r5, #0
	adds r1, #0x24
	mov r2, r8
	ldrb r0, [r2]
	strb r0, [r1]
	adds r1, #1
	movs r0, #0
	strb r0, [r1]
	adds r2, r5, #0
	adds r2, #0x26
	ldrb r1, [r2]
	subs r0, #2
	ands r0, r1
	strb r0, [r2]
	adds r0, r5, #0
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0809EAC8: .4byte gUnknown_08104108

	thumb_func_start sub_809EACC
sub_809EACC: @ 0x0809EACC
	adds r0, #0x14
	bx lr

	thumb_func_start sub_809EAD0
sub_809EAD0: @ 0x0809EAD0
	adds r0, #0x24
	ldrb r0, [r0]
	bx lr
	.align 2, 0

	thumb_func_start sub_809EAD8
sub_809EAD8: @ 0x0809EAD8
	adds r0, #0x25
	ldrb r0, [r0]
	bx lr
	.align 2, 0

	thumb_func_start sub_809EAE0
sub_809EAE0: @ 0x0809EAE0
	adds r0, #0x26
	ldrb r0, [r0]
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1f
	bx lr
	.align 2, 0

	thumb_func_start sub_809EAEC
sub_809EAEC: @ 0x0809EAEC
	adds r0, #0x26
	ldrb r1, [r0]
	movs r2, #1
	orrs r1, r2
	strb r1, [r0]
	bx lr

	thumb_func_start sub_809EAF8
sub_809EAF8: @ 0x0809EAF8
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	adds r4, #0x25
	ldrb r0, [r4]
	cmp r0, #0xfe
	bhi _0809EB1A
	adds r0, #1
	strb r0, [r4]
_0809EB1A:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_809EB20
sub_809EB20: @ 0x0809EB20
	push {r4, r5, r6, lr}
	adds r5, r1, #0
	adds r6, r0, #0
	adds r6, #0x14
	adds r0, r5, #0
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, #0xc
	bls _0809EB36
	movs r4, #0xc
_0809EB36:
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_80D3994
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_809EB4C
sub_809EB4C: @ 0x0809EB4C
	push {r4, lr}
	adds r4, r0, #0
	bl sub_809E2D4
	movs r0, #0
	strb r0, [r4, #0x14]
	ldrb r1, [r4, #0x15]
	subs r0, #2
	ands r0, r1
	strb r0, [r4, #0x15]
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_809EB68
sub_809EB68: @ 0x0809EB68
	ldrb r0, [r0, #0x14]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	bx lr

	thumb_func_start sub_809EB70
sub_809EB70: @ 0x0809EB70
	push {lr}
	movs r2, #0
	ldrb r1, [r0, #0x14]
	lsls r0, r1, #0x1c
	cmp r0, #0
	beq _0809EB86
	movs r0, #0x70
	ands r0, r1
	cmp r0, #0
	bne _0809EB86
	movs r2, #1
_0809EB86:
	adds r0, r2, #0
	pop {r1}
	bx r1

	thumb_func_start sub_809EB8C
sub_809EB8C: @ 0x0809EB8C
	push {lr}
	movs r2, #0
	ldrb r1, [r0, #0x14]
	lsls r0, r1, #0x1c
	cmp r0, #0
	beq _0809EBA2
	movs r0, #0x70
	ands r0, r1
	cmp r0, #0
	beq _0809EBA2
	lsrs r2, r1, #7
_0809EBA2:
	adds r0, r2, #0
	pop {r1}
	bx r1

	thumb_func_start sub_809EBA8
sub_809EBA8: @ 0x0809EBA8
	movs r2, #0xf
	ands r1, r2
	ldrb r3, [r0, #0x14]
	movs r2, #0x10
	rsbs r2, r2, #0
	ands r2, r3
	orrs r2, r1
	movs r1, #0x71
	rsbs r1, r1, #0
	ands r2, r1
	movs r1, #0x30
	orrs r2, r1
	movs r1, #0x80
	orrs r2, r1
	strb r2, [r0, #0x14]
	ldrb r2, [r0, #0x15]
	movs r1, #2
	rsbs r1, r1, #0
	ands r1, r2
	strb r1, [r0, #0x15]
	bx lr
	.align 2, 0

	thumb_func_start sub_809EBD4
sub_809EBD4: @ 0x0809EBD4
	ldrb r2, [r0, #0x14]
	movs r1, #0x10
	rsbs r1, r1, #0
	ands r1, r2
	strb r1, [r0, #0x14]
	ldrb r2, [r0, #0x15]
	movs r1, #2
	rsbs r1, r1, #0
	ands r1, r2
	strb r1, [r0, #0x15]
	bx lr
	.align 2, 0

	thumb_func_start sub_809EBEC
sub_809EBEC: @ 0x0809EBEC
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	ldrb r2, [r4, #0x14]
	lsrs r0, r2, #7
	cmp r0, #0
	beq _0809EC12
	movs r0, #0x7f
	ands r0, r2
	strb r0, [r4, #0x14]
	b _0809EC40
_0809EC12:
	ldrb r1, [r4, #0x15]
	lsls r0, r1, #0x1f
	cmp r0, #0
	beq _0809EC40
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r4, #0x15]
	movs r0, #0x70
	ands r0, r2
	cmp r0, #0
	beq _0809EC40
	lsls r0, r2, #0x19
	lsrs r0, r0, #0x1d
	subs r0, #1
	movs r1, #7
	ands r0, r1
	lsls r0, r0, #4
	movs r1, #0x71
	rsbs r1, r1, #0
	ands r1, r2
	orrs r1, r0
	strb r1, [r4, #0x14]
_0809EC40:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_809EC48
sub_809EC48: @ 0x0809EC48
	push {r4, lr}
	sub sp, #8
	adds r4, r0, #0
	mov r0, sp
	adds r1, r4, #0
	bl sub_809E32C
	mov r0, sp
	ldrh r0, [r0]
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x16
	adds r1, r0, #0
	cmp r0, #0x11
	beq _0809EC80
	cmp r0, #0x11
	bgt _0809EC6E
	cmp r0, #7
	beq _0809EC80
	b _0809EC76
_0809EC6E:
	cmp r1, #0x1d
	beq _0809EC80
	cmp r1, #0x25
	beq _0809EC80
_0809EC76:
	ldrb r1, [r4, #0x15]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	b _0809EC86
_0809EC80:
	ldrb r0, [r4, #0x15]
	movs r1, #1
	orrs r0, r1
_0809EC86:
	strb r0, [r4, #0x15]
	add sp, #8
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_809EC90
sub_809EC90: @ 0x0809EC90
	push {r4, lr}
	adds r4, r0, #0
	bl sub_809E2D4
	ldrb r1, [r4, #0x14]
	movs r0, #0x40
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r4, #0x14]
	ldrh r1, [r4, #0x14]
	ldr r0, _0809ECD4 @ =0xFFFFFE3F
	ands r0, r1
	strh r0, [r4, #0x14]
	ldrb r1, [r4, #0x15]
	movs r0, #3
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	subs r1, #0x10
	ands r0, r1
	subs r1, #0x20
	ands r0, r1
	strb r0, [r4, #0x15]
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0809ECD4: .4byte 0xFFFFFE3F

	thumb_func_start sub_809ECD8
sub_809ECD8: @ 0x0809ECD8
	ldrb r0, [r0, #0x14]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1a
	bx lr

	thumb_func_start sub_809ECE0
sub_809ECE0: @ 0x0809ECE0
	push {lr}
	adds r1, r0, #0
	movs r2, #0
	ldrb r0, [r1, #0x14]
	lsls r0, r0, #0x1a
	cmp r0, #0
	beq _0809ECFC
	ldrh r1, [r1, #0x14]
	movs r0, #0xe0
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0809ECFC
	movs r2, #1
_0809ECFC:
	adds r0, r2, #0
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_809ED04
sub_809ED04: @ 0x0809ED04
	push {lr}
	ldrb r2, [r0, #0x15]
	movs r0, #2
	ands r0, r2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	rsbs r0, r0, #0
	lsrs r1, r0, #0x1f
	movs r0, #4
	ands r0, r2
	cmp r0, #0
	beq _0809ED1E
	adds r1, #1
_0809ED1E:
	movs r0, #8
	ands r0, r2
	cmp r0, #0
	beq _0809ED2C
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
_0809ED2C:
	movs r0, #0x10
	ands r0, r2
	cmp r0, #0
	beq _0809ED3A
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
_0809ED3A:
	movs r0, #0x20
	ands r0, r2
	cmp r0, #0
	beq _0809ED48
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
_0809ED48:
	movs r0, #0x40
	ands r0, r2
	cmp r0, #0
	beq _0809ED56
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
_0809ED56:
	cmp r1, #6
	beq _0809ED5E
	movs r0, #0
	b _0809ED60
_0809ED5E:
	movs r0, #1
_0809ED60:
	pop {r1}
	bx r1

	thumb_func_start sub_809ED64
sub_809ED64: @ 0x0809ED64
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x14]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1a
	subs r0, #4
	cmp r0, #0x19
	bhi _0809EE12
	lsls r0, r0, #2
	ldr r1, _0809ED80 @ =_0809ED84
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809ED80: .4byte _0809ED84
_0809ED84: @ jump table
	.4byte _0809EDEC @ case 0
	.4byte _0809EE12 @ case 1
	.4byte _0809EE12 @ case 2
	.4byte _0809EE12 @ case 3
	.4byte _0809EE12 @ case 4
	.4byte _0809EDF2 @ case 5
	.4byte _0809EE12 @ case 6
	.4byte _0809EE12 @ case 7
	.4byte _0809EE12 @ case 8
	.4byte _0809EE12 @ case 9
	.4byte _0809EDF8 @ case 10
	.4byte _0809EE12 @ case 11
	.4byte _0809EE12 @ case 12
	.4byte _0809EE12 @ case 13
	.4byte _0809EE12 @ case 14
	.4byte _0809EDFE @ case 15
	.4byte _0809EE12 @ case 16
	.4byte _0809EE12 @ case 17
	.4byte _0809EE12 @ case 18
	.4byte _0809EE12 @ case 19
	.4byte _0809EE04 @ case 20
	.4byte _0809EE12 @ case 21
	.4byte _0809EE12 @ case 22
	.4byte _0809EE12 @ case 23
	.4byte _0809EE12 @ case 24
	.4byte _0809EE0A @ case 25
_0809EDEC:
	ldrb r0, [r2, #0x15]
	movs r1, #2
	b _0809EE0E
_0809EDF2:
	ldrb r0, [r2, #0x15]
	movs r1, #4
	b _0809EE0E
_0809EDF8:
	ldrb r0, [r2, #0x15]
	movs r1, #8
	b _0809EE0E
_0809EDFE:
	ldrb r0, [r2, #0x15]
	movs r1, #0x10
	b _0809EE0E
_0809EE04:
	ldrb r0, [r2, #0x15]
	movs r1, #0x20
	b _0809EE0E
_0809EE0A:
	ldrb r0, [r2, #0x15]
	movs r1, #0x40
_0809EE0E:
	orrs r0, r1
	strb r0, [r2, #0x15]
_0809EE12:
	ldrb r1, [r2, #0x14]
	movs r0, #0x40
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r2, #0x14]
	pop {r0}
	bx r0

	thumb_func_start sub_809EE20
sub_809EE20: @ 0x0809EE20
	push {r4, lr}
	movs r3, #0x3f
	ands r1, r3
	ldrb r4, [r0, #0x14]
	movs r3, #0x40
	rsbs r3, r3, #0
	ands r3, r4
	orrs r3, r1
	strb r3, [r0, #0x14]
	movs r1, #7
	ands r2, r1
	lsls r2, r2, #6
	ldrh r3, [r0, #0x14]
	ldr r1, _0809EE48 @ =0xFFFFFE3F
	ands r1, r3
	orrs r1, r2
	strh r1, [r0, #0x14]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0809EE48: .4byte 0xFFFFFE3F

	thumb_func_start sub_809EE4C
sub_809EE4C: @ 0x0809EE4C
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	ldrh r2, [r4, #0x14]
	movs r0, #0xe0
	lsls r0, r0, #1
	ands r0, r2
	cmp r0, #0
	beq _0809EE82
	lsls r0, r2, #0x17
	lsrs r0, r0, #0x1d
	subs r0, #1
	movs r1, #7
	ands r0, r1
	lsls r0, r0, #6
	ldr r1, _0809EE88 @ =0xFFFFFE3F
	ands r1, r2
	orrs r1, r0
	strh r1, [r4, #0x14]
_0809EE82:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0809EE88: .4byte 0xFFFFFE3F

	thumb_func_start sub_809EE8C
sub_809EE8C: @ 0x0809EE8C
	push {r4, lr}
	adds r4, r0, #0
	bl sub_809E2D4
	movs r1, #0
	movs r0, #0
	strh r0, [r4, #0x14]
	strb r1, [r4, #0x16]
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_809EEA4
sub_809EEA4: @ 0x0809EEA4
	push {lr}
	movs r2, #1
	lsls r2, r1
	ldrb r3, [r0, #0x16]
	cmp r1, r3
	bhs _0809EEBC
	ldrh r0, [r0, #0x14]
	ands r0, r2
	cmp r0, #0
	bne _0809EEBC
	movs r0, #1
	b _0809EEBE
_0809EEBC:
	movs r0, #0
_0809EEBE:
	pop {r1}
	bx r1
	.align 2, 0
_0809EEC4:
	.byte 0x01, 0x22, 0x8A, 0x40, 0x81, 0x8A, 0x11, 0x43, 0x81, 0x82, 0x70, 0x47

	thumb_func_start sub_809EED0
sub_809EED0: @ 0x0809EED0
	push {lr}
	adds r1, r0, #0
	ldrb r0, [r1, #0x16]
	cmp r0, #0xa
	bne _0809EEDE
	movs r0, #0
	b _0809EEE4
_0809EEDE:
	adds r0, #1
	strb r0, [r1, #0x16]
	movs r0, #1
_0809EEE4:
	pop {r1}
	bx r1

	thumb_func_start sub_809EEE8
sub_809EEE8: @ 0x0809EEE8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r4, _0809F2DC @ =0xFFFFFD68
	add sp, r4
	adds r7, r0, #0
	ldrb r1, [r7]
	movs r0, #0x40
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r7]
	ldrh r1, [r7]
	ldr r0, _0809F2E0 @ =0xFFFFE03F
	ands r0, r1
	strh r0, [r7]
	ldr r0, [r7]
	ldr r1, _0809F2E4 @ =0xFFE01FFF
	ands r0, r1
	str r0, [r7]
	ldrb r1, [r7, #2]
	movs r0, #0x21
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r7, #2]
	ldrh r1, [r7, #2]
	ldr r0, _0809F2E8 @ =0xFFFFFE3F
	ands r0, r1
	strh r0, [r7, #2]
	ldrb r1, [r7, #3]
	movs r0, #3
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #0x1d
	rsbs r1, r1, #0
	ands r0, r1
	strb r0, [r7, #3]
	adds r0, r7, #4
	bl sub_809E9B8
	adds r1, r7, #0
	adds r1, #0x2c
	movs r0, #0
	strb r0, [r1]
	adds r2, r7, #0
	adds r2, #0x2d
	ldrb r1, [r2]
	subs r0, #4
	ands r0, r1
	movs r1, #0x7d
	rsbs r1, r1, #0
	ands r0, r1
	strb r0, [r2]
	adds r0, r7, #0
	adds r0, #0x30
	movs r1, #0
	bl sub_80A17A0
	adds r0, r7, #0
	adds r0, #0x38
	movs r1, #1
	bl sub_80A17A0
	adds r0, r7, #0
	adds r0, #0x40
	movs r1, #2
	bl sub_80A17A0
	adds r0, r7, #0
	adds r0, #0x48
	movs r1, #0
	bl sub_80A1890
	adds r0, r7, #0
	adds r0, #0x50
	movs r1, #1
	bl sub_80A1890
	adds r0, r7, #0
	adds r0, #0x58
	movs r1, #2
	bl sub_80A1890
	adds r0, r7, #0
	adds r0, #0x60
	bl sub_80A198C
	adds r0, r7, #0
	adds r0, #0x68
	bl sub_80A19EC
	movs r0, #0x70
	adds r0, r0, r7
	mov r8, r0
	add r1, sp, #8
	ldrh r2, [r1]
	ldr r5, _0809F2EC @ =0xFFFFFC00
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	movs r0, #0
	mov sl, r0
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	mov r4, sp
	mov r0, sp
	movs r2, #6
	bl sub_80D3994
	mov r1, sl
	strb r1, [r4, #6]
	mov r0, sp
	mov r1, sp
	movs r2, #8
	bl sub_80D3994
	mov r0, r8
	mov r1, sp
	bl sub_809E2D4
	movs r2, #0x84
	adds r2, r2, r7
	mov r8, r2
	add r1, sp, #0x18
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x10
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r0, sl
	strb r0, [r4, #6]
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, r8
	adds r1, r4, #0
	bl sub_809E2D4
	movs r1, #0x98
	adds r1, r1, r7
	mov r8, r1
	add r1, sp, #0x28
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x20
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r0, sl
	strb r0, [r4, #6]
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, r8
	adds r1, r4, #0
	bl sub_809E458
	movs r1, #0xb0
	adds r1, r1, r7
	mov r8, r1
	add r1, sp, #0x38
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x30
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r0, sl
	strb r0, [r4, #6]
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, r8
	adds r1, r4, #0
	bl sub_809E2D4
	movs r1, #0xc4
	adds r1, r1, r7
	mov r8, r1
	add r1, sp, #0x48
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x40
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r0, sl
	strb r0, [r4, #6]
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, r8
	adds r1, r4, #0
	bl sub_809E2D4
	movs r1, #0xd8
	adds r1, r1, r7
	mov r8, r1
	add r1, sp, #0x58
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x50
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r0, sl
	strb r0, [r4, #6]
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, r8
	adds r1, r4, #0
	bl sub_809EC90
	movs r1, #0xf0
	adds r1, r1, r7
	mov r8, r1
	add r1, sp, #0x68
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x60
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r0, sl
	strb r0, [r4, #6]
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, r8
	adds r1, r4, #0
	bl sub_809E2D4
	movs r1, #0x82
	lsls r1, r1, #1
	adds r1, r1, r7
	mov r8, r1
	add r1, sp, #0x78
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x70
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r0, sl
	strb r0, [r4, #6]
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, r8
	adds r1, r4, #0
	bl sub_809E2D4
	movs r1, #0x8c
	lsls r1, r1, #1
	adds r1, r1, r7
	mov r8, r1
	add r1, sp, #0x88
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x80
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r0, sl
	strb r0, [r4, #6]
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, r8
	adds r1, r4, #0
	bl sub_809E2D4
	movs r1, #0x96
	lsls r1, r1, #1
	adds r1, r1, r7
	mov r8, r1
	add r1, sp, #0x98
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	b _0809F2F0
	.align 2, 0
_0809F2DC: .4byte 0xFFFFFD68
_0809F2E0: .4byte 0xFFFFE03F
_0809F2E4: .4byte 0xFFE01FFF
_0809F2E8: .4byte 0xFFFFFE3F
_0809F2EC: .4byte 0xFFFFFC00
_0809F2F0:
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x90
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r0, sl
	strb r0, [r4, #6]
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, r8
	adds r1, r4, #0
	bl sub_809E2D4
	movs r1, #0xa0
	lsls r1, r1, #1
	adds r1, r1, r7
	mov r8, r1
	add r1, sp, #0xa8
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0xa0
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r0, sl
	strb r0, [r4, #6]
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, r8
	adds r1, r4, #0
	bl sub_809E2D4
	movs r1, #0xaa
	lsls r1, r1, #1
	adds r1, r1, r7
	mov r8, r1
	add r1, sp, #0xb8
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0xb0
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r0, sl
	strb r0, [r4, #6]
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, r8
	adds r1, r4, #0
	bl sub_809E458
	movs r1, #0xb6
	lsls r1, r1, #1
	adds r1, r1, r7
	mov r8, r1
	add r1, sp, #0xc8
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0xc0
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r0, sl
	strb r0, [r4, #6]
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, r8
	adds r1, r4, #0
	bl sub_809E2D4
	movs r1, #0xc0
	lsls r1, r1, #1
	adds r1, r1, r7
	mov r8, r1
	add r1, sp, #0xd8
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0xd0
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r0, sl
	strb r0, [r4, #6]
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, r8
	adds r1, r4, #0
	bl sub_809E2D4
	movs r1, #0xca
	lsls r1, r1, #1
	adds r1, r1, r7
	mov r8, r1
	add r1, sp, #0xe8
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0xe0
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r0, sl
	strb r0, [r4, #6]
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, r8
	adds r1, r4, #0
	bl sub_809E2D4
	movs r1, #0xd4
	lsls r1, r1, #1
	adds r1, r1, r7
	mov r8, r1
	add r1, sp, #0xf8
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0xf0
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r0, sl
	strb r0, [r4, #6]
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, r8
	adds r1, r4, #0
	bl sub_809E2D4
	movs r1, #0xde
	lsls r1, r1, #1
	adds r1, r1, r7
	mov r8, r1
	add r1, sp, #0x108
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x100
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r0, sl
	strb r0, [r4, #6]
	add r4, sp, #0x100
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, r8
	adds r1, r4, #0
	bl sub_809E2D4
	movs r1, #0xe8
	lsls r1, r1, #1
	adds r1, r1, r7
	mov r8, r1
	add r1, sp, #0x118
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x110
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r0, sl
	strb r0, [r4, #6]
	add r4, sp, #0x110
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, r8
	adds r1, r4, #0
	bl sub_809E2D4
	movs r1, #0xf2
	lsls r1, r1, #1
	adds r1, r1, r7
	mov r8, r1
	add r1, sp, #0x128
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x120
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r0, sl
	strb r0, [r4, #6]
	add r4, sp, #0x120
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, r8
	adds r1, r4, #0
	bl sub_809E458
	movs r1, #0xfe
	lsls r1, r1, #1
	adds r1, r1, r7
	mov r8, r1
	add r1, sp, #0x138
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x130
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r0, sl
	strb r0, [r4, #6]
	add r4, sp, #0x130
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, r8
	adds r1, r4, #0
	bl sub_809E2D4
	movs r1, #0x84
	lsls r1, r1, #2
	adds r1, r1, r7
	mov r8, r1
	add r1, sp, #0x148
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x140
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r0, sl
	strb r0, [r4, #6]
	add r4, sp, #0x140
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, r8
	adds r1, r4, #0
	bl sub_809E458
	movs r1, #0x8a
	lsls r1, r1, #2
	adds r1, r1, r7
	mov r8, r1
	add r1, sp, #0x158
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x150
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r0, sl
	strb r0, [r4, #6]
	add r4, sp, #0x150
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, r8
	adds r1, r4, #0
	bl sub_809E2D4
	movs r1, #0x8f
	lsls r1, r1, #2
	adds r1, r1, r7
	mov r8, r1
	add r1, sp, #0x168
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x160
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r0, sl
	strb r0, [r4, #6]
	add r4, sp, #0x160
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, r8
	adds r1, r4, #0
	bl sub_809E2D4
	movs r1, #0x94
	lsls r1, r1, #2
	adds r1, r1, r7
	mov r8, r1
	add r1, sp, #0x178
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x170
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r0, sl
	strb r0, [r4, #6]
	add r4, sp, #0x170
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, r8
	adds r1, r4, #0
	bl sub_809E2D4
	movs r1, #0x99
	lsls r1, r1, #2
	adds r1, r1, r7
	mov r8, r1
	add r1, sp, #0x188
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x180
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r0, sl
	strb r0, [r4, #6]
	add r4, sp, #0x180
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, r8
	adds r1, r4, #0
	bl sub_809E458
	movs r1, #0x9f
	lsls r1, r1, #2
	adds r1, r1, r7
	mov sb, r1
	add r1, sp, #0x198
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	mov r8, r0
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x190
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r1, sl
	strb r1, [r4, #6]
	add r4, sp, #0x190
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, sb
	adds r1, r4, #0
	bl sub_809E2D4
	movs r2, #0xa4
	lsls r2, r2, #2
	adds r6, r7, r2
	add r1, sp, #0x1a8
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r0, [r1, #3]
	movs r2, #3
	ands r2, r0
	strb r2, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x1a0
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r1, sl
	strb r1, [r4, #6]
	add r4, sp, #0x1a0
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_809EB4C
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r2, r2, r7
	mov sl, r2
	add r1, sp, #0x1b8
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	mov r0, r8
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	mov r0, r8
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x1b0
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	movs r0, #0
	strb r0, [r4, #6]
	add r4, sp, #0x1b0
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, sl
	adds r1, r4, #0
	bl sub_809E2D4
	movs r1, #0xaf
	lsls r1, r1, #2
	adds r1, r1, r7
	mov sl, r1
	add r1, sp, #0x1c8
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	mov r0, r8
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	mov r0, r8
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x1c0
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	movs r0, #0
	strb r0, [r4, #6]
	add r4, sp, #0x1c0
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, sl
	adds r1, r4, #0
	bl sub_809E2D4
	movs r1, #0xb4
	lsls r1, r1, #2
	adds r1, r1, r7
	mov sl, r1
	add r1, sp, #0x1d8
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	mov r0, r8
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	mov r0, r8
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x1d0
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	movs r0, #0
	strb r0, [r4, #6]
	add r4, sp, #0x1d0
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, sl
	adds r1, r4, #0
	bl sub_809E2D4
	movs r1, #0xb9
	lsls r1, r1, #2
	adds r1, r1, r7
	mov sl, r1
	add r1, sp, #0x1e8
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	mov r0, r8
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	mov r0, r8
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x1e0
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	movs r0, #0
	strb r0, [r4, #6]
	add r4, sp, #0x1e0
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, sl
	adds r1, r4, #0
	bl sub_809E458
	movs r1, #0xbf
	lsls r1, r1, #2
	adds r1, r1, r7
	mov sl, r1
	add r1, sp, #0x1f8
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	mov r0, r8
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	mov r0, r8
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x1f0
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	movs r0, #0
	strb r0, [r4, #6]
	add r4, sp, #0x1f0
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, sl
	adds r1, r4, #0
	bl sub_809E2D4
	movs r1, #0xc4
	lsls r1, r1, #2
	adds r1, r1, r7
	mov sl, r1
	add r1, sp, #0x208
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	movs r2, #0x8d
	lsls r2, r2, #2
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	mov r0, r8
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r0, [r1, #3]
	mov r2, r8
	ands r2, r0
	strb r2, [r1, #3]
	ldrh r0, [r1, #4]
	ands r5, r0
	strh r5, [r1, #4]
	add r4, sp, #0x200
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	movs r0, #0
	strb r0, [r4, #6]
	add r4, sp, #0x200
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, sl
	adds r1, r4, #0
	bl sub_809EE8C
	movs r1, #0xca
	lsls r1, r1, #2
	adds r1, r1, r7
	mov sl, r1
	add r1, sp, #0x218
	movs r2, #0x8d
	lsls r2, r2, #2
	mov r8, r2
	ldrh r2, [r1]
	ldr r5, _0809FE30 @ =0xFFFFFC00
	adds r0, r5, #0
	ands r0, r2
	mov r2, r8
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x210
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	movs r0, #0
	strb r0, [r4, #6]
	add r4, sp, #0x210
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, sl
	adds r1, r4, #0
	bl sub_809E2D4
	movs r1, #0xcf
	lsls r1, r1, #2
	adds r1, r1, r7
	mov sl, r1
	add r1, sp, #0x228
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	mov r2, r8
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x220
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	movs r0, #0
	strb r0, [r4, #6]
	add r4, sp, #0x220
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, sl
	adds r1, r4, #0
	bl sub_809E628
	movs r1, #0xd8
	lsls r1, r1, #2
	adds r1, r1, r7
	mov sl, r1
	add r1, sp, #0x238
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	mov r2, r8
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x230
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	movs r0, #0
	strb r0, [r4, #6]
	add r4, sp, #0x230
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, sl
	adds r1, r4, #0
	bl sub_809E628
	movs r1, #0xe1
	lsls r1, r1, #2
	adds r1, r1, r7
	mov sl, r1
	add r1, sp, #0x248
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	mov r2, r8
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x240
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	movs r0, #0
	strb r0, [r4, #6]
	add r4, sp, #0x240
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, sl
	adds r1, r4, #0
	bl sub_809E628
	movs r1, #0xea
	lsls r1, r1, #2
	adds r1, r1, r7
	mov sl, r1
	add r1, sp, #0x258
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	mov r2, r8
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x250
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	movs r0, #0
	strb r0, [r4, #6]
	add r4, sp, #0x250
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, sl
	adds r1, r4, #0
	bl sub_809E628
	movs r1, #0xf3
	lsls r1, r1, #2
	adds r1, r1, r7
	mov sl, r1
	add r1, sp, #0x268
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	mov r2, r8
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x260
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	movs r0, #0
	strb r0, [r4, #6]
	add r4, sp, #0x260
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, sl
	adds r1, r4, #0
	bl sub_809E628
	movs r1, #0xfc
	lsls r1, r1, #2
	adds r1, r1, r7
	mov sl, r1
	add r1, sp, #0x278
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	mov r2, r8
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r2, [r1, #3]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #3]
	ldrh r2, [r1, #4]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #4]
	add r4, sp, #0x270
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	movs r0, #0
	strb r0, [r4, #6]
	add r4, sp, #0x270
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, sl
	adds r1, r4, #0
	bl sub_809E628
	ldr r1, _0809FE34 @ =0x00000414
	adds r1, r1, r7
	mov sl, r1
	add r1, sp, #0x288
	ldrh r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	mov r2, r8
	orrs r0, r2
	strh r0, [r1]
	ldrb r2, [r1, #1]
	movs r0, #3
	ands r0, r2
	strb r0, [r1, #1]
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	strh r0, [r1, #2]
	ldrb r0, [r1, #3]
	movs r2, #3
	ands r2, r0
	strb r2, [r1, #3]
	ldrh r0, [r1, #4]
	ands r5, r0
	strh r5, [r1, #4]
	add r4, sp, #0x280
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	movs r1, #0
	strb r1, [r4, #6]
	add r4, sp, #0x280
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_80D3994
	mov r0, sl
	adds r1, r4, #0
	bl sub_809E628
	movs r0, #0x87
	lsls r0, r0, #3
	adds r2, r7, r0
	movs r3, #6
	movs r5, #0x10
	rsbs r5, r5, #0
	movs r4, #1
	rsbs r4, r4, #0
_0809FDFA:
	ldrb r1, [r2]
	adds r0, r5, #0
	ands r0, r1
	strb r0, [r2]
	adds r2, #8
	subs r3, #1
	cmp r3, r4
	bne _0809FDFA
	movs r1, #0x8e
	lsls r1, r1, #3
	adds r0, r7, r1
	movs r1, #0
	str r1, [r0]
	ldr r2, _0809FE38 @ =0x00000474
	adds r0, r7, r2
	strb r1, [r0]
	adds r0, r7, #0
	movs r3, #0xa6
	lsls r3, r3, #2
	add sp, r3
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0809FE30: .4byte 0xFFFFFC00
_0809FE34: .4byte 0x00000414
_0809FE38: .4byte 0x00000474

	thumb_func_start sub_809FE3C
sub_809FE3C: @ 0x0809FE3C
	push {lr}
	movs r2, #0
	cmp r1, #0x2a
	bhi _0809FE46
	movs r2, #1
_0809FE46:
	cmp r2, #0
	bne _0809FE54
	ldr r0, _0809FE50 @ =gUnknown_08104108
	b _0809FE6C
	.align 2, 0
_0809FE50: .4byte gUnknown_08104108
_0809FE54:
	cmp r1, #0
	beq _0809FE64
	cmp r1, #0x23
	bne _0809FE64
	adds r0, #4
	bl sub_809EACC
	b _0809FE6C
_0809FE64:
	ldr r0, _0809FE70 @ =gUnknown_08104258
	lsls r1, r1, #3
	adds r1, r1, r0
	ldr r0, [r1]
_0809FE6C:
	pop {r1}
	bx r1
	.align 2, 0
_0809FE70: .4byte gUnknown_08104258

	thumb_func_start sub_809FE74
sub_809FE74: @ 0x0809FE74
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r4, r0, #0
	adds r3, r1, #0
	mov r8, r2
	movs r0, #0
	cmp r3, #0x2a
	bhi _0809FE8E
	movs r0, #1
_0809FE8E:
	cmp r0, #0
	bne _0809FEA4
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r6
	movs r2, #0x3c
	movs r1, #0x7d
	rsbs r1, r1, #0
	ands r0, r1
	orrs r0, r2
	b _080A001C
_0809FEA4:
	cmp r3, #0x23
	bls _0809FEAA
	b _0809FFE4
_0809FEAA:
	lsls r0, r3, #2
	ldr r1, _0809FEB4 @ =_0809FEB8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809FEB4: .4byte _0809FEB8
_0809FEB8: @ jump table
	.4byte _0809FFE4 @ case 0
	.4byte _0809FFE4 @ case 1
	.4byte _0809FFE4 @ case 2
	.4byte _0809FF48 @ case 3
	.4byte _0809FFE4 @ case 4
	.4byte _0809FFE4 @ case 5
	.4byte _0809FFE4 @ case 6
	.4byte _0809FFE4 @ case 7
	.4byte _0809FFE4 @ case 8
	.4byte _0809FFE4 @ case 9
	.4byte _0809FFE4 @ case 10
	.4byte _0809FFE4 @ case 11
	.4byte _0809FF48 @ case 12
	.4byte _0809FFE4 @ case 13
	.4byte _0809FFE4 @ case 14
	.4byte _0809FFE4 @ case 15
	.4byte _0809FFE4 @ case 16
	.4byte _0809FFE4 @ case 17
	.4byte _0809FFE4 @ case 18
	.4byte _0809FF48 @ case 19
	.4byte _0809FFE4 @ case 20
	.4byte _0809FF48 @ case 21
	.4byte _0809FFE4 @ case 22
	.4byte _0809FFE4 @ case 23
	.4byte _0809FFE4 @ case 24
	.4byte _0809FF48 @ case 25
	.4byte _0809FFE4 @ case 26
	.4byte _0809FFE4 @ case 27
	.4byte _0809FFE4 @ case 28
	.4byte _0809FFE4 @ case 29
	.4byte _0809FFE4 @ case 30
	.4byte _0809FF48 @ case 31
	.4byte _0809FFE4 @ case 32
	.4byte _0809FFE4 @ case 33
	.4byte _0809FFE4 @ case 34
	.4byte _0809FFDC @ case 35
_0809FF48:
	lsls r0, r3, #3
	ldr r1, _0809FFD8 @ =gUnknown_08104258
	adds r0, r0, r1
	adds r6, r0, #0
	ldrb r0, [r6, #4]
	lsls r1, r0, #0x1e
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1b
	movs r7, #3
	lsrs r1, r1, #0x1e
	movs r4, #4
	rsbs r4, r4, #0
	ands r4, r5
	orrs r4, r1
	subs r0, #1
	cmp r0, #0x1d
	bls _0809FF70
	movs r1, #0x1e
	bl sub_80D0F4E
_0809FF70:
	movs r1, #0x1f
	mov sl, r1
	mov r2, sl
	ands r0, r2
	lsls r0, r0, #2
	movs r3, #0x7d
	rsbs r3, r3, #0
	mov sb, r3
	ands r3, r4
	orrs r3, r0
	adds r5, r3, #0
	mov r0, r8
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	lsls r0, r3, #0x1e
	cmp r1, r0
	bne _0809FFD4
	lsls r1, r2, #0x19
	lsrs r1, r1, #0x1b
	adds r1, #1
	lsls r0, r3, #0x19
	lsrs r0, r0, #0x1b
	adds r0, #1
	cmp r1, r0
	bne _0809FFD4
	ldrb r1, [r6, #5]
	lsls r0, r1, #0x1e
	lsrs r0, r0, #0x1e
	lsls r1, r1, #0x19
	lsrs r1, r1, #0x1b
	ands r0, r7
	movs r4, #4
	rsbs r4, r4, #0
	mov r2, sp
	ldrb r2, [r2]
	ands r4, r2
	orrs r4, r0
	subs r0, r1, #1
	cmp r0, #0x1d
	bls _0809FFC6
	movs r1, #0x1e
	bl sub_80D0F4E
_0809FFC6:
	mov r3, sl
	ands r0, r3
	lsls r0, r0, #2
	mov r1, sb
	ands r4, r1
	adds r5, r4, #0
	orrs r5, r0
_0809FFD4:
	adds r0, r5, #0
	b _080A001C
	.align 2, 0
_0809FFD8: .4byte gUnknown_08104258
_0809FFDC:
	adds r0, r4, #4
	bl sub_809EAD0
	b _080A001C
_0809FFE4:
	lsls r0, r3, #3
	ldr r1, _080A002C @ =gUnknown_08104258
	adds r0, r0, r1
	ldrb r0, [r0, #4]
	lsls r1, r0, #0x1e
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1b
	lsrs r1, r1, #0x1e
	movs r4, #4
	rsbs r4, r4, #0
	ands r4, r7
	orrs r4, r1
	subs r1, r0, #1
	cmp r1, #0x1d
	bls _080A000C
	adds r0, r1, #0
	movs r1, #0x1e
	bl sub_80D0F4E
	adds r1, r0, #0
_080A000C:
	movs r0, #0x1f
	ands r1, r0
	lsls r1, r1, #2
	movs r0, #0x7d
	rsbs r0, r0, #0
	ands r4, r0
	orrs r4, r1
	adds r0, r4, #0
_080A001C:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080A002C: .4byte gUnknown_08104258

	thumb_func_start sub_80A0030
sub_80A0030: @ 0x080A0030
	push {lr}
	adds r2, r0, #0
	subs r0, r1, #1
	cmp r0, #0x29
	bhi _080A00F0
	lsls r0, r0, #2
	ldr r1, _080A0044 @ =_080A0048
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A0044: .4byte _080A0048
_080A0048: @ jump table
	.4byte _080A00FC @ case 0
	.4byte _080A0102 @ case 1
	.4byte _080A0108 @ case 2
	.4byte _080A010E @ case 3
	.4byte _080A0114 @ case 4
	.4byte _080A011A @ case 5
	.4byte _080A0120 @ case 6
	.4byte _080A0126 @ case 7
	.4byte _080A012C @ case 8
	.4byte _080A0132 @ case 9
	.4byte _080A0138 @ case 10
	.4byte _080A013E @ case 11
	.4byte _080A0144 @ case 12
	.4byte _080A014A @ case 13
	.4byte _080A0150 @ case 14
	.4byte _080A0156 @ case 15
	.4byte _080A015C @ case 16
	.4byte _080A0162 @ case 17
	.4byte _080A0168 @ case 18
	.4byte _080A016E @ case 19
	.4byte _080A0174 @ case 20
	.4byte _080A017A @ case 21
	.4byte _080A0180 @ case 22
	.4byte _080A0186 @ case 23
	.4byte _080A018C @ case 24
	.4byte _080A0192 @ case 25
	.4byte _080A0198 @ case 26
	.4byte _080A019E @ case 27
	.4byte _080A01A4 @ case 28
	.4byte _080A01AA @ case 29
	.4byte _080A01B0 @ case 30
	.4byte _080A01B6 @ case 31
	.4byte _080A01BC @ case 32
	.4byte _080A01C2 @ case 33
	.4byte _080A00F4 @ case 34
	.4byte _080A01C8 @ case 35
	.4byte _080A01CE @ case 36
	.4byte _080A01D4 @ case 37
	.4byte _080A01DA @ case 38
	.4byte _080A01E0 @ case 39
	.4byte _080A01E6 @ case 40
	.4byte _080A01EC @ case 41
_080A00F0:
	movs r0, #0
	b _080A01F0
_080A00F4:
	adds r0, r2, #0
	bl sub_80A0384
	b _080A01F0
_080A00FC:
	adds r0, r2, #0
	adds r0, #0x70
	b _080A01F0
_080A0102:
	adds r0, r2, #0
	adds r0, #0x84
	b _080A01F0
_080A0108:
	adds r0, r2, #0
	adds r0, #0x98
	b _080A01F0
_080A010E:
	adds r0, r2, #0
	adds r0, #0xb0
	b _080A01F0
_080A0114:
	adds r0, r2, #0
	adds r0, #0xc4
	b _080A01F0
_080A011A:
	adds r0, r2, #0
	adds r0, #0xd8
	b _080A01F0
_080A0120:
	adds r0, r2, #0
	adds r0, #0xf0
	b _080A01F0
_080A0126:
	movs r1, #0x82
	lsls r1, r1, #1
	b _080A01EE
_080A012C:
	movs r1, #0x8c
	lsls r1, r1, #1
	b _080A01EE
_080A0132:
	movs r1, #0x96
	lsls r1, r1, #1
	b _080A01EE
_080A0138:
	movs r1, #0xa0
	lsls r1, r1, #1
	b _080A01EE
_080A013E:
	movs r1, #0xaa
	lsls r1, r1, #1
	b _080A01EE
_080A0144:
	movs r1, #0xb6
	lsls r1, r1, #1
	b _080A01EE
_080A014A:
	movs r1, #0xc0
	lsls r1, r1, #1
	b _080A01EE
_080A0150:
	movs r1, #0xca
	lsls r1, r1, #1
	b _080A01EE
_080A0156:
	movs r1, #0xd4
	lsls r1, r1, #1
	b _080A01EE
_080A015C:
	movs r1, #0xde
	lsls r1, r1, #1
	b _080A01EE
_080A0162:
	movs r1, #0xe8
	lsls r1, r1, #1
	b _080A01EE
_080A0168:
	movs r1, #0xf2
	lsls r1, r1, #1
	b _080A01EE
_080A016E:
	movs r1, #0xfe
	lsls r1, r1, #1
	b _080A01EE
_080A0174:
	movs r1, #0x84
	lsls r1, r1, #2
	b _080A01EE
_080A017A:
	movs r1, #0x8a
	lsls r1, r1, #2
	b _080A01EE
_080A0180:
	movs r1, #0x8f
	lsls r1, r1, #2
	b _080A01EE
_080A0186:
	movs r1, #0x94
	lsls r1, r1, #2
	b _080A01EE
_080A018C:
	movs r1, #0x99
	lsls r1, r1, #2
	b _080A01EE
_080A0192:
	movs r1, #0x9f
	lsls r1, r1, #2
	b _080A01EE
_080A0198:
	movs r1, #0xa4
	lsls r1, r1, #2
	b _080A01EE
_080A019E:
	movs r1, #0xaa
	lsls r1, r1, #2
	b _080A01EE
_080A01A4:
	movs r1, #0xaf
	lsls r1, r1, #2
	b _080A01EE
_080A01AA:
	movs r1, #0xb4
	lsls r1, r1, #2
	b _080A01EE
_080A01B0:
	movs r1, #0xb9
	lsls r1, r1, #2
	b _080A01EE
_080A01B6:
	movs r1, #0xbf
	lsls r1, r1, #2
	b _080A01EE
_080A01BC:
	movs r1, #0xc4
	lsls r1, r1, #2
	b _080A01EE
_080A01C2:
	movs r1, #0xca
	lsls r1, r1, #2
	b _080A01EE
_080A01C8:
	movs r1, #0xcf
	lsls r1, r1, #2
	b _080A01EE
_080A01CE:
	movs r1, #0xd8
	lsls r1, r1, #2
	b _080A01EE
_080A01D4:
	movs r1, #0xe1
	lsls r1, r1, #2
	b _080A01EE
_080A01DA:
	movs r1, #0xea
	lsls r1, r1, #2
	b _080A01EE
_080A01E0:
	movs r1, #0xf3
	lsls r1, r1, #2
	b _080A01EE
_080A01E6:
	movs r1, #0xfc
	lsls r1, r1, #2
	b _080A01EE
_080A01EC:
	ldr r1, _080A01F4 @ =0x00000414
_080A01EE:
	adds r0, r2, r1
_080A01F0:
	pop {r1}
	bx r1
	.align 2, 0
_080A01F4: .4byte 0x00000414

	thumb_func_start sub_80A01F8
sub_80A01F8: @ 0x080A01F8
	push {lr}
	adds r2, r0, #0
	subs r0, r1, #3
	cmp r0, #0x1c
	bhi _080A0284
	lsls r0, r0, #2
	ldr r1, _080A020C @ =_080A0210
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A020C: .4byte _080A0210
_080A0210: @ jump table
	.4byte _080A0288 @ case 0
	.4byte _080A0284 @ case 1
	.4byte _080A0284 @ case 2
	.4byte _080A0284 @ case 3
	.4byte _080A0284 @ case 4
	.4byte _080A0284 @ case 5
	.4byte _080A0284 @ case 6
	.4byte _080A0284 @ case 7
	.4byte _080A0284 @ case 8
	.4byte _080A028E @ case 9
	.4byte _080A0284 @ case 10
	.4byte _080A0284 @ case 11
	.4byte _080A0284 @ case 12
	.4byte _080A0284 @ case 13
	.4byte _080A0284 @ case 14
	.4byte _080A0284 @ case 15
	.4byte _080A0294 @ case 16
	.4byte _080A0284 @ case 17
	.4byte _080A029A @ case 18
	.4byte _080A0284 @ case 19
	.4byte _080A0284 @ case 20
	.4byte _080A0284 @ case 21
	.4byte _080A02A0 @ case 22
	.4byte _080A0284 @ case 23
	.4byte _080A0284 @ case 24
	.4byte _080A0284 @ case 25
	.4byte _080A0284 @ case 26
	.4byte _080A0284 @ case 27
	.4byte _080A02A6 @ case 28
_080A0284:
	movs r0, #0
	b _080A02AC
_080A0288:
	adds r0, r2, #0
	adds r0, #0x98
	b _080A02AC
_080A028E:
	movs r1, #0xaa
	lsls r1, r1, #1
	b _080A02AA
_080A0294:
	movs r1, #0xf2
	lsls r1, r1, #1
	b _080A02AA
_080A029A:
	movs r1, #0x84
	lsls r1, r1, #2
	b _080A02AA
_080A02A0:
	movs r1, #0x99
	lsls r1, r1, #2
	b _080A02AA
_080A02A6:
	movs r1, #0xb9
	lsls r1, r1, #2
_080A02AA:
	adds r0, r2, r1
_080A02AC:
	pop {r1}
	bx r1
_080A02B0:
	.byte 0x00, 0xB5, 0x02, 0x1C, 0x08, 0x1C, 0x24, 0x38, 0x06, 0x28, 0x15, 0xD8, 0x80, 0x00, 0x02, 0x49
	.byte 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00, 0xCC, 0x02, 0x0A, 0x08, 0xEC, 0x02, 0x0A, 0x08
	.byte 0xF2, 0x02, 0x0A, 0x08, 0xF8, 0x02, 0x0A, 0x08, 0xFE, 0x02, 0x0A, 0x08, 0x04, 0x03, 0x0A, 0x08
	.byte 0x0A, 0x03, 0x0A, 0x08, 0x10, 0x03, 0x0A, 0x08, 0x00, 0x20, 0x13, 0xE0, 0xCF, 0x21, 0x89, 0x00
	.byte 0x0F, 0xE0, 0xD8, 0x21, 0x89, 0x00, 0x0C, 0xE0, 0xE1, 0x21, 0x89, 0x00, 0x09, 0xE0, 0xEA, 0x21
	.byte 0x89, 0x00, 0x06, 0xE0, 0xF3, 0x21, 0x89, 0x00, 0x03, 0xE0, 0xFC, 0x21, 0x89, 0x00, 0x00, 0xE0
	.byte 0x01, 0x49, 0x50, 0x18, 0x02, 0xBC, 0x08, 0x47, 0x14, 0x04, 0x00, 0x00

	thumb_func_start sub_80A031C
sub_80A031C: @ 0x080A031C
	push {lr}
	adds r2, r0, #0
	cmp r1, #6
	bhi _080A0350
	lsls r0, r1, #2
	ldr r1, _080A0330 @ =_080A0334
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A0330: .4byte _080A0334
_080A0334: @ jump table
	.4byte _080A0354 @ case 0
	.4byte _080A035A @ case 1
	.4byte _080A0360 @ case 2
	.4byte _080A0366 @ case 3
	.4byte _080A036C @ case 4
	.4byte _080A0372 @ case 5
	.4byte _080A0378 @ case 6
_080A0350:
	movs r0, #0
	b _080A037C
_080A0354:
	movs r1, #0xcf
	lsls r1, r1, #2
	b _080A037A
_080A035A:
	movs r1, #0xd8
	lsls r1, r1, #2
	b _080A037A
_080A0360:
	movs r1, #0xe1
	lsls r1, r1, #2
	b _080A037A
_080A0366:
	movs r1, #0xea
	lsls r1, r1, #2
	b _080A037A
_080A036C:
	movs r1, #0xf3
	lsls r1, r1, #2
	b _080A037A
_080A0372:
	movs r1, #0xfc
	lsls r1, r1, #2
	b _080A037A
_080A0378:
	ldr r1, _080A0380 @ =0x00000414
_080A037A:
	adds r0, r2, r1
_080A037C:
	pop {r1}
	bx r1
	.align 2, 0
_080A0380: .4byte 0x00000414

	thumb_func_start sub_80A0384
sub_80A0384: @ 0x080A0384
	push {lr}
	adds r1, r0, #0
	ldrb r0, [r1, #3]
	lsls r0, r0, #0x1e
	movs r2, #0
	cmp r0, #0
	bge _080A0394
	adds r2, r1, #4
_080A0394:
	adds r0, r2, #0
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80A039C
sub_80A039C: @ 0x080A039C
	ldrb r0, [r0, #3]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1d
	bx lr

	thumb_func_start sub_80A03A4
sub_80A03A4: @ 0x080A03A4
	movs r2, #7
	ands r1, r2
	lsls r1, r1, #2
	ldrb r3, [r0, #3]
	movs r2, #0x1d
	rsbs r2, r2, #0
	ands r2, r3
	orrs r2, r1
	strb r2, [r0, #3]
	bx lr

	thumb_func_start sub_80A03B8
sub_80A03B8: @ 0x080A03B8
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r6, r0, #0
	adds r0, r1, #0
	adds r1, r2, #0
	bl sub_80A0030
	adds r1, r0, #0
	cmp r1, #0
	beq _080A03D4
	adds r0, r6, #0
	bl sub_809E32C
	b _080A040E
_080A03D4:
	mov r1, sp
	movs r4, #2
	ldrh r2, [r1]
	ldr r3, _080A0418 @ =0xFFFFFC00
	adds r0, r3, #0
	ands r0, r2
	orrs r0, r4
	strh r0, [r1]
	movs r5, #0
	ldrb r4, [r1, #1]
	movs r2, #3
	adds r0, r2, #0
	ands r0, r4
	strb r0, [r1, #1]
	ldrh r4, [r1, #2]
	adds r0, r3, #0
	ands r0, r4
	strh r0, [r1, #2]
	ldrb r0, [r1, #3]
	ands r2, r0
	strb r2, [r1, #3]
	ldrh r0, [r1, #4]
	ands r3, r0
	strh r3, [r1, #4]
	adds r0, r6, #0
	movs r2, #6
	bl sub_80D3994
	strb r5, [r6, #6]
_080A040E:
	adds r0, r6, #0
	add sp, #8
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A0418: .4byte 0xFFFFFC00

	thumb_func_start sub_80A041C
sub_80A041C: @ 0x080A041C
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x98
	bl sub_809E49C
	cmp r0, #4
	bls _080A042E
	movs r0, #3
	b _080A048A
_080A042E:
	movs r1, #0xaa
	lsls r1, r1, #1
	adds r0, r4, r1
	bl sub_809E49C
	cmp r0, #4
	bls _080A0440
	movs r0, #0xc
	b _080A048A
_080A0440:
	movs r1, #0xf2
	lsls r1, r1, #1
	adds r0, r4, r1
	bl sub_809E49C
	cmp r0, #4
	bls _080A0452
	movs r0, #0x13
	b _080A048A
_080A0452:
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r4, r1
	bl sub_809E49C
	cmp r0, #4
	bls _080A0464
	movs r0, #0x15
	b _080A048A
_080A0464:
	movs r1, #0x99
	lsls r1, r1, #2
	adds r0, r4, r1
	bl sub_809E49C
	cmp r0, #4
	bls _080A0476
	movs r0, #0x19
	b _080A048A
_080A0476:
	movs r1, #0xb9
	lsls r1, r1, #2
	adds r0, r4, r1
	bl sub_809E49C
	cmp r0, #4
	bhi _080A0488
	movs r0, #0
	b _080A048A
_080A0488:
	movs r0, #0x1f
_080A048A:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_80A0490
sub_80A0490: @ 0x080A0490
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x98
	bl sub_809E49C
	cmp r0, #5
	bls _080A04A2
	movs r0, #3
	b _080A04FE
_080A04A2:
	movs r1, #0xaa
	lsls r1, r1, #1
	adds r0, r4, r1
	bl sub_809E49C
	cmp r0, #5
	bls _080A04B4
	movs r0, #0xc
	b _080A04FE
_080A04B4:
	movs r1, #0xf2
	lsls r1, r1, #1
	adds r0, r4, r1
	bl sub_809E49C
	cmp r0, #5
	bls _080A04C6
	movs r0, #0x13
	b _080A04FE
_080A04C6:
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r4, r1
	bl sub_809E49C
	cmp r0, #5
	bls _080A04D8
	movs r0, #0x15
	b _080A04FE
_080A04D8:
	movs r1, #0x99
	lsls r1, r1, #2
	adds r0, r4, r1
	bl sub_809E49C
	cmp r0, #5
	bls _080A04EA
	movs r0, #0x19
	b _080A04FE
_080A04EA:
	movs r1, #0xb9
	lsls r1, r1, #2
	adds r0, r4, r1
	bl sub_809E49C
	cmp r0, #5
	bhi _080A04FC
	movs r0, #0
	b _080A04FE
_080A04FC:
	movs r0, #0x1f
_080A04FE:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_80A0504
sub_80A0504: @ 0x080A0504
	push {lr}
	bl sub_80A0490
	adds r1, r0, #0
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r0, r0, #0x1f
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80A0518
sub_80A0518: @ 0x080A0518
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r5, #1
	movs r4, #1
_080A0520:
	adds r0, r4, #0
	subs r0, #0x17
	cmp r0, #0xc
	bhi _080A056C
	lsls r0, r0, #2
	ldr r1, _080A0534 @ =_080A0538
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A0534: .4byte _080A0538
_080A0538: @ jump table
	.4byte _080A0582 @ case 0
	.4byte _080A056C @ case 1
	.4byte _080A056C @ case 2
	.4byte _080A0582 @ case 3
	.4byte _080A056C @ case 4
	.4byte _080A056C @ case 5
	.4byte _080A056C @ case 6
	.4byte _080A0582 @ case 7
	.4byte _080A056C @ case 8
	.4byte _080A0582 @ case 9
	.4byte _080A056C @ case 10
	.4byte _080A056C @ case 11
	.4byte _080A0582 @ case 12
_080A056C:
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_80A0030
	cmp r0, #0
	beq _080A0582
	bl sub_809E33C
	cmp r0, #0xf9
	bhi _080A0582
	movs r5, #0
_080A0582:
	adds r4, #1
	cmp r4, #0x2a
	bls _080A0520
	adds r0, r5, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
_080A0590:
	.byte 0x00, 0x78, 0x80, 0x06, 0x80, 0x0E, 0x70, 0x47, 0x00, 0x88, 0xC0, 0x04, 0x40, 0x0E, 0x70, 0x47
	.byte 0x00, 0x68, 0xC0, 0x02, 0x00, 0x0E, 0x70, 0x47, 0x00, 0xB5, 0x01, 0x29, 0x05, 0xD0, 0x01, 0x29
	.byte 0x01, 0xD3, 0x02, 0x29, 0x03, 0xD0, 0x30, 0x30, 0x02, 0xE0, 0x38, 0x30, 0x00, 0xE0, 0x40, 0x30
	.byte 0x02, 0xBC, 0x08, 0x47, 0x00, 0xB5, 0x01, 0x29, 0x05, 0xD0, 0x01, 0x29, 0x01, 0xD3, 0x02, 0x29
	.byte 0x03, 0xD0, 0x48, 0x30, 0x02, 0xE0, 0x50, 0x30, 0x00, 0xE0, 0x58, 0x30, 0x02, 0xBC, 0x08, 0x47
	.byte 0x60, 0x30, 0x70, 0x47, 0x68, 0x30, 0x70, 0x47

	thumb_func_start sub_80A05E8
sub_80A05E8: @ 0x080A05E8
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x38
	adds r7, r0, #0
	mov sb, r1
	ldrb r1, [r7, #3]
	lsls r0, r1, #0x1e
	lsrs r0, r0, #0x1f
	mov r8, r0
	cmp r0, #0
	bne _080A069E
	movs r0, #2
	orrs r0, r1
	strb r0, [r7, #3]
	add r1, sp, #0x30
	movs r4, #0x1d
	ldrh r2, [r1]
	ldr r3, _080A06AC @ =0xFFFFFC00
	adds r0, r3, #0
	ands r0, r2
	orrs r0, r4
	strh r0, [r1]
	movs r6, #0x90
	ldrb r4, [r1, #1]
	movs r2, #3
	adds r0, r2, #0
	ands r0, r4
	orrs r0, r6
	strb r0, [r1, #1]
	movs r5, #1
	ldrh r4, [r1, #2]
	adds r0, r3, #0
	ands r0, r4
	orrs r0, r5
	strh r0, [r1, #2]
	ldrb r0, [r1, #3]
	ands r2, r0
	orrs r2, r6
	strb r2, [r1, #3]
	ldrh r0, [r1, #4]
	ands r3, r0
	orrs r3, r5
	strh r3, [r1, #4]
	add r4, sp, #0x28
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	mov r0, r8
	strb r0, [r4, #6]
	mov r0, sp
	mov r1, sb
	adds r2, r4, #0
	bl sub_809EA6C
	adds r1, r7, #4
	mov r0, sp
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	adds r0, r7, #0
	adds r0, #0x18
	add r1, sp, #0x14
	bl sub_80D3B28
	adds r1, r7, #0
	adds r1, #0x28
	add r0, sp, #0x24
	ldrb r0, [r0]
	strb r0, [r1]
	mov r0, sp
	adds r0, #0x25
	ldrb r0, [r0]
	adds r1, #1
	strb r0, [r1]
	mov r0, sp
	adds r0, #0x26
	ldrb r1, [r0]
	lsls r1, r1, #0x1f
	adds r3, r7, #0
	adds r3, #0x2a
	lsrs r1, r1, #0x1f
	ldrb r2, [r3]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r3]
_080A069E:
	add sp, #0x38
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A06AC: .4byte 0xFFFFFC00

	thumb_func_start sub_80A06B0
sub_80A06B0: @ 0x080A06B0
	push {lr}
	adds r2, r0, #0
	subs r0, r1, #1
	cmp r0, #0x29
	bhi _080A0770
	lsls r0, r0, #2
	ldr r1, _080A06C4 @ =_080A06C8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A06C4: .4byte _080A06C8
_080A06C8: @ jump table
	.4byte _080A077C @ case 0
	.4byte _080A0782 @ case 1
	.4byte _080A0788 @ case 2
	.4byte _080A078E @ case 3
	.4byte _080A0794 @ case 4
	.4byte _080A079A @ case 5
	.4byte _080A07A0 @ case 6
	.4byte _080A07A6 @ case 7
	.4byte _080A07AC @ case 8
	.4byte _080A07B2 @ case 9
	.4byte _080A07B8 @ case 10
	.4byte _080A07BE @ case 11
	.4byte _080A07C4 @ case 12
	.4byte _080A07CA @ case 13
	.4byte _080A07D0 @ case 14
	.4byte _080A07D6 @ case 15
	.4byte _080A07DC @ case 16
	.4byte _080A07E2 @ case 17
	.4byte _080A07E8 @ case 18
	.4byte _080A07EE @ case 19
	.4byte _080A07F4 @ case 20
	.4byte _080A07FA @ case 21
	.4byte _080A0800 @ case 22
	.4byte _080A0806 @ case 23
	.4byte _080A080C @ case 24
	.4byte _080A0812 @ case 25
	.4byte _080A0818 @ case 26
	.4byte _080A081E @ case 27
	.4byte _080A0824 @ case 28
	.4byte _080A082A @ case 29
	.4byte _080A0830 @ case 30
	.4byte _080A0836 @ case 31
	.4byte _080A083C @ case 32
	.4byte _080A0842 @ case 33
	.4byte _080A0774 @ case 34
	.4byte _080A0848 @ case 35
	.4byte _080A084E @ case 36
	.4byte _080A0854 @ case 37
	.4byte _080A085A @ case 38
	.4byte _080A0860 @ case 39
	.4byte _080A0866 @ case 40
	.4byte _080A086C @ case 41
_080A0770:
	movs r0, #0
	b _080A0870
_080A0774:
	adds r0, r2, #0
	bl sub_80A0A04
	b _080A0870
_080A077C:
	adds r0, r2, #0
	adds r0, #0x70
	b _080A0870
_080A0782:
	adds r0, r2, #0
	adds r0, #0x84
	b _080A0870
_080A0788:
	adds r0, r2, #0
	adds r0, #0x98
	b _080A0870
_080A078E:
	adds r0, r2, #0
	adds r0, #0xb0
	b _080A0870
_080A0794:
	adds r0, r2, #0
	adds r0, #0xc4
	b _080A0870
_080A079A:
	adds r0, r2, #0
	adds r0, #0xd8
	b _080A0870
_080A07A0:
	adds r0, r2, #0
	adds r0, #0xf0
	b _080A0870
_080A07A6:
	movs r1, #0x82
	lsls r1, r1, #1
	b _080A086E
_080A07AC:
	movs r1, #0x8c
	lsls r1, r1, #1
	b _080A086E
_080A07B2:
	movs r1, #0x96
	lsls r1, r1, #1
	b _080A086E
_080A07B8:
	movs r1, #0xa0
	lsls r1, r1, #1
	b _080A086E
_080A07BE:
	movs r1, #0xaa
	lsls r1, r1, #1
	b _080A086E
_080A07C4:
	movs r1, #0xb6
	lsls r1, r1, #1
	b _080A086E
_080A07CA:
	movs r1, #0xc0
	lsls r1, r1, #1
	b _080A086E
_080A07D0:
	movs r1, #0xca
	lsls r1, r1, #1
	b _080A086E
_080A07D6:
	movs r1, #0xd4
	lsls r1, r1, #1
	b _080A086E
_080A07DC:
	movs r1, #0xde
	lsls r1, r1, #1
	b _080A086E
_080A07E2:
	movs r1, #0xe8
	lsls r1, r1, #1
	b _080A086E
_080A07E8:
	movs r1, #0xf2
	lsls r1, r1, #1
	b _080A086E
_080A07EE:
	movs r1, #0xfe
	lsls r1, r1, #1
	b _080A086E
_080A07F4:
	movs r1, #0x84
	lsls r1, r1, #2
	b _080A086E
_080A07FA:
	movs r1, #0x8a
	lsls r1, r1, #2
	b _080A086E
_080A0800:
	movs r1, #0x8f
	lsls r1, r1, #2
	b _080A086E
_080A0806:
	movs r1, #0x94
	lsls r1, r1, #2
	b _080A086E
_080A080C:
	movs r1, #0x99
	lsls r1, r1, #2
	b _080A086E
_080A0812:
	movs r1, #0x9f
	lsls r1, r1, #2
	b _080A086E
_080A0818:
	movs r1, #0xa4
	lsls r1, r1, #2
	b _080A086E
_080A081E:
	movs r1, #0xaa
	lsls r1, r1, #2
	b _080A086E
_080A0824:
	movs r1, #0xaf
	lsls r1, r1, #2
	b _080A086E
_080A082A:
	movs r1, #0xb4
	lsls r1, r1, #2
	b _080A086E
_080A0830:
	movs r1, #0xb9
	lsls r1, r1, #2
	b _080A086E
_080A0836:
	movs r1, #0xbf
	lsls r1, r1, #2
	b _080A086E
_080A083C:
	movs r1, #0xc4
	lsls r1, r1, #2
	b _080A086E
_080A0842:
	movs r1, #0xca
	lsls r1, r1, #2
	b _080A086E
_080A0848:
	movs r1, #0xcf
	lsls r1, r1, #2
	b _080A086E
_080A084E:
	movs r1, #0xd8
	lsls r1, r1, #2
	b _080A086E
_080A0854:
	movs r1, #0xe1
	lsls r1, r1, #2
	b _080A086E
_080A085A:
	movs r1, #0xea
	lsls r1, r1, #2
	b _080A086E
_080A0860:
	movs r1, #0xf3
	lsls r1, r1, #2
	b _080A086E
_080A0866:
	movs r1, #0xfc
	lsls r1, r1, #2
	b _080A086E
_080A086C:
	ldr r1, _080A0874 @ =0x00000414
_080A086E:
	adds r0, r2, r1
_080A0870:
	pop {r1}
	bx r1
	.align 2, 0
_080A0874: .4byte 0x00000414

	thumb_func_start sub_80A0878
sub_80A0878: @ 0x080A0878
	push {lr}
	adds r2, r0, #0
	subs r0, r1, #3
	cmp r0, #0x1c
	bhi _080A0904
	lsls r0, r0, #2
	ldr r1, _080A088C @ =_080A0890
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A088C: .4byte _080A0890
_080A0890: @ jump table
	.4byte _080A0908 @ case 0
	.4byte _080A0904 @ case 1
	.4byte _080A0904 @ case 2
	.4byte _080A0904 @ case 3
	.4byte _080A0904 @ case 4
	.4byte _080A0904 @ case 5
	.4byte _080A0904 @ case 6
	.4byte _080A0904 @ case 7
	.4byte _080A0904 @ case 8
	.4byte _080A090E @ case 9
	.4byte _080A0904 @ case 10
	.4byte _080A0904 @ case 11
	.4byte _080A0904 @ case 12
	.4byte _080A0904 @ case 13
	.4byte _080A0904 @ case 14
	.4byte _080A0904 @ case 15
	.4byte _080A0914 @ case 16
	.4byte _080A0904 @ case 17
	.4byte _080A091A @ case 18
	.4byte _080A0904 @ case 19
	.4byte _080A0904 @ case 20
	.4byte _080A0904 @ case 21
	.4byte _080A0920 @ case 22
	.4byte _080A0904 @ case 23
	.4byte _080A0904 @ case 24
	.4byte _080A0904 @ case 25
	.4byte _080A0904 @ case 26
	.4byte _080A0904 @ case 27
	.4byte _080A0926 @ case 28
_080A0904:
	movs r0, #0
	b _080A092C
_080A0908:
	adds r0, r2, #0
	adds r0, #0x98
	b _080A092C
_080A090E:
	movs r1, #0xaa
	lsls r1, r1, #1
	b _080A092A
_080A0914:
	movs r1, #0xf2
	lsls r1, r1, #1
	b _080A092A
_080A091A:
	movs r1, #0x84
	lsls r1, r1, #2
	b _080A092A
_080A0920:
	movs r1, #0x99
	lsls r1, r1, #2
	b _080A092A
_080A0926:
	movs r1, #0xb9
	lsls r1, r1, #2
_080A092A:
	adds r0, r2, r1
_080A092C:
	pop {r1}
	bx r1

	thumb_func_start sub_80A0930
sub_80A0930: @ 0x080A0930
	push {lr}
	adds r2, r0, #0
	adds r0, r1, #0
	subs r0, #0x24
	cmp r0, #6
	bhi _080A0968
	lsls r0, r0, #2
	ldr r1, _080A0948 @ =_080A094C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A0948: .4byte _080A094C
_080A094C: @ jump table
	.4byte _080A096C @ case 0
	.4byte _080A0972 @ case 1
	.4byte _080A0978 @ case 2
	.4byte _080A097E @ case 3
	.4byte _080A0984 @ case 4
	.4byte _080A098A @ case 5
	.4byte _080A0990 @ case 6
_080A0968:
	movs r0, #0
	b _080A0994
_080A096C:
	movs r1, #0xcf
	lsls r1, r1, #2
	b _080A0992
_080A0972:
	movs r1, #0xd8
	lsls r1, r1, #2
	b _080A0992
_080A0978:
	movs r1, #0xe1
	lsls r1, r1, #2
	b _080A0992
_080A097E:
	movs r1, #0xea
	lsls r1, r1, #2
	b _080A0992
_080A0984:
	movs r1, #0xf3
	lsls r1, r1, #2
	b _080A0992
_080A098A:
	movs r1, #0xfc
	lsls r1, r1, #2
	b _080A0992
_080A0990:
	ldr r1, _080A0998 @ =0x00000414
_080A0992:
	adds r0, r2, r1
_080A0994:
	pop {r1}
	bx r1
	.align 2, 0
_080A0998: .4byte 0x00000414

	thumb_func_start sub_80A099C
sub_80A099C: @ 0x080A099C
	push {lr}
	adds r2, r0, #0
	cmp r1, #6
	bhi _080A09D0
	lsls r0, r1, #2
	ldr r1, _080A09B0 @ =_080A09B4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A09B0: .4byte _080A09B4
_080A09B4: @ jump table
	.4byte _080A09D4 @ case 0
	.4byte _080A09DA @ case 1
	.4byte _080A09E0 @ case 2
	.4byte _080A09E6 @ case 3
	.4byte _080A09EC @ case 4
	.4byte _080A09F2 @ case 5
	.4byte _080A09F8 @ case 6
_080A09D0:
	movs r0, #0
	b _080A09FC
_080A09D4:
	movs r1, #0xcf
	lsls r1, r1, #2
	b _080A09FA
_080A09DA:
	movs r1, #0xd8
	lsls r1, r1, #2
	b _080A09FA
_080A09E0:
	movs r1, #0xe1
	lsls r1, r1, #2
	b _080A09FA
_080A09E6:
	movs r1, #0xea
	lsls r1, r1, #2
	b _080A09FA
_080A09EC:
	movs r1, #0xf3
	lsls r1, r1, #2
	b _080A09FA
_080A09F2:
	movs r1, #0xfc
	lsls r1, r1, #2
	b _080A09FA
_080A09F8:
	ldr r1, _080A0A00 @ =0x00000414
_080A09FA:
	adds r0, r2, r1
_080A09FC:
	pop {r1}
	bx r1
	.align 2, 0
_080A0A00: .4byte 0x00000414

	thumb_func_start sub_80A0A04
sub_80A0A04: @ 0x080A0A04
	push {lr}
	adds r1, r0, #0
	ldrb r0, [r1, #3]
	lsls r0, r0, #0x1e
	movs r2, #0
	cmp r0, #0
	bge _080A0A14
	adds r2, r1, #4
_080A0A14:
	adds r0, r2, #0
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80A0A1C
sub_80A0A1C: @ 0x080A0A1C
	push {r4, lr}
	sub sp, #8
	adds r4, r0, #0
	ldrb r3, [r4]
	lsls r2, r3, #0x1a
	lsrs r2, r2, #0x1a
	adds r2, r2, r1
	str r2, [sp]
	movs r0, #0x3f
	str r0, [sp, #4]
	add r0, sp, #4
	mov r1, sp
	cmp r2, #0x3f
	bls _080A0A3A
	adds r1, r0, #0
_080A0A3A:
	ldr r1, [r1]
	movs r0, #0x3f
	ands r1, r0
	movs r0, #0x40
	rsbs r0, r0, #0
	ands r0, r3
	orrs r0, r1
	strb r0, [r4]
	add sp, #8
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80A0A54
sub_80A0A54: @ 0x080A0A54
	push {r4, lr}
	sub sp, #8
	adds r4, r0, #0
	ldrh r3, [r4]
	lsls r2, r3, #0x13
	lsrs r2, r2, #0x19
	adds r2, r2, r1
	str r2, [sp]
	movs r0, #0x7f
	str r0, [sp, #4]
	add r1, sp, #4
	mov r0, sp
	cmp r2, #0x7f
	bls _080A0A72
	adds r0, r1, #0
_080A0A72:
	ldr r0, [r0]
	movs r1, #0x7f
	ands r0, r1
	lsls r0, r0, #6
	ldr r1, _080A0A8C @ =0xFFFFE03F
	ands r1, r3
	orrs r1, r0
	strh r1, [r4]
	add sp, #8
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A0A8C: .4byte 0xFFFFE03F

	thumb_func_start sub_80A0A90
sub_80A0A90: @ 0x080A0A90
	push {r4, r5, lr}
	sub sp, #8
	adds r3, r0, #0
	ldrb r0, [r3, #2]
	lsls r0, r0, #0x1a
	cmp r0, #0
	blt _080A0ACC
	ldr r4, [r3]
	lsls r0, r4, #0xb
	lsrs r0, r0, #0x18
	adds r0, #1
	str r0, [sp]
	movs r5, #0xff
	str r5, [sp, #4]
	add r2, sp, #4
	mov r1, sp
	cmp r0, #0xff
	bls _080A0AB6
	adds r1, r2, #0
_080A0AB6:
	ldr r1, [r1]
	ands r1, r5
	lsls r1, r1, #0xd
	ldr r0, _080A0AD4 @ =0xFFE01FFF
	ands r0, r4
	orrs r0, r1
	str r0, [r3]
	ldrb r0, [r3, #2]
	movs r1, #0x20
	orrs r0, r1
	strb r0, [r3, #2]
_080A0ACC:
	add sp, #8
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080A0AD4: .4byte 0xFFE01FFF

	thumb_func_start sub_80A0AD8
sub_80A0AD8: @ 0x080A0AD8
	push {lr}
	cmp r1, #1
	beq _080A0AEA
	cmp r1, #1
	blo _080A0AE6
	cmp r1, #2
	beq _080A0AEE
_080A0AE6:
	adds r0, #0x30
	b _080A0AF0
_080A0AEA:
	adds r0, #0x38
	b _080A0AF0
_080A0AEE:
	adds r0, #0x40
_080A0AF0:
	pop {r1}
	bx r1

	thumb_func_start sub_80A0AF4
sub_80A0AF4: @ 0x080A0AF4
	push {lr}
	cmp r1, #1
	beq _080A0B06
	cmp r1, #1
	blo _080A0B02
	cmp r1, #2
	beq _080A0B0A
_080A0B02:
	adds r0, #0x48
	b _080A0B0C
_080A0B06:
	adds r0, #0x50
	b _080A0B0C
_080A0B0A:
	adds r0, #0x58
_080A0B0C:
	pop {r1}
	bx r1

	thumb_func_start sub_80A0B10
sub_80A0B10: @ 0x080A0B10
	adds r0, #0x60
	bx lr

	thumb_func_start sub_80A0B14
sub_80A0B14: @ 0x080A0B14
	adds r0, #0x68
	bx lr

	thumb_func_start sub_80A0B18
sub_80A0B18: @ 0x080A0B18
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x48
	adds r7, r0, #0
	adds r5, r1, #0
	mov sl, r2
	str r3, [sp, #0x24]
	ldrb r1, [r7, #2]
	movs r0, #0x21
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r7, #2]
	adds r0, r7, #0
	bl sub_80A0490
	mov sb, r0
	rsbs r0, r0, #0
	mov r1, sb
	orrs r0, r1
	lsrs r0, r0, #0x1f
	mov r8, r0
	adds r4, r7, #0
	adds r4, #0x70
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	adds r4, #0x14
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	adds r4, #0x14
	adds r0, r4, #0
	bl sub_809E4AC
	cmp r0, #4
	bls _080A0B88
	ldrb r0, [r5, #9]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080A0B9C
_080A0B88:
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r2, r0, #0
	adds r0, r4, #0
	mov r1, r8
	bl sub_809E574
_080A0B9C:
	adds r4, r7, #0
	adds r4, #0xb0
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	adds r4, #0x14
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	adds r0, r7, #0
	adds r0, #0xd8
	bl sub_809EE4C
	adds r4, #0x2c
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	movs r2, #0x82
	lsls r2, r2, #1
	adds r4, r7, r2
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	movs r3, #0x8c
	lsls r3, r3, #1
	adds r4, r7, r3
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	movs r0, #0x96
	lsls r0, r0, #1
	adds r4, r7, r0
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	movs r1, #0xa0
	lsls r1, r1, #1
	adds r4, r7, r1
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	movs r2, #0xaa
	lsls r2, r2, #1
	adds r4, r7, r2
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r2, r0, #0
	adds r0, r4, #0
	mov r1, r8
	bl sub_809E574
	movs r3, #0xb6
	lsls r3, r3, #1
	adds r4, r7, r3
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	movs r0, #0xc0
	lsls r0, r0, #1
	adds r4, r7, r0
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	movs r1, #0xca
	lsls r1, r1, #1
	adds r4, r7, r1
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	movs r2, #0xd4
	lsls r2, r2, #1
	adds r4, r7, r2
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	movs r3, #0xde
	lsls r3, r3, #1
	adds r4, r7, r3
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	movs r0, #0xe8
	lsls r0, r0, #1
	adds r4, r7, r0
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	movs r1, #0xf2
	lsls r1, r1, #1
	adds r4, r7, r1
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r2, r0, #0
	adds r0, r4, #0
	mov r1, r8
	bl sub_809E574
	movs r2, #0xfe
	lsls r2, r2, #1
	adds r4, r7, r2
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	movs r3, #0x84
	lsls r3, r3, #2
	adds r4, r7, r3
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r2, r0, #0
	adds r0, r4, #0
	mov r1, r8
	bl sub_809E574
	movs r0, #0x8a
	lsls r0, r0, #2
	adds r4, r7, r0
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	movs r1, #0x8f
	lsls r1, r1, #2
	adds r4, r7, r1
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	movs r2, #0x94
	lsls r2, r2, #2
	adds r4, r7, r2
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	movs r3, #0x99
	lsls r3, r3, #2
	adds r4, r7, r3
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r2, r0, #0
	adds r0, r4, #0
	mov r1, r8
	bl sub_809E574
	ldrb r0, [r5, #9]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080A0DDE
	movs r0, #0x9f
	lsls r0, r0, #2
	adds r4, r7, r0
	adds r0, r4, #0
	bl sub_809E33C
	adds r5, r0, #0
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	adds r0, r4, #0
	bl sub_809E33C
	cmp r0, r5
	bls _080A0DDE
	adds r0, r4, #0
	bl sub_809E33C
	adds r1, r0, #0
	subs r1, r1, r5
	adds r0, r4, #0
	bl sub_809E370
_080A0DDE:
	movs r1, #0xa4
	lsls r1, r1, #2
	adds r0, r7, r1
	bl sub_809EBEC
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r4, r7, r2
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	movs r3, #0xaf
	lsls r3, r3, #2
	adds r4, r7, r3
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	movs r0, #0xb4
	lsls r0, r0, #2
	adds r4, r7, r0
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	movs r1, #0xb9
	lsls r1, r1, #2
	adds r4, r7, r1
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r2, r0, #0
	adds r0, r4, #0
	mov r1, r8
	bl sub_809E574
	movs r2, #0xbf
	lsls r2, r2, #2
	adds r4, r7, r2
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
	mov r0, sl
	adds r0, #0x3a
	ldrb r0, [r0]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1e
	cmp r0, #2
	bne _080A0E88
	movs r3, #0xc4
	lsls r3, r3, #2
	adds r4, r7, r3
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
_080A0E88:
	mov r0, sl
	adds r0, #0x3b
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1e
	cmp r0, #2
	bne _080A0EAE
	movs r0, #0xca
	lsls r0, r0, #2
	adds r4, r7, r0
	bl sub_80D11E4
	movs r1, #0x64
	bl sub_80D0ED0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809E3E8
_080A0EAE:
	ldrb r0, [r7, #3]
	lsls r0, r0, #0x1e
	cmp r0, #0
	bge _080A0EBC
	adds r0, r7, #4
	bl sub_809EAF8
_080A0EBC:
	movs r1, #0xcf
	lsls r1, r1, #2
	adds r4, r7, r1
	adds r0, r4, #0
	bl sub_809E7A0
	mov r0, sp
	movs r1, #0
	bl sub_809E804
	adds r0, r4, #0
	mov r1, sp
	bl sub_809E368
	movs r6, #0
	str r6, [sp, #8]
	add r1, sp, #8
	adds r0, r4, #0
	bl sub_809E7C8
	movs r2, #0x87
	lsls r2, r2, #3
	adds r5, r7, r2
	adds r0, r5, #0
	movs r1, #0
	bl sub_809E994
	movs r3, #0xd8
	lsls r3, r3, #2
	adds r4, r7, r3
	adds r0, r4, #0
	bl sub_809E7A0
	mov r0, sp
	movs r1, #1
	bl sub_809E804
	adds r0, r4, #0
	mov r1, sp
	bl sub_809E368
	str r6, [sp, #0xc]
	add r1, sp, #0xc
	adds r0, r4, #0
	bl sub_809E7C8
	adds r0, r5, #0
	movs r1, #1
	bl sub_809E994
	movs r0, #0xe1
	lsls r0, r0, #2
	adds r4, r7, r0
	adds r0, r4, #0
	bl sub_809E7A0
	mov r0, sp
	movs r1, #2
	bl sub_809E804
	adds r0, r4, #0
	mov r1, sp
	bl sub_809E368
	str r6, [sp, #0x10]
	add r1, sp, #0x10
	adds r0, r4, #0
	bl sub_809E7C8
	adds r0, r5, #0
	movs r1, #2
	bl sub_809E994
	movs r1, #0xea
	lsls r1, r1, #2
	adds r4, r7, r1
	adds r0, r4, #0
	bl sub_809E7A0
	mov r0, sp
	movs r1, #3
	bl sub_809E804
	adds r0, r4, #0
	mov r1, sp
	bl sub_809E368
	str r6, [sp, #0x14]
	add r1, sp, #0x14
	adds r0, r4, #0
	bl sub_809E7C8
	adds r0, r5, #0
	movs r1, #3
	bl sub_809E994
	movs r2, #0xf3
	lsls r2, r2, #2
	adds r4, r7, r2
	adds r0, r4, #0
	bl sub_809E7A0
	mov r0, sp
	movs r1, #4
	bl sub_809E804
	adds r0, r4, #0
	mov r1, sp
	bl sub_809E368
	str r6, [sp, #0x18]
	add r1, sp, #0x18
	adds r0, r4, #0
	bl sub_809E7C8
	adds r0, r5, #0
	movs r1, #4
	bl sub_809E994
	movs r3, #0xfc
	lsls r3, r3, #2
	adds r4, r7, r3
	adds r0, r4, #0
	bl sub_809E7A0
	mov r0, sp
	movs r1, #5
	bl sub_809E804
	adds r0, r4, #0
	mov r1, sp
	bl sub_809E368
	str r6, [sp, #0x1c]
	add r1, sp, #0x1c
	adds r0, r4, #0
	bl sub_809E7C8
	adds r0, r5, #0
	movs r1, #5
	bl sub_809E994
	ldr r0, _080A10FC @ =0x00000414
	adds r4, r7, r0
	adds r0, r4, #0
	bl sub_809E7A0
	mov r0, sp
	movs r1, #6
	bl sub_809E804
	adds r0, r4, #0
	mov r1, sp
	bl sub_809E368
	str r6, [sp, #0x20]
	add r1, sp, #0x20
	adds r0, r4, #0
	bl sub_809E7C8
	adds r0, r5, #0
	movs r1, #6
	bl sub_809E994
	mov r2, sl
	ldrb r1, [r2, #0x1b]
	lsrs r1, r1, #7
	ldrb r2, [r2, #0x1c]
	movs r0, #1
	ands r0, r2
	lsls r0, r0, #1
	orrs r0, r1
	cmp r0, #2
	beq _080A104A
	lsls r0, r2, #0x1d
	lsrs r0, r0, #0x1e
	cmp r0, #2
	beq _080A104A
	lsls r0, r2, #0x1b
	lsrs r0, r0, #0x1e
	cmp r0, #2
	beq _080A104A
	lsls r0, r2, #0x19
	lsrs r0, r0, #0x1e
	cmp r0, #2
	beq _080A104A
	mov r3, sl
	ldrh r0, [r3, #0x1c]
	lsls r0, r0, #0x17
	lsrs r0, r0, #0x1e
	cmp r0, #2
	beq _080A104A
	mov r0, sl
	adds r0, #0x4b
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #2
	bne _080A105A
_080A104A:
	movs r0, #0x8e
	lsls r0, r0, #3
	adds r1, r7, r0
	ldr r0, [r1]
	cmp r0, #0x3c
	beq _080A105A
	adds r0, #1
	str r0, [r1]
_080A105A:
	adds r4, r7, #0
	adds r4, #0x98
	adds r0, r4, #0
	bl sub_809E4BC
	mov sl, r4
	adds r1, r7, #0
	adds r1, #0x30
	str r1, [sp, #0x28]
	adds r2, r7, #0
	adds r2, #0x38
	str r2, [sp, #0x2c]
	adds r3, r7, #0
	adds r3, #0x40
	str r3, [sp, #0x30]
	adds r1, #0x18
	str r1, [sp, #0x34]
	adds r2, #0x18
	str r2, [sp, #0x38]
	adds r3, #0x18
	str r3, [sp, #0x3c]
	adds r1, #0x18
	str r1, [sp, #0x40]
	adds r2, #0x18
	str r2, [sp, #0x44]
	cmp r0, #4
	bhi _080A112A
	mov r3, r8
	cmp r3, #0
	beq _080A109C
	mov r0, sb
	cmp r0, #3
	bne _080A112A
_080A109C:
	ldr r1, [sp, #0x68]
	movs r2, #0xff
	lsls r2, r2, #2
	adds r0, r1, r2
	bl sub_800C630
	adds r3, r7, #0
	adds r3, #0x30
	str r3, [sp, #0x28]
	adds r1, r7, #0
	adds r1, #0x38
	str r1, [sp, #0x2c]
	adds r2, r7, #0
	adds r2, #0x40
	str r2, [sp, #0x30]
	adds r3, #0x18
	str r3, [sp, #0x34]
	adds r1, #0x18
	str r1, [sp, #0x38]
	adds r2, #0x18
	str r2, [sp, #0x3c]
	adds r3, #0x18
	str r3, [sp, #0x40]
	adds r1, #0x18
	str r1, [sp, #0x44]
	cmp r0, #8
	bne _080A112A
	movs r6, #0
	movs r5, #0
_080A10D6:
	ldr r2, [sp, #0x68]
	movs r3, #0xff
	lsls r3, r3, #2
	adds r0, r2, r3
	adds r1, r5, #0
	bl sub_800C5CC
	cmp r0, #0
	beq _080A10EE
	bl sub_809B228
	adds r6, r6, r0
_080A10EE:
	adds r5, #1
	cmp r5, #7
	bls _080A10D6
	lsrs r6, r6, #3
	mov r5, sl
	ldr r4, _080A1100 @ =gUnknown_08104109
	b _080A1112
	.align 2, 0
_080A10FC: .4byte 0x00000414
_080A1100: .4byte gUnknown_08104109
_080A1104:
	adds r0, r5, #0
	ldr r1, _080A1154 @ =0x000009C4
	bl sub_809E4C4
	adds r0, r5, #0
	bl sub_809E550
_080A1112:
	adds r0, r5, #0
	bl sub_809E4BC
	cmp r0, #4
	bhi _080A112A
	mov r0, sl
	bl sub_809E4BC
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r6, r0
	bhs _080A1104
_080A112A:
	movs r1, #0xaa
	lsls r1, r1, #1
	adds r0, r7, r1
	bl sub_809E4BC
	cmp r0, #4
	bhi _080A1182
	mov r2, r8
	cmp r2, #0
	beq _080A1144
	mov r3, sb
	cmp r3, #0xc
	bne _080A1182
_080A1144:
	ldr r0, [r7]
	lsls r0, r0, #0xb
	lsrs r6, r0, #0x18
	movs r0, #0xaa
	lsls r0, r0, #1
	adds r5, r7, r0
	ldr r4, _080A1158 @ =gUnknown_0810410E
	b _080A116A
	.align 2, 0
_080A1154: .4byte 0x000009C4
_080A1158: .4byte gUnknown_0810410E
_080A115C:
	adds r0, r5, #0
	ldr r1, _080A11AC @ =0x000009C4
	bl sub_809E4C4
	adds r0, r5, #0
	bl sub_809E550
_080A116A:
	adds r0, r5, #0
	bl sub_809E4BC
	cmp r0, #4
	bhi _080A1182
	adds r0, r5, #0
	bl sub_809E4BC
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r6, r0
	bhs _080A115C
_080A1182:
	movs r1, #0xf2
	lsls r1, r1, #1
	adds r0, r7, r1
	bl sub_809E4BC
	cmp r0, #4
	bhi _080A11DA
	mov r2, r8
	cmp r2, #0
	beq _080A119C
	mov r3, sb
	cmp r3, #0x13
	bne _080A11DA
_080A119C:
	ldrh r0, [r7]
	lsls r0, r0, #0x13
	lsrs r6, r0, #0x19
	movs r0, #0xf2
	lsls r0, r0, #1
	adds r5, r7, r0
	ldr r4, _080A11B0 @ =gUnknown_08104113
	b _080A11C2
	.align 2, 0
_080A11AC: .4byte 0x000009C4
_080A11B0: .4byte gUnknown_08104113
_080A11B4:
	adds r0, r5, #0
	ldr r1, _080A1208 @ =0x000009C4
	bl sub_809E4C4
	adds r0, r5, #0
	bl sub_809E550
_080A11C2:
	adds r0, r5, #0
	bl sub_809E4BC
	cmp r0, #4
	bhi _080A11DA
	adds r0, r5, #0
	bl sub_809E4BC
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r6, r0
	bhs _080A11B4
_080A11DA:
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r7, r1
	bl sub_809E4BC
	cmp r0, #4
	bhi _080A1236
	mov r2, r8
	cmp r2, #0
	beq _080A11F4
	mov r3, sb
	cmp r3, #0x15
	bne _080A1236
_080A11F4:
	ldr r0, [sp, #0x24]
	bl sub_800E970
	adds r6, r0, #0
	movs r0, #0x84
	lsls r0, r0, #2
	adds r5, r7, r0
	ldr r4, _080A120C @ =gUnknown_08104118
	b _080A121E
	.align 2, 0
_080A1208: .4byte 0x000009C4
_080A120C: .4byte gUnknown_08104118
_080A1210:
	adds r0, r5, #0
	ldr r1, _080A1260 @ =0x000009C4
	bl sub_809E4C4
	adds r0, r5, #0
	bl sub_809E550
_080A121E:
	adds r0, r5, #0
	bl sub_809E4BC
	cmp r0, #4
	bhi _080A1236
	adds r0, r5, #0
	bl sub_809E4BC
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r6, r0
	bhs _080A1210
_080A1236:
	movs r1, #0x99
	lsls r1, r1, #2
	adds r0, r7, r1
	bl sub_809E4BC
	cmp r0, #4
	bhi _080A128E
	mov r2, r8
	cmp r2, #0
	beq _080A1250
	mov r3, sb
	cmp r3, #0x19
	bne _080A128E
_080A1250:
	ldrb r0, [r7]
	lsls r0, r0, #0x1a
	lsrs r6, r0, #0x1a
	movs r0, #0x99
	lsls r0, r0, #2
	adds r5, r7, r0
	ldr r4, _080A1264 @ =gUnknown_0810411D
	b _080A1276
	.align 2, 0
_080A1260: .4byte 0x000009C4
_080A1264: .4byte gUnknown_0810411D
_080A1268:
	adds r0, r5, #0
	ldr r1, _080A12B4 @ =0x000009C4
	bl sub_809E4C4
	adds r0, r5, #0
	bl sub_809E550
_080A1276:
	adds r0, r5, #0
	bl sub_809E4BC
	cmp r0, #4
	bhi _080A128E
	adds r0, r5, #0
	bl sub_809E4BC
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r6, r0
	bhs _080A1268
_080A128E:
	ldrh r0, [r7, #2]
	lsls r0, r0, #0x17
	lsrs r0, r0, #0x1d
	cmp r0, #4
	bls _080A129A
	b _080A13DE
_080A129A:
	movs r6, #0
	movs r4, #0
	movs r5, #0
_080A12A0:
	adds r0, r5, #0
	subs r0, #0x17
	cmp r0, #0xc
	bhi _080A12F0
	lsls r0, r0, #2
	ldr r1, _080A12B8 @ =_080A12BC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A12B4: .4byte 0x000009C4
_080A12B8: .4byte _080A12BC
_080A12BC: @ jump table
	.4byte _080A1304 @ case 0
	.4byte _080A12F0 @ case 1
	.4byte _080A12F0 @ case 2
	.4byte _080A1304 @ case 3
	.4byte _080A12F0 @ case 4
	.4byte _080A12F0 @ case 5
	.4byte _080A12F0 @ case 6
	.4byte _080A1304 @ case 7
	.4byte _080A12F0 @ case 8
	.4byte _080A12F0 @ case 9
	.4byte _080A1304 @ case 10
	.4byte _080A1304 @ case 11
	.4byte _080A1304 @ case 12
_080A12F0:
	adds r0, r7, #0
	adds r1, r5, #0
	bl sub_80A06B0
	cmp r0, #0
	beq _080A1304
	bl sub_809E33C
	adds r6, r6, r0
	adds r4, #1
_080A1304:
	adds r5, #1
	cmp r5, #0x2a
	bls _080A12A0
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_80D0EDA
	adds r5, r0, #0
	ldrh r0, [r7, #2]
	lsls r0, r0, #0x17
	lsrs r1, r0, #0x1d
	cmp r1, #4
	bhi _080A13DE
	ldr r0, _080A1324 @ =gUnknown_08104122
	adds r0, r1, r0
	b _080A13D8
	.align 2, 0
_080A1324: .4byte gUnknown_08104122
_080A1328:
	mov r1, r8
	cmp r1, #0
	beq _080A1334
	mov r2, sb
	cmp r2, #3
	bne _080A133C
_080A1334:
	mov r0, sl
	ldr r1, _080A146C @ =0x000009C4
	bl sub_809E4C4
_080A133C:
	mov r3, r8
	cmp r3, #0
	beq _080A1348
	mov r0, sb
	cmp r0, #0xc
	bne _080A1354
_080A1348:
	movs r1, #0xaa
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r1, _080A146C @ =0x000009C4
	bl sub_809E4C4
_080A1354:
	mov r2, r8
	cmp r2, #0
	beq _080A1360
	mov r3, sb
	cmp r3, #0x13
	bne _080A136C
_080A1360:
	movs r1, #0xf2
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r1, _080A146C @ =0x000009C4
	bl sub_809E4C4
_080A136C:
	mov r2, r8
	cmp r2, #0
	beq _080A1378
	mov r3, sb
	cmp r3, #0x15
	bne _080A1384
_080A1378:
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, _080A146C @ =0x000009C4
	bl sub_809E4C4
_080A1384:
	mov r2, r8
	cmp r2, #0
	beq _080A1390
	mov r3, sb
	cmp r3, #0x19
	bne _080A139C
_080A1390:
	movs r1, #0x99
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, _080A146C @ =0x000009C4
	bl sub_809E4C4
_080A139C:
	mov r2, r8
	cmp r2, #0
	beq _080A13A8
	mov r3, sb
	cmp r3, #0x1f
	bne _080A13B4
_080A13A8:
	movs r1, #0xb9
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, _080A146C @ =0x000009C4
	bl sub_809E4C4
_080A13B4:
	ldrh r2, [r7, #2]
	lsls r0, r2, #0x17
	lsrs r0, r0, #0x1d
	adds r0, #1
	movs r1, #7
	ands r0, r1
	lsls r0, r0, #6
	ldr r3, _080A1470 @ =0xFFFFFE3F
	adds r1, r3, #0
	ands r2, r1
	orrs r2, r0
	strh r2, [r7, #2]
	lsls r2, r2, #0x17
	lsrs r2, r2, #0x1d
	cmp r2, #4
	bhi _080A13DE
	ldr r0, _080A1474 @ =gUnknown_08104122
	adds r0, r2, r0
_080A13D8:
	ldrb r0, [r0]
	cmp r5, r0
	bhs _080A1328
_080A13DE:
	mov r0, sp
	movs r1, #0
	bl sub_80A17A0
	ldr r1, [sp, #0x28]
	mov r0, sp
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	mov r0, sp
	movs r1, #1
	bl sub_80A17A0
	ldr r1, [sp, #0x2c]
	mov r0, sp
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	mov r0, sp
	movs r1, #2
	bl sub_80A17A0
	ldr r1, [sp, #0x30]
	mov r0, sp
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	mov r0, sp
	movs r1, #0
	bl sub_80A1890
	ldr r1, [sp, #0x34]
	mov r0, sp
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	mov r0, sp
	movs r1, #1
	bl sub_80A1890
	ldr r1, [sp, #0x38]
	mov r0, sp
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	mov r0, sp
	movs r1, #2
	bl sub_80A1890
	ldr r1, [sp, #0x3c]
	mov r0, sp
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	mov r0, sp
	bl sub_80A198C
	ldr r1, [sp, #0x40]
	mov r0, sp
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	mov r0, sp
	bl sub_80A19EC
	ldr r1, [sp, #0x44]
	mov r0, sp
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	add sp, #0x48
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A146C: .4byte 0x000009C4
_080A1470: .4byte 0xFFFFFE3F
_080A1474: .4byte gUnknown_08104122

	thumb_func_start sub_80A1478
sub_80A1478: @ 0x080A1478
	ldr r1, [r1]
	str r1, [r0, #0x2c]
	bx lr
	.align 2, 0

	thumb_func_start sub_80A1480
sub_80A1480: @ 0x080A1480
	adds r0, #0x2c
	bx lr

	thumb_func_start sub_80A1484
sub_80A1484: @ 0x080A1484
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r2, #0
	ldrh r0, [r1]
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x16
	cmp r0, #0x2a
	bls _080A1496
	b _080A1798
_080A1496:
	lsls r0, r0, #2
	ldr r1, _080A14A0 @ =_080A14A4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A14A0: .4byte _080A14A4
_080A14A4: @ jump table
	.4byte _080A1550 @ case 0
	.4byte _080A1550 @ case 1
	.4byte _080A1798 @ case 2
	.4byte _080A1550 @ case 3
	.4byte _080A1550 @ case 4
	.4byte _080A1550 @ case 5
	.4byte _080A1550 @ case 6
	.4byte _080A1550 @ case 7
	.4byte _080A1550 @ case 8
	.4byte _080A1798 @ case 9
	.4byte _080A1636 @ case 10
	.4byte _080A1636 @ case 11
	.4byte _080A164E @ case 12
	.4byte _080A1654 @ case 13
	.4byte _080A165A @ case 14
	.4byte _080A1678 @ case 15
	.4byte _080A1678 @ case 16
	.4byte _080A1798 @ case 17
	.4byte _080A1798 @ case 18
	.4byte _080A1696 @ case 19
	.4byte _080A1696 @ case 20
	.4byte _080A16A8 @ case 21
	.4byte _080A16A8 @ case 22
	.4byte _080A16A8 @ case 23
	.4byte _080A16BA @ case 24
	.4byte _080A16BA @ case 25
	.4byte _080A16BA @ case 26
	.4byte _080A16BA @ case 27
	.4byte _080A16EC @ case 28
	.4byte _080A1798 @ case 29
	.4byte _080A173C @ case 30
	.4byte _080A174E @ case 31
	.4byte _080A174E @ case 32
	.4byte _080A174E @ case 33
	.4byte _080A174E @ case 34
	.4byte _080A1798 @ case 35
	.4byte _080A1760 @ case 36
	.4byte _080A1798 @ case 37
	.4byte _080A1766 @ case 38
	.4byte _080A1798 @ case 39
	.4byte _080A1776 @ case 40
	.4byte _080A1784 @ case 41
	.4byte _080A1784 @ case 42
_080A1550:
	movs r5, #1
_080A1552:
	movs r1, #1
	cmp r5, #0x21
	beq _080A1570
	cmp r5, #0x21
	bhi _080A1562
	cmp r5, #0x20
	beq _080A1580
	b _080A1582
_080A1562:
	cmp r5, #0x22
	bne _080A1582
	adds r0, r6, #0
	adds r0, #0x3b
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	b _080A1578
_080A1570:
	adds r0, r6, #0
	adds r0, #0x3a
	ldrb r0, [r0]
	lsls r0, r0, #0x19
_080A1578:
	lsrs r0, r0, #0x1e
	cmp r0, #2
	beq _080A1582
	b _080A1598
_080A1580:
	movs r1, #0
_080A1582:
	cmp r1, #0
	beq _080A1598
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_80A06B0
	cmp r0, #0
	beq _080A1598
	movs r1, #1
	bl sub_809E38C
_080A1598:
	subs r0, r5, #3
	cmp r0, #0x1c
	bhi _080A162E
	lsls r0, r0, #2
	ldr r1, _080A15A8 @ =_080A15AC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A15A8: .4byte _080A15AC
_080A15AC: @ jump table
	.4byte _080A1620 @ case 0
	.4byte _080A162E @ case 1
	.4byte _080A162E @ case 2
	.4byte _080A162E @ case 3
	.4byte _080A162E @ case 4
	.4byte _080A162E @ case 5
	.4byte _080A162E @ case 6
	.4byte _080A162E @ case 7
	.4byte _080A162E @ case 8
	.4byte _080A1620 @ case 9
	.4byte _080A162E @ case 10
	.4byte _080A162E @ case 11
	.4byte _080A162E @ case 12
	.4byte _080A162E @ case 13
	.4byte _080A162E @ case 14
	.4byte _080A162E @ case 15
	.4byte _080A1620 @ case 16
	.4byte _080A162E @ case 17
	.4byte _080A1620 @ case 18
	.4byte _080A162E @ case 19
	.4byte _080A162E @ case 20
	.4byte _080A162E @ case 21
	.4byte _080A1620 @ case 22
	.4byte _080A162E @ case 23
	.4byte _080A162E @ case 24
	.4byte _080A162E @ case 25
	.4byte _080A162E @ case 26
	.4byte _080A162E @ case 27
	.4byte _080A1620 @ case 28
_080A1620:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_80A0878
	movs r1, #0xc8
	bl sub_809E4E8
_080A162E:
	adds r5, #1
	cmp r5, #0x2a
	bls _080A1552
	b _080A1798
_080A1636:
	adds r0, r4, #0
	adds r0, #0x70
	movs r1, #5
	bl sub_809E38C
	adds r0, r4, #0
	adds r0, #0x84
	movs r1, #5
	bl sub_809E38C
	adds r4, #0x98
	b _080A16D8
_080A164E:
	movs r1, #0x8a
	lsls r1, r1, #2
	b _080A177A
_080A1654:
	movs r1, #0xaa
	lsls r1, r1, #2
	b _080A177A
_080A165A:
	movs r1, #0xca
	lsls r1, r1, #1
	adds r0, r4, r1
	movs r1, #5
	bl sub_809E38C
	movs r1, #0xd4
	lsls r1, r1, #1
	adds r0, r4, r1
	movs r1, #5
	bl sub_809E38C
	movs r0, #0x84
	lsls r0, r0, #2
	b _080A16D6
_080A1678:
	movs r1, #0xde
	lsls r1, r1, #1
	adds r0, r4, r1
	movs r1, #5
	bl sub_809E38C
	movs r1, #0xe8
	lsls r1, r1, #1
	adds r0, r4, r1
	movs r1, #5
	bl sub_809E38C
	movs r0, #0xf2
	lsls r0, r0, #1
	b _080A16D6
_080A1696:
	movs r1, #0xfe
	lsls r1, r1, #1
	adds r0, r4, r1
	movs r1, #5
	bl sub_809E38C
	movs r0, #0x84
	lsls r0, r0, #2
	b _080A16D6
_080A16A8:
	movs r1, #0x94
	lsls r1, r1, #2
	adds r0, r4, r1
	movs r1, #5
	bl sub_809E38C
	movs r0, #0x99
	lsls r0, r0, #2
	b _080A16D6
_080A16BA:
	movs r1, #0x96
	lsls r1, r1, #1
	adds r0, r4, r1
	movs r1, #5
	bl sub_809E38C
	movs r1, #0xa0
	lsls r1, r1, #1
	adds r0, r4, r1
	movs r1, #5
	bl sub_809E38C
	movs r0, #0xaa
	lsls r0, r0, #1
_080A16D6:
	adds r4, r4, r0
_080A16D8:
	adds r0, r4, #0
	movs r1, #5
	bl sub_809E38C
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r4, #0
	bl sub_809E4E8
	b _080A1798
_080A16EC:
	movs r1, #0xcf
	lsls r1, r1, #2
	adds r0, r4, r1
	movs r1, #5
	bl sub_809E38C
	movs r1, #0xd8
	lsls r1, r1, #2
	adds r0, r4, r1
	movs r1, #5
	bl sub_809E38C
	movs r1, #0xe1
	lsls r1, r1, #2
	adds r0, r4, r1
	movs r1, #5
	bl sub_809E38C
	movs r1, #0xea
	lsls r1, r1, #2
	adds r0, r4, r1
	movs r1, #5
	bl sub_809E38C
	movs r1, #0xf3
	lsls r1, r1, #2
	adds r0, r4, r1
	movs r1, #5
	bl sub_809E38C
	movs r1, #0xfc
	lsls r1, r1, #2
	adds r0, r4, r1
	movs r1, #5
	bl sub_809E38C
	ldr r1, _080A1738 @ =0x00000414
	b _080A177A
	.align 2, 0
_080A1738: .4byte 0x00000414
_080A173C:
	movs r1, #0xb6
	lsls r1, r1, #1
	adds r0, r4, r1
	movs r1, #5
	bl sub_809E38C
	movs r1, #0xc0
	lsls r1, r1, #1
	b _080A177A
_080A174E:
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r4, r1
	movs r1, #5
	bl sub_809E38C
	movs r1, #0x8c
	lsls r1, r1, #1
	b _080A177A
_080A1760:
	movs r1, #0x9f
	lsls r1, r1, #2
	b _080A177A
_080A1766:
	adds r0, r4, #0
	adds r0, #0xd8
	movs r1, #5
	bl sub_809E38C
	adds r0, r4, #0
	adds r0, #0xf0
	b _080A177C
_080A1776:
	movs r1, #0xa4
	lsls r1, r1, #2
_080A177A:
	adds r0, r4, r1
_080A177C:
	movs r1, #5
	bl sub_809E38C
	b _080A1798
_080A1784:
	adds r0, r4, #0
	adds r0, #0xb0
	movs r1, #5
	bl sub_809E38C
	adds r0, r4, #0
	adds r0, #0xc4
	movs r1, #5
	bl sub_809E38C
_080A1798:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80A17A0
sub_80A17A0: @ 0x080A17A0
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r6, r0, #0
	cmp r1, #1
	beq _080A17F0
	cmp r1, #1
	blo _080A17B2
	cmp r1, #2
	beq _080A1834
_080A17B2:
	mov r4, sp
	movs r2, #7
	ldrh r1, [r4]
	ldr r3, _080A17EC @ =0xFFFFFC00
	adds r0, r3, #0
	ands r0, r1
	orrs r0, r2
	strh r0, [r4]
	ldrb r1, [r4, #1]
	movs r2, #3
	adds r0, r2, #0
	ands r0, r1
	movs r1, #0x20
	orrs r0, r1
	strb r0, [r4, #1]
	movs r5, #6
	ldrh r1, [r4, #2]
	adds r0, r3, #0
	ands r0, r1
	orrs r0, r5
	strh r0, [r4, #2]
	ldrb r0, [r4, #3]
	ands r2, r0
	movs r0, #0x60
	orrs r2, r0
	strb r2, [r4, #3]
	movs r1, #5
	b _080A186A
	.align 2, 0
_080A17EC: .4byte 0xFFFFFC00
_080A17F0:
	mov r3, sp
	movs r4, #7
	ldrh r1, [r3]
	ldr r2, _080A1830 @ =0xFFFFFC00
	adds r0, r2, #0
	ands r0, r1
	orrs r0, r4
	strh r0, [r3]
	movs r5, #0xe0
	ldrb r4, [r3, #1]
	movs r1, #3
	adds r0, r1, #0
	ands r0, r4
	orrs r0, r5
	strb r0, [r3, #1]
	movs r5, #5
	ldrh r4, [r3, #2]
	adds r0, r2, #0
	ands r0, r4
	orrs r0, r5
	strh r0, [r3, #2]
	movs r4, #0xa0
	ldrb r0, [r3, #3]
	ands r1, r0
	orrs r1, r4
	strb r1, [r3, #3]
	movs r1, #4
	ldrh r0, [r3, #4]
	ands r2, r0
	orrs r2, r1
	strh r2, [r3, #4]
	b _080A1872
	.align 2, 0
_080A1830: .4byte 0xFFFFFC00
_080A1834:
	mov r4, sp
	movs r2, #7
	ldrh r1, [r4]
	ldr r3, _080A188C @ =0xFFFFFC00
	adds r0, r3, #0
	ands r0, r1
	orrs r0, r2
	strh r0, [r4]
	ldrb r1, [r4, #1]
	movs r2, #3
	adds r0, r2, #0
	ands r0, r1
	movs r1, #0x20
	orrs r0, r1
	strb r0, [r4, #1]
	movs r5, #6
	ldrh r1, [r4, #2]
	adds r0, r3, #0
	ands r0, r1
	orrs r0, r5
	strh r0, [r4, #2]
	movs r1, #0xe0
	ldrb r0, [r4, #3]
	ands r2, r0
	orrs r2, r1
	strb r2, [r4, #3]
	movs r1, #3
_080A186A:
	ldrh r0, [r4, #4]
	ands r3, r0
	orrs r3, r1
	strh r3, [r4, #4]
_080A1872:
	movs r4, #0
	adds r0, r6, #0
	mov r1, sp
	movs r2, #6
	bl sub_80D3994
	strb r4, [r6, #6]
	adds r0, r6, #0
	add sp, #8
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A188C: .4byte 0xFFFFFC00

	thumb_func_start sub_80A1890
sub_80A1890: @ 0x080A1890
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r7, r0, #0
	cmp r1, #1
	beq _080A18F0
	cmp r1, #1
	blo _080A18A2
	cmp r1, #2
	beq _080A1934
_080A18A2:
	mov r3, sp
	movs r4, #7
	ldrh r1, [r3]
	ldr r2, _080A18EC @ =0xFFFFFC00
	adds r0, r2, #0
	ands r0, r1
	orrs r0, r4
	strh r0, [r3]
	movs r6, #0
	ldrb r4, [r3, #1]
	movs r1, #3
	adds r0, r1, #0
	ands r0, r4
	strb r0, [r3, #1]
	movs r5, #0xf
	ldrh r4, [r3, #2]
	adds r0, r2, #0
	ands r0, r4
	orrs r0, r5
	strh r0, [r3, #2]
	ldrb r0, [r3, #3]
	ands r1, r0
	movs r0, #0x60
	orrs r1, r0
	strb r1, [r3, #3]
	movs r1, #6
	ldrh r0, [r3, #4]
	ands r2, r0
	orrs r2, r1
	strh r2, [r3, #4]
	adds r0, r7, #0
	mov r1, sp
	movs r2, #6
	bl sub_80D3994
	strb r6, [r7, #6]
	b _080A197E
	.align 2, 0
_080A18EC: .4byte 0xFFFFFC00
_080A18F0:
	mov r4, sp
	movs r2, #7
	ldrh r1, [r4]
	ldr r3, _080A1930 @ =0xFFFFFC00
	adds r0, r3, #0
	ands r0, r1
	orrs r0, r2
	strh r0, [r4]
	ldrb r1, [r4, #1]
	movs r2, #3
	adds r0, r2, #0
	ands r0, r1
	movs r1, #0x20
	orrs r0, r1
	strb r0, [r4, #1]
	movs r5, #0x11
	ldrh r1, [r4, #2]
	adds r0, r3, #0
	ands r0, r1
	orrs r0, r5
	strh r0, [r4, #2]
	movs r1, #0x80
	ldrb r0, [r4, #3]
	ands r2, r0
	orrs r2, r1
	strb r2, [r4, #3]
	movs r1, #6
	ldrh r0, [r4, #4]
	ands r3, r0
	orrs r3, r1
	strh r3, [r4, #4]
	b _080A1970
	.align 2, 0
_080A1930: .4byte 0xFFFFFC00
_080A1934:
	mov r3, sp
	movs r4, #7
	ldrh r1, [r3]
	ldr r2, _080A1988 @ =0xFFFFFC00
	adds r0, r2, #0
	ands r0, r1
	orrs r0, r4
	strh r0, [r3]
	ldrb r4, [r3, #1]
	movs r1, #3
	adds r0, r1, #0
	ands r0, r4
	movs r6, #0x60
	orrs r0, r6
	strb r0, [r3, #1]
	movs r5, #0x12
	ldrh r4, [r3, #2]
	adds r0, r2, #0
	ands r0, r4
	orrs r0, r5
	strh r0, [r3, #2]
	ldrb r0, [r3, #3]
	ands r1, r0
	orrs r1, r6
	strb r1, [r3, #3]
	movs r1, #5
	ldrh r0, [r3, #4]
	ands r2, r0
	orrs r2, r1
	strh r2, [r3, #4]
_080A1970:
	movs r4, #0
	adds r0, r7, #0
	mov r1, sp
	movs r2, #6
	bl sub_80D3994
	strb r4, [r7, #6]
_080A197E:
	adds r0, r7, #0
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080A1988: .4byte 0xFFFFFC00

	thumb_func_start sub_80A198C
sub_80A198C: @ 0x080A198C
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r6, r0, #0
	mov r3, sp
	movs r4, #0x29
	ldrh r1, [r3]
	ldr r2, _080A19E8 @ =0xFFFFFC00
	adds r0, r2, #0
	ands r0, r1
	orrs r0, r4
	strh r0, [r3]
	movs r5, #0xe0
	ldrb r4, [r3, #1]
	movs r1, #3
	adds r0, r1, #0
	ands r0, r4
	orrs r0, r5
	strb r0, [r3, #1]
	movs r5, #2
	ldrh r4, [r3, #2]
	adds r0, r2, #0
	ands r0, r4
	orrs r0, r5
	strh r0, [r3, #2]
	ldrb r0, [r3, #3]
	ands r1, r0
	movs r0, #0x20
	orrs r1, r0
	strb r1, [r3, #3]
	movs r1, #1
	ldrh r0, [r3, #4]
	ands r2, r0
	orrs r2, r1
	strh r2, [r3, #4]
	movs r4, #0
	adds r0, r6, #0
	mov r1, sp
	movs r2, #6
	bl sub_80D3994
	strb r4, [r6, #6]
	adds r0, r6, #0
	add sp, #8
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A19E8: .4byte 0xFFFFFC00

	thumb_func_start sub_80A19EC
sub_80A19EC: @ 0x080A19EC
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r6, r0, #0
	mov r2, sp
	movs r4, #0x17
	ldrh r3, [r2]
	ldr r1, _080A1A44 @ =0xFFFFFC00
	adds r0, r1, #0
	ands r0, r3
	orrs r0, r4
	strh r0, [r2]
	movs r5, #0xc0
	ldrb r3, [r2, #1]
	movs r4, #3
	adds r0, r4, #0
	ands r0, r3
	orrs r0, r5
	strb r0, [r2, #1]
	movs r5, #3
	ldrh r3, [r2, #2]
	adds r0, r1, #0
	ands r0, r3
	orrs r0, r5
	strh r0, [r2, #2]
	movs r5, #0
	ldrb r0, [r2, #3]
	ands r4, r0
	strb r4, [r2, #3]
	movs r3, #4
	ldrh r0, [r2, #4]
	ands r1, r0
	orrs r1, r3
	strh r1, [r2, #4]
	adds r0, r6, #0
	mov r1, sp
	movs r2, #6
	bl sub_80D3994
	strb r5, [r6, #6]
	adds r0, r6, #0
	add sp, #8
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A1A44: .4byte 0xFFFFFC00

	thumb_func_start sub_80A1A48
sub_80A1A48: @ 0x080A1A48
	bx lr
	.align 2, 0

	thumb_func_start sub_80A1A4C
sub_80A1A4C: @ 0x080A1A4C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r7, r0, #0
	movs r2, #0
	movs r3, #0xff
_080A1A5C:
	adds r1, r7, r2
	ldrb r0, [r1]
	orrs r0, r3
	strb r0, [r1]
	adds r2, #1
	cmp r2, #6
	ble _080A1A5C
	ldrb r1, [r7, #7]
	movs r3, #8
	rsbs r3, r3, #0
	adds r0, r3, #0
	ands r0, r1
	movs r1, #6
	mov ip, r1
	mov r4, ip
	orrs r0, r4
	movs r1, #0x39
	rsbs r1, r1, #0
	mov sl, r1
	ands r0, r1
	movs r4, #0x30
	mov sb, r4
	mov r1, sb
	orrs r0, r1
	movs r1, #0x3f
	ands r0, r1
	movs r4, #0x80
	orrs r0, r4
	strb r0, [r7, #7]
	ldrb r0, [r7, #8]
	movs r1, #1
	orrs r0, r1
	movs r2, #0xf
	rsbs r2, r2, #0
	ands r0, r2
	movs r1, #0xc
	mov r8, r1
	mov r4, r8
	orrs r0, r4
	movs r6, #0x71
	rsbs r6, r6, #0
	ands r0, r6
	movs r5, #0x60
	orrs r0, r5
	strb r0, [r7, #8]
	ldrh r1, [r7, #8]
	ldr r0, _080A1B30 @ =0xFFFFFC7F
	ands r0, r1
	movs r4, #0xc0
	lsls r4, r4, #2
	adds r1, r4, #0
	orrs r0, r1
	strh r0, [r7, #8]
	ldrb r1, [r7, #9]
	movs r4, #0x1d
	rsbs r4, r4, #0
	adds r0, r4, #0
	ands r0, r1
	movs r1, #0x18
	orrs r0, r1
	movs r1, #0x1f
	ands r0, r1
	movs r1, #0xc0
	orrs r0, r1
	strb r0, [r7, #9]
	ldrb r0, [r7, #0xa]
	ands r3, r0
	mov r0, ip
	orrs r3, r0
	mov r1, sl
	ands r3, r1
	mov r0, sb
	orrs r3, r0
	strb r3, [r7, #0xa]
	ldrh r1, [r7, #0xa]
	ldr r0, _080A1B34 @ =0xFFFFFE3F
	ands r0, r1
	movs r3, #0xc0
	lsls r3, r3, #1
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r7, #0xa]
	ldrb r0, [r7, #0xb]
	ands r2, r0
	mov r0, r8
	orrs r2, r0
	ands r2, r6
	orrs r2, r5
	movs r1, #0x80
	orrs r2, r1
	strb r2, [r7, #0xb]
	ldrb r1, [r7, #0xc]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r1
	ands r0, r4
	movs r1, #4
	orrs r0, r1
	strb r0, [r7, #0xc]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A1B30: .4byte 0xFFFFFC7F
_080A1B34: .4byte 0xFFFFFE3F

	thumb_func_start sub_80A1B38
sub_80A1B38: @ 0x080A1B38
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x10
	adds r7, r0, #0
	mov r8, r1
	adds r4, r2, #0
	adds r5, r3, #0
	mov r0, sp
	bl sub_800EFEC
	mov r0, r8
	adds r1, r4, #0
	adds r2, r5, #0
	ldr r3, [sp, #0x28]
	bl sub_80A1D20
	adds r6, r0, #0
	cmp r6, #0
	bge _080A1B62
	b _080A1C82
_080A1B62:
	ldr r1, _080A1B88 @ =gUnknown_081043BC
	lsls r0, r6, #1
	adds r0, r0, r6
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	cmp r0, #0x12
	ble _080A1B74
	b _080A1C82
_080A1B74:
	cmp r0, #0xd
	bgt _080A1C26
	movs r1, #0x2a
	cmp r0, #0xd
	bhi _080A1BFE
	lsls r0, r0, #2
	ldr r1, _080A1B8C @ =_080A1B90
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A1B88: .4byte gUnknown_081043BC
_080A1B8C: .4byte _080A1B90
_080A1B90: @ jump table
	.4byte _080A1BC8 @ case 0
	.4byte _080A1BCC @ case 1
	.4byte _080A1BD0 @ case 2
	.4byte _080A1BD4 @ case 3
	.4byte _080A1BD8 @ case 4
	.4byte _080A1BDC @ case 5
	.4byte _080A1BE0 @ case 6
	.4byte _080A1BE4 @ case 7
	.4byte _080A1BE8 @ case 8
	.4byte _080A1BEC @ case 9
	.4byte _080A1BF0 @ case 10
	.4byte _080A1BF4 @ case 11
	.4byte _080A1BF8 @ case 12
	.4byte _080A1BFC @ case 13
_080A1BC8:
	movs r1, #0x2a
	b _080A1BFE
_080A1BCC:
	movs r1, #0x2b
	b _080A1BFE
_080A1BD0:
	movs r1, #0x2c
	b _080A1BFE
_080A1BD4:
	movs r1, #0x2d
	b _080A1BFE
_080A1BD8:
	movs r1, #0x2e
	b _080A1BFE
_080A1BDC:
	movs r1, #0x2f
	b _080A1BFE
_080A1BE0:
	movs r1, #0x30
	b _080A1BFE
_080A1BE4:
	movs r1, #0x31
	b _080A1BFE
_080A1BE8:
	movs r1, #0x32
	b _080A1BFE
_080A1BEC:
	movs r1, #0x33
	b _080A1BFE
_080A1BF0:
	movs r1, #0x34
	b _080A1BFE
_080A1BF4:
	movs r1, #0x35
	b _080A1BFE
_080A1BF8:
	movs r1, #0x37
	b _080A1BFE
_080A1BFC:
	movs r1, #0x28
_080A1BFE:
	add r5, sp, #4
	add r4, sp, #8
	adds r0, r4, #0
	bl sub_800DCA8
	ldrb r1, [r4]
	mov r0, sp
	adds r0, #9
	ldrb r0, [r0]
	lsls r0, r0, #8
	orrs r0, r1
	mov r1, sp
	adds r1, #0xa
	ldrb r1, [r1]
	lsls r1, r1, #0x10
	orrs r1, r0
	adds r0, r5, #0
	bl sub_800F004
	b _080A1C74
_080A1C26:
	movs r1, #0
	subs r0, #0xe
	cmp r0, #4
	bhi _080A1C62
	lsls r0, r0, #2
	ldr r1, _080A1C38 @ =_080A1C3C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A1C38: .4byte _080A1C3C
_080A1C3C: @ jump table
	.4byte _080A1C50 @ case 0
	.4byte _080A1C54 @ case 1
	.4byte _080A1C58 @ case 2
	.4byte _080A1C5C @ case 3
	.4byte _080A1C60 @ case 4
_080A1C50:
	movs r1, #0
	b _080A1C62
_080A1C54:
	movs r1, #1
	b _080A1C62
_080A1C58:
	movs r1, #2
	b _080A1C62
_080A1C5C:
	movs r1, #4
	b _080A1C62
_080A1C60:
	movs r1, #0x32
_080A1C62:
	add r5, sp, #4
	add r4, sp, #0xc
	adds r0, r4, #0
	bl sub_800DF50
	ldrb r1, [r4]
	adds r0, r5, #0
	bl sub_800F040
_080A1C74:
	ldr r0, [sp, #4]
	str r0, [sp]
	mov r0, r8
	adds r1, r6, #0
	ldr r2, [sp, #0x28]
	bl sub_80A1C94
_080A1C82:
	ldr r0, [sp]
	str r0, [r7]
	adds r0, r7, #0
	add sp, #0x10
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_80A1C94
sub_80A1C94: @ 0x080A1C94
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80A1EA8
	adds r1, r0, #0
	lsrs r0, r1, #3
	cmp r0, #6
	bhi _080A1CB4
	adds r2, r4, r0
	movs r0, #7
	ands r0, r1
	movs r1, #1
	lsls r1, r0
	ldrb r0, [r2]
	bics r0, r1
	strb r0, [r2]
_080A1CB4:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80A1CBC
sub_80A1CBC: @ 0x080A1CBC
	push {r4, r5, lr}
	sub sp, #0x10
	adds r4, r0, #0
	ldr r3, _080A1CF4 @ =gUnknown_081043BC
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r2, r0, r3
	ldr r1, [r2]
	str r1, [sp]
	adds r3, #4
	adds r0, r0, r3
	ldr r0, [r0]
	str r0, [sp, #4]
	mov r1, sp
	ldrh r0, [r2, #8]
	strh r0, [r1, #8]
	ldrh r0, [r2, #0xa]
	strh r0, [r1, #0xa]
	ldr r0, [sp]
	cmp r0, #0x14
	beq _080A1D00
	cmp r0, #0x14
	bgt _080A1CF8
	cmp r0, #0x13
	beq _080A1CFC
	b _080A1D04
	.align 2, 0
_080A1CF4: .4byte gUnknown_081043BC
_080A1CF8:
	cmp r0, #0x15
	bne _080A1D04
_080A1CFC:
	movs r0, #1
	b _080A1D06
_080A1D00:
	movs r0, #2
	b _080A1D06
_080A1D04:
	movs r0, #0
_080A1D06:
	str r0, [sp, #0xc]
	adds r0, r4, #0
	mov r1, sp
	ldm r1!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldr r1, [r1]
	str r1, [r0]
	adds r0, r4, #0
	add sp, #0x10
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80A1D20
sub_80A1D20: @ 0x080A1D20
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	str r0, [sp, #0x10]
	mov sl, r1
	adds r5, r2, #0
	mov sb, r3
	movs r6, #0
	movs r0, #0x1a
	mov ip, r0
	cmp r3, #1
	beq _080A1D4C
	cmp r3, #1
	ble _080A1D62
	cmp r3, #2
	beq _080A1D54
	cmp r3, #3
	beq _080A1D5C
	b _080A1D62
_080A1D4C:
	movs r6, #0x1a
	movs r1, #0x3a
	mov ip, r1
	b _080A1D62
_080A1D54:
	movs r6, #0x3a
	movs r2, #0x5e
	mov ip, r2
	b _080A1D62
_080A1D5C:
	movs r6, #0x5e
	movs r4, #0x60
	mov ip, r4
_080A1D62:
	cmp r6, ip
	bge _080A1DDE
	ldr r0, _080A1EA0 @ =gUnknown_081043BC
	mov r8, r0
	mov r3, sp
	lsls r0, r6, #1
	adds r0, r0, r6
	lsls r0, r0, #2
	adds r1, r0, #0
	adds r1, #8
	mov r7, r8
	adds r4, r1, r7
	str r0, [sp, #0x18]
_080A1D7C:
	mov r0, r8
	adds r0, #4
	ldr r1, [sp, #0x18]
	adds r0, r1, r0
	ldr r0, [r0]
	cmp r0, sl
	bne _080A1DD0
	movs r2, #0
	ldrsh r0, [r4, r2]
	movs r7, #2
	ldrsh r1, [r4, r7]
	strh r0, [r3]
	strh r1, [r3, #2]
	adds r0, #0x10
	strh r0, [r3, #4]
	adds r1, #0x10
	strh r1, [r3, #6]
	movs r0, #0
	ldrsh r2, [r3, r0]
	movs r1, #4
	ldrsh r0, [r5, r1]
	subs r2, r2, r0
	movs r7, #0
	ldrsh r0, [r5, r7]
	movs r7, #4
	ldrsh r1, [r3, r7]
	subs r0, r0, r1
	ands r2, r0
	movs r1, #2
	ldrsh r0, [r3, r1]
	movs r7, #6
	ldrsh r1, [r5, r7]
	subs r0, r0, r1
	ands r2, r0
	movs r1, #2
	ldrsh r0, [r5, r1]
	movs r7, #6
	ldrsh r1, [r3, r7]
	subs r0, r0, r1
	ands r2, r0
	cmp r2, #0
	blt _080A1DDE
_080A1DD0:
	adds r4, #0xc
	ldr r0, [sp, #0x18]
	adds r0, #0xc
	str r0, [sp, #0x18]
	adds r6, #1
	cmp r6, ip
	blt _080A1D7C
_080A1DDE:
	cmp r6, ip
	bne _080A1E74
	movs r6, #0x60
	movs r1, #0x74
	mov ip, r1
	ldr r0, _080A1EA0 @ =gUnknown_081043BC
	add r3, sp, #8
	movs r2, #0x90
	lsls r2, r2, #3
	adds r7, r0, r2
	ldr r4, _080A1EA4 @ =0x00000484
	adds r4, r4, r0
	mov r8, r4
_080A1DF8:
	mov r1, r8
	ldr r0, [r1]
	cmp r0, sl
	bne _080A1E60
	movs r2, #0x20
	movs r4, #0x20
	str r4, [sp, #0x14]
	ldr r0, [r7]
	cmp r0, #0x14
	bne _080A1E0E
	movs r2, #0x30
_080A1E0E:
	cmp r0, #0x12
	bne _080A1E18
	movs r0, #0x10
	str r0, [sp, #0x14]
	movs r2, #0x10
_080A1E18:
	movs r1, #8
	ldrsh r0, [r7, r1]
	movs r4, #0xa
	ldrsh r1, [r7, r4]
	strh r0, [r3]
	strh r1, [r3, #2]
	adds r0, r0, r2
	strh r0, [r3, #4]
	ldr r0, [sp, #0x14]
	adds r1, r1, r0
	strh r1, [r3, #6]
	movs r1, #0
	ldrsh r2, [r3, r1]
	movs r4, #4
	ldrsh r0, [r5, r4]
	subs r2, r2, r0
	movs r1, #0
	ldrsh r0, [r5, r1]
	movs r4, #4
	ldrsh r1, [r3, r4]
	subs r0, r0, r1
	ands r2, r0
	movs r1, #2
	ldrsh r0, [r3, r1]
	movs r4, #6
	ldrsh r1, [r5, r4]
	subs r0, r0, r1
	ands r2, r0
	movs r1, #2
	ldrsh r0, [r5, r1]
	movs r4, #6
	ldrsh r1, [r3, r4]
	subs r0, r0, r1
	ands r2, r0
	cmp r2, #0
	blt _080A1E6C
_080A1E60:
	adds r7, #0xc
	movs r0, #0xc
	add r8, r0
	adds r6, #1
	cmp r6, ip
	blt _080A1DF8
_080A1E6C:
	cmp r6, ip
	bne _080A1E74
	movs r6, #1
	rsbs r6, r6, #0
_080A1E74:
	cmp r6, #0
	blt _080A1E8C
	ldr r0, [sp, #0x10]
	adds r1, r6, #0
	mov r2, sb
	bl sub_80A1ED4
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080A1E8C
	movs r6, #1
	rsbs r6, r6, #0
_080A1E8C:
	adds r0, r6, #0
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080A1EA0: .4byte gUnknown_081043BC
_080A1EA4: .4byte 0x00000484

	thumb_func_start sub_80A1EA8
sub_80A1EA8: @ 0x080A1EA8
	push {lr}
	adds r0, r1, #0
	cmp r0, #0x5f
	bhi _080A1ECE
	cmp r2, #1
	beq _080A1EC2
	cmp r2, #1
	ble _080A1ED0
	cmp r2, #2
	beq _080A1EC6
	cmp r2, #3
	beq _080A1ECA
	b _080A1ED0
_080A1EC2:
	subs r0, #0x1a
	b _080A1ED0
_080A1EC6:
	subs r0, #0x3a
	b _080A1ED0
_080A1ECA:
	subs r0, #0x5e
	b _080A1ED0
_080A1ECE:
	subs r0, #0x3c
_080A1ED0:
	pop {r1}
	bx r1

	thumb_func_start sub_80A1ED4
sub_80A1ED4: @ 0x080A1ED4
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80A1EA8
	adds r2, r0, #0
	lsrs r0, r2, #3
	adds r4, r4, r0
	ldrb r0, [r4]
	movs r1, #7
	ands r1, r2
	asrs r0, r1
	movs r1, #1
	ands r0, r1
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_80A1EF4
sub_80A1EF4: @ 0x080A1EF4
	push {lr}
	adds r2, r0, #0
	adds r0, r1, #0
	movs r1, #0
	cmp r0, #0x5f
	bls _080A1FBC
	subs r0, #0x60
	cmp r0, #0xe
	bhi _080A1FBC
	lsls r0, r0, #2
	ldr r1, _080A1F10 @ =_080A1F14
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A1F10: .4byte _080A1F14
_080A1F14: @ jump table
	.4byte _080A1F50 @ case 0
	.4byte _080A1F56 @ case 1
	.4byte _080A1F5C @ case 2
	.4byte _080A1F6C @ case 3
	.4byte _080A1F72 @ case 4
	.4byte _080A1F78 @ case 5
	.4byte _080A1F7E @ case 6
	.4byte _080A1F82 @ case 7
	.4byte _080A1F88 @ case 8
	.4byte _080A1F8E @ case 9
	.4byte _080A1F94 @ case 10
	.4byte _080A1F9A @ case 11
	.4byte _080A1FA0 @ case 12
	.4byte _080A1FA6 @ case 13
	.4byte _080A1FB6 @ case 14
_080A1F50:
	ldrb r0, [r2, #7]
	lsls r0, r0, #0x1d
	b _080A1FBA
_080A1F56:
	ldrb r0, [r2, #7]
	lsls r0, r0, #0x1a
	b _080A1FBA
_080A1F5C:
	ldrb r0, [r2, #7]
	lsrs r0, r0, #6
	ldrb r1, [r2, #8]
	movs r2, #1
	ands r1, r2
	lsls r1, r1, #2
	orrs r1, r0
	b _080A1FBC
_080A1F6C:
	ldrb r0, [r2, #8]
	lsls r0, r0, #0x1c
	b _080A1FBA
_080A1F72:
	ldrb r0, [r2, #8]
	lsls r0, r0, #0x19
	b _080A1FBA
_080A1F78:
	ldrh r0, [r2, #8]
	lsls r0, r0, #0x16
	b _080A1FBA
_080A1F7E:
	ldrb r0, [r2, #9]
	b _080A1FB8
_080A1F82:
	ldrb r0, [r2, #9]
	lsrs r1, r0, #5
	b _080A1FBC
_080A1F88:
	ldrb r0, [r2, #0xa]
	lsls r0, r0, #0x1d
	b _080A1FBA
_080A1F8E:
	ldrb r0, [r2, #0xa]
	lsls r0, r0, #0x1a
	b _080A1FBA
_080A1F94:
	ldrh r0, [r2, #0xa]
	lsls r0, r0, #0x17
	b _080A1FBA
_080A1F9A:
	ldrb r0, [r2, #0xb]
	lsls r0, r0, #0x1c
	b _080A1FBA
_080A1FA0:
	ldrb r0, [r2, #0xb]
	lsls r0, r0, #0x19
	b _080A1FBA
_080A1FA6:
	ldrb r0, [r2, #0xb]
	lsrs r0, r0, #7
	ldrb r1, [r2, #0xc]
	movs r2, #3
	ands r1, r2
	lsls r1, r1, #1
	orrs r1, r0
	b _080A1FBC
_080A1FB6:
	ldrb r0, [r2, #0xc]
_080A1FB8:
	lsls r0, r0, #0x1b
_080A1FBA:
	lsrs r1, r0, #0x1d
_080A1FBC:
	adds r0, r1, #0
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80A1FC4
sub_80A1FC4: @ 0x080A1FC4
	push {r4, r5, lr}
	adds r3, r0, #0
	cmp r1, #0x5f
	bhi _080A1FCE
	b _080A2206
_080A1FCE:
	adds r0, r1, #0
	subs r0, #0x60
	cmp r0, #0xe
	bls _080A1FD8
	b _080A2206
_080A1FD8:
	lsls r0, r0, #2
	ldr r1, _080A1FE4 @ =_080A1FE8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A1FE4: .4byte _080A1FE8
_080A1FE8: @ jump table
	.4byte _080A2024 @ case 0
	.4byte _080A2042 @ case 1
	.4byte _080A2062 @ case 2
	.4byte _080A2094 @ case 3
	.4byte _080A20AE @ case 4
	.4byte _080A20CE @ case 5
	.4byte _080A20F0 @ case 6
	.4byte _080A210A @ case 7
	.4byte _080A2122 @ case 8
	.4byte _080A213A @ case 9
	.4byte _080A215A @ case 10
	.4byte _080A217C @ case 11
	.4byte _080A2196 @ case 12
	.4byte _080A21B6 @ case 13
	.4byte _080A21E8 @ case 14
_080A2024:
	ldrb r1, [r3, #7]
	lsls r0, r1, #0x1d
	lsrs r0, r0, #0x1d
	subs r2, r0, r2
	cmp r2, #0
	bge _080A2032
	movs r2, #0
_080A2032:
	movs r0, #7
	ands r2, r0
	movs r0, #8
	rsbs r0, r0, #0
	ands r0, r1
	orrs r0, r2
	strb r0, [r3, #7]
	b _080A2206
_080A2042:
	ldrb r4, [r3, #7]
	lsls r0, r4, #0x1a
	lsrs r0, r0, #0x1d
	subs r1, r0, r2
	cmp r1, #0
	bge _080A2050
	movs r1, #0
_080A2050:
	movs r0, #7
	ands r1, r0
	lsls r1, r1, #3
	movs r0, #0x39
	rsbs r0, r0, #0
	ands r0, r4
	orrs r0, r1
	strb r0, [r3, #7]
	b _080A2206
_080A2062:
	ldrb r4, [r3, #7]
	lsrs r1, r4, #6
	ldrb r0, [r3, #8]
	movs r5, #1
	ands r0, r5
	lsls r0, r0, #2
	orrs r0, r1
	subs r2, r0, r2
	cmp r2, #0
	bge _080A2078
	movs r2, #0
_080A2078:
	movs r1, #3
	ands r1, r2
	lsls r1, r1, #6
	movs r0, #0x3f
	ands r0, r4
	orrs r0, r1
	strb r0, [r3, #7]
	lsrs r1, r2, #2
	ands r1, r5
	ldrb r2, [r3, #8]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r2
	b _080A20C8
_080A2094:
	ldrb r4, [r3, #8]
	lsls r0, r4, #0x1c
	lsrs r0, r0, #0x1d
	subs r1, r0, r2
	cmp r1, #0
	bge _080A20A2
	movs r1, #0
_080A20A2:
	movs r0, #7
	ands r1, r0
	lsls r1, r1, #1
	movs r0, #0xf
	rsbs r0, r0, #0
	b _080A20C6
_080A20AE:
	ldrb r4, [r3, #8]
	lsls r0, r4, #0x19
	lsrs r0, r0, #0x1d
	subs r1, r0, r2
	cmp r1, #0
	bge _080A20BC
	movs r1, #0
_080A20BC:
	movs r0, #7
	ands r1, r0
	lsls r1, r1, #4
	movs r0, #0x71
	rsbs r0, r0, #0
_080A20C6:
	ands r0, r4
_080A20C8:
	orrs r0, r1
	strb r0, [r3, #8]
	b _080A2206
_080A20CE:
	ldrh r4, [r3, #8]
	lsls r0, r4, #0x16
	lsrs r0, r0, #0x1d
	subs r1, r0, r2
	cmp r1, #0
	bge _080A20DC
	movs r1, #0
_080A20DC:
	movs r0, #7
	ands r1, r0
	lsls r1, r1, #7
	ldr r0, _080A20EC @ =0xFFFFFC7F
	ands r0, r4
	orrs r0, r1
	strh r0, [r3, #8]
	b _080A2206
	.align 2, 0
_080A20EC: .4byte 0xFFFFFC7F
_080A20F0:
	ldrb r4, [r3, #9]
	lsls r0, r4, #0x1b
	lsrs r0, r0, #0x1d
	subs r1, r0, r2
	cmp r1, #0
	bge _080A20FE
	movs r1, #0
_080A20FE:
	movs r0, #7
	ands r1, r0
	lsls r1, r1, #2
	movs r0, #0x1d
	rsbs r0, r0, #0
	b _080A211A
_080A210A:
	ldrb r4, [r3, #9]
	lsrs r0, r4, #5
	subs r0, r0, r2
	cmp r0, #0
	bge _080A2116
	movs r0, #0
_080A2116:
	lsls r1, r0, #5
	movs r0, #0x1f
_080A211A:
	ands r0, r4
	orrs r0, r1
	strb r0, [r3, #9]
	b _080A2206
_080A2122:
	ldrb r4, [r3, #0xa]
	lsls r0, r4, #0x1d
	lsrs r0, r0, #0x1d
	subs r1, r0, r2
	cmp r1, #0
	bge _080A2130
	movs r1, #0
_080A2130:
	movs r0, #7
	ands r1, r0
	movs r0, #8
	rsbs r0, r0, #0
	b _080A2152
_080A213A:
	ldrb r4, [r3, #0xa]
	lsls r0, r4, #0x1a
	lsrs r0, r0, #0x1d
	subs r1, r0, r2
	cmp r1, #0
	bge _080A2148
	movs r1, #0
_080A2148:
	movs r0, #7
	ands r1, r0
	lsls r1, r1, #3
	movs r0, #0x39
	rsbs r0, r0, #0
_080A2152:
	ands r0, r4
	orrs r0, r1
	strb r0, [r3, #0xa]
	b _080A2206
_080A215A:
	ldrh r4, [r3, #0xa]
	lsls r0, r4, #0x17
	lsrs r0, r0, #0x1d
	subs r1, r0, r2
	cmp r1, #0
	bge _080A2168
	movs r1, #0
_080A2168:
	movs r0, #7
	ands r1, r0
	lsls r1, r1, #6
	ldr r0, _080A2178 @ =0xFFFFFE3F
	ands r0, r4
	orrs r0, r1
	strh r0, [r3, #0xa]
	b _080A2206
	.align 2, 0
_080A2178: .4byte 0xFFFFFE3F
_080A217C:
	ldrb r4, [r3, #0xb]
	lsls r0, r4, #0x1c
	lsrs r0, r0, #0x1d
	subs r1, r0, r2
	cmp r1, #0
	bge _080A218A
	movs r1, #0
_080A218A:
	movs r0, #7
	ands r1, r0
	lsls r1, r1, #1
	movs r0, #0xf
	rsbs r0, r0, #0
	b _080A21AE
_080A2196:
	ldrb r4, [r3, #0xb]
	lsls r0, r4, #0x19
	lsrs r0, r0, #0x1d
	subs r1, r0, r2
	cmp r1, #0
	bge _080A21A4
	movs r1, #0
_080A21A4:
	movs r0, #7
	ands r1, r0
	lsls r1, r1, #4
	movs r0, #0x71
	rsbs r0, r0, #0
_080A21AE:
	ands r0, r4
	orrs r0, r1
	strb r0, [r3, #0xb]
	b _080A2206
_080A21B6:
	ldrb r4, [r3, #0xb]
	lsrs r1, r4, #7
	ldrb r0, [r3, #0xc]
	movs r5, #3
	ands r0, r5
	lsls r0, r0, #1
	orrs r0, r1
	subs r2, r0, r2
	cmp r2, #0
	bge _080A21CC
	movs r2, #0
_080A21CC:
	movs r1, #1
	ands r1, r2
	lsls r1, r1, #7
	movs r0, #0x7f
	ands r0, r4
	orrs r0, r1
	strb r0, [r3, #0xb]
	lsrs r1, r2, #1
	ands r1, r5
	ldrb r2, [r3, #0xc]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	b _080A2202
_080A21E8:
	ldrb r4, [r3, #0xc]
	lsls r0, r4, #0x1b
	lsrs r0, r0, #0x1d
	subs r1, r0, r2
	cmp r1, #0
	bge _080A21F6
	movs r1, #0
_080A21F6:
	movs r0, #7
	ands r1, r0
	lsls r1, r1, #2
	movs r0, #0x1d
	rsbs r0, r0, #0
	ands r0, r4
_080A2202:
	orrs r0, r1
	strb r0, [r3, #0xc]
_080A2206:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80A220C
sub_80A220C: @ 0x080A220C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	adds r7, r0, #0
	adds r4, r1, #0
	add r1, sp, #0x14
	movs r0, #0x1e
	movs r2, #1
	movs r3, #0
	mov r8, r3
	movs r5, #0
	strh r0, [r1]
	strh r2, [r1, #2]
	adds r0, r7, #0
	bl sub_80084DC
	ldr r0, _080A245C @ =gUnknown_080E825C
	str r0, [r7, #4]
	str r4, [r7, #8]
	str r5, [r7, #0xc]
	movs r0, #4
	bl sub_80005D4
	adds r6, r0, #0
	add r0, sp, #0xc
	bl sub_800835C
	add r4, sp, #0x10
	adds r0, r4, #0
	bl sub_800770C
	ldr r0, [r7, #0xc]
	str r0, [sp]
	add r0, sp, #0xc
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #0x1f
	movs r3, #0xf
	bl sub_8050CC0
	str r0, [r7, #0x10]
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007714
	add r0, sp, #0xc
	movs r1, #2
	bl sub_8008364
	adds r0, r7, #0
	adds r0, #0x14
	movs r1, #1
	bl sub_8008B54
	adds r0, r7, #0
	adds r0, #0x18
	movs r1, #0
	bl sub_8008B54
	adds r0, r7, #0
	adds r0, #0x1c
	movs r1, #2
	bl sub_8008B54
	adds r4, r7, #0
	adds r4, #0x20
	ldr r1, _080A2460 @ =gUnknown_0874F34C
	adds r0, r4, #0
	bl sub_805E6CC
	adds r6, r7, #0
	adds r6, #0x50
	ldr r1, _080A2464 @ =gUnknown_087506E0
	adds r0, r6, #0
	bl sub_805E6CC
	movs r1, #0x80
	adds r1, r1, r7
	mov sb, r1
	ldr r1, _080A2468 @ =gUnknown_08728208
	mov r0, sb
	bl sub_805E6CC
	adds r0, r7, #0
	adds r0, #0xb0
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	adds r0, r7, #0
	adds r0, #0xc4
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #4]
	strh r5, [r0, #6]
	strh r5, [r0, #8]
	str r5, [r0, #0xc]
	mov r2, r8
	strb r2, [r0, #0x10]
	strb r2, [r0, #0x11]
	str r5, [r0, #0x14]
	strb r2, [r0, #0x18]
	adds r0, #0x1c
	adds r1, r6, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	adds r0, r7, #0
	adds r0, #0xf4
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #4]
	strh r5, [r0, #6]
	strh r5, [r0, #8]
	str r5, [r0, #0xc]
	mov r3, r8
	strb r3, [r0, #0x10]
	strb r3, [r0, #0x11]
	str r5, [r0, #0x14]
	strb r3, [r0, #0x18]
	movs r1, #0x88
	lsls r1, r1, #1
	adds r0, r7, r1
	mov r1, sb
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	movs r2, #0x92
	lsls r2, r2, #1
	adds r0, r7, r2
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #4]
	strh r5, [r0, #6]
	strh r5, [r0, #8]
	str r5, [r0, #0xc]
	mov r3, r8
	strb r3, [r0, #0x10]
	strb r3, [r0, #0x11]
	str r5, [r0, #0x14]
	strb r3, [r0, #0x18]
	movs r0, #0xba
	lsls r0, r0, #1
	adds r4, r7, r0
	adds r0, r4, #0
	bl sub_8007874
	adds r0, r4, #0
	movs r1, #7
	bl sub_8007B54
	str r0, [r4, #4]
	movs r1, #0xbe
	lsls r1, r1, #1
	adds r4, r7, r1
	adds r0, r4, #0
	bl sub_8007128
	adds r0, r4, #0
	bl sub_800736C
	str r0, [r4, #4]
	movs r2, #0xc2
	lsls r2, r2, #1
	adds r4, r7, r2
	adds r0, r4, #0
	bl sub_8007128
	adds r0, r4, #0
	bl sub_800736C
	str r0, [r4, #4]
	movs r3, #0xc6
	lsls r3, r3, #1
	adds r4, r7, r3
	adds r0, r4, #0
	bl sub_8007128
	adds r0, r4, #0
	bl sub_800736C
	str r0, [r4, #4]
	movs r0, #0xca
	lsls r0, r0, #1
	adds r4, r7, r0
	adds r0, r4, #0
	bl sub_8007874
	adds r0, r4, #0
	movs r1, #6
	bl sub_8007B54
	str r0, [r4, #4]
	movs r1, #0xce
	lsls r1, r1, #1
	adds r4, r7, r1
	adds r0, r4, #0
	bl sub_8007128
	adds r0, r4, #0
	bl sub_800736C
	str r0, [r4, #4]
	movs r2, #0xd2
	lsls r2, r2, #1
	adds r4, r7, r2
	adds r0, r4, #0
	bl sub_8007874
	adds r0, r4, #0
	movs r1, #4
	bl sub_8007B54
	str r0, [r4, #4]
	movs r3, #0xd6
	lsls r3, r3, #1
	adds r4, r7, r3
	adds r0, r4, #0
	bl sub_8007128
	adds r0, r4, #0
	bl sub_800736C
	str r0, [r4, #4]
	movs r0, #0xef
	lsls r0, r0, #1
	adds r3, r7, r0
	ldrb r1, [r3]
	movs r6, #4
	rsbs r6, r6, #0
	adds r0, r6, #0
	ands r0, r1
	movs r1, #0x7d
	rsbs r1, r1, #0
	ands r0, r1
	strb r0, [r3]
	movs r1, #0x87
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, _080A246C @ =gUnknown_080E8268
	str r1, [r0]
	mov r2, r8
	strb r2, [r0, #4]
	strb r2, [r0, #5]
	str r5, [r0, #8]
	ldr r0, [r7, #8]
	ldrb r0, [r0, #0x11]
	strb r0, [r3]
	ldr r0, [r7, #8]
	ldrb r0, [r0, #0x10]
	lsls r1, r0, #0x1d
	lsrs r0, r0, #3
	lsls r2, r0, #3
	subs r2, r2, r0
	lsrs r1, r1, #0x1d
	adds r1, r1, r2
	subs r1, #1
	movs r2, #0xf0
	lsls r2, r2, #1
	adds r0, r7, r2
	strh r1, [r0]
	ldr r0, [r7, #8]
	ldrb r0, [r0, #0x12]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1b
	cmp r0, #5
	bhi _080A24A8
	adds r4, r3, #0
	ldrb r3, [r4]
	lsls r0, r3, #0x19
	lsrs r2, r0, #0x1b
	cmp r2, #0
	bne _080A2470
	lsls r0, r3, #0x1e
	lsrs r0, r0, #0x1e
	subs r0, #1
	movs r1, #3
	ands r0, r1
	adds r1, r6, #0
	ands r1, r3
	orrs r1, r0
	strb r1, [r4]
	movs r2, #0x1d
	b _080A2472
	.align 2, 0
_080A245C: .4byte gUnknown_080E825C
_080A2460: .4byte gUnknown_0874F34C
_080A2464: .4byte gUnknown_087506E0
_080A2468: .4byte gUnknown_08728208
_080A246C: .4byte gUnknown_080E8268
_080A2470:
	subs r2, #1
_080A2472:
	movs r0, #0x1f
	ands r2, r0
	lsls r2, r2, #2
	ldrb r1, [r4]
	movs r0, #0x7d
	rsbs r0, r0, #0
	ands r0, r1
	orrs r0, r2
	strb r0, [r4]
	movs r3, #0xef
	lsls r3, r3, #1
	adds r0, r7, r3
	ldrb r1, [r0]
	lsls r0, r1, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #3
	bne _080A24A8
	lsls r0, r1, #0x19
	lsrs r0, r0, #0x1b
	cmp r0, #0x1d
	bne _080A24A8
	movs r0, #0xf0
	lsls r0, r0, #1
	adds r1, r7, r0
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
_080A24A8:
	movs r1, #0xef
	lsls r1, r1, #1
	adds r0, r7, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #1
	beq _080A24DC
	cmp r0, #1
	bgt _080A24C2
	cmp r0, #0
	beq _080A24CC
	b _080A24E4
_080A24C2:
	cmp r0, #2
	beq _080A24D4
	cmp r0, #3
	beq _080A24DC
	b _080A24E4
_080A24CC:
	movs r2, #0xf1
	lsls r2, r2, #1
	adds r1, r7, r2
	b _080A24E2
_080A24D4:
	movs r2, #0xf1
	lsls r2, r2, #1
	adds r1, r7, r2
	b _080A24E2
_080A24DC:
	movs r3, #0xf1
	lsls r3, r3, #1
	adds r1, r7, r3
_080A24E2:
	strh r0, [r1]
_080A24E4:
	ldr r0, [r7, #8]
	ldr r1, _080A2514 @ =0x00001CD4
	adds r0, r0, r1
	bl sub_80A041C
	cmp r0, #0
	bne _080A251C
	movs r2, #0xf3
	lsls r2, r2, #1
	adds r1, r7, r2
	ldr r0, _080A2518 @ =0x0000FFFF
	strh r0, [r1]
	movs r3, #0xf4
	lsls r3, r3, #1
	adds r1, r7, r3
	movs r0, #1
	rsbs r0, r0, #0
	strh r0, [r1]
	movs r0, #0xf5
	lsls r0, r0, #1
	adds r1, r7, r0
	movs r0, #1
	rsbs r0, r0, #0
	b _080A259C
	.align 2, 0
_080A2514: .4byte 0x00001CD4
_080A2518: .4byte 0x0000FFFF
_080A251C:
	ldr r0, [r7, #8]
	ldr r1, _080A2568 @ =0x00001CD4
	adds r0, r0, r1
	bl sub_80A1480
	adds r4, r0, #0
	movs r3, #0xc8
	str r3, [sp, #0x18]
	ldrb r0, [r4]
	lsrs r2, r0, #3
	lsls r1, r2, #3
	subs r1, r1, r2
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1d
	adds r1, r1, r0
	str r1, [sp, #0x1c]
	add r2, sp, #0x1c
	add r0, sp, #0x18
	cmp r3, r1
	bls _080A2546
	adds r0, r2, #0
_080A2546:
	ldr r0, [r0]
	subs r0, #1
	movs r2, #0xf3
	lsls r2, r2, #1
	adds r1, r7, r2
	strh r0, [r1]
	ldrb r0, [r4, #1]
	lsls r0, r0, #0x1e
	lsrs r1, r0, #0x1e
	cmp r1, #1
	beq _080A2586
	cmp r1, #1
	bgt _080A256C
	cmp r1, #0
	beq _080A2576
	b _080A258E
	.align 2, 0
_080A2568: .4byte 0x00001CD4
_080A256C:
	cmp r1, #2
	beq _080A257E
	cmp r1, #3
	beq _080A2586
	b _080A258E
_080A2576:
	movs r3, #0xf4
	lsls r3, r3, #1
	adds r0, r7, r3
	b _080A258C
_080A257E:
	movs r3, #0xf4
	lsls r3, r3, #1
	adds r0, r7, r3
	b _080A258C
_080A2586:
	movs r2, #0xf4
	lsls r2, r2, #1
	adds r0, r7, r2
_080A258C:
	strh r1, [r0]
_080A258E:
	ldrb r0, [r4, #1]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1b
	adds r0, #1
	movs r3, #0xf5
	lsls r3, r3, #1
	adds r1, r7, r3
_080A259C:
	strh r0, [r1]
	adds r0, r7, #0
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_80A25B0
sub_80A25B0: @ 0x080A25B0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	mov sl, r0
	adds r7, r1, #0
	adds r0, r7, #0
	bl sub_8008724
	adds r0, r7, #0
	bl sub_80A2BA4
	adds r0, r7, #0
	bl sub_80A303C
	adds r0, r7, #0
	bl sub_8008918
	mov r1, sp
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl sub_80005D4
	adds r4, r0, #0
	adds r0, r7, #0
	bl sub_8008918
	adds r1, r0, #0
	movs r6, #0
	str r6, [r4]
	str r6, [r4, #4]
	ldr r0, _080A2668 @ =gUnknown_080E5B80
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl sub_8009300
	str r4, [sp, #4]
	ldr r1, _080A266C @ =0x00000889
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl sub_800934C
	adds r0, r7, #0
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
	ldr r0, _080A2670 @ =0x00000216
	adds r1, r7, r0
	movs r0, #2
	strb r0, [r1]
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r7, r1
	strh r6, [r0]
	mov r8, r6
	add r2, sp, #8
	mov sb, r2
	mov r3, sp
	adds r3, #0xc
	str r3, [sp, #0x14]
_080A2640:
	adds r0, r7, #0
	bl sub_80087C8
	adds r0, r7, #0
	bl sub_80088B8
	movs r6, #0x85
	lsls r6, r6, #2
	adds r0, r7, r6
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #4
	bls _080A265C
	b _080A28E4
_080A265C:
	lsls r0, r0, #2
	ldr r1, _080A2674 @ =_080A2678
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A2668: .4byte gUnknown_080E5B80
_080A266C: .4byte 0x00000889
_080A2670: .4byte 0x00000216
_080A2674: .4byte _080A2678
_080A2678: @ jump table
	.4byte _080A268C @ case 0
	.4byte _080A26D0 @ case 1
	.4byte _080A2884 @ case 2
	.4byte _080A28A4 @ case 3
	.4byte _080A28D4 @ case 4
_080A268C:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _080A269A
	b _080A28E4
_080A269A:
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r7, r2
	b _080A2898
_080A26A2:
	ldr r3, _080A26CC @ =0x000001ED
	adds r0, r1, r3
	ldrb r1, [r0]
	movs r6, #0x88
	lsls r6, r6, #2
	adds r0, r7, r6
	strb r1, [r0]
	movs r1, #0xf1
	lsls r1, r1, #1
	adds r0, r7, r1
	ldrh r1, [r0]
	adds r3, #0x34
	adds r0, r7, r3
	strb r1, [r0]
	movs r1, #0
	ldrsb r1, [r2, r1]
	subs r6, #8
	adds r0, r7, r6
	strh r1, [r0]
	b _080A2832
	.align 2, 0
_080A26CC: .4byte 0x000001ED
_080A26D0:
	movs r5, #0
	movs r4, #0xff
_080A26D4:
	adds r0, r7, #0
	bl sub_80088D4
	movs r1, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080A2700
	movs r0, #0xf2
	lsls r0, r0, #1
	adds r1, r7, r0
	ldrb r0, [r1]
	cmp r0, #5
	bhi _080A26F8
	adds r0, #1
	strb r0, [r1]
	adds r1, r4, #0
	ands r1, r0
	b _080A26FA
_080A26F8:
	movs r1, #0
_080A26FA:
	movs r2, #0xf2
	lsls r2, r2, #1
	b _080A2758
_080A2700:
	adds r0, r7, #0
	bl sub_80088D4
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _080A272E
	movs r3, #0xf2
	lsls r3, r3, #1
	adds r1, r7, r3
	ldrb r0, [r1]
	cmp r0, #0
	beq _080A2724
	subs r0, #1
	strb r0, [r1]
	adds r1, r4, #0
	ands r1, r0
	b _080A2726
_080A2724:
	movs r1, #6
_080A2726:
	movs r6, #0xf2
	lsls r6, r6, #1
	adds r0, r7, r6
	b _080A275A
_080A272E:
	adds r0, r7, #0
	bl sub_80088D4
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080A276C
	ldr r0, _080A2750 @ =0x000001E5
	adds r1, r7, r0
	ldrb r0, [r1]
	cmp r0, #4
	bhi _080A2754
	adds r0, #1
	strb r0, [r1]
	adds r1, r4, #0
	ands r1, r0
	b _080A2756
	.align 2, 0
_080A2750: .4byte 0x000001E5
_080A2754:
	movs r1, #0
_080A2756:
	ldr r2, _080A2768 @ =0x000001E5
_080A2758:
	adds r0, r7, r2
_080A275A:
	strb r1, [r0]
	adds r0, r7, #0
	adds r0, #0x1c
	movs r1, #0xcb
	bl sub_8008B6C
	b _080A27A6
	.align 2, 0
_080A2768: .4byte 0x000001E5
_080A276C:
	adds r0, r7, #0
	bl sub_80088D4
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080A27A6
	ldr r3, _080A2790 @ =0x000001E5
	adds r1, r7, r3
	ldrb r0, [r1]
	cmp r0, #0
	beq _080A2794
	subs r0, #1
	strb r0, [r1]
	adds r1, r4, #0
	ands r1, r0
	b _080A2796
	.align 2, 0
_080A2790: .4byte 0x000001E5
_080A2794:
	movs r1, #5
_080A2796:
	ldr r6, _080A2848 @ =0x000001E5
	adds r0, r7, r6
	strb r1, [r0]
	adds r0, r7, #0
	adds r0, #0x1c
	movs r1, #0xcb
	bl sub_8008B6C
_080A27A6:
	movs r0, #0xf2
	lsls r0, r0, #1
	adds r2, r7, r0
	ldr r1, _080A2848 @ =0x000001E5
	adds r0, r7, r1
	ldrb r1, [r0]
	lsls r0, r1, #3
	subs r0, r0, r1
	ldrb r2, [r2]
	adds r0, r0, r2
	movs r2, #0xda
	lsls r2, r2, #1
	adds r1, r7, r2
	adds r1, r1, r0
	ldrb r0, [r1]
	cmp r0, #0
	beq _080A27CA
	movs r5, #1
_080A27CA:
	cmp r5, #0
	bne _080A27D0
	b _080A26D4
_080A27D0:
	adds r0, r7, #0
	bl sub_80088CC
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080A2854
	movs r3, #0x86
	lsls r3, r3, #2
	adds r1, r7, r3
	movs r0, #0x63
	strh r0, [r1]
	movs r3, #1
	movs r6, #1
	rsbs r6, r6, #0
	mov ip, r6
	movs r0, #0xf2
	lsls r0, r0, #1
	adds r5, r7, r0
	adds r1, r7, #4
	ldr r2, _080A2848 @ =0x000001E5
	adds r4, r7, r2
_080A27FC:
	movs r6, #0xf6
	lsls r6, r6, #1
	adds r2, r1, r6
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, ip
	beq _080A282A
	adds r6, #2
	adds r0, r1, r6
	ldrb r0, [r0]
	lsrs r0, r0, #4
	ldrb r6, [r5]
	cmp r0, r6
	bne _080A282A
	ldr r6, _080A284C @ =0x000001EF
	adds r0, r1, r6
	ldrb r0, [r0]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	ldrb r6, [r4]
	cmp r0, r6
	bne _080A282A
	b _080A26A2
_080A282A:
	adds r1, #4
	adds r3, #1
	cmp r3, #9
	ble _080A27FC
_080A2832:
	ldr r0, _080A2850 @ =0x00000216
	adds r1, r7, r0
	movs r0, #0
	strb r0, [r1]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r7, r2
	movs r0, #2
	strh r0, [r1]
	b _080A28E4
	.align 2, 0
_080A2848: .4byte 0x000001E5
_080A284C: .4byte 0x000001EF
_080A2850: .4byte 0x00000216
_080A2854:
	movs r4, #0
	adds r0, r7, #0
	bl sub_80088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _080A2872
	adds r0, r7, #0
	bl sub_80088CC
	movs r1, #8
	ands r0, r1
	cmp r0, #0
	beq _080A2874
_080A2872:
	movs r4, #1
_080A2874:
	cmp r4, #0
	beq _080A28E4
	movs r3, #0x85
	lsls r3, r3, #2
	adds r1, r7, r3
	movs r0, #3
	strh r0, [r1]
	b _080A28E4
_080A2884:
	ldr r6, _080A28A0 @ =0x00000216
	adds r0, r7, r6
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #2
	bne _080A28E4
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r7, r0
_080A2898:
	movs r0, #1
	strh r0, [r1]
	b _080A28E4
	.align 2, 0
_080A28A0: .4byte 0x00000216
_080A28A4:
	ldr r0, [sp, #4]
	ldr r1, _080A28D0 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl sub_8009378
	adds r0, r7, #0
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r7, r2
	movs r0, #4
	strh r0, [r1]
	b _080A28E4
	.align 2, 0
_080A28D0: .4byte 0x00000889
_080A28D4:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _080A28E4
	movs r3, #1
	mov r8, r3
_080A28E4:
	adds r0, r7, #0
	bl sub_80A2940
	adds r0, r7, #0
	bl sub_80A32A4
	mov r6, r8
	cmp r6, #0
	bne _080A28F8
	b _080A2640
_080A28F8:
	movs r0, #0
	str r0, [sp, #8]
	mov r1, sb
	str r1, [sp, #0xc]
	ldr r2, [sp, #0x14]
	str r0, [r2, #4]
	str r0, [r1]
	mov r3, sl
	str r0, [r3]
	ldr r1, [sp, #8]
	cmp r1, #0
	beq _080A291C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080A291C:
	ldr r1, [sp, #4]
	cmp r1, #0
	beq _080A292E
	ldr r0, [r1, #8]
	ldr r2, [r0, #0xc]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080A292E:
	mov r0, sl
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_80A2940
sub_80A2940: @ 0x080A2940
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0xc
	adds r7, r0, #0
	ldr r0, [r7, #0x10]
	mov sb, r0
	adds r0, r7, #0
	bl sub_80088DC
	mov r8, r0
	adds r0, r7, #0
	bl sub_8008920
	adds r6, r0, #0
	adds r0, r7, #0
	bl sub_8008918
	adds r5, r0, #0
	adds r0, r7, #0
	bl sub_8008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl sub_800894C
	adds r1, r7, #0
	adds r1, #0x14
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, sb
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl sub_8050D3C
	cmp r0, #6
	bls _080A2992
	b _080A2B90
_080A2992:
	lsls r0, r0, #2
	ldr r1, _080A299C @ =_080A29A0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A299C: .4byte _080A29A0
_080A29A0: @ jump table
	.4byte _080A29BC @ case 0
	.4byte _080A2B90 @ case 1
	.4byte _080A2B90 @ case 2
	.4byte _080A29DE @ case 3
	.4byte _080A2B90 @ case 4
	.4byte _080A2B90 @ case 5
	.4byte _080A2B90 @ case 6
_080A29BC:
	ldr r1, _080A29D4 @ =0x00000216
	adds r4, r7, r1
	movs r0, #0
	ldrsb r0, [r4, r0]
	cmp r0, #0
	bne _080A29D8
	ldr r0, [r7, #0x10]
	bl sub_8050D68
	movs r0, #3
	strb r0, [r4]
	b _080A2B90
	.align 2, 0
_080A29D4: .4byte 0x00000216
_080A29D8:
	movs r0, #2
	strb r0, [r4]
	b _080A2B90
_080A29DE:
	ldr r2, _080A29F8 @ =0x00000216
	adds r4, r7, r2
	movs r0, #0
	ldrsb r0, [r4, r0]
	cmp r0, #5
	bne _080A29FC
	ldr r0, [r7, #0x10]
	bl sub_8050D80
	movs r0, #1
	strb r0, [r4]
	b _080A2B90
	.align 2, 0
_080A29F8: .4byte 0x00000216
_080A29FC:
	cmp r0, #3
	beq _080A2A02
	b _080A2B90
_080A2A02:
	movs r0, #5
	strb r0, [r4]
	movs r1, #0x86
	lsls r1, r1, #2
	adds r0, r7, r1
	ldrh r0, [r0]
	cmp r0, #0x12
	bls _080A2A14
	b _080A2B80
_080A2A14:
	lsls r0, r0, #2
	ldr r1, _080A2A20 @ =_080A2A24
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A2A20: .4byte _080A2A24
_080A2A24: @ jump table
	.4byte _080A2A70 @ case 0
	.4byte _080A2A7C @ case 1
	.4byte _080A2A88 @ case 2
	.4byte _080A2A94 @ case 3
	.4byte _080A2AA0 @ case 4
	.4byte _080A2AAC @ case 5
	.4byte _080A2AB8 @ case 6
	.4byte _080A2AC4 @ case 7
	.4byte _080A2AD0 @ case 8
	.4byte _080A2ADC @ case 9
	.4byte _080A2AE8 @ case 10
	.4byte _080A2AF4 @ case 11
	.4byte _080A2B00 @ case 12
	.4byte _080A2B0C @ case 13
	.4byte _080A2B18 @ case 14
	.4byte _080A2B24 @ case 15
	.4byte _080A2B30 @ case 16
	.4byte _080A2B3C @ case 17
	.4byte _080A2B68 @ case 18
_080A2A70:
	ldr r0, [r7, #0x10]
	ldr r1, _080A2A78 @ =gUnknown_0810497C
	b _080A2B6C
	.align 2, 0
_080A2A78: .4byte gUnknown_0810497C
_080A2A7C:
	ldr r0, [r7, #0x10]
	ldr r1, _080A2A84 @ =gUnknown_081049C4
	b _080A2B6C
	.align 2, 0
_080A2A84: .4byte gUnknown_081049C4
_080A2A88:
	ldr r0, [r7, #0x10]
	ldr r1, _080A2A90 @ =gUnknown_081049F8
	b _080A2B6C
	.align 2, 0
_080A2A90: .4byte gUnknown_081049F8
_080A2A94:
	ldr r0, [r7, #0x10]
	ldr r1, _080A2A9C @ =gUnknown_08104A40
	b _080A2B6C
	.align 2, 0
_080A2A9C: .4byte gUnknown_08104A40
_080A2AA0:
	ldr r0, [r7, #0x10]
	ldr r1, _080A2AA8 @ =gUnknown_08104A84
	b _080A2B6C
	.align 2, 0
_080A2AA8: .4byte gUnknown_08104A84
_080A2AAC:
	ldr r0, [r7, #0x10]
	ldr r1, _080A2AB4 @ =gUnknown_08104AC4
	b _080A2B6C
	.align 2, 0
_080A2AB4: .4byte gUnknown_08104AC4
_080A2AB8:
	ldr r0, [r7, #0x10]
	ldr r1, _080A2AC0 @ =gUnknown_08104B08
	b _080A2B6C
	.align 2, 0
_080A2AC0: .4byte gUnknown_08104B08
_080A2AC4:
	ldr r0, [r7, #0x10]
	ldr r1, _080A2ACC @ =gUnknown_08104B4C
	b _080A2B6C
	.align 2, 0
_080A2ACC: .4byte gUnknown_08104B4C
_080A2AD0:
	ldr r0, [r7, #0x10]
	ldr r1, _080A2AD8 @ =gUnknown_08104B94
	b _080A2B6C
	.align 2, 0
_080A2AD8: .4byte gUnknown_08104B94
_080A2ADC:
	ldr r0, [r7, #0x10]
	ldr r1, _080A2AE4 @ =gUnknown_08104BD4
	b _080A2B6C
	.align 2, 0
_080A2AE4: .4byte gUnknown_08104BD4
_080A2AE8:
	ldr r0, [r7, #0x10]
	ldr r1, _080A2AF0 @ =gUnknown_08104C18
	b _080A2B6C
	.align 2, 0
_080A2AF0: .4byte gUnknown_08104C18
_080A2AF4:
	ldr r0, [r7, #0x10]
	ldr r1, _080A2AFC @ =gUnknown_08104C54
	b _080A2B6C
	.align 2, 0
_080A2AFC: .4byte gUnknown_08104C54
_080A2B00:
	ldr r0, [r7, #0x10]
	ldr r1, _080A2B08 @ =gUnknown_08104C98
	b _080A2B6C
	.align 2, 0
_080A2B08: .4byte gUnknown_08104C98
_080A2B0C:
	ldr r0, [r7, #0x10]
	ldr r1, _080A2B14 @ =gUnknown_08104CDC
	b _080A2B6C
	.align 2, 0
_080A2B14: .4byte gUnknown_08104CDC
_080A2B18:
	ldr r0, [r7, #0x10]
	ldr r1, _080A2B20 @ =gUnknown_08104D04
	b _080A2B6C
	.align 2, 0
_080A2B20: .4byte gUnknown_08104D04
_080A2B24:
	ldr r0, [r7, #0x10]
	ldr r1, _080A2B2C @ =gUnknown_08104D28
	b _080A2B6C
	.align 2, 0
_080A2B2C: .4byte gUnknown_08104D28
_080A2B30:
	ldr r0, [r7, #0x10]
	ldr r1, _080A2B38 @ =gUnknown_08104D58
	b _080A2B6C
	.align 2, 0
_080A2B38: .4byte gUnknown_08104D58
_080A2B3C:
	ldr r4, [r7, #8]
	ldr r0, _080A2B60 @ =0x00001CD4
	adds r4, r4, r0
	adds r0, r4, #0
	bl sub_80A041C
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809FE3C
	movs r2, #0x89
	lsls r2, r2, #2
	adds r1, r7, r2
	str r0, [r1]
	ldr r0, [r7, #0x10]
	ldr r1, _080A2B64 @ =gUnknown_08104D98
	subs r2, #8
	b _080A2B70
	.align 2, 0
_080A2B60: .4byte 0x00001CD4
_080A2B64: .4byte gUnknown_08104D98
_080A2B68:
	ldr r0, [r7, #0x10]
	ldr r1, _080A2B7C @ =gUnknown_08104DB8
_080A2B6C:
	movs r2, #0x87
	lsls r2, r2, #2
_080A2B70:
	adds r3, r7, r2
	movs r2, #0
	bl sub_8050DC8
	b _080A2B90
	.align 2, 0
_080A2B7C: .4byte gUnknown_08104DB8
_080A2B80:
	ldr r0, [r7, #0x10]
	ldr r1, _080A2BA0 @ =gUnknown_08104DDC
	movs r2, #0x87
	lsls r2, r2, #2
	adds r3, r7, r2
	movs r2, #0
	bl sub_8050DC8
_080A2B90:
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A2BA0: .4byte gUnknown_08104DDC

	thumb_func_start sub_80A2BA4
sub_80A2BA4: @ 0x080A2BA4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x54
	adds r7, r0, #0
	bl sub_8008918
	mov r1, sp
	movs r4, #0
	strh r4, [r1]
	strh r4, [r0, #0x14]
	adds r0, r7, #0
	bl sub_8008918
	mov r1, sp
	strh r4, [r1]
	strh r4, [r0, #0x16]
	adds r0, r7, #0
	bl sub_8008918
	mov r1, sp
	strh r4, [r1]
	strh r4, [r0, #0x18]
	adds r0, r7, #0
	bl sub_8008918
	mov r1, sp
	strh r4, [r1]
	strh r4, [r0, #0x1a]
	adds r0, r7, #0
	bl sub_8008918
	mov r1, sp
	strh r4, [r1]
	strh r4, [r0, #0x1c]
	adds r0, r7, #0
	bl sub_8008918
	mov r1, sp
	strh r4, [r1]
	strh r4, [r0, #0x1e]
	ldr r1, _080A2FC0 @ =0x06007FE0
	movs r0, #0
	movs r2, #0x20
	bl sub_8008EB8
	movs r4, #1
	rsbs r4, r4, #0
	ldr r0, _080A2FC4 @ =0x0600E000
	mov sb, r0
	movs r5, #0x80
	lsls r5, r5, #4
	adds r0, r4, #0
	mov r1, sb
	adds r2, r5, #0
	bl sub_8008EB8
	ldr r1, _080A2FC8 @ =0x0600E800
	mov r8, r1
	adds r0, r4, #0
	adds r2, r5, #0
	bl sub_8008EB8
	ldr r6, _080A2FCC @ =0x0600F000
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl sub_8008EB8
	ldr r0, _080A2FD0 @ =gUnknown_0874EF14
	mov r1, sb
	bl sub_80D102C
	ldr r0, _080A2FD4 @ =gUnknown_0874EF3C
	mov r1, r8
	bl sub_80D102C
	ldr r0, _080A2FD8 @ =gUnknown_0874EFEC
	adds r1, r6, #0
	bl sub_80D102C
	ldr r0, _080A2FDC @ =gUnknown_0874F050
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl sub_80D102C
	ldr r0, _080A2FE0 @ =gUnknown_0874F2EC
	movs r1, #0xa0
	lsls r1, r1, #0x13
	movs r2, #0x80
	lsls r2, r2, #2
	bl sub_8008E64
	adds r0, r7, #0
	bl sub_8008918
	mov r1, sp
	movs r3, #0xf2
	lsls r3, r3, #5
	adds r2, r3, #0
	strh r2, [r1]
	movs r4, #0
	strh r2, [r0]
	adds r0, r7, #0
	bl sub_8008918
	mov r2, sp
	ldr r5, _080A2FE4 @ =0x00001C43
	adds r1, r5, #0
	strh r1, [r2]
	strh r1, [r0, #0xe]
	adds r0, r7, #0
	bl sub_8008918
	mov r2, sp
	ldr r6, _080A2FE8 @ =0x00001D41
	adds r1, r6, #0
	strh r1, [r2]
	strh r1, [r0, #0xc]
	adds r0, r7, #0
	bl sub_8008918
	mov r2, sp
	ldr r3, _080A2FEC @ =0x00001E42
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xa]
	add r5, sp, #4
	str r4, [sp, #4]
	strh r4, [r5, #4]
	add r6, sp, #0xc
	str r4, [sp, #0xc]
	strh r4, [r6, #4]
	add r0, sp, #0x14
	str r4, [sp, #0x14]
	strh r4, [r0, #4]
	add r0, sp, #0x1c
	str r4, [sp, #0x1c]
	strh r4, [r0, #4]
	adds r1, r7, #0
	adds r1, #0x80
	add r4, sp, #0x24
	adds r0, r4, #0
	movs r2, #0
	bl sub_805E790
	adds r1, r5, #0
	adds r0, r4, #0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r6, [sp, #0x14]
	mov sb, r6
	movs r1, #0xd6
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl sub_80074C0
	lsls r0, r0, #5
	ldr r2, _080A2FF0 @ =0x05000200
	adds r1, r0, r2
	ldr r0, [sp, #0x14]
	movs r2, #0
	mov sl, r4
	cmp r0, #0
	beq _080A2D00
	mov r3, sp
	ldrh r2, [r3, #0x18]
_080A2D00:
	mov r0, sb
	bl sub_8008E64
	ldr r4, [sp, #0xc]
	movs r5, #0xd2
	lsls r5, r5, #1
	adds r0, r7, r5
	ldr r1, [r0, #4]
	bl sub_8007D4C
	lsls r0, r0, #5
	ldr r6, _080A2FF4 @ =0x06010000
	adds r1, r0, r6
	ldr r0, [sp, #0xc]
	movs r2, #0
	cmp r0, #0
	beq _080A2D26
	mov r0, sp
	ldrh r2, [r0, #0x10]
_080A2D26:
	adds r0, r4, #0
	bl sub_8008E64
	movs r1, #0xb0
	adds r1, r1, r7
	mov r8, r1
	mov r0, r8
	movs r1, #0
	bl sub_805E860
	mov r2, r8
	ldr r1, [r2]
	ldr r3, [r1]
	ldrh r2, [r2, #0xc]
	adds r4, r7, #0
	adds r4, #0xb4
	lsls r2, r2, #2
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sl
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	mov r0, sl
	mov r1, sl
	movs r2, #0x20
	bl sub_80D3994
	add r1, sp, #4
	mov r0, sl
	ldm r0!, {r3, r5, r6}
	stm r1!, {r3, r5, r6}
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r6}
	stm r1!, {r2, r6}
	ldr r6, [sp, #0x14]
	movs r3, #0xbe
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r1, [r0, #4]
	bl sub_80074C0
	lsls r0, r0, #5
	ldr r5, _080A2FF0 @ =0x05000200
	adds r1, r0, r5
	ldr r0, [sp, #0x14]
	movs r2, #0
	mov r5, r8
	str r4, [sp, #0x48]
	cmp r0, #0
	beq _080A2D94
	mov r0, sp
	ldrh r2, [r0, #0x18]
_080A2D94:
	adds r0, r6, #0
	bl sub_8008E64
	adds r0, r5, #0
	movs r1, #0xf
	bl sub_805E860
	ldr r1, [r5]
	ldr r3, [r1]
	ldrh r2, [r5, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x48]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sl
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	mov r0, sl
	mov r1, sl
	movs r2, #0x20
	bl sub_80D3994
	add r1, sp, #4
	mov r0, sl
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r4, r6}
	stm r1!, {r2, r4, r6}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	ldr r4, [sp, #0x14]
	movs r6, #0xc2
	lsls r6, r6, #1
	adds r0, r7, r6
	ldr r1, [r0, #4]
	bl sub_80074C0
	lsls r0, r0, #5
	ldr r2, _080A2FF0 @ =0x05000200
	adds r1, r0, r2
	ldr r0, [sp, #0x14]
	movs r2, #0
	cmp r0, #0
	beq _080A2DF4
	mov r3, sp
	ldrh r2, [r3, #0x18]
_080A2DF4:
	adds r0, r4, #0
	bl sub_8008E64
	adds r0, r5, #0
	movs r1, #0x15
	bl sub_805E860
	ldr r1, [r5]
	ldr r3, [r1]
	ldrh r2, [r5, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x48]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sl
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	mov r0, sl
	mov r1, sl
	movs r2, #0x20
	bl sub_80D3994
	add r1, sp, #4
	mov r0, sl
	ldm r0!, {r2, r5, r6}
	stm r1!, {r2, r5, r6}
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
	ldm r0!, {r2, r6}
	stm r1!, {r2, r6}
	ldr r4, [sp, #0x14]
	movs r3, #0xc6
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r1, [r0, #4]
	bl sub_80074C0
	lsls r0, r0, #5
	ldr r5, _080A2FF0 @ =0x05000200
	adds r1, r0, r5
	ldr r0, [sp, #0x14]
	movs r2, #0
	cmp r0, #0
	beq _080A2E54
	mov r6, sp
	ldrh r2, [r6, #0x18]
_080A2E54:
	adds r0, r4, #0
	bl sub_8008E64
	movs r5, #0
	movs r6, #0
	adds r0, r7, #0
	adds r0, #0xe0
	str r0, [sp, #0x4c]
	adds r1, r7, #0
	adds r1, #0xe4
	str r1, [sp, #0x50]
	mov sb, sl
_080A2E6C:
	mov r0, r8
	adds r1, r6, #0
	bl sub_805E860
	mov r2, r8
	ldr r1, [r2]
	ldr r3, [r1]
	ldrh r2, [r2, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x48]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x24
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	mov r0, sb
	mov r1, sb
	movs r2, #0x20
	bl sub_80D3994
	add r1, sp, #4
	mov r0, sb
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	lsls r1, r6, #1
	movs r4, #0xa0
	lsls r4, r4, #1
	adds r0, r7, r4
	adds r0, r0, r1
	strh r5, [r0]
	ldr r4, [sp, #0xc]
	movs r1, #0xba
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r0, r0, r5
	lsls r0, r0, #5
	ldr r2, _080A2FF4 @ =0x06010000
	adds r1, r0, r2
	ldr r0, [sp, #0xc]
	movs r2, #0
	cmp r0, #0
	beq _080A2ED6
	mov r3, sp
	ldrh r2, [r3, #0x10]
_080A2ED6:
	adds r0, r4, #0
	bl sub_8008E64
	ldr r0, [sp, #0xc]
	movs r1, #0
	cmp r0, #0
	beq _080A2EE8
	mov r4, sp
	ldrh r1, [r4, #0x10]
_080A2EE8:
	lsrs r0, r1, #5
	adds r5, r5, r0
	adds r6, #1
	cmp r6, #0x15
	ble _080A2E6C
	ldr r0, [sp, #0x4c]
	movs r1, #0
	bl sub_805E860
	ldr r5, [sp, #0x4c]
	ldr r1, [r5]
	ldr r3, [r1]
	ldrh r2, [r5, #0xc]
	lsls r2, r2, #2
	ldr r6, [sp, #0x50]
	ldr r0, [r6]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sb
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	mov r0, sl
	mov r1, sl
	movs r2, #0x20
	bl sub_80D3994
	add r1, sp, #4
	mov r0, sl
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r5, r6}
	stm r1!, {r2, r5, r6}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	ldr r4, [sp, #0x14]
	movs r5, #0xce
	lsls r5, r5, #1
	adds r0, r7, r5
	ldr r1, [r0, #4]
	bl sub_80074C0
	lsls r0, r0, #5
	ldr r6, _080A2FF0 @ =0x05000200
	adds r1, r0, r6
	ldr r0, [sp, #0x14]
	movs r2, #0
	cmp r0, #0
	beq _080A2F4E
	mov r0, sp
	ldrh r2, [r0, #0x18]
_080A2F4E:
	adds r0, r4, #0
	bl sub_8008E64
	movs r5, #0
	movs r4, #0
	ldr r1, [sp, #0x4c]
	mov r8, r1
	mov r2, sp
	adds r2, #0xc
	str r2, [sp, #0x44]
	mov sb, sl
_080A2F64:
	mov r0, r8
	adds r1, r4, #0
	bl sub_805E860
	mov r3, r8
	ldr r1, [r3]
	ldr r3, [r1]
	mov r6, r8
	ldrh r2, [r6, #0xc]
	lsls r2, r2, #2
	ldr r6, [sp, #0x50]
	ldr r0, [r6]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x24
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	mov r0, sb
	mov r1, sb
	movs r2, #0x20
	bl sub_80D3994
	add r1, sp, #4
	mov r0, sb
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	lsls r1, r4, #1
	movs r6, #0xb6
	lsls r6, r6, #1
	adds r0, r7, r6
	adds r0, r0, r1
	strh r5, [r0]
	ldr r6, [sp, #0xc]
	movs r1, #0xca
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl sub_8007D4C
	b _080A2FF8
	.align 2, 0
_080A2FC0: .4byte 0x06007FE0
_080A2FC4: .4byte 0x0600E000
_080A2FC8: .4byte 0x0600E800
_080A2FCC: .4byte 0x0600F000
_080A2FD0: .4byte gUnknown_0874EF14
_080A2FD4: .4byte gUnknown_0874EF3C
_080A2FD8: .4byte gUnknown_0874EFEC
_080A2FDC: .4byte gUnknown_0874F050
_080A2FE0: .4byte gUnknown_0874F2EC
_080A2FE4: .4byte 0x00001C43
_080A2FE8: .4byte 0x00001D41
_080A2FEC: .4byte 0x00001E42
_080A2FF0: .4byte 0x05000200
_080A2FF4: .4byte 0x06010000
_080A2FF8:
	adds r0, r0, r5
	lsls r0, r0, #5
	ldr r2, _080A3038 @ =0x06010000
	adds r1, r0, r2
	ldr r0, [sp, #0xc]
	movs r2, #0
	cmp r0, #0
	beq _080A300C
	mov r3, sp
	ldrh r2, [r3, #0x10]
_080A300C:
	adds r0, r6, #0
	bl sub_8008E64
	ldr r0, [sp, #0xc]
	movs r1, #0
	cmp r0, #0
	beq _080A301E
	ldr r6, [sp, #0x44]
	ldrh r1, [r6, #4]
_080A301E:
	lsrs r0, r1, #5
	adds r5, r5, r0
	adds r4, #1
	cmp r4, #3
	ble _080A2F64
	add sp, #0x54
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A3038: .4byte 0x06010000

	thumb_func_start sub_80A303C
sub_80A303C: @ 0x080A303C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x30
	mov r8, r0
	movs r1, #0
	movs r3, #0
	movs r4, #0xda
	lsls r4, r4, #1
	add r4, r8
_080A3054:
	lsls r0, r1, #3
	adds r2, r1, #1
	subs r0, r0, r1
	movs r1, #6
	adds r0, r0, r4
	adds r0, #6
_080A3060:
	strb r3, [r0]
	subs r0, #1
	subs r1, #1
	cmp r1, #0
	bge _080A3060
	adds r1, r2, #0
	cmp r1, #5
	ble _080A3054
	movs r3, #0xff
	movs r1, #0xf6
	lsls r1, r1, #1
	add r1, r8
	movs r2, #9
_080A307A:
	ldrb r0, [r1]
	orrs r0, r3
	strb r0, [r1]
	adds r1, #4
	subs r2, #1
	cmp r2, #0
	bge _080A307A
	movs r0, #0xf0
	lsls r0, r0, #1
	add r0, r8
	movs r2, #0
	ldrsh r1, [r0, r2]
	lsls r1, r1, #2
	movs r4, #0xf1
	lsls r4, r4, #1
	mov r3, r8
	adds r5, r3, r4
	movs r7, #0
	ldrsh r0, [r5, r7]
	adds r1, r1, r0
	lsls r0, r1, #1
	movs r1, #7
	bl sub_80D0ED0
	mov sb, r0
	movs r0, #0
	str r0, [sp]
	movs r1, #1
	str r1, [sp, #4]
	movs r2, #1
	str r2, [sp, #8]
	movs r3, #0xef
	lsls r3, r3, #1
	add r3, r8
	str r3, [sp, #0xc]
	movs r7, #4
	add r7, r8
	mov sl, r7
	movs r6, #0xf9
	lsls r6, r6, #1
	add r6, r8
	str r5, [sp, #0x18]
	str r0, [sp, #0x24]
_080A30D0:
	ldr r1, [sp, #0x24]
	add r1, sb
	movs r0, #0xda
	lsls r0, r0, #1
	add r0, r8
	adds r0, r0, r1
	mov r1, sp
	ldrb r1, [r1, #8]
	strb r1, [r0]
	ldr r2, [sp, #0xc]
	ldrb r0, [r2]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1b
	adds r0, #1
	ldr r3, [sp, #8]
	cmp r0, r3
	bne _080A3106
	movs r0, #0xf2
	lsls r0, r0, #1
	add r0, r8
	mov r4, sb
	strb r4, [r0]
	ldr r0, _080A3204 @ =0x000001E5
	add r0, r8
	mov r7, sp
	ldrb r7, [r7]
	strb r7, [r0]
_080A3106:
	movs r5, #0
	mov r0, sb
	adds r0, #1
	str r0, [sp, #0x20]
	ldr r1, [sp, #8]
	adds r1, #1
	str r1, [sp, #0x1c]
	movs r2, #0xf1
	lsls r2, r2, #1
	add r2, r8
	str r2, [sp, #0x10]
	movs r0, #0xf
	ldr r3, [sp]
	adds r4, r3, #0
	ands r4, r0
	str r4, [sp, #0x2c]
	ldr r4, _080A3208 @ =gUnknown_08104957
	ldr r7, [sp, #4]
	lsls r0, r7, #2
	add r0, r8
	mov ip, r0
	mov r0, sb
	lsls r0, r0, #4
	str r0, [sp, #0x14]
	movs r2, #0xf7
	lsls r2, r2, #1
	add r2, ip
_080A313C:
	lsls r1, r5, #1
	str r1, [sp, #0x28]
	ldrb r1, [r4]
	ldr r3, [sp, #0x10]
	movs r7, #0
	ldrsh r0, [r3, r7]
	cmp r1, r0
	bne _080A31A2
	ldr r0, _080A3208 @ =gUnknown_08104957
	adds r0, #1
	ldr r1, [sp, #0x28]
	adds r0, r1, r0
	ldrb r0, [r0]
	ldr r3, [sp, #8]
	cmp r0, r3
	bne _080A31A2
	movs r0, #0xf6
	lsls r0, r0, #1
	add r0, ip
	strb r5, [r0]
	ldr r0, _080A320C @ =0x000001ED
	add r0, ip
	strb r3, [r0]
	ldrb r1, [r2]
	movs r0, #0x10
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #1
	orrs r0, r1
	movs r1, #0xf
	ands r0, r1
	ldr r3, [sp, #0x14]
	orrs r0, r3
	strb r0, [r2]
	ldr r3, _080A3210 @ =0x000001EF
	add r3, ip
	ldrb r1, [r3]
	movs r0, #0x10
	rsbs r0, r0, #0
	ands r0, r1
	ldr r7, [sp, #0x2c]
	orrs r0, r7
	strb r0, [r3]
	adds r2, #4
	movs r0, #4
	add ip, r0
	add sl, r0
	adds r6, #4
	ldr r1, [sp, #4]
	adds r1, #1
	str r1, [sp, #4]
_080A31A2:
	adds r4, #2
	adds r5, #1
	cmp r5, #0x10
	ble _080A313C
	movs r0, #0xf0
	lsls r0, r0, #1
	add r0, r8
	movs r3, #0
	ldrsh r2, [r0, r3]
	movs r0, #1
	rsbs r0, r0, #0
	cmp r2, r0
	beq _080A3264
	movs r0, #0xf4
	lsls r0, r0, #1
	add r0, r8
	ldr r4, [sp, #0x18]
	movs r7, #0
	ldrsh r1, [r4, r7]
	movs r3, #0
	ldrsh r0, [r0, r3]
	cmp r1, r0
	bne _080A3264
	movs r0, #0xf5
	lsls r0, r0, #1
	add r0, r8
	movs r4, #0
	ldrsh r0, [r0, r4]
	ldr r7, [sp, #8]
	cmp r7, r0
	bne _080A3264
	movs r0, #0xf3
	lsls r0, r0, #1
	add r0, r8
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r2, r0
	bne _080A3214
	movs r1, #0xf6
	lsls r1, r1, #1
	add r1, sl
	movs r0, #0x11
	strb r0, [r1]
	ldrb r1, [r6]
	subs r0, #0x21
	ands r0, r1
	movs r1, #2
	b _080A3226
	.align 2, 0
_080A3204: .4byte 0x000001E5
_080A3208: .4byte gUnknown_08104957
_080A320C: .4byte 0x000001ED
_080A3210: .4byte 0x000001EF
_080A3214:
	movs r1, #0xf6
	lsls r1, r1, #1
	add r1, sl
	movs r0, #0x12
	strb r0, [r1]
	ldrb r1, [r6]
	subs r0, #0x22
	ands r0, r1
	movs r1, #3
_080A3226:
	orrs r0, r1
	strb r0, [r6]
	ldr r0, _080A329C @ =0x000001ED
	add r0, sl
	mov r2, sp
	ldrb r2, [r2, #8]
	strb r2, [r0]
	mov r3, sb
	lsls r2, r3, #4
	ldrb r1, [r6]
	movs r0, #0xf
	ands r0, r1
	orrs r0, r2
	strb r0, [r6]
	ldr r3, _080A32A0 @ =0x000001EF
	add r3, sl
	ldr r1, [sp]
	movs r4, #0xf
	ands r1, r4
	ldrb r2, [r3]
	movs r0, #0x10
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r3]
	movs r7, #4
	add sl, r7
	adds r6, #4
	ldr r0, [sp, #4]
	adds r0, #1
	str r0, [sp, #4]
_080A3264:
	ldr r1, [sp, #0x20]
	mov sb, r1
	cmp r1, #6
	ble _080A327C
	movs r2, #0
	mov sb, r2
	ldr r3, [sp, #0x24]
	adds r3, #7
	str r3, [sp, #0x24]
	ldr r4, [sp]
	adds r4, #1
	str r4, [sp]
_080A327C:
	ldr r7, [sp, #0x1c]
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	cmp r0, #0x1e
	bhi _080A328A
	b _080A30D0
_080A328A:
	add sp, #0x30
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A329C: .4byte 0x000001ED
_080A32A0: .4byte 0x000001EF

	thumb_func_start sub_80A32A4
sub_80A32A4: @ 0x080A32A4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x68
	adds r6, r0, #0
	add r1, sp, #8
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	strh r0, [r1, #2]
	strh r0, [r1, #4]
	strh r0, [r1, #6]
	strh r0, [r1, #8]
	str r0, [sp, #0x14]
	strb r2, [r1, #0x10]
	strb r2, [r1, #0x11]
	str r0, [sp, #0x1c]
	strb r2, [r1, #0x18]
	add r5, sp, #0x24
	str r0, [sp, #0x24]
	strh r0, [r5, #4]
	add r1, sp, #0x2c
	str r0, [sp, #0x2c]
	strh r0, [r1, #4]
	add r1, sp, #0x34
	str r0, [sp, #0x34]
	strh r0, [r1, #4]
	add r1, sp, #0x3c
	str r0, [sp, #0x3c]
	strh r0, [r1, #4]
	movs r0, #0x88
	lsls r0, r0, #1
	adds r4, r6, r0
	adds r0, r4, #0
	bl sub_805E8F0
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	movs r4, #0x8a
	lsls r4, r4, #1
	adds r0, r6, r4
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x44
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r4, sp, #0x44
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	adds r1, r5, #0
	adds r0, r4, #0
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r2, r7}
	stm r1!, {r2, r7}
	add r1, sp, #8
	movs r3, #0x92
	lsls r3, r3, #1
	adds r0, r6, r3
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldr r0, [r0]
	str r0, [r1]
	add r2, sp, #8
	movs r7, #0xf2
	lsls r7, r7, #1
	adds r0, r6, r7
	ldrb r1, [r0]
	lsls r0, r1, #4
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, #0x10
	strh r0, [r2]
	ldr r1, _080A34FC @ =0x000001E5
	adds r0, r6, r1
	ldrb r1, [r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, #0x30
	strh r0, [r2, #2]
	movs r2, #0xd2
	lsls r2, r2, #1
	adds r0, r6, r2
	ldr r1, [r0, #4]
	bl sub_8007D4C
	add r1, sp, #8
	strh r0, [r1, #6]
	movs r3, #0xd6
	lsls r3, r3, #1
	adds r0, r6, r3
	ldr r1, [r0, #4]
	bl sub_80074C0
	add r1, sp, #8
	strh r0, [r1, #4]
	movs r2, #1
	movs r0, #1
	strh r0, [r1, #8]
	adds r0, r1, #0
	strb r2, [r0, #0x18]
	adds r0, r6, #0
	bl sub_8008920
	adds r3, r0, #0
	ldr r0, [sp, #0x24]
	adds r1, r0, #0
	movs r2, #0
	mov sl, r5
	mov sb, r4
	cmp r1, #0
	beq _080A33A2
	ldrh r2, [r5, #4]
_080A33A2:
	adds r0, r3, #0
	add r3, sp, #8
	bl sub_805E99C
	adds r4, r6, #0
	adds r4, #0xe0
	str r4, [sp, #0x64]
	add r7, sp, #8
	movs r5, #0xf6
	lsls r5, r5, #1
	adds r4, r6, r5
	movs r0, #9
	mov r8, r0
_080A33BC:
	movs r1, #0
	ldrsb r1, [r4, r1]
	movs r0, #1
	rsbs r0, r0, #0
	cmp r1, r0
	beq _080A348E
	ldrb r1, [r4, #2]
	lsls r1, r1, #0x1c
	lsrs r1, r1, #0x1c
	ldr r0, [sp, #0x64]
	bl sub_805E860
	ldr r2, [sp, #0x64]
	ldr r1, [r2]
	ldr r3, [r1]
	ldrh r2, [r2, #0xc]
	adds r0, r6, #0
	adds r0, #0xe4
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x44
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	mov r0, sb
	mov r1, sb
	movs r2, #0x20
	bl sub_80D3994
	mov r1, sl
	mov r0, sb
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r3, r5}
	stm r1!, {r3, r5}
	add r1, sp, #8
	adds r0, r6, #0
	adds r0, #0xf4
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldr r0, [r0]
	str r0, [r1]
	ldrb r1, [r4, #2]
	lsrs r1, r1, #4
	lsls r0, r1, #4
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, #0xa
	strh r0, [r7]
	ldrb r1, [r4, #3]
	lsls r1, r1, #0x1c
	lsrs r1, r1, #0x1c
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, #0x2a
	strh r0, [r7, #2]
	movs r1, #0xca
	lsls r1, r1, #1
	adds r0, r6, r1
	ldr r1, [r0, #4]
	bl sub_8007D4C
	ldrb r2, [r4, #2]
	lsls r2, r2, #0x1c
	lsrs r2, r2, #0x1b
	movs r3, #0xb6
	lsls r3, r3, #1
	adds r1, r6, r3
	adds r1, r1, r2
	ldrh r1, [r1]
	adds r1, r1, r0
	strh r1, [r7, #6]
	movs r5, #0xce
	lsls r5, r5, #1
	adds r0, r6, r5
	ldr r1, [r0, #4]
	bl sub_80074C0
	strh r0, [r7, #4]
	movs r1, #1
	movs r0, #1
	strh r0, [r7, #8]
	strb r1, [r7, #0x18]
	adds r0, r6, #0
	bl sub_8008920
	adds r3, r0, #0
	ldr r0, [sp, #0x24]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080A3486
	mov r0, sl
	ldrh r2, [r0, #4]
_080A3486:
	adds r0, r3, #0
	add r3, sp, #8
	bl sub_805E99C
_080A348E:
	adds r4, #4
	movs r1, #1
	rsbs r1, r1, #0
	add r8, r1
	mov r2, r8
	cmp r2, #0
	bge _080A33BC
	movs r3, #0xf0
	lsls r3, r3, #1
	adds r0, r6, r3
	ldrh r0, [r0]
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xc8
	ble _080A34B2
	movs r3, #0xc8
_080A34B2:
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	movs r0, #3
	str r0, [sp]
	movs r4, #0
	str r4, [sp, #4]
	adds r0, r6, #0
	movs r1, #0x11
	movs r2, #1
	bl sub_80A3588
	str r4, [sp]
	adds r0, r6, #0
	movs r1, #0x41
	movs r2, #2
	movs r3, #0xa
	bl sub_80A3618
	movs r5, #0xf1
	lsls r5, r5, #1
	adds r0, r6, r5
	movs r7, #0
	ldrsh r3, [r0, r7]
	adds r3, #0xb
	str r4, [sp]
	adds r0, r6, #0
	movs r1, #0x80
	movs r2, #2
	bl sub_80A3618
	movs r5, #6
_080A34F0:
	movs r0, #0
	cmp r4, #0
	bne _080A3500
	movs r0, #1
	b _080A3506
	.align 2, 0
_080A34FC: .4byte 0x000001E5
_080A3500:
	cmp r4, #6
	bne _080A3506
	movs r0, #2
_080A3506:
	adds r3, r4, #0
	adds r3, #0xf
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #0x15
	bl sub_80A3618
	adds r5, #0x22
	adds r4, #1
	cmp r4, #6
	ble _080A34F0
	movs r2, #0
_080A3520:
	movs r5, #0
	lsls r1, r2, #3
	adds r0, r2, #1
	mov sb, r0
	subs r1, r1, r2
	movs r7, #2
	lsls r0, r2, #2
	adds r0, r0, r2
	lsls r0, r0, #2
	mov r8, r0
	movs r2, #0xda
	lsls r2, r2, #1
	adds r1, r1, r2
	adds r4, r1, r6
_080A353C:
	ldrb r0, [r4]
	cmp r0, #0
	beq _080A3566
	movs r1, #0
	cmp r5, #0
	bne _080A354C
	movs r1, #1
	b _080A3552
_080A354C:
	cmp r5, #6
	bne _080A3552
	movs r1, #2
_080A3552:
	ldrb r3, [r4]
	movs r0, #2
	str r0, [sp]
	str r1, [sp, #4]
	adds r0, r6, #0
	adds r1, r7, #0
	mov r2, r8
	adds r2, #0x2a
	bl sub_80A3588
_080A3566:
	adds r4, #1
	adds r7, #0x22
	adds r5, #1
	cmp r5, #6
	ble _080A353C
	mov r2, sb
	cmp r2, #5
	ble _080A3520
	add sp, #0x68
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80A3588
sub_80A3588: @ 0x080A3588
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	mov sl, r0
	adds r7, r1, #0
	mov sb, r2
	adds r6, r3, #0
	ldr r4, [sp, #0x24]
	movs r0, #0
	mov r8, r0
	cmp r4, #1
	ble _080A35BE
	subs r4, #1
	movs r5, #0xa
	cmp r4, #1
	ble _080A35BA
_080A35AE:
	lsls r0, r5, #2
	adds r0, r0, r5
	lsls r5, r0, #1
	subs r4, #1
	cmp r4, #1
	bgt _080A35AE
_080A35BA:
	adds r4, r5, #0
	b _080A3602
_080A35BE:
	movs r4, #1
_080A35C0:
	cmp r4, #1
	bne _080A35C8
	movs r0, #1
	mov r8, r0
_080A35C8:
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_80D0EC8
	adds r5, r0, #0
	cmp r5, #0
	bne _080A35DC
	mov r0, r8
	cmp r0, #0
	beq _080A35F0
_080A35DC:
	ldr r0, [sp, #0x28]
	str r0, [sp]
	mov r0, sl
	adds r1, r7, #0
	mov r2, sb
	adds r3, r5, #0
	bl sub_80A3618
	movs r0, #1
	mov r8, r0
_080A35F0:
	adds r7, #0x10
	adds r0, r5, #0
	muls r0, r4, r0
	subs r6, r6, r0
	adds r0, r4, #0
	movs r1, #0xa
	bl sub_80D0EC8
	adds r4, r0, #0
_080A3602:
	cmp r4, #0
	bgt _080A35C0
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80A3618
sub_80A3618: @ 0x080A3618
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x5c
	adds r7, r0, #0
	mov r8, r1
	mov sb, r2
	adds r5, r3, #0
	mov r1, sp
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	strh r0, [r1, #2]
	strh r0, [r1, #4]
	strh r0, [r1, #6]
	strh r0, [r1, #8]
	str r0, [sp, #0xc]
	strb r2, [r1, #0x10]
	strb r2, [r1, #0x11]
	str r0, [sp, #0x14]
	strb r2, [r1, #0x18]
	add r6, sp, #0x1c
	str r0, [sp, #0x1c]
	strh r0, [r6, #4]
	add r1, sp, #0x24
	str r0, [sp, #0x24]
	strh r0, [r1, #4]
	add r1, sp, #0x2c
	str r0, [sp, #0x2c]
	strh r0, [r1, #4]
	add r1, sp, #0x34
	str r0, [sp, #0x34]
	strh r0, [r1, #4]
	adds r4, r7, #0
	adds r4, #0xb0
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_805E860
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	adds r0, r7, #0
	adds r0, #0xb4
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x3c
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r4, sp, #0x3c
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	adds r0, r6, #0
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2}
	stm r0!, {r1, r2}
	mov r1, sp
	adds r0, r7, #0
	adds r0, #0xc4
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldr r0, [r0]
	str r0, [r1]
	mov r0, sp
	mov r3, r8
	strh r3, [r0]
	mov r4, sb
	strh r4, [r0, #2]
	movs r1, #0xba
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl sub_8007D4C
	mov r2, sp
	lsls r5, r5, #1
	movs r3, #0xa0
	lsls r3, r3, #1
	adds r1, r7, r3
	adds r1, r1, r5
	ldrh r1, [r1]
	adds r1, r1, r0
	strh r1, [r2, #6]
	ldr r4, [sp, #0x78]
	cmp r4, #1
	beq _080A36F6
	cmp r4, #1
	bgt _080A36E6
	cmp r4, #0
	beq _080A36EE
	b _080A370E
_080A36E6:
	ldr r0, [sp, #0x78]
	cmp r0, #2
	beq _080A36FE
	b _080A370E
_080A36EE:
	movs r1, #0xbe
	lsls r1, r1, #1
	adds r0, r7, r1
	b _080A3704
_080A36F6:
	movs r2, #0xc2
	lsls r2, r2, #1
	adds r0, r7, r2
	b _080A3704
_080A36FE:
	movs r3, #0xc6
	lsls r3, r3, #1
	adds r0, r7, r3
_080A3704:
	ldr r1, [r0, #4]
	bl sub_80074C0
	mov r1, sp
	strh r0, [r1, #4]
_080A370E:
	mov r1, sp
	movs r2, #1
	movs r0, #1
	strh r0, [r1, #8]
	mov r0, sp
	strb r2, [r0, #0x18]
	adds r0, r7, #0
	bl sub_8008920
	adds r3, r0, #0
	ldr r0, [sp, #0x1c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080A372E
	ldrh r2, [r6, #4]
_080A372E:
	adds r0, r3, #0
	mov r3, sp
	bl sub_805E99C
	add sp, #0x5c
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80A3744
sub_80A3744: @ 0x080A3744
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r1, #0
	adds r5, r2, #0
	ldr r0, _080A3770 @ =gUnknown_080E8278
	str r0, [r4]
	movs r0, #0x8a
	lsls r0, r0, #2
	bl sub_80005D4
	adds r1, r5, #0
	bl sub_80A220C
	str r0, [r4, #4]
	ldr r1, [r6]
	movs r0, #0
	str r0, [r6]
	str r1, [r4, #8]
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A3770: .4byte gUnknown_080E8278

	thumb_func_start sub_80A3774
sub_80A3774: @ 0x080A3774
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r1, [r4, #4]
	mov r0, sp
	bl sub_80A25B0
	ldr r1, [sp]
	cmp r1, #0
	beq _080A3796
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080A3796:
	ldr r1, [r4, #8]
	movs r0, #0
	str r0, [r4, #8]
	str r1, [r5]
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_80A37A8
sub_80A37A8: @ 0x080A37A8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x40
	mov sl, r0
	adds r5, r1, #0
	ldr r0, [r5, #8]
	movs r1, #0x82
	lsls r1, r1, #3
	adds r0, r0, r1
	bl sub_800C6D8
	adds r1, r0, #0
	movs r0, #1
	rsbs r0, r0, #0
	cmp r1, r0
	bne _080A37E4
	ldr r0, [r5, #4]
	movs r2, #0
	str r2, [r5, #4]
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #0x20]
	str r0, [sp, #0x24]
	str r2, [r1]
	mov r2, sl
	str r0, [r2]
	b _080A380A
_080A37E4:
	ldr r0, [r5, #8]
	movs r2, #0x82
	lsls r2, r2, #3
	adds r0, r0, r2
	bl sub_800C894
	mov r8, r0
	cmp r0, #0
	bne _080A381E
	ldr r1, [r5, #4]
	str r0, [r5, #4]
	str r1, [sp]
	mov r0, sp
	str r0, [sp, #0x28]
	str r1, [sp, #0x2c]
	mov r2, r8
	str r2, [r0]
	mov r0, sl
	str r1, [r0]
_080A380A:
	ldr r1, [sp]
	cmp r1, #0
	beq _080A38EC
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
	b _080A38EC
_080A381E:
	add r7, sp, #4
	adds r0, r7, #0
	bl sub_80B3C90
	ldr r0, [r5, #8]
	movs r3, #0xc8
	str r3, [sp, #0x30]
	ldrb r0, [r0, #0x10]
	lsrs r2, r0, #3
	lsls r1, r2, #3
	subs r1, r1, r2
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1d
	adds r1, r1, r0
	str r1, [sp, #0x34]
	add r2, sp, #0x34
	add r0, sp, #0x30
	cmp r3, r1
	bls _080A3846
	adds r0, r2, #0
_080A3846:
	ldr r0, [r0]
	movs r1, #0
	mov sb, r1
	strb r0, [r7, #0x10]
	mov r0, r8
	bl sub_809B1F4
	adds r6, r0, #0
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, #0xc
	bls _080A3862
	movs r4, #0xc
_080A3862:
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl sub_80D3994
	adds r0, r7, r4
	mov r2, sb
	strb r2, [r0]
	mov r0, r8
	bl sub_809B228
	strb r0, [r7, #0x11]
	add r6, sp, #0x18
	adds r0, r6, #0
	adds r1, r7, #0
	bl sub_80BC898
	mov r0, sp
	adds r1, r6, #0
	bl sub_80BC8FC
	ldr r1, [sp]
	cmp r1, #0
	beq _080A389E
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080A389E:
	adds r0, r6, #0
	bl sub_80BC8F0
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A38B0
	mov r0, r8
	bl sub_809B26C
_080A38B0:
	ldr r4, [r5, #4]
	adds r0, r6, #0
	bl sub_80BC8F0
	strb r0, [r4, #0xc]
	ldr r1, [r5, #4]
	mov r0, sb
	str r0, [r5, #4]
	str r1, [sp]
	mov r2, sp
	str r2, [sp, #0x38]
	str r1, [sp, #0x3c]
	adds r0, r2, #0
	mov r2, sb
	str r2, [r0]
	mov r0, sl
	str r1, [r0]
	ldr r1, [sp]
	cmp r1, #0
	beq _080A38E4
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080A38E4:
	adds r0, r6, #0
	movs r1, #2
	bl sub_80BC8C0
_080A38EC:
	mov r0, sl
	add sp, #0x40
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80A3900
sub_80A3900: @ 0x080A3900
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x1c
	mov sb, r0
	adds r5, r1, #0
	add r1, sp, #0xc
	movs r0, #2
	str r0, [sp, #0xc]
	movs r0, #0x12
	strb r0, [r1, #4]
	ldr r0, [r5, #0xc]
	subs r0, #0x24
	adds r4, r1, #0
	cmp r0, #6
	bhi _080A3968
	lsls r0, r0, #2
	ldr r1, _080A392C @ =_080A3930
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A392C: .4byte _080A3930
_080A3930: @ jump table
	.4byte _080A394C @ case 0
	.4byte _080A3950 @ case 1
	.4byte _080A3954 @ case 2
	.4byte _080A3958 @ case 3
	.4byte _080A395C @ case 4
	.4byte _080A3960 @ case 5
	.4byte _080A3964 @ case 6
_080A394C:
	movs r0, #0
	b _080A3966
_080A3950:
	movs r0, #2
	b _080A3966
_080A3954:
	movs r0, #3
	b _080A3966
_080A3958:
	movs r0, #4
	b _080A3966
_080A395C:
	movs r0, #5
	b _080A3966
_080A3960:
	movs r0, #6
	b _080A3966
_080A3964:
	movs r0, #1
_080A3966:
	str r0, [sp, #0xc]
_080A3968:
	ldr r0, [r5, #8]
	ldr r1, _080A39F8 @ =0x00001CD4
	adds r0, r0, r1
	ldr r1, [r5, #0xc]
	bl sub_80A0930
	adds r6, r0, #0
	movs r1, #2
	bl sub_809E688
	movs r1, #0
	mov r8, r1
	strb r0, [r4, #4]
	mov r0, sp
	adds r1, r4, #0
	bl sub_80B3BE4
	add r7, sp, #8
	adds r0, r7, #0
	mov r1, sp
	bl sub_80B3C3C
	ldr r1, [sp, #8]
	cmp r1, #0
	beq _080A39A6
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080A39A6:
	mov r0, sp
	bl sub_80B3C78
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	adds r0, r6, #0
	movs r1, #2
	adds r2, r4, #0
	bl sub_809E6FC
	ldr r0, [r5, #4]
	strb r4, [r0, #0xc]
	ldr r4, [r5, #8]
	mov r0, sp
	bl sub_80B3C84
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_8011498
	ldr r0, [r5, #4]
	mov r1, r8
	str r1, [r5, #4]
	str r7, [sp, #0x14]
	str r0, [sp, #0x18]
	str r1, [sp, #8]
	mov r1, sb
	str r0, [r1]
	mov r0, sp
	movs r1, #2
	bl sub_80B3C0C
	mov r0, sb
	add sp, #0x1c
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080A39F8: .4byte 0x00001CD4

	thumb_func_start sub_80A39FC
sub_80A39FC: @ 0x080A39FC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x1c
	mov sb, r0
	adds r5, r1, #0
	add r1, sp, #0xc
	movs r0, #4
	str r0, [sp, #0xc]
	movs r0, #0x12
	strb r0, [r1, #4]
	ldr r0, [r5, #0xc]
	subs r0, #0x24
	adds r4, r1, #0
	cmp r0, #6
	bhi _080A3A64
	lsls r0, r0, #2
	ldr r1, _080A3A28 @ =_080A3A2C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A3A28: .4byte _080A3A2C
_080A3A2C: @ jump table
	.4byte _080A3A48 @ case 0
	.4byte _080A3A4C @ case 1
	.4byte _080A3A50 @ case 2
	.4byte _080A3A54 @ case 3
	.4byte _080A3A58 @ case 4
	.4byte _080A3A5C @ case 5
	.4byte _080A3A60 @ case 6
_080A3A48:
	movs r0, #0
	b _080A3A62
_080A3A4C:
	movs r0, #2
	b _080A3A62
_080A3A50:
	movs r0, #3
	b _080A3A62
_080A3A54:
	movs r0, #4
	b _080A3A62
_080A3A58:
	movs r0, #5
	b _080A3A62
_080A3A5C:
	movs r0, #6
	b _080A3A62
_080A3A60:
	movs r0, #1
_080A3A62:
	str r0, [sp, #0xc]
_080A3A64:
	ldr r0, [r5, #8]
	ldr r1, _080A3AF4 @ =0x00001CD4
	adds r0, r0, r1
	ldr r1, [r5, #0xc]
	bl sub_80A0930
	adds r6, r0, #0
	movs r1, #0
	bl sub_809E688
	movs r1, #0
	mov r8, r1
	strb r0, [r4, #4]
	mov r0, sp
	adds r1, r4, #0
	bl sub_80C0D1C
	add r7, sp, #8
	adds r0, r7, #0
	mov r1, sp
	bl sub_80C0D90
	ldr r1, [sp, #8]
	cmp r1, #0
	beq _080A3AA2
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080A3AA2:
	mov r0, sp
	bl sub_80C0D74
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	adds r0, r6, #0
	movs r1, #0
	adds r2, r4, #0
	bl sub_809E6FC
	ldr r0, [r5, #4]
	strb r4, [r0, #0xc]
	ldr r4, [r5, #8]
	mov r0, sp
	bl sub_80C0D80
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_8011464
	ldr r0, [r5, #4]
	mov r1, r8
	str r1, [r5, #4]
	str r7, [sp, #0x14]
	str r0, [sp, #0x18]
	str r1, [sp, #8]
	mov r1, sb
	str r0, [r1]
	mov r0, sp
	movs r1, #2
	bl sub_80C0D44
	mov r0, sb
	add sp, #0x1c
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080A3AF4: .4byte 0x00001CD4

	thumb_func_start sub_80A3AF8
sub_80A3AF8: @ 0x080A3AF8
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x1c
	mov sb, r0
	adds r5, r1, #0
	add r1, sp, #0xc
	movs r0, #3
	str r0, [sp, #0xc]
	movs r0, #0xf
	strb r0, [r1, #4]
	ldr r0, [r5, #0xc]
	subs r0, #0x24
	adds r4, r1, #0
	cmp r0, #6
	bhi _080A3B60
	lsls r0, r0, #2
	ldr r1, _080A3B24 @ =_080A3B28
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A3B24: .4byte _080A3B28
_080A3B28: @ jump table
	.4byte _080A3B44 @ case 0
	.4byte _080A3B48 @ case 1
	.4byte _080A3B4C @ case 2
	.4byte _080A3B50 @ case 3
	.4byte _080A3B54 @ case 4
	.4byte _080A3B58 @ case 5
	.4byte _080A3B5C @ case 6
_080A3B44:
	movs r0, #0
	b _080A3B5E
_080A3B48:
	movs r0, #2
	b _080A3B5E
_080A3B4C:
	movs r0, #3
	b _080A3B5E
_080A3B50:
	movs r0, #4
	b _080A3B5E
_080A3B54:
	movs r0, #5
	b _080A3B5E
_080A3B58:
	movs r0, #6
	b _080A3B5E
_080A3B5C:
	movs r0, #1
_080A3B5E:
	str r0, [sp, #0xc]
_080A3B60:
	ldr r0, [r5, #8]
	ldr r1, _080A3BF0 @ =0x00001CD4
	adds r0, r0, r1
	ldr r1, [r5, #0xc]
	bl sub_80A0930
	adds r6, r0, #0
	movs r1, #1
	bl sub_809E688
	movs r1, #0
	mov r8, r1
	strb r0, [r4, #4]
	mov r0, sp
	adds r1, r4, #0
	bl sub_80C7EA8
	add r7, sp, #8
	adds r0, r7, #0
	mov r1, sp
	bl sub_80C7F1C
	ldr r1, [sp, #8]
	cmp r1, #0
	beq _080A3B9E
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080A3B9E:
	mov r0, sp
	bl sub_80C7F00
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	adds r0, r6, #0
	movs r1, #1
	adds r2, r4, #0
	bl sub_809E6FC
	ldr r0, [r5, #4]
	strb r4, [r0, #0xc]
	ldr r4, [r5, #8]
	mov r0, sp
	bl sub_80C7F0C
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_80114C8
	ldr r0, [r5, #4]
	mov r1, r8
	str r1, [r5, #4]
	str r7, [sp, #0x14]
	str r0, [sp, #0x18]
	str r1, [sp, #8]
	mov r1, sb
	str r0, [r1]
	mov r0, sp
	movs r1, #2
	bl sub_80C7ED0
	mov r0, sb
	add sp, #0x1c
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080A3BF0: .4byte 0x00001CD4

	thumb_func_start sub_80A3BF4
sub_80A3BF4: @ 0x080A3BF4
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _080A3C20 @ =gUnknown_080E8288
	str r0, [r4]
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080A3C10
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080A3C10:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_80007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080A3C20: .4byte gUnknown_080E8288
_080A3C24:
	.byte 0x30, 0xB5, 0x05, 0x4C, 0x04, 0x60, 0x0D, 0x68, 0x00, 0x24, 0x0C, 0x60
	.byte 0x45, 0x60, 0x82, 0x60, 0xC3, 0x60, 0x30, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x88, 0x82, 0x0E, 0x08

	thumb_func_start sub_80A3C40
sub_80A3C40: @ 0x080A3C40
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _080A3C6C @ =gUnknown_080E8298
	str r0, [r4]
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080A3C5C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080A3C5C:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_80007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080A3C6C: .4byte gUnknown_080E8298
_080A3C70:
	.byte 0x30, 0xB5, 0x05, 0x4C, 0x04, 0x60, 0x0D, 0x68, 0x00, 0x24, 0x0C, 0x60, 0x45, 0x60, 0x82, 0x60
	.byte 0xC3, 0x60, 0x30, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x98, 0x82, 0x0E, 0x08

	thumb_func_start sub_80A3C8C
sub_80A3C8C: @ 0x080A3C8C
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _080A3CB8 @ =gUnknown_080E82A8
	str r0, [r4]
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080A3CA8
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080A3CA8:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_80007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080A3CB8: .4byte gUnknown_080E82A8
_080A3CBC:
	.byte 0x30, 0xB5, 0x05, 0x4C
	.byte 0x04, 0x60, 0x0D, 0x68, 0x00, 0x24, 0x0C, 0x60, 0x45, 0x60, 0x82, 0x60, 0xC3, 0x60, 0x30, 0xBC
	.byte 0x02, 0xBC, 0x08, 0x47, 0xA8, 0x82, 0x0E, 0x08, 0x10, 0xB5, 0x05, 0x4B, 0x03, 0x60, 0x0C, 0x68
	.byte 0x00, 0x23, 0x0B, 0x60, 0x44, 0x60, 0x82, 0x60, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00
	.byte 0xB8, 0x82, 0x0E, 0x08

	thumb_func_start sub_80A3CF4
sub_80A3CF4: @ 0x080A3CF4
	push {r4, r5, r6, lr}
	sub sp, #0xc
	adds r6, r0, #0
	adds r5, r1, #0
	movs r1, #0
	ldr r0, [r5, #0xc]
	cmp r0, #5
	bhi _080A3D5C
	lsls r0, r0, #2
	ldr r1, _080A3D10 @ =_080A3D14
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A3D10: .4byte _080A3D14
_080A3D14: @ jump table
	.4byte _080A3D2C @ case 0
	.4byte _080A3D34 @ case 1
	.4byte _080A3D3C @ case 2
	.4byte _080A3D44 @ case 3
	.4byte _080A3D4C @ case 4
	.4byte _080A3D54 @ case 5
_080A3D2C:
	ldr r1, _080A3D30 @ =gUnknown_08104E0C
	b _080A3D64
	.align 2, 0
_080A3D30: .4byte gUnknown_08104E0C
_080A3D34:
	ldr r1, _080A3D38 @ =gUnknown_08104E14
	b _080A3D64
	.align 2, 0
_080A3D38: .4byte gUnknown_08104E14
_080A3D3C:
	ldr r1, _080A3D40 @ =gUnknown_08104E1C
	b _080A3D64
	.align 2, 0
_080A3D40: .4byte gUnknown_08104E1C
_080A3D44:
	ldr r1, _080A3D48 @ =gUnknown_08104E24
	b _080A3D64
	.align 2, 0
_080A3D48: .4byte gUnknown_08104E24
_080A3D4C:
	ldr r1, _080A3D50 @ =gUnknown_08104E30
	b _080A3D64
	.align 2, 0
_080A3D50: .4byte gUnknown_08104E30
_080A3D54:
	ldr r1, _080A3D58 @ =gUnknown_08104E38
	b _080A3D64
	.align 2, 0
_080A3D58: .4byte gUnknown_08104E38
_080A3D5C:
	ldr r0, [r5, #4]
	str r1, [r5, #4]
	str r0, [r6]
	b _080A3E66
_080A3D64:
	mov r0, sp
	movs r2, #0
	bl sub_8007078
	add r0, sp, #8
	mov r1, sp
	bl sub_80070D4
	ldr r1, [sp, #8]
	cmp r1, #0
	beq _080A3D86
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080A3D86:
	ldr r0, [r5, #0xc]
	cmp r0, #5
	bhi _080A3E44
	lsls r0, r0, #2
	ldr r1, _080A3D98 @ =_080A3D9C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A3D98: .4byte _080A3D9C
_080A3D9C: @ jump table
	.4byte _080A3DB4 @ case 0
	.4byte _080A3DBE @ case 1
	.4byte _080A3DCE @ case 2
	.4byte _080A3DDE @ case 3
	.4byte _080A3E02 @ case 4
	.4byte _080A3E28 @ case 5
_080A3DB4:
	ldr r0, [r5, #8]
	adds r0, #0x14
	bl sub_8009C3C
	b _080A3DEC
_080A3DBE:
	ldr r0, [r5, #8]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	ldrb r1, [r5, #0x10]
	bl sub_800D3D0
	b _080A3DEC
_080A3DCE:
	ldr r0, [r5, #8]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	ldrb r1, [r5, #0x10]
	bl sub_800D3F8
	b _080A3DEC
_080A3DDE:
	ldr r0, [r5, #8]
	movs r1, #0x82
	lsls r1, r1, #3
	adds r0, r0, r1
	ldrb r1, [r5, #0x10]
	bl sub_800C894
_080A3DEC:
	adds r4, r0, #0
	cmp r4, #0
	beq _080A3E56
	mov r0, sp
	bl sub_8007110
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809B240
	b _080A3E56
_080A3E02:
	ldr r0, [r5, #8]
	ldr r1, _080A3E24 @ =0x00001CD4
	adds r0, r0, r1
	bl sub_80A0A04
	adds r4, r0, #0
	cmp r4, #0
	beq _080A3E56
	mov r0, sp
	bl sub_8007110
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_809EB20
	b _080A3E56
	.align 2, 0
_080A3E24: .4byte 0x00001CD4
_080A3E28:
	ldr r4, [r5, #8]
	ldr r0, _080A3E40 @ =0x00001BD8
	adds r4, r4, r0
	mov r0, sp
	bl sub_8007110
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_800E9A8
	b _080A3E56
	.align 2, 0
_080A3E40: .4byte 0x00001BD8
_080A3E44:
	ldr r1, [r5, #4]
	movs r0, #0
	str r0, [r5, #4]
	str r1, [r6]
	mov r0, sp
	movs r1, #2
	bl sub_80070A4
	b _080A3E66
_080A3E56:
	ldr r1, [r5, #4]
	movs r0, #0
	str r0, [r5, #4]
	str r1, [r6]
	mov r0, sp
	movs r1, #2
	bl sub_80070A4
_080A3E66:
	adds r0, r6, #0
	add sp, #0xc
	pop {r4, r5, r6}
	pop {r1}
	bx r1
_080A3E70:
	.byte 0x70, 0xB5, 0x04, 0x9E, 0x05, 0x4C, 0x04, 0x60, 0x0D, 0x68, 0x00, 0x24, 0x0C, 0x60, 0x45, 0x60
	.byte 0x82, 0x60, 0xC3, 0x60, 0x06, 0x74, 0x70, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0xC8, 0x82, 0x0E, 0x08

	thumb_func_start sub_80A3E90
sub_80A3E90: @ 0x080A3E90
	push {r4, r5, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r0, r1, #0
	adds r4, r2, #0
	bl sub_80A45A8
	str r0, [sp, #4]
	cmp r0, #7
	bne _080A3EAA
	movs r0, #0
	str r0, [sp]
	b _080A3F2E
_080A3EAA:
	movs r1, #3
	ldrh r0, [r4]
	lsls r2, r0, #0x1b
	lsrs r0, r2, #3
	movs r3, #0xfa
	lsls r3, r3, #0x18
	adds r0, r0, r3
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _080A3EC2
	movs r1, #0
	b _080A3EE4
_080A3EC2:
	lsrs r0, r2, #3
	movs r3, #0xf7
	lsls r3, r3, #0x18
	adds r0, r0, r3
	lsrs r0, r0, #0x18
	cmp r0, #7
	bhi _080A3ED4
	movs r1, #1
	b _080A3EE4
_080A3ED4:
	lsrs r0, r2, #3
	movs r2, #0xef
	lsls r2, r2, #0x18
	adds r0, r0, r2
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _080A3EE4
	movs r1, #2
_080A3EE4:
	ldr r2, _080A3F40 @ =gUnknown_08104E74
	lsls r1, r1, #1
	ldr r0, [sp, #4]
	lsls r0, r0, #3
	adds r1, r1, r0
	adds r1, r1, r2
	ldrh r0, [r1]
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r1, r1, #0x12
	lsrs r1, r1, #0x10
	ldr r2, _080A3F44 @ =0xFFFF0000
	ldr r0, [sp]
	ands r0, r2
	orrs r0, r1
	str r0, [sp]
	movs r4, #0
	bl sub_80D11E4
	asrs r0, r0, #8
	ldr r1, [sp, #4]
	cmp r1, #6
	bgt _080A3F1E
	cmp r1, #0
	blt _080A3F1E
	movs r1, #6
	bl sub_80D0ED0
	adds r4, r0, #5
_080A3F1E:
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #0x11
	ldr r2, _080A3F48 @ =0x0000FFFF
	ldr r1, [sp]
	ands r1, r2
	orrs r1, r0
	str r1, [sp]
_080A3F2E:
	ldr r0, [sp]
	ldr r1, [sp, #4]
	str r0, [r5]
	str r1, [r5, #4]
	adds r0, r5, #0
	add sp, #8
	pop {r4, r5}
	pop {r2}
	bx r2
	.align 2, 0
_080A3F40: .4byte gUnknown_08104E74
_080A3F44: .4byte 0xFFFF0000
_080A3F48: .4byte 0x0000FFFF

	thumb_func_start sub_80A3F4C
sub_80A3F4C: @ 0x080A3F4C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xa4
	str r0, [sp, #0x90]
	str r1, [sp, #0x94]
	mov sb, r3
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	str r2, [sp, #0x98]
	movs r7, #0
	mov r5, sp
	ldr r0, _080A3FD8 @ =gUnknown_08104E4C
	str r0, [sp]
	movs r4, #0
	strh r7, [r5, #4]
	add r0, sp, #8
	bl sub_800EFEC
	strb r4, [r5, #0xc]
	strb r4, [r5, #0xd]
	movs r0, #0x3b
	str r0, [sp, #0x10]
	strb r4, [r5, #0x14]
	movs r6, #0
	bl sub_80D11E4
	asrs r0, r0, #8
	movs r1, #0x64
	bl sub_80D0ED0
	movs r4, #0
	movs r3, #0
	ldr r1, _080A3FDC @ =gUnknown_08104EAC
	lsls r0, r0, #0x18
	asrs r5, r0, #0x18
	ldr r2, [sp, #0x94]
	lsls r0, r2, #2
	adds r0, r0, r2
	adds r1, r0, r1
_080A3FA0:
	ldrb r2, [r1]
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0
	ble _080A3FBA
	lsls r0, r4, #0x18
	asrs r0, r0, #0x18
	adds r0, r0, r2
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	asrs r0, r0, #0x18
	cmp r5, r0
	blt _080A3FE0
_080A3FBA:
	adds r1, #1
	adds r3, #1
	cmp r3, #4
	ble _080A3FA0
_080A3FC2:
	movs r5, #0
	movs r2, #0
	lsls r0, r6, #0x18
	asrs r0, r0, #0x18
	cmp r0, #2
	beq _080A3FF4
	cmp r0, #2
	bgt _080A3FE6
	cmp r0, #1
	beq _080A3FF0
	b _080A4006
	.align 2, 0
_080A3FD8: .4byte gUnknown_08104E4C
_080A3FDC: .4byte gUnknown_08104EAC
_080A3FE0:
	lsls r0, r3, #0x18
	lsrs r6, r0, #0x18
	b _080A3FC2
_080A3FE6:
	cmp r0, #3
	beq _080A3FFA
	cmp r0, #4
	beq _080A4000
	b _080A4006
_080A3FF0:
	movs r2, #3
	b _080A400A
_080A3FF4:
	movs r5, #4
	movs r2, #7
	b _080A400A
_080A3FFA:
	movs r5, #8
	movs r2, #0x34
	b _080A400A
_080A4000:
	movs r5, #0x35
	movs r2, #0x3a
	b _080A400A
_080A4006:
	movs r7, #1
	rsbs r7, r7, #0
_080A400A:
	movs r0, #1
	rsbs r0, r0, #0
	cmp r7, r0
	bne _080A4014
	b _080A449C
_080A4014:
	movs r3, #0
	mov sl, r3
	movs r7, #0
	movs r4, #0
	mov r8, r4
	movs r1, #0
	mov r0, sp
	adds r0, #0x18
	str r0, [sp, #0xa0]
	mov r3, sp
	adds r3, #0x48
	str r3, [sp, #0x9c]
	adds r2, #1
	mov ip, r2
	adds r4, r0, #0
	movs r2, #0
_080A4034:
	adds r0, r4, r1
	strb r2, [r0]
	adds r0, r3, r1
	strb r2, [r0]
	adds r1, #1
	cmp r1, #0x2c
	ble _080A4034
	adds r4, r5, #0
	cmp r4, ip
	bge _080A410C
	mov r1, sb
	ldrb r0, [r1, #0x11]
	lsls r0, r0, #0x1e
	lsrs r5, r0, #0x1e
	lsls r3, r4, #5
_080A4052:
	cmp r5, #1
	beq _080A4074
	cmp r5, #1
	bgt _080A4060
	cmp r5, #0
	beq _080A406A
	b _080A4092
_080A4060:
	cmp r5, #2
	beq _080A4080
	cmp r5, #3
	beq _080A408C
	b _080A4092
_080A406A:
	ldr r2, _080A4070 @ =gUnknown_08104ED2
	b _080A408E
	.align 2, 0
_080A4070: .4byte gUnknown_08104ED2
_080A4074:
	ldr r0, _080A407C @ =gUnknown_08104ED9
	adds r0, r0, r3
	mov r8, r0
	b _080A4092
	.align 2, 0
_080A407C: .4byte gUnknown_08104ED9
_080A4080:
	ldr r1, _080A4088 @ =gUnknown_08104EE0
	adds r1, r1, r3
	mov r8, r1
	b _080A4092
	.align 2, 0
_080A4088: .4byte gUnknown_08104EE0
_080A408C:
	ldr r2, _080A40E8 @ =gUnknown_08104EE7
_080A408E:
	adds r2, r2, r3
	mov r8, r2
_080A4092:
	ldr r0, [sp, #0x94]
	add r0, r8
	ldrb r2, [r0]
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r6, r0, #0
	cmp r1, #0
	beq _080A4104
	cmp r1, #0
	bge _080A40AC
	rsbs r0, r1, #0
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
_080A40AC:
	lsls r0, r2, #0x18
	movs r1, #0xff
	lsls r1, r1, #0x18
	adds r0, r0, r1
	lsrs r2, r0, #0x18
	ldr r0, [sp, #0x98]
	cmp r0, #6
	beq _080A40C0
	cmp r2, #7
	bne _080A40C2
_080A40C0:
	ldr r2, [sp, #0x98]
_080A40C2:
	lsls r0, r2, #0x18
	asrs r0, r0, #0x18
	ldr r1, [sp, #0x98]
	cmp r1, r0
	bne _080A4104
	movs r0, #0
	ldrsb r0, [r6, r0]
	cmp r0, #0
	ble _080A40EC
	lsls r0, r7, #0x18
	asrs r0, r0, #0x18
	ldr r2, [sp, #0x9c]
	adds r1, r2, r0
	strb r4, [r1]
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	b _080A4104
	.align 2, 0
_080A40E8: .4byte gUnknown_08104EE7
_080A40EC:
	cmp r0, #0
	bge _080A4104
	mov r1, sl
	lsls r0, r1, #0x18
	asrs r0, r0, #0x18
	ldr r2, [sp, #0xa0]
	adds r1, r2, r0
	strb r4, [r1]
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sl, r0
_080A4104:
	adds r3, #0x20
	adds r4, #1
	cmp r4, ip
	blt _080A4052
_080A410C:
	cmp r7, #0
	bne _080A4118
	mov r3, sl
	cmp r3, #0
	bne _080A4118
	b _080A4456
_080A4118:
	lsls r0, r7, #0x18
	cmp r0, #0
	ble _080A413E
	mov r4, sl
	lsls r0, r4, #0x18
	cmp r0, #0
	ble _080A413E
	bl sub_80D11E4
	asrs r0, r0, #8
	movs r1, #0x64
	bl sub_80D0ED0
	cmp r0, #0x45
	bgt _080A413C
	movs r0, #0
	mov sl, r0
	b _080A413E
_080A413C:
	movs r7, #0
_080A413E:
	lsls r0, r7, #0x18
	asrs r1, r0, #0x18
	mov r2, sl
	lsls r0, r2, #0x18
	asrs r0, r0, #0x18
	cmp r1, r0
	ble _080A4154
	adds r7, r1, #0
	ldr r3, [sp, #0x9c]
	mov r8, r3
	b _080A415A
_080A4154:
	adds r7, r0, #0
	ldr r4, [sp, #0xa0]
	mov r8, r4
_080A415A:
	cmp r7, #1
	ble _080A416E
	bl sub_80D11E4
	asrs r0, r0, #8
	adds r1, r7, #0
	bl sub_80D0ED0
	adds r7, r0, #0
	b _080A4170
_080A416E:
	movs r7, #0
_080A4170:
	mov r1, r8
	adds r0, r1, r7
	movs r7, #0
	ldrsb r7, [r0, r7]
	subs r0, r7, #2
	cmp r0, #0x38
	bls _080A4180
	b _080A445A
_080A4180:
	lsls r0, r0, #2
	ldr r1, _080A418C @ =_080A4190
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A418C: .4byte _080A4190
_080A4190: @ jump table
	.4byte _080A4274 @ case 0
	.4byte _080A4288 @ case 1
	.4byte _080A445A @ case 2
	.4byte _080A445A @ case 3
	.4byte _080A445A @ case 4
	.4byte _080A445A @ case 5
	.4byte _080A445A @ case 6
	.4byte _080A445A @ case 7
	.4byte _080A445A @ case 8
	.4byte _080A445A @ case 9
	.4byte _080A445A @ case 10
	.4byte _080A445A @ case 11
	.4byte _080A445A @ case 12
	.4byte _080A445A @ case 13
	.4byte _080A445A @ case 14
	.4byte _080A445A @ case 15
	.4byte _080A445A @ case 16
	.4byte _080A445A @ case 17
	.4byte _080A445A @ case 18
	.4byte _080A445A @ case 19
	.4byte _080A445A @ case 20
	.4byte _080A445A @ case 21
	.4byte _080A445A @ case 22
	.4byte _080A445A @ case 23
	.4byte _080A445A @ case 24
	.4byte _080A445A @ case 25
	.4byte _080A445A @ case 26
	.4byte _080A445A @ case 27
	.4byte _080A445A @ case 28
	.4byte _080A445A @ case 29
	.4byte _080A445A @ case 30
	.4byte _080A445A @ case 31
	.4byte _080A445A @ case 32
	.4byte _080A445A @ case 33
	.4byte _080A445A @ case 34
	.4byte _080A445A @ case 35
	.4byte _080A445A @ case 36
	.4byte _080A445A @ case 37
	.4byte _080A445A @ case 38
	.4byte _080A445A @ case 39
	.4byte _080A445A @ case 40
	.4byte _080A445A @ case 41
	.4byte _080A445A @ case 42
	.4byte _080A445A @ case 43
	.4byte _080A445A @ case 44
	.4byte _080A445A @ case 45
	.4byte _080A445A @ case 46
	.4byte _080A445A @ case 47
	.4byte _080A445A @ case 48
	.4byte _080A445A @ case 49
	.4byte _080A445A @ case 50
	.4byte _080A429C @ case 51
	.4byte _080A4330 @ case 52
	.4byte _080A435A @ case 53
	.4byte _080A436C @ case 54
	.4byte _080A43D0 @ case 55
	.4byte _080A443A @ case 56
_080A4274:
	movs r0, #0xb2
	lsls r0, r0, #6
	add r0, sb
	movs r1, #2
	bl sub_809CE1C
	cmp r0, #0
	bne _080A4286
	b _080A445A
_080A4286:
	b _080A4456
_080A4288:
	movs r0, #0xb2
	lsls r0, r0, #6
	add r0, sb
	movs r1, #3
	bl sub_809CE1C
	cmp r0, #0
	bne _080A429A
	b _080A445A
_080A429A:
	b _080A4456
_080A429C:
	movs r0, #0xb2
	lsls r0, r0, #6
	add r0, sb
	movs r1, #0x35
	bl sub_809CE1C
	cmp r0, #0
	beq _080A42AE
	b _080A4456
_080A42AE:
	add r1, sp, #0x78
	strh r0, [r1]
	ldrh r2, [r1, #0x12]
	ldr r0, _080A4324 @ =0xFFFFF000
	ands r0, r2
	strh r0, [r1, #0x12]
	ldrb r2, [r1, #0x13]
	movs r0, #0x11
	rsbs r0, r0, #0
	ands r0, r2
	strb r0, [r1, #0x13]
	mov r2, sp
	adds r2, #0x7a
	movs r3, #0
	add r0, sp, #0x88
_080A42CC:
	strh r3, [r0]
	subs r0, #2
	cmp r0, r2
	bge _080A42CC
	movs r6, #0
	movs r5, #0
	ldr r0, _080A4328 @ =0x00002C1A
	add r0, sb
	ldrb r0, [r0]
	cmp r6, r0
	bge _080A431A
	adds r4, r1, #0
_080A42E4:
	ldr r0, _080A432C @ =0x00002214
	add r0, sb
	adds r1, r4, #0
	adds r2, r5, #0
	bl sub_809A970
	ldrh r0, [r4]
	cmp r0, #0x7a
	beq _080A4302
	cmp r0, #0x7a
	blt _080A430E
	cmp r0, #0x81
	bgt _080A430E
	cmp r0, #0x80
	blt _080A430E
_080A4302:
	ldrb r1, [r4, #0x13]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080A430E
	adds r6, #1
_080A430E:
	adds r5, #1
	ldr r0, _080A4328 @ =0x00002C1A
	add r0, sb
	ldrb r0, [r0]
	cmp r5, r0
	blt _080A42E4
_080A431A:
	cmp r6, #2
	ble _080A4320
	b _080A445A
_080A4320:
	b _080A4456
	.align 2, 0
_080A4324: .4byte 0xFFFFF000
_080A4328: .4byte 0x00002C1A
_080A432C: .4byte 0x00002214
_080A4330:
	movs r0, #0xb2
	lsls r0, r0, #6
	add r0, sb
	movs r1, #0x36
	bl sub_809CE1C
	cmp r0, #0
	beq _080A4342
	b _080A4456
_080A4342:
	mov r2, sb
	ldrb r0, [r2, #0x12]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #3
	movs r3, #0xf8
	lsls r3, r3, #0x18
	adds r0, r0, r3
	lsrs r0, r0, #0x18
	cmp r0, #0xb
	bls _080A4358
	b _080A445A
_080A4358:
	b _080A4456
_080A435A:
	movs r0, #0xb2
	lsls r0, r0, #6
	add r0, sb
	movs r1, #0x37
	bl sub_809CE1C
	cmp r0, #0
	beq _080A445A
	b _080A4456
_080A436C:
	movs r0, #0xb2
	lsls r0, r0, #6
	add r0, sb
	movs r1, #0x38
	bl sub_809CE1C
	cmp r0, #0
	bne _080A4456
	movs r5, #0
	mov r4, sb
	adds r4, #0x54
	adds r0, r4, #0
	movs r1, #0x3d
	bl sub_800B124
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A439A
	adds r0, r4, #0
	movs r1, #0x3d
	bl sub_800B140
	adds r5, r0, #0
_080A439A:
	adds r0, r4, #0
	movs r1, #0x3e
	bl sub_800B124
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A43B2
	adds r0, r4, #0
	movs r1, #0x3e
	bl sub_800B140
	adds r5, r5, r0
_080A43B2:
	adds r0, r4, #0
	movs r1, #0x3f
	bl sub_800B124
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A43CA
	adds r0, r4, #0
	movs r1, #0x3f
	bl sub_800B140
	adds r5, r5, r0
_080A43CA:
	cmp r5, #0xc7
	bhi _080A445A
	b _080A4456
_080A43D0:
	movs r5, #0xb2
	lsls r5, r5, #6
	add r5, sb
	adds r0, r5, #0
	movs r1, #0x39
	bl sub_809CE1C
	cmp r0, #0
	bne _080A4456
	adds r0, r5, #0
	movs r1, #0x35
	bl sub_809CE1C
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r4, r1, #0x1f
	adds r0, r5, #0
	movs r1, #0x36
	bl sub_809CE1C
	cmp r0, #0
	beq _080A43FE
	adds r4, #1
_080A43FE:
	adds r0, r5, #0
	movs r1, #0x37
	bl sub_809CE1C
	cmp r0, #0
	beq _080A4410
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_080A4410:
	adds r0, r5, #0
	movs r1, #0x38
	bl sub_809CE1C
	cmp r0, #0
	beq _080A4422
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_080A4422:
	adds r0, r5, #0
	movs r1, #0x3a
	bl sub_809CE1C
	cmp r0, #0
	beq _080A4434
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_080A4434:
	cmp r4, #4
	bhi _080A445A
	b _080A4456
_080A443A:
	movs r0, #0xb2
	lsls r0, r0, #6
	add r0, sb
	movs r1, #0x3a
	bl sub_809CE1C
	cmp r0, #0
	bne _080A4456
	mov r0, sb
	bl sub_8010F04
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080A445A
_080A4456:
	movs r7, #1
	rsbs r7, r7, #0
_080A445A:
	movs r0, #1
	rsbs r0, r0, #0
	cmp r7, r0
	beq _080A449C
	cmp r7, #7
	bgt _080A44C4
	cmp r7, #2
	beq _080A44A8
	add r4, sp, #0x8c
	ldr r1, _080A44A4 @ =gUnknown_08104E54
	lsls r0, r7, #2
	adds r0, r0, r1
	ldr r5, [r0]
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800DF50
	ldrb r1, [r4]
	ldr r0, [sp, #0xa0]
	bl sub_800F040
	ldr r0, [sp, #0x18]
	str r0, [sp, #8]
	mov r4, sp
	adds r4, #0x8d
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800DF50
	adds r0, r4, #0
	bl sub_800DF58
	str r0, [sp]
_080A449C:
	mov r1, sp
	movs r0, #0
	strh r0, [r1, #4]
	b _080A454C
	.align 2, 0
_080A44A4: .4byte gUnknown_08104E54
_080A44A8:
	mov r1, sp
	movs r4, #0
	movs r0, #1
	strb r0, [r1, #0xc]
	movs r0, #0xb2
	lsls r0, r0, #6
	add r0, sb
	movs r1, #2
	bl sub_809CE7C
	str r0, [sp]
	mov r0, sp
	strh r4, [r0, #4]
	b _080A454C
_080A44C4:
	mov r2, sp
	ldr r1, _080A4500 @ =gUnknown_08104ED0
	lsls r0, r7, #5
	adds r0, r0, r1
	ldrb r1, [r0]
	strh r1, [r2, #4]
	ldrb r1, [r0, #1]
	mov r0, sp
	ldrh r0, [r0, #4]
	subs r6, r1, r0
	cmp r6, #0
	ble _080A44F2
	bl sub_80D11E4
	mov r5, sp
	mov r4, sp
	asrs r0, r0, #8
	adds r1, r6, #1
	bl sub_80D0ED0
	ldrh r1, [r4, #4]
	adds r1, r1, r0
	strh r1, [r5, #4]
_080A44F2:
	movs r1, #0xa2
	mov r0, sp
	ldrh r0, [r0, #4]
	cmp r0, #0x19
	bhi _080A4504
	movs r1, #0xa0
	b _080A450A
	.align 2, 0
_080A4500: .4byte gUnknown_08104ED0
_080A4504:
	cmp r0, #0x31
	bhi _080A450A
	movs r1, #0xa1
_080A450A:
	add r4, sp, #0x1c
	adds r0, r4, #0
	bl sub_800DCA8
	ldrb r1, [r4]
	mov r0, sp
	adds r0, #0x1d
	ldrb r0, [r0]
	lsls r0, r0, #8
	orrs r0, r1
	mov r1, sp
	adds r1, #0x1e
	ldrb r1, [r1]
	lsls r1, r1, #0x10
	orrs r1, r0
	ldr r0, [sp, #0xa0]
	bl sub_800F004
	ldr r0, [sp, #0x18]
	str r0, [sp, #8]
	movs r0, #0xb2
	lsls r0, r0, #6
	add r0, sb
	adds r1, r7, #0
	bl sub_809CE7C
	str r0, [sp]
	cmp r7, #0x34
	ble _080A454C
	mov r1, sp
	movs r0, #1
	strb r0, [r1, #0xd]
	str r7, [sp, #0x10]
_080A454C:
	movs r0, #1
	rsbs r0, r0, #0
	cmp r7, r0
	beq _080A4588
	movs r4, #0xb2
	lsls r4, r4, #6
	add r4, sb
	adds r0, r4, #0
	adds r1, r7, #0
	bl sub_809CE24
	movs r5, #0
	cmp r0, #0
	bne _080A456A
	movs r5, #1
_080A456A:
	mov r0, sp
	ldrh r2, [r0, #4]
	adds r0, r4, #0
	adds r1, r7, #0
	bl sub_809CD98
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r5, #0
	bne _080A4588
	cmp r0, #0
	beq _080A4588
	mov r1, sp
	movs r0, #1
	strb r0, [r1, #0x14]
_080A4588:
	ldr r1, [sp, #0x90]
	mov r0, sp
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldr r0, [sp, #0x90]
	add sp, #0xa4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80A45A8
sub_80A45A8: @ 0x080A45A8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r2, r0, #0
	movs r0, #7
	mov r8, r0
	ldrb r1, [r2, #1]
	lsrs r1, r1, #2
	ldrh r0, [r2, #2]
	ldr r3, _080A4630 @ =0x000003FF
	ands r0, r3
	lsls r0, r0, #6
	orrs r0, r1
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bge _080A45CC
	adds r0, #7
_080A45CC:
	asrs r5, r0, #3
	ldrb r1, [r2, #3]
	lsrs r1, r1, #2
	ldrh r0, [r2, #4]
	ands r0, r3
	lsls r0, r0, #6
	orrs r0, r1
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bge _080A45E4
	adds r0, #7
_080A45E4:
	asrs r3, r0, #3
	movs r4, #0
	ldrh r0, [r2]
	ldr r6, _080A4634 @ =gUnknown_0810563C
	lsls r0, r0, #0x16
	lsrs r7, r0, #0x16
	adds r2, r6, #0
	mov ip, r2
	movs r1, #0
_080A45F6:
	ldr r0, [r2]
	cmp r7, r0
	bne _080A4638
	adds r0, r6, #4
	adds r0, r1, r0
	ldr r0, [r0]
	cmp r5, r0
	blt _080A4638
	mov r0, ip
	adds r0, #0xc
	adds r0, r1, r0
	ldr r0, [r0]
	cmp r5, r0
	bgt _080A4638
	mov r0, ip
	adds r0, #8
	adds r0, r1, r0
	ldr r0, [r0]
	cmp r3, r0
	blt _080A4638
	mov r0, ip
	adds r0, #0x10
	adds r0, r1, r0
	ldr r0, [r0]
	cmp r3, r0
	bgt _080A4638
	ldr r2, [r2, #0x14]
	mov r8, r2
	b _080A4642
	.align 2, 0
_080A4630: .4byte 0x000003FF
_080A4634: .4byte gUnknown_0810563C
_080A4638:
	adds r2, #0x18
	adds r1, #0x18
	adds r4, #1
	cmp r4, #7
	ble _080A45F6
_080A4642:
	mov r0, r8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80A4650
sub_80A4650: @ 0x080A4650
	push {r4, lr}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r4, _080A4688 @ =gUnknown_08105708
	lsls r3, r3, #2
	lsls r2, r2, #4
	adds r3, r3, r2
	adds r3, r3, r4
	ldr r3, [r3]
	lsls r2, r0, #4
	subs r2, r2, r0
	lsls r2, r2, #2
	adds r2, r2, r1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	movs r0, #0
	ldrh r1, [r3]
	ldr r4, _080A468C @ =0x0000FFFF
_080A4678:
	cmp r1, r4
	beq _080A4690
	cmp r1, r2
	bhi _080A4690
	ldrb r0, [r3, #2]
	adds r3, #4
	ldrh r1, [r3]
	b _080A4678
	.align 2, 0
_080A4688: .4byte gUnknown_08105708
_080A468C: .4byte 0x0000FFFF
_080A4690:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80A4698
sub_80A4698: @ 0x080A4698
	adds r1, r0, #0
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #3
	ldr r1, _080A46A8 @ =gUnknown_08105EDC
	adds r0, r0, r1
	bx lr
	.align 2, 0
_080A46A8: .4byte gUnknown_08105EDC

	thumb_func_start sub_80A46AC
sub_80A46AC: @ 0x080A46AC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	adds r6, r0, #0
	adds r7, r1, #0
	adds r5, r2, #0
	mov r8, r3
	ldr r0, [sp, #0x20]
	mov sb, r0
	ldr r0, _080A473C @ =gUnknown_080E82D8
	str r0, [r6, #0x24]
	adds r4, r6, #0
	stm r4!, {r7}
	adds r0, r4, #0
	bl sub_8007874
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_8007B54
	adds r1, r0, #0
	str r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007D4C
	movs r1, #0
	movs r2, #0
	strh r0, [r6, #0xc]
	mov r0, sp
	strb r1, [r0]
	str r2, [r6, #0x10]
	mov r2, sb
	cmp r2, #0x10
	bhi _080A4704
	adds r0, r6, #0
	adds r0, #0x14
	mov r1, sp
	ldrb r1, [r1]
	bl sub_80D3A84
	mov r0, sb
	str r0, [r6, #0x10]
_080A4704:
	movs r5, #0
	cmp r5, sb
	bhs _080A472C
	adds r4, r6, #0
	adds r4, #0x14
_080A470E:
	ldr r0, [r7]
	mov r2, r8
	adds r2, #4
	mov r8, r2
	subs r2, #4
	ldm r2!, {r1}
	ldr r2, [r0, #0x48]
	adds r0, r7, #0
	bl sub_80D3914
	strb r0, [r4]
	adds r4, #1
	adds r5, #1
	cmp r5, sb
	blo _080A470E
_080A472C:
	adds r0, r6, #0
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080A473C: .4byte gUnknown_080E82D8

	thumb_func_start sub_80A4740
sub_80A4740: @ 0x080A4740
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #4
	adds r5, r0, #0
	adds r6, r1, #0
	mov r8, r2
	mov sb, r3
	ldr r0, _080A47B0 @ =gUnknown_080E82D8
	str r0, [r5, #0x24]
	adds r4, r5, #0
	stm r4!, {r6}
	adds r0, r4, #0
	bl sub_8007874
	adds r0, r4, #0
	mov r1, r8
	bl sub_8007B54
	adds r1, r0, #0
	str r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007D4C
	movs r1, #0
	movs r2, #0
	strh r0, [r5, #0xc]
	movs r4, #1
	mov r0, sp
	strb r1, [r0]
	str r2, [r5, #0x10]
	adds r0, r5, #0
	adds r0, #0x14
	mov r1, sp
	ldrb r1, [r1]
	movs r2, #1
	bl sub_80D3A84
	str r4, [r5, #0x10]
	ldr r0, [r6]
	ldr r2, [r0, #0x48]
	adds r0, r6, #0
	mov r1, sb
	bl sub_80D3914
	strb r0, [r5, #0x14]
	adds r0, r5, #0
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A47B0: .4byte gUnknown_080E82D8

	thumb_func_start sub_80A47B4
sub_80A47B4: @ 0x080A47B4
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r7, r1, #0
	ldr r0, _080A4808 @ =gUnknown_080E82D8
	str r0, [r5, #0x24]
	movs r6, #0
	ldr r0, [r5, #0x10]
	cmp r6, r0
	bhs _080A47E0
	adds r4, r5, #0
	adds r4, #0x14
_080A47CA:
	ldr r0, [r5]
	ldr r2, [r0]
	ldrb r1, [r4]
	ldr r2, [r2, #0x4c]
	bl sub_80D3914
	adds r4, #1
	adds r6, #1
	ldr r0, [r5, #0x10]
	cmp r6, r0
	blo _080A47CA
_080A47E0:
	adds r4, r5, #4
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r0, #1
	ands r0, r7
	cmp r0, #0
	beq _080A4800
	adds r0, r5, #0
	bl sub_8000608
_080A4800:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A4808: .4byte gUnknown_080E82D8

	thumb_func_start sub_80A480C
sub_80A480C: @ 0x080A480C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	adds r5, r1, #0
	ldr r6, [r2]
	movs r4, #0
	cmp r6, #0
	beq _080A4824
	ldrh r4, [r2, #4]
_080A4824:
	cmp r4, #0
	bne _080A482A
	b _080A4932
_080A482A:
	adds r0, #4
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r2, r0, #0
	lsls r2, r2, #5
	ldr r0, _080A4868 @ =0x06010000
	adds r2, r2, r0
	mov r0, sp
	adds r1, r6, #0
	adds r3, r4, #0
	bl sub_8008F0C
	mov sb, sp
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080A486C
	cmp r1, #0
	beq _080A485E
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080A485E:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080A4932
	.align 2, 0
_080A4868: .4byte 0x06010000
_080A486C:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x14]
	ldr r1, [r5]
	mov r6, sl
	subs r0, r6, r1
	asrs r4, r0, #4
	str r4, [sp, #0x10]
	add r2, sp, #0x14
	add r0, sp, #0x10
	cmp r4, #1
	bhs _080A4886
	adds r0, r2, #0
_080A4886:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080A48A6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080A48A2
	mov r0, r8
	bl sub_80D3BC0
_080A48A2:
	ldr r1, [r5]
	b _080A48AA
_080A48A6:
	movs r0, #0
	mov r8, r0
_080A48AA:
	adds r4, r0, #0
	str r4, [sp, #0x18]
	adds r2, r1, #0
	adds r3, r4, #0
	cmp r2, sl
	beq _080A48CE
_080A48B6:
	cmp r3, #0
	beq _080A48C6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080A48C6:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080A48B6
_080A48CE:
	adds r4, r3, #0
	ldr r0, [sp, #0x14]
	cmp r0, #1
	bne _080A48EA
	cmp r4, #0
	beq _080A48E6
	adds r0, r4, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080A48E6:
	adds r4, #0x10
	b _080A490C
_080A48EA:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080A490A
_080A48F2:
	cmp r2, #0
	beq _080A4902
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080A4902:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080A48F2
_080A490A:
	adds r4, r2, #0
_080A490C:
	ldr r2, [r5, #4]
	ldr r1, [r5]
	adds r0, r1, #0
	cmp r1, r2
	beq _080A491C
_080A4916:
	adds r0, #0x10
	cmp r0, r2
	bne _080A4916
_080A491C:
	cmp r1, #0
	beq _080A4926
	adds r0, r1, #0
	bl sub_80D0260
_080A4926:
	ldr r0, [sp, #0x18]
	add r0, r8
	ldr r1, [sp, #0x18]
	str r1, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080A4932:
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80A4944
sub_80A4944: @ 0x080A4944
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	mov sl, r2
	ldr r3, [r1]
	movs r2, #0
	cmp r3, #0
	beq _080A495E
	ldrh r2, [r1, #4]
_080A495E:
	cmp r2, #0
	beq _080A4992
	ldr r1, [r0]
	mov r8, r1
	lsrs r2, r2, #5
	mov sb, r2
	adds r6, r3, #0
	movs r7, #0
	cmp r7, sb
	bhs _080A4992
	adds r5, r0, #0
	adds r5, #0x14
_080A4976:
	mov r1, r8
	ldr r0, [r1]
	ldrb r2, [r5]
	ldr r4, [r0, #0x54]
	mov r0, r8
	adds r1, r6, #0
	mov r3, sl
	bl sub_80D391C
	adds r5, #1
	adds r7, #1
	adds r6, #0x20
	cmp r7, sb
	blo _080A4976
_080A4992:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80A49A0
sub_80A49A0: @ 0x080A49A0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r7, r0, #0
	adds r5, r1, #0
	adds r6, r2, #0
	adds r1, r3, #0
	ldr r2, [sp, #0x1c]
	ldr r3, [sp, #0x20]
	ldr r4, [sp, #0x24]
	add r0, sp, #0x28
	ldrb r0, [r0]
	mov r8, r0
	str r4, [sp]
	adds r0, r7, #0
	bl sub_80A46AC
	ldr r0, _080A49FC @ =gUnknown_080E681C
	str r0, [r7, #0x24]
	adds r0, r7, #0
	adds r0, #0x28
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r5, #0
	adds r2, r6, #0
	bl sub_805E824
	adds r1, r7, #0
	adds r1, #0x3c
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x3d
	mov r1, r8
	strb r1, [r0]
	adds r0, #1
	strb r2, [r0]
	adds r0, r7, #0
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080A49FC: .4byte gUnknown_080E681C

	thumb_func_start sub_80A4A00
sub_80A4A00: @ 0x080A4A00
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r4, r1, #0
	adds r5, r2, #0
	adds r1, r3, #0
	ldr r2, [sp, #0x14]
	ldr r3, [sp, #0x18]
	add r0, sp, #0x1c
	ldrb r6, [r0]
	adds r0, r7, #0
	bl sub_80A4740
	ldr r0, _080A4A48 @ =gUnknown_080E681C
	str r0, [r7, #0x24]
	adds r0, r7, #0
	adds r0, #0x28
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r4, #0
	adds r2, r5, #0
	bl sub_805E824
	adds r1, r7, #0
	adds r1, #0x3c
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x3d
	strb r6, [r0]
	adds r0, #1
	strb r2, [r0]
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080A4A48: .4byte gUnknown_080E681C
_080A4A4C:
	.byte 0x70, 0xB5, 0x85, 0xB0
	.byte 0x04, 0x1C, 0x0D, 0x1C, 0x16, 0x1C, 0xA1, 0x68, 0x48, 0x42, 0x08, 0x43, 0x00, 0x28, 0x01, 0xDB
	.byte 0x00, 0x20, 0x11, 0xE0, 0xA1, 0x89, 0x22, 0x1C, 0x10, 0x32, 0x0A, 0x98, 0x00, 0x90, 0x0B, 0x98
	.byte 0x01, 0x90, 0x0C, 0x98, 0x02, 0x90, 0x03, 0x91, 0x04, 0x92, 0x28, 0x1C, 0x31, 0x1C, 0x1A, 0x1C
	.byte 0x09, 0x9B, 0x03, 0x4C, 0x2E, 0xF0, 0x4A, 0xFF, 0x05, 0xB0, 0x70, 0xBC, 0x02, 0xBC, 0x08, 0x47
	.byte 0xDC, 0x04, 0x00, 0x03

	thumb_func_start sub_80A4A94
sub_80A4A94: @ 0x080A4A94
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x90
	ldr r0, _080A4B64 @ =gUnknown_080E82E4
	str r0, [r1]
	movs r0, #0x8d
	lsls r0, r0, #2
	str r0, [r4]
	movs r0, #0x42
	str r0, [r4, #4]
	movs r0, #0
	str r0, [r4, #8]
	str r0, [r4, #0xc]
	subs r1, #0x68
	strb r0, [r1]
	adds r1, #1
	strb r0, [r1]
	adds r1, #1
	strb r0, [r1]
	str r0, [r4, #0x2c]
	adds r1, #6
	strb r0, [r1]
	strb r0, [r1, #1]
	strb r0, [r1, #2]
	adds r1, #4
	strb r0, [r1]
	strb r0, [r1, #1]
	strb r0, [r1, #2]
	adds r1, #4
	strb r0, [r1]
	strb r0, [r1, #1]
	strb r0, [r1, #2]
	adds r1, #4
	strb r0, [r1]
	strb r0, [r1, #1]
	strb r0, [r1, #2]
	adds r1, #4
	strb r0, [r1]
	strb r0, [r1, #1]
	strb r0, [r1, #2]
	adds r1, #4
	strb r0, [r1]
	strb r0, [r1, #1]
	strb r0, [r1, #2]
	adds r1, #4
	strb r0, [r1]
	strb r0, [r1, #1]
	strb r0, [r1, #2]
	adds r1, #4
	strb r0, [r1]
	strb r0, [r1, #1]
	strb r0, [r1, #2]
	adds r1, #4
	strb r0, [r1]
	strb r0, [r1, #1]
	strb r0, [r1, #2]
	adds r1, #4
	strb r0, [r1]
	strb r0, [r1, #1]
	strb r0, [r1, #2]
	adds r1, #4
	strb r0, [r1]
	adds r2, r4, #0
	adds r2, #0x5c
	str r0, [r4, #0x5c]
	str r0, [r2, #4]
	ldr r1, _080A4B68 @ =gUnknown_080E830C
	str r1, [r2, #8]
	adds r1, r4, #0
	adds r1, #0x8c
	str r0, [r1]
	movs r5, #0
	adds r6, r4, #0
	adds r6, #0x1c
_080A4B2A:
	movs r0, #0xf0
	lsls r0, r0, #1
	bl sub_80005E4
	stm r6!, {r0}
	adds r5, #1
	cmp r5, #2
	bls _080A4B2A
	movs r5, #0
	adds r6, r4, #0
	adds r6, #0x10
_080A4B40:
	movs r0, #0xf2
	lsls r0, r0, #7
	bl sub_80005E4
	stm r6!, {r0}
	adds r5, #1
	cmp r5, #2
	bls _080A4B40
	movs r0, #0xf2
	lsls r0, r0, #8
	bl sub_80005E4
	str r0, [r4, #0x2c]
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A4B64: .4byte gUnknown_080E82E4
_080A4B68: .4byte gUnknown_080E830C

	thumb_func_start sub_80A4B6C
sub_80A4B6C: @ 0x080A4B6C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r6, r0, #0
	mov sb, r1
	adds r1, r6, #0
	adds r1, #0x90
	ldr r0, _080A4BE8 @ =gUnknown_080E82E4
	str r0, [r1]
	ldr r0, [r6, #0x2c]
	cmp r0, #0
	beq _080A4B8A
	bl sub_8000614
_080A4B8A:
	movs r5, #0
	adds r7, r6, #0
	adds r7, #0x1c
	movs r0, #0x5c
	adds r0, r0, r6
	mov r8, r0
	adds r4, r6, #0
	adds r4, #0x10
_080A4B9A:
	ldr r0, [r4]
	cmp r0, #0
	beq _080A4BA4
	bl sub_8000614
_080A4BA4:
	adds r4, #4
	adds r5, #1
	cmp r5, #2
	bls _080A4B9A
	movs r5, #0
	adds r4, r7, #0
_080A4BB0:
	ldr r0, [r4]
	cmp r0, #0
	beq _080A4BBA
	bl sub_8000614
_080A4BBA:
	adds r4, #4
	adds r5, #1
	cmp r5, #2
	bls _080A4BB0
	mov r0, r8
	movs r1, #2
	bl sub_80098AC
	movs r0, #1
	mov r1, sb
	ands r0, r1
	cmp r0, #0
	beq _080A4BDA
	adds r0, r6, #0
	bl sub_8000608
_080A4BDA:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A4BE8: .4byte gUnknown_080E82E4

	thumb_func_start sub_80A4BEC
sub_80A4BEC: @ 0x080A4BEC
	push {r4, r5, lr}
	adds r2, r0, #0
	adds r3, r2, #0
	adds r3, #0x8c
	ldr r0, [r3]
	cmp r0, #0
	beq _080A4C20
	adds r1, r2, #0
	adds r1, #0x84
	ldr r0, [r2, #8]
	ldr r1, [r1]
	adds r0, r0, r1
	str r0, [r2, #8]
	adds r1, r2, #0
	adds r1, #0x88
	ldr r0, [r2, #0xc]
	ldr r1, [r1]
	adds r0, r0, r1
	str r0, [r2, #0xc]
	ldr r0, [r3]
	subs r0, #1
	str r0, [r3]
	adds r1, r2, #0
	adds r1, #0x29
	movs r0, #1
	strb r0, [r1]
_080A4C20:
	ldr r0, [r2, #4]
	cmp r0, #0x3f
	bls _080A4C28
	b _080A4F40
_080A4C28:
	lsls r0, r0, #2
	ldr r1, _080A4C34 @ =_080A4C38
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A4C34: .4byte _080A4C38
_080A4C38: @ jump table
	.4byte _080A4ED8 @ case 0
	.4byte _080A4F08 @ case 1
	.4byte _080A4F40 @ case 2
	.4byte _080A4F40 @ case 3
	.4byte _080A4F40 @ case 4
	.4byte _080A4F40 @ case 5
	.4byte _080A4E78 @ case 6
	.4byte _080A4EA8 @ case 7
	.4byte _080A4E38 @ case 8
	.4byte _080A4E58 @ case 9
	.4byte _080A4F40 @ case 10
	.4byte _080A4F40 @ case 11
	.4byte _080A4F40 @ case 12
	.4byte _080A4F40 @ case 13
	.4byte _080A4D38 @ case 14
	.4byte _080A4D98 @ case 15
	.4byte _080A4F40 @ case 16
	.4byte _080A4F40 @ case 17
	.4byte _080A4F40 @ case 18
	.4byte _080A4F40 @ case 19
	.4byte _080A4F40 @ case 20
	.4byte _080A4F40 @ case 21
	.4byte _080A4F40 @ case 22
	.4byte _080A4F40 @ case 23
	.4byte _080A4F40 @ case 24
	.4byte _080A4F40 @ case 25
	.4byte _080A4F40 @ case 26
	.4byte _080A4F40 @ case 27
	.4byte _080A4F40 @ case 28
	.4byte _080A4F40 @ case 29
	.4byte _080A4F40 @ case 30
	.4byte _080A4E18 @ case 31
	.4byte _080A4F40 @ case 32
	.4byte _080A4F40 @ case 33
	.4byte _080A4F40 @ case 34
	.4byte _080A4F40 @ case 35
	.4byte _080A4F40 @ case 36
	.4byte _080A4F40 @ case 37
	.4byte _080A4F40 @ case 38
	.4byte _080A4F40 @ case 39
	.4byte _080A4F40 @ case 40
	.4byte _080A4F40 @ case 41
	.4byte _080A4F40 @ case 42
	.4byte _080A4F40 @ case 43
	.4byte _080A4F40 @ case 44
	.4byte _080A4F40 @ case 45
	.4byte _080A4F40 @ case 46
	.4byte _080A4F40 @ case 47
	.4byte _080A4F40 @ case 48
	.4byte _080A4F40 @ case 49
	.4byte _080A4F40 @ case 50
	.4byte _080A4F40 @ case 51
	.4byte _080A4F40 @ case 52
	.4byte _080A4F40 @ case 53
	.4byte _080A4F40 @ case 54
	.4byte _080A4F40 @ case 55
	.4byte _080A4F40 @ case 56
	.4byte _080A4F40 @ case 57
	.4byte _080A4F40 @ case 58
	.4byte _080A4F40 @ case 59
	.4byte _080A4DF8 @ case 60
	.4byte _080A4F40 @ case 61
	.4byte _080A4ED8 @ case 62
	.4byte _080A4ED8 @ case 63
_080A4D38:
	adds r3, r2, #0
	adds r3, #0x40
	ldr r1, _080A4D8C @ =gUnknown_0810718C
	ldrb r0, [r3, #2]
	adds r0, #1
	movs r4, #0
	strb r0, [r3, #2]
	movs r5, #0xff
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrh r1, [r1, #8]
	cmp r0, r1
	blo _080A4D58
	strb r4, [r3, #2]
	movs r0, #1
	strb r0, [r3, #1]
_080A4D58:
	adds r3, r2, #0
	adds r3, #0x44
	ldr r1, _080A4D90 @ =gUnknown_08107198
	ldrb r0, [r3, #2]
	adds r0, #1
	strb r0, [r3, #2]
	ands r0, r5
	ldrh r1, [r1, #8]
	cmp r0, r1
	blo _080A4D72
	strb r4, [r3, #2]
	movs r0, #1
	strb r0, [r3, #1]
_080A4D72:
	adds r2, #0x48
	ldr r1, _080A4D94 @ =gUnknown_081071A4
	ldrb r0, [r2, #2]
	adds r0, #1
	strb r0, [r2, #2]
	ands r0, r5
	ldrh r1, [r1, #8]
	cmp r0, r1
	bhs _080A4D86
	b _080A4F40
_080A4D86:
	strb r4, [r2, #2]
	b _080A4F3C
	.align 2, 0
_080A4D8C: .4byte gUnknown_0810718C
_080A4D90: .4byte gUnknown_08107198
_080A4D94: .4byte gUnknown_081071A4
_080A4D98:
	adds r3, r2, #0
	adds r3, #0x40
	ldr r1, _080A4DEC @ =gUnknown_081071B0
	ldrb r0, [r3, #2]
	adds r0, #1
	movs r4, #0
	strb r0, [r3, #2]
	movs r5, #0xff
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrh r1, [r1, #8]
	cmp r0, r1
	blo _080A4DB8
	strb r4, [r3, #2]
	movs r0, #1
	strb r0, [r3, #1]
_080A4DB8:
	adds r3, r2, #0
	adds r3, #0x44
	ldr r1, _080A4DF0 @ =gUnknown_081071BC
	ldrb r0, [r3, #2]
	adds r0, #1
	strb r0, [r3, #2]
	ands r0, r5
	ldrh r1, [r1, #8]
	cmp r0, r1
	blo _080A4DD2
	strb r4, [r3, #2]
	movs r0, #1
	strb r0, [r3, #1]
_080A4DD2:
	adds r2, #0x48
	ldr r1, _080A4DF4 @ =gUnknown_081071C8
	ldrb r0, [r2, #2]
	adds r0, #1
	strb r0, [r2, #2]
	ands r0, r5
	ldrh r1, [r1, #8]
	cmp r0, r1
	bhs _080A4DE6
	b _080A4F40
_080A4DE6:
	strb r4, [r2, #2]
	b _080A4F3C
	.align 2, 0
_080A4DEC: .4byte gUnknown_081071B0
_080A4DF0: .4byte gUnknown_081071BC
_080A4DF4: .4byte gUnknown_081071C8
_080A4DF8:
	adds r2, #0x50
	ldr r1, _080A4E14 @ =gUnknown_081071F8
	ldrb r0, [r2, #2]
	adds r0, #1
	strb r0, [r2, #2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrh r1, [r1, #8]
	cmp r0, r1
	bhs _080A4E0E
	b _080A4F40
_080A4E0E:
	movs r0, #0
	strb r0, [r2, #2]
	b _080A4F3C
	.align 2, 0
_080A4E14: .4byte gUnknown_081071F8
_080A4E18:
	adds r2, #0x54
	ldr r1, _080A4E34 @ =gUnknown_081071E0
	ldrb r0, [r2, #2]
	adds r0, #1
	strb r0, [r2, #2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrh r1, [r1, #8]
	cmp r0, r1
	bhs _080A4E2E
	b _080A4F40
_080A4E2E:
	movs r0, #0
	strb r0, [r2, #2]
	b _080A4F3C
	.align 2, 0
_080A4E34: .4byte gUnknown_081071E0
_080A4E38:
	adds r2, #0x4c
	ldr r1, _080A4E54 @ =gUnknown_081071D4
	ldrb r0, [r2, #2]
	adds r0, #1
	strb r0, [r2, #2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrh r1, [r1, #8]
	cmp r0, r1
	blo _080A4F40
	movs r0, #0
	strb r0, [r2, #2]
	b _080A4F3C
	.align 2, 0
_080A4E54: .4byte gUnknown_081071D4
_080A4E58:
	adds r2, #0x4c
	ldr r1, _080A4E74 @ =gUnknown_081071EC
	ldrb r0, [r2, #2]
	adds r0, #1
	strb r0, [r2, #2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrh r1, [r1, #8]
	cmp r0, r1
	blo _080A4F40
	movs r0, #0
	strb r0, [r2, #2]
	b _080A4F3C
	.align 2, 0
_080A4E74: .4byte gUnknown_081071EC
_080A4E78:
	adds r3, r2, #0
	adds r3, #0x38
	ldr r1, _080A4EA0 @ =gUnknown_0810715C
	ldrb r0, [r3, #2]
	adds r0, #1
	movs r5, #0
	strb r0, [r3, #2]
	movs r4, #0xff
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrh r1, [r1, #8]
	cmp r0, r1
	blo _080A4E98
	strb r5, [r3, #2]
	movs r0, #1
	strb r0, [r3, #1]
_080A4E98:
	adds r2, #0x3c
	ldr r1, _080A4EA4 @ =gUnknown_08107168
	b _080A4F2C
	.align 2, 0
_080A4EA0: .4byte gUnknown_0810715C
_080A4EA4: .4byte gUnknown_08107168
_080A4EA8:
	adds r3, r2, #0
	adds r3, #0x38
	ldr r1, _080A4ED0 @ =gUnknown_08107174
	ldrb r0, [r3, #2]
	adds r0, #1
	movs r5, #0
	strb r0, [r3, #2]
	movs r4, #0xff
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrh r1, [r1, #8]
	cmp r0, r1
	blo _080A4EC8
	strb r5, [r3, #2]
	movs r0, #1
	strb r0, [r3, #1]
_080A4EC8:
	adds r2, #0x3c
	ldr r1, _080A4ED4 @ =gUnknown_08107180
	b _080A4F2C
	.align 2, 0
_080A4ED0: .4byte gUnknown_08107174
_080A4ED4: .4byte gUnknown_08107180
_080A4ED8:
	adds r3, r2, #0
	adds r3, #0x30
	ldr r1, _080A4F00 @ =gUnknown_08107114
	ldrb r0, [r3, #2]
	adds r0, #1
	movs r5, #0
	strb r0, [r3, #2]
	movs r4, #0xff
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrh r1, [r1, #8]
	cmp r0, r1
	blo _080A4EF8
	strb r5, [r3, #2]
	movs r0, #1
	strb r0, [r3, #1]
_080A4EF8:
	adds r2, #0x34
	ldr r1, _080A4F04 @ =gUnknown_0810712C
	b _080A4F2C
	.align 2, 0
_080A4F00: .4byte gUnknown_08107114
_080A4F04: .4byte gUnknown_0810712C
_080A4F08:
	adds r3, r2, #0
	adds r3, #0x30
	ldr r1, _080A4F48 @ =gUnknown_08107120
	ldrb r0, [r3, #2]
	adds r0, #1
	movs r5, #0
	strb r0, [r3, #2]
	movs r4, #0xff
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrh r1, [r1, #8]
	cmp r0, r1
	blo _080A4F28
	strb r5, [r3, #2]
	movs r0, #1
	strb r0, [r3, #1]
_080A4F28:
	adds r2, #0x34
	ldr r1, _080A4F4C @ =gUnknown_08107138
_080A4F2C:
	ldrb r0, [r2, #2]
	adds r0, #1
	strb r0, [r2, #2]
	ands r0, r4
	ldrh r1, [r1, #8]
	cmp r0, r1
	blo _080A4F40
	strb r5, [r2, #2]
_080A4F3C:
	movs r0, #1
	strb r0, [r2, #1]
_080A4F40:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080A4F48: .4byte gUnknown_08107120
_080A4F4C: .4byte gUnknown_08107138

	thumb_func_start sub_80A4F50
sub_80A4F50: @ 0x080A4F50
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x5c
	adds r6, r0, #0
	mov sl, r1
	str r2, [sp, #0x1c]
	str r3, [sp, #0x20]
	adds r4, r6, #0
	adds r4, #0x29
	ldrb r0, [r4]
	cmp r0, #0
	bne _080A4F70
	b _080A50C2
_080A4F70:
	ldr r0, [r6, #4]
	bl sub_80A4698
	movs r2, #0xa
	ldrsh r1, [r6, r2]
	mov ip, r1
	movs r3, #0xe
	ldrsh r7, [r6, r3]
	ldrh r0, [r0, #0x20]
	str r0, [sp, #0x24]
	mov r0, ip
	cmp r1, #0
	bge _080A4F8C
	adds r0, #7
_080A4F8C:
	asrs r1, r0, #3
	adds r0, r7, #0
	cmp r7, #0
	bge _080A4F96
	adds r0, r7, #7
_080A4F96:
	asrs r0, r0, #3
	ldr r5, [sp, #0x24]
	muls r0, r5, r0
	adds r1, r1, r0
	str r1, [sp, #0x28]
	movs r0, #0
	str r0, [sp, #0x2c]
	str r4, [sp, #0x38]
	adds r1, r6, #0
	adds r1, #0x10
	str r1, [sp, #0x34]
	adds r2, r6, #0
	adds r2, #0x80
	str r2, [sp, #0x48]
	ldr r3, [sp, #0x20]
	ldr r3, [r3, #8]
	str r3, [sp, #0x40]
	adds r4, r6, #0
	adds r4, #0x5c
	str r4, [sp, #0x44]
	mov r5, sp
	str r5, [sp, #0x30]
	movs r0, #0x68
	adds r0, r0, r6
	mov r8, r0
	movs r1, #0
	str r1, [sp, #0x4c]
_080A4FCC:
	ldr r2, [sp, #0x2c]
	lsls r4, r2, #2
	ldr r3, [sp, #0x34]
	adds r0, r3, r4
	ldr r5, [r0]
	cmp r5, #0
	beq _080A5090
	ldr r0, _080A507C @ =gUnknown_081073A0
	adds r0, r4, r0
	ldr r0, [r0]
	str r0, [sp, #0x50]
	ldr r0, _080A5080 @ =gUnknown_08107394
	adds r0, r4, r0
	ldr r2, [r0]
	ldr r0, _080A5084 @ =gUnknown_08107388
	adds r0, r4, r0
	ldr r0, [r0]
	mov sb, r0
	lsls r1, r0, #8
	movs r3, #0xf8
	lsls r3, r3, #5
	adds r0, r3, #0
	ands r1, r0
	movs r0, #0x40
	orrs r1, r0
	orrs r2, r1
	ldr r0, [sp, #0x30]
	strh r2, [r0]
	ldr r1, [sp, #0x50]
	movs r0, #0xfc
	lsls r0, r0, #0x18
	adds r3, r1, r0
	ldr r1, [sp, #0x1c]
	adds r3, r1, r3
	strh r2, [r3]
	ldr r0, _080A5088 @ =gUnknown_081073AC
	adds r0, r4, r0
	ldr r1, [r0]
	mov r2, sp
	mov r0, ip
	cmp r0, #0
	bge _080A5022
	adds r0, #7
_080A5022:
	asrs r0, r0, #3
	lsls r0, r0, #3
	mov r3, ip
	subs r0, r3, r0
	strh r0, [r2]
	movs r2, #0xfc
	lsls r2, r2, #0x18
	adds r1, r1, r2
	ldr r3, [sp, #0x1c]
	adds r1, r3, r1
	strh r0, [r1]
	ldr r0, _080A508C @ =gUnknown_081073B8
	adds r0, r4, r0
	ldr r0, [r0]
	mov r2, sp
	adds r1, r7, #0
	cmp r7, #0
	bge _080A5048
	adds r1, r7, #7
_080A5048:
	asrs r1, r1, #3
	lsls r1, r1, #3
	subs r1, r7, r1
	strh r1, [r2]
	movs r4, #0xfc
	lsls r4, r4, #0x18
	adds r0, r0, r4
	ldr r2, [sp, #0x1c]
	adds r0, r2, r0
	strh r1, [r0]
	ldr r3, [sp, #0x28]
	lsls r0, r3, #1
	adds r0, r5, r0
	mov r4, r8
	str r0, [r4]
	adds r1, r6, #0
	adds r1, #0x6c
	ldr r5, [sp, #0x4c]
	adds r1, r1, r5
	mov r2, sb
	lsls r0, r2, #0xb
	movs r3, #0xc0
	lsls r3, r3, #0x13
	adds r0, r0, r3
	str r0, [r1]
	b _080A5094
	.align 2, 0
_080A507C: .4byte gUnknown_081073A0
_080A5080: .4byte gUnknown_08107394
_080A5084: .4byte gUnknown_08107388
_080A5088: .4byte gUnknown_081073AC
_080A508C: .4byte gUnknown_081073B8
_080A5090:
	mov r4, r8
	str r5, [r4]
_080A5094:
	movs r5, #8
	add r8, r5
	ldr r0, [sp, #0x4c]
	adds r0, #8
	str r0, [sp, #0x4c]
	ldr r1, [sp, #0x2c]
	adds r1, #1
	str r1, [sp, #0x2c]
	cmp r1, #2
	bls _080A4FCC
	movs r4, #0
	mov r2, sp
	ldrh r3, [r2, #0x24]
	ldr r2, [sp, #0x48]
	strh r3, [r2]
	ldr r5, [sp, #0x40]
	ldr r2, [r5, #0x10]
	ldr r0, [sp, #0x20]
	ldr r1, [sp, #0x44]
	bl sub_80D3914
	ldr r7, [sp, #0x38]
	strb r4, [r7]
_080A50C2:
	adds r4, r6, #0
	adds r4, #0x28
	ldrb r0, [r4]
	cmp r0, #0
	beq _080A50E0
	adds r0, r6, #0
	adds r0, #0x90
	ldr r0, [r0]
	ldr r2, [r0, #0x1c]
	adds r0, r6, #0
	mov r1, sl
	bl sub_80D3914
	movs r0, #0
	strb r0, [r4]
_080A50E0:
	adds r0, r6, #0
	adds r0, #0x2a
	ldrb r1, [r0]
	str r0, [sp, #0x3c]
	cmp r1, #0
	bne _080A50EE
	b _080A5200
_080A50EE:
	ldr r1, [r6, #0x24]
	add r0, sp, #4
	ldr r2, _080A5124 @ =0x05000020
	movs r3, #0xf0
	lsls r3, r3, #1
	bl sub_8008F0C
	add r0, sp, #4
	mov r8, r0
	mov r2, sl
	ldr r1, [r2, #4]
	ldr r0, [r2, #0xc]
	cmp r1, r0
	beq _080A5128
	cmp r1, #0
	beq _080A511A
	adds r0, r1, #0
	mov r1, r8
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080A511A:
	mov r7, sl
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _080A51FA
	.align 2, 0
_080A5124: .4byte 0x05000020
_080A5128:
	str r1, [sp, #0x54]
	movs r0, #1
	str r0, [sp, #0x18]
	mov r0, sl
	ldr r1, [r0]
	ldr r2, [sp, #0x54]
	subs r0, r2, r1
	asrs r4, r0, #4
	str r4, [sp, #0x14]
	add r2, sp, #0x18
	add r0, sp, #0x14
	cmp r4, #1
	bhs _080A5144
	adds r0, r2, #0
_080A5144:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080A5166
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080A5160
	mov r0, sb
	bl sub_80D3BC0
_080A5160:
	mov r3, sl
	ldr r1, [r3]
	b _080A516A
_080A5166:
	movs r0, #0
	mov sb, r0
_080A516A:
	adds r4, r0, #0
	str r4, [sp, #0x58]
	adds r2, r1, #0
	adds r3, r4, #0
	ldr r4, [sp, #0x54]
	cmp r2, r4
	beq _080A5192
_080A5178:
	cmp r3, #0
	beq _080A5188
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080A5188:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x54]
	cmp r2, r5
	bne _080A5178
_080A5192:
	adds r4, r3, #0
	ldr r0, [sp, #0x18]
	cmp r0, #1
	bne _080A51AE
	cmp r4, #0
	beq _080A51AA
	adds r0, r4, #0
	mov r1, r8
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080A51AA:
	adds r4, #0x10
	b _080A51D0
_080A51AE:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080A51CE
_080A51B6:
	cmp r2, #0
	beq _080A51C6
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080A51C6:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080A51B6
_080A51CE:
	adds r4, r2, #0
_080A51D0:
	mov r0, sl
	ldr r2, [r0, #4]
	ldr r1, [r0]
	adds r0, r1, #0
	cmp r1, r2
	beq _080A51E2
_080A51DC:
	adds r0, #0x10
	cmp r0, r2
	bne _080A51DC
_080A51E2:
	cmp r1, #0
	beq _080A51EC
	adds r0, r1, #0
	bl sub_80D0260
_080A51EC:
	ldr r0, [sp, #0x58]
	add r0, sb
	ldr r1, [sp, #0x58]
	mov r2, sl
	str r1, [r2]
	str r4, [r2, #4]
	str r0, [r2, #0xc]
_080A51FA:
	movs r0, #0
	ldr r3, [sp, #0x3c]
	strb r0, [r3]
_080A5200:
	ldr r0, [r6, #4]
	cmp r0, #0x41
	bls _080A5208
	b _080A565C
_080A5208:
	lsls r0, r0, #2
	ldr r1, _080A5214 @ =_080A5218
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A5214: .4byte _080A5218
_080A5218: @ jump table
	.4byte _080A54E8 @ case 0
	.4byte _080A556C @ case 1
	.4byte _080A565C @ case 2
	.4byte _080A565C @ case 3
	.4byte _080A565C @ case 4
	.4byte _080A565C @ case 5
	.4byte _080A5458 @ case 6
	.4byte _080A54A0 @ case 7
	.4byte _080A5440 @ case 8
	.4byte _080A544C @ case 9
	.4byte _080A565C @ case 10
	.4byte _080A565C @ case 11
	.4byte _080A565C @ case 12
	.4byte _080A565C @ case 13
	.4byte _080A5320 @ case 14
	.4byte _080A53A4 @ case 15
	.4byte _080A565C @ case 16
	.4byte _080A565C @ case 17
	.4byte _080A565C @ case 18
	.4byte _080A565C @ case 19
	.4byte _080A565C @ case 20
	.4byte _080A565C @ case 21
	.4byte _080A565C @ case 22
	.4byte _080A565C @ case 23
	.4byte _080A565C @ case 24
	.4byte _080A565C @ case 25
	.4byte _080A565C @ case 26
	.4byte _080A565C @ case 27
	.4byte _080A565C @ case 28
	.4byte _080A565C @ case 29
	.4byte _080A565C @ case 30
	.4byte _080A5434 @ case 31
	.4byte _080A565C @ case 32
	.4byte _080A565C @ case 33
	.4byte _080A565C @ case 34
	.4byte _080A565C @ case 35
	.4byte _080A5624 @ case 36
	.4byte _080A5624 @ case 37
	.4byte _080A5624 @ case 38
	.4byte _080A5624 @ case 39
	.4byte _080A565C @ case 40
	.4byte _080A565C @ case 41
	.4byte _080A565C @ case 42
	.4byte _080A565C @ case 43
	.4byte _080A565C @ case 44
	.4byte _080A565C @ case 45
	.4byte _080A565C @ case 46
	.4byte _080A565C @ case 47
	.4byte _080A565C @ case 48
	.4byte _080A565C @ case 49
	.4byte _080A565C @ case 50
	.4byte _080A565C @ case 51
	.4byte _080A565C @ case 52
	.4byte _080A565C @ case 53
	.4byte _080A565C @ case 54
	.4byte _080A565C @ case 55
	.4byte _080A565C @ case 56
	.4byte _080A565C @ case 57
	.4byte _080A565C @ case 58
	.4byte _080A565C @ case 59
	.4byte _080A5428 @ case 60
	.4byte _080A565C @ case 61
	.4byte _080A54E8 @ case 62
	.4byte _080A54E8 @ case 63
	.4byte _080A5624 @ case 64
	.4byte _080A5624 @ case 65
_080A5320:
	adds r4, r6, #0
	adds r4, #0x40
	ldr r5, _080A5398 @ =gUnknown_0810718C
	ldrb r0, [r4, #1]
	cmp r0, #0
	beq _080A5358
	movs r7, #0
	strb r7, [r4, #1]
	ldrb r2, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	mov r3, sl
	bl sub_80A5AB0
	ldr r0, [r5, #4]
	ldrh r1, [r0, #2]
	movs r2, #0
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r1
	bne _080A5352
	movs r2, #1
_080A5352:
	cmp r2, #0
	beq _080A5358
	strb r7, [r4]
_080A5358:
	adds r4, r6, #0
	adds r4, #0x44
	ldr r5, _080A539C @ =gUnknown_08107198
	ldrb r0, [r4, #1]
	cmp r0, #0
	beq _080A5390
	movs r7, #0
	strb r7, [r4, #1]
	ldrb r2, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	mov r3, sl
	bl sub_80A5AB0
	ldr r0, [r5, #4]
	ldrh r1, [r0, #2]
	movs r2, #0
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r1
	bne _080A538A
	movs r2, #1
_080A538A:
	cmp r2, #0
	beq _080A5390
	strb r7, [r4]
_080A5390:
	adds r4, r6, #0
	adds r4, #0x48
	ldr r5, _080A53A0 @ =gUnknown_081071A4
	b _080A55E2
	.align 2, 0
_080A5398: .4byte gUnknown_0810718C
_080A539C: .4byte gUnknown_08107198
_080A53A0: .4byte gUnknown_081071A4
_080A53A4:
	adds r4, r6, #0
	adds r4, #0x40
	ldr r5, _080A541C @ =gUnknown_081071B0
	ldrb r0, [r4, #1]
	cmp r0, #0
	beq _080A53DC
	movs r7, #0
	strb r7, [r4, #1]
	ldrb r2, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	mov r3, sl
	bl sub_80A5AB0
	ldr r0, [r5, #4]
	ldrh r1, [r0, #2]
	movs r2, #0
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r1
	bne _080A53D6
	movs r2, #1
_080A53D6:
	cmp r2, #0
	beq _080A53DC
	strb r7, [r4]
_080A53DC:
	adds r4, r6, #0
	adds r4, #0x44
	ldr r5, _080A5420 @ =gUnknown_081071BC
	ldrb r0, [r4, #1]
	cmp r0, #0
	beq _080A5414
	movs r7, #0
	strb r7, [r4, #1]
	ldrb r2, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	mov r3, sl
	bl sub_80A5AB0
	ldr r0, [r5, #4]
	ldrh r1, [r0, #2]
	movs r2, #0
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r1
	bne _080A540E
	movs r2, #1
_080A540E:
	cmp r2, #0
	beq _080A5414
	strb r7, [r4]
_080A5414:
	adds r4, r6, #0
	adds r4, #0x48
	ldr r5, _080A5424 @ =gUnknown_081071C8
	b _080A55E2
	.align 2, 0
_080A541C: .4byte gUnknown_081071B0
_080A5420: .4byte gUnknown_081071BC
_080A5424: .4byte gUnknown_081071C8
_080A5428:
	adds r4, r6, #0
	adds r4, #0x50
	ldr r5, _080A5430 @ =gUnknown_081071F8
	b _080A55E2
	.align 2, 0
_080A5430: .4byte gUnknown_081071F8
_080A5434:
	adds r4, r6, #0
	adds r4, #0x54
	ldr r5, _080A543C @ =gUnknown_081071E0
	b _080A55E2
	.align 2, 0
_080A543C: .4byte gUnknown_081071E0
_080A5440:
	adds r4, r6, #0
	adds r4, #0x4c
	ldr r5, _080A5448 @ =gUnknown_081071D4
	b _080A55E2
	.align 2, 0
_080A5448: .4byte gUnknown_081071D4
_080A544C:
	adds r4, r6, #0
	adds r4, #0x4c
	ldr r5, _080A5454 @ =gUnknown_081071EC
	b _080A55E2
	.align 2, 0
_080A5454: .4byte gUnknown_081071EC
_080A5458:
	adds r4, r6, #0
	adds r4, #0x38
	ldr r5, _080A5498 @ =gUnknown_0810715C
	ldrb r0, [r4, #1]
	cmp r0, #0
	beq _080A5490
	movs r7, #0
	strb r7, [r4, #1]
	ldrb r2, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	mov r3, sl
	bl sub_80A5AB0
	ldr r0, [r5, #4]
	ldrh r1, [r0, #2]
	movs r2, #0
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r1
	bne _080A548A
	movs r2, #1
_080A548A:
	cmp r2, #0
	beq _080A5490
	strb r7, [r4]
_080A5490:
	adds r4, r6, #0
	adds r4, #0x3c
	ldr r5, _080A549C @ =gUnknown_08107168
	b _080A55E2
	.align 2, 0
_080A5498: .4byte gUnknown_0810715C
_080A549C: .4byte gUnknown_08107168
_080A54A0:
	adds r4, r6, #0
	adds r4, #0x38
	ldr r5, _080A54E0 @ =gUnknown_08107174
	ldrb r0, [r4, #1]
	cmp r0, #0
	beq _080A54D8
	movs r7, #0
	strb r7, [r4, #1]
	ldrb r2, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	mov r3, sl
	bl sub_80A5AB0
	ldr r0, [r5, #4]
	ldrh r1, [r0, #2]
	movs r2, #0
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r1
	bne _080A54D2
	movs r2, #1
_080A54D2:
	cmp r2, #0
	beq _080A54D8
	strb r7, [r4]
_080A54D8:
	adds r4, r6, #0
	adds r4, #0x3c
	ldr r5, _080A54E4 @ =gUnknown_08107180
	b _080A55E2
	.align 2, 0
_080A54E0: .4byte gUnknown_08107174
_080A54E4: .4byte gUnknown_08107180
_080A54E8:
	adds r1, r6, #0
	adds r1, #0x58
	ldrb r0, [r1]
	cmp r0, #0
	beq _080A5520
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _080A5510
	ldr r1, _080A550C @ =gUnknown_08107144
	adds r0, r6, #0
	movs r2, #0
	mov r3, sl
	bl sub_80A5AB0
	b _080A5520
	.align 2, 0
_080A550C: .4byte gUnknown_08107144
_080A5510:
	cmp r0, #0xa
	bne _080A5520
	ldr r1, _080A5560 @ =gUnknown_08107144
	adds r0, r6, #0
	movs r2, #1
	mov r3, sl
	bl sub_80A5AB0
_080A5520:
	adds r4, r6, #0
	adds r4, #0x30
	ldr r5, _080A5564 @ =gUnknown_08107114
	ldrb r0, [r4, #1]
	cmp r0, #0
	beq _080A5558
	movs r7, #0
	strb r7, [r4, #1]
	ldrb r2, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	mov r3, sl
	bl sub_80A5AB0
	ldr r0, [r5, #4]
	ldrh r1, [r0, #2]
	movs r2, #0
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r1
	bne _080A5552
	movs r2, #1
_080A5552:
	cmp r2, #0
	beq _080A5558
	strb r7, [r4]
_080A5558:
	adds r4, r6, #0
	adds r4, #0x34
	ldr r5, _080A5568 @ =gUnknown_0810712C
	b _080A55E2
	.align 2, 0
_080A5560: .4byte gUnknown_08107144
_080A5564: .4byte gUnknown_08107114
_080A5568: .4byte gUnknown_0810712C
_080A556C:
	adds r1, r6, #0
	adds r1, #0x58
	ldrb r0, [r1]
	cmp r0, #0
	beq _080A55A4
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _080A5594
	ldr r1, _080A5590 @ =gUnknown_0810714C
	adds r0, r6, #0
	movs r2, #0
	mov r3, sl
	bl sub_80A5AB0
	b _080A55A4
	.align 2, 0
_080A5590: .4byte gUnknown_0810714C
_080A5594:
	cmp r0, #0xa
	bne _080A55A4
	ldr r1, _080A5618 @ =gUnknown_0810714C
	adds r0, r6, #0
	movs r2, #1
	mov r3, sl
	bl sub_80A5AB0
_080A55A4:
	adds r4, r6, #0
	adds r4, #0x30
	ldr r5, _080A561C @ =gUnknown_08107120
	ldrb r0, [r4, #1]
	cmp r0, #0
	beq _080A55DC
	movs r7, #0
	strb r7, [r4, #1]
	ldrb r2, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	mov r3, sl
	bl sub_80A5AB0
	ldr r0, [r5, #4]
	ldrh r1, [r0, #2]
	movs r2, #0
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r1
	bne _080A55D6
	movs r2, #1
_080A55D6:
	cmp r2, #0
	beq _080A55DC
	strb r7, [r4]
_080A55DC:
	adds r4, r6, #0
	adds r4, #0x34
	ldr r5, _080A5620 @ =gUnknown_08107138
_080A55E2:
	ldrb r0, [r4, #1]
	cmp r0, #0
	beq _080A565C
	movs r7, #0
	strb r7, [r4, #1]
	ldrb r2, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	mov r3, sl
	bl sub_80A5AB0
	ldr r0, [r5, #4]
	ldrh r1, [r0, #2]
	movs r2, #0
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r1
	bne _080A560E
	movs r2, #1
_080A560E:
	cmp r2, #0
	beq _080A565C
	strb r7, [r4]
	b _080A565C
	.align 2, 0
_080A5618: .4byte gUnknown_0810714C
_080A561C: .4byte gUnknown_08107120
_080A5620: .4byte gUnknown_08107138
_080A5624:
	adds r1, r6, #0
	adds r1, #0x58
	ldrb r0, [r1]
	cmp r0, #0
	beq _080A565C
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _080A564C
	ldr r1, _080A5648 @ =gUnknown_08107154
	adds r0, r6, #0
	movs r2, #0
	mov r3, sl
	bl sub_80A5AB0
	b _080A565C
	.align 2, 0
_080A5648: .4byte gUnknown_08107154
_080A564C:
	cmp r0, #0xa
	bne _080A565C
	ldr r1, _080A566C @ =gUnknown_08107154
	adds r0, r6, #0
	movs r2, #1
	mov r3, sl
	bl sub_80A5AB0
_080A565C:
	add sp, #0x5c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A566C: .4byte gUnknown_08107154

	thumb_func_start sub_80A5670
sub_80A5670: @ 0x080A5670
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov r8, r0
	ldrh r0, [r0, #0x24]
	lsls r0, r0, #1
	mov sb, r0
	ldr r0, _080A56D4 @ =0x040000D4
	mov sl, r0
	movs r1, #0
_080A5688:
	lsls r2, r1, #3
	mov r0, r8
	adds r0, #0xc
	adds r0, r0, r2
	ldr r0, [r0]
	adds r7, r1, #1
	cmp r0, #0
	beq _080A56BC
	adds r5, r0, #0
	mov r0, r8
	adds r0, #0x10
	adds r0, r0, r2
	ldr r4, [r0]
	movs r1, #0xa8
	lsls r1, r1, #3
	adds r6, r4, r1
_080A56A8:
	adds r0, r5, #0
	adds r1, r4, #0
	ldr r2, _080A56D8 @ =0x8000001F
	mov r3, sl
	bl sub_80D0EBC
	add r5, sb
	adds r4, #0x40
	cmp r4, r6
	bne _080A56A8
_080A56BC:
	adds r1, r7, #0
	cmp r1, #2
	bls _080A5688
	movs r0, #0
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080A56D4: .4byte 0x040000D4
_080A56D8: .4byte 0x8000001F

	thumb_func_start sub_80A56DC
sub_80A56DC: @ 0x080A56DC
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	mov r8, r0
	adds r5, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	ldr r3, [sp, #0x14]
	ldrh r0, [r5]
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x16
	mov r4, r8
	str r0, [r4]
	ldrb r4, [r5, #1]
	lsrs r4, r4, #2
	ldrh r0, [r5, #2]
	ldr r6, _080A575C @ =0x000003FF
	ands r0, r6
	lsls r0, r0, #6
	orrs r0, r4
	lsls r0, r0, #0x10
	mov r4, r8
	str r0, [r4, #8]
	ldrb r4, [r5, #3]
	lsrs r4, r4, #2
	ldrh r0, [r5, #4]
	ands r0, r6
	lsls r0, r0, #6
	orrs r0, r4
	lsls r0, r0, #0x10
	mov r4, r8
	str r0, [r4, #0xc]
	mov r0, r8
	adds r0, #0x90
	ldr r0, [r0]
	ldr r4, [r0, #0x14]
	mov r0, r8
	bl sub_80D391C
	ldrb r0, [r5, #1]
	lsrs r0, r0, #2
	ldrh r1, [r5, #2]
	ands r1, r6
	lsls r1, r1, #6
	orrs r1, r0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrb r0, [r5, #3]
	lsrs r0, r0, #2
	ldrh r2, [r5, #4]
	ands r2, r6
	lsls r2, r2, #6
	orrs r2, r0
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	mov r0, r8
	bl sub_80A5960
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080A575C: .4byte 0x000003FF

	thumb_func_start sub_80A5760
sub_80A5760: @ 0x080A5760
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x34
	adds r4, r0, #0
	str r1, [sp, #4]
	str r2, [sp, #8]
	str r3, [sp, #0xc]
	adds r7, r4, #0
	adds r7, #0x90
	ldr r0, [r7]
	ldr r1, [r0, #0x18]
	adds r0, r4, #0
	bl sub_80D3910
	str r0, [r4, #4]
	bl sub_80A4698
	adds r5, r0, #0
	ldr r0, [r5, #0x1c]
	cmp r0, #0
	beq _080A581A
	ldr r0, [r5, #0x18]
	cmp r0, #0
	beq _080A581A
	movs r6, #0
	mov ip, r7
	adds r0, r4, #0
	adds r0, #0x28
	str r0, [sp, #0x24]
	adds r1, r4, #0
	adds r1, #0x30
	str r1, [sp, #0x28]
	adds r2, r4, #0
	adds r2, #0x34
	str r2, [sp, #0x2c]
	adds r0, #0x10
	str r0, [sp, #0x30]
	movs r1, #0x3c
	adds r1, r1, r4
	mov r8, r1
	movs r2, #0x40
	adds r2, r2, r4
	mov sb, r2
	movs r0, #0x44
	adds r0, r0, r4
	mov sl, r0
	adds r1, r4, #0
	adds r1, #0x48
	str r1, [sp, #0x10]
	adds r2, r4, #0
	adds r2, #0x4c
	str r2, [sp, #0x14]
	adds r0, r4, #0
	adds r0, #0x50
	str r0, [sp, #0x18]
	adds r1, #0xc
	str r1, [sp, #0x1c]
	adds r2, #0xc
	str r2, [sp, #0x20]
	ldrh r0, [r5, #0x22]
	cmp r6, r0
	bhs _080A5874
_080A57E2:
	movs r3, #0
	ldrh r0, [r5, #0x20]
	adds r7, r6, #1
	cmp r3, r0
	bhs _080A5810
_080A57EC:
	adds r1, r6, #0
	muls r1, r0, r1
	adds r1, r3, r1
	ldr r0, [r5, #0x1c]
	adds r0, r0, r1
	ldrb r0, [r0]
	ldr r2, [r4, #0x2c]
	lsls r1, r1, #2
	adds r1, r1, r2
	ldr r2, [r5, #0x18]
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r0, [r0]
	str r0, [r1]
	adds r3, #1
	ldrh r0, [r5, #0x20]
	cmp r3, r0
	blo _080A57EC
_080A5810:
	adds r6, r7, #0
	ldrh r1, [r5, #0x22]
	cmp r6, r1
	blo _080A57E2
	b _080A5874
_080A581A:
	movs r0, #0
	str r0, [sp]
	ldr r1, [r4, #0x2c]
	movs r0, #0xf2
	lsls r0, r0, #8
	adds r2, r1, r0
	mov r3, sp
	movs r0, #0x90
	adds r0, r0, r4
	mov ip, r0
	adds r0, r4, #0
	adds r0, #0x28
	str r0, [sp, #0x24]
	adds r0, #8
	str r0, [sp, #0x28]
	adds r0, #4
	str r0, [sp, #0x2c]
	adds r0, #4
	str r0, [sp, #0x30]
	movs r0, #0x3c
	adds r0, r0, r4
	mov r8, r0
	movs r0, #0x40
	adds r0, r0, r4
	mov sb, r0
	movs r0, #0x44
	adds r0, r0, r4
	mov sl, r0
	adds r0, r4, #0
	adds r0, #0x48
	str r0, [sp, #0x10]
	adds r0, #4
	str r0, [sp, #0x14]
	adds r0, #4
	str r0, [sp, #0x18]
	adds r0, #4
	str r0, [sp, #0x1c]
	adds r0, #4
	str r0, [sp, #0x20]
	cmp r1, r2
	beq _080A5874
_080A586C:
	ldr r0, [r3]
	stm r1!, {r0}
	cmp r1, r2
	bne _080A586C
_080A5874:
	mov r1, ip
	ldr r0, [r1]
	ldr r1, [r0, #0x20]
	adds r0, r4, #0
	bl sub_80D3910
	adds r0, r4, #0
	ldr r1, [sp, #4]
	bl sub_80A5D14
	adds r0, r4, #0
	ldr r1, [sp, #8]
	ldr r2, [sp, #0xc]
	bl sub_80A5DFC
	movs r0, #0
	movs r1, #1
	ldr r2, [sp, #0x24]
	strb r1, [r2]
	ldr r1, [sp, #0x28]
	strb r0, [r1]
	strb r0, [r1, #1]
	ldr r2, [sp, #0x2c]
	strb r0, [r2]
	strb r0, [r2, #1]
	ldr r1, [sp, #0x30]
	strb r0, [r1]
	strb r0, [r1, #1]
	mov r2, r8
	strb r0, [r2]
	strb r0, [r2, #1]
	mov r1, sb
	strb r0, [r1]
	strb r0, [r1, #1]
	mov r2, sl
	strb r0, [r2]
	strb r0, [r2, #1]
	ldr r1, [sp, #0x10]
	strb r0, [r1]
	strb r0, [r1, #1]
	ldr r2, [sp, #0x14]
	strb r0, [r2]
	strb r0, [r2, #1]
	ldr r1, [sp, #0x18]
	strb r0, [r1]
	strb r0, [r1, #1]
	ldr r2, [sp, #0x1c]
	strb r0, [r2]
	strb r0, [r2, #1]
	ldr r1, [sp, #0x20]
	strb r0, [r1]
	add sp, #0x34
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80A58EC
sub_80A58EC: @ 0x080A58EC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r7, r0, #0
	adds r4, r2, #0
	mov sb, r3
	movs r0, #0xa
	ldrsh r5, [r1, r0]
	movs r3, #0xe
	ldrsh r2, [r1, r3]
	mov sl, r2
	adds r6, r5, #0
	adds r6, #0x78
	movs r0, #0x50
	add r0, sl
	mov r8, r0
	ldr r0, [r1, #4]
	bl sub_80A4698
	ldrh r1, [r0, #0x20]
	lsls r1, r1, #3
	ldrh r0, [r0, #0x22]
	lsls r0, r0, #3
	subs r4, r4, r6
	mov r3, sb
	mov r6, r8
	subs r2, r3, r6
	adds r5, r5, r4
	cmp r5, #0
	bge _080A5930
	movs r5, #0
	b _080A5938
_080A5930:
	subs r1, #0xf0
	cmp r5, r1
	ble _080A5938
	adds r5, r1, #0
_080A5938:
	mov r3, sl
	adds r1, r3, r2
	cmp r1, #0
	bge _080A5944
	movs r1, #0
	b _080A594C
_080A5944:
	subs r0, #0xa0
	cmp r1, r0
	ble _080A594C
	adds r1, r0, #0
_080A594C:
	strh r5, [r7]
	strh r1, [r7, #2]
	adds r0, r7, #0
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_80A5960
sub_80A5960: @ 0x080A5960
	push {r4, r5, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r4, r1, #0
	adds r3, r2, #0
	mov r0, sp
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_80A58EC
	ldr r0, [sp]
	str r0, [sp, #4]
	add r2, sp, #4
	adds r3, r2, #0
	movs r0, #0xa
	ldrsh r1, [r5, r0]
	movs r4, #0
	ldrsh r0, [r2, r4]
	cmp r1, r0
	beq _080A5998
	adds r1, r5, #0
	adds r1, #0x29
	movs r0, #1
	strb r0, [r1]
	movs r1, #0
	ldrsh r0, [r2, r1]
	lsls r0, r0, #0x10
	str r0, [r5, #8]
_080A5998:
	movs r2, #0xe
	ldrsh r1, [r5, r2]
	movs r4, #2
	ldrsh r0, [r3, r4]
	cmp r1, r0
	beq _080A59B4
	adds r1, r5, #0
	adds r1, #0x29
	movs r0, #1
	strb r0, [r1]
	movs r1, #2
	ldrsh r0, [r3, r1]
	lsls r0, r0, #0x10
	str r0, [r5, #0xc]
_080A59B4:
	add sp, #8
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80A59BC
sub_80A59BC: @ 0x080A59BC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r6, r0, #0
	adds r4, r1, #0
	adds r5, r2, #0
	adds r7, r3, #0
	mov r0, sp
	adds r1, r6, #0
	adds r2, r4, #0
	adds r3, r5, #0
	bl sub_80A58EC
	ldr r0, [sp]
	str r0, [sp, #4]
	add r5, sp, #4
	cmp r7, #0
	bne _080A59E8
	movs r7, #1
_080A59E8:
	movs r0, #0xa
	ldrsh r1, [r6, r0]
	movs r2, #0
	ldrsh r0, [r5, r2]
	subs r3, r0, r1
	movs r0, #0xe
	ldrsh r1, [r6, r0]
	movs r2, #2
	ldrsh r0, [r5, r2]
	subs r2, r0, r1
	cmp r3, #0
	bne _080A5A04
	cmp r2, #0
	beq _080A5A84
_080A5A04:
	adds r1, r3, #0
	muls r1, r3, r1
	adds r0, r2, #0
	muls r0, r2, r0
	adds r2, r1, r0
	movs r4, #0
	ldr r3, _080A5A80 @ =0x3FFFFFFF
	movs r0, #0x84
	adds r0, r0, r6
	mov r8, r0
	movs r1, #0x88
	adds r1, r1, r6
	mov sb, r1
	movs r0, #0x8c
	adds r0, r0, r6
	mov sl, r0
	cmp r2, r3
	bhi _080A5A34
_080A5A28:
	adds r4, #1
	lsls r1, r4, #1
	adds r0, r2, #0
	lsls r0, r1
	cmp r0, r3
	bls _080A5A28
_080A5A34:
	lsls r0, r4, #1
	lsls r2, r0
	adds r0, r2, #0
	bl sub_80D3774
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	asrs r0, r4
	adds r1, r7, #0
	bl sub_80D0EDA
	adds r4, r0, #0
	cmp r4, #0
	bne _080A5A52
	movs r4, #1
_080A5A52:
	movs r1, #0
	ldrsh r0, [r5, r1]
	lsls r0, r0, #0x10
	ldr r1, [r6, #8]
	subs r0, r0, r1
	adds r1, r4, #0
	bl sub_80D0EC8
	mov r2, r8
	str r0, [r2]
	movs r1, #2
	ldrsh r0, [r5, r1]
	lsls r0, r0, #0x10
	ldr r1, [r6, #0xc]
	subs r0, r0, r1
	adds r1, r4, #0
	bl sub_80D0EC8
	mov r2, sb
	str r0, [r2]
	mov r0, sl
	str r4, [r0]
	b _080A5A8A
	.align 2, 0
_080A5A80: .4byte 0x3FFFFFFF
_080A5A84:
	adds r0, r6, #0
	adds r0, #0x8c
	str r2, [r0]
_080A5A8A:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80A5A9C
sub_80A5A9C: @ 0x080A5A9C
	push {lr}
	movs r1, #0
	adds r0, #0x8c
	ldr r0, [r0]
	cmp r0, #0
	bne _080A5AAA
	movs r1, #1
_080A5AAA:
	adds r0, r1, #0
	pop {r1}
	bx r1

	thumb_func_start sub_80A5AB0
sub_80A5AB0: @ 0x080A5AB0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	adds r4, r1, #0
	adds r5, r3, #0
	ldr r1, [r4, #4]
	ldrh r3, [r1]
	adds r1, #4
	adds r0, r3, #0
	muls r0, r2, r0
	lsls r0, r0, #5
	adds r1, r1, r0
	ldrh r2, [r4]
	lsls r3, r3, #5
	lsls r2, r2, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	mov r0, sp
	bl sub_8008F0C
	mov sb, sp
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080A5B02
	cmp r1, #0
	beq _080A5AFA
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080A5AFA:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080A5BC8
_080A5B02:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x14]
	ldr r1, [r5]
	mov r6, sl
	subs r0, r6, r1
	asrs r4, r0, #4
	str r4, [sp, #0x10]
	add r2, sp, #0x14
	add r0, sp, #0x10
	cmp r4, #1
	bhs _080A5B1C
	adds r0, r2, #0
_080A5B1C:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080A5B3C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080A5B38
	mov r0, r8
	bl sub_80D3BC0
_080A5B38:
	ldr r1, [r5]
	b _080A5B40
_080A5B3C:
	movs r0, #0
	mov r8, r0
_080A5B40:
	adds r4, r0, #0
	str r4, [sp, #0x18]
	adds r2, r1, #0
	adds r3, r4, #0
	cmp r2, sl
	beq _080A5B64
_080A5B4C:
	cmp r3, #0
	beq _080A5B5C
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080A5B5C:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080A5B4C
_080A5B64:
	adds r4, r3, #0
	ldr r0, [sp, #0x14]
	cmp r0, #1
	bne _080A5B80
	cmp r4, #0
	beq _080A5B7C
	adds r0, r4, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080A5B7C:
	adds r4, #0x10
	b _080A5BA2
_080A5B80:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080A5BA0
_080A5B88:
	cmp r2, #0
	beq _080A5B98
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080A5B98:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080A5B88
_080A5BA0:
	adds r4, r2, #0
_080A5BA2:
	ldr r2, [r5, #4]
	ldr r1, [r5]
	adds r0, r1, #0
	cmp r1, r2
	beq _080A5BB2
_080A5BAC:
	adds r0, #0x10
	cmp r0, r2
	bne _080A5BAC
_080A5BB2:
	cmp r1, #0
	beq _080A5BBC
	adds r0, r1, #0
	bl sub_80D0260
_080A5BBC:
	ldr r0, [sp, #0x18]
	add r0, r8
	ldr r1, [sp, #0x18]
	str r1, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080A5BC8:
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80A5BD8
sub_80A5BD8: @ 0x080A5BD8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	str r0, [sp]
	mov r8, r1
	str r2, [sp, #4]
	str r3, [sp, #8]
	ldr r0, [r0, #4]
	bl sub_80A4698
	ldrh r0, [r0, #0x20]
	str r0, [sp, #0xc]
	mov r0, r8
	ldrb r6, [r0]
	ldrb r1, [r0, #1]
	mov sb, r1
	adds r0, #4
	str r0, [sp, #0x10]
	movs r3, #0
_080A5C04:
	lsls r2, r3, #2
	ldr r4, [sp, #0x10]
	adds r1, r2, r4
	ldr r0, [r1]
	adds r3, #1
	mov sl, r3
	cmp r0, #0
	beq _080A5C52
	movs r4, #0
	cmp r4, sb
	bhs _080A5C52
	ldr r0, [sp]
	adds r0, #0x10
	adds r3, r0, r2
	str r1, [sp, #0x18]
	movs r5, #0
_080A5C24:
	ldr r7, [sp, #8]
	adds r0, r7, r4
	ldr r1, [sp, #0xc]
	muls r0, r1, r0
	ldr r2, [r3]
	lsls r0, r0, #1
	ldr r7, [sp, #4]
	lsls r1, r7, #1
	adds r1, r1, r2
	adds r0, r0, r1
	ldr r2, [sp, #0x18]
	ldr r1, [r2]
	adds r1, r5, r1
	lsls r2, r6, #1
	str r3, [sp, #0x14]
	bl sub_80D3994
	lsls r0, r6, #1
	adds r5, r5, r0
	adds r4, #1
	ldr r3, [sp, #0x14]
	cmp r4, sb
	blo _080A5C24
_080A5C52:
	mov r3, sl
	cmp r3, #2
	bls _080A5C04
	mov r3, r8
	ldr r0, [r3, #0x14]
	cmp r0, #0
	beq _080A5CB0
	ldr r0, [r3, #0x10]
	cmp r0, #0
	beq _080A5CB0
	movs r2, #0
	cmp r2, sb
	bhs _080A5CB0
	ldr r4, [sp, #4]
	lsls r4, r4, #2
	mov sl, r4
_080A5C72:
	adds r1, r2, #0
	muls r1, r6, r1
	mov r7, r8
	ldr r0, [r7, #0x14]
	adds r3, r0, r1
	ldr r0, [sp]
	ldr r1, [r0, #0x2c]
	add r1, sl
	ldr r4, [sp, #8]
	adds r0, r4, r2
	ldr r7, [sp, #0xc]
	muls r0, r7, r0
	lsls r0, r0, #2
	adds r5, r1, r0
	movs r4, #0
	adds r2, #1
	cmp r4, r6
	bhs _080A5CAC
_080A5C96:
	ldrb r0, [r3]
	mov r7, r8
	ldr r1, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	stm r5!, {r0}
	adds r3, #1
	adds r4, #1
	cmp r4, r6
	blo _080A5C96
_080A5CAC:
	cmp r2, sb
	blo _080A5C72
_080A5CB0:
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80A5CC0
sub_80A5CC0: @ 0x080A5CC0
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	ldr r0, [r7, #4]
	bl sub_80A4698
	adds r5, r0, #0
	movs r6, #0
	adds r4, r7, #0
	adds r4, #0x10
_080A5CD2:
	lsls r1, r6, #2
	adds r0, r5, #0
	adds r0, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _080A5CE8
	ldr r1, [r4]
	bl sub_80D102C
	b _080A5CF8
_080A5CE8:
	ldr r1, [r4]
	ldrh r2, [r5, #0x20]
	ldrh r0, [r5, #0x22]
	lsls r0, r0, #1
	muls r2, r0, r2
	ldr r0, _080A5D10 @ =0x03FF03FF
	bl sub_8008EB8
_080A5CF8:
	adds r4, #4
	adds r6, #1
	cmp r6, #2
	bls _080A5CD2
	adds r1, r7, #0
	adds r1, #0x29
	movs r0, #1
	strb r0, [r1]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A5D10: .4byte 0x03FF03FF

	thumb_func_start sub_80A5D14
sub_80A5D14: @ 0x080A5D14
	push {r4, r5, lr}
	adds r5, r0, #0
	cmp r1, #1
	beq _080A5D66
	cmp r1, #1
	bgt _080A5D26
	cmp r1, #0
	beq _080A5D4A
	b _080A5DA8
_080A5D26:
	cmp r1, #2
	beq _080A5D88
	cmp r1, #3
	bne _080A5DA8
	adds r4, r5, #0
	adds r4, #0x90
	ldr r0, [r4]
	ldr r3, [r0, #0x24]
	adds r0, r5, #0
	movs r1, #3
	movs r2, #0
	bl sub_80D3918
	ldr r0, [r4]
	ldr r3, [r0, #0x24]
	adds r0, r5, #0
	movs r1, #0
	b _080A5D80
_080A5D4A:
	adds r4, r5, #0
	adds r4, #0x90
	ldr r0, [r4]
	ldr r3, [r0, #0x24]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #0
	bl sub_80D3918
	ldr r0, [r4]
	ldr r3, [r0, #0x24]
	adds r0, r5, #0
	movs r1, #1
	b _080A5D80
_080A5D66:
	adds r4, r5, #0
	adds r4, #0x90
	ldr r0, [r4]
	ldr r3, [r0, #0x24]
	adds r0, r5, #0
	movs r1, #1
	movs r2, #0
	bl sub_80D3918
	ldr r0, [r4]
	ldr r3, [r0, #0x24]
	adds r0, r5, #0
	movs r1, #2
_080A5D80:
	movs r2, #1
	bl sub_80D3918
	b _080A5DA8
_080A5D88:
	adds r4, r5, #0
	adds r4, #0x90
	ldr r0, [r4]
	ldr r3, [r0, #0x24]
	adds r0, r5, #0
	movs r1, #2
	movs r2, #0
	bl sub_80D3918
	ldr r0, [r4]
	ldr r3, [r0, #0x24]
	adds r0, r5, #0
	movs r1, #3
	movs r2, #1
	bl sub_80D3918
_080A5DA8:
	adds r1, r5, #0
	adds r1, #0x2a
	movs r0, #1
	strb r0, [r1]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80A5DB8
sub_80A5DB8: @ 0x080A5DB8
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r7, r1, #0
	adds r5, r2, #0
	ldr r0, [r4, #4]
	bl sub_80A4698
	adds r6, r0, #0
	ldr r0, [r6, #4]
	lsls r5, r5, #2
	adds r4, #0x1c
	adds r4, r4, r5
	ldr r1, [r4]
	bl sub_80D102C
	cmp r7, #0
	blt _080A5DF6
	cmp r7, #2
	ble _080A5DE4
	cmp r7, #3
	beq _080A5DEE
	b _080A5DF6
_080A5DE4:
	ldr r0, [r6, #4]
	ldr r1, [r4]
	bl sub_80D102C
	b _080A5DF6
_080A5DEE:
	ldr r0, [r6, #8]
	ldr r1, [r4]
	bl sub_80D102C
_080A5DF6:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80A5DFC
sub_80A5DFC: @ 0x080A5DFC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	mov sl, r0
	mov sb, r1
	movs r0, #0
	str r0, [sp]
	movs r0, #0x1f
	ands r1, r0
	mov sb, r1
	mov r0, sl
	ldr r0, [r0, #0x20]
	mov r8, r0
	mov r1, sl
	ldr r7, [r1, #0x1c]
	ldr r6, [r1, #0x24]
	movs r0, #0x1f
	ands r2, r0
	lsls r2, r2, #5
	str r2, [sp, #4]
_080A5E2A:
	movs r0, #0x20
	rsbs r0, r0, #0
	adds r1, r0, #0
	adds r0, r5, #0
	ands r0, r1
	mov r1, sb
	orrs r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _080A5E90 @ =0xFFFFFF00
	ands r5, r1
	orrs r5, r0
	ldr r0, _080A5E94 @ =0xFFFFFC1F
	adds r1, r0, #0
	adds r0, r5, #0
	ands r0, r1
	ldr r1, [sp, #4]
	orrs r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r1, _080A5E98 @ =0xFFFF0000
	ands r5, r1
	orrs r5, r0
	adds r0, r6, #0
	adds r1, r7, #0
	mov r2, r8
	adds r3, r5, #0
	ldr r4, _080A5E9C @ =gUnknown_03000C2C
	bl sub_80D391C
	movs r0, #0x20
	add r8, r0
	adds r7, #0x20
	adds r6, #0x20
	ldr r1, [sp]
	adds r1, #1
	str r1, [sp]
	cmp r1, #0xe
	bls _080A5E2A
	mov r1, sl
	adds r1, #0x2a
	movs r0, #1
	strb r0, [r1]
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A5E90: .4byte 0xFFFFFF00
_080A5E94: .4byte 0xFFFFFC1F
_080A5E98: .4byte 0xFFFF0000
_080A5E9C: .4byte gUnknown_03000C2C

	thumb_func_start sub_80A5EA0
sub_80A5EA0: @ 0x080A5EA0
	push {lr}
	ldr r0, [r0, #4]
	bl sub_80A4698
	ldr r0, [r0]
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl sub_80D102C
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80A5EB8
sub_80A5EB8: @ 0x080A5EB8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r5, r0, #0
	adds r2, r1, #0
	ldrh r0, [r2]
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x16
	cmp r0, #1
	bne _080A5F68
	ldr r0, [r5]
	cmp r0, #1
	bne _080A5F68
	ldr r0, [r5, #4]
	cmp r0, #8
	bne _080A5F68
	ldrb r1, [r2, #1]
	lsrs r1, r1, #2
	ldrh r0, [r2, #2]
	ldr r3, _080A5F5C @ =0x000003FF
	mov r8, r3
	ands r0, r3
	lsls r0, r0, #6
	orrs r0, r1
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bge _080A5EF4
	adds r0, #7
_080A5EF4:
	asrs r3, r0, #3
	ldrb r1, [r2, #3]
	lsrs r1, r1, #2
	ldrh r0, [r2, #4]
	mov r2, r8
	ands r0, r2
	lsls r0, r0, #6
	orrs r0, r1
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bge _080A5F0E
	adds r0, #7
_080A5F0E:
	asrs r2, r0, #3
	mov r1, sp
	mov r0, sp
	strh r3, [r0]
	strh r2, [r1, #2]
	movs r0, #8
	bl sub_80A4698
	ldrh r2, [r0, #0x20]
	movs r4, #0
	adds r7, r5, #0
	adds r7, #0x10
	mov r1, sp
	movs r3, #0
	ldrsh r0, [r1, r3]
	lsls r6, r0, #1
	movs r3, #2
	ldrsh r0, [r1, r3]
	muls r0, r2, r0
	lsls r5, r0, #1
	mov r3, r8
	movs r2, #8
_080A5F3A:
	adds r0, r7, r2
	ldr r0, [r0]
	adds r0, r0, r6
	adds r0, r0, r5
	ldrh r0, [r0]
	adds r1, r3, #0
	ands r1, r0
	cmp r1, r3
	beq _080A5F60
	adds r0, r1, #0
	subs r0, #0x58
	cmp r0, #0x3c
	bls _080A5F58
	cmp r1, #0x33
	bhi _080A5F68
_080A5F58:
	movs r0, #1
	b _080A5F6A
	.align 2, 0
_080A5F5C: .4byte 0x000003FF
_080A5F60:
	subs r2, #4
	adds r4, #1
	cmp r4, #2
	bls _080A5F3A
_080A5F68:
	movs r0, #0
_080A5F6A:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80A5F78
sub_80A5F78: @ 0x080A5F78
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r5, r0, #0
	adds r4, r1, #0
	mov r8, r2
	mov sb, r3
	ldr r0, [r5, #4]
	bl sub_80A4698
	ldrh r0, [r0, #0x20]
	mov sl, r0
	movs r6, #0
	ldr r0, [sp, #0x24]
	cmp r6, r0
	bhs _080A5FFE
	lsls r4, r4, #2
	str r4, [sp]
_080A5FA2:
	movs r4, #0
	adds r1, r6, #1
	mov ip, r1
	cmp r4, sb
	bhs _080A5FF6
	adds r0, r5, #0
	adds r0, #0x10
	ldr r2, [sp]
	adds r7, r0, r2
_080A5FB4:
	mov r3, r8
	movs r0, #0
	ldrsh r1, [r3, r0]
	adds r1, r1, r4
	movs r2, #2
	ldrsh r0, [r3, r2]
	adds r0, r0, r6
	mov r3, sl
	muls r3, r0, r3
	adds r0, r3, #0
	adds r1, r1, r0
	lsls r2, r1, #1
	ldr r0, [r7]
	adds r0, r0, r2
	ldr r2, _080A6018 @ =0x000003FF
	strh r2, [r0]
	ldr r2, [r5, #0x2c]
	lsls r1, r1, #2
	adds r2, r1, r2
	ldrb r3, [r2]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r3
	strb r0, [r2]
	ldr r0, [r5, #0x2c]
	adds r1, r1, r0
	ldrh r2, [r1, #2]
	movs r0, #1
	ands r0, r2
	strh r0, [r1, #2]
	adds r4, #1
	cmp r4, sb
	blo _080A5FB4
_080A5FF6:
	mov r6, ip
	ldr r3, [sp, #0x24]
	cmp r6, r3
	blo _080A5FA2
_080A5FFE:
	adds r1, r5, #0
	adds r1, #0x29
	movs r0, #1
	strb r0, [r1]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A6018: .4byte 0x000003FF

	thumb_func_start sub_80A601C
sub_80A601C: @ 0x080A601C
	adds r0, #0x58
	movs r1, #0x14
	strb r1, [r0]
	bx lr

	thumb_func_start sub_80A6024
sub_80A6024: @ 0x080A6024
	push {r4, lr}
	adds r4, r0, #0
	adds r2, r1, #0
	ldr r0, [r4, #4]
	cmp r0, #0x24
	blt _080A6064
	cmp r0, #0x25
	ble _080A603A
	cmp r0, #0x40
	beq _080A6054
	b _080A6064
_080A603A:
	ldr r1, _080A604C @ =gUnknown_08106C8C
	ldr r0, _080A6050 @ =gUnknown_081073C4
	adds r0, r2, r0
	ldrb r2, [r0]
	adds r0, r4, #0
	movs r3, #8
	bl sub_80A5BD8
	b _080A6064
	.align 2, 0
_080A604C: .4byte gUnknown_08106C8C
_080A6050: .4byte gUnknown_081073C4
_080A6054:
	ldr r1, _080A6074 @ =gUnknown_08106C8C
	ldr r0, _080A6078 @ =gUnknown_081073CC
	adds r0, r2, r0
	ldrb r2, [r0]
	adds r0, r4, #0
	movs r3, #4
	bl sub_80A5BD8
_080A6064:
	adds r1, r4, #0
	adds r1, #0x29
	movs r0, #1
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A6074: .4byte gUnknown_08106C8C
_080A6078: .4byte gUnknown_081073CC

	thumb_func_start sub_80A607C
sub_80A607C: @ 0x080A607C
	push {r4, lr}
	adds r4, r0, #0
	adds r2, r1, #0
	ldr r0, [r4, #4]
	cmp r0, #0x27
	beq _080A60CC
	cmp r0, #0x27
	bgt _080A6092
	cmp r0, #0x26
	beq _080A6098
	b _080A6120
_080A6092:
	cmp r0, #0x41
	beq _080A6110
	b _080A6120
_080A6098:
	cmp r2, #0xf
	bls _080A60BC
	ldr r1, _080A60B4 @ =gUnknown_08106C74
	ldr r3, _080A60B8 @ =gUnknown_081073D0
	adds r0, r2, #0
	subs r0, #0x10
	lsls r0, r0, #1
	adds r2, r0, r3
	ldrb r2, [r2]
	adds r3, #1
	adds r0, r0, r3
	ldrb r3, [r0]
	b _080A6100
	.align 2, 0
_080A60B4: .4byte gUnknown_08106C74
_080A60B8: .4byte gUnknown_081073D0
_080A60BC:
	ldr r1, _080A60C4 @ =gUnknown_08106C74
	ldr r0, _080A60C8 @ =gUnknown_081073F0
	b _080A60F4
	.align 2, 0
_080A60C4: .4byte gUnknown_08106C74
_080A60C8: .4byte gUnknown_081073F0
_080A60CC:
	cmp r2, #0xf
	bls _080A60F0
	ldr r1, _080A60E8 @ =gUnknown_08106C74
	ldr r3, _080A60EC @ =gUnknown_081073D0
	adds r0, r2, #0
	subs r0, #0x10
	lsls r0, r0, #1
	adds r2, r0, r3
	ldrb r2, [r2]
	adds r3, #1
	adds r0, r0, r3
	ldrb r3, [r0]
	b _080A6100
	.align 2, 0
_080A60E8: .4byte gUnknown_08106C74
_080A60EC: .4byte gUnknown_081073D0
_080A60F0:
	ldr r1, _080A6108 @ =gUnknown_08106C74
	ldr r0, _080A610C @ =gUnknown_08107400
_080A60F4:
	lsls r3, r2, #1
	adds r2, r3, r0
	ldrb r2, [r2]
	adds r0, #1
	adds r3, r3, r0
	ldrb r3, [r3]
_080A6100:
	adds r0, r4, #0
	bl sub_80A5BD8
	b _080A6120
	.align 2, 0
_080A6108: .4byte gUnknown_08106C74
_080A610C: .4byte gUnknown_08107400
_080A6110:
	ldr r1, _080A6130 @ =gUnknown_08106C74
	ldr r0, _080A6134 @ =gUnknown_08107420
	adds r0, r2, r0
	ldrb r2, [r0]
	adds r0, r4, #0
	movs r3, #5
	bl sub_80A5BD8
_080A6120:
	adds r1, r4, #0
	adds r1, #0x29
	movs r0, #1
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A6130: .4byte gUnknown_08106C74
_080A6134: .4byte gUnknown_08107420

	thumb_func_start sub_80A6138
sub_80A6138: @ 0x080A6138
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #0x2a
	beq _080A6160
	cmp r0, #0x2a
	bgt _080A614C
	cmp r0, #0x29
	beq _080A6152
	b _080A6180
_080A614C:
	cmp r0, #0x2b
	beq _080A6174
	b _080A6180
_080A6152:
	ldr r1, _080A615C @ =gUnknown_08106A7C
	adds r0, r4, #0
	movs r2, #0x19
	b _080A6166
	.align 2, 0
_080A615C: .4byte gUnknown_08106A7C
_080A6160:
	ldr r1, _080A6170 @ =gUnknown_08106A7C
	adds r0, r4, #0
	movs r2, #0x28
_080A6166:
	movs r3, #0xf
	bl sub_80A5BD8
	b _080A6180
	.align 2, 0
_080A6170: .4byte gUnknown_08106A7C
_080A6174:
	ldr r1, _080A6190 @ =gUnknown_08106A7C
	adds r0, r4, #0
	movs r2, #0x36
	movs r3, #0xf
	bl sub_80A5BD8
_080A6180:
	adds r1, r4, #0
	adds r1, #0x29
	movs r0, #1
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A6190: .4byte gUnknown_08106A7C

	thumb_func_start sub_80A6194
sub_80A6194: @ 0x080A6194
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #0x2a
	beq _080A61BC
	cmp r0, #0x2a
	bgt _080A61A8
	cmp r0, #0x29
	beq _080A61AE
	b _080A61DC
_080A61A8:
	cmp r0, #0x2b
	beq _080A61D0
	b _080A61DC
_080A61AE:
	ldr r1, _080A61B8 @ =gUnknown_08106A94
	adds r0, r4, #0
	movs r2, #0x19
	b _080A61C2
	.align 2, 0
_080A61B8: .4byte gUnknown_08106A94
_080A61BC:
	ldr r1, _080A61CC @ =gUnknown_08106A94
	adds r0, r4, #0
	movs r2, #0x28
_080A61C2:
	movs r3, #0xf
	bl sub_80A5BD8
	b _080A61DC
	.align 2, 0
_080A61CC: .4byte gUnknown_08106A94
_080A61D0:
	ldr r1, _080A61EC @ =gUnknown_08106A94
	adds r0, r4, #0
	movs r2, #0x36
	movs r3, #0xf
	bl sub_80A5BD8
_080A61DC:
	adds r1, r4, #0
	adds r1, #0x29
	movs r0, #1
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A61EC: .4byte gUnknown_08106A94

	thumb_func_start sub_80A61F0
sub_80A61F0: @ 0x080A61F0
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #0x2a
	beq _080A6200
	cmp r0, #0x2b
	beq _080A6214
	b _080A6220
_080A6200:
	ldr r1, _080A6210 @ =gUnknown_08106AAC
	adds r0, r4, #0
	movs r2, #0xb
	movs r3, #3
	bl sub_80A5BD8
	b _080A6220
	.align 2, 0
_080A6210: .4byte gUnknown_08106AAC
_080A6214:
	ldr r1, _080A6230 @ =gUnknown_08106AAC
	adds r0, r4, #0
	movs r2, #0x13
	movs r3, #3
	bl sub_80A5BD8
_080A6220:
	adds r1, r4, #0
	adds r1, #0x29
	movs r0, #1
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A6230: .4byte gUnknown_08106AAC

	thumb_func_start sub_80A6234
sub_80A6234: @ 0x080A6234
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #0x2a
	beq _080A6244
	cmp r0, #0x2b
	beq _080A6258
	b _080A6264
_080A6244:
	ldr r1, _080A6254 @ =gUnknown_08106AC4
	adds r0, r4, #0
	movs r2, #0xb
	movs r3, #3
	bl sub_80A5BD8
	b _080A6264
	.align 2, 0
_080A6254: .4byte gUnknown_08106AC4
_080A6258:
	ldr r1, _080A6274 @ =gUnknown_08106AC4
	adds r0, r4, #0
	movs r2, #0x13
	movs r3, #3
	bl sub_80A5BD8
_080A6264:
	adds r1, r4, #0
	adds r1, #0x29
	movs r0, #1
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A6274: .4byte gUnknown_08106AC4

	thumb_func_start sub_80A6278
sub_80A6278: @ 0x080A6278
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #0x2a
	beq _080A6288
	cmp r0, #0x2b
	beq _080A629C
	b _080A62A8
_080A6288:
	ldr r1, _080A6298 @ =gUnknown_08106ADC
	adds r0, r4, #0
	movs r2, #0xf
	movs r3, #2
	bl sub_80A5BD8
	b _080A62A8
	.align 2, 0
_080A6298: .4byte gUnknown_08106ADC
_080A629C:
	ldr r1, _080A62B8 @ =gUnknown_08106ADC
	adds r0, r4, #0
	movs r2, #0x17
	movs r3, #2
	bl sub_80A5BD8
_080A62A8:
	adds r1, r4, #0
	adds r1, #0x29
	movs r0, #1
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A62B8: .4byte gUnknown_08106ADC

	thumb_func_start sub_80A62BC
sub_80A62BC: @ 0x080A62BC
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #0x2a
	beq _080A62CC
	cmp r0, #0x2b
	beq _080A62E0
	b _080A62EC
_080A62CC:
	ldr r1, _080A62DC @ =gUnknown_08106AF4
	adds r0, r4, #0
	movs r2, #0xf
	movs r3, #2
	bl sub_80A5BD8
	b _080A62EC
	.align 2, 0
_080A62DC: .4byte gUnknown_08106AF4
_080A62E0:
	ldr r1, _080A62FC @ =gUnknown_08106AF4
	adds r0, r4, #0
	movs r2, #0x17
	movs r3, #2
	bl sub_80A5BD8
_080A62EC:
	adds r1, r4, #0
	adds r1, #0x29
	movs r0, #1
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A62FC: .4byte gUnknown_08106AF4

	thumb_func_start sub_80A6300
sub_80A6300: @ 0x080A6300
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #0x2a
	beq _080A6328
	cmp r0, #0x2a
	bgt _080A6314
	cmp r0, #0x29
	beq _080A631A
	b _080A6350
_080A6314:
	cmp r0, #0x2b
	beq _080A633C
	b _080A6350
_080A631A:
	ldr r1, _080A6324 @ =gUnknown_08106B3C
	adds r0, r4, #0
	movs r2, #1
	b _080A632E
	.align 2, 0
_080A6324: .4byte gUnknown_08106B3C
_080A6328:
	ldr r1, _080A6338 @ =gUnknown_08106B3C
	adds r0, r4, #0
	movs r2, #0x10
_080A632E:
	movs r3, #0x11
	bl sub_80A5BD8
	b _080A6348
	.align 2, 0
_080A6338: .4byte gUnknown_08106B3C
_080A633C:
	ldr r1, _080A6358 @ =gUnknown_08106B3C
	adds r0, r4, #0
	movs r2, #0x18
	movs r3, #0x11
	bl sub_80A5BD8
_080A6348:
	adds r1, r4, #0
	adds r1, #0x29
	movs r0, #1
	strb r0, [r1]
_080A6350:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A6358: .4byte gUnknown_08106B3C

	thumb_func_start sub_80A635C
sub_80A635C: @ 0x080A635C
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #0x2a
	beq _080A6384
	cmp r0, #0x2a
	bgt _080A6370
	cmp r0, #0x29
	beq _080A6376
	b _080A63AC
_080A6370:
	cmp r0, #0x2b
	beq _080A6398
	b _080A63AC
_080A6376:
	ldr r1, _080A6380 @ =gUnknown_08106B24
	adds r0, r4, #0
	movs r2, #1
	b _080A638A
	.align 2, 0
_080A6380: .4byte gUnknown_08106B24
_080A6384:
	ldr r1, _080A6394 @ =gUnknown_08106B24
	adds r0, r4, #0
	movs r2, #0x10
_080A638A:
	movs r3, #0x11
	bl sub_80A5BD8
	b _080A63A4
	.align 2, 0
_080A6394: .4byte gUnknown_08106B24
_080A6398:
	ldr r1, _080A63B4 @ =gUnknown_08106B24
	adds r0, r4, #0
	movs r2, #0x18
	movs r3, #0x11
	bl sub_80A5BD8
_080A63A4:
	adds r1, r4, #0
	adds r1, #0x29
	movs r0, #1
	strb r0, [r1]
_080A63AC:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A63B4: .4byte gUnknown_08106B24

	thumb_func_start sub_80A63B8
sub_80A63B8: @ 0x080A63B8
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #0x25
	beq _080A63F8
	cmp r0, #0x25
	bgt _080A63CC
	cmp r0, #0x24
	beq _080A63E4
	b _080A6414
_080A63CC:
	cmp r0, #0x40
	bne _080A6414
	ldr r1, _080A63E0 @ =gUnknown_081070C4
	adds r0, r4, #0
	movs r2, #1
	movs r3, #0xd
	bl sub_80A5BD8
	b _080A640C
	.align 2, 0
_080A63E0: .4byte gUnknown_081070C4
_080A63E4:
	ldr r1, _080A63F4 @ =gUnknown_081070C4
	adds r0, r4, #0
	movs r2, #1
	movs r3, #0x11
	bl sub_80A5BD8
	b _080A640C
	.align 2, 0
_080A63F4: .4byte gUnknown_081070C4
_080A63F8:
	ldr r2, _080A641C @ =gUnknown_081070C4
	movs r3, #0xd
	cmp r1, #0
	bne _080A6402
	movs r3, #0x11
_080A6402:
	adds r0, r4, #0
	adds r1, r2, #0
	movs r2, #1
	bl sub_80A5BD8
_080A640C:
	adds r1, r4, #0
	adds r1, #0x29
	movs r0, #1
	strb r0, [r1]
_080A6414:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A641C: .4byte gUnknown_081070C4

	thumb_func_start sub_80A6420
sub_80A6420: @ 0x080A6420
	push {lr}
	sub sp, #4
	ldr r0, [r0]
	movs r1, #0
	str r1, [sp]
	movs r1, #1
	movs r2, #0
	movs r3, #0
	bl sub_803A8A4
	add sp, #4
	pop {r1}
	bx r1
	.align 2, 0
_080A643C:
	.byte 0x70, 0xB5, 0x06, 0x1C
	.byte 0x0C, 0x1C, 0x15, 0x1C, 0x70, 0x68, 0xFE, 0xF7, 0x27, 0xF9, 0x00, 0x8C, 0x68, 0x43, 0x24, 0x18
	.byte 0xA4, 0x00, 0xF0, 0x6A, 0x00, 0x19, 0x70, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x40, 0x68, 0x70, 0x47
	.byte 0x00, 0x68, 0x70, 0x47, 0x0E, 0x21, 0x40, 0x5E, 0x70, 0x47, 0x00, 0x00, 0x0A, 0x21, 0x40, 0x5E
	.byte 0x70, 0x47, 0x00, 0x00

	thumb_func_start sub_80A6474
sub_80A6474: @ 0x080A6474
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bl sub_80A4A94
	adds r1, r5, #0
	adds r1, #0x90
	ldr r0, _080A64B4 @ =gUnknown_080E831C
	str r0, [r1]
	adds r0, r5, #0
	adds r0, #0x94
	str r4, [r0]
	adds r0, #4
	movs r4, #0
	strb r4, [r0]
	adds r0, #4
	bl sub_80E43FC
	adds r0, r5, #0
	adds r0, #0xb4
	strb r4, [r0]
	strb r4, [r0, #1]
	strb r4, [r0, #2]
	adds r0, #4
	strb r4, [r0]
	strb r4, [r0, #1]
	strb r4, [r0, #2]
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080A64B4: .4byte gUnknown_080E831C

	thumb_func_start sub_80A64B8
sub_80A64B8: @ 0x080A64B8
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	bl sub_80A4BEC
	adds r0, r4, #0
	adds r0, #0x94
	ldr r1, [r0]
	ldr r0, [r4]
	cmp r0, #6
	bne _080A6510
	ldr r2, _080A6518 @ =0x000021A0
	adds r0, r1, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	lsrs r3, r0, #0x1e
	cmp r3, #1
	bne _080A6510
	adds r2, r4, #0
	adds r2, #0xb4
	ldr r1, _080A651C @ =gUnknown_08107338
	ldrb r0, [r2, #2]
	adds r0, #1
	movs r6, #0
	strb r0, [r2, #2]
	movs r5, #0xff
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrh r1, [r1, #8]
	cmp r0, r1
	blo _080A64F8
	strb r6, [r2, #2]
	strb r3, [r2, #1]
_080A64F8:
	adds r2, r4, #0
	adds r2, #0xb8
	ldr r1, _080A6520 @ =gUnknown_08107344
	ldrb r0, [r2, #2]
	adds r0, #1
	strb r0, [r2, #2]
	ands r0, r5
	ldrh r1, [r1, #8]
	cmp r0, r1
	blo _080A6510
	strb r6, [r2, #2]
	strb r3, [r2, #1]
_080A6510:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080A6518: .4byte 0x000021A0
_080A651C: .4byte gUnknown_08107338
_080A6520: .4byte gUnknown_08107344

	thumb_func_start sub_80A6524
sub_80A6524: @ 0x080A6524
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	adds r6, r1, #0
	bl sub_80A4F50
	adds r4, r5, #0
	adds r4, #0x94
	ldr r0, [r4]
	ldr r1, [r5]
	cmp r1, #6
	beq _080A65A0
	cmp r1, #0x1d
	bne _080A662A
	adds r1, r5, #0
	adds r1, #0x98
	ldrb r0, [r1]
	cmp r0, #0
	beq _080A662A
	movs r0, #0
	strb r0, [r1]
	ldr r0, [r4]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl sub_800BFBC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A658C
	ldr r0, [r4]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl sub_800C014
	cmp r0, #0x5f
	bne _080A6580
	ldr r1, _080A657C @ =gUnknown_0810710C
	adds r0, r5, #0
	movs r2, #1
	b _080A6592
	.align 2, 0
_080A657C: .4byte gUnknown_0810710C
_080A6580:
	ldr r1, _080A6588 @ =gUnknown_0810710C
	adds r0, r5, #0
	movs r2, #2
	b _080A6592
	.align 2, 0
_080A6588: .4byte gUnknown_0810710C
_080A658C:
	ldr r1, _080A659C @ =gUnknown_0810710C
	adds r0, r5, #0
	movs r2, #0
_080A6592:
	adds r3, r6, #0
	bl sub_80A5AB0
	b _080A662A
	.align 2, 0
_080A659C: .4byte gUnknown_0810710C
_080A65A0:
	ldr r1, _080A6634 @ =0x000021A0
	adds r0, r0, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080A662A
	adds r4, r5, #0
	adds r4, #0xb4
	ldr r7, _080A6638 @ =gUnknown_08107338
	ldrb r0, [r4, #1]
	cmp r0, #0
	beq _080A65EC
	movs r0, #0
	mov r8, r0
	mov r1, r8
	strb r1, [r4, #1]
	ldrb r2, [r4]
	adds r0, r5, #0
	adds r1, r7, #0
	adds r3, r6, #0
	bl sub_80A5AB0
	ldr r0, [r7, #4]
	ldrh r1, [r0, #2]
	movs r2, #0
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r1
	bne _080A65E4
	movs r2, #1
_080A65E4:
	cmp r2, #0
	beq _080A65EC
	mov r0, r8
	strb r0, [r4]
_080A65EC:
	adds r4, r5, #0
	adds r4, #0xb8
	ldr r7, _080A663C @ =gUnknown_08107344
	ldrb r0, [r4, #1]
	cmp r0, #0
	beq _080A662A
	movs r1, #0
	mov r8, r1
	mov r0, r8
	strb r0, [r4, #1]
	ldrb r2, [r4]
	adds r0, r5, #0
	adds r1, r7, #0
	adds r3, r6, #0
	bl sub_80A5AB0
	ldr r0, [r7, #4]
	ldrh r1, [r0, #2]
	movs r2, #0
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r1
	bne _080A6622
	movs r2, #1
_080A6622:
	cmp r2, #0
	beq _080A662A
	mov r1, r8
	strb r1, [r4]
_080A662A:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A6634: .4byte 0x000021A0
_080A6638: .4byte gUnknown_08107338
_080A663C: .4byte gUnknown_08107344

	thumb_func_start sub_80A6640
sub_80A6640: @ 0x080A6640
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80A5760
	adds r1, r4, #0
	adds r1, #0xb4
	movs r0, #0
	strb r0, [r1]
	strb r0, [r1, #1]
	adds r4, #0xb8
	strb r0, [r4]
	strb r0, [r4, #1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80A6660
sub_80A6660: @ 0x080A6660
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	mov r8, r0
	bl sub_80A5CC0
	mov r0, r8
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0x10
	bl sub_800E324
	adds r6, r0, #0
	mov r1, r8
	ldr r0, [r1]
	cmp r0, #0x2e
	bgt _080A668E
	cmp r0, #0x2d
	bge _080A6694
	b _080A669A
_080A668E:
	cmp r0, #0x2f
	beq _080A6698
	b _080A669A
_080A6694:
	movs r6, #1
	b _080A669A
_080A6698:
	movs r6, #3
_080A669A:
	mov r0, r8
	adds r0, #0x94
	ldr r4, [r0]
	ldr r2, _080A66D8 @ =0x0000214C
	adds r7, r4, r2
	mov r3, r8
	ldr r2, [r3]
	mov sb, r0
	cmp r2, #6
	beq _080A66E4
	cmp r2, #6
	ble _080A66B4
	b _080A6806
_080A66B4:
	cmp r2, #1
	beq _080A66BA
	b _080A6806
_080A66BA:
	ldr r1, _080A66DC @ =0x0000219C
	adds r0, r4, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1e
	cmp r0, #1
	beq _080A66CA
	b _080A6806
_080A66CA:
	ldr r1, _080A66E0 @ =gUnknown_08106D34
	mov r0, r8
	movs r2, #0x17
	movs r3, #0x11
	bl sub_80A5BD8
	b _080A6806
	.align 2, 0
_080A66D8: .4byte 0x0000214C
_080A66DC: .4byte 0x0000219C
_080A66E0: .4byte gUnknown_08106D34
_080A66E4:
	ldr r2, _080A681C @ =0x000021A9
	adds r0, r4, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080A66FE
	ldr r1, _080A6820 @ =gUnknown_0810725C
	mov r0, r8
	movs r2, #0x13
	movs r3, #0x11
	bl sub_80A5BD8
_080A66FE:
	ldr r3, _080A6824 @ =0x000021A0
	adds r0, r4, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080A6718
	ldr r1, _080A6828 @ =gUnknown_0810730C
	mov r0, r8
	movs r2, #0x16
	movs r3, #0x10
	bl sub_80A5BD8
_080A6718:
	ldr r0, _080A682C @ =0x0000219A
	adds r5, r4, r0
	ldrh r0, [r5]
	lsls r0, r0, #0x17
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080A6732
	ldr r1, _080A6830 @ =gUnknown_08107230
	mov r0, r8
	movs r2, #0x13
	movs r3, #0x11
	bl sub_80A5BD8
_080A6732:
	ldr r1, _080A6834 @ =0x0000219B
	adds r0, r4, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080A674C
	ldr r1, _080A6830 @ =gUnknown_08107230
	mov r0, r8
	movs r2, #0x13
	movs r3, #0x11
	bl sub_80A5BD8
_080A674C:
	ldrb r0, [r5]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080A676E
	ldr r1, _080A6838 @ =gUnknown_08107204
	mov r0, r8
	movs r2, #8
	movs r3, #0xc
	bl sub_80A5BD8
	ldr r1, _080A683C @ =gUnknown_081072B4
	mov r0, r8
	movs r2, #0x11
	movs r3, #0xf
	bl sub_80A5BD8
_080A676E:
	ldr r2, _080A6840 @ =0x0000219D
	adds r0, r4, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080A6788
	ldr r1, _080A6844 @ =gUnknown_08107288
	mov r0, r8
	movs r2, #0x17
	movs r3, #0x17
	bl sub_80A5BD8
_080A6788:
	ldr r3, _080A6848 @ =0x0000219E
	adds r0, r4, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080A67A2
	ldr r1, _080A6838 @ =gUnknown_08107204
	mov r0, r8
	movs r2, #8
	movs r3, #0xc
	bl sub_80A5BD8
_080A67A2:
	ldr r1, _080A684C @ =0x000021A1
	adds r0, r4, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080A67C8
	ldr r1, _080A6838 @ =gUnknown_08107204
	mov r0, r8
	movs r2, #8
	movs r3, #0xc
	bl sub_80A5BD8
	ldr r1, _080A683C @ =gUnknown_081072B4
	mov r0, r8
	movs r2, #0x11
	movs r3, #0xf
	bl sub_80A5BD8
_080A67C8:
	ldr r2, _080A6850 @ =0x000021A2
	adds r0, r4, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080A67E2
	ldr r1, _080A6838 @ =gUnknown_08107204
	mov r0, r8
	movs r2, #8
	movs r3, #0xc
	bl sub_80A5BD8
_080A67E2:
	adds r0, r7, #0
	adds r0, #0x4c
	ldrb r0, [r0]
	lsrs r0, r0, #6
	cmp r0, #1
	bne _080A6806
	ldr r1, _080A6854 @ =gUnknown_081072E0
	mov r0, r8
	movs r2, #0x1b
	movs r3, #0x1a
	bl sub_80A5BD8
	ldr r1, _080A6830 @ =gUnknown_08107230
	mov r0, r8
	movs r2, #0x13
	movs r3, #0x11
	bl sub_80A5BD8
_080A6806:
	mov r3, r8
	ldr r2, [r3, #4]
	cmp r2, #0x3d
	bls _080A6812
	bl _080A746E
_080A6812:
	lsls r0, r2, #2
	ldr r1, _080A6858 @ =_080A685C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A681C: .4byte 0x000021A9
_080A6820: .4byte gUnknown_0810725C
_080A6824: .4byte 0x000021A0
_080A6828: .4byte gUnknown_0810730C
_080A682C: .4byte 0x0000219A
_080A6830: .4byte gUnknown_08107230
_080A6834: .4byte 0x0000219B
_080A6838: .4byte gUnknown_08107204
_080A683C: .4byte gUnknown_081072B4
_080A6840: .4byte 0x0000219D
_080A6844: .4byte gUnknown_08107288
_080A6848: .4byte 0x0000219E
_080A684C: .4byte 0x000021A1
_080A6850: .4byte 0x000021A2
_080A6854: .4byte gUnknown_081072E0
_080A6858: .4byte _080A685C
_080A685C: @ jump table
	.4byte _080A6C18 @ case 0
	.4byte _080A6D78 @ case 1
	.4byte _080A746E @ case 2
	.4byte _080A746E @ case 3
	.4byte _080A746E @ case 4
	.4byte _080A746E @ case 5
	.4byte _080A6BD4 @ case 6
	.4byte _080A6BF0 @ case 7
	.4byte _080A6954 @ case 8
	.4byte _080A6988 @ case 9
	.4byte _080A746E @ case 10
	.4byte _080A746E @ case 11
	.4byte _080A746E @ case 12
	.4byte _080A746E @ case 13
	.4byte _080A7428 @ case 14
	.4byte _080A7448 @ case 15
	.4byte _080A746E @ case 16
	.4byte _080A746E @ case 17
	.4byte _080A746E @ case 18
	.4byte _080A69A8 @ case 19
	.4byte _080A746E @ case 20
	.4byte _080A746E @ case 21
	.4byte _080A69B4 @ case 22
	.4byte _080A69C0 @ case 23
	.4byte _080A69F4 @ case 24
	.4byte _080A6B20 @ case 25
	.4byte _080A746E @ case 26
	.4byte _080A746E @ case 27
	.4byte _080A746E @ case 28
	.4byte _080A746E @ case 29
	.4byte _080A69D4 @ case 30
	.4byte _080A6B0C @ case 31
	.4byte _080A746E @ case 32
	.4byte _080A746E @ case 33
	.4byte _080A746E @ case 34
	.4byte _080A746E @ case 35
	.4byte _080A7260 @ case 36
	.4byte _080A72B2 @ case 37
	.4byte _080A733C @ case 38
	.4byte _080A7396 @ case 39
	.4byte _080A746E @ case 40
	.4byte _080A6EE4 @ case 41
	.4byte _080A6FA0 @ case 42
	.4byte _080A70DC @ case 43
	.4byte _080A746E @ case 44
	.4byte _080A746E @ case 45
	.4byte _080A746E @ case 46
	.4byte _080A746E @ case 47
	.4byte _080A69E8 @ case 48
	.4byte _080A746E @ case 49
	.4byte _080A746E @ case 50
	.4byte _080A746E @ case 51
	.4byte _080A746E @ case 52
	.4byte _080A746E @ case 53
	.4byte _080A746E @ case 54
	.4byte _080A746E @ case 55
	.4byte _080A6A68 @ case 56
	.4byte _080A6A68 @ case 57
	.4byte _080A6A68 @ case 58
	.4byte _080A6A68 @ case 59
	.4byte _080A746E @ case 60
	.4byte _080A6A68 @ case 61
_080A6954:
	cmp r6, #1
	bne _080A6964
	ldr r1, _080A6980 @ =gUnknown_08106D1C
	mov r0, r8
	movs r2, #0xa
	movs r3, #0x19
	bl sub_80A5BD8
_080A6964:
	mov r1, sb
	ldr r0, [r1]
	bl sub_8010E58
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080A6976
	bl _080A746E
_080A6976:
	ldr r1, _080A6984 @ =gUnknown_08106CEC
	mov r0, r8
	movs r2, #0x17
	b _080A6ED6
	.align 2, 0
_080A6980: .4byte gUnknown_08106D1C
_080A6984: .4byte gUnknown_08106CEC
_080A6988:
	mov r2, sb
	ldr r0, [r2]
	bl sub_8010E58
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080A699A
	bl _080A746E
_080A699A:
	ldr r1, _080A69A4 @ =gUnknown_08106D04
	mov r0, r8
	movs r2, #0x17
	b _080A6ED6
	.align 2, 0
_080A69A4: .4byte gUnknown_08106D04
_080A69A8:
	mov r0, r8
	movs r1, #0
	bl sub_80AA850
	bl _080A746E
_080A69B4:
	mov r0, r8
	movs r1, #1
	bl sub_80AA850
	bl _080A746E
_080A69C0:
	mov r0, r8
	movs r1, #2
	bl sub_80AA850
	mov r0, r8
	movs r1, #3
	bl sub_80AA850
	bl _080A746E
_080A69D4:
	mov r0, r8
	movs r1, #6
	bl sub_80AA850
	mov r0, r8
	movs r1, #7
	bl sub_80AA850
	bl _080A746E
_080A69E8:
	mov r0, r8
	movs r1, #8
	bl sub_80AA850
	bl _080A746E
_080A69F4:
	mov r3, sb
	ldr r1, [r3]
	ldr r2, _080A6A60 @ =0x00002186
	adds r0, r1, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1e
	cmp r0, #2
	bne _080A6A4A
	ldrb r2, [r1, #0x10]
	lsls r2, r2, #0x1d
	lsrs r2, r2, #0x1d
	ldrb r3, [r1, #0x11]
	lsls r0, r3, #0x1e
	lsrs r0, r0, #0x1e
	lsls r3, r3, #0x19
	lsrs r3, r3, #0x1b
	adds r2, #6
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r1, r1, #1
	lsls r0, r2, #4
	subs r0, r0, r2
	lsls r0, r0, #3
	adds r1, r1, r0
	adds r1, r3, r1
	cmp r1, #6
	bls _080A6A36
	adds r0, r1, #0
	movs r1, #7
	bl sub_80D0F4E
	adds r1, r0, #0
_080A6A36:
	movs r0, #7
	ands r1, r0
	cmp r1, #3
	bne _080A6A4A
	ldr r1, _080A6A64 @ =gUnknown_08106E0C
	mov r0, r8
	movs r2, #0x28
	movs r3, #0x1d
	bl sub_80A5BD8
_080A6A4A:
	mov r0, r8
	movs r1, #4
	bl sub_80AA850
	mov r0, r8
	movs r1, #5
	bl sub_80AA850
	bl _080A746E
	.align 2, 0
_080A6A60: .4byte 0x00002186
_080A6A64: .4byte gUnknown_08106E0C
_080A6A68:
	adds r0, r2, #0
	subs r0, #0x38
	cmp r0, #5
	bhi _080A6AAA
	lsls r0, r0, #2
	ldr r1, _080A6A7C @ =_080A6A80
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A6A7C: .4byte _080A6A80
_080A6A80: @ jump table
	.4byte _080A6AAA @ case 0
	.4byte _080A6AA4 @ case 1
	.4byte _080A6A9E @ case 2
	.4byte _080A6A98 @ case 3
	.4byte _080A6AAA @ case 4
	.4byte _080A6AAA @ case 5
_080A6A98:
	movs r0, #7
	mov sl, r0
	b _080A6AAE
_080A6A9E:
	movs r1, #7
	mov sl, r1
	b _080A6AAE
_080A6AA4:
	movs r2, #7
	mov sl, r2
	b _080A6AAE
_080A6AAA:
	movs r3, #7
	mov sl, r3
_080A6AAE:
	mov r1, sb
	ldr r0, [r1]
	ldr r2, _080A6ABC @ =0x00002E58
	adds r6, r0, r2
	movs r7, #0
	b _080A6AFE
	.align 2, 0
_080A6ABC: .4byte 0x00002E58
_080A6AC0:
	movs r5, #0
	adds r3, r7, #1
	mov sb, r3
	b _080A6AF2
_080A6AC8:
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r7, #0
	bl sub_809D8D4
	adds r4, r0, #0
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r7, #0
	bl sub_809E0AC
	lsls r1, r5, #1
	adds r1, #2
	lsls r2, r7, #1
	add r2, sl
	str r0, [sp]
	mov r0, r8
	adds r3, r4, #0
	bl sub_80AA540
	adds r5, #1
_080A6AF2:
	adds r0, r6, #0
	bl sub_809D8A4
	cmp r5, r0
	blo _080A6AC8
	mov r7, sb
_080A6AFE:
	adds r0, r6, #0
	bl sub_809D8B8
	cmp r7, r0
	blo _080A6AC0
	bl _080A746E
_080A6B0C:
	mov r0, r8
	movs r1, #0xa
	bl sub_80AA850
	mov r0, r8
	movs r1, #0xb
	bl sub_80AA850
	bl _080A746E
_080A6B20:
	mov r0, r8
	movs r1, #9
	bl sub_80AA850
	mov r1, sb
	ldr r0, [r1]
	ldr r2, _080A6B40 @ =0x00001C38
	adds r0, r0, r2
	bl sub_800F5D8
	cmp r0, #0
	beq _080A6B44
	cmp r0, #1
	beq _080A6B58
	b _080A6B74
	.align 2, 0
_080A6B40: .4byte 0x00001C38
_080A6B44:
	ldr r1, _080A6B54 @ =gUnknown_08106D7C
	mov r0, r8
	movs r2, #0x21
	movs r3, #0x14
	bl sub_80A5BD8
	b _080A6B74
	.align 2, 0
_080A6B54: .4byte gUnknown_08106D7C
_080A6B58:
	mov r3, sb
	ldr r0, [r3]
	ldr r1, _080A6B9C @ =0x00001BD8
	adds r0, r0, r1
	bl sub_800E9A0
	cmp r0, #7
	bne _080A6B74
	ldr r1, _080A6BA0 @ =gUnknown_08106D7C
	mov r0, r8
	movs r2, #0x21
	movs r3, #0x14
	bl sub_80A5BD8
_080A6B74:
	mov r0, r8
	bl sub_80AA8F0
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A6B8C
	ldr r1, _080A6BA4 @ =gUnknown_08106D94
	mov r0, r8
	movs r2, #0x21
	movs r3, #0x17
	bl sub_80A5BD8
_080A6B8C:
	cmp r6, #1
	beq _080A6BB8
	cmp r6, #1
	bgt _080A6BA8
	cmp r6, #0
	beq _080A6BB0
	bl _080A746E
	.align 2, 0
_080A6B9C: .4byte 0x00001BD8
_080A6BA0: .4byte gUnknown_08106D7C
_080A6BA4: .4byte gUnknown_08106D94
_080A6BA8:
	cmp r6, #2
	beq _080A6BC0
	bl _080A746E
_080A6BB0:
	ldr r1, _080A6BB4 @ =gUnknown_08106DC4
	b _080A6BC2
	.align 2, 0
_080A6BB4: .4byte gUnknown_08106DC4
_080A6BB8:
	ldr r1, _080A6BBC @ =gUnknown_08106DDC
	b _080A6BC2
	.align 2, 0
_080A6BBC: .4byte gUnknown_08106DDC
_080A6BC0:
	ldr r1, _080A6BD0 @ =gUnknown_08106DF4
_080A6BC2:
	mov r0, r8
	movs r2, #0xc
	movs r3, #0x14
	bl sub_80A5BD8
	bl _080A746E
	.align 2, 0
_080A6BD0: .4byte gUnknown_08106DF4
_080A6BD4:
	mov r2, sb
	ldr r0, [r2]
	bl sub_8010E50
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080A6BE6
	bl _080A746E
_080A6BE6:
	ldr r1, _080A6BEC @ =gUnknown_08106CBC
	b _080A6C04
	.align 2, 0
_080A6BEC: .4byte gUnknown_08106CBC
_080A6BF0:
	mov r3, sb
	ldr r0, [r3]
	bl sub_8010E50
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080A6C02
	bl _080A746E
_080A6C02:
	ldr r1, _080A6C14 @ =gUnknown_08106CD4
_080A6C04:
	mov r0, r8
	movs r2, #0x3c
	movs r3, #0
	bl sub_80A5BD8
	bl _080A746E
	.align 2, 0
_080A6C14: .4byte gUnknown_08106CD4
_080A6C18:
	movs r0, #0
_080A6C1A:
	movs r4, #0
	adds r6, r0, #1
	subs r1, r0, #1
	str r1, [sp, #0x1c]
	lsls r2, r0, #1
	str r2, [sp, #0x20]
	movs r1, #0x2b
	adds r3, r0, #0
	muls r3, r1, r3
	str r3, [sp, #4]
	str r6, [sp, #8]
	adds r2, r6, #0
	muls r2, r1, r2
	str r2, [sp, #0xc]
	movs r3, #0x22
	mov sl, r3
_080A6C3A:
	mov r0, sb
	ldr r1, [r0]
	ldr r2, _080A6C74 @ =0x000009DC
	adds r1, r1, r2
	ldr r3, [sp, #4]
	adds r0, r4, r3
	lsls r0, r0, #2
	adds r5, r1, r0
	adds r2, r1, #0
	adds r7, r5, #0
	movs r0, #0
	cmp r4, #0
	blt _080A6C64
	cmp r6, #0
	blt _080A6C64
	cmp r4, #0x2a
	bgt _080A6C64
	ldr r1, [sp, #8]
	cmp r1, #0x18
	bgt _080A6C64
	movs r0, #1
_080A6C64:
	cmp r0, #0
	beq _080A6C78
	ldr r3, [sp, #0xc]
	adds r0, r4, r3
	lsls r0, r0, #2
	adds r1, r2, r0
	b _080A6C7A
	.align 2, 0
_080A6C74: .4byte 0x000009DC
_080A6C78:
	movs r1, #0
_080A6C7A:
	ldr r0, [sp, #0x1c]
	movs r3, #0
	cmp r4, #0
	blt _080A6C90
	cmp r0, #0
	blt _080A6C90
	cmp r4, #0x2a
	bgt _080A6C90
	cmp r0, #0x18
	bgt _080A6C90
	movs r3, #1
_080A6C90:
	cmp r3, #0
	beq _080A6CA0
	movs r3, #0x2b
	muls r0, r3, r0
	adds r0, r4, r0
	lsls r0, r0, #2
	adds r2, r2, r0
	b _080A6CA2
_080A6CA0:
	movs r2, #0
_080A6CA2:
	adds r0, r7, #0
	bl sub_800AF5C
	str r0, [sp]
	mov r0, r8
	mov r1, sl
	ldr r2, [sp, #0x20]
	adds r2, #0x16
	adds r3, r5, #0
	bl sub_80AA6D0
	movs r0, #2
	add sl, r0
	adds r4, #1
	cmp r4, #0x2a
	bls _080A6C3A
	adds r0, r6, #0
	cmp r0, #0x18
	bls _080A6C1A
	mov r1, sb
	ldr r0, [r1]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl sub_800BF14
	cmp r0, #1
	beq _080A6CF0
	cmp r0, #1
	blo _080A6CE4
	cmp r0, #2
	beq _080A6D04
	b _080A6D10
_080A6CE4:
	ldr r1, _080A6CEC @ =gUnknown_0810692C
	mov r0, r8
	movs r2, #0x1a
	b _080A6CF6
	.align 2, 0
_080A6CEC: .4byte gUnknown_0810692C
_080A6CF0:
	ldr r1, _080A6D00 @ =gUnknown_0810695C
	mov r0, r8
	movs r2, #0x12
_080A6CF6:
	movs r3, #3
	bl sub_80A5BD8
	b _080A6D10
	.align 2, 0
_080A6D00: .4byte gUnknown_0810695C
_080A6D04:
	ldr r1, _080A6D28 @ =gUnknown_0810698C
	mov r0, r8
	movs r2, #0xa
	movs r3, #2
	bl sub_80A5BD8
_080A6D10:
	mov r3, sb
	ldr r0, [r3]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	bl sub_800CE64
	cmp r0, #0
	beq _080A6D2C
	cmp r0, #1
	beq _080A6D40
	b _080A6D4C
	.align 2, 0
_080A6D28: .4byte gUnknown_0810698C
_080A6D2C:
	ldr r1, _080A6D3C @ =gUnknown_081069BC
	mov r0, r8
	movs r2, #0x3a
	movs r3, #2
	bl sub_80A5BD8
	b _080A6D4C
	.align 2, 0
_080A6D3C: .4byte gUnknown_081069BC
_080A6D40:
	ldr r1, _080A6D64 @ =gUnknown_081069EC
	mov r0, r8
	movs r2, #0x3a
	movs r3, #2
	bl sub_80A5BD8
_080A6D4C:
	mov r2, sb
	ldr r0, [r2]
	movs r3, #0x82
	lsls r3, r3, #3
	adds r0, r0, r3
	bl sub_800C560
	cmp r0, #0
	beq _080A6D68
	cmp r0, #1
	beq _080A6D70
	b _080A746E
	.align 2, 0
_080A6D64: .4byte gUnknown_081069EC
_080A6D68:
	ldr r1, _080A6D6C @ =gUnknown_08106A1C
	b _080A6ED2
	.align 2, 0
_080A6D6C: .4byte gUnknown_08106A1C
_080A6D70:
	ldr r1, _080A6D74 @ =gUnknown_08106A4C
	b _080A6ED2
	.align 2, 0
_080A6D74: .4byte gUnknown_08106A4C
_080A6D78:
	movs r0, #0
_080A6D7A:
	movs r4, #0
	adds r6, r0, #1
	subs r1, r0, #1
	str r1, [sp, #0x24]
	lsls r2, r0, #1
	str r2, [sp, #0x28]
	movs r1, #0x2b
	adds r3, r0, #0
	muls r3, r1, r3
	str r3, [sp, #0x10]
	str r6, [sp, #0x14]
	adds r2, r6, #0
	muls r2, r1, r2
	str r2, [sp, #0x18]
	movs r3, #0x22
	mov sl, r3
_080A6D9A:
	mov r0, sb
	ldr r1, [r0]
	ldr r2, _080A6DD4 @ =0x000009DC
	adds r1, r1, r2
	ldr r3, [sp, #0x10]
	adds r0, r4, r3
	lsls r0, r0, #2
	adds r5, r1, r0
	adds r2, r1, #0
	adds r7, r5, #0
	movs r0, #0
	cmp r4, #0
	blt _080A6DC4
	cmp r6, #0
	blt _080A6DC4
	cmp r4, #0x2a
	bgt _080A6DC4
	ldr r1, [sp, #0x14]
	cmp r1, #0x18
	bgt _080A6DC4
	movs r0, #1
_080A6DC4:
	cmp r0, #0
	beq _080A6DD8
	ldr r3, [sp, #0x18]
	adds r0, r4, r3
	lsls r0, r0, #2
	adds r1, r2, r0
	b _080A6DDA
	.align 2, 0
_080A6DD4: .4byte 0x000009DC
_080A6DD8:
	movs r1, #0
_080A6DDA:
	ldr r0, [sp, #0x24]
	movs r3, #0
	cmp r4, #0
	blt _080A6DF0
	cmp r0, #0
	blt _080A6DF0
	cmp r4, #0x2a
	bgt _080A6DF0
	cmp r0, #0x18
	bgt _080A6DF0
	movs r3, #1
_080A6DF0:
	cmp r3, #0
	beq _080A6E00
	movs r3, #0x2b
	muls r0, r3, r0
	adds r0, r4, r0
	lsls r0, r0, #2
	adds r2, r2, r0
	b _080A6E02
_080A6E00:
	movs r2, #0
_080A6E02:
	adds r0, r7, #0
	bl sub_800AF5C
	str r0, [sp]
	mov r0, r8
	mov r1, sl
	ldr r2, [sp, #0x28]
	adds r2, #0x16
	adds r3, r5, #0
	bl sub_80AA6D0
	movs r0, #2
	add sl, r0
	adds r4, #1
	cmp r4, #0x2a
	bls _080A6D9A
	adds r0, r6, #0
	cmp r0, #0x18
	bls _080A6D7A
	mov r1, sb
	ldr r0, [r1]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl sub_800BF14
	cmp r0, #1
	beq _080A6E50
	cmp r0, #1
	blo _080A6E44
	cmp r0, #2
	beq _080A6E64
	b _080A6E70
_080A6E44:
	ldr r1, _080A6E4C @ =gUnknown_08106944
	mov r0, r8
	movs r2, #0x1a
	b _080A6E56
	.align 2, 0
_080A6E4C: .4byte gUnknown_08106944
_080A6E50:
	ldr r1, _080A6E60 @ =gUnknown_08106974
	mov r0, r8
	movs r2, #0x12
_080A6E56:
	movs r3, #3
	bl sub_80A5BD8
	b _080A6E70
	.align 2, 0
_080A6E60: .4byte gUnknown_08106974
_080A6E64:
	ldr r1, _080A6E88 @ =gUnknown_081069A4
	mov r0, r8
	movs r2, #0xa
	movs r3, #2
	bl sub_80A5BD8
_080A6E70:
	mov r3, sb
	ldr r0, [r3]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	bl sub_800CE64
	cmp r0, #0
	beq _080A6E8C
	cmp r0, #1
	beq _080A6EA0
	b _080A6EAC
	.align 2, 0
_080A6E88: .4byte gUnknown_081069A4
_080A6E8C:
	ldr r1, _080A6E9C @ =gUnknown_081069D4
	mov r0, r8
	movs r2, #0x3a
	movs r3, #2
	bl sub_80A5BD8
	b _080A6EAC
	.align 2, 0
_080A6E9C: .4byte gUnknown_081069D4
_080A6EA0:
	ldr r1, _080A6EC4 @ =gUnknown_08106A04
	mov r0, r8
	movs r2, #0x3a
	movs r3, #2
	bl sub_80A5BD8
_080A6EAC:
	mov r2, sb
	ldr r0, [r2]
	movs r3, #0x82
	lsls r3, r3, #3
	adds r0, r0, r3
	bl sub_800C560
	cmp r0, #0
	beq _080A6EC8
	cmp r0, #1
	beq _080A6ED0
	b _080A746E
	.align 2, 0
_080A6EC4: .4byte gUnknown_08106A04
_080A6EC8:
	ldr r1, _080A6ECC @ =gUnknown_08106A34
	b _080A6ED2
	.align 2, 0
_080A6ECC: .4byte gUnknown_08106A34
_080A6ED0:
	ldr r1, _080A6EE0 @ =gUnknown_08106A64
_080A6ED2:
	mov r0, r8
	movs r2, #0xe
_080A6ED6:
	movs r3, #0x34
	bl sub_80A5BD8
	b _080A746E
	.align 2, 0
_080A6EE0: .4byte gUnknown_08106A64
_080A6EE4:
	ldr r1, _080A6F10 @ =gUnknown_08106A94
	mov r0, r8
	movs r2, #0x19
	movs r3, #0xf
	bl sub_80A5BD8
	mov r1, sb
	ldr r0, [r1]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl sub_800BF50
	cmp r0, #0
	beq _080A6F2C
	bl sub_800BB74
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A6F18
	ldr r1, _080A6F14 @ =gUnknown_08106B24
	b _080A6F1A
	.align 2, 0
_080A6F10: .4byte gUnknown_08106A94
_080A6F14: .4byte gUnknown_08106B24
_080A6F18:
	ldr r1, _080A6F28 @ =gUnknown_08106B3C
_080A6F1A:
	mov r0, r8
	movs r2, #1
	movs r3, #0x11
	bl sub_80A5BD8
	b _080A6F38
	.align 2, 0
_080A6F28: .4byte gUnknown_08106B3C
_080A6F2C:
	ldr r1, _080A6F90 @ =gUnknown_08106B0C
	mov r0, r8
	movs r2, #1
	movs r3, #0x11
	bl sub_80A5BD8
_080A6F38:
	mov r3, sb
	ldr r0, [r3]
	movs r4, #0xfa
	lsls r4, r4, #1
	adds r0, r0, r4
	bl sub_800BF9C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A6F58
	ldr r1, _080A6F94 @ =gUnknown_08106BB4
	mov r0, r8
	movs r2, #0x13
	movs r3, #6
	bl sub_80A5BD8
_080A6F58:
	mov r1, sb
	ldr r0, [r1]
	adds r0, r0, r4
	bl sub_800BFAC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A6F74
	ldr r1, _080A6F98 @ =gUnknown_08106BCC
	mov r0, r8
	movs r2, #8
	movs r3, #2
	bl sub_80A5BD8
_080A6F74:
	mov r2, sb
	ldr r0, [r2]
	adds r0, r0, r4
	bl sub_800BFB4
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080A6F86
	b _080A746E
_080A6F86:
	ldr r1, _080A6F9C @ =gUnknown_08106BE4
	mov r0, r8
	movs r2, #5
	b _080A70C0
	.align 2, 0
_080A6F90: .4byte gUnknown_08106B0C
_080A6F94: .4byte gUnknown_08106BB4
_080A6F98: .4byte gUnknown_08106BCC
_080A6F9C: .4byte gUnknown_08106BE4
_080A6FA0:
	ldr r1, _080A701C @ =gUnknown_08106A94
	mov r0, r8
	movs r2, #0x28
	movs r3, #0xf
	bl sub_80A5BD8
	mov r3, sb
	ldr r0, [r3]
	movs r4, #0xfa
	lsls r4, r4, #1
	adds r0, r0, r4
	bl sub_800BFCC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A6FCC
	ldr r1, _080A7020 @ =gUnknown_08106B54
	mov r0, r8
	movs r2, #2
	movs r3, #1
	bl sub_80A5BD8
_080A6FCC:
	mov r1, sb
	ldr r0, [r1]
	adds r0, r0, r4
	bl sub_800BF1C
	cmp r0, #0
	beq _080A6FE6
	ldr r1, _080A7024 @ =gUnknown_08106AC4
	mov r0, r8
	movs r2, #0xb
	movs r3, #3
	bl sub_80A5BD8
_080A6FE6:
	mov r2, sb
	ldr r0, [r2]
	adds r0, r0, r4
	bl sub_800BF34
	cmp r0, #0
	beq _080A7000
	ldr r1, _080A7028 @ =gUnknown_08106AF4
	mov r0, r8
	movs r2, #0xf
	movs r3, #2
	bl sub_80A5BD8
_080A7000:
	mov r3, sb
	ldr r0, [r3]
	adds r0, r0, r4
	bl sub_800BF50
	cmp r0, #0
	beq _080A7044
	bl sub_800BB74
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A7030
	ldr r1, _080A702C @ =gUnknown_08106B24
	b _080A7032
	.align 2, 0
_080A701C: .4byte gUnknown_08106A94
_080A7020: .4byte gUnknown_08106B54
_080A7024: .4byte gUnknown_08106AC4
_080A7028: .4byte gUnknown_08106AF4
_080A702C: .4byte gUnknown_08106B24
_080A7030:
	ldr r1, _080A7040 @ =gUnknown_08106B3C
_080A7032:
	mov r0, r8
	movs r2, #0x10
	movs r3, #0x11
	bl sub_80A5BD8
	b _080A7050
	.align 2, 0
_080A7040: .4byte gUnknown_08106B3C
_080A7044:
	ldr r1, _080A70C8 @ =gUnknown_08106B0C
	mov r0, r8
	movs r2, #0x10
	movs r3, #0x11
	bl sub_80A5BD8
_080A7050:
	mov r1, sb
	ldr r0, [r1]
	movs r4, #0xfa
	lsls r4, r4, #1
	adds r0, r0, r4
	bl sub_800BF94
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A7070
	ldr r1, _080A70CC @ =gUnknown_08106B9C
	mov r0, r8
	movs r2, #0x17
	movs r3, #0xa
	bl sub_80A5BD8
_080A7070:
	mov r2, sb
	ldr r0, [r2]
	adds r0, r0, r4
	bl sub_800BF9C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A708C
	ldr r1, _080A70D0 @ =gUnknown_08106BB4
	mov r0, r8
	movs r2, #0x22
	movs r3, #6
	bl sub_80A5BD8
_080A708C:
	mov r3, sb
	ldr r0, [r3]
	adds r0, r0, r4
	bl sub_800BFAC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A70A8
	ldr r1, _080A70D4 @ =gUnknown_08106BCC
	mov r0, r8
	movs r2, #0x17
	movs r3, #2
	bl sub_80A5BD8
_080A70A8:
	mov r1, sb
	ldr r0, [r1]
	adds r0, r0, r4
	bl sub_800BFB4
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080A70BA
	b _080A746E
_080A70BA:
	ldr r1, _080A70D8 @ =gUnknown_08106BE4
	mov r0, r8
	movs r2, #0x14
_080A70C0:
	movs r3, #3
	bl sub_80A5BD8
	b _080A746E
	.align 2, 0
_080A70C8: .4byte gUnknown_08106B0C
_080A70CC: .4byte gUnknown_08106B9C
_080A70D0: .4byte gUnknown_08106BB4
_080A70D4: .4byte gUnknown_08106BCC
_080A70D8: .4byte gUnknown_08106BE4
_080A70DC:
	ldr r1, _080A7158 @ =gUnknown_08106A94
	mov r0, r8
	movs r2, #0x36
	movs r3, #0xf
	bl sub_80A5BD8
	mov r2, sb
	ldr r0, [r2]
	movs r4, #0xfa
	lsls r4, r4, #1
	adds r0, r0, r4
	bl sub_800BFCC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A7108
	ldr r1, _080A715C @ =gUnknown_08106B54
	mov r0, r8
	movs r2, #0xa
	movs r3, #1
	bl sub_80A5BD8
_080A7108:
	mov r3, sb
	ldr r0, [r3]
	adds r0, r0, r4
	bl sub_800BF1C
	cmp r0, #0
	beq _080A7122
	ldr r1, _080A7160 @ =gUnknown_08106AC4
	mov r0, r8
	movs r2, #0x13
	movs r3, #3
	bl sub_80A5BD8
_080A7122:
	mov r1, sb
	ldr r0, [r1]
	adds r0, r0, r4
	bl sub_800BF34
	cmp r0, #0
	beq _080A713C
	ldr r1, _080A7164 @ =gUnknown_08106AF4
	mov r0, r8
	movs r2, #0x17
	movs r3, #2
	bl sub_80A5BD8
_080A713C:
	mov r2, sb
	ldr r0, [r2]
	adds r0, r0, r4
	bl sub_800BF50
	cmp r0, #0
	beq _080A7180
	bl sub_800BB74
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A716C
	ldr r1, _080A7168 @ =gUnknown_08106B24
	b _080A716E
	.align 2, 0
_080A7158: .4byte gUnknown_08106A94
_080A715C: .4byte gUnknown_08106B54
_080A7160: .4byte gUnknown_08106AC4
_080A7164: .4byte gUnknown_08106AF4
_080A7168: .4byte gUnknown_08106B24
_080A716C:
	ldr r1, _080A717C @ =gUnknown_08106B3C
_080A716E:
	mov r0, r8
	movs r2, #0x18
	movs r3, #0x11
	bl sub_80A5BD8
	b _080A718C
	.align 2, 0
_080A717C: .4byte gUnknown_08106B3C
_080A7180:
	ldr r1, _080A7244 @ =gUnknown_08106B0C
	mov r0, r8
	movs r2, #0x18
	movs r3, #0x11
	bl sub_80A5BD8
_080A718C:
	ldr r1, _080A7248 @ =gUnknown_08106B6C
	mov r0, r8
	movs r2, #4
	movs r3, #1
	bl sub_80A5BD8
	mov r3, sb
	ldr r0, [r3]
	movs r4, #0xfa
	lsls r4, r4, #1
	adds r0, r0, r4
	bl sub_800BF8C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A71B8
	ldr r1, _080A724C @ =gUnknown_08106B84
	mov r0, r8
	movs r2, #0x34
	movs r3, #5
	bl sub_80A5BD8
_080A71B8:
	mov r1, sb
	ldr r0, [r1]
	adds r0, r0, r4
	bl sub_800BF94
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A71D4
	ldr r1, _080A7250 @ =gUnknown_08106B9C
	mov r0, r8
	movs r2, #0x1f
	movs r3, #0xa
	bl sub_80A5BD8
_080A71D4:
	mov r2, sb
	ldr r0, [r2]
	adds r0, r0, r4
	bl sub_800BF9C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A71F0
	ldr r1, _080A7254 @ =gUnknown_08106BB4
	mov r0, r8
	movs r2, #0x2a
	movs r3, #6
	bl sub_80A5BD8
_080A71F0:
	mov r3, sb
	ldr r0, [r3]
	adds r0, r0, r4
	bl sub_800BFAC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A720C
	ldr r1, _080A7258 @ =gUnknown_08106BCC
	mov r0, r8
	movs r2, #0x1f
	movs r3, #2
	bl sub_80A5BD8
_080A720C:
	mov r1, sb
	ldr r0, [r1]
	adds r0, r0, r4
	bl sub_800BFB4
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A7228
	ldr r1, _080A725C @ =gUnknown_08106BE4
	mov r0, r8
	movs r2, #0x1c
	movs r3, #3
	bl sub_80A5BD8
_080A7228:
	mov r2, sb
	ldr r0, [r2]
	adds r0, r0, r4
	bl sub_800BF84
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080A723A
	b _080A746E
_080A723A:
	mov r0, r8
	movs r1, #0xc
	bl sub_80AA850
	b _080A746E
	.align 2, 0
_080A7244: .4byte gUnknown_08106B0C
_080A7248: .4byte gUnknown_08106B6C
_080A724C: .4byte gUnknown_08106B84
_080A7250: .4byte gUnknown_08106B9C
_080A7254: .4byte gUnknown_08106BB4
_080A7258: .4byte gUnknown_08106BCC
_080A725C: .4byte gUnknown_08106BE4
_080A7260:
	mov r3, sb
	ldr r0, [r3]
	movs r1, #0x82
	lsls r1, r1, #3
	adds r5, r0, r1
	movs r4, #0
	b _080A7286
_080A726E:
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_800C598
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A7284
	mov r0, r8
	adds r1, r4, #0
	bl sub_80A6024
_080A7284:
	adds r4, #1
_080A7286:
	adds r0, r5, #0
	bl sub_800C570
	cmp r4, r0
	blo _080A726E
	mov r2, sb
	ldr r0, [r2]
	movs r3, #0x82
	lsls r3, r3, #3
	adds r0, r0, r3
	movs r1, #0
	bl sub_800C678
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080A72A8
	b _080A746E
_080A72A8:
	mov r0, r8
	movs r1, #0
	bl sub_80A63B8
	b _080A746E
_080A72B2:
	mov r1, sb
	ldr r0, [r1]
	movs r2, #0x82
	lsls r2, r2, #3
	adds r5, r0, r2
	movs r4, #0
	b _080A72D8
_080A72C0:
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_800C598
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A72D6
	mov r0, r8
	adds r1, r4, #0
	bl sub_80A6024
_080A72D6:
	adds r4, #1
_080A72D8:
	adds r0, r5, #0
	bl sub_800C570
	cmp r4, r0
	blo _080A72C0
	adds r0, r5, #0
	bl sub_800C5C4
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A72FA
	ldr r1, _080A7338 @ =gUnknown_08106C2C
	mov r0, r8
	movs r2, #2
	movs r3, #5
	bl sub_80A5BD8
_080A72FA:
	mov r3, sb
	ldr r0, [r3]
	movs r4, #0x82
	lsls r4, r4, #3
	adds r0, r0, r4
	movs r1, #0
	bl sub_800C678
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A7318
	mov r0, r8
	movs r1, #0
	bl sub_80A63B8
_080A7318:
	mov r1, sb
	ldr r0, [r1]
	adds r0, r0, r4
	movs r1, #1
	bl sub_800C678
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080A732C
	b _080A746E
_080A732C:
	mov r0, r8
	movs r1, #1
	bl sub_80A63B8
	b _080A746E
	.align 2, 0
_080A7338: .4byte gUnknown_08106C2C
_080A733C:
	mov r2, sb
	ldr r0, [r2]
	movs r3, #0xbe
	lsls r3, r3, #3
	adds r5, r0, r3
	movs r4, #0
	b _080A7362
_080A734A:
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_800CEA8
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A7360
	mov r0, r8
	adds r1, r4, #0
	bl sub_80A607C
_080A7360:
	adds r4, #1
_080A7362:
	adds r0, r5, #0
	bl sub_800CE74
	cmp r4, r0
	blo _080A734A
	movs r4, #0
	b _080A738A
_080A7370:
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_800CED4
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A7388
	adds r1, r4, #0
	adds r1, #0x10
	mov r0, r8
	bl sub_80A607C
_080A7388:
	adds r4, #1
_080A738A:
	adds r0, r5, #0
	bl sub_800CE9C
	cmp r4, r0
	blo _080A7370
	b _080A746E
_080A7396:
	mov r1, sb
	ldr r0, [r1]
	movs r2, #0xbe
	lsls r2, r2, #3
	adds r5, r0, r2
	movs r4, #0
	b _080A73BC
_080A73A4:
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_800CEA8
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A73BA
	mov r0, r8
	adds r1, r4, #0
	bl sub_80A607C
_080A73BA:
	adds r4, #1
_080A73BC:
	adds r0, r5, #0
	bl sub_800CE74
	cmp r4, r0
	blo _080A73A4
	movs r4, #0
	b _080A73E4
_080A73CA:
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_800CED4
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A73E2
	adds r1, r4, #0
	adds r1, #0x10
	mov r0, r8
	bl sub_80A607C
_080A73E2:
	adds r4, #1
_080A73E4:
	adds r0, r5, #0
	bl sub_800CE9C
	cmp r4, r0
	blo _080A73CA
	adds r0, r5, #0
	bl sub_800CF00
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A7406
	ldr r1, _080A7420 @ =gUnknown_08106C5C
	mov r0, r8
	movs r2, #0xc
	movs r3, #5
	bl sub_80A5BD8
_080A7406:
	adds r0, r5, #0
	bl sub_800CF08
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A746E
	ldr r1, _080A7424 @ =gUnknown_08106C44
	mov r0, r8
	movs r2, #8
	movs r3, #5
	bl sub_80A5BD8
	b _080A746E
	.align 2, 0
_080A7420: .4byte gUnknown_08106C5C
_080A7424: .4byte gUnknown_08106C44
_080A7428:
	mov r3, sb
	ldr r0, [r3]
	bl sub_8010E48
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A746E
	ldr r1, _080A7444 @ =gUnknown_08106D4C
	mov r0, r8
	movs r2, #0x24
	movs r3, #2
	bl sub_80A5BD8
	b _080A746E
	.align 2, 0
_080A7444: .4byte gUnknown_08106D4C
_080A7448:
	ldr r1, _080A7484 @ =gUnknown_08106CA4
	mov r0, r8
	movs r2, #0x20
	movs r3, #0x20
	bl sub_80A5BD8
	mov r1, sb
	ldr r0, [r1]
	bl sub_8010E48
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A746E
	ldr r1, _080A7488 @ =gUnknown_08106D64
	mov r0, r8
	movs r2, #0x24
	movs r3, #2
	bl sub_80A5BD8
_080A746E:
	mov r0, r8
	bl sub_80AACB8
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A7484: .4byte gUnknown_08106CA4
_080A7488: .4byte gUnknown_08106D64

	thumb_func_start sub_80A748C
sub_80A748C: @ 0x080A748C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c4
	str r0, [sp, #0x190]
	adds r7, r1, #0
	bl sub_80A5EA0
	ldr r0, [sp, #0x190]
	adds r0, #0x94
	ldr r0, [r0]
	ldr r1, _080A74CC @ =0x0000214C
	adds r1, r0, r1
	str r1, [sp, #0x194]
	adds r0, #0x10
	bl sub_800E324
	adds r6, r0, #0
	ldr r1, _080A74D0 @ =gUnknown_086678A0
	mov r0, sp
	bl sub_805E6CC
	ldr r2, [sp, #0x190]
	ldr r0, [r2]
	cmp r0, #0x2e
	bgt _080A74D4
	cmp r0, #0x2d
	bge _080A74DA
	b _080A74E0
	.align 2, 0
_080A74CC: .4byte 0x0000214C
_080A74D0: .4byte gUnknown_086678A0
_080A74D4:
	cmp r0, #0x2f
	beq _080A74DE
	b _080A74E0
_080A74DA:
	movs r6, #1
	b _080A74E0
_080A74DE:
	movs r6, #3
_080A74E0:
	ldr r3, [sp, #0x190]
	ldr r0, [r3, #4]
	adds r3, #0x9c
	str r3, [sp, #0x1b4]
	cmp r0, #0x33
	bls _080A74F0
	bl _080A9224
_080A74F0:
	lsls r0, r0, #2
	ldr r1, _080A74FC @ =_080A7500
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A74FC: .4byte _080A7500
_080A7500: @ jump table
	.4byte _080A8094 @ case 0
	.4byte _080A863C @ case 1
	.4byte _080A9224 @ case 2
	.4byte _080A9224 @ case 3
	.4byte _080A8E26 @ case 4
	.4byte _080A9224 @ case 5
	.4byte _080A8D04 @ case 6
	.4byte _080A9224 @ case 7
	.4byte _080A9224 @ case 8
	.4byte _080A9224 @ case 9
	.4byte _080A9224 @ case 10
	.4byte _080A9224 @ case 11
	.4byte _080A9224 @ case 12
	.4byte _080A9224 @ case 13
	.4byte _080A9224 @ case 14
	.4byte _080A9224 @ case 15
	.4byte _080A9224 @ case 16
	.4byte _080A9224 @ case 17
	.4byte _080A9224 @ case 18
	.4byte _080A9224 @ case 19
	.4byte _080A9224 @ case 20
	.4byte _080A9224 @ case 21
	.4byte _080A9224 @ case 22
	.4byte _080A9224 @ case 23
	.4byte _080A9224 @ case 24
	.4byte _080A9224 @ case 25
	.4byte _080A9224 @ case 26
	.4byte _080A9224 @ case 27
	.4byte _080A9224 @ case 28
	.4byte _080A9224 @ case 29
	.4byte _080A9224 @ case 30
	.4byte _080A9224 @ case 31
	.4byte _080A9224 @ case 32
	.4byte _080A9224 @ case 33
	.4byte _080A9224 @ case 34
	.4byte _080A9224 @ case 35
	.4byte _080A9212 @ case 36
	.4byte _080A9212 @ case 37
	.4byte _080A9212 @ case 38
	.4byte _080A9212 @ case 39
	.4byte _080A9224 @ case 40
	.4byte _080A9224 @ case 41
	.4byte _080A75D0 @ case 42
	.4byte _080A75D0 @ case 43
	.4byte _080A9224 @ case 44
	.4byte _080A9224 @ case 45
	.4byte _080A9224 @ case 46
	.4byte _080A9224 @ case 47
	.4byte _080A9224 @ case 48
	.4byte _080A9224 @ case 49
	.4byte _080A9224 @ case 50
	.4byte _080A88F0 @ case 51
_080A75D0:
	add r5, sp, #0x30
	movs r0, #0
	str r0, [sp, #0x30]
	strh r0, [r5, #4]
	add r4, sp, #0x38
	str r0, [sp, #0x38]
	strh r0, [r4, #4]
	add r1, sp, #0x40
	str r0, [sp, #0x40]
	strh r0, [r1, #4]
	add r1, sp, #0x48
	str r0, [sp, #0x48]
	strh r0, [r1, #4]
	ldr r0, [sp, #0x190]
	adds r0, #0x94
	ldr r0, [r0]
	movs r6, #0xfa
	lsls r6, r6, #1
	adds r6, r0, r6
	str r6, [sp, #0x198]
	adds r0, r6, #0
	bl sub_800BFF4
	lsls r0, r0, #0x18
	ldr r1, [sp, #0x190]
	adds r1, #0x9c
	str r1, [sp, #0x1b4]
	cmp r0, #0
	bne _080A760C
	b _080A7752
_080A760C:
	ldr r4, [sp]
	add r0, sp, #0x70
	ldr r3, [r4, #0xc]
	mov r1, sp
	movs r2, #0xec
	lsls r2, r2, #1
	bl sub_80D3918
	ldr r0, [sp, #0x70]
	ldrh r2, [r0]
	add r0, sp, #0x50
	ldr r3, [r4, #0x10]
	mov r1, sp
	bl sub_80D3918
	add r4, sp, #0x50
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	add r1, sp, #0x30
	adds r0, r4, #0
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r5, r6}
	stm r1!, {r5, r6}
	ldr r0, [sp, #0x38]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080A7654
	mov r0, sp
	ldrh r3, [r0, #0x3c]
_080A7654:
	adds r0, r4, #0
	ldr r2, _080A7680 @ =0x060045A0
	bl sub_8008F0C
	mov sb, r4
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080A7684
	cmp r1, #0
	beq _080A7676
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080A7676:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _080A7752
	.align 2, 0
_080A7680: .4byte 0x060045A0
_080A7684:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x7c]
	ldr r1, [r7]
	mov r5, sl
	subs r0, r5, r1
	asrs r4, r0, #4
	str r4, [sp, #0x78]
	add r5, sp, #0x7c
	add r0, sp, #0x78
	adds r3, r1, #0
	cmp r4, #1
	bhs _080A76A0
	adds r0, r5, #0
_080A76A0:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080A76C0
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080A76BC
	mov r0, r8
	bl sub_80D3BC0
_080A76BC:
	ldr r3, [r7]
	b _080A76C4
_080A76C0:
	movs r0, #0
	mov r8, r0
_080A76C4:
	adds r5, r0, #0
	str r5, [sp, #0x1bc]
	adds r2, r3, #0
	adds r3, r5, #0
	ldr r6, [sp, #0x190]
	adds r6, #0x9c
	str r6, [sp, #0x1b4]
	cmp r2, sl
	beq _080A76EE
_080A76D6:
	cmp r3, #0
	beq _080A76E6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A76E6:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080A76D6
_080A76EE:
	adds r5, r3, #0
	ldr r0, [sp, #0x7c]
	cmp r0, #1
	bne _080A770A
	cmp r5, #0
	beq _080A7706
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080A7706:
	adds r5, #0x10
	b _080A772C
_080A770A:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080A772A
_080A7712:
	cmp r2, #0
	beq _080A7722
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A7722:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080A7712
_080A772A:
	adds r5, r2, #0
_080A772C:
	ldr r1, [r7, #4]
	ldr r3, [r7]
	adds r0, r3, #0
	cmp r3, r1
	beq _080A773C
_080A7736:
	adds r0, #0x10
	cmp r0, r1
	bne _080A7736
_080A773C:
	cmp r3, #0
	beq _080A7746
	adds r0, r3, #0
	bl sub_80D0260
_080A7746:
	ldr r0, [sp, #0x1bc]
	add r0, r8
	ldr r6, [sp, #0x1bc]
	str r6, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_080A7752:
	ldr r0, [sp, #0x198]
	bl sub_800BFD4
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080A7760
	b _080A78AC
_080A7760:
	ldr r5, [sp]
	add r4, sp, #0x80
	adds r0, r4, #0
	ldr r3, [r5, #0xc]
	mov r1, sp
	ldr r2, _080A77D4 @ =0x00000109
	bl sub_80D3918
	ldr r0, [r4]
	ldrh r2, [r0]
	add r0, sp, #0x50
	ldr r3, [r5, #0x10]
	mov r1, sp
	bl sub_80D3918
	add r4, sp, #0x50
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	add r1, sp, #0x30
	adds r0, r4, #0
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r5, r6}
	stm r1!, {r5, r6}
	ldr r0, [sp, #0x38]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080A77A8
	mov r0, sp
	ldrh r3, [r0, #0x3c]
_080A77A8:
	adds r0, r4, #0
	ldr r2, _080A77D8 @ =0x06004620
	bl sub_8008F0C
	mov sb, r4
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080A77DC
	cmp r1, #0
	beq _080A77CA
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080A77CA:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _080A78AC
	.align 2, 0
_080A77D4: .4byte 0x00000109
_080A77D8: .4byte 0x06004620
_080A77DC:
	str r1, [sp, #0x1c0]
	movs r0, #1
	add r1, sp, #0x8c
	str r0, [r1]
	ldr r3, [r7]
	ldr r5, [sp, #0x1c0]
	subs r0, r5, r3
	asrs r4, r0, #4
	add r0, sp, #0x88
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _080A77FA
	mov r0, sl
_080A77FA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080A781A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080A7816
	mov r0, r8
	bl sub_80D3BC0
_080A7816:
	ldr r3, [r7]
	b _080A781E
_080A781A:
	movs r0, #0
	mov r8, r0
_080A781E:
	adds r5, r0, #0
	str r5, [sp, #0x1bc]
	adds r2, r3, #0
	adds r3, r5, #0
	ldr r6, [sp, #0x1c0]
	cmp r2, r6
	beq _080A7846
_080A782C:
	cmp r3, #0
	beq _080A783C
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A783C:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x1c0]
	cmp r2, r0
	bne _080A782C
_080A7846:
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _080A7864
	cmp r5, #0
	beq _080A7860
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r6}
	stm r0!, {r3, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A7860:
	adds r5, #0x10
	b _080A7886
_080A7864:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080A7884
_080A786C:
	cmp r2, #0
	beq _080A787C
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A787C:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080A786C
_080A7884:
	adds r5, r2, #0
_080A7886:
	ldr r1, [r7, #4]
	ldr r3, [r7]
	adds r0, r3, #0
	cmp r3, r1
	beq _080A7896
_080A7890:
	adds r0, #0x10
	cmp r0, r1
	bne _080A7890
_080A7896:
	cmp r3, #0
	beq _080A78A0
	adds r0, r3, #0
	bl sub_80D0260
_080A78A0:
	ldr r0, [sp, #0x1bc]
	add r0, r8
	ldr r1, [sp, #0x1bc]
	str r1, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_080A78AC:
	ldr r0, [sp, #0x198]
	bl sub_800BFE4
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080A78BA
	b _080A7A04
_080A78BA:
	ldr r5, [sp]
	add r4, sp, #0x90
	adds r0, r4, #0
	ldr r3, [r5, #0xc]
	mov r1, sp
	movs r2, #0xad
	lsls r2, r2, #1
	bl sub_80D3918
	ldr r0, [r4]
	ldrh r2, [r0]
	add r0, sp, #0x50
	ldr r3, [r5, #0x10]
	mov r1, sp
	bl sub_80D3918
	add r4, sp, #0x50
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	add r1, sp, #0x30
	adds r0, r4, #0
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r5, r6}
	stm r1!, {r5, r6}
	ldr r0, [sp, #0x38]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080A7904
	mov r0, sp
	ldrh r3, [r0, #0x3c]
_080A7904:
	adds r0, r4, #0
	ldr r2, _080A7930 @ =0x060046A0
	bl sub_8008F0C
	mov sb, r4
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080A7934
	cmp r1, #0
	beq _080A7926
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080A7926:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _080A7A04
	.align 2, 0
_080A7930: .4byte 0x060046A0
_080A7934:
	str r1, [sp, #0x1c0]
	movs r0, #1
	add r1, sp, #0x9c
	str r0, [r1]
	ldr r3, [r7]
	ldr r5, [sp, #0x1c0]
	subs r0, r5, r3
	asrs r4, r0, #4
	add r0, sp, #0x98
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _080A7952
	mov r0, sl
_080A7952:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080A7972
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080A796E
	mov r0, r8
	bl sub_80D3BC0
_080A796E:
	ldr r3, [r7]
	b _080A7976
_080A7972:
	movs r0, #0
	mov r8, r0
_080A7976:
	adds r5, r0, #0
	str r5, [sp, #0x1bc]
	adds r2, r3, #0
	adds r3, r5, #0
	ldr r6, [sp, #0x1c0]
	cmp r2, r6
	beq _080A799E
_080A7984:
	cmp r3, #0
	beq _080A7994
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A7994:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x1c0]
	cmp r2, r0
	bne _080A7984
_080A799E:
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _080A79BC
	cmp r5, #0
	beq _080A79B8
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r6}
	stm r0!, {r3, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A79B8:
	adds r5, #0x10
	b _080A79DE
_080A79BC:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080A79DC
_080A79C4:
	cmp r2, #0
	beq _080A79D4
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A79D4:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080A79C4
_080A79DC:
	adds r5, r2, #0
_080A79DE:
	ldr r1, [r7, #4]
	ldr r3, [r7]
	adds r0, r3, #0
	cmp r3, r1
	beq _080A79EE
_080A79E8:
	adds r0, #0x10
	cmp r0, r1
	bne _080A79E8
_080A79EE:
	cmp r3, #0
	beq _080A79F8
	adds r0, r3, #0
	bl sub_80D0260
_080A79F8:
	ldr r0, [sp, #0x1bc]
	add r0, r8
	ldr r1, [sp, #0x1bc]
	str r1, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_080A7A04:
	ldr r0, [sp, #0x198]
	bl sub_800BFDC
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080A7A12
	b _080A7B58
_080A7A12:
	ldr r5, [sp]
	add r4, sp, #0xa0
	adds r0, r4, #0
	ldr r3, [r5, #0xc]
	mov r1, sp
	movs r2, #0xcc
	bl sub_80D3918
	ldr r0, [r4]
	ldrh r2, [r0]
	add r0, sp, #0x50
	ldr r3, [r5, #0x10]
	mov r1, sp
	bl sub_80D3918
	add r4, sp, #0x50
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	add r1, sp, #0x30
	adds r0, r4, #0
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r5, r6}
	stm r1!, {r5, r6}
	ldr r0, [sp, #0x38]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080A7A5A
	mov r0, sp
	ldrh r3, [r0, #0x3c]
_080A7A5A:
	adds r0, r4, #0
	ldr r2, _080A7A84 @ =0x06004720
	bl sub_8008F0C
	mov sb, r4
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080A7A88
	cmp r1, #0
	beq _080A7A7C
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080A7A7C:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _080A7B58
	.align 2, 0
_080A7A84: .4byte 0x06004720
_080A7A88:
	str r1, [sp, #0x1c0]
	movs r0, #1
	add r1, sp, #0xac
	str r0, [r1]
	ldr r3, [r7]
	ldr r5, [sp, #0x1c0]
	subs r0, r5, r3
	asrs r4, r0, #4
	add r0, sp, #0xa8
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _080A7AA6
	mov r0, sl
_080A7AA6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080A7AC6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080A7AC2
	mov r0, r8
	bl sub_80D3BC0
_080A7AC2:
	ldr r3, [r7]
	b _080A7ACA
_080A7AC6:
	movs r0, #0
	mov r8, r0
_080A7ACA:
	adds r5, r0, #0
	str r5, [sp, #0x1bc]
	adds r2, r3, #0
	adds r3, r5, #0
	ldr r6, [sp, #0x1c0]
	cmp r2, r6
	beq _080A7AF2
_080A7AD8:
	cmp r3, #0
	beq _080A7AE8
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A7AE8:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x1c0]
	cmp r2, r0
	bne _080A7AD8
_080A7AF2:
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _080A7B10
	cmp r5, #0
	beq _080A7B0C
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r6}
	stm r0!, {r3, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A7B0C:
	adds r5, #0x10
	b _080A7B32
_080A7B10:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080A7B30
_080A7B18:
	cmp r2, #0
	beq _080A7B28
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A7B28:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080A7B18
_080A7B30:
	adds r5, r2, #0
_080A7B32:
	ldr r1, [r7, #4]
	ldr r3, [r7]
	adds r0, r3, #0
	cmp r3, r1
	beq _080A7B42
_080A7B3C:
	adds r0, #0x10
	cmp r0, r1
	bne _080A7B3C
_080A7B42:
	cmp r3, #0
	beq _080A7B4C
	adds r0, r3, #0
	bl sub_80D0260
_080A7B4C:
	ldr r0, [sp, #0x1bc]
	add r0, r8
	ldr r1, [sp, #0x1bc]
	str r1, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_080A7B58:
	ldr r0, [sp, #0x198]
	bl sub_800C004
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080A7B66
	b _080A7CB0
_080A7B66:
	ldr r5, [sp]
	add r4, sp, #0xb0
	adds r0, r4, #0
	ldr r3, [r5, #0xc]
	mov r1, sp
	ldr r2, _080A7BD8 @ =0x00000147
	bl sub_80D3918
	ldr r0, [r4]
	ldrh r2, [r0]
	add r0, sp, #0x50
	ldr r3, [r5, #0x10]
	mov r1, sp
	bl sub_80D3918
	add r4, sp, #0x50
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	add r1, sp, #0x30
	adds r0, r4, #0
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r5, r6}
	stm r1!, {r5, r6}
	ldr r0, [sp, #0x38]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080A7BAE
	mov r0, sp
	ldrh r3, [r0, #0x3c]
_080A7BAE:
	adds r0, r4, #0
	ldr r2, _080A7BDC @ =0x060047A0
	bl sub_8008F0C
	mov sb, r4
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080A7BE0
	cmp r1, #0
	beq _080A7BD0
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080A7BD0:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _080A7CB0
	.align 2, 0
_080A7BD8: .4byte 0x00000147
_080A7BDC: .4byte 0x060047A0
_080A7BE0:
	str r1, [sp, #0x1c0]
	movs r0, #1
	add r1, sp, #0xbc
	str r0, [r1]
	ldr r3, [r7]
	ldr r5, [sp, #0x1c0]
	subs r0, r5, r3
	asrs r4, r0, #4
	add r0, sp, #0xb8
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _080A7BFE
	mov r0, sl
_080A7BFE:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080A7C1E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080A7C1A
	mov r0, r8
	bl sub_80D3BC0
_080A7C1A:
	ldr r3, [r7]
	b _080A7C22
_080A7C1E:
	movs r0, #0
	mov r8, r0
_080A7C22:
	adds r5, r0, #0
	str r5, [sp, #0x1bc]
	adds r2, r3, #0
	adds r3, r5, #0
	ldr r6, [sp, #0x1c0]
	cmp r2, r6
	beq _080A7C4A
_080A7C30:
	cmp r3, #0
	beq _080A7C40
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A7C40:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x1c0]
	cmp r2, r0
	bne _080A7C30
_080A7C4A:
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _080A7C68
	cmp r5, #0
	beq _080A7C64
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r6}
	stm r0!, {r3, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A7C64:
	adds r5, #0x10
	b _080A7C8A
_080A7C68:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080A7C88
_080A7C70:
	cmp r2, #0
	beq _080A7C80
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A7C80:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080A7C70
_080A7C88:
	adds r5, r2, #0
_080A7C8A:
	ldr r1, [r7, #4]
	ldr r3, [r7]
	adds r0, r3, #0
	cmp r3, r1
	beq _080A7C9A
_080A7C94:
	adds r0, #0x10
	cmp r0, r1
	bne _080A7C94
_080A7C9A:
	cmp r3, #0
	beq _080A7CA4
	adds r0, r3, #0
	bl sub_80D0260
_080A7CA4:
	ldr r0, [sp, #0x1bc]
	add r0, r8
	ldr r1, [sp, #0x1bc]
	str r1, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_080A7CB0:
	ldr r0, [sp, #0x198]
	bl sub_800BFFC
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080A7CBE
	b _080A7E08
_080A7CBE:
	ldr r5, [sp]
	add r4, sp, #0xc0
	adds r0, r4, #0
	ldr r3, [r5, #0xc]
	mov r1, sp
	ldr r2, _080A7D30 @ =0x00000139
	bl sub_80D3918
	ldr r0, [r4]
	ldrh r2, [r0]
	add r0, sp, #0x50
	ldr r3, [r5, #0x10]
	mov r1, sp
	bl sub_80D3918
	add r4, sp, #0x50
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	add r1, sp, #0x30
	adds r0, r4, #0
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r5, r6}
	stm r1!, {r5, r6}
	ldr r0, [sp, #0x38]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080A7D06
	mov r0, sp
	ldrh r3, [r0, #0x3c]
_080A7D06:
	adds r0, r4, #0
	ldr r2, _080A7D34 @ =0x06004820
	bl sub_8008F0C
	mov sb, r4
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080A7D38
	cmp r1, #0
	beq _080A7D28
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080A7D28:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _080A7E08
	.align 2, 0
_080A7D30: .4byte 0x00000139
_080A7D34: .4byte 0x06004820
_080A7D38:
	str r1, [sp, #0x1c0]
	movs r0, #1
	add r1, sp, #0xcc
	str r0, [r1]
	ldr r3, [r7]
	ldr r5, [sp, #0x1c0]
	subs r0, r5, r3
	asrs r4, r0, #4
	add r0, sp, #0xc8
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _080A7D56
	mov r0, sl
_080A7D56:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080A7D76
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080A7D72
	mov r0, r8
	bl sub_80D3BC0
_080A7D72:
	ldr r3, [r7]
	b _080A7D7A
_080A7D76:
	movs r0, #0
	mov r8, r0
_080A7D7A:
	adds r5, r0, #0
	str r5, [sp, #0x1bc]
	adds r2, r3, #0
	adds r3, r5, #0
	ldr r6, [sp, #0x1c0]
	cmp r2, r6
	beq _080A7DA2
_080A7D88:
	cmp r3, #0
	beq _080A7D98
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A7D98:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x1c0]
	cmp r2, r0
	bne _080A7D88
_080A7DA2:
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _080A7DC0
	cmp r5, #0
	beq _080A7DBC
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r6}
	stm r0!, {r3, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A7DBC:
	adds r5, #0x10
	b _080A7DE2
_080A7DC0:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080A7DE0
_080A7DC8:
	cmp r2, #0
	beq _080A7DD8
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A7DD8:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080A7DC8
_080A7DE0:
	adds r5, r2, #0
_080A7DE2:
	ldr r1, [r7, #4]
	ldr r3, [r7]
	adds r0, r3, #0
	cmp r3, r1
	beq _080A7DF2
_080A7DEC:
	adds r0, #0x10
	cmp r0, r1
	bne _080A7DEC
_080A7DF2:
	cmp r3, #0
	beq _080A7DFC
	adds r0, r3, #0
	bl sub_80D0260
_080A7DFC:
	ldr r0, [sp, #0x1bc]
	add r0, r8
	ldr r1, [sp, #0x1bc]
	str r1, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_080A7E08:
	ldr r0, [sp, #0x198]
	bl sub_800BFEC
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080A7E16
	b _080A7F5C
_080A7E16:
	ldr r5, [sp]
	add r4, sp, #0xd0
	adds r0, r4, #0
	ldr r3, [r5, #0xc]
	mov r1, sp
	movs r2, #0x40
	bl sub_80D3918
	ldr r0, [r4]
	ldrh r2, [r0]
	add r0, sp, #0x50
	ldr r3, [r5, #0x10]
	mov r1, sp
	bl sub_80D3918
	add r4, sp, #0x50
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	add r1, sp, #0x30
	adds r0, r4, #0
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r5, r6}
	stm r1!, {r5, r6}
	ldr r0, [sp, #0x38]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080A7E5E
	mov r0, sp
	ldrh r3, [r0, #0x3c]
_080A7E5E:
	adds r0, r4, #0
	ldr r2, _080A7E88 @ =0x060048A0
	bl sub_8008F0C
	mov sb, r4
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080A7E8C
	cmp r1, #0
	beq _080A7E80
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080A7E80:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _080A7F5C
	.align 2, 0
_080A7E88: .4byte 0x060048A0
_080A7E8C:
	str r1, [sp, #0x1c0]
	movs r0, #1
	add r1, sp, #0xdc
	str r0, [r1]
	ldr r3, [r7]
	ldr r5, [sp, #0x1c0]
	subs r0, r5, r3
	asrs r4, r0, #4
	add r0, sp, #0xd8
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _080A7EAA
	mov r0, sl
_080A7EAA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080A7ECA
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080A7EC6
	mov r0, r8
	bl sub_80D3BC0
_080A7EC6:
	ldr r3, [r7]
	b _080A7ECE
_080A7ECA:
	movs r0, #0
	mov r8, r0
_080A7ECE:
	adds r5, r0, #0
	str r5, [sp, #0x1bc]
	adds r2, r3, #0
	adds r3, r5, #0
	ldr r6, [sp, #0x1c0]
	cmp r2, r6
	beq _080A7EF6
_080A7EDC:
	cmp r3, #0
	beq _080A7EEC
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A7EEC:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x1c0]
	cmp r2, r0
	bne _080A7EDC
_080A7EF6:
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _080A7F14
	cmp r5, #0
	beq _080A7F10
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r6}
	stm r0!, {r3, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A7F10:
	adds r5, #0x10
	b _080A7F36
_080A7F14:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080A7F34
_080A7F1C:
	cmp r2, #0
	beq _080A7F2C
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A7F2C:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080A7F1C
_080A7F34:
	adds r5, r2, #0
_080A7F36:
	ldr r1, [r7, #4]
	ldr r3, [r7]
	adds r0, r3, #0
	cmp r3, r1
	beq _080A7F46
_080A7F40:
	adds r0, #0x10
	cmp r0, r1
	bne _080A7F40
_080A7F46:
	cmp r3, #0
	beq _080A7F50
	adds r0, r3, #0
	bl sub_80D0260
_080A7F50:
	ldr r0, [sp, #0x1bc]
	add r0, r8
	ldr r1, [sp, #0x1bc]
	str r1, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_080A7F5C:
	ldr r0, [sp, #0x198]
	bl sub_800C00C
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080A7F6C
	bl _080A9224
_080A7F6C:
	ldr r5, [sp]
	add r4, sp, #0xe0
	adds r0, r4, #0
	ldr r3, [r5, #0xc]
	mov r1, sp
	movs r2, #0xc8
	lsls r2, r2, #1
	bl sub_80D3918
	ldr r0, [r4]
	ldrh r2, [r0]
	add r0, sp, #0x50
	ldr r3, [r5, #0x10]
	mov r1, sp
	bl sub_80D3918
	add r4, sp, #0x50
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	add r1, sp, #0x30
	adds r0, r4, #0
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r5, r6}
	stm r1!, {r5, r6}
	ldr r0, [sp, #0x38]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080A7FB6
	mov r0, sp
	ldrh r3, [r0, #0x3c]
_080A7FB6:
	adds r0, r4, #0
	ldr r2, _080A800C @ =0x06004920
	bl sub_8008F0C
	mov sb, r4
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080A7FCC
	bl sub_080A9122
_080A7FCC:
	str r1, [sp, #0x1c0]
	movs r0, #1
	add r1, sp, #0xec
	str r0, [r1]
	ldr r3, [r7]
	ldr r5, [sp, #0x1c0]
	subs r0, r5, r3
	asrs r4, r0, #4
	add r0, sp, #0xe8
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _080A7FEA
	mov r0, sl
_080A7FEA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080A8010
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080A8006
	mov r0, r8
	bl sub_80D3BC0
_080A8006:
	ldr r3, [r7]
	b _080A8014
	.align 2, 0
_080A800C: .4byte 0x06004920
_080A8010:
	movs r0, #0
	mov r8, r0
_080A8014:
	adds r5, r0, #0
	str r5, [sp, #0x1bc]
	adds r2, r3, #0
	adds r3, r5, #0
	ldr r6, [sp, #0x1c0]
	cmp r2, r6
	beq _080A803C
_080A8022:
	cmp r3, #0
	beq _080A8032
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A8032:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x1c0]
	cmp r2, r0
	bne _080A8022
_080A803C:
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _080A805A
	cmp r5, #0
	beq _080A8056
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r6}
	stm r0!, {r3, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A8056:
	adds r5, #0x10
	b _080A807C
_080A805A:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080A807A
_080A8062:
	cmp r2, #0
	beq _080A8072
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A8072:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080A8062
_080A807A:
	adds r5, r2, #0
_080A807C:
	ldr r1, [r7, #4]
	ldr r3, [r7]
	adds r0, r3, #0
	cmp r3, r1
	bne _080A808A
	bl _080A91FA
_080A808A:
	adds r0, #0x10
	cmp r0, r1
	bne _080A808A
	bl _080A91FA
_080A8094:
	ldr r1, _080A80D4 @ =gUnknown_086D5508
	add r0, sp, #0x30
	ldr r2, _080A80D8 @ =0x06005FC0
	movs r3, #0xe6
	lsls r3, r3, #4
	bl sub_8008F0C
	add r2, sp, #0x30
	mov sb, r2
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080A80DC
	cmp r1, #0
	beq _080A80BE
	adds r0, r1, #0
	add r1, sp, #0x30
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080A80BE:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	ldr r0, [sp, #0x190]
	adds r0, #0x94
	str r0, [sp, #0x1b0]
	ldr r1, [sp, #0x190]
	adds r1, #0x9c
	str r1, [sp, #0x1b4]
	b _080A81BA
	.align 2, 0
_080A80D4: .4byte gUnknown_086D5508
_080A80D8: .4byte 0x06005FC0
_080A80DC:
	mov r8, r1
	movs r0, #1
	add r1, sp, #0xf4
	str r0, [r1]
	ldr r3, [r7]
	mov r2, r8
	subs r0, r2, r3
	asrs r4, r0, #4
	add r0, sp, #0xf0
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080A80F8
	adds r0, r1, #0
_080A80F8:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080A8118
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sl, r4
	cmp r0, #0
	bne _080A8114
	mov r0, sl
	bl sub_80D3BC0
_080A8114:
	ldr r3, [r7]
	b _080A811C
_080A8118:
	movs r0, #0
	mov sl, r0
_080A811C:
	adds r5, r0, #0
	str r5, [sp, #0x1bc]
	adds r2, r3, #0
	mov ip, r5
	ldr r3, [sp, #0x190]
	adds r3, #0x94
	str r3, [sp, #0x1b0]
	ldr r4, [sp, #0x190]
	adds r4, #0x9c
	str r4, [sp, #0x1b4]
	cmp r2, r8
	beq _080A8150
_080A8134:
	mov r5, ip
	cmp r5, #0
	beq _080A8146
	mov r0, ip
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080A8146:
	adds r2, #0x10
	movs r0, #0x10
	add ip, r0
	cmp r2, r8
	bne _080A8134
_080A8150:
	mov r5, ip
	ldr r1, [sp, #0xf4]
	cmp r1, #1
	bne _080A816C
	cmp r5, #0
	beq _080A8168
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080A8168:
	adds r5, #0x10
	b _080A8194
_080A816C:
	mov r8, r1
	adds r2, r5, #0
	cmp r1, #0
	beq _080A8192
_080A8174:
	cmp r2, #0
	beq _080A8184
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080A8184:
	movs r5, #1
	rsbs r5, r5, #0
	add r8, r5
	adds r2, #0x10
	mov r0, r8
	cmp r0, #0
	bne _080A8174
_080A8192:
	adds r5, r2, #0
_080A8194:
	ldr r1, [r7, #4]
	ldr r3, [r7]
	adds r0, r3, #0
	cmp r3, r1
	beq _080A81A4
_080A819E:
	adds r0, #0x10
	cmp r0, r1
	bne _080A819E
_080A81A4:
	cmp r3, #0
	beq _080A81AE
	adds r0, r3, #0
	bl sub_80D0260
_080A81AE:
	ldr r0, [sp, #0x1bc]
	add r0, sl
	ldr r1, [sp, #0x1bc]
	str r1, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_080A81BA:
	cmp r6, #1
	bne _080A81C0
	b _080A82BE
_080A81C0:
	cmp r6, #1
	bgt _080A81CA
	cmp r6, #0
	beq _080A81D2
	b _080A84C8
_080A81CA:
	cmp r6, #2
	bne _080A81D0
	b _080A83BE
_080A81D0:
	b _080A84C8
_080A81D2:
	ldr r1, _080A81FC @ =gUnknown_08698E14
	add r0, sp, #0x30
	ldr r2, _080A8200 @ =0x06006E20
	movs r3, #0x8f
	lsls r3, r3, #5
	bl sub_8008F0C
	add r2, sp, #0x30
	mov sb, r2
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080A8204
	cmp r1, #0
	bne _080A81F2
	b _080A83E8
_080A81F2:
	adds r0, r1, #0
	add r1, sp, #0x30
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	b _080A83E4
	.align 2, 0
_080A81FC: .4byte gUnknown_08698E14
_080A8200: .4byte 0x06006E20
_080A8204:
	str r1, [sp, #0x1c0]
	movs r0, #1
	add r1, sp, #0xfc
	str r0, [r1]
	ldr r3, [r7]
	ldr r6, [sp, #0x1c0]
	subs r0, r6, r3
	asrs r4, r0, #4
	add r0, sp, #0xf8
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _080A8222
	mov r0, sl
_080A8222:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080A8242
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080A823E
	mov r0, r8
	bl sub_80D3BC0
_080A823E:
	ldr r3, [r7]
	b _080A8246
_080A8242:
	movs r0, #0
	mov r8, r0
_080A8246:
	adds r5, r0, #0
	str r5, [sp, #0x1bc]
	adds r2, r3, #0
	adds r3, r5, #0
	b _080A8264
_080A8250:
	cmp r3, #0
	beq _080A8260
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A8260:
	adds r2, #0x10
	adds r3, #0x10
_080A8264:
	ldr r0, [sp, #0x1c0]
	cmp r2, r0
	bne _080A8250
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _080A8288
	cmp r5, #0
	beq _080A8284
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r6}
	stm r0!, {r3, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A8284:
	adds r5, #0x10
	b _080A82AA
_080A8288:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080A82A8
_080A8290:
	cmp r2, #0
	beq _080A82A0
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A82A0:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080A8290
_080A82A8:
	adds r5, r2, #0
_080A82AA:
	ldr r1, [r7, #4]
	ldr r3, [r7]
	adds r0, r3, #0
	cmp r3, r1
	bne _080A82B6
	b _080A84B2
_080A82B6:
	adds r0, #0x10
	cmp r0, r1
	bne _080A82B6
	b _080A84B2
_080A82BE:
	ldr r1, _080A82E8 @ =gUnknown_0869A0A4
	add r0, sp, #0x30
	ldr r2, _080A82EC @ =0x06006E20
	movs r3, #0x8f
	lsls r3, r3, #5
	bl sub_8008F0C
	add r2, sp, #0x30
	mov sb, r2
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080A82F0
	cmp r1, #0
	bne _080A82DE
	b _080A83E8
_080A82DE:
	adds r0, r1, #0
	add r1, sp, #0x30
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	b _080A83E4
	.align 2, 0
_080A82E8: .4byte gUnknown_0869A0A4
_080A82EC: .4byte 0x06006E20
_080A82F0:
	mov r8, r1
	add r1, sp, #0x104
	str r6, [r1]
	ldr r2, [r7]
	mov r6, r8
	subs r0, r6, r2
	asrs r4, r0, #4
	add r0, sp, #0x100
	str r4, [r0]
	adds r5, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x100
	adds r3, r2, #0
	cmp r4, r0
	bhs _080A8310
	adds r1, r5, #0
_080A8310:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _080A8330
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	str r4, [sp, #0x1bc]
	cmp r0, #0
	bne _080A832C
	adds r0, r4, #0
	bl sub_80D3BC0
_080A832C:
	ldr r3, [r7]
	b _080A8336
_080A8330:
	movs r0, #0
	movs r1, #0
	str r1, [sp, #0x1bc]
_080A8336:
	adds r5, r0, #0
	mov sl, r5
	adds r2, r3, #0
	mov r3, sl
	cmp r2, r8
	beq _080A835A
_080A8342:
	cmp r3, #0
	beq _080A8352
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A8352:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _080A8342
_080A835A:
	adds r5, r3, #0
	add r0, sp, #0x104
	ldr r0, [r0]
	cmp r0, #1
	bne _080A8378
	cmp r5, #0
	beq _080A8374
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080A8374:
	adds r5, #0x10
	b _080A839A
_080A8378:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080A8398
_080A8380:
	cmp r2, #0
	beq _080A8390
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A8390:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080A8380
_080A8398:
	adds r5, r2, #0
_080A839A:
	ldr r1, [r7, #4]
	ldr r3, [r7]
	adds r0, r3, #0
	cmp r3, r1
	beq _080A83AA
_080A83A4:
	adds r0, #0x10
	cmp r0, r1
	bne _080A83A4
_080A83AA:
	cmp r3, #0
	beq _080A83B4
	adds r0, r3, #0
	bl sub_80D0260
_080A83B4:
	ldr r0, [sp, #0x1bc]
	add r0, sl
	mov r6, sl
	str r6, [r7]
	b _080A84C4
_080A83BE:
	ldr r1, _080A83F0 @ =gUnknown_08697920
	add r0, sp, #0x30
	ldr r2, _080A83F4 @ =0x06006E20
	movs r3, #0x8f
	lsls r3, r3, #5
	bl sub_8008F0C
	add r0, sp, #0x30
	mov sb, r0
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080A83F8
	cmp r1, #0
	beq _080A83E8
	adds r0, r1, #0
	add r1, sp, #0x30
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
_080A83E4:
	ldr r1, [r1]
	str r1, [r0]
_080A83E8:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _080A84C8
	.align 2, 0
_080A83F0: .4byte gUnknown_08697920
_080A83F4: .4byte 0x06006E20
_080A83F8:
	mov sl, r1
	movs r0, #1
	add r1, sp, #0x10c
	str r0, [r1]
	ldr r2, [r7]
	mov r5, sl
	subs r0, r5, r2
	asrs r4, r0, #4
	add r0, sp, #0x108
	str r4, [r0]
	adds r5, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x108
	adds r3, r2, #0
	cmp r4, r0
	bhs _080A841A
	adds r1, r5, #0
_080A841A:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _080A843A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080A8436
	mov r0, r8
	bl sub_80D3BC0
_080A8436:
	ldr r3, [r7]
	b _080A843E
_080A843A:
	movs r0, #0
	mov r8, r0
_080A843E:
	adds r5, r0, #0
	str r5, [sp, #0x1bc]
	adds r2, r3, #0
	adds r3, r5, #0
	cmp r2, sl
	beq _080A8462
_080A844A:
	cmp r3, #0
	beq _080A845A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A845A:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080A844A
_080A8462:
	adds r5, r3, #0
	add r0, sp, #0x10c
	ldr r0, [r0]
	cmp r0, #1
	bne _080A8480
	cmp r5, #0
	beq _080A847C
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A847C:
	adds r5, #0x10
	b _080A84A2
_080A8480:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080A84A0
_080A8488:
	cmp r2, #0
	beq _080A8498
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A8498:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080A8488
_080A84A0:
	adds r5, r2, #0
_080A84A2:
	ldr r1, [r7, #4]
	ldr r3, [r7]
	adds r0, r3, #0
	cmp r3, r1
	beq _080A84B2
_080A84AC:
	adds r0, #0x10
	cmp r0, r1
	bne _080A84AC
_080A84B2:
	cmp r3, #0
	beq _080A84BC
	adds r0, r3, #0
	bl sub_80D0260
_080A84BC:
	ldr r0, [sp, #0x1bc]
	add r0, r8
	ldr r1, [sp, #0x1bc]
	str r1, [r7]
_080A84C4:
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_080A84C8:
	ldr r1, _080A8624 @ =gUnknown_08107144
	ldr r0, [sp, #0x190]
	movs r2, #0
	adds r3, r7, #0
	bl sub_80A5AB0
	ldr r4, _080A8628 @ =gUnknown_081070DC
	ldr r2, [sp, #0x1b0]
	ldr r0, [r2]
	movs r5, #0xfa
	lsls r5, r5, #1
	adds r0, r0, r5
	bl sub_800BF74
	adds r2, r0, #0
	ldr r0, [sp, #0x190]
	adds r1, r4, #0
	adds r3, r7, #0
	bl sub_80A5AB0
	movs r3, #6
	mov sb, r3
	add r6, sp, #0x30
	ldr r4, [sp, #0x1b0]
	mov sl, r4
_080A84FA:
	movs r5, #0x22
	mov r8, r5
	mov r0, sb
	adds r0, #1
	str r0, [sp, #0x1a4]
_080A8504:
	adds r0, r6, #0
	ldr r1, _080A862C @ =gUnknown_0810742E
	movs r2, #3
	bl sub_80D3994
	ldr r1, [sp, #0x190]
	ldr r0, [r1, #4]
	bl sub_80A4698
	ldrh r0, [r0, #0x20]
	mov r4, sb
	muls r4, r0, r4
	add r4, r8
	lsls r4, r4, #1
	ldr r2, [sp, #0x190]
	ldr r0, [r2, #0x14]
	adds r5, r0, r4
	mov r3, sl
	ldr r0, [r3]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl sub_800BF74
	adds r0, r6, r0
	ldrb r1, [r0]
	lsls r1, r1, #4
	ldrb r2, [r5, #1]
	movs r0, #0xf
	ands r0, r2
	orrs r0, r1
	strb r0, [r5, #1]
	ldr r2, [sp, #0x190]
	ldr r0, [r2, #0x18]
	adds r5, r0, r4
	mov r3, sl
	ldr r0, [r3]
	movs r4, #0xfa
	lsls r4, r4, #1
	adds r0, r0, r4
	bl sub_800BF74
	adds r0, r6, r0
	ldrb r1, [r0]
	lsls r1, r1, #4
	ldrb r2, [r5, #1]
	movs r0, #0xf
	ands r0, r2
	orrs r0, r1
	strb r0, [r5, #1]
	movs r5, #1
	add r8, r5
	mov r0, r8
	cmp r0, #0x23
	bls _080A8504
	ldr r1, [sp, #0x1a4]
	mov sb, r1
	cmp r1, #8
	bls _080A84FA
	ldr r4, _080A8630 @ =gUnknown_081070EC
	ldr r2, [sp, #0x1b0]
	ldr r0, [r2]
	movs r5, #0xfa
	lsls r5, r5, #1
	adds r0, r0, r5
	bl sub_800BF7C
	adds r2, r0, #0
	ldr r0, [sp, #0x190]
	adds r1, r4, #0
	adds r3, r7, #0
	bl sub_80A5AB0
	movs r3, #7
	mov sb, r3
	add r6, sp, #0x30
	ldr r4, [sp, #0x1b0]
	mov sl, r4
_080A85A0:
	movs r5, #0x31
	mov r8, r5
	mov r0, sb
	adds r0, #1
	str r0, [sp, #0x1a8]
_080A85AA:
	adds r0, r6, #0
	ldr r1, _080A8634 @ =gUnknown_08107431
	movs r2, #3
	bl sub_80D3994
	ldr r1, [sp, #0x190]
	ldr r0, [r1, #4]
	bl sub_80A4698
	ldrh r0, [r0, #0x20]
	mov r4, sb
	muls r4, r0, r4
	add r4, r8
	lsls r4, r4, #1
	ldr r2, [sp, #0x190]
	ldr r0, [r2, #0x14]
	adds r5, r0, r4
	mov r3, sl
	ldr r0, [r3]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl sub_800BF7C
	adds r0, r6, r0
	ldrb r1, [r0]
	lsls r1, r1, #4
	ldrb r2, [r5, #1]
	movs r0, #0xf
	ands r0, r2
	orrs r0, r1
	strb r0, [r5, #1]
	ldr r2, [sp, #0x190]
	ldr r0, [r2, #0x18]
	adds r5, r0, r4
	mov r3, sl
	ldr r0, [r3]
	movs r4, #0xfa
	lsls r4, r4, #1
	adds r0, r0, r4
	bl sub_800BF7C
	adds r0, r6, r0
	ldrb r1, [r0]
	lsls r1, r1, #4
	ldrb r2, [r5, #1]
	movs r0, #0xf
	ands r0, r2
	orrs r0, r1
	strb r0, [r5, #1]
	movs r5, #1
	add r8, r5
	mov r0, r8
	cmp r0, #0x33
	bls _080A85AA
	ldr r1, [sp, #0x1a8]
	mov sb, r1
	cmp r1, #0xa
	bls _080A85A0
	ldr r4, _080A8638 @ =gUnknown_081070FC
	b _080A88BA
	.align 2, 0
_080A8624: .4byte gUnknown_08107144
_080A8628: .4byte gUnknown_081070DC
_080A862C: .4byte gUnknown_0810742E
_080A8630: .4byte gUnknown_081070EC
_080A8634: .4byte gUnknown_08107431
_080A8638: .4byte gUnknown_081070FC
_080A863C:
	ldr r1, _080A867C @ =gUnknown_086D6698
	add r0, sp, #0x30
	ldr r2, _080A8680 @ =0x06005FC0
	movs r3, #0xe6
	lsls r3, r3, #4
	bl sub_8008F0C
	add r4, sp, #0x30
	mov r8, r4
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080A8684
	cmp r1, #0
	beq _080A8666
	adds r0, r1, #0
	add r1, sp, #0x30
	ldm r1!, {r2, r5, r6}
	stm r0!, {r2, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A8666:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	ldr r3, [sp, #0x190]
	adds r3, #0x94
	str r3, [sp, #0x1b0]
	ldr r4, [sp, #0x190]
	adds r4, #0x9c
	str r4, [sp, #0x1b4]
	b _080A8760
	.align 2, 0
_080A867C: .4byte gUnknown_086D6698
_080A8680: .4byte 0x06005FC0
_080A8684:
	mov sl, r1
	movs r0, #1
	add r1, sp, #0x114
	str r0, [r1]
	ldr r2, [r7]
	mov r5, sl
	subs r0, r5, r2
	asrs r4, r0, #4
	add r0, sp, #0x110
	str r4, [r0]
	adds r5, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x110
	adds r3, r2, #0
	cmp r4, r0
	bhs _080A86A6
	adds r1, r5, #0
_080A86A6:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _080A86C6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080A86C2
	mov r0, sb
	bl sub_80D3BC0
_080A86C2:
	ldr r3, [r7]
	b _080A86CA
_080A86C6:
	movs r0, #0
	mov sb, r0
_080A86CA:
	adds r5, r0, #0
	str r5, [sp, #0x1bc]
	adds r2, r3, #0
	adds r3, r5, #0
	ldr r6, [sp, #0x190]
	adds r6, #0x94
	str r6, [sp, #0x1b0]
	ldr r0, [sp, #0x190]
	adds r0, #0x9c
	str r0, [sp, #0x1b4]
	cmp r2, sl
	beq _080A86FA
_080A86E2:
	cmp r3, #0
	beq _080A86F2
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A86F2:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080A86E2
_080A86FA:
	adds r5, r3, #0
	add r0, sp, #0x114
	ldr r0, [r0]
	cmp r0, #1
	bne _080A8718
	cmp r5, #0
	beq _080A8714
	adds r0, r5, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080A8714:
	adds r5, #0x10
	b _080A873A
_080A8718:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080A8738
_080A8720:
	cmp r2, #0
	beq _080A8730
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A8730:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080A8720
_080A8738:
	adds r5, r2, #0
_080A873A:
	ldr r1, [r7, #4]
	ldr r3, [r7]
	adds r0, r3, #0
	cmp r3, r1
	beq _080A874A
_080A8744:
	adds r0, #0x10
	cmp r0, r1
	bne _080A8744
_080A874A:
	cmp r3, #0
	beq _080A8754
	adds r0, r3, #0
	bl sub_80D0260
_080A8754:
	ldr r0, [sp, #0x1bc]
	add r0, sb
	ldr r6, [sp, #0x1bc]
	str r6, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_080A8760:
	ldr r1, _080A88D8 @ =gUnknown_0810714C
	ldr r0, [sp, #0x190]
	movs r2, #0
	adds r3, r7, #0
	bl sub_80A5AB0
	ldr r4, _080A88DC @ =gUnknown_081070E4
	ldr r1, [sp, #0x1b0]
	ldr r0, [r1]
	movs r5, #0xfa
	lsls r5, r5, #1
	adds r0, r0, r5
	bl sub_800BF74
	adds r2, r0, #0
	ldr r0, [sp, #0x190]
	adds r1, r4, #0
	adds r3, r7, #0
	bl sub_80A5AB0
	movs r2, #6
	mov sb, r2
	add r6, sp, #0x30
	ldr r3, [sp, #0x1b0]
	mov sl, r3
_080A8792:
	movs r4, #0x22
	mov r8, r4
	mov r5, sb
	adds r5, #1
	str r5, [sp, #0x1ac]
_080A879C:
	adds r0, r6, #0
	ldr r1, _080A88E0 @ =gUnknown_08107434
	movs r2, #3
	bl sub_80D3994
	ldr r1, [sp, #0x190]
	ldr r0, [r1, #4]
	bl sub_80A4698
	ldrh r0, [r0, #0x20]
	mov r4, sb
	muls r4, r0, r4
	add r4, r8
	lsls r4, r4, #1
	ldr r2, [sp, #0x190]
	ldr r0, [r2, #0x14]
	adds r5, r0, r4
	mov r3, sl
	ldr r0, [r3]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl sub_800BF74
	adds r0, r6, r0
	ldrb r1, [r0]
	lsls r1, r1, #4
	ldrb r2, [r5, #1]
	movs r0, #0xf
	ands r0, r2
	orrs r0, r1
	strb r0, [r5, #1]
	ldr r2, [sp, #0x190]
	ldr r0, [r2, #0x18]
	adds r5, r0, r4
	mov r3, sl
	ldr r0, [r3]
	movs r4, #0xfa
	lsls r4, r4, #1
	adds r0, r0, r4
	bl sub_800BF74
	adds r0, r6, r0
	ldrb r1, [r0]
	lsls r1, r1, #4
	ldrb r2, [r5, #1]
	movs r0, #0xf
	ands r0, r2
	orrs r0, r1
	strb r0, [r5, #1]
	movs r5, #1
	add r8, r5
	mov r0, r8
	cmp r0, #0x23
	bls _080A879C
	ldr r1, [sp, #0x1ac]
	mov sb, r1
	cmp r1, #8
	bls _080A8792
	ldr r4, _080A88E4 @ =gUnknown_081070F4
	ldr r2, [sp, #0x1b0]
	ldr r0, [r2]
	movs r5, #0xfa
	lsls r5, r5, #1
	adds r0, r0, r5
	bl sub_800BF7C
	adds r2, r0, #0
	ldr r0, [sp, #0x190]
	adds r1, r4, #0
	adds r3, r7, #0
	bl sub_80A5AB0
	movs r3, #7
	mov sb, r3
	add r6, sp, #0x30
	ldr r4, [sp, #0x1b0]
	mov sl, r4
_080A8838:
	movs r5, #0x31
	mov r8, r5
	mov r0, sb
	adds r0, #1
	str r0, [sp, #0x1b8]
_080A8842:
	adds r0, r6, #0
	ldr r1, _080A88E8 @ =gUnknown_08107431
	movs r2, #3
	bl sub_80D3994
	ldr r1, [sp, #0x190]
	ldr r0, [r1, #4]
	bl sub_80A4698
	ldrh r0, [r0, #0x20]
	mov r4, sb
	muls r4, r0, r4
	add r4, r8
	lsls r4, r4, #1
	ldr r2, [sp, #0x190]
	ldr r0, [r2, #0x14]
	adds r5, r0, r4
	mov r3, sl
	ldr r0, [r3]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl sub_800BF7C
	adds r0, r6, r0
	ldrb r1, [r0]
	lsls r1, r1, #4
	ldrb r2, [r5, #1]
	movs r0, #0xf
	ands r0, r2
	orrs r0, r1
	strb r0, [r5, #1]
	ldr r2, [sp, #0x190]
	ldr r0, [r2, #0x18]
	adds r5, r0, r4
	mov r3, sl
	ldr r0, [r3]
	movs r4, #0xfa
	lsls r4, r4, #1
	adds r0, r0, r4
	bl sub_800BF7C
	adds r0, r6, r0
	ldrb r1, [r0]
	lsls r1, r1, #4
	ldrb r2, [r5, #1]
	movs r0, #0xf
	ands r0, r2
	orrs r0, r1
	strb r0, [r5, #1]
	movs r5, #1
	add r8, r5
	mov r0, r8
	cmp r0, #0x33
	bls _080A8842
	ldr r1, [sp, #0x1b8]
	mov sb, r1
	cmp r1, #0xa
	bls _080A8838
	ldr r4, _080A88EC @ =gUnknown_08107104
_080A88BA:
	ldr r2, [sp, #0x1b0]
	ldr r0, [r2]
	movs r3, #0xfa
	lsls r3, r3, #1
	adds r0, r0, r3
	bl sub_800BF6C
	adds r2, r0, #0
	ldr r0, [sp, #0x190]
	adds r1, r4, #0
	adds r3, r7, #0
	bl sub_80A5AB0
	bl _080A9224
	.align 2, 0
_080A88D8: .4byte gUnknown_0810714C
_080A88DC: .4byte gUnknown_081070E4
_080A88E0: .4byte gUnknown_08107434
_080A88E4: .4byte gUnknown_081070F4
_080A88E8: .4byte gUnknown_08107431
_080A88EC: .4byte gUnknown_08107104
_080A88F0:
	add r5, sp, #0x30
	movs r0, #0
	str r0, [sp, #0x30]
	strh r0, [r5, #4]
	add r4, sp, #0x38
	mov r8, r4
	str r0, [sp, #0x38]
	strh r0, [r4, #4]
	add r1, sp, #0x40
	str r0, [sp, #0x40]
	strh r0, [r1, #4]
	add r1, sp, #0x48
	str r0, [sp, #0x48]
	strh r0, [r1, #4]
	cmp r6, #1
	bne _080A8912
	b _080A8A62
_080A8912:
	cmp r6, #1
	bgt _080A891C
	cmp r6, #0
	beq _080A892C
	b _080A8C24
_080A891C:
	cmp r6, #2
	bne _080A8922
	b _080A8BB4
_080A8922:
	ldr r6, [sp, #0x190]
	adds r6, #0x9c
	str r6, [sp, #0x1b4]
	bl _080A9224
_080A892C:
	ldr r4, [sp]
	add r0, sp, #0x118
	ldr r3, [r4, #0xc]
	mov r1, sp
	ldr r2, _080A89C8 @ =0x0000012F
	bl sub_80D3918
	add r0, sp, #0x118
	ldr r0, [r0]
	ldrh r2, [r0]
	add r0, sp, #0x50
	ldr r3, [r4, #0x10]
	mov r1, sp
	bl sub_80D3918
	add r4, sp, #0x50
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	adds r1, r5, #0
	adds r0, r4, #0
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r5, r6}
	stm r1!, {r5, r6}
	ldr r1, [sp, #0x38]
	movs r3, #0
	cmp r1, #0
	beq _080A8972
	mov r0, r8
	ldrh r3, [r0, #4]
_080A8972:
	adds r0, r4, #0
	ldr r2, _080A89CC @ =0x06003000
	bl sub_8008F0C
	mov sb, r4
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080A8986
	b _080A8C0E
_080A8986:
	mov sl, r1
	movs r0, #1
	add r1, sp, #0x124
	str r0, [r1]
	ldr r2, [r7]
	mov r6, sl
	subs r0, r6, r2
	asrs r4, r0, #4
	add r0, sp, #0x120
	str r4, [r0]
	adds r5, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x120
	adds r3, r2, #0
	cmp r4, r0
	bhs _080A89A8
	adds r1, r5, #0
_080A89A8:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _080A89D0
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080A89C4
	mov r0, r8
	bl sub_80D3BC0
_080A89C4:
	ldr r3, [r7]
	b _080A89D4
	.align 2, 0
_080A89C8: .4byte 0x0000012F
_080A89CC: .4byte 0x06003000
_080A89D0:
	movs r0, #0
	mov r8, r0
_080A89D4:
	adds r5, r0, #0
	str r5, [sp, #0x1bc]
	adds r2, r3, #0
	adds r3, r5, #0
	ldr r0, [sp, #0x190]
	adds r0, #0x9c
	str r0, [sp, #0x1b4]
	cmp r2, sl
	beq _080A89FE
_080A89E6:
	cmp r3, #0
	beq _080A89F6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A89F6:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080A89E6
_080A89FE:
	adds r5, r3, #0
	add r0, sp, #0x124
	ldr r0, [r0]
	cmp r0, #1
	bne _080A8A1C
	cmp r5, #0
	beq _080A8A18
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080A8A18:
	adds r5, #0x10
	b _080A8A3E
_080A8A1C:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080A8A3C
_080A8A24:
	cmp r2, #0
	beq _080A8A34
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A8A34:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080A8A24
_080A8A3C:
	adds r5, r2, #0
_080A8A3E:
	ldr r1, [r7, #4]
	ldr r3, [r7]
	adds r0, r3, #0
	cmp r3, r1
	beq _080A8A4E
_080A8A48:
	adds r0, #0x10
	cmp r0, r1
	bne _080A8A48
_080A8A4E:
	cmp r3, #0
	beq _080A8A58
	adds r0, r3, #0
	bl sub_80D0260
_080A8A58:
	ldr r0, [sp, #0x1bc]
	add r0, r8
	ldr r6, [sp, #0x1bc]
	str r6, [r7]
	b _080A920C
_080A8A62:
	ldr r4, [sp]
	add r0, sp, #0x128
	ldr r3, [r4, #0xc]
	mov r1, sp
	ldr r2, _080A8AD8 @ =0x00000151
	bl sub_80D3918
	add r0, sp, #0x128
	ldr r0, [r0]
	ldrh r2, [r0]
	add r0, sp, #0x50
	ldr r3, [r4, #0x10]
	mov r1, sp
	bl sub_80D3918
	add r4, sp, #0x50
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	adds r1, r5, #0
	adds r0, r4, #0
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r1, [sp, #0x38]
	movs r3, #0
	cmp r1, #0
	beq _080A8AA8
	mov r5, r8
	ldrh r3, [r5, #4]
_080A8AA8:
	adds r0, r4, #0
	ldr r2, _080A8ADC @ =0x06003000
	bl sub_8008F0C
	mov sb, r4
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080A8AE0
	cmp r1, #0
	beq _080A8ACA
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A8ACA:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	ldr r4, [sp, #0x190]
	adds r4, #0x9c
	str r4, [sp, #0x1b4]
	b _080A9224
	.align 2, 0
_080A8AD8: .4byte 0x00000151
_080A8ADC: .4byte 0x06003000
_080A8AE0:
	mov r8, r1
	add r1, sp, #0x134
	str r6, [r1]
	ldr r2, [r7]
	mov r5, r8
	subs r0, r5, r2
	asrs r4, r0, #4
	add r0, sp, #0x130
	str r4, [r0]
	adds r5, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x130
	adds r3, r2, #0
	cmp r4, r0
	bhs _080A8B00
	adds r1, r5, #0
_080A8B00:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _080A8B20
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	str r4, [sp, #0x1bc]
	cmp r0, #0
	bne _080A8B1C
	adds r0, r4, #0
	bl sub_80D3BC0
_080A8B1C:
	ldr r3, [r7]
	b _080A8B26
_080A8B20:
	movs r0, #0
	movs r6, #0
	str r6, [sp, #0x1bc]
_080A8B26:
	adds r5, r0, #0
	mov sl, r5
	adds r2, r3, #0
	mov r3, sl
	ldr r0, [sp, #0x190]
	adds r0, #0x9c
	str r0, [sp, #0x1b4]
	cmp r2, r8
	beq _080A8B50
_080A8B38:
	cmp r3, #0
	beq _080A8B48
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A8B48:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _080A8B38
_080A8B50:
	adds r5, r3, #0
	add r0, sp, #0x134
	ldr r0, [r0]
	cmp r0, #1
	bne _080A8B6E
	cmp r5, #0
	beq _080A8B6A
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080A8B6A:
	adds r5, #0x10
	b _080A8B90
_080A8B6E:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080A8B8E
_080A8B76:
	cmp r2, #0
	beq _080A8B86
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A8B86:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080A8B76
_080A8B8E:
	adds r5, r2, #0
_080A8B90:
	ldr r1, [r7, #4]
	ldr r3, [r7]
	adds r0, r3, #0
	cmp r3, r1
	beq _080A8BA0
_080A8B9A:
	adds r0, #0x10
	cmp r0, r1
	bne _080A8B9A
_080A8BA0:
	cmp r3, #0
	beq _080A8BAA
	adds r0, r3, #0
	bl sub_80D0260
_080A8BAA:
	ldr r0, [sp, #0x1bc]
	add r0, sl
	mov r6, sl
	str r6, [r7]
	b _080A920C
_080A8BB4:
	ldr r4, [sp]
	add r0, sp, #0x138
	ldr r3, [r4, #0xc]
	mov r1, sp
	movs r2, #0x88
	lsls r2, r2, #1
	bl sub_80D3918
	add r0, sp, #0x138
	ldr r0, [r0]
	ldrh r2, [r0]
	add r0, sp, #0x50
	ldr r3, [r4, #0x10]
	mov r1, sp
	bl sub_80D3918
	add r4, sp, #0x50
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	adds r1, r5, #0
	adds r0, r4, #0
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r5, r6}
	stm r1!, {r5, r6}
	ldr r1, [sp, #0x38]
	movs r3, #0
	cmp r1, #0
	beq _080A8BFC
	mov r0, r8
	ldrh r3, [r0, #4]
_080A8BFC:
	adds r0, r4, #0
	ldr r2, _080A8C2C @ =0x06003000
	bl sub_8008F0C
	mov sb, r4
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080A8C30
_080A8C0E:
	cmp r1, #0
	beq _080A8C1E
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080A8C1E:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
_080A8C24:
	ldr r5, [sp, #0x190]
	adds r5, #0x9c
	str r5, [sp, #0x1b4]
	b _080A9224
	.align 2, 0
_080A8C2C: .4byte 0x06003000
_080A8C30:
	mov sl, r1
	movs r0, #1
	add r1, sp, #0x144
	str r0, [r1]
	ldr r2, [r7]
	mov r6, sl
	subs r0, r6, r2
	asrs r4, r0, #4
	add r0, sp, #0x140
	str r4, [r0]
	adds r5, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x140
	adds r3, r2, #0
	cmp r4, r0
	bhs _080A8C52
	adds r1, r5, #0
_080A8C52:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _080A8C72
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080A8C6E
	mov r0, r8
	bl sub_80D3BC0
_080A8C6E:
	ldr r3, [r7]
	b _080A8C76
_080A8C72:
	movs r0, #0
	mov r8, r0
_080A8C76:
	adds r5, r0, #0
	str r5, [sp, #0x1bc]
	adds r2, r3, #0
	adds r3, r5, #0
	ldr r0, [sp, #0x190]
	adds r0, #0x9c
	str r0, [sp, #0x1b4]
	cmp r2, sl
	beq _080A8CA0
_080A8C88:
	cmp r3, #0
	beq _080A8C98
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A8C98:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080A8C88
_080A8CA0:
	adds r5, r3, #0
	add r0, sp, #0x144
	ldr r0, [r0]
	cmp r0, #1
	bne _080A8CBE
	cmp r5, #0
	beq _080A8CBA
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080A8CBA:
	adds r5, #0x10
	b _080A8CE0
_080A8CBE:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080A8CDE
_080A8CC6:
	cmp r2, #0
	beq _080A8CD6
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A8CD6:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080A8CC6
_080A8CDE:
	adds r5, r2, #0
_080A8CE0:
	ldr r1, [r7, #4]
	ldr r3, [r7]
	adds r0, r3, #0
	cmp r3, r1
	beq _080A8CF0
_080A8CEA:
	adds r0, #0x10
	cmp r0, r1
	bne _080A8CEA
_080A8CF0:
	cmp r3, #0
	beq _080A8CFA
	adds r0, r3, #0
	bl sub_80D0260
_080A8CFA:
	ldr r0, [sp, #0x1bc]
	add r0, r8
	ldr r6, [sp, #0x1bc]
	str r6, [r7]
	b _080A920C
_080A8D04:
	ldr r0, [sp, #0x190]
	adds r0, #0x9c
	str r0, [sp, #0x1b4]
	cmp r6, #1
	beq _080A8D10
	b _080A8E26
_080A8D10:
	add r0, sp, #0x30
	ldr r1, _080A8D40 @ =0x06007D00
	ldr r2, _080A8D44 @ =0x06007C80
	movs r3, #0x80
	bl sub_8008F0C
	add r1, sp, #0x30
	mov sb, r1
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080A8D48
	cmp r1, #0
	beq _080A8D38
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080A8D38:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _080A8E26
	.align 2, 0
_080A8D40: .4byte 0x06007D00
_080A8D44: .4byte 0x06007C80
_080A8D48:
	mov r8, r1
	add r1, sp, #0x14c
	str r6, [r1]
	ldr r2, [r7]
	mov r5, r8
	subs r0, r5, r2
	asrs r4, r0, #4
	add r0, sp, #0x148
	str r4, [r0]
	adds r5, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x148
	adds r3, r2, #0
	cmp r4, r0
	bhs _080A8D68
	adds r1, r5, #0
_080A8D68:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _080A8D88
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sl, r4
	cmp r0, #0
	bne _080A8D84
	mov r0, sl
	bl sub_80D3BC0
_080A8D84:
	ldr r3, [r7]
	b _080A8D8C
_080A8D88:
	movs r0, #0
	mov sl, r0
_080A8D8C:
	adds r5, r0, #0
	str r5, [sp, #0x1bc]
	adds r2, r3, #0
	mov ip, r5
	ldr r0, [sp, #0x190]
	adds r0, #0x9c
	str r0, [sp, #0x1b4]
	cmp r2, r8
	beq _080A8DBA
_080A8D9E:
	mov r1, ip
	cmp r1, #0
	beq _080A8DB0
	mov r0, ip
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080A8DB0:
	adds r2, #0x10
	movs r0, #0x10
	add ip, r0
	cmp r2, r8
	bne _080A8D9E
_080A8DBA:
	mov r5, ip
	add r0, sp, #0x14c
	ldr r0, [r0]
	cmp r0, #1
	bne _080A8DD8
	cmp r5, #0
	beq _080A8DD4
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080A8DD4:
	adds r5, #0x10
	b _080A8E00
_080A8DD8:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _080A8DFE
_080A8DE0:
	cmp r2, #0
	beq _080A8DF0
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080A8DF0:
	movs r5, #1
	rsbs r5, r5, #0
	add r8, r5
	adds r2, #0x10
	mov r0, r8
	cmp r0, #0
	bne _080A8DE0
_080A8DFE:
	adds r5, r2, #0
_080A8E00:
	ldr r1, [r7, #4]
	ldr r3, [r7]
	adds r0, r3, #0
	cmp r3, r1
	beq _080A8E10
_080A8E0A:
	adds r0, #0x10
	cmp r0, r1
	bne _080A8E0A
_080A8E10:
	cmp r3, #0
	beq _080A8E1A
	adds r0, r3, #0
	bl sub_80D0260
_080A8E1A:
	ldr r0, [sp, #0x1bc]
	add r0, sl
	ldr r1, [sp, #0x1bc]
	str r1, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_080A8E26:
	add r5, sp, #0x30
	movs r0, #0
	str r0, [sp, #0x30]
	strh r0, [r5, #4]
	add r2, sp, #0x38
	mov r8, r2
	str r0, [sp, #0x38]
	strh r0, [r2, #4]
	add r1, sp, #0x40
	str r0, [sp, #0x40]
	strh r0, [r1, #4]
	add r1, sp, #0x48
	str r0, [sp, #0x48]
	strh r0, [r1, #4]
	cmp r6, #1
	bne _080A8E48
	b _080A8F8A
_080A8E48:
	cmp r6, #1
	bgt _080A8E52
	cmp r6, #0
	beq _080A8E5A
	b _080A9224
_080A8E52:
	cmp r6, #2
	bne _080A8E58
	b _080A90C8
_080A8E58:
	b _080A9224
_080A8E5A:
	ldr r4, [sp]
	add r0, sp, #0x150
	ldr r3, [r4, #0xc]
	mov r1, sp
	ldr r2, _080A8EC4 @ =0x0000012F
	bl sub_80D3918
	add r0, sp, #0x150
	ldr r0, [r0]
	ldrh r2, [r0]
	add r0, sp, #0x50
	ldr r3, [r4, #0x10]
	mov r1, sp
	bl sub_80D3918
	add r4, sp, #0x50
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	adds r1, r5, #0
	adds r0, r4, #0
	ldm r0!, {r3, r5, r6}
	stm r1!, {r3, r5, r6}
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r6}
	stm r1!, {r2, r6}
	ldr r1, [sp, #0x38]
	movs r3, #0
	cmp r1, #0
	beq _080A8EA0
	mov r5, r8
	ldrh r3, [r5, #4]
_080A8EA0:
	adds r0, r4, #0
	ldr r2, _080A8EC8 @ =0x06007C00
	bl sub_8008F0C
	mov sb, r4
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080A8ECC
	cmp r1, #0
	bne _080A8EB8
	b _080A9132
_080A8EB8:
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	b _080A912E
	.align 2, 0
_080A8EC4: .4byte 0x0000012F
_080A8EC8: .4byte 0x06007C00
_080A8ECC:
	mov sl, r1
	movs r0, #1
	add r1, sp, #0x15c
	str r0, [r1]
	ldr r2, [r7]
	mov r4, sl
	subs r0, r4, r2
	asrs r4, r0, #4
	add r0, sp, #0x158
	str r4, [r0]
	adds r5, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x158
	adds r3, r2, #0
	cmp r4, r0
	bhs _080A8EEE
	adds r1, r5, #0
_080A8EEE:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _080A8F0E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080A8F0A
	mov r0, r8
	bl sub_80D3BC0
_080A8F0A:
	ldr r3, [r7]
	b _080A8F12
_080A8F0E:
	movs r0, #0
	mov r8, r0
_080A8F12:
	adds r5, r0, #0
	str r5, [sp, #0x1bc]
	adds r2, r3, #0
	adds r3, r5, #0
	cmp r2, sl
	beq _080A8F36
_080A8F1E:
	cmp r3, #0
	beq _080A8F2E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A8F2E:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080A8F1E
_080A8F36:
	adds r5, r3, #0
	add r0, sp, #0x15c
	ldr r0, [r0]
	cmp r0, #1
	bne _080A8F54
	cmp r5, #0
	beq _080A8F50
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A8F50:
	adds r5, #0x10
	b _080A8F76
_080A8F54:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080A8F74
_080A8F5C:
	cmp r2, #0
	beq _080A8F6C
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A8F6C:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080A8F5C
_080A8F74:
	adds r5, r2, #0
_080A8F76:
	ldr r1, [r7, #4]
	ldr r3, [r7]
	adds r0, r3, #0
	cmp r3, r1
	bne _080A8F82
	b _080A91FA
_080A8F82:
	adds r0, #0x10
	cmp r0, r1
	bne _080A8F82
	b _080A91FA
_080A8F8A:
	ldr r4, [sp]
	add r0, sp, #0x160
	ldr r3, [r4, #0xc]
	mov r1, sp
	ldr r2, _080A8FF4 @ =0x00000151
	bl sub_80D3918
	add r0, sp, #0x160
	ldr r0, [r0]
	ldrh r2, [r0]
	add r0, sp, #0x50
	ldr r3, [r4, #0x10]
	mov r1, sp
	bl sub_80D3918
	add r4, sp, #0x50
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	adds r1, r5, #0
	adds r0, r4, #0
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r1, [sp, #0x38]
	movs r3, #0
	cmp r1, #0
	beq _080A8FD0
	mov r5, r8
	ldrh r3, [r5, #4]
_080A8FD0:
	adds r0, r4, #0
	ldr r2, _080A8FF8 @ =0x06007C00
	bl sub_8008F0C
	mov sb, r4
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080A8FFC
	cmp r1, #0
	bne _080A8FE8
	b _080A9132
_080A8FE8:
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	b _080A912E
	.align 2, 0
_080A8FF4: .4byte 0x00000151
_080A8FF8: .4byte 0x06007C00
_080A8FFC:
	mov r8, r1
	add r1, sp, #0x16c
	str r6, [r1]
	ldr r2, [r7]
	mov r4, r8
	subs r0, r4, r2
	asrs r4, r0, #4
	add r0, sp, #0x168
	str r4, [r0]
	adds r5, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x168
	adds r3, r2, #0
	cmp r4, r0
	bhs _080A901C
	adds r1, r5, #0
_080A901C:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _080A903C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	str r4, [sp, #0x1bc]
	cmp r0, #0
	bne _080A9038
	adds r0, r4, #0
	bl sub_80D3BC0
_080A9038:
	ldr r3, [r7]
	b _080A9042
_080A903C:
	movs r0, #0
	movs r5, #0
	str r5, [sp, #0x1bc]
_080A9042:
	adds r5, r0, #0
	mov sl, r5
	adds r2, r3, #0
	mov r3, sl
	cmp r2, r8
	beq _080A9066
_080A904E:
	cmp r3, #0
	beq _080A905E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A905E:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _080A904E
_080A9066:
	adds r5, r3, #0
	add r0, sp, #0x16c
	ldr r0, [r0]
	cmp r0, #1
	bne _080A9084
	cmp r5, #0
	beq _080A9080
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A9080:
	adds r5, #0x10
	b _080A90A6
_080A9084:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080A90A4
_080A908C:
	cmp r2, #0
	beq _080A909C
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A909C:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080A908C
_080A90A4:
	adds r5, r2, #0
_080A90A6:
	ldr r1, [r7, #4]
	ldr r3, [r7]
	adds r0, r3, #0
	cmp r3, r1
	beq _080A90B6
_080A90B0:
	adds r0, #0x10
	cmp r0, r1
	bne _080A90B0
_080A90B6:
	cmp r3, #0
	beq _080A90C0
	adds r0, r3, #0
	bl sub_80D0260
_080A90C0:
	ldr r0, [sp, #0x1bc]
	add r0, sl
	mov r1, sl
	b _080A920A
_080A90C8:
	ldr r4, [sp]
	add r0, sp, #0x170
	ldr r3, [r4, #0xc]
	mov r1, sp
	movs r2, #0x88
	lsls r2, r2, #1
	bl sub_80D3918
	add r0, sp, #0x170
	ldr r0, [r0]
	ldrh r2, [r0]
	add r0, sp, #0x50
	ldr r3, [r4, #0x10]
	mov r1, sp
	bl sub_80D3918
	add r4, sp, #0x50
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	adds r1, r5, #0
	adds r0, r4, #0
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r5, r6}
	stm r1!, {r5, r6}
	ldr r1, [sp, #0x38]
	movs r3, #0
	cmp r1, #0
	beq _080A9110
	mov r0, r8
	ldrh r3, [r0, #4]
_080A9110:
	adds r0, r4, #0
	ldr r2, _080A913C @ =0x06007C00
	bl sub_8008F0C
	mov sb, r4
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080A9140

	non_word_aligned_thumb_func_start sub_080A9122
sub_080A9122: @ 0x080A9122
	cmp r1, #0
	beq _080A9132
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
_080A912E:
	ldr r1, [r1]
	str r1, [r0]
_080A9132:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _080A9224
	.align 2, 0
_080A913C: .4byte 0x06007C00
_080A9140:
	mov sl, r1
	movs r0, #1
	add r1, sp, #0x17c
	str r0, [r1]
	ldr r2, [r7]
	mov r5, sl
	subs r0, r5, r2
	asrs r4, r0, #4
	add r0, sp, #0x178
	str r4, [r0]
	adds r5, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x178
	adds r3, r2, #0
	cmp r4, r0
	bhs _080A9162
	adds r1, r5, #0
_080A9162:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _080A9182
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080A917E
	mov r0, r8
	bl sub_80D3BC0
_080A917E:
	ldr r3, [r7]
	b _080A9186
_080A9182:
	movs r0, #0
	mov r8, r0
_080A9186:
	adds r5, r0, #0
	str r5, [sp, #0x1bc]
	adds r2, r3, #0
	adds r3, r5, #0
	cmp r2, sl
	beq _080A91AA
_080A9192:
	cmp r3, #0
	beq _080A91A2
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A91A2:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080A9192
_080A91AA:
	adds r5, r3, #0
	add r0, sp, #0x17c
	ldr r0, [r0]
	cmp r0, #1
	bne _080A91C8
	cmp r5, #0
	beq _080A91C4
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A91C4:
	adds r5, #0x10
	b _080A91EA
_080A91C8:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080A91E8
_080A91D0:
	cmp r2, #0
	beq _080A91E0
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A91E0:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080A91D0
_080A91E8:
	adds r5, r2, #0
_080A91EA:
	ldr r1, [r7, #4]
	ldr r3, [r7]
	adds r0, r3, #0
	cmp r3, r1
	beq _080A91FA
_080A91F4:
	adds r0, #0x10
	cmp r0, r1
	bne _080A91F4
_080A91FA:
	cmp r3, #0
	beq _080A9204
	adds r0, r3, #0
	bl sub_80D0260
_080A9204:
	ldr r0, [sp, #0x1bc]
	add r0, r8
	ldr r1, [sp, #0x1bc]
_080A920A:
	str r1, [r7]
_080A920C:
	str r5, [r7, #4]
	str r0, [r7, #0xc]
	b _080A9224
_080A9212:
	ldr r1, _080A9238 @ =gUnknown_08107154
	ldr r0, [sp, #0x190]
	movs r2, #0
	adds r3, r7, #0
	bl sub_80A5AB0
	ldr r2, [sp, #0x190]
	adds r2, #0x9c
	str r2, [sp, #0x1b4]
_080A9224:
	ldr r3, [sp, #0x190]
	ldr r0, [r3]
	cmp r0, #8
	bne _080A922E
	b _080A93F2
_080A922E:
	cmp r0, #8
	bgt _080A923C
	cmp r0, #6
	beq _080A924C
	b _080A93F2
	.align 2, 0
_080A9238: .4byte gUnknown_08107154
_080A923C:
	cmp r0, #0x1d
	beq _080A9242
	b _080A93F2
_080A9242:
	ldr r1, [sp, #0x190]
	adds r1, #0x98
	movs r0, #1
	strb r0, [r1]
	b _080A93F2
_080A924C:
	ldr r0, [sp, #0x194]
	adds r0, #0x5d
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080A9270
	ldr r1, _080A9488 @ =gUnknown_0810725C
	ldr r0, [r1, #0x18]
	cmp r0, #0
	beq _080A9270
	ldr r1, [r1, #0x1c]
	lsls r1, r1, #5
	movs r4, #0xc0
	lsls r4, r4, #0x13
	adds r1, r1, r4
	bl sub_80D102C
_080A9270:
	ldr r0, [sp, #0x194]
	adds r0, #0x54
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080A9294
	ldr r1, _080A948C @ =gUnknown_0810730C
	ldr r0, [r1, #0x18]
	cmp r0, #0
	beq _080A9294
	ldr r1, [r1, #0x1c]
	lsls r1, r1, #5
	movs r5, #0xc0
	lsls r5, r5, #0x13
	adds r1, r1, r5
	bl sub_80D102C
_080A9294:
	ldr r1, [sp, #0x194]
	adds r1, #0x4e
	ldrh r0, [r1]
	lsls r0, r0, #0x17
	lsrs r0, r0, #0x1e
	adds r4, r1, #0
	cmp r0, #1
	bne _080A92BA
	ldr r1, _080A9490 @ =gUnknown_08107230
	ldr r0, [r1, #0x18]
	cmp r0, #0
	beq _080A92BA
	ldr r1, [r1, #0x1c]
	lsls r1, r1, #5
	movs r6, #0xc0
	lsls r6, r6, #0x13
	adds r1, r1, r6
	bl sub_80D102C
_080A92BA:
	ldr r0, [sp, #0x194]
	adds r0, #0x4f
	ldrb r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080A92DE
	ldr r1, _080A9490 @ =gUnknown_08107230
	ldr r0, [r1, #0x18]
	cmp r0, #0
	beq _080A92DE
	ldr r1, [r1, #0x1c]
	lsls r1, r1, #5
	movs r2, #0xc0
	lsls r2, r2, #0x13
	adds r1, r1, r2
	bl sub_80D102C
_080A92DE:
	ldrb r0, [r4]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080A9314
	ldr r1, _080A9494 @ =gUnknown_08107204
	ldr r0, [r1, #0x18]
	cmp r0, #0
	beq _080A92FE
	ldr r1, [r1, #0x1c]
	lsls r1, r1, #5
	movs r3, #0xc0
	lsls r3, r3, #0x13
	adds r1, r1, r3
	bl sub_80D102C
_080A92FE:
	ldr r1, _080A9498 @ =gUnknown_081072B4
	ldr r0, [r1, #0x18]
	cmp r0, #0
	beq _080A9314
	ldr r1, [r1, #0x1c]
	lsls r1, r1, #5
	movs r4, #0xc0
	lsls r4, r4, #0x13
	adds r1, r1, r4
	bl sub_80D102C
_080A9314:
	ldr r0, [sp, #0x194]
	adds r0, #0x51
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080A9338
	ldr r1, _080A949C @ =gUnknown_08107288
	ldr r0, [r1, #0x18]
	cmp r0, #0
	beq _080A9338
	ldr r1, [r1, #0x1c]
	lsls r1, r1, #5
	movs r5, #0xc0
	lsls r5, r5, #0x13
	adds r1, r1, r5
	bl sub_80D102C
_080A9338:
	ldr r0, [sp, #0x194]
	adds r0, #0x52
	ldrb r0, [r0]
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080A935C
	ldr r1, _080A9494 @ =gUnknown_08107204
	ldr r0, [r1, #0x18]
	cmp r0, #0
	beq _080A935C
	ldr r1, [r1, #0x1c]
	lsls r1, r1, #5
	movs r6, #0xc0
	lsls r6, r6, #0x13
	adds r1, r1, r6
	bl sub_80D102C
_080A935C:
	ldr r0, [sp, #0x194]
	adds r0, #0x55
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080A9396
	ldr r1, _080A9494 @ =gUnknown_08107204
	ldr r0, [r1, #0x18]
	cmp r0, #0
	beq _080A9380
	ldr r1, [r1, #0x1c]
	lsls r1, r1, #5
	movs r2, #0xc0
	lsls r2, r2, #0x13
	adds r1, r1, r2
	bl sub_80D102C
_080A9380:
	ldr r1, _080A9498 @ =gUnknown_081072B4
	ldr r0, [r1, #0x18]
	cmp r0, #0
	beq _080A9396
	ldr r1, [r1, #0x1c]
	lsls r1, r1, #5
	movs r3, #0xc0
	lsls r3, r3, #0x13
	adds r1, r1, r3
	bl sub_80D102C
_080A9396:
	ldr r0, [sp, #0x194]
	adds r0, #0x56
	ldrb r0, [r0]
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080A93BA
	ldr r1, _080A9494 @ =gUnknown_08107204
	ldr r0, [r1, #0x18]
	cmp r0, #0
	beq _080A93BA
	ldr r1, [r1, #0x1c]
	lsls r1, r1, #5
	movs r4, #0xc0
	lsls r4, r4, #0x13
	adds r1, r1, r4
	bl sub_80D102C
_080A93BA:
	ldr r0, [sp, #0x194]
	adds r0, #0x4c
	ldrb r0, [r0]
	lsrs r0, r0, #6
	cmp r0, #1
	bne _080A93F2
	ldr r1, _080A94A0 @ =gUnknown_081072E0
	ldr r0, [r1, #0x18]
	cmp r0, #0
	beq _080A93DC
	ldr r1, [r1, #0x1c]
	lsls r1, r1, #5
	movs r5, #0xc0
	lsls r5, r5, #0x13
	adds r1, r1, r5
	bl sub_80D102C
_080A93DC:
	ldr r1, _080A9490 @ =gUnknown_08107230
	ldr r0, [r1, #0x18]
	cmp r0, #0
	beq _080A93F2
	ldr r1, [r1, #0x1c]
	lsls r1, r1, #5
	movs r6, #0xc0
	lsls r6, r6, #0x13
	adds r1, r1, r6
	bl sub_80D102C
_080A93F2:
	ldr r0, [sp, #0x1b4]
	bl sub_80AAF10
	mov sl, r0
	ldr r0, [sp, #0x1b4]
	bl sub_80AAF1C
	str r0, [sp, #0x19c]
	mov r1, sl
	eors r1, r0
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _080A9410
	b _080A958C
_080A9410:
	mov r0, sp
	adds r0, #0x30
	str r0, [sp, #0x1a0]
_080A9416:
	mov r1, sl
	ldr r0, [r1, #0x10]
	movs r1, #0
	bl sub_80AAF28
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	ldr r4, [sp]
	add r0, sp, #0x180
	ldr r3, [r4, #0xc]
	mov r1, sp
	bl sub_80D3918
	add r0, sp, #0x180
	ldr r0, [r0]
	ldrh r2, [r0]
	ldr r0, [sp, #0x1a0]
	ldr r3, [r4, #0x10]
	mov r1, sp
	bl sub_80D3918
	ldr r0, [sp, #0x38]
	adds r1, r0, #0
	mov r3, sl
	ldrh r2, [r3, #0x14]
	add r0, sp, #0x38
	movs r3, #0
	cmp r1, #0
	beq _080A9454
	ldrh r3, [r0, #4]
_080A9454:
	lsls r2, r2, #5
	movs r4, #0xc0
	lsls r4, r4, #0x13
	adds r2, r2, r4
	add r0, sp, #0x50
	bl sub_8008F0C
	add r5, sp, #0x50
	mov sb, r5
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080A94A4
	cmp r1, #0
	beq _080A947E
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A947E:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _080A9574
	.align 2, 0
_080A9488: .4byte gUnknown_0810725C
_080A948C: .4byte gUnknown_0810730C
_080A9490: .4byte gUnknown_08107230
_080A9494: .4byte gUnknown_08107204
_080A9498: .4byte gUnknown_081072B4
_080A949C: .4byte gUnknown_08107288
_080A94A0: .4byte gUnknown_081072E0
_080A94A4:
	str r1, [sp, #0x1c0]
	movs r0, #1
	add r5, sp, #0x18c
	str r0, [r5]
	ldr r2, [r7]
	ldr r4, [sp, #0x1c0]
	subs r0, r4, r2
	asrs r4, r0, #4
	add r0, sp, #0x188
	str r4, [r0]
	ldr r1, [r5]
	adds r3, r2, #0
	cmp r4, r1
	bhs _080A94C2
	adds r0, r5, #0
_080A94C2:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080A94E2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080A94DE
	mov r0, r8
	bl sub_80D3BC0
_080A94DE:
	ldr r3, [r7]
	b _080A94E6
_080A94E2:
	movs r0, #0
	mov r8, r0
_080A94E6:
	adds r5, r0, #0
	str r5, [sp, #0x1bc]
	adds r2, r3, #0
	adds r3, r5, #0
	ldr r5, [sp, #0x1c0]
	cmp r2, r5
	beq _080A950E
_080A94F4:
	cmp r3, #0
	beq _080A9504
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A9504:
	adds r2, #0x10
	adds r3, #0x10
	ldr r6, [sp, #0x1c0]
	cmp r2, r6
	bne _080A94F4
_080A950E:
	adds r5, r3, #0
	add r0, sp, #0x18c
	ldr r0, [r0]
	cmp r0, #1
	bne _080A952C
	cmp r5, #0
	beq _080A9528
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080A9528:
	adds r5, #0x10
	b _080A954E
_080A952C:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080A954C
_080A9534:
	cmp r2, #0
	beq _080A9544
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080A9544:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080A9534
_080A954C:
	adds r5, r2, #0
_080A954E:
	ldr r1, [r7, #4]
	ldr r3, [r7]
	adds r0, r3, #0
	cmp r3, r1
	beq _080A955E
_080A9558:
	adds r0, #0x10
	cmp r0, r1
	bne _080A9558
_080A955E:
	cmp r3, #0
	beq _080A9568
	adds r0, r3, #0
	bl sub_80D0260
_080A9568:
	ldr r0, [sp, #0x1bc]
	add r0, r8
	ldr r6, [sp, #0x1bc]
	str r6, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_080A9574:
	mov r0, sl
	bl sub_80E2B28
	mov sl, r0
	mov r1, sl
	ldr r0, [sp, #0x19c]
	eors r1, r0
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _080A958C
	b _080A9416
_080A958C:
	ldr r0, _080A95A0 @ =gUnknown_080E5A28
	str r0, [sp]
	add sp, #0x1c4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A95A0: .4byte gUnknown_080E5A28

	thumb_func_start sub_80A95A4
sub_80A95A4: @ 0x080A95A4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xe8
	adds r7, r0, #0
	str r1, [sp, #0xd8]
	mov sb, r2
	adds r4, r7, #0
	adds r4, #0x94
	ldr r0, [r4]
	ldr r1, _080A95EC @ =0x0000214C
	adds r1, r0, r1
	str r1, [sp, #0xdc]
	ldr r0, [r7, #4]
	bl sub_80A4698
	adds r5, r0, #0
	ldr r0, [r4]
	adds r0, #0x10
	bl sub_800E324
	adds r6, r0, #0
	ldr r0, [r4]
	ldr r4, [r0, #8]
	ldr r1, _080A95F0 @ =gUnknown_086678A0
	mov r0, sp
	bl sub_805E6CC
	ldr r0, [r7]
	cmp r0, #0x2e
	bgt _080A95F4
	cmp r0, #0x2d
	bge _080A95FA
	b _080A960C
	.align 2, 0
_080A95EC: .4byte 0x0000214C
_080A95F0: .4byte gUnknown_086678A0
_080A95F4:
	cmp r0, #0x2f
	beq _080A9604
	b _080A960C
_080A95FA:
	movs r6, #1
	movs r2, #1
	str r2, [sp, #0xd8]
	movs r4, #0
	b _080A960C
_080A9604:
	movs r6, #3
	movs r3, #1
	str r3, [sp, #0xd8]
	movs r4, #4
_080A960C:
	ldr r0, [r7, #4]
	cmp r0, #0x10
	beq _080A9626
	cmp r0, #0x11
	beq _080A9664
	ldr r4, [sp, #0xd8]
	cmp r4, #0
	blt _080A96DE
	cmp r4, #2
	ble _080A96B8
	cmp r4, #3
	beq _080A96CC
	b _080A96DE
_080A9626:
	ldr r0, [sp, #0xd8]
	cmp r0, #0
	blt _080A96DE
	cmp r0, #2
	ble _080A9636
	cmp r0, #3
	beq _080A964C
	b _080A96DE
_080A9636:
	cmp r4, #0
	bne _080A9642
	ldr r0, [r5, #4]
	mov r1, sb
	lsls r2, r1, #2
	b _080A96BE
_080A9642:
	ldr r0, _080A9648 @ =gUnknown_08714A30
	b _080A96BA
	.align 2, 0
_080A9648: .4byte gUnknown_08714A30
_080A964C:
	cmp r4, #0
	bne _080A9658
	ldr r0, [r5, #8]
	mov r4, sb
	lsls r2, r4, #2
	b _080A96BE
_080A9658:
	ldr r0, _080A9660 @ =gUnknown_08714B60
	mov r1, sb
	lsls r2, r1, #2
	b _080A96BE
	.align 2, 0
_080A9660: .4byte gUnknown_08714B60
_080A9664:
	ldr r0, [sp, #0xdc]
	adds r0, #0x5d
	ldrb r0, [r0]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080A967C
	ldr r0, _080A9678 @ =gUnknown_08714BEC
	b _080A96BA
	.align 2, 0
_080A9678: .4byte gUnknown_08714BEC
_080A967C:
	ldr r0, [sp, #0xd8]
	cmp r0, #0
	blt _080A96DE
	cmp r0, #2
	ble _080A968C
	cmp r0, #3
	beq _080A96A0
	b _080A96DE
_080A968C:
	cmp r4, #0
	bne _080A9698
	ldr r0, [r5, #4]
	mov r1, sb
	lsls r2, r1, #2
	b _080A96BE
_080A9698:
	ldr r0, _080A969C @ =gUnknown_08716F84
	b _080A96BA
	.align 2, 0
_080A969C: .4byte gUnknown_08716F84
_080A96A0:
	cmp r4, #0
	bne _080A96AC
	ldr r0, [r5, #8]
	mov r4, sb
	lsls r2, r4, #2
	b _080A96BE
_080A96AC:
	ldr r0, _080A96B4 @ =gUnknown_087170B8
	mov r1, sb
	lsls r2, r1, #2
	b _080A96BE
	.align 2, 0
_080A96B4: .4byte gUnknown_087170B8
_080A96B8:
	ldr r0, [r5, #4]
_080A96BA:
	mov r3, sb
	lsls r2, r3, #2
_080A96BE:
	adds r1, r7, #0
	adds r1, #0x1c
	adds r1, r1, r2
	ldr r1, [r1]
	bl sub_80D102C
	b _080A96DE
_080A96CC:
	ldr r0, [r5, #8]
	mov r4, sb
	lsls r2, r4, #2
	adds r1, r7, #0
	adds r1, #0x1c
	adds r1, r1, r2
	ldr r1, [r1]
	bl sub_80D102C
_080A96DE:
	ldr r0, [r7, #4]
	movs r1, #0x9c
	adds r1, r1, r7
	mov r8, r1
	cmp r0, #0x33
	bls _080A96EC
	b _080A9E42
_080A96EC:
	lsls r0, r0, #2
	ldr r1, _080A96F8 @ =_080A96FC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A96F8: .4byte _080A96FC
_080A96FC: @ jump table
	.4byte _080A97CC @ case 0
	.4byte _080A98DC @ case 1
	.4byte _080A9E42 @ case 2
	.4byte _080A9E42 @ case 3
	.4byte _080A9B44 @ case 4
	.4byte _080A9E42 @ case 5
	.4byte _080A9B44 @ case 6
	.4byte _080A9E42 @ case 7
	.4byte _080A9E42 @ case 8
	.4byte _080A9E42 @ case 9
	.4byte _080A9E42 @ case 10
	.4byte _080A9E42 @ case 11
	.4byte _080A996C @ case 12
	.4byte _080A9E42 @ case 13
	.4byte _080A9E42 @ case 14
	.4byte _080A9E42 @ case 15
	.4byte _080A9E42 @ case 16
	.4byte _080A9E42 @ case 17
	.4byte _080A9E42 @ case 18
	.4byte _080A9E42 @ case 19
	.4byte _080A9E42 @ case 20
	.4byte _080A9E42 @ case 21
	.4byte _080A9E42 @ case 22
	.4byte _080A9E42 @ case 23
	.4byte _080A9E42 @ case 24
	.4byte _080A9E42 @ case 25
	.4byte _080A9E42 @ case 26
	.4byte _080A9E42 @ case 27
	.4byte _080A9E42 @ case 28
	.4byte _080A9E42 @ case 29
	.4byte _080A9E42 @ case 30
	.4byte _080A9E42 @ case 31
	.4byte _080A9E42 @ case 32
	.4byte _080A9E42 @ case 33
	.4byte _080A9E42 @ case 34
	.4byte _080A9E42 @ case 35
	.4byte _080A9E42 @ case 36
	.4byte _080A9E42 @ case 37
	.4byte _080A9E42 @ case 38
	.4byte _080A9E42 @ case 39
	.4byte _080A9E42 @ case 40
	.4byte _080A9E42 @ case 41
	.4byte _080A9CBC @ case 42
	.4byte _080A9CBC @ case 43
	.4byte _080A9E42 @ case 44
	.4byte _080A9E42 @ case 45
	.4byte _080A9E42 @ case 46
	.4byte _080A9E42 @ case 47
	.4byte _080A9E42 @ case 48
	.4byte _080A9E42 @ case 49
	.4byte _080A9E42 @ case 50
	.4byte _080A99E8 @ case 51
_080A97CC:
	ldr r2, [sp, #0xd8]
	cmp r2, #3
	beq _080A97F4
	ldr r0, _080A97F0 @ =gUnknown_086D6368
	mov r3, sb
	lsls r4, r3, #2
	adds r5, r7, #0
	adds r5, #0x1c
	adds r1, r5, r4
	ldr r1, [r1]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r1, r1, r2
	movs r2, #0x60
	bl sub_8008E64
	b _080A980E
	.align 2, 0
_080A97F0: .4byte gUnknown_086D6368
_080A97F4:
	ldr r0, _080A981C @ =gUnknown_086D6548
	mov r3, sb
	lsls r4, r3, #2
	adds r5, r7, #0
	adds r5, #0x1c
	adds r1, r5, r4
	ldr r1, [r1]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r1, r1, r2
	movs r2, #0x60
	bl sub_8008E64
_080A980E:
	cmp r6, #1
	beq _080A9838
	cmp r6, #1
	bgt _080A9820
	cmp r6, #0
	beq _080A9826
	b _080A9862
	.align 2, 0
_080A981C: .4byte gUnknown_086D6548
_080A9820:
	cmp r6, #2
	beq _080A9850
	b _080A9862
_080A9826:
	ldr r0, _080A9834 @ =gUnknown_08699FF4
	adds r1, r5, r4
	ldr r1, [r1]
	movs r3, #0xb0
	lsls r3, r3, #1
	adds r1, r1, r3
	b _080A9844
	.align 2, 0
_080A9834: .4byte gUnknown_08699FF4
_080A9838:
	ldr r0, _080A984C @ =gUnknown_0869B284
	adds r1, r5, r4
	ldr r1, [r1]
	movs r2, #0xb0
	lsls r2, r2, #1
	adds r1, r1, r2
_080A9844:
	movs r2, #0x80
	bl sub_8008E64
	b _080A9862
	.align 2, 0
_080A984C: .4byte gUnknown_0869B284
_080A9850:
	ldr r0, _080A98CC @ =gUnknown_08698B00
	adds r1, r5, r4
	ldr r1, [r1]
	movs r3, #0xb0
	lsls r3, r3, #1
	adds r1, r1, r3
	movs r2, #0x80
	bl sub_8008E64
_080A9862:
	movs r0, #0x9c
	adds r0, r0, r7
	mov r8, r0
	ldr r1, [sp, #0xd8]
	cmp r1, #3
	beq _080A9870
	b _080A9E42
_080A9870:
	adds r4, r5, r4
	add r2, sp, #0x70
	movs r3, #0xa
	ldrb r1, [r2]
	movs r0, #0x20
	rsbs r0, r0, #0
	ands r0, r1
	orrs r0, r3
	strb r0, [r2]
	movs r3, #0xa0
	lsls r3, r3, #2
	ldrh r1, [r2]
	ldr r0, _080A98D0 @ =0xFFFFFC1F
	ands r0, r1
	orrs r0, r3
	strh r0, [r2]
	ldr r0, [r4]
	mov sl, r2
	ldr r6, _080A98D4 @ =0x000014A5
	str r6, [sp, #0x74]
	add r2, sp, #0x30
	add r3, sp, #0x50
	cmp r2, r3
	beq _080A98A8
_080A98A0:
	strh r6, [r2]
	adds r2, #2
	cmp r2, r3
	bne _080A98A0
_080A98A8:
	movs r6, #9
	movs r2, #0x90
	lsls r2, r2, #1
	adds r4, r0, r2
	ldr r5, _080A98D8 @ =gUnknown_03000C2C
_080A98B2:
	mov r0, sl
	ldr r3, [r0]
	adds r0, r4, #0
	add r1, sp, #0x30
	adds r2, r4, #0
	bl sub_80D3920
	adds r4, #0x20
	adds r6, #1
	cmp r6, #0xf
	blo _080A98B2
	b _080A9E42
	.align 2, 0
_080A98CC: .4byte gUnknown_08698B00
_080A98D0: .4byte 0xFFFFFC1F
_080A98D4: .4byte 0x000014A5
_080A98D8: .4byte gUnknown_03000C2C
_080A98DC:
	ldr r0, _080A995C @ =gUnknown_086D74F8
	mov r1, sb
	lsls r2, r1, #2
	adds r1, r7, #0
	adds r1, #0x1c
	adds r4, r1, r2
	ldr r1, [r4]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r1, r1, r2
	movs r2, #0x60
	bl sub_8008E64
	movs r3, #0x9c
	adds r3, r3, r7
	mov r8, r3
	ldr r0, [sp, #0xd8]
	cmp r0, #3
	beq _080A9904
	b _080A9E42
_080A9904:
	add r2, sp, #0x78
	movs r3, #0xa
	ldrb r1, [r2]
	movs r0, #0x20
	rsbs r0, r0, #0
	ands r0, r1
	orrs r0, r3
	strb r0, [r2]
	movs r3, #0xa0
	lsls r3, r3, #2
	ldrh r1, [r2]
	ldr r0, _080A9960 @ =0xFFFFFC1F
	ands r0, r1
	orrs r0, r3
	strh r0, [r2]
	ldr r0, [r4]
	mov sl, r2
	ldr r4, _080A9964 @ =0x000014A5
	str r4, [sp, #0x7c]
	add r2, sp, #0x30
	add r3, sp, #0x50
	cmp r2, r3
	beq _080A993A
_080A9932:
	strh r4, [r2]
	adds r2, #2
	cmp r2, r3
	bne _080A9932
_080A993A:
	movs r5, #8
	movs r1, #0x80
	lsls r1, r1, #1
	adds r4, r0, r1
	ldr r6, _080A9968 @ =gUnknown_03000C2C
_080A9944:
	mov r2, sl
	ldr r3, [r2]
	adds r0, r4, #0
	add r1, sp, #0x30
	adds r2, r4, #0
	bl sub_80D3924
	adds r4, #0x20
	adds r5, #1
	cmp r5, #0xf
	blo _080A9944
	b _080A9E42
	.align 2, 0
_080A995C: .4byte gUnknown_086D74F8
_080A9960: .4byte 0xFFFFFC1F
_080A9964: .4byte 0x000014A5
_080A9968: .4byte gUnknown_03000C2C
_080A996C:
	ldr r3, [sp, #0xd8]
	cmp r3, #3
	beq _080A99A0
	cmp r6, #0
	beq _080A997C
	cmp r6, #2
	beq _080A9984
	b _080A9B7A
_080A997C:
	ldr r0, _080A9980 @ =gUnknown_086EACE4
	b _080A99AC
	.align 2, 0
_080A9980: .4byte gUnknown_086EACE4
_080A9984:
	ldr r0, _080A999C @ =gUnknown_086EAD24
	mov r3, sb
	lsls r2, r3, #2
	adds r1, r7, #0
	adds r1, #0x1c
	adds r1, r1, r2
	ldr r1, [r1]
	adds r1, #0xc0
	movs r2, #0x20
	bl sub_8008E64
	b _080A9B7A
	.align 2, 0
_080A999C: .4byte gUnknown_086EAD24
_080A99A0:
	cmp r6, #0
	beq _080A99AA
	cmp r6, #2
	beq _080A99CC
	b _080A9E3C
_080A99AA:
	ldr r0, _080A99C8 @ =gUnknown_086EAD04
_080A99AC:
	mov r1, sb
	lsls r2, r1, #2
	adds r1, r7, #0
	adds r1, #0x1c
	adds r1, r1, r2
	ldr r1, [r1]
	adds r1, #0xc0
	movs r2, #0x20
	bl sub_8008E64
	movs r2, #0x9c
	adds r2, r2, r7
	mov r8, r2
	b _080A9E42
	.align 2, 0
_080A99C8: .4byte gUnknown_086EAD04
_080A99CC:
	ldr r0, _080A99E4 @ =gUnknown_086EAD44
	mov r3, sb
	lsls r2, r3, #2
	adds r1, r7, #0
	adds r1, #0x1c
	adds r1, r1, r2
	ldr r1, [r1]
	adds r1, #0xc0
	movs r2, #0x20
	bl sub_8008E64
	b _080A9B7A
	.align 2, 0
_080A99E4: .4byte gUnknown_086EAD44
_080A99E8:
	add r0, sp, #0x30
	mov r8, r0
	movs r0, #0
	str r0, [sp, #0x30]
	mov r1, r8
	strh r0, [r1, #4]
	add r1, sp, #0x38
	str r0, [sp, #0x38]
	strh r0, [r1, #4]
	add r2, sp, #0x40
	mov sl, r2
	str r0, [sp, #0x40]
	strh r0, [r2, #4]
	add r1, sp, #0x48
	str r0, [sp, #0x48]
	strh r0, [r1, #4]
	cmp r6, #1
	beq _080A9A80
	cmp r6, #1
	bgt _080A9A16
	cmp r6, #0
	beq _080A9A1C
	b _080A9B6E
_080A9A16:
	cmp r6, #2
	beq _080A9AE4
	b _080A9B7A
_080A9A1C:
	ldr r5, [sp]
	add r4, sp, #0x80
	adds r0, r4, #0
	ldr r3, [r5, #0xc]
	mov r1, sp
	ldr r2, _080A9A7C @ =0x0000012F
	bl sub_80D3918
	ldr r0, [r4]
	ldrh r2, [r0]
	add r0, sp, #0x50
	ldr r3, [r5, #0x10]
	mov r1, sp
	bl sub_80D3918
	add r4, sp, #0x50
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	mov r0, r8
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2}
	stm r0!, {r1, r2}
	ldr r3, [sp, #0x40]
	mov r4, sb
	lsls r1, r4, #2
	adds r0, r7, #0
	adds r0, #0x1c
	adds r0, r0, r1
	ldr r0, [r0]
	movs r2, #0xb0
	lsls r2, r2, #1
	adds r1, r0, r2
	movs r2, #0
	cmp r3, #0
	beq _080A9A72
	mov r4, sl
	ldrh r2, [r4, #4]
_080A9A72:
	adds r0, r3, #0
	bl sub_8008E64
	b _080A9E3C
	.align 2, 0
_080A9A7C: .4byte 0x0000012F
_080A9A80:
	ldr r5, [sp]
	add r4, sp, #0x88
	adds r0, r4, #0
	ldr r3, [r5, #0xc]
	mov r1, sp
	ldr r2, _080A9AE0 @ =0x00000151
	bl sub_80D3918
	ldr r0, [r4]
	ldrh r2, [r0]
	add r0, sp, #0x50
	ldr r3, [r5, #0x10]
	mov r1, sp
	bl sub_80D3918
	add r4, sp, #0x50
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	mov r0, r8
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2}
	stm r0!, {r1, r2}
	ldr r3, [sp, #0x40]
	mov r4, sb
	lsls r1, r4, #2
	adds r0, r7, #0
	adds r0, #0x1c
	adds r0, r0, r1
	ldr r0, [r0]
	movs r2, #0xb0
	lsls r2, r2, #1
	adds r1, r0, r2
	movs r2, #0
	cmp r3, #0
	beq _080A9AD6
	mov r4, sl
	ldrh r2, [r4, #4]
_080A9AD6:
	adds r0, r3, #0
	bl sub_8008E64
	b _080A9E3C
	.align 2, 0
_080A9AE0: .4byte 0x00000151
_080A9AE4:
	ldr r5, [sp]
	add r4, sp, #0x90
	adds r0, r4, #0
	ldr r3, [r5, #0xc]
	mov r1, sp
	movs r2, #0x88
	lsls r2, r2, #1
	bl sub_80D3918
	ldr r0, [r4]
	ldrh r2, [r0]
	add r0, sp, #0x50
	ldr r3, [r5, #0x10]
	mov r1, sp
	bl sub_80D3918
	add r4, sp, #0x50
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	mov r0, r8
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2}
	stm r0!, {r1, r2}
	ldr r3, [sp, #0x40]
	mov r4, sb
	lsls r1, r4, #2
	adds r0, r7, #0
	adds r0, #0x1c
	adds r0, r0, r1
	ldr r0, [r0]
	movs r2, #0xb0
	lsls r2, r2, #1
	adds r1, r0, r2
	movs r2, #0
	cmp r3, #0
	beq _080A9B3C
	mov r4, sl
	ldrh r2, [r4, #4]
_080A9B3C:
	adds r0, r3, #0
	bl sub_8008E64
	b _080A9E3C
_080A9B44:
	add r1, sp, #0x30
	mov r8, r1
	movs r0, #0
	str r0, [sp, #0x30]
	strh r0, [r1, #4]
	add r1, sp, #0x38
	str r0, [sp, #0x38]
	strh r0, [r1, #4]
	add r2, sp, #0x40
	mov sl, r2
	str r0, [sp, #0x40]
	strh r0, [r2, #4]
	add r1, sp, #0x48
	str r0, [sp, #0x48]
	strh r0, [r1, #4]
	cmp r6, #1
	beq _080A9BEA
	cmp r6, #1
	bgt _080A9B76
	cmp r6, #0
	beq _080A9B82
_080A9B6E:
	movs r3, #0x9c
	adds r3, r3, r7
	mov r8, r3
	b _080A9E42
_080A9B76:
	cmp r6, #2
	beq _080A9C52
_080A9B7A:
	movs r4, #0x9c
	adds r4, r4, r7
	mov r8, r4
	b _080A9E42
_080A9B82:
	movs r2, #0x98
	lsls r2, r2, #1
	ldr r0, [sp, #0xd8]
	cmp r0, #3
	beq _080A9B8E
	subs r2, #1
_080A9B8E:
	ldr r5, [sp]
	add r4, sp, #0x98
	adds r0, r4, #0
	ldr r3, [r5, #0xc]
	mov r1, sp
	bl sub_80D3918
	ldr r0, [r4]
	ldrh r2, [r0]
	add r0, sp, #0x50
	ldr r3, [r5, #0x10]
	mov r1, sp
	bl sub_80D3918
	add r4, sp, #0x50
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	mov r0, r8
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2}
	stm r0!, {r1, r2}
	ldr r3, [sp, #0x40]
	mov r4, sb
	lsls r1, r4, #2
	adds r0, r7, #0
	adds r0, #0x1c
	adds r0, r0, r1
	ldr r0, [r0]
	movs r2, #0xb0
	lsls r2, r2, #1
	adds r1, r0, r2
	movs r2, #0
	cmp r3, #0
	beq _080A9BE2
	mov r4, sl
	ldrh r2, [r4, #4]
_080A9BE2:
	adds r0, r3, #0
	bl sub_8008E64
	b _080A9E3C
_080A9BEA:
	movs r2, #0xa9
	lsls r2, r2, #1
	ldr r1, [sp, #0xd8]
	cmp r1, #3
	beq _080A9BF6
	subs r2, #1
_080A9BF6:
	ldr r5, [sp]
	add r4, sp, #0xa0
	adds r0, r4, #0
	ldr r3, [r5, #0xc]
	mov r1, sp
	bl sub_80D3918
	ldr r0, [r4]
	ldrh r2, [r0]
	add r0, sp, #0x50
	ldr r3, [r5, #0x10]
	mov r1, sp
	bl sub_80D3918
	add r4, sp, #0x50
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	mov r0, r8
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r2, r3}
	stm r0!, {r2, r3}
	ldr r3, [sp, #0x40]
	mov r4, sb
	lsls r1, r4, #2
	adds r0, r7, #0
	adds r0, #0x1c
	adds r0, r0, r1
	ldr r0, [r0]
	movs r2, #0xb0
	lsls r2, r2, #1
	adds r1, r0, r2
	movs r2, #0
	cmp r3, #0
	beq _080A9C4A
	mov r4, sl
	ldrh r2, [r4, #4]
_080A9C4A:
	adds r0, r3, #0
	bl sub_8008E64
	b _080A9E3C
_080A9C52:
	ldr r2, _080A9CB8 @ =0x00000111
	ldr r1, [sp, #0xd8]
	cmp r1, #3
	beq _080A9C5C
	subs r2, #1
_080A9C5C:
	ldr r5, [sp]
	add r4, sp, #0xa8
	adds r0, r4, #0
	ldr r3, [r5, #0xc]
	mov r1, sp
	bl sub_80D3918
	ldr r0, [r4]
	ldrh r2, [r0]
	add r0, sp, #0x50
	ldr r3, [r5, #0x10]
	mov r1, sp
	bl sub_80D3918
	add r4, sp, #0x50
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	mov r0, r8
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r2, r3}
	stm r0!, {r2, r3}
	ldr r3, [sp, #0x40]
	mov r4, sb
	lsls r1, r4, #2
	adds r0, r7, #0
	adds r0, #0x1c
	adds r0, r0, r1
	ldr r0, [r0]
	movs r2, #0xb0
	lsls r2, r2, #1
	adds r1, r0, r2
	movs r2, #0
	cmp r3, #0
	beq _080A9CB0
	mov r4, sl
	ldrh r2, [r4, #4]
_080A9CB0:
	adds r0, r3, #0
	bl sub_8008E64
	b _080A9E3C
	.align 2, 0
_080A9CB8: .4byte 0x00000111
_080A9CBC:
	add r1, sp, #0x30
	mov sl, r1
	movs r0, #0
	str r0, [sp, #0x30]
	strh r0, [r1, #4]
	add r1, sp, #0x38
	str r0, [sp, #0x38]
	strh r0, [r1, #4]
	mov r2, sp
	adds r2, #0x40
	str r2, [sp, #0xe0]
	str r0, [sp, #0x40]
	strh r0, [r2, #4]
	add r1, sp, #0x48
	str r0, [sp, #0x48]
	strh r0, [r1, #4]
	ldr r5, [sp]
	add r4, sp, #0xb0
	adds r0, r4, #0
	ldr r3, [r5, #0xc]
	mov r1, sp
	ldr r2, _080AA074 @ =0x00000109
	bl sub_80D3918
	ldr r0, [r4]
	ldrh r2, [r0]
	add r0, sp, #0x50
	ldr r3, [r5, #0x10]
	mov r1, sp
	bl sub_80D3918
	add r6, sp, #0x50
	adds r0, r6, #0
	adds r1, r6, #0
	movs r2, #0x20
	bl sub_80D3994
	mov r1, sl
	adds r0, r6, #0
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	ldr r0, [sp, #0x40]
	adds r3, r0, #0
	mov r0, sb
	lsls r1, r0, #2
	adds r0, r7, #0
	adds r0, #0x1c
	adds r0, r0, r1
	mov r8, r0
	ldr r0, [r0]
	movs r2, #0xa0
	lsls r2, r2, #1
	adds r1, r0, r2
	movs r2, #0
	cmp r3, #0
	beq _080A9D38
	ldr r4, [sp, #0xe0]
	ldrh r2, [r4, #4]
_080A9D38:
	adds r0, r3, #0
	bl sub_8008E64
	ldr r5, [sp]
	add r4, sp, #0xb8
	adds r0, r4, #0
	ldr r3, [r5, #0xc]
	mov r1, sp
	ldr r2, _080AA078 @ =0x00000147
	bl sub_80D3918
	ldr r0, [r4]
	ldrh r2, [r0]
	adds r0, r6, #0
	ldr r3, [r5, #0x10]
	mov r1, sp
	bl sub_80D3918
	adds r0, r6, #0
	adds r1, r6, #0
	movs r2, #0x20
	bl sub_80D3994
	mov r1, sl
	adds r0, r6, #0
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r3, [sp, #0x40]
	mov r4, r8
	ldr r0, [r4]
	movs r2, #0xb0
	lsls r2, r2, #1
	adds r1, r0, r2
	movs r2, #0
	cmp r3, #0
	beq _080A9D8C
	ldr r4, [sp, #0xe0]
	ldrh r2, [r4, #4]
_080A9D8C:
	adds r0, r3, #0
	bl sub_8008E64
	ldr r5, [sp]
	add r4, sp, #0xc0
	adds r0, r4, #0
	ldr r3, [r5, #0xc]
	mov r1, sp
	movs r2, #0x40
	bl sub_80D3918
	ldr r0, [r4]
	ldrh r2, [r0]
	adds r0, r6, #0
	ldr r3, [r5, #0x10]
	mov r1, sp
	bl sub_80D3918
	adds r0, r6, #0
	adds r1, r6, #0
	movs r2, #0x20
	bl sub_80D3994
	mov r1, sl
	adds r0, r6, #0
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r3, [sp, #0x40]
	mov r4, r8
	ldr r0, [r4]
	movs r2, #0xc0
	lsls r2, r2, #1
	adds r1, r0, r2
	movs r2, #0
	cmp r3, #0
	beq _080A9DE0
	ldr r4, [sp, #0xe0]
	ldrh r2, [r4, #4]
_080A9DE0:
	adds r0, r3, #0
	bl sub_8008E64
	ldr r5, [sp]
	add r4, sp, #0xc8
	adds r0, r4, #0
	ldr r3, [r5, #0xc]
	mov r1, sp
	movs r2, #0xc8
	lsls r2, r2, #1
	bl sub_80D3918
	ldr r0, [r4]
	ldrh r2, [r0]
	adds r0, r6, #0
	ldr r3, [r5, #0x10]
	mov r1, sp
	bl sub_80D3918
	adds r0, r6, #0
	adds r1, r6, #0
	movs r2, #0x20
	bl sub_80D3994
	mov r1, sl
	adds r0, r6, #0
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r3, [sp, #0x40]
	mov r4, r8
	ldr r0, [r4]
	movs r2, #0xd0
	lsls r2, r2, #1
	adds r1, r0, r2
	movs r2, #0
	cmp r3, #0
	beq _080A9E36
	ldr r4, [sp, #0xe0]
	ldrh r2, [r4, #4]
_080A9E36:
	adds r0, r3, #0
	bl sub_8008E64
_080A9E3C:
	movs r0, #0x9c
	adds r0, r0, r7
	mov r8, r0
_080A9E42:
	ldr r0, [r7]
	cmp r0, #6
	beq _080A9E4A
	b _080AA1A6
_080A9E4A:
	ldr r0, [sp, #0xdc]
	adds r0, #0x5d
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080A9EA4
	ldr r2, _080AA07C @ =gUnknown_0810725C
	movs r0, #0
	ldr r1, [sp, #0xd8]
	cmp r1, #3
	bne _080A9E64
	movs r0, #4
_080A9E64:
	adds r1, r2, #0
	adds r1, #0x20
	adds r0, r0, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _080A9EA4
	adds r0, r2, #0
	adds r0, #0x29
	ldrb r0, [r0]
	lsls r4, r0, #8
	movs r0, #0
	ldr r3, [sp, #0xd8]
	cmp r3, #3
	bne _080A9E82
	movs r0, #4
_080A9E82:
	adds r0, r0, r1
	ldr r0, [r0]
	mov r3, sb
	lsls r1, r3, #2
	adds r3, r7, #0
	adds r3, #0x1c
	adds r3, r3, r1
	adds r1, r2, #0
	adds r1, #0x28
	ldrb r2, [r1]
	subs r2, #1
	lsls r2, r2, #5
	ldr r1, [r3]
	adds r1, r1, r2
	lsrs r2, r4, #3
	bl sub_8008E64
_080A9EA4:
	ldr r0, [sp, #0xdc]
	adds r0, #0x54
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080A9EE0
	ldr r3, _080AA080 @ =gUnknown_0810730C
	ldr r4, [r3, #0x20]
	cmp r4, #0
	beq _080A9EE0
	adds r0, r3, #0
	adds r0, #0x29
	ldrb r2, [r0]
	mov r1, sb
	lsls r0, r1, #2
	adds r1, r7, #0
	adds r1, #0x1c
	adds r1, r1, r0
	adds r0, r3, #0
	adds r0, #0x28
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #5
	ldr r1, [r1]
	adds r1, r1, r0
	lsls r2, r2, #5
	adds r0, r4, #0
	bl sub_8008E64
_080A9EE0:
	ldr r1, [sp, #0xdc]
	adds r1, #0x4e
	ldrh r0, [r1]
	lsls r0, r0, #0x17
	lsrs r0, r0, #0x1e
	adds r5, r1, #0
	cmp r0, #1
	bne _080A9F1E
	ldr r3, _080AA084 @ =gUnknown_08107230
	ldr r4, [r3, #0x20]
	cmp r4, #0
	beq _080A9F1E
	adds r0, r3, #0
	adds r0, #0x29
	ldrb r2, [r0]
	mov r1, sb
	lsls r0, r1, #2
	adds r1, r7, #0
	adds r1, #0x1c
	adds r1, r1, r0
	adds r0, r3, #0
	adds r0, #0x28
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #5
	ldr r1, [r1]
	adds r1, r1, r0
	lsls r2, r2, #5
	adds r0, r4, #0
	bl sub_8008E64
_080A9F1E:
	ldr r0, [sp, #0xdc]
	adds r0, #0x4f
	ldrb r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080A9F5A
	ldr r3, _080AA084 @ =gUnknown_08107230
	ldr r4, [r3, #0x20]
	cmp r4, #0
	beq _080A9F5A
	adds r0, r3, #0
	adds r0, #0x29
	ldrb r2, [r0]
	mov r1, sb
	lsls r0, r1, #2
	adds r1, r7, #0
	adds r1, #0x1c
	adds r1, r1, r0
	adds r0, r3, #0
	adds r0, #0x28
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #5
	ldr r1, [r1]
	adds r1, r1, r0
	lsls r2, r2, #5
	adds r0, r4, #0
	bl sub_8008E64
_080A9F5A:
	ldrb r0, [r5]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080A9FC0
	ldr r3, _080AA088 @ =gUnknown_08107204
	ldr r4, [r3, #0x20]
	cmp r4, #0
	beq _080A9F92
	adds r0, r3, #0
	adds r0, #0x29
	ldrb r2, [r0]
	mov r1, sb
	lsls r0, r1, #2
	adds r1, r7, #0
	adds r1, #0x1c
	adds r1, r1, r0
	adds r0, r3, #0
	adds r0, #0x28
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #5
	ldr r1, [r1]
	adds r1, r1, r0
	lsls r2, r2, #5
	adds r0, r4, #0
	bl sub_8008E64
_080A9F92:
	ldr r3, _080AA08C @ =gUnknown_081072B4
	ldr r4, [r3, #0x20]
	cmp r4, #0
	beq _080A9FC0
	adds r0, r3, #0
	adds r0, #0x29
	ldrb r2, [r0]
	mov r1, sb
	lsls r0, r1, #2
	adds r1, r7, #0
	adds r1, #0x1c
	adds r1, r1, r0
	adds r0, r3, #0
	adds r0, #0x28
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #5
	ldr r1, [r1]
	adds r1, r1, r0
	lsls r2, r2, #5
	adds r0, r4, #0
	bl sub_8008E64
_080A9FC0:
	ldr r0, [sp, #0xdc]
	adds r0, #0x51
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080A9FFC
	ldr r3, _080AA090 @ =gUnknown_08107288
	ldr r4, [r3, #0x20]
	cmp r4, #0
	beq _080A9FFC
	adds r0, r3, #0
	adds r0, #0x29
	ldrb r2, [r0]
	mov r1, sb
	lsls r0, r1, #2
	adds r1, r7, #0
	adds r1, #0x1c
	adds r1, r1, r0
	adds r0, r3, #0
	adds r0, #0x28
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #5
	ldr r1, [r1]
	adds r1, r1, r0
	lsls r2, r2, #5
	adds r0, r4, #0
	bl sub_8008E64
_080A9FFC:
	ldr r0, [sp, #0xdc]
	adds r0, #0x52
	ldrb r0, [r0]
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080AA038
	ldr r3, _080AA088 @ =gUnknown_08107204
	ldr r4, [r3, #0x20]
	cmp r4, #0
	beq _080AA038
	adds r0, r3, #0
	adds r0, #0x29
	ldrb r2, [r0]
	mov r1, sb
	lsls r0, r1, #2
	adds r1, r7, #0
	adds r1, #0x1c
	adds r1, r1, r0
	adds r0, r3, #0
	adds r0, #0x28
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #5
	ldr r1, [r1]
	adds r1, r1, r0
	lsls r2, r2, #5
	adds r0, r4, #0
	bl sub_8008E64
_080AA038:
	ldr r0, [sp, #0xdc]
	adds r0, #0x55
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080AA0C6
	ldr r3, _080AA088 @ =gUnknown_08107204
	ldr r4, [r3, #0x20]
	cmp r4, #0
	beq _080AA098
	adds r0, r3, #0
	adds r0, #0x29
	ldrb r2, [r0]
	mov r1, sb
	lsls r0, r1, #2
	adds r1, r7, #0
	adds r1, #0x1c
	adds r1, r1, r0
	adds r0, r3, #0
	adds r0, #0x28
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #5
	ldr r1, [r1]
	adds r1, r1, r0
	lsls r2, r2, #5
	adds r0, r4, #0
	b _080AA094
	.align 2, 0
_080AA074: .4byte 0x00000109
_080AA078: .4byte 0x00000147
_080AA07C: .4byte gUnknown_0810725C
_080AA080: .4byte gUnknown_0810730C
_080AA084: .4byte gUnknown_08107230
_080AA088: .4byte gUnknown_08107204
_080AA08C: .4byte gUnknown_081072B4
_080AA090: .4byte gUnknown_08107288
_080AA094:
	bl sub_8008E64
_080AA098:
	ldr r3, _080AA25C @ =gUnknown_081072B4
	ldr r4, [r3, #0x20]
	cmp r4, #0
	beq _080AA0C6
	adds r0, r3, #0
	adds r0, #0x29
	ldrb r2, [r0]
	mov r1, sb
	lsls r0, r1, #2
	adds r1, r7, #0
	adds r1, #0x1c
	adds r1, r1, r0
	adds r0, r3, #0
	adds r0, #0x28
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #5
	ldr r1, [r1]
	adds r1, r1, r0
	lsls r2, r2, #5
	adds r0, r4, #0
	bl sub_8008E64
_080AA0C6:
	ldr r0, [sp, #0xdc]
	adds r0, #0x56
	ldrb r0, [r0]
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080AA102
	ldr r3, _080AA260 @ =gUnknown_08107204
	ldr r4, [r3, #0x20]
	cmp r4, #0
	beq _080AA102
	adds r0, r3, #0
	adds r0, #0x29
	ldrb r2, [r0]
	mov r1, sb
	lsls r0, r1, #2
	adds r1, r7, #0
	adds r1, #0x1c
	adds r1, r1, r0
	adds r0, r3, #0
	adds r0, #0x28
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #5
	ldr r1, [r1]
	adds r1, r1, r0
	lsls r2, r2, #5
	adds r0, r4, #0
	bl sub_8008E64
_080AA102:
	ldr r0, [sp, #0xdc]
	adds r0, #0x4c
	ldrb r0, [r0]
	lsrs r0, r0, #6
	cmp r0, #1
	bne _080AA1A6
	ldr r2, _080AA264 @ =gUnknown_081072E0
	movs r0, #0
	ldr r3, [sp, #0xd8]
	cmp r3, #3
	bne _080AA11A
	movs r0, #4
_080AA11A:
	adds r1, r2, #0
	adds r1, #0x20
	adds r0, r0, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _080AA15A
	adds r0, r2, #0
	adds r0, #0x29
	ldrb r0, [r0]
	lsls r4, r0, #8
	movs r0, #0
	ldr r3, [sp, #0xd8]
	cmp r3, #3
	bne _080AA138
	movs r0, #4
_080AA138:
	adds r0, r0, r1
	ldr r0, [r0]
	mov r3, sb
	lsls r1, r3, #2
	adds r3, r7, #0
	adds r3, #0x1c
	adds r3, r3, r1
	adds r1, r2, #0
	adds r1, #0x28
	ldrb r2, [r1]
	subs r2, #1
	lsls r2, r2, #5
	ldr r1, [r3]
	adds r1, r1, r2
	lsrs r2, r4, #3
	bl sub_8008E64
_080AA15A:
	ldr r2, _080AA268 @ =gUnknown_08107230
	movs r0, #0
	ldr r4, [sp, #0xd8]
	cmp r4, #3
	bne _080AA166
	movs r0, #4
_080AA166:
	adds r1, r2, #0
	adds r1, #0x20
	adds r0, r0, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _080AA1A6
	adds r0, r2, #0
	adds r0, #0x29
	ldrb r0, [r0]
	lsls r4, r0, #8
	movs r0, #0
	ldr r3, [sp, #0xd8]
	cmp r3, #3
	bne _080AA184
	movs r0, #4
_080AA184:
	adds r0, r0, r1
	ldr r0, [r0]
	mov r3, sb
	lsls r1, r3, #2
	adds r3, r7, #0
	adds r3, #0x1c
	adds r3, r3, r1
	adds r1, r2, #0
	adds r1, #0x28
	ldrb r2, [r1]
	subs r2, #1
	lsls r2, r2, #5
	ldr r1, [r3]
	adds r1, r1, r2
	lsrs r2, r4, #3
	bl sub_8008E64
_080AA1A6:
	mov r0, r8
	bl sub_80AAF10
	adds r5, r0, #0
	mov r0, r8
	bl sub_80AAF1C
	mov r8, r0
	adds r1, r5, #0
	eors r1, r0
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _080AA23C
	mov r4, sp
	adds r4, #0x30
	str r4, [sp, #0xe4]
	mov r0, sb
	lsls r1, r0, #2
	adds r0, r7, #0
	adds r0, #0x1c
	adds r0, r0, r1
	mov sl, r0
_080AA1D4:
	ldr r0, [r5, #0x10]
	adds r6, r5, #0
	adds r6, #0x14
	movs r1, #0
	ldr r2, [sp, #0xd8]
	cmp r2, #3
	bne _080AA1E4
	movs r1, #1
_080AA1E4:
	bl sub_80AAF28
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	ldr r4, [sp]
	add r0, sp, #0xd0
	ldr r3, [r4, #0xc]
	mov r1, sp
	bl sub_80D3918
	add r0, sp, #0xd0
	ldr r0, [r0]
	ldrh r2, [r0]
	ldr r0, [sp, #0xe4]
	ldr r3, [r4, #0x10]
	mov r1, sp
	bl sub_80D3918
	ldr r3, [sp, #0x40]
	ldrb r0, [r6, #2]
	lsls r0, r0, #5
	mov r4, sl
	ldr r1, [r4]
	adds r1, r1, r0
	add r0, sp, #0x40
	movs r2, #0
	cmp r3, #0
	beq _080AA220
	ldrh r2, [r0, #4]
_080AA220:
	adds r0, r3, #0
	bl sub_8008E64
	adds r0, r5, #0
	bl sub_80E2B28
	adds r5, r0, #0
	adds r1, r5, #0
	mov r0, r8
	eors r1, r0
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _080AA1D4
_080AA23C:
	adds r0, r7, #0
	ldr r1, [sp, #0xd8]
	mov r2, sb
	bl sub_80AA270
	ldr r0, _080AA26C @ =gUnknown_080E5A28
	str r0, [sp]
	add sp, #0xe8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080AA25C: .4byte gUnknown_081072B4
_080AA260: .4byte gUnknown_08107204
_080AA264: .4byte gUnknown_081072E0
_080AA268: .4byte gUnknown_08107230
_080AA26C: .4byte gUnknown_080E5A28

	thumb_func_start sub_80AA270
sub_80AA270: @ 0x080AA270
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x4c
	adds r6, r0, #0
	adds r5, r1, #0
	mov sb, r2
	adds r4, r6, #0
	adds r4, #0x94
	ldr r0, [r4]
	adds r0, #0x10
	bl sub_800E324
	mov sl, r0
	ldr r1, [r6]
	ldr r0, [r4]
	adds r0, #8
	cmp r1, #0x2e
	beq _080AA2AC
	cmp r1, #0x2e
	ble _080AA2A4
	cmp r1, #0x2f
	beq _080AA2B0
	b _080AA2B4
_080AA2A4:
	cmp r1, #0x2c
	blt _080AA2B4
	movs r7, #0
	b _080AA2B6
_080AA2AC:
	movs r7, #1
	b _080AA2B6
_080AA2B0:
	movs r7, #2
	b _080AA2B6
_080AA2B4:
	ldr r7, [r0]
_080AA2B6:
	ldr r0, [r6, #4]
	bl sub_80A4698
	adds r0, #0x24
	ldrb r0, [r0]
	movs r4, #1
	adds r1, r4, #0
	eors r1, r0
	mov r8, r1
	ldr r0, [r6, #4]
	bl sub_80A4698
	adds r0, #0x24
	ldrb r0, [r0]
	adds r1, r4, #0
	eors r1, r0
	str r1, [sp, #0x48]
	movs r4, #0
	ldr r0, [r6, #4]
	bl sub_80A4698
	adds r0, #0x24
	ldrb r0, [r0]
	cmp r0, #0
	bne _080AA2F0
	subs r0, r7, #1
	cmp r0, #1
	bhi _080AA2F0
	movs r4, #1
_080AA2F0:
	cmp r4, #0
	beq _080AA35C
	mov r1, sb
	lsls r0, r1, #2
	adds r3, r6, #0
	adds r3, #0x1c
	adds r3, r3, r0
	add r2, sp, #0x20
	movs r4, #0xa
	ldrb r1, [r2]
	movs r0, #0x20
	rsbs r0, r0, #0
	ands r0, r1
	orrs r0, r4
	strb r0, [r2]
	movs r4, #0xa0
	lsls r4, r4, #2
	ldrh r1, [r2]
	ldr r0, _080AA350 @ =0xFFFFFC1F
	ands r0, r1
	orrs r0, r4
	strh r0, [r2]
	ldr r0, [r3]
	adds r6, r2, #0
	ldr r2, _080AA354 @ =0x000031AE
	str r2, [sp, #0x24]
	mov r1, sp
	adds r5, r6, #0
	cmp sp, r6
	beq _080AA334
_080AA32C:
	strh r2, [r1]
	adds r1, #2
	cmp r1, r5
	bne _080AA32C
_080AA334:
	movs r5, #0
	adds r4, r0, #0
	ldr r7, _080AA358 @ =gUnknown_03000C2C
_080AA33A:
	ldr r3, [r6]
	adds r0, r4, #0
	mov r1, sp
	adds r2, r4, #0
	bl sub_80D3928
	adds r4, #0x20
	adds r5, #1
	cmp r5, #0xf
	blo _080AA33A
	b _080AA522
	.align 2, 0
_080AA350: .4byte 0xFFFFFC1F
_080AA354: .4byte 0x000031AE
_080AA358: .4byte gUnknown_03000C2C
_080AA35C:
	mov r0, r8
	cmp r0, #0
	beq _080AA43A
	cmp r5, #1
	beq _080AA43A
	cmp r5, #1
	bgt _080AA370
	cmp r5, #0
	beq _080AA376
	b _080AA43A
_080AA370:
	cmp r5, #2
	beq _080AA3DC
	b _080AA43A
_080AA376:
	mov r1, sb
	lsls r0, r1, #2
	adds r3, r6, #0
	adds r3, #0x1c
	adds r3, r3, r0
	add r2, sp, #0x28
	movs r4, #9
	ldrb r1, [r2]
	movs r0, #0x20
	rsbs r0, r0, #0
	ands r0, r1
	orrs r0, r4
	strb r0, [r2]
	movs r4, #0xa8
	lsls r4, r4, #2
	ldrh r1, [r2]
	ldr r0, _080AA3D4 @ =0xFFFFFC1F
	ands r0, r1
	orrs r0, r4
	strh r0, [r2]
	ldr r0, [r3]
	mov r8, r2
	adds r4, #0x23
	str r4, [sp, #0x2c]
	mov r1, sp
	add r2, sp, #0x20
	cmp sp, r2
	beq _080AA3B6
_080AA3AE:
	strh r4, [r1]
	adds r1, #2
	cmp r1, r2
	bne _080AA3AE
_080AA3B6:
	movs r5, #0
	adds r4, r0, #0
	ldr r7, _080AA3D8 @ =gUnknown_03000C2C
_080AA3BC:
	mov r0, r8
	ldr r3, [r0]
	adds r0, r4, #0
	mov r1, sp
	adds r2, r4, #0
	bl sub_80D3928
	adds r4, #0x20
	adds r5, #1
	cmp r5, #0xf
	blo _080AA3BC
	b _080AA43A
	.align 2, 0
_080AA3D4: .4byte 0xFFFFFC1F
_080AA3D8: .4byte gUnknown_03000C2C
_080AA3DC:
	mov r1, sb
	lsls r0, r1, #2
	adds r3, r6, #0
	adds r3, #0x1c
	adds r3, r3, r0
	add r2, sp, #0x30
	movs r4, #3
	ldrb r1, [r2]
	movs r0, #0x20
	rsbs r0, r0, #0
	ands r0, r1
	orrs r0, r4
	strb r0, [r2]
	movs r4, #0xd8
	lsls r4, r4, #2
	ldrh r1, [r2]
	ldr r0, _080AA450 @ =0xFFFFFC1F
	ands r0, r1
	orrs r0, r4
	strh r0, [r2]
	ldr r3, [r3]
	mov r8, r2
	movs r0, #0x1f
	str r0, [sp, #0x34]
	mov r0, sp
	add r1, sp, #0x20
	cmp sp, r1
	beq _080AA41E
	movs r2, #0x1f
_080AA416:
	strh r2, [r0]
	adds r0, #2
	cmp r0, r1
	bne _080AA416
_080AA41E:
	movs r5, #0
	adds r4, r3, #0
	ldr r7, _080AA454 @ =gUnknown_03000C2C
_080AA424:
	mov r0, r8
	ldr r3, [r0]
	adds r0, r4, #0
	mov r1, sp
	adds r2, r4, #0
	bl sub_80D3928
	adds r4, #0x20
	adds r5, #1
	cmp r5, #0xf
	blo _080AA424
_080AA43A:
	ldr r1, [sp, #0x48]
	cmp r1, #0
	beq _080AA522
	mov r0, sl
	cmp r0, #1
	beq _080AA522
	cmp r0, #1
	bgt _080AA458
	cmp r0, #0
	beq _080AA460
	b _080AA522
	.align 2, 0
_080AA450: .4byte 0xFFFFFC1F
_080AA454: .4byte gUnknown_03000C2C
_080AA458:
	mov r1, sl
	cmp r1, #2
	beq _080AA4C8
	b _080AA522
_080AA460:
	mov r1, sb
	lsls r0, r1, #2
	adds r3, r6, #0
	adds r3, #0x1c
	adds r3, r3, r0
	add r2, sp, #0x38
	movs r4, #4
	ldrb r1, [r2]
	movs r0, #0x20
	rsbs r0, r0, #0
	ands r0, r1
	orrs r0, r4
	strb r0, [r2]
	movs r4, #0xd0
	lsls r4, r4, #2
	ldrh r1, [r2]
	ldr r0, _080AA4BC @ =0xFFFFFC1F
	ands r0, r1
	orrs r0, r4
	strh r0, [r2]
	ldr r0, [r3]
	adds r7, r2, #0
	ldr r5, _080AA4C0 @ =0x000003DF
	str r5, [sp, #0x3c]
	mov r1, sp
	add r2, sp, #0x20
	cmp sp, r2
	beq _080AA4A0
_080AA498:
	strh r5, [r1]
	adds r1, #2
	cmp r1, r2
	bne _080AA498
_080AA4A0:
	movs r5, #0
	adds r4, r0, #0
	ldr r6, _080AA4C4 @ =gUnknown_03000C2C
_080AA4A6:
	ldr r3, [r7]
	adds r0, r4, #0
	mov r1, sp
	adds r2, r4, #0
	bl sub_80D3924
	adds r4, #0x20
	adds r5, #1
	cmp r5, #0xf
	blo _080AA4A6
	b _080AA522
	.align 2, 0
_080AA4BC: .4byte 0xFFFFFC1F
_080AA4C0: .4byte 0x000003DF
_080AA4C4: .4byte gUnknown_03000C2C
_080AA4C8:
	mov r1, sb
	lsls r0, r1, #2
	adds r3, r6, #0
	adds r3, #0x1c
	adds r3, r3, r0
	add r2, sp, #0x40
	movs r4, #4
	ldrb r1, [r2]
	movs r0, #0x20
	rsbs r0, r0, #0
	ands r0, r1
	orrs r0, r4
	strb r0, [r2]
	movs r4, #0xd0
	lsls r4, r4, #2
	ldrh r1, [r2]
	ldr r0, _080AA534 @ =0xFFFFFC1F
	ands r0, r1
	orrs r0, r4
	strh r0, [r2]
	ldr r0, [r3]
	adds r7, r2, #0
	ldr r5, _080AA538 @ =0x0000559F
	str r5, [sp, #0x44]
	mov r1, sp
	add r2, sp, #0x20
	cmp sp, r2
	beq _080AA508
_080AA500:
	strh r5, [r1]
	adds r1, #2
	cmp r1, r2
	bne _080AA500
_080AA508:
	movs r5, #0
	adds r4, r0, #0
	ldr r6, _080AA53C @ =gUnknown_03000C2C
_080AA50E:
	ldr r3, [r7]
	adds r0, r4, #0
	mov r1, sp
	adds r2, r4, #0
	bl sub_80D3924
	adds r4, #0x20
	adds r5, #1
	cmp r5, #0xf
	blo _080AA50E
_080AA522:
	add sp, #0x4c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080AA534: .4byte 0xFFFFFC1F
_080AA538: .4byte 0x0000559F
_080AA53C: .4byte gUnknown_03000C2C

	thumb_func_start sub_80AA540
sub_80AA540: @ 0x080AA540
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	mov sb, r0
	mov sl, r1
	adds r7, r2, #0
	str r3, [sp]
	ldr r5, [sp, #0x24]
	ldr r0, [r0, #4]
	bl sub_80A4698
	ldrh r0, [r0, #0x20]
	mov r8, r0
	cmp r5, #0
	beq _080AA5BC
	subs r0, r7, #1
	mov r1, r8
	muls r1, r0, r1
	adds r0, r1, #0
	mov r2, sb
	ldr r1, [r2, #0x18]
	lsls r0, r0, #1
	mov r3, sl
	lsls r4, r3, #1
	adds r1, r4, r1
	adds r0, r0, r1
	adds r1, r5, #0
	movs r2, #4
	bl sub_80D3994
	mov r0, r8
	muls r0, r7, r0
	mov r2, sb
	ldr r1, [r2, #0x14]
	lsls r0, r0, #1
	adds r1, r4, r1
	adds r0, r0, r1
	adds r1, r5, #4
	movs r2, #4
	bl sub_80D3994
	adds r0, r7, #1
	mov r3, r8
	muls r3, r0, r3
	adds r0, r3, #0
	mov r2, sb
	ldr r1, [r2, #0x14]
	lsls r0, r0, #1
	adds r4, r4, r1
	adds r0, r0, r4
	adds r1, r5, #0
	adds r1, #8
	movs r2, #4
	bl sub_80D3994
	mov r1, sb
	adds r1, #0x29
	movs r0, #1
	strb r0, [r1]
_080AA5BC:
	movs r3, #0
	mov ip, r3
	mov r6, r8
	muls r6, r7, r6
	adds r5, r7, #1
	ldr r0, [sp]
	cmp r0, #4
	bhi _080AA67A
	lsls r0, r0, #2
	ldr r1, _080AA5D8 @ =_080AA5DC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080AA5D8: .4byte _080AA5DC
_080AA5DC: @ jump table
	.4byte _080AA67A @ case 0
	.4byte _080AA67A @ case 1
	.4byte _080AA5F0 @ case 2
	.4byte _080AA620 @ case 3
	.4byte _080AA670 @ case 4
_080AA5F0:
	mov r6, r8
	muls r6, r7, r6
	mov r1, sl
	adds r2, r1, r6
	mov r3, sb
	ldr r0, [r3, #0x2c]
	lsls r2, r2, #2
	adds r2, r2, r0
	adds r5, r7, #1
	mov r1, r8
	muls r1, r5, r1
	add r1, sl
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r0, [r1, #4]
	ldr r4, _080AA618 @ =0xFFFE0003
	ands r0, r4
	ldr r3, _080AA61C @ =0x00000F48
	b _080AA644
	.align 2, 0
_080AA618: .4byte 0xFFFE0003
_080AA61C: .4byte 0x00000F48
_080AA620:
	mov r6, r8
	muls r6, r7, r6
	mov r1, sl
	adds r2, r1, r6
	mov r3, sb
	ldr r0, [r3, #0x2c]
	lsls r2, r2, #2
	adds r2, r2, r0
	adds r5, r7, #1
	mov r1, r8
	muls r1, r5, r1
	add r1, sl
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r0, [r1, #4]
	ldr r4, _080AA668 @ =0xFFFE0003
	ands r0, r4
	ldr r3, _080AA66C @ =0x00000F4C
_080AA644:
	orrs r0, r3
	str r0, [r1, #4]
	ldr r0, [r1]
	ands r0, r4
	orrs r0, r3
	str r0, [r1]
	ldr r0, [r2, #4]
	ands r0, r4
	orrs r0, r3
	str r0, [r2, #4]
	ldr r0, [r2]
	ands r0, r4
	orrs r0, r3
	str r0, [r2]
	movs r0, #0
	mov ip, r0
	b _080AA67A
	.align 2, 0
_080AA668: .4byte 0xFFFE0003
_080AA66C: .4byte 0x00000F4C
_080AA670:
	movs r1, #1
	mov ip, r1
	mov r6, r8
	muls r6, r7, r6
	adds r5, r7, #1
_080AA67A:
	mov r2, sl
	adds r4, r2, r6
	mov r3, sb
	ldr r0, [r3, #0x2c]
	lsls r4, r4, #2
	adds r4, r4, r0
	mov r1, r8
	muls r1, r5, r1
	add r1, sl
	lsls r1, r1, #2
	adds r1, r1, r0
	ldrb r3, [r1, #4]
	movs r2, #2
	rsbs r2, r2, #0
	adds r0, r2, #0
	ands r0, r3
	mov r3, ip
	orrs r0, r3
	strb r0, [r1, #4]
	mov r5, ip
	ldrb r3, [r1]
	adds r0, r2, #0
	ands r0, r3
	orrs r0, r5
	strb r0, [r1]
	ldrb r1, [r4, #4]
	adds r0, r2, #0
	ands r0, r1
	orrs r0, r5
	strb r0, [r4, #4]
	ldrb r0, [r4]
	ands r2, r0
	orrs r2, r5
	strb r2, [r4]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80AA6D0
sub_80AA6D0: @ 0x080AA6D0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r7, r0, #0
	str r1, [sp]
	adds r6, r2, #0
	str r3, [sp, #4]
	ldr r0, [r7, #4]
	bl sub_80A4698
	ldrh r0, [r0, #0x20]
	mov sl, r0
	ldr r0, [sp, #4]
	bl sub_800AF20
	adds r5, r0, #0
	cmp r5, #0
	beq _080AA732
	mov r0, sl
	muls r0, r6, r0
	ldr r1, [r7, #0x10]
	lsls r0, r0, #1
	ldr r2, [sp]
	lsls r4, r2, #1
	adds r1, r4, r1
	adds r0, r0, r1
	adds r1, r5, #0
	movs r2, #4
	bl sub_80D3994
	adds r0, r6, #1
	mov r1, sl
	muls r1, r0, r1
	adds r0, r1, #0
	ldr r1, [r7, #0x10]
	lsls r0, r0, #1
	adds r4, r4, r1
	adds r0, r0, r4
	adds r1, r5, #4
	movs r2, #4
	bl sub_80D3994
	adds r1, r7, #0
	adds r1, #0x29
	movs r0, #1
	strb r0, [r1]
_080AA732:
	mov r5, sl
	muls r5, r6, r5
	adds r2, r6, #1
	str r2, [sp, #8]
	ldr r0, [sp, #0x2c]
	cmp r0, #0
	beq _080AA78E
	subs r0, r6, #1
	mov r1, sl
	muls r1, r0, r1
	adds r0, r1, #0
	ldr r1, [r7, #0x18]
	lsls r0, r0, #1
	ldr r2, [sp]
	lsls r4, r2, #1
	adds r1, r4, r1
	adds r0, r0, r1
	ldr r1, [sp, #0x2c]
	movs r2, #4
	bl sub_80D3994
	ldr r1, [r7, #0x14]
	lsls r0, r5, #1
	adds r1, r4, r1
	adds r0, r0, r1
	ldr r1, [sp, #0x2c]
	adds r1, #4
	movs r2, #4
	bl sub_80D3994
	ldr r1, [sp, #8]
	mov r0, sl
	muls r0, r1, r0
	ldr r1, [r7, #0x14]
	lsls r0, r0, #1
	adds r4, r4, r1
	adds r0, r0, r4
	ldr r1, [sp, #0x2c]
	adds r1, #8
	movs r2, #4
	bl sub_80D3994
	adds r1, r7, #0
	adds r1, #0x29
	movs r0, #1
	strb r0, [r1]
_080AA78E:
	ldr r0, [sp, #4]
	bl sub_800A07C
	ldr r2, [sp]
	adds r2, r2, r5
	mov r8, r2
	ldr r2, [r7, #0x2c]
	mov r1, r8
	lsls r1, r1, #2
	mov r8, r1
	adds r1, r1, r2
	mov sb, r1
	ldr r1, [sp, #8]
	mov r4, sl
	muls r4, r1, r4
	ldr r1, [sp]
	adds r4, r1, r4
	lsls r4, r4, #2
	adds r2, r4, r2
	movs r6, #1
	adds r5, r6, #0
	ands r5, r0
	ldrb r3, [r2, #4]
	movs r1, #2
	rsbs r1, r1, #0
	adds r0, r1, #0
	ands r0, r3
	orrs r0, r5
	strb r0, [r2, #4]
	ldrb r3, [r2]
	adds r0, r1, #0
	ands r0, r3
	orrs r0, r5
	strb r0, [r2]
	mov r0, sb
	ldrb r2, [r0, #4]
	adds r0, r1, #0
	ands r0, r2
	orrs r0, r5
	mov r2, sb
	strb r0, [r2, #4]
	ldrb r0, [r2]
	ands r1, r0
	orrs r1, r5
	strb r1, [r2]
	ldr r0, [sp, #4]
	bl sub_800A0A4
	ldr r1, [r7, #0x2c]
	add r8, r1
	movs r2, #4
	add r2, r8
	mov sb, r2
	adds r4, r4, r1
	adds r3, r4, #4
	lsls r5, r0, #1
	ldrh r2, [r3, #2]
	adds r1, r6, #0
	ands r1, r2
	orrs r1, r5
	strh r1, [r3, #2]
	ldr r1, _080AA84C @ =0x00007FFF
	adds r5, r1, #0
	ands r0, r5
	lsls r3, r0, #1
	ldrh r2, [r4, #2]
	adds r1, r6, #0
	ands r1, r2
	orrs r1, r3
	strh r1, [r4, #2]
	ands r0, r5
	lsls r3, r0, #1
	mov r1, sb
	ldrh r2, [r1, #2]
	adds r1, r6, #0
	ands r1, r2
	orrs r1, r3
	mov r2, sb
	strh r1, [r2, #2]
	ands r0, r5
	lsls r0, r0, #1
	mov r2, r8
	ldrh r1, [r2, #2]
	ands r6, r1
	orrs r6, r0
	strh r6, [r2, #2]
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080AA84C: .4byte 0x00007FFF

	thumb_func_start sub_80AA850
sub_80AA850: @ 0x080AA850
	push {r4, r5, r6, lr}
	sub sp, #0xc
	adds r5, r0, #0
	adds r6, r1, #0
	adds r4, r5, #0
	adds r4, #0x94
	ldr r0, [r4]
	adds r0, #0x10
	bl sub_800E324
	ldr r1, [r4]
	ldr r2, _080AA898 @ =0x000034D8
	adds r1, r1, r2
	movs r3, #0
	cmp r0, #3
	bne _080AA872
	movs r3, #1
_080AA872:
	mov r0, sp
	adds r2, r6, #0
	bl sub_809C510
	ldr r1, [sp]
	ldr r2, [sp, #4]
	ldr r3, [sp, #8]
	adds r0, r5, #0
	bl sub_80A5BD8
	adds r1, r5, #0
	adds r1, #0x29
	movs r0, #1
	strb r0, [r1]
	add sp, #0xc
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080AA898: .4byte 0x000034D8

	thumb_func_start sub_80AA89C
sub_80AA89C: @ 0x080AA89C
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, _080AA8B8 @ =gUnknown_08106DAC
	movs r2, #0x21
	movs r3, #0x14
	bl sub_80A5BD8
	adds r4, #0x29
	movs r0, #1
	strb r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080AA8B8: .4byte gUnknown_08106DAC

	thumb_func_start sub_80AA8BC
sub_80AA8BC: @ 0x080AA8BC
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, _080AA8D8 @ =gUnknown_08106DAC
	movs r2, #0x21
	movs r3, #0x17
	bl sub_80A5BD8
	adds r4, #0x29
	movs r0, #1
	strb r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080AA8D8: .4byte gUnknown_08106DAC

	thumb_func_start sub_80AA8DC
sub_80AA8DC: @ 0x080AA8DC
	push {lr}
	adds r1, r0, #0
	ldr r0, [r1]
	cmp r0, #0x1d
	bne _080AA8EC
	adds r1, #0x98
	movs r0, #1
	strb r0, [r1]
_080AA8EC:
	pop {r0}
	bx r0

	thumb_func_start sub_80AA8F0
sub_80AA8F0: @ 0x080AA8F0
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r5, r0, #0
	adds r5, #0x94
	ldr r0, [r5]
	ldr r1, _080AA96C @ =0x00001CD4
	adds r7, r0, r1
	adds r0, r7, #0
	bl sub_80A0504
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080AA9B6
	adds r0, r7, #0
	bl sub_80A041C
	cmp r0, #0
	bne _080AA9B6
	ldr r0, [r5]
	ldr r2, _080AA970 @ =0x00001C34
	adds r4, r0, r2
	movs r6, #0
	adds r0, r4, #0
	bl sub_800DC34
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080AA93C
	adds r0, r4, #0
	bl sub_800DC10
	adds r1, r0, #0
	add r0, sp, #0x18
	strb r1, [r0]
	bl sub_800DB30
	cmp r0, #0x4b
	beq _080AA964
_080AA93C:
	ldr r0, [r5]
	ldr r3, _080AA974 @ =0x00001C38
	adds r0, r0, r3
	movs r1, #0x4b
	bl sub_800F92C
	adds r4, r0, #0
	movs r0, #1
	rsbs r0, r0, #0
	cmp r4, r0
	bne _080AA964
	ldr r0, [r5]
	movs r1, #0xe0
	lsls r1, r1, #2
	adds r0, r0, r1
	movs r1, #0x4b
	bl sub_800B544
	cmp r0, r4
	beq _080AA966
_080AA964:
	movs r6, #1
_080AA966:
	cmp r6, #0
	beq _080AA97C
	b _080AA9B6
	.align 2, 0
_080AA96C: .4byte 0x00001CD4
_080AA970: .4byte 0x00001C34
_080AA974: .4byte 0x00001C38
_080AA978:
	movs r0, #1
	b _080AA9B8
_080AA97C:
	mov r1, sp
	ldr r0, _080AA9C0 @ =gUnknown_08107438
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	movs r6, #0
	mov r5, sp
_080AA98C:
	ldr r1, [r5]
	adds r0, r7, #0
	bl sub_80A01F8
	adds r4, r0, #0
	cmp r4, #0
	beq _080AA9AE
	bl sub_809E498
	ldr r1, _080AA9C4 @ =0x0000C34F
	cmp r0, r1
	bls _080AA9AE
	adds r0, r4, #0
	bl sub_809E4AC
	cmp r0, #3
	bls _080AA978
_080AA9AE:
	adds r5, #4
	adds r6, #1
	cmp r6, #5
	bls _080AA98C
_080AA9B6:
	movs r0, #0
_080AA9B8:
	add sp, #0x1c
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080AA9C0: .4byte gUnknown_08107438
_080AA9C4: .4byte 0x0000C34F

	thumb_func_start sub_80AA9C8
sub_80AA9C8: @ 0x080AA9C8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r1, [r4, #4]
	ldr r0, [r6]
	cmp r1, r0
	beq _080AA9E2
	b _080AACA6
_080AA9E2:
	mov r2, sp
	ldr r1, _080AAA10 @ =0x0000FFFF
	mov r0, sp
	strh r1, [r0]
	movs r0, #0xff
	strb r0, [r2, #2]
	movs r5, #0
	mov r8, r5
	mov sl, r5
	movs r0, #0
	str r0, [sp, #0xc]
	movs r1, #0
	str r1, [sp, #0x10]
	ldr r2, [r4]
	cmp r2, #0x15
	bls _080AAA04
	b _080AAB7C
_080AAA04:
	lsls r0, r2, #2
	ldr r1, _080AAA14 @ =_080AAA18
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080AAA10: .4byte 0x0000FFFF
_080AAA14: .4byte _080AAA18
_080AAA18: @ jump table
	.4byte _080AAA70 @ case 0
	.4byte _080AAA70 @ case 1
	.4byte _080AAA70 @ case 2
	.4byte _080AAA70 @ case 3
	.4byte _080AAA70 @ case 4
	.4byte _080AAA70 @ case 5
	.4byte _080AAA70 @ case 6
	.4byte _080AAA70 @ case 7
	.4byte _080AAA70 @ case 8
	.4byte _080AAA70 @ case 9
	.4byte _080AAA70 @ case 10
	.4byte _080AAA70 @ case 11
	.4byte _080AAA70 @ case 12
	.4byte _080AAA70 @ case 13
	.4byte _080AAA70 @ case 14
	.4byte _080AAA70 @ case 15
	.4byte _080AAA70 @ case 16
	.4byte _080AAA70 @ case 17
	.4byte _080AAAB0 @ case 18
	.4byte _080AAA80 @ case 19
	.4byte _080AAB54 @ case 20
	.4byte _080AAB00 @ case 21
_080AAA70:
	adds r1, r6, #0
	adds r1, #0x9c
	add r0, sp, #4
	bl sub_80AAE44
	ldr r0, [sp, #4]
	str r0, [sp]
	b _080AAB7C
_080AAA80:
	movs r5, #1
	ldr r0, [r6, #4]
	cmp r0, #0xe
	beq _080AAA8E
	cmp r0, #0xf
	beq _080AAA98
	b _080AACA6
_080AAA8E:
	ldr r0, _080AAA94 @ =gUnknown_086DCC88
	mov r8, r0
	b _080AAA9C
	.align 2, 0
_080AAA94: .4byte gUnknown_086DCC88
_080AAA98:
	ldr r1, _080AAAA8 @ =gUnknown_086DDDEC
	mov r8, r1
_080AAA9C:
	movs r0, #4
	mov sl, r0
	movs r1, #4
	str r1, [sp, #0xc]
	ldr r0, _080AAAAC @ =0x000003CB
	b _080AAB7A
	.align 2, 0
_080AAAA8: .4byte gUnknown_086DDDEC
_080AAAAC: .4byte 0x000003CB
_080AAAB0:
	movs r5, #1
	ldr r0, [r6, #4]
	cmp r0, #0xd
	beq _080AAAEC
	cmp r0, #0xd
	bgt _080AAAC2
	cmp r0, #0xc
	beq _080AAAE0
	b _080AACA6
_080AAAC2:
	cmp r0, #0xe
	beq _080AAACC
	cmp r0, #0xf
	beq _080AAAD8
	b _080AACA6
_080AAACC:
	ldr r1, _080AAAD4 @ =gUnknown_086DC57C
	mov r8, r1
	b _080AAAF0
	.align 2, 0
_080AAAD4: .4byte gUnknown_086DC57C
_080AAAD8:
	ldr r0, _080AAADC @ =gUnknown_086DD6E0
	b _080AAAEE
	.align 2, 0
_080AAADC: .4byte gUnknown_086DD6E0
_080AAAE0:
	ldr r1, _080AAAE8 @ =gUnknown_086EACDC
	mov r8, r1
	b _080AAAF0
	.align 2, 0
_080AAAE8: .4byte gUnknown_086EACDC
_080AAAEC:
	ldr r0, _080AAAFC @ =gUnknown_086EAD84
_080AAAEE:
	mov r8, r0
_080AAAF0:
	movs r1, #2
	mov sl, r1
	movs r0, #2
	str r0, [sp, #0xc]
	b _080AAB7C
	.align 2, 0
_080AAAFC: .4byte gUnknown_086EAD84
_080AAB00:
	movs r5, #1
	ldr r0, [r6, #4]
	cmp r0, #0xd
	beq _080AAB3C
	cmp r0, #0xd
	bgt _080AAB12
	cmp r0, #0xc
	beq _080AAB30
	b _080AACA6
_080AAB12:
	cmp r0, #0xe
	beq _080AAB1C
	cmp r0, #0xf
	beq _080AAB28
	b _080AACA6
_080AAB1C:
	ldr r1, _080AAB24 @ =gUnknown_086DD690
	mov r8, r1
	b _080AAB40
	.align 2, 0
_080AAB24: .4byte gUnknown_086DD690
_080AAB28:
	ldr r0, _080AAB2C @ =gUnknown_086DE7F4
	b _080AAB3E
	.align 2, 0
_080AAB2C: .4byte gUnknown_086DE7F4
_080AAB30:
	ldr r1, _080AAB38 @ =gUnknown_086EAD64
	mov r8, r1
	b _080AAB40
	.align 2, 0
_080AAB38: .4byte gUnknown_086EAD64
_080AAB3C:
	ldr r0, _080AAB50 @ =gUnknown_086EAD8C
_080AAB3E:
	mov r8, r0
_080AAB40:
	movs r1, #4
	mov sl, r1
	movs r0, #4
	str r0, [sp, #0xc]
	movs r1, #0xf3
	lsls r1, r1, #2
	str r1, [sp, #0x10]
	b _080AAB7C
	.align 2, 0
_080AAB50: .4byte gUnknown_086EAD8C
_080AAB54:
	movs r5, #1
	ldr r0, [r6, #4]
	cmp r0, #0xe
	beq _080AAB62
	cmp r0, #0xf
	beq _080AAB6C
	b _080AACA6
_080AAB62:
	ldr r0, _080AAB68 @ =gUnknown_086DC54C
	mov r8, r0
	b _080AAB70
	.align 2, 0
_080AAB68: .4byte gUnknown_086DC54C
_080AAB6C:
	ldr r1, _080AAC28 @ =gUnknown_086DD6B0
	mov r8, r1
_080AAB70:
	movs r0, #6
	mov sl, r0
	movs r1, #4
	str r1, [sp, #0xc]
	ldr r0, _080AAC2C @ =0x000003C9
_080AAB7A:
	str r0, [sp, #0x10]
_080AAB7C:
	ldr r0, [r6, #4]
	bl sub_80A4698
	ldrh r0, [r0, #0x20]
	str r0, [sp, #0x14]
	movs r1, #8
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bge _080AAB90
	adds r0, #7
_080AAB90:
	asrs r2, r0, #3
	movs r0, #0xa
	ldrsh r1, [r4, r0]
	cmp r1, #0
	bge _080AAB9C
	adds r1, #7
_080AAB9C:
	asrs r1, r1, #3
	add r0, sp, #8
	strh r2, [r0]
	strh r1, [r0, #2]
	cmp r5, #0
	beq _080AAC30
	adds r1, r6, #0
	adds r1, #0x29
	str r1, [sp, #0x18]
	mov r0, r8
	cmp r0, #0
	beq _080AACA0
	movs r7, #0
	ldr r1, [sp, #0xc]
	cmp r7, r1
	bhs _080AACA0
_080AABBC:
	movs r5, #0
	adds r0, r7, #1
	mov sb, r0
	cmp r5, sl
	bhs _080AAC1C
	mov r0, sl
	muls r0, r7, r0
	ldr r1, [sp, #0x10]
	lsls r1, r1, #1
	mov ip, r1
	lsls r0, r0, #1
	mov r1, r8
	adds r4, r1, r0
_080AABD6:
	mov r0, sp
	movs r1, #8
	ldrsh r2, [r0, r1]
	adds r2, r2, r5
	add r0, sp, #8
	movs r1, #2
	ldrsh r0, [r0, r1]
	adds r0, r0, r7
	ldr r1, [sp, #0x14]
	muls r0, r1, r0
	adds r2, r2, r0
	lsls r1, r2, #1
	ldr r0, [r6, #0x14]
	adds r0, r0, r1
	ldrh r1, [r4]
	strh r1, [r0]
	ldr r3, [r6, #0x2c]
	lsls r2, r2, #2
	adds r3, r2, r3
	ldrb r0, [r3]
	movs r1, #1
	orrs r0, r1
	strb r0, [r3]
	ldr r0, [r6, #0x2c]
	adds r2, r2, r0
	ldrh r1, [r2, #2]
	movs r0, #1
	ands r0, r1
	mov r1, ip
	orrs r0, r1
	strh r0, [r2, #2]
	adds r4, #2
	adds r5, #1
	cmp r5, sl
	blo _080AABD6
_080AAC1C:
	mov r7, sb
	ldr r0, [sp, #0xc]
	cmp r7, r0
	blo _080AABBC
	b _080AACA0
	.align 2, 0
_080AAC28: .4byte gUnknown_086DD6B0
_080AAC2C: .4byte 0x000003C9
_080AAC30:
	movs r5, #0
	adds r1, r6, #0
	adds r1, #0x29
	str r1, [sp, #0x18]
	mov r7, sp
	ldr r0, [sp, #0x10]
	lsls r0, r0, #1
	mov sb, r0
_080AAC40:
	movs r4, #0
	lsls r1, r5, #1
	mov ip, r1
	adds r0, r5, #1
	mov r8, r0
_080AAC4A:
	mov r1, sp
	movs r0, #8
	ldrsh r3, [r1, r0]
	adds r3, r3, r4
	add r0, sp, #8
	movs r1, #2
	ldrsh r0, [r0, r1]
	adds r0, r0, r5
	ldr r1, [sp, #0x14]
	muls r0, r1, r0
	adds r3, r3, r0
	lsls r0, r3, #1
	ldr r2, [r6, #0x14]
	adds r2, r2, r0
	ldrh r1, [r7]
	adds r1, r1, r4
	add r1, ip
	ldrb r0, [r7, #2]
	adds r0, #1
	lsls r0, r0, #0xc
	orrs r1, r0
	strh r1, [r2]
	ldr r2, [r6, #0x2c]
	lsls r3, r3, #2
	adds r2, r3, r2
	ldrb r0, [r2]
	movs r1, #1
	orrs r0, r1
	strb r0, [r2]
	ldr r0, [r6, #0x2c]
	adds r3, r3, r0
	ldrh r1, [r3, #2]
	movs r0, #1
	ands r0, r1
	mov r1, sb
	orrs r0, r1
	strh r0, [r3, #2]
	adds r4, #1
	cmp r4, #1
	bls _080AAC4A
	mov r5, r8
	cmp r5, #1
	bls _080AAC40
_080AACA0:
	movs r0, #1
	ldr r1, [sp, #0x18]
	strb r0, [r1]
_080AACA6:
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80AACB8
sub_80AACB8: @ 0x080AACB8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x10
	adds r5, r0, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0x10
	bl sub_800E324
	mov r8, r0
	ldr r0, [r5, #4]
	cmp r0, #0xf
	bhi _080AAD82
	lsls r0, r0, #2
	ldr r1, _080AACE0 @ =_080AACE4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080AACE0: .4byte _080AACE4
_080AACE4: @ jump table
	.4byte _080AAD6E @ case 0
	.4byte _080AAD82 @ case 1
	.4byte _080AAD82 @ case 2
	.4byte _080AAD82 @ case 3
	.4byte _080AAD42 @ case 4
	.4byte _080AAD82 @ case 5
	.4byte _080AAD82 @ case 6
	.4byte _080AAD82 @ case 7
	.4byte _080AAD38 @ case 8
	.4byte _080AAD82 @ case 9
	.4byte _080AAD54 @ case 10
	.4byte _080AAD5E @ case 11
	.4byte _080AAD54 @ case 12
	.4byte _080AAD5E @ case 13
	.4byte _080AAD24 @ case 14
	.4byte _080AAD2E @ case 15
_080AAD24:
	adds r0, r5, #0
	adds r0, #0x9c
	movs r1, #0xf2
	lsls r1, r1, #2
	b _080AAD66
_080AAD2E:
	adds r0, r5, #0
	adds r0, #0x9c
	movs r1, #0xf9
	lsls r1, r1, #2
	b _080AAD66
_080AAD38:
	adds r0, r5, #0
	adds r0, #0x9c
	movs r1, #0xb0
	lsls r1, r1, #2
	b _080AAD66
_080AAD42:
	adds r0, r5, #0
	adds r0, #0x9c
	ldr r1, _080AAD50 @ =0x000003E6
	movs r2, #0xc
	bl sub_80AAE14
	b _080AAD90
	.align 2, 0
_080AAD50: .4byte 0x000003E6
_080AAD54:
	adds r0, r5, #0
	adds r0, #0x9c
	movs r1, #0xf8
	lsls r1, r1, #2
	b _080AAD66
_080AAD5E:
	adds r0, r5, #0
	adds r0, #0x9c
	movs r1, #0xad
	lsls r1, r1, #2
_080AAD66:
	movs r2, #9
	bl sub_80AAE14
	b _080AAD90
_080AAD6E:
	adds r0, r5, #0
	adds r0, #0x9c
	movs r1, #0
	movs r2, #0
	bl sub_80AAE14
	mov r0, r8
	cmp r0, #2
	beq _080AAD90
	b _080AAE00
_080AAD82:
	adds r0, r5, #0
	adds r0, #0x9c
	movs r1, #0
	movs r2, #0
	bl sub_80AAE14
	b _080AAE00
_080AAD90:
	adds r0, r5, #0
	adds r0, #0x94
	ldr r0, [r0]
	ldr r1, _080AAE0C @ =0x000034C8
	adds r6, r0, r1
	ldr r0, _080AAE10 @ =gUnknown_08107450
	mov r2, r8
	lsls r1, r2, #1
	adds r2, r1, r0
	adds r0, #1
	adds r1, r1, r0
	ldrb r7, [r1]
	ldrb r4, [r2]
	cmp r4, r7
	bhs _080AADD6
_080AADAE:
	adds r0, r6, #0
	adds r1, r4, #0
	mov r2, r8
	bl sub_80A1ED4
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080AADD0
	mov r0, sp
	adds r1, r6, #0
	adds r2, r4, #0
	bl sub_80A1CBC
	adds r0, r5, #0
	mov r1, sp
	bl sub_80AA9C8
_080AADD0:
	adds r4, #1
	cmp r4, r7
	blo _080AADAE
_080AADD6:
	movs r4, #0x60
_080AADD8:
	adds r0, r6, #0
	adds r1, r4, #0
	mov r2, r8
	bl sub_80A1ED4
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080AADFA
	mov r0, sp
	adds r1, r6, #0
	adds r2, r4, #0
	bl sub_80A1CBC
	adds r0, r5, #0
	mov r1, sp
	bl sub_80AA9C8
_080AADFA:
	adds r4, #1
	cmp r4, #0x73
	bls _080AADD8
_080AAE00:
	add sp, #0x10
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080AAE0C: .4byte 0x000034C8
_080AAE10: .4byte gUnknown_08107450

	thumb_func_start sub_80AAE14
sub_80AAE14: @ 0x080AAE14
	push {r4, lr}
	str r1, [r0]
	str r2, [r0, #4]
	adds r4, r0, #0
	adds r4, #8
	ldr r0, [r4, #8]
	cmp r0, #0
	beq _080AAE3E
	ldr r0, [r4, #4]
	ldr r1, [r0, #4]
	adds r0, r4, #0
	bl sub_80DC57C
	ldr r0, [r4, #4]
	str r0, [r0, #8]
	ldr r0, [r4, #4]
	movs r1, #0
	str r1, [r0, #4]
	ldr r0, [r4, #4]
	str r0, [r0, #0xc]
	str r1, [r4, #8]
_080AAE3E:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_80AAE44
sub_80AAE44: @ 0x080AAE44
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x28
	adds r7, r0, #0
	adds r5, r1, #0
	str r2, [sp, #0x20]
	adds r0, r2, #0
	cmp r0, #0xd
	bne _080AAE68
	ldr r0, _080AAE64 @ =0x000003E6
	movs r1, #0xb
	strh r0, [r7]
	strb r1, [r7, #2]
	b _080AAF00
	.align 2, 0
_080AAE64: .4byte 0x000003E6
_080AAE68:
	mov r8, sp
	adds r1, r5, #0
	adds r1, #8
	add r2, sp, #0x20
	mov ip, r2
	ldr r4, [r1, #4]
	ldr r2, [r4, #4]
	mov sb, r1
	cmp r2, #0
	beq _080AAE98
	adds r6, r0, #0
_080AAE7E:
	movs r3, #0
	ldr r0, [r2, #0x10]
	cmp r0, r6
	bge _080AAE88
	movs r3, #1
_080AAE88:
	cmp r3, #0
	bne _080AAE92
	adds r4, r2, #0
	ldr r2, [r4, #8]
	b _080AAE94
_080AAE92:
	ldr r2, [r2, #0xc]
_080AAE94:
	cmp r2, #0
	bne _080AAE7E
_080AAE98:
	ldr r3, [r1, #4]
	cmp r4, r3
	beq _080AAEB0
	movs r2, #0
	mov r0, ip
	ldr r1, [r0]
	ldr r0, [r4, #0x10]
	cmp r1, r0
	bge _080AAEAC
	movs r2, #1
_080AAEAC:
	cmp r2, #0
	beq _080AAEB2
_080AAEB0:
	adds r4, r3, #0
_080AAEB2:
	mov r2, r8
	str r4, [r2]
	mov r0, sb
	ldr r1, [r0, #4]
	str r1, [sp, #4]
	movs r2, #0
	ldr r0, [sp]
	cmp r0, r1
	bne _080AAEC6
	movs r2, #1
_080AAEC6:
	cmp r2, #0
	beq _080AAEFA
	add r0, sp, #8
	add r3, sp, #0x24
	ldr r1, [r5]
	ldr r2, [r5, #4]
	strh r1, [r3]
	strb r2, [r3, #2]
	ldr r2, [sp, #0x20]
	str r2, [sp, #0x18]
	ldr r1, [sp, #0x24]
	str r1, [sp, #0x1c]
	str r2, [sp, #0x10]
	str r1, [sp, #0x14]
	mov r1, sb
	add r2, sp, #0x10
	bl sub_80E4304
	ldr r0, [sp, #8]
	str r0, [sp]
	ldr r0, [r5]
	adds r0, #4
	str r0, [r5]
	ldr r0, [r5, #4]
	adds r0, #1
	str r0, [r5, #4]
_080AAEFA:
	ldr r0, [sp]
	ldr r0, [r0, #0x14]
	str r0, [r7]
_080AAF00:
	adds r0, r7, #0
	add sp, #0x28
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_80AAF10
sub_80AAF10: @ 0x080AAF10
	sub sp, #4
	ldr r0, [r0, #0xc]
	ldr r0, [r0, #8]
	str r0, [sp]
	add sp, #4
	bx lr

	thumb_func_start sub_80AAF1C
sub_80AAF1C: @ 0x080AAF1C
	sub sp, #4
	ldr r0, [r0, #0xc]
	str r0, [sp]
	add sp, #4
	bx lr
	.align 2, 0

	thumb_func_start sub_80AAF28
sub_80AAF28: @ 0x080AAF28
	lsls r1, r1, #0x18
	ldr r2, _080AAF38 @ =gUnknown_08107458
	lsrs r1, r1, #0x17
	lsls r0, r0, #2
	adds r1, r1, r0
	adds r1, r1, r2
	ldrh r0, [r1]
	bx lr
	.align 2, 0
_080AAF38: .4byte gUnknown_08107458

	thumb_func_start sub_80AAF3C
sub_80AAF3C: @ 0x080AAF3C
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #4
	adds r6, r0, #0
	adds r4, r6, #0
	adds r4, #0x94
	ldr r0, [r4]
	adds r0, #0x10
	bl sub_800E324
	mov sb, r0
	ldr r0, [r4]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl sub_800BF14
	mov r8, r0
	ldr r0, [r4]
	movs r1, #0x82
	lsls r1, r1, #3
	adds r0, r0, r1
	bl sub_800C560
	adds r5, r0, #0
	ldr r0, [r4]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	bl sub_800CE64
	ldr r1, [r6]
	str r0, [sp]
	adds r0, r1, #0
	mov r1, sb
	mov r2, r8
	adds r3, r5, #0
	bl sub_803A8A4
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
_080AAF9C:
	.byte 0x00, 0xB5, 0x02, 0x1C
	.byte 0x00, 0x29, 0x07, 0xD0, 0x10, 0x68, 0x02, 0x28, 0x04, 0xD1, 0xD0, 0x6A, 0xB0, 0x22, 0x12, 0x02
	.byte 0x5D, 0xF7, 0x58, 0xFF, 0x01, 0xBC, 0x00, 0x47, 0x00, 0xB5, 0x40, 0x68, 0xF9, 0xF7, 0x6C, 0xFB
	.byte 0x24, 0x30, 0x00, 0x78, 0x02, 0xBC, 0x08, 0x47

	thumb_func_start sub_80AAFC8
sub_80AAFC8: @ 0x080AAFC8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xa8
	str r0, [sp, #0x7c]
	str r1, [sp, #0x80]
	adds r4, r2, #0
	movs r0, #0xfa
	lsls r0, r0, #2
	bl sub_80005D4
	mov sl, r0
	ldr r1, [sp, #0x80]
	str r1, [r0]
	cmp r4, #0xd
	beq _080AAFFE
	cmp r4, #0xd
	bgt _080AAFF6
	cmp r4, #1
	beq _080AAFFE
	b _080AAFFA
_080AAFF6:
	cmp r4, #0xf
	beq _080AAFFE
_080AAFFA:
	movs r1, #0
	b _080AB000
_080AAFFE:
	movs r1, #1
_080AB000:
	movs r0, #0
	mov r2, sl
	strb r1, [r2, #4]
	strb r0, [r2, #5]
	strb r0, [r2, #6]
	mov r0, sl
	adds r0, #8
	movs r1, #9
	movs r3, #0xd4
	lsls r3, r3, #2
	add r3, sl
	str r3, [sp, #0x9c]
	movs r4, #0xda
	lsls r4, r4, #2
	add r4, sl
	str r4, [sp, #0x88]
	mov r2, sp
	adds r2, #0x74
	str r2, [sp, #0x94]
	mov r3, sp
	adds r3, #0x54
	str r3, [sp, #0x90]
	mov r4, sp
	adds r4, #0x44
	str r4, [sp, #0x8c]
	movs r5, #0
	movs r3, #1
	rsbs r3, r3, #0
_080AB038:
	strb r5, [r0]
	strb r5, [r0, #1]
	movs r2, #1
	movs r4, #0x54
	adds r4, r4, r0
	mov sb, r4
	subs r1, #1
	mov r8, r1
	adds r1, r0, #4
_080AB04A:
	str r5, [r1]
	strh r5, [r1, #4]
	str r5, [r1, #8]
	strh r5, [r1, #0xc]
	str r5, [r1, #0x10]
	strh r5, [r1, #0x14]
	str r5, [r1, #0x18]
	strh r5, [r1, #0x1c]
	adds r1, #0x20
	subs r2, #1
	cmp r2, r3
	bne _080AB04A
	adds r4, r0, #0
	adds r4, #0x44
	movs r6, #1
	movs r1, #0
	movs r7, #1
	rsbs r7, r7, #0
_080AB06E:
	adds r0, r4, #0
	str r1, [sp, #0xa0]
	str r3, [sp, #0xa4]
	bl sub_8007874
	ldr r1, [sp, #0xa0]
	str r1, [r4, #4]
	adds r4, #8
	subs r6, #1
	ldr r3, [sp, #0xa4]
	cmp r6, r7
	bne _080AB06E
	mov r0, sb
	mov r1, r8
	cmp r1, r3
	bne _080AB038
	movs r0, #0
	ldr r1, [sp, #0x9c]
	str r0, [r1]
	ldr r0, [sp, #0x88]
	movs r1, #0xf
	ldr r2, [sp, #0x80]
	ldr r3, [r2]
	movs r4, #0
	movs r2, #1
	rsbs r2, r2, #0
_080AB0A2:
	strb r4, [r0, #4]
	adds r0, #8
	subs r1, #1
	cmp r1, r2
	bne _080AB0A2
	ldr r1, [r3, #0x64]
	ldr r0, [sp, #0x80]
	bl sub_80D3910
	mov r8, r0
	movs r3, #0
_080AB0B8:
	movs r0, #0x54
	muls r0, r3, r0
	adds r0, #8
	add r0, sl
	str r0, [sp, #0x84]
	mov r4, sp
	mov r1, sl
	ldrb r0, [r1, #4]
	cmp r0, #0
	beq _080AB144
	cmp r3, #9
	bls _080AB0D2
	b _080AB1BC
_080AB0D2:
	lsls r0, r3, #2
	ldr r1, _080AB0DC @ =_080AB0E0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080AB0DC: .4byte _080AB0E0
_080AB0E0: @ jump table
	.4byte _080AB180 @ case 0
	.4byte _080AB110 @ case 1
	.4byte _080AB108 @ case 2
	.4byte _080AB116 @ case 3
	.4byte _080AB120 @ case 4
	.4byte _080AB1A0 @ case 5
	.4byte _080AB128 @ case 6
	.4byte _080AB12E @ case 7
	.4byte _080AB134 @ case 8
	.4byte _080AB13A @ case 9
_080AB108:
	ldr r2, _080AB10C @ =0x000001A1
	b _080AB1BE
	.align 2, 0
_080AB10C: .4byte 0x000001A1
_080AB110:
	movs r2, #0xd0
	lsls r2, r2, #1
	b _080AB1BE
_080AB116:
	ldr r2, _080AB11C @ =0x000001A3
	b _080AB1BE
	.align 2, 0
_080AB11C: .4byte 0x000001A3
_080AB120:
	ldr r2, _080AB124 @ =0x0000019F
	b _080AB1BE
	.align 2, 0
_080AB124: .4byte 0x0000019F
_080AB128:
	movs r2, #0xd1
	lsls r2, r2, #1
	b _080AB1BE
_080AB12E:
	movs r2, #0xd2
	lsls r2, r2, #1
	b _080AB1BE
_080AB134:
	movs r2, #0xcf
	lsls r2, r2, #1
	b _080AB1BE
_080AB13A:
	ldr r2, _080AB140 @ =0x0000019D
	b _080AB1BE
	.align 2, 0
_080AB140: .4byte 0x0000019D
_080AB144:
	cmp r3, #9
	bhi _080AB1BC
	lsls r0, r3, #2
	ldr r1, _080AB154 @ =_080AB158
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080AB154: .4byte _080AB158
_080AB158: @ jump table
	.4byte _080AB180 @ case 0
	.4byte _080AB190 @ case 1
	.4byte _080AB186 @ case 2
	.4byte _080AB194 @ case 3
	.4byte _080AB19C @ case 4
	.4byte _080AB1A0 @ case 5
	.4byte _080AB1A8 @ case 6
	.4byte _080AB1AE @ case 7
	.4byte _080AB1B4 @ case 8
	.4byte _080AB1B8 @ case 9
_080AB180:
	movs r2, #0xeb
	lsls r2, r2, #1
	b _080AB1BE
_080AB186:
	ldr r2, _080AB18C @ =0x00000117
	b _080AB1BE
	.align 2, 0
_080AB18C: .4byte 0x00000117
_080AB190:
	movs r2, #0xd3
	b _080AB1BE
_080AB194:
	ldr r2, _080AB198 @ =0x000001AD
	b _080AB1BE
	.align 2, 0
_080AB198: .4byte 0x000001AD
_080AB19C:
	movs r2, #0x4d
	b _080AB1BE
_080AB1A0:
	ldr r2, _080AB1A4 @ =0x00000145
	b _080AB1BE
	.align 2, 0
_080AB1A4: .4byte 0x00000145
_080AB1A8:
	movs r2, #0xc4
	lsls r2, r2, #1
	b _080AB1BE
_080AB1AE:
	movs r2, #0xd9
	lsls r2, r2, #1
	b _080AB1BE
_080AB1B4:
	movs r2, #0x3e
	b _080AB1BE
_080AB1B8:
	movs r2, #0x3c
	b _080AB1BE
_080AB1BC:
	movs r2, #0
_080AB1BE:
	adds r6, r4, #0
	mov sb, r2
	movs r0, #0
	strb r0, [r6]
	strb r0, [r6, #1]
	movs r2, #1
	adds r3, #1
	str r3, [sp, #0x98]
	movs r1, #0
	movs r3, #1
	rsbs r3, r3, #0
	adds r0, r6, #4
_080AB1D6:
	str r1, [r0]
	strh r1, [r0, #4]
	str r1, [r0, #8]
	strh r1, [r0, #0xc]
	str r1, [r0, #0x10]
	strh r1, [r0, #0x14]
	str r1, [r0, #0x18]
	strh r1, [r0, #0x1c]
	adds r0, #0x20
	subs r2, #1
	cmp r2, r3
	bne _080AB1D6
	adds r4, r6, #0
	adds r4, #0x44
	movs r5, #1
	movs r1, #0
	movs r7, #1
	rsbs r7, r7, #0
_080AB1FA:
	adds r0, r4, #0
	str r1, [sp, #0xa0]
	bl sub_8007874
	ldr r1, [sp, #0xa0]
	str r1, [r4, #4]
	adds r4, #8
	subs r5, #1
	cmp r5, r7
	bne _080AB1FA
	movs r7, #0
	adds r5, r6, #4
_080AB212:
	mov r2, r8
	ldr r4, [r2]
	ldr r0, [sp, #0x94]
	ldr r3, [r4, #0xc]
	mov r1, r8
	mov r2, sb
	bl sub_80D3918
	lsls r1, r7, #2
	ldr r0, [sp, #0x74]
	adds r0, r0, r1
	ldrh r2, [r0]
	add r0, sp, #0x54
	ldr r3, [r4, #0x10]
	mov r1, r8
	bl sub_80D3918
	add r0, sp, #0x54
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	adds r1, r5, #0
	ldr r0, [sp, #0x90]
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	ldr r0, [r5, #8]
	movs r1, #0
	cmp r0, #0
	beq _080AB258
	ldrh r1, [r5, #0xc]
_080AB258:
	cmp r1, #0
	beq _080AB272
	ldr r0, [r5, #0x10]
	movs r1, #0
	cmp r0, #0
	beq _080AB266
	ldrh r1, [r5, #0x14]
_080AB266:
	cmp r1, #0
	beq _080AB272
	adds r5, #0x20
	adds r7, #1
	cmp r7, #1
	bls _080AB212
_080AB272:
	ldr r0, [sp, #0x84]
	mov r1, sp
	bl sub_80E4438
	ldr r4, [sp, #0x90]
	ldr r0, [sp, #0x8c]
	cmp r0, r4
	beq _080AB29A
	add r5, sp, #0x44
_080AB284:
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	cmp r5, r4
	bne _080AB284
_080AB29A:
	ldr r3, [sp, #0x98]
	cmp r3, #9
	bhi _080AB2A2
	b _080AB0B8
_080AB2A2:
	ldr r1, [sp, #0x80]
	ldr r0, [r1]
	ldr r2, [r0, #0x48]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
	adds r2, r0, #0
	ldr r1, [sp, #0x9c]
	ldr r0, [r1]
	cmp r0, #0xf
	bhi _080AB2CC
	adds r0, #4
	adds r0, r1, r0
	cmp r0, #0
	beq _080AB2C4
	strb r2, [r0]
_080AB2C4:
	ldr r2, [sp, #0x9c]
	ldr r0, [r2]
	adds r0, #1
	str r0, [r2]
_080AB2CC:
	mov r3, sl
	ldr r4, [sp, #0x7c]
	str r3, [r4]
	adds r0, r4, #0
	add sp, #0xa8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_80AB2E4
sub_80AB2E4: @ 0x080AB2E4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	mov sl, r0
	str r1, [sp]
	ldr r0, [r0]
	cmp r0, #0
	beq _080AB360
	mov r8, r0
	ldr r0, [r0]
	ldr r2, [r0]
	movs r4, #0xd4
	lsls r4, r4, #2
	add r4, r8
	movs r1, #0xd5
	lsls r1, r1, #2
	add r1, r8
	ldrb r1, [r1]
	ldr r2, [r2, #0x4c]
	bl sub_80D3914
	mov r0, r8
	adds r0, #8
	cmp r0, #0
	beq _080AB35A
	adds r6, r4, #0
	cmp r0, r6
	beq _080AB35A
	movs r5, #0xe5
	lsls r5, r5, #2
	add r5, r8
_080AB328:
	subs r5, #0x54
	subs r6, #0x54
	movs r0, #8
	add r0, r8
	mov sb, r0
	cmp r5, #0
	beq _080AB356
	adds r4, r6, #0
	adds r4, #0x54
	cmp r5, r4
	beq _080AB356
	adds r7, r5, #0
_080AB340:
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	cmp r7, r4
	bne _080AB340
_080AB356:
	cmp sb, r6
	bne _080AB328
_080AB35A:
	mov r0, r8
	bl sub_8000608
_080AB360:
	movs r0, #1
	ldr r1, [sp]
	ands r0, r1
	cmp r0, #0
	beq _080AB370
	mov r0, sl
	bl sub_8000608
_080AB370:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80AB380
sub_80AB380: @ 0x080AB380
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	ldr r0, [r0]
	mov r8, r0
	movs r3, #0
	movs r4, #0
	movs r2, #0
	movs r5, #0
	movs r1, #0xda
	lsls r1, r1, #2
	add r1, r8
_080AB39A:
	ldrb r0, [r1, #4]
	cmp r0, #0
	beq _080AB3B2
	adds r3, #1
	ldrb r0, [r1, #5]
	cmp r0, #1
	bls _080AB3AE
	subs r0, #1
	strb r0, [r1, #5]
	b _080AB3B2
_080AB3AE:
	strb r5, [r1, #4]
	adds r4, #1
_080AB3B2:
	adds r1, #8
	adds r2, #1
	cmp r2, #0xf
	bls _080AB39A
	cmp r3, #0
	beq _080AB404
	cmp r4, r3
	bne _080AB404
	movs r1, #0
_080AB3C4:
	movs r0, #0x54
	muls r0, r1, r0
	adds r0, #8
	mov r2, r8
	adds r5, r2, r0
	ldrb r0, [r5]
	adds r7, r1, #1
	cmp r0, #0
	beq _080AB3FE
	movs r6, #0
	movs r2, #0
	adds r4, r5, #0
	adds r4, #0x48
_080AB3DE:
	lsls r0, r6, #3
	adds r0, r0, r5
	adds r0, #0x44
	ldr r1, [r4]
	str r2, [sp]
	bl sub_8007C28
	ldr r2, [sp]
	str r2, [r4]
	adds r4, #8
	adds r6, #1
	cmp r6, #1
	bls _080AB3DE
	movs r0, #0
	strb r0, [r5]
	strb r0, [r5, #1]
_080AB3FE:
	adds r1, r7, #0
	cmp r1, #9
	bls _080AB3C4
_080AB404:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80AB410
sub_80AB410: @ 0x080AB410
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x50
	str r1, [sp, #0x2c]
	adds r6, r2, #0
	ldr r0, [r0]
	str r0, [sp, #0x30]
	ldr r0, [r0]
	str r0, [sp, #0x34]
	ldr r1, [sp, #0x30]
	ldrb r0, [r1, #5]
	cmp r0, #0
	bne _080AB432
	b _080AB5A2
_080AB432:
	movs r1, #0
_080AB434:
	movs r0, #0x54
	muls r0, r1, r0
	adds r0, #8
	ldr r2, [sp, #0x30]
	adds r2, r2, r0
	mov sl, r2
	ldrb r0, [r2]
	adds r1, #1
	str r1, [sp, #0x40]
	cmp r0, #0
	bne _080AB44C
	b _080AB594
_080AB44C:
	ldrb r0, [r2, #1]
	cmp r0, #0
	bne _080AB454
	b _080AB594
_080AB454:
	movs r3, #0
	mov sb, r3
_080AB458:
	mov r5, sb
	lsls r4, r5, #5
	mov r7, sl
	adds r0, r4, r7
	ldr r5, [r0, #0xc]
	mov r1, sb
	lsls r0, r1, #3
	add r0, sl
	adds r0, #0x44
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r2, r0, #0
	add r4, sl
	adds r4, #0xc
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080AB480
	ldrh r3, [r4, #4]
_080AB480:
	lsls r2, r2, #5
	ldr r4, _080AB4B8 @ =0x06010000
	adds r2, r2, r4
	add r0, sp, #0x14
	adds r1, r5, #0
	bl sub_8008F0C
	mov r5, sp
	adds r5, #0x14
	str r5, [sp, #0x38]
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080AB4BC
	cmp r1, #0
	beq _080AB4AC
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080AB4AC:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	movs r4, #1
	add sb, r4
	b _080AB586
	.align 2, 0
_080AB4B8: .4byte 0x06010000
_080AB4BC:
	str r1, [sp, #0x48]
	movs r0, #1
	str r0, [sp, #0x28]
	ldr r1, [r6]
	ldr r5, [sp, #0x48]
	subs r0, r5, r1
	asrs r4, r0, #4
	str r4, [sp, #0x24]
	add r2, sp, #0x28
	add r0, sp, #0x24
	cmp r4, #1
	bhs _080AB4D6
	adds r0, r2, #0
_080AB4D6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080AB4F6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080AB4F2
	mov r0, r8
	bl sub_80D3BC0
_080AB4F2:
	ldr r1, [r6]
	b _080AB4FA
_080AB4F6:
	movs r0, #0
	mov r8, r0
_080AB4FA:
	adds r5, r0, #0
	str r5, [sp, #0x4c]
	adds r2, r1, #0
	adds r3, r5, #0
	movs r7, #1
	add sb, r7
	b _080AB51C
_080AB508:
	cmp r3, #0
	beq _080AB518
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080AB518:
	adds r2, #0x10
	adds r3, #0x10
_080AB51C:
	ldr r0, [sp, #0x48]
	cmp r2, r0
	bne _080AB508
	adds r5, r3, #0
	ldr r0, [sp, #0x28]
	cmp r0, #1
	bne _080AB53E
	cmp r5, #0
	beq _080AB53A
	adds r0, r5, #0
	ldr r1, [sp, #0x38]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080AB53A:
	adds r5, #0x10
	b _080AB560
_080AB53E:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080AB55E
_080AB546:
	cmp r2, #0
	beq _080AB556
	adds r0, r2, #0
	ldr r1, [sp, #0x38]
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080AB556:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080AB546
_080AB55E:
	adds r5, r2, #0
_080AB560:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _080AB570
_080AB56A:
	adds r0, #0x10
	cmp r0, r2
	bne _080AB56A
_080AB570:
	cmp r1, #0
	beq _080AB57A
	adds r0, r1, #0
	bl sub_80D0260
_080AB57A:
	ldr r0, [sp, #0x4c]
	add r0, r8
	ldr r7, [sp, #0x4c]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080AB586:
	mov r0, sb
	cmp r0, #1
	bhi _080AB58E
	b _080AB458
_080AB58E:
	movs r0, #0
	mov r1, sl
	strb r0, [r1, #1]
_080AB594:
	ldr r1, [sp, #0x40]
	cmp r1, #9
	bhi _080AB59C
	b _080AB434
_080AB59C:
	movs r0, #0
	ldr r2, [sp, #0x30]
	strb r0, [r2, #5]
_080AB5A2:
	ldr r3, [sp, #0x30]
	ldrb r0, [r3, #6]
	cmp r0, #0
	beq _080AB5D6
	ldr r4, [sp, #0x34]
	ldr r3, [r4]
	ldr r5, [sp, #0x30]
	movs r7, #0xd9
	lsls r7, r7, #2
	adds r0, r5, r7
	ldrb r1, [r0]
	movs r0, #0x54
	muls r0, r1, r0
	adds r0, r0, r5
	ldr r1, [r0, #0x1c]
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldrb r2, [r0]
	ldr r4, [r3, #0x54]
	ldr r0, [sp, #0x34]
	movs r3, #1
	bl sub_80D391C
	movs r0, #0
	strb r0, [r5, #6]
_080AB5D6:
	ldr r3, [sp, #0x34]
	ldr r0, [r3]
	ldr r1, [r0, #0x18]
	adds r0, r3, #0
	bl sub_80D3910
	str r0, [sp, #0x3c]
	ldr r4, [sp, #0x34]
	ldr r0, [r4]
	ldr r1, [r0, #0x1c]
	adds r0, r4, #0
	bl sub_80D3910
	mov sl, r0
	movs r5, #0
	mov r8, r5
	ldr r7, [sp, #0x30]
	movs r0, #0xd4
	lsls r0, r0, #2
	adds r7, r7, r0
	mov sb, r7
	ldr r1, [sp, #0x30]
	movs r2, #0xda
	lsls r2, r2, #2
	adds r7, r1, r2
_080AB608:
	ldrb r0, [r7, #4]
	cmp r0, #0
	beq _080AB66C
	ldrb r1, [r7, #6]
	movs r0, #0x54
	muls r0, r1, r0
	adds r0, #8
	ldr r4, [sp, #0x30]
	adds r3, r4, r0
	movs r1, #0
	ldrb r0, [r7, #5]
	cmp r0, #6
	bhi _080AB624
	movs r1, #1
_080AB624:
	movs r5, #2
	ldrsh r6, [r7, r5]
	movs r5, #0x80
	lsls r5, r5, #8
	subs r5, r5, r6
	movs r0, #0
	ldrsh r2, [r7, r0]
	ldr r4, [sp, #0x3c]
	subs r2, r2, r4
	mov r0, sl
	subs r6, r6, r0
	lsls r4, r1, #5
	adds r4, #4
	adds r4, r3, r4
	lsls r0, r1, #3
	adds r0, #0x44
	adds r0, r3, r0
	ldr r1, [r0, #4]
	str r2, [sp, #0x44]
	bl sub_8007D4C
	str r5, [sp]
	str r4, [sp, #4]
	ldr r1, [sp, #0x34]
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	mov r3, sb
	str r3, [sp, #0x10]
	ldr r0, [sp, #0x2c]
	ldr r2, [sp, #0x44]
	adds r1, r2, #0
	adds r2, r6, #0
	movs r3, #0xaa
	ldr r4, _080AB688 @ =gUnknown_030004DC
	bl sub_80D391C
_080AB66C:
	adds r7, #8
	movs r4, #1
	add r8, r4
	mov r5, r8
	cmp r5, #0xf
	bls _080AB608
	add sp, #0x50
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080AB688: .4byte gUnknown_030004DC

	thumb_func_start sub_80AB68C
sub_80AB68C: @ 0x080AB68C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	adds r5, r2, #0
	adds r2, r3, #0
	ldr r7, [r0]
	movs r4, #0
_080AB69E:
	lsls r0, r4, #3
	movs r3, #0xda
	lsls r3, r3, #2
	adds r0, r0, r3
	adds r3, r7, r0
	ldrb r0, [r3, #4]
	cmp r0, #0
	bne _080AB772
	strh r1, [r3]
	strh r5, [r3, #2]
	movs r0, #1
	strb r0, [r3, #4]
	movs r0, #0xc
	strb r0, [r3, #5]
	strb r2, [r3, #6]
	movs r0, #0x54
	muls r0, r2, r0
	adds r0, r0, r7
	ldrb r0, [r0, #8]
	movs r1, #0xd9
	lsls r1, r1, #2
	adds r1, r1, r7
	mov sb, r1
	cmp r0, #0
	bne _080AB768
	cmp r2, #9
	bhi _080AB710
	lsls r0, r2, #2
	ldr r1, _080AB6E0 @ =_080AB6E4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080AB6E0: .4byte _080AB6E4
_080AB6E4: @ jump table
	.4byte _080AB710 @ case 0
	.4byte _080AB70C @ case 1
	.4byte _080AB70C @ case 2
	.4byte _080AB710 @ case 3
	.4byte _080AB710 @ case 4
	.4byte _080AB710 @ case 5
	.4byte _080AB714 @ case 6
	.4byte _080AB714 @ case 7
	.4byte _080AB718 @ case 8
	.4byte _080AB71C @ case 9
_080AB70C:
	movs r1, #2
	b _080AB71E
_080AB710:
	movs r1, #3
	b _080AB71E
_080AB714:
	movs r1, #5
	b _080AB71E
_080AB718:
	movs r1, #4
	b _080AB71E
_080AB71C:
	movs r1, #6
_080AB71E:
	movs r0, #0x54
	adds r5, r2, #0
	muls r5, r0, r5
	adds r5, r5, r7
	adds r5, #8
	mov r8, r1
	movs r6, #0
	movs r3, #0xd9
	lsls r3, r3, #2
	adds r3, r3, r7
	mov sb, r3
	adds r4, r5, #0
	adds r4, #0x44
_080AB738:
	ldr r1, [r4, #4]
	adds r0, r4, #0
	str r2, [sp]
	bl sub_8007C28
	adds r0, r4, #0
	mov r1, r8
	bl sub_8007B54
	str r0, [r4, #4]
	rsbs r1, r0, #0
	orrs r1, r0
	ldr r2, [sp]
	cmp r1, #0
	bge _080AB764
	adds r4, #8
	adds r6, #1
	cmp r6, #1
	bls _080AB738
	movs r0, #1
	strb r0, [r5]
	strb r0, [r5, #1]
_080AB764:
	movs r0, #1
	strb r0, [r7, #5]
_080AB768:
	movs r0, #1
	strb r0, [r7, #6]
	mov r0, sb
	strb r2, [r0]
	b _080AB778
_080AB772:
	adds r4, #1
	cmp r4, #0xf
	bls _080AB69E
_080AB778:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80AB788
sub_80AB788: @ 0x080AB788
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80D11E4
	ldr r1, _080AB7A0 @ =0x0000FFFF
	ands r1, r0
	adds r0, r1, #0
	muls r0, r4, r0
	lsrs r0, r0, #0x10
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080AB7A0: .4byte 0x0000FFFF

	thumb_func_start sub_80AB7A4
sub_80AB7A4: @ 0x080AB7A4
	push {lr}
	cmp r0, #1
	beq _080AB7D4
	cmp r0, #1
	bgt _080AB7B4
	cmp r0, #0
	beq _080AB7BE
	b _080AB826
_080AB7B4:
	cmp r0, #2
	beq _080AB7EA
	cmp r0, #3
	beq _080AB800
	b _080AB826
_080AB7BE:
	cmp r1, #1
	beq _080AB818
	cmp r1, #1
	bgt _080AB7CC
	cmp r1, #0
	beq _080AB820
	b _080AB7D4
_080AB7CC:
	cmp r1, #2
	beq _080AB824
	cmp r1, #3
	beq _080AB81C
_080AB7D4:
	cmp r1, #1
	beq _080AB824
	cmp r1, #1
	bgt _080AB7E2
	cmp r1, #0
	beq _080AB81C
	b _080AB7EA
_080AB7E2:
	cmp r1, #2
	beq _080AB818
	cmp r1, #3
	beq _080AB820
_080AB7EA:
	cmp r1, #1
	beq _080AB820
	cmp r1, #1
	bgt _080AB7F8
	cmp r1, #0
	beq _080AB824
	b _080AB800
_080AB7F8:
	cmp r1, #2
	beq _080AB81C
	cmp r1, #3
	beq _080AB818
_080AB800:
	cmp r1, #1
	beq _080AB81C
	cmp r1, #1
	bgt _080AB80E
	cmp r1, #0
	beq _080AB818
	b _080AB826
_080AB80E:
	cmp r1, #2
	beq _080AB820
	cmp r1, #3
	beq _080AB824
	b _080AB826
_080AB818:
	movs r0, #3
	b _080AB826
_080AB81C:
	movs r0, #1
	b _080AB826
_080AB820:
	movs r0, #0
	b _080AB826
_080AB824:
	movs r0, #2
_080AB826:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80AB82C
sub_80AB82C: @ 0x080AB82C
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	movs r0, #0x64
	bl sub_80AB788
	adds r3, r0, #0
	movs r1, #0
	ldrb r2, [r4]
_080AB83E:
	cmp r3, r2
	blo _080AB854
	adds r1, #1
	cmp r1, r5
	bhs _080AB852
	lsls r0, r1, #2
	adds r0, r0, r4
	ldrb r0, [r0]
	adds r2, r2, r0
	b _080AB83E
_080AB852:
	movs r1, #0
_080AB854:
	adds r0, r1, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_80AB85C
sub_80AB85C: @ 0x080AB85C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x10
	adds r7, r0, #0
	ldr r0, [r7, #0x28]
	str r0, [r7]
	movs r0, #0x14
	adds r0, r0, r7
	mov r8, r0
	adds r6, r7, #0
	adds r6, #0x20
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	mov r0, r8
	adds r1, r6, #0
	adds r2, r7, #0
	movs r3, #0
	bl sub_80AC124
	ldr r0, [r7, #0x30]
	cmp r0, #0
	beq _080AB8C0
	ldr r3, [r7]
	adds r3, r3, r0
	movs r0, #0x20
	ldrsh r4, [r7, r0]
	movs r0, #2
	ldrsh r1, [r6, r0]
	movs r0, #4
	ldrsh r5, [r6, r0]
	movs r0, #6
	ldrsh r6, [r6, r0]
	add r2, sp, #8
	adds r0, r2, #0
	strh r4, [r0]
	adds r1, r3, r1
	strh r1, [r2, #2]
	strh r5, [r2, #4]
	adds r3, r3, r6
	strh r3, [r2, #6]
	mov r0, r8
	adds r1, r2, #0
	bl sub_80AC070
	adds r1, r0, #0
	movs r0, #1
	eors r1, r0
	b _080AB8C2
_080AB8C0:
	movs r1, #0
_080AB8C2:
	strb r1, [r7, #0x10]
	add sp, #0x10
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80AB8D0
sub_80AB8D0: @ 0x080AB8D0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x10
	adds r7, r0, #0
	ldr r0, [r7, #0x28]
	rsbs r0, r0, #0
	str r0, [r7, #4]
	movs r0, #0x14
	adds r0, r0, r7
	mov r8, r0
	adds r6, r7, #0
	adds r6, #0x20
	adds r3, r7, #4
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	mov r0, r8
	adds r1, r6, #0
	movs r2, #0
	bl sub_80AC124
	ldr r0, [r7, #0x30]
	cmp r0, #0
	beq _080AB936
	ldr r3, [r7, #4]
	subs r3, r3, r0
	movs r0, #0x20
	ldrsh r4, [r7, r0]
	movs r0, #2
	ldrsh r1, [r6, r0]
	movs r0, #4
	ldrsh r5, [r6, r0]
	movs r0, #6
	ldrsh r6, [r6, r0]
	add r2, sp, #8
	adds r0, r2, #0
	strh r4, [r0]
	adds r1, r3, r1
	strh r1, [r2, #2]
	strh r5, [r2, #4]
	adds r3, r3, r6
	strh r3, [r2, #6]
	mov r0, r8
	adds r1, r2, #0
	bl sub_80AC070
	adds r1, r0, #0
	movs r0, #1
	eors r1, r0
	b _080AB938
_080AB936:
	movs r1, #0
_080AB938:
	strb r1, [r7, #0x11]
	add sp, #0x10
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80AB948
sub_80AB948: @ 0x080AB948
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x10
	adds r7, r0, #0
	ldr r0, [r7, #0x28]
	rsbs r0, r0, #0
	str r0, [r7, #8]
	movs r0, #0x14
	adds r0, r0, r7
	mov r8, r0
	adds r6, r7, #0
	adds r6, #0x20
	adds r0, r7, #0
	adds r0, #8
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	mov r0, r8
	adds r1, r6, #0
	movs r2, #0
	movs r3, #0
	bl sub_80AC124
	ldr r0, [r7, #0x2c]
	cmp r0, #0
	beq _080AB9B2
	ldr r1, [r7, #8]
	subs r1, r1, r0
	movs r0, #0x20
	ldrsh r2, [r7, r0]
	movs r0, #2
	ldrsh r4, [r6, r0]
	movs r0, #4
	ldrsh r5, [r6, r0]
	movs r0, #6
	ldrsh r6, [r6, r0]
	add r3, sp, #8
	adds r2, r1, r2
	adds r0, r3, #0
	strh r2, [r0]
	strh r4, [r3, #2]
	adds r1, r1, r5
	strh r1, [r3, #4]
	strh r6, [r3, #6]
	mov r0, r8
	adds r1, r3, #0
	bl sub_80AC070
	adds r1, r0, #0
	movs r0, #1
	eors r1, r0
	b _080AB9B4
_080AB9B2:
	movs r1, #0
_080AB9B4:
	strb r1, [r7, #0x12]
	add sp, #0x10
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80AB9C4
sub_80AB9C4: @ 0x080AB9C4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x10
	adds r7, r0, #0
	ldr r0, [r7, #0x28]
	str r0, [r7, #0xc]
	movs r0, #0x14
	adds r0, r0, r7
	mov r8, r0
	adds r6, r7, #0
	adds r6, #0x20
	movs r0, #0
	str r0, [sp]
	adds r0, r7, #0
	adds r0, #0xc
	str r0, [sp, #4]
	mov r0, r8
	adds r1, r6, #0
	movs r2, #0
	movs r3, #0
	bl sub_80AC124
	ldr r0, [r7, #0x2c]
	cmp r0, #0
	beq _080ABA2C
	ldr r1, [r7, #0xc]
	adds r1, r1, r0
	movs r0, #0x20
	ldrsh r2, [r7, r0]
	movs r0, #2
	ldrsh r4, [r6, r0]
	movs r0, #4
	ldrsh r5, [r6, r0]
	movs r0, #6
	ldrsh r6, [r6, r0]
	add r3, sp, #8
	adds r2, r1, r2
	adds r0, r3, #0
	strh r2, [r0]
	strh r4, [r3, #2]
	adds r1, r1, r5
	strh r1, [r3, #4]
	strh r6, [r3, #6]
	mov r0, r8
	adds r1, r3, #0
	bl sub_80AC070
	adds r1, r0, #0
	movs r0, #1
	eors r1, r0
	b _080ABA2E
_080ABA2C:
	movs r1, #0
_080ABA2E:
	strb r1, [r7, #0x13]
	add sp, #0x10
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80ABA3C
sub_80ABA3C: @ 0x080ABA3C
	push {r4, lr}
	sub sp, #0x34
	adds r4, r0, #0
	mov r1, sp
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r0, [sp, #0xc]
	strb r0, [r1, #0x10]
	strb r0, [r1, #0x11]
	strb r0, [r1, #0x12]
	strb r0, [r1, #0x13]
	add r1, sp, #0x14
	str r0, [sp, #0x14]
	str r0, [r1, #4]
	strh r0, [r1, #8]
	strh r0, [r1, #0xa]
	add r1, sp, #0x20
	strh r0, [r1]
	strh r0, [r1, #2]
	strh r0, [r1, #4]
	strh r0, [r1, #6]
	movs r1, #1
	str r1, [sp, #0x28]
	str r0, [sp, #0x2c]
	str r0, [sp, #0x30]
	mov r0, sp
	strb r1, [r0, #0x10]
	strb r1, [r0, #0x11]
	strb r1, [r0, #0x12]
	strb r1, [r0, #0x13]
	adds r0, r4, #0
	mov r1, sp
	movs r2, #0x34
	bl sub_80D3994
	adds r0, r4, #0
	add sp, #0x34
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_80ABA90
sub_80ABA90: @ 0x080ABA90
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r6, r1, #0
	adds r7, r2, #0
	movs r0, #0x20
	ldrsh r1, [r4, r0]
	movs r2, #4
	ldrsh r0, [r6, r2]
	cmp r1, r0
	bge _080ABB18
	movs r0, #0
	ldrsh r1, [r6, r0]
	movs r2, #0x24
	ldrsh r0, [r4, r2]
	cmp r1, r0
	bge _080ABB18
	movs r0, #0x26
	ldrsh r1, [r4, r0]
	movs r2, #2
	ldrsh r0, [r6, r2]
	subs r5, r1, r0
	cmp r5, #0
	bgt _080ABAE4
	ldr r1, [r4]
	ldr r0, [r4, #0x28]
	cmp r1, r0
	ble _080ABAD0
	adds r0, r4, #0
	bl sub_80AB85C
	ldr r0, [r4]
	b _080ABAD2
_080ABAD0:
	adds r0, r1, #0
_080ABAD2:
	adds r0, r5, r0
	cmp r0, #0
	ble _080ABAE4
	rsbs r0, r5, #0
	str r0, [r4]
	cmp r7, #1
	bne _080ABAE4
	movs r0, #0
	strb r0, [r4, #0x10]
_080ABAE4:
	movs r0, #0x22
	ldrsh r1, [r4, r0]
	movs r2, #6
	ldrsh r0, [r6, r2]
	subs r5, r1, r0
	cmp r5, #0
	blt _080ABB18
	ldr r1, [r4, #4]
	ldr r0, [r4, #0x28]
	cmn r1, r0
	bge _080ABB04
	adds r0, r4, #0
	bl sub_80AB8D0
	ldr r0, [r4, #4]
	b _080ABB06
_080ABB04:
	adds r0, r1, #0
_080ABB06:
	adds r0, r5, r0
	cmp r0, #0
	bge _080ABB18
	rsbs r0, r5, #0
	str r0, [r4, #4]
	cmp r7, #1
	bne _080ABB18
	movs r0, #0
	strb r0, [r4, #0x11]
_080ABB18:
	movs r0, #0x22
	ldrsh r1, [r4, r0]
	movs r2, #6
	ldrsh r0, [r6, r2]
	cmp r1, r0
	bge _080ABB98
	movs r0, #2
	ldrsh r1, [r6, r0]
	movs r2, #0x26
	ldrsh r0, [r4, r2]
	cmp r1, r0
	bge _080ABB98
	movs r0, #0x20
	ldrsh r1, [r4, r0]
	movs r2, #4
	ldrsh r0, [r6, r2]
	subs r5, r1, r0
	cmp r5, #0
	blt _080ABB64
	ldr r1, [r4, #8]
	ldr r0, [r4, #0x28]
	cmn r1, r0
	bge _080ABB50
	adds r0, r4, #0
	bl sub_80AB948
	ldr r0, [r4, #8]
	b _080ABB52
_080ABB50:
	adds r0, r1, #0
_080ABB52:
	adds r0, r5, r0
	cmp r0, #0
	bge _080ABB64
	rsbs r0, r5, #0
	str r0, [r4, #8]
	cmp r7, #1
	bne _080ABB64
	movs r0, #0
	strb r0, [r4, #0x12]
_080ABB64:
	movs r0, #0x24
	ldrsh r1, [r4, r0]
	movs r2, #0
	ldrsh r0, [r6, r2]
	subs r5, r1, r0
	cmp r5, #0
	bgt _080ABB98
	ldr r1, [r4, #0xc]
	ldr r0, [r4, #0x28]
	cmp r1, r0
	ble _080ABB84
	adds r0, r4, #0
	bl sub_80AB9C4
	ldr r0, [r4, #0xc]
	b _080ABB86
_080ABB84:
	adds r0, r1, #0
_080ABB86:
	adds r0, r5, r0
	cmp r0, #0
	ble _080ABB98
	rsbs r0, r5, #0
	str r0, [r4, #0xc]
	cmp r7, #1
	bne _080ABB98
	movs r0, #0
	strb r0, [r4, #0x13]
_080ABB98:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80ABBA0
sub_80ABBA0: @ 0x080ABBA0
	push {lr}
	sub sp, #8
	adds r2, r0, #0
	ldr r0, [r2, #0x24]
	str r0, [r2]
	adds r0, r2, #0
	adds r0, #0x10
	adds r1, r2, #0
	adds r1, #0x1c
	movs r3, #0
	str r3, [sp]
	str r3, [sp, #4]
	bl sub_80AC388
	add sp, #8
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80ABBC4
sub_80ABBC4: @ 0x080ABBC4
	push {lr}
	sub sp, #8
	adds r2, r0, #0
	ldr r0, [r2, #0x24]
	rsbs r0, r0, #0
	str r0, [r2, #4]
	adds r0, r2, #0
	adds r0, #0x10
	adds r1, r2, #0
	adds r1, #0x1c
	adds r3, r2, #4
	movs r2, #0
	str r2, [sp]
	str r2, [sp, #4]
	bl sub_80AC388
	add sp, #8
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80ABBEC
sub_80ABBEC: @ 0x080ABBEC
	push {lr}
	sub sp, #8
	adds r2, r0, #0
	ldr r0, [r2, #0x24]
	rsbs r0, r0, #0
	str r0, [r2, #8]
	adds r0, r2, #0
	adds r0, #0x10
	adds r1, r2, #0
	adds r1, #0x1c
	adds r2, #8
	str r2, [sp]
	movs r2, #0
	str r2, [sp, #4]
	movs r3, #0
	bl sub_80AC388
	add sp, #8
	pop {r0}
	bx r0

	thumb_func_start sub_80ABC14
sub_80ABC14: @ 0x080ABC14
	push {lr}
	sub sp, #8
	adds r3, r0, #0
	ldr r0, [r3, #0x24]
	str r0, [r3, #0xc]
	adds r0, r3, #0
	adds r0, #0x10
	adds r1, r3, #0
	adds r1, #0x1c
	movs r2, #0
	str r2, [sp]
	adds r2, r3, #0
	adds r2, #0xc
	str r2, [sp, #4]
	movs r2, #0
	movs r3, #0
	bl sub_80AC388
	add sp, #8
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80ABC40
sub_80ABC40: @ 0x080ABC40
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x24
	ldr r4, [sp, #0x44]
	subs r2, r2, r0
	str r2, [sp, #0x10]
	subs r3, r3, r1
	mov sl, r3
	adds r1, r2, #0
	cmp r2, #0
	bge _080ABC5E
	rsbs r1, r2, #0
_080ABC5E:
	mov r0, sl
	cmp r0, #0
	bge _080ABC66
	rsbs r0, r0, #0
_080ABC66:
	movs r2, #0
	str r2, [sp, #0x14]
	lsls r2, r1, #1
	lsls r3, r0, #1
	adds r0, r3, r0
	cmp r2, r0
	ble _080ABC7A
	movs r5, #1
	str r5, [sp, #0x14]
	b _080ABC86
_080ABC7A:
	adds r0, r2, r1
	cmp r0, r3
	bge _080ABC86
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [sp, #0x14]
_080ABC86:
	ldr r1, _080ABCB8 @ =0x7FFFFFFF
	str r1, [sp, #0x18]
	movs r2, #0
	str r2, [sp, #0x1c]
	movs r5, #0
	str r5, [sp, #0x20]
_080ABC92:
	ldr r7, [sp, #0x20]
	ldr r0, [sp, #0x48]
	adds r1, r7, #0
	bl sub_80AB7A4
	adds r5, r0, #0
	movs r0, #1
	mov r8, r0
	movs r1, #0
	mov sb, r1
	movs r1, #1
	cmp r5, #1
	beq _080ABD04
	cmp r5, #1
	bgt _080ABCBC
	cmp r5, #0
	beq _080ABCC6
	b _080ABDC8
	.align 2, 0
_080ABCB8: .4byte 0x7FFFFFFF
_080ABCBC:
	cmp r5, #2
	beq _080ABD3E
	cmp r5, #3
	beq _080ABD7E
	b _080ABDC8
_080ABCC6:
	movs r0, #0
	mov r2, sl
	cmp r2, #0
	bgt _080ABCD0
	movs r0, #1
_080ABCD0:
	mov r8, r0
	ldr r0, [sp, #0x14]
	lsrs r0, r0, #0x1f
	mov sb, r0
	movs r6, #0
	ldr r1, [r4]
	ldr r0, [r4, #0x28]
	cmp r1, r0
	ble _080ABCEC
	adds r0, r4, #0
	bl sub_80AB85C
	ldr r0, [r4]
	b _080ABCEE
_080ABCEC:
	adds r0, r1, #0
_080ABCEE:
	cmp r0, #0
	bne _080ABDC6
	ldr r1, [r4]
	ldr r0, [r4, #0x28]
	cmp r1, r0
	ble _080ABD00
	adds r0, r4, #0
	bl sub_80AB85C
_080ABD00:
	ldrb r0, [r4, #0x10]
	b _080ABDC0
_080ABD04:
	mov r1, sl
	mvns r0, r1
	lsrs r0, r0, #0x1f
	mov r8, r0
	ldr r2, [sp, #0x14]
	lsrs r2, r2, #0x1f
	mov sb, r2
	movs r6, #0
	ldr r1, [r4, #4]
	ldr r0, [r4, #0x28]
	cmn r1, r0
	bge _080ABD26
	adds r0, r4, #0
	bl sub_80AB8D0
	ldr r0, [r4, #4]
	b _080ABD28
_080ABD26:
	adds r0, r1, #0
_080ABD28:
	cmp r0, #0
	bne _080ABDC6
	ldr r1, [r4, #0x28]
	ldr r0, [r4, #4]
	cmn r0, r1
	bge _080ABD3A
	adds r0, r4, #0
	bl sub_80AB8D0
_080ABD3A:
	ldrb r0, [r4, #0x11]
	b _080ABDC0
_080ABD3E:
	ldr r1, [sp, #0x10]
	mvns r0, r1
	lsrs r0, r0, #0x1f
	mov r8, r0
	movs r0, #0
	ldr r2, [sp, #0x14]
	cmp r2, #0
	ble _080ABD50
	movs r0, #1
_080ABD50:
	mov sb, r0
	movs r6, #0
	ldr r1, [r4, #8]
	ldr r0, [r4, #0x28]
	cmn r1, r0
	bge _080ABD66
	adds r0, r4, #0
	bl sub_80AB948
	ldr r0, [r4, #8]
	b _080ABD68
_080ABD66:
	adds r0, r1, #0
_080ABD68:
	cmp r0, #0
	bne _080ABDC6
	ldr r1, [r4, #0x28]
	ldr r0, [r4, #8]
	cmn r0, r1
	bge _080ABD7A
	adds r0, r4, #0
	bl sub_80AB948
_080ABD7A:
	ldrb r0, [r4, #0x12]
	b _080ABDC0
_080ABD7E:
	movs r0, #0
	ldr r1, [sp, #0x10]
	cmp r1, #0
	bgt _080ABD88
	movs r0, #1
_080ABD88:
	mov r8, r0
	movs r0, #0
	ldr r2, [sp, #0x14]
	cmp r2, #0
	ble _080ABD94
	movs r0, #1
_080ABD94:
	mov sb, r0
	movs r6, #0
	ldr r1, [r4, #0xc]
	ldr r0, [r4, #0x28]
	cmp r1, r0
	ble _080ABDAA
	adds r0, r4, #0
	bl sub_80AB9C4
	ldr r0, [r4, #0xc]
	b _080ABDAC
_080ABDAA:
	adds r0, r1, #0
_080ABDAC:
	cmp r0, #0
	bne _080ABDC6
	ldr r1, [r4, #0xc]
	ldr r0, [r4, #0x28]
	cmp r1, r0
	ble _080ABDBE
	adds r0, r4, #0
	bl sub_80AB9C4
_080ABDBE:
	ldrb r0, [r4, #0x13]
_080ABDC0:
	cmp r0, #0
	bne _080ABDC6
	movs r6, #1
_080ABDC6:
	adds r1, r6, #0
_080ABDC8:
	movs r3, #1
	rsbs r3, r3, #0
	mov r0, r8
	cmp r0, #0
	beq _080ABDD4
	movs r3, #1
_080ABDD4:
	rsbs r0, r1, #0
	orrs r0, r1
	asrs r1, r0, #0x1f
	movs r0, #8
	ands r1, r0
	cmp r7, #2
	bgt _080ABDF2
	cmp r7, #1
	bge _080ABDEE
	cmp r7, #0
	bne _080ABDF2
	movs r2, #0
	b _080ABDF4
_080ABDEE:
	movs r2, #1
	b _080ABDF4
_080ABDF2:
	movs r2, #2
_080ABDF4:
	mov r0, sb
	cmp r0, #0
	beq _080ABE00
	lsls r0, r3, #1
	adds r0, r1, r0
	b _080ABE02
_080ABE00:
	adds r0, r1, r3
_080ABE02:
	adds r0, r0, r2
	ldr r1, [sp, #0x18]
	cmp r0, r1
	bne _080ABE18
	ldr r2, [sp, #0x1c]
	lsls r0, r2, #2
	add r0, sp
	str r5, [r0]
	adds r2, #1
	str r2, [sp, #0x1c]
	b _080ABE26
_080ABE18:
	ldr r1, [sp, #0x18]
	cmp r0, r1
	bge _080ABE26
	str r5, [sp]
	movs r2, #1
	str r2, [sp, #0x1c]
	str r0, [sp, #0x18]
_080ABE26:
	ldr r5, [sp, #0x20]
	adds r5, #1
	str r5, [sp, #0x20]
	cmp r5, #3
	bgt _080ABE32
	b _080ABC92
_080ABE32:
	mov r4, sp
	ldr r0, [sp, #0x1c]
	cmp r0, #1
	bls _080ABE42
	bl sub_80AB788
	lsls r0, r0, #2
	b _080ABE44
_080ABE42:
	movs r0, #0
_080ABE44:
	adds r0, r4, r0
	ldr r0, [r0]
	add sp, #0x24
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_80ABE58
sub_80ABE58: @ 0x080ABE58
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x24
	ldr r4, [sp, #0x44]
	subs r2, r2, r0
	str r2, [sp, #0x10]
	subs r3, r3, r1
	mov sl, r3
	adds r1, r2, #0
	cmp r2, #0
	bge _080ABE76
	rsbs r1, r2, #0
_080ABE76:
	mov r0, sl
	cmp r0, #0
	bge _080ABE7E
	rsbs r0, r0, #0
_080ABE7E:
	movs r2, #0
	str r2, [sp, #0x14]
	lsls r2, r1, #1
	lsls r3, r0, #1
	adds r0, r3, r0
	cmp r2, r0
	ble _080ABE92
	movs r5, #1
	str r5, [sp, #0x14]
	b _080ABE9E
_080ABE92:
	adds r0, r2, r1
	cmp r0, r3
	bge _080ABE9E
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [sp, #0x14]
_080ABE9E:
	ldr r1, _080ABED0 @ =0x7FFFFFFF
	str r1, [sp, #0x18]
	movs r2, #0
	str r2, [sp, #0x1c]
	movs r5, #0
	str r5, [sp, #0x20]
_080ABEAA:
	ldr r7, [sp, #0x20]
	ldr r0, [sp, #0x48]
	adds r1, r7, #0
	bl sub_80AB7A4
	adds r5, r0, #0
	movs r0, #1
	mov r8, r0
	movs r1, #0
	mov sb, r1
	movs r1, #1
	cmp r5, #1
	beq _080ABF1C
	cmp r5, #1
	bgt _080ABED4
	cmp r5, #0
	beq _080ABEDE
	b _080ABFE0
	.align 2, 0
_080ABED0: .4byte 0x7FFFFFFF
_080ABED4:
	cmp r5, #2
	beq _080ABF56
	cmp r5, #3
	beq _080ABF96
	b _080ABFE0
_080ABEDE:
	movs r0, #0
	mov r2, sl
	cmp r2, #0
	bgt _080ABEE8
	movs r0, #1
_080ABEE8:
	mov r8, r0
	ldr r0, [sp, #0x14]
	lsrs r0, r0, #0x1f
	mov sb, r0
	movs r6, #0
	ldr r1, [r4]
	ldr r0, [r4, #0x28]
	cmp r1, r0
	ble _080ABF04
	adds r0, r4, #0
	bl sub_80AB85C
	ldr r0, [r4]
	b _080ABF06
_080ABF04:
	adds r0, r1, #0
_080ABF06:
	cmp r0, #0
	bne _080ABFDE
	ldr r1, [r4]
	ldr r0, [r4, #0x28]
	cmp r1, r0
	ble _080ABF18
	adds r0, r4, #0
	bl sub_80AB85C
_080ABF18:
	ldrb r0, [r4, #0x10]
	b _080ABFD8
_080ABF1C:
	mov r1, sl
	mvns r0, r1
	lsrs r0, r0, #0x1f
	mov r8, r0
	ldr r2, [sp, #0x14]
	lsrs r2, r2, #0x1f
	mov sb, r2
	movs r6, #0
	ldr r1, [r4, #4]
	ldr r0, [r4, #0x28]
	cmn r1, r0
	bge _080ABF3E
	adds r0, r4, #0
	bl sub_80AB8D0
	ldr r0, [r4, #4]
	b _080ABF40
_080ABF3E:
	adds r0, r1, #0
_080ABF40:
	cmp r0, #0
	bne _080ABFDE
	ldr r1, [r4, #0x28]
	ldr r0, [r4, #4]
	cmn r0, r1
	bge _080ABF52
	adds r0, r4, #0
	bl sub_80AB8D0
_080ABF52:
	ldrb r0, [r4, #0x11]
	b _080ABFD8
_080ABF56:
	ldr r1, [sp, #0x10]
	mvns r0, r1
	lsrs r0, r0, #0x1f
	mov r8, r0
	movs r0, #0
	ldr r2, [sp, #0x14]
	cmp r2, #0
	ble _080ABF68
	movs r0, #1
_080ABF68:
	mov sb, r0
	movs r6, #0
	ldr r1, [r4, #8]
	ldr r0, [r4, #0x28]
	cmn r1, r0
	bge _080ABF7E
	adds r0, r4, #0
	bl sub_80AB948
	ldr r0, [r4, #8]
	b _080ABF80
_080ABF7E:
	adds r0, r1, #0
_080ABF80:
	cmp r0, #0
	bne _080ABFDE
	ldr r1, [r4, #0x28]
	ldr r0, [r4, #8]
	cmn r0, r1
	bge _080ABF92
	adds r0, r4, #0
	bl sub_80AB948
_080ABF92:
	ldrb r0, [r4, #0x12]
	b _080ABFD8
_080ABF96:
	movs r0, #0
	ldr r1, [sp, #0x10]
	cmp r1, #0
	bgt _080ABFA0
	movs r0, #1
_080ABFA0:
	mov r8, r0
	movs r0, #0
	ldr r2, [sp, #0x14]
	cmp r2, #0
	ble _080ABFAC
	movs r0, #1
_080ABFAC:
	mov sb, r0
	movs r6, #0
	ldr r1, [r4, #0xc]
	ldr r0, [r4, #0x28]
	cmp r1, r0
	ble _080ABFC2
	adds r0, r4, #0
	bl sub_80AB9C4
	ldr r0, [r4, #0xc]
	b _080ABFC4
_080ABFC2:
	adds r0, r1, #0
_080ABFC4:
	cmp r0, #0
	bne _080ABFDE
	ldr r1, [r4, #0xc]
	ldr r0, [r4, #0x28]
	cmp r1, r0
	ble _080ABFD6
	adds r0, r4, #0
	bl sub_80AB9C4
_080ABFD6:
	ldrb r0, [r4, #0x13]
_080ABFD8:
	cmp r0, #0
	bne _080ABFDE
	movs r6, #1
_080ABFDE:
	adds r1, r6, #0
_080ABFE0:
	movs r3, #1
	mov r0, r8
	cmp r0, #0
	beq _080ABFEA
	subs r3, #2
_080ABFEA:
	rsbs r0, r1, #0
	orrs r0, r1
	asrs r1, r0, #0x1f
	movs r0, #8
	ands r1, r0
	cmp r7, #2
	bgt _080AC008
	cmp r7, #1
	bge _080AC004
	cmp r7, #0
	bne _080AC008
	movs r2, #0
	b _080AC00A
_080AC004:
	movs r2, #1
	b _080AC00A
_080AC008:
	movs r2, #2
_080AC00A:
	mov r0, sb
	cmp r0, #0
	beq _080AC016
	lsls r0, r3, #1
	adds r0, r1, r0
	b _080AC018
_080AC016:
	adds r0, r1, r3
_080AC018:
	adds r0, r0, r2
	ldr r1, [sp, #0x18]
	cmp r0, r1
	bne _080AC02E
	ldr r2, [sp, #0x1c]
	lsls r0, r2, #2
	add r0, sp
	str r5, [r0]
	adds r2, #1
	str r2, [sp, #0x1c]
	b _080AC03C
_080AC02E:
	ldr r1, [sp, #0x18]
	cmp r0, r1
	bge _080AC03C
	str r5, [sp]
	movs r2, #1
	str r2, [sp, #0x1c]
	str r0, [sp, #0x18]
_080AC03C:
	ldr r5, [sp, #0x20]
	adds r5, #1
	str r5, [sp, #0x20]
	cmp r5, #3
	bgt _080AC048
	b _080ABEAA
_080AC048:
	mov r4, sp
	ldr r0, [sp, #0x1c]
	cmp r0, #1
	bls _080AC058
	bl sub_80AB788
	lsls r0, r0, #2
	b _080AC05A
_080AC058:
	movs r0, #0
_080AC05A:
	adds r0, r4, r0
	ldr r0, [r0]
	add sp, #0x24
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80AC070
sub_80AC070: @ 0x080AC070
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r2, r0, #0
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x13
	str r0, [sp]
	movs r3, #4
	ldrsh r0, [r1, r3]
	adds r0, #7
	asrs r0, r0, #3
	mov r8, r0
	ldrh r0, [r1, #2]
	lsls r0, r0, #0x10
	asrs r3, r0, #0x13
	movs r4, #6
	ldrsh r0, [r1, r4]
	adds r0, #7
	asrs r0, r0, #3
	mov sl, r0
	ldr r7, [r2]
	ldrh r0, [r2, #8]
	mov sb, r0
	cmp r7, #0
	beq _080AC110
	ldr r1, [sp]
	cmp r1, #0
	blt _080AC110
	cmp r8, sb
	bhi _080AC110
	cmp r3, #0
	blt _080AC110
	ldrh r4, [r2, #0xa]
	cmp sl, r4
	bgt _080AC110
	ldr r2, [r2, #4]
	mov ip, r2
	adds r6, r3, #0
	cmp r6, sl
	bge _080AC10C
	mov r5, sb
	muls r5, r6, r5
_080AC0CC:
	ldr r2, [sp]
	cmp r2, r8
	bge _080AC104
	adds r0, r2, r5
	lsls r4, r0, #2
	mov r1, ip
	adds r0, r5, r1
	adds r3, r2, r0
_080AC0DC:
	mov r0, ip
	cmp r0, #0
	beq _080AC0EA
	ldrb r0, [r3]
	lsls r0, r0, #2
	adds r0, r7, r0
	b _080AC0EC
_080AC0EA:
	adds r0, r7, r4
_080AC0EC:
	ldr r1, [r0]
	lsls r0, r1, #0x1f
	cmp r0, #0
	bne _080AC110
	lsls r0, r1, #0x1e
	cmp r0, #0
	blt _080AC110
	adds r4, #4
	adds r3, #1
	adds r2, #1
	cmp r2, r8
	blt _080AC0DC
_080AC104:
	add r5, sb
	adds r6, #1
	cmp r6, sl
	blt _080AC0CC
_080AC10C:
	movs r0, #0
	b _080AC112
_080AC110:
	movs r0, #1
_080AC112:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80AC124
sub_80AC124: @ 0x080AC124
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x34
	adds r4, r0, #0
	str r1, [sp]
	str r2, [sp, #4]
	str r3, [sp, #8]
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r7, r0, #0x13
	movs r2, #4
	ldrsh r0, [r1, r2]
	adds r0, #7
	asrs r0, r0, #3
	str r0, [sp, #0xc]
	ldrh r0, [r1, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x13
	str r0, [sp, #0x10]
	movs r3, #6
	ldrsh r1, [r1, r3]
	adds r0, r1, #7
	asrs r0, r0, #3
	str r0, [sp, #0x14]
	ldr r0, [r4]
	mov r8, r0
	ldrh r2, [r4, #8]
	mov sb, r2
	ldr r3, [r4, #4]
	mov sl, r3
	ldr r0, [sp, #4]
	cmp r0, #0
	beq _080AC1E0
	ldr r2, [r0]
	str r2, [sp, #0x18]
	ldr r3, [sp, #0x14]
	lsls r0, r3, #3
	subs r6, r0, r1
	cmp r6, r2
	bge _080AC1E0
	ldrh r0, [r4, #0xa]
	subs r0, #1
	str r0, [sp, #0x1c]
	mov ip, r3
	cmp r3, r0
	bgt _080AC1DC
	mov r5, sb
	muls r5, r3, r5
_080AC18A:
	adds r4, r7, #0
	ldr r0, [sp, #0xc]
	cmp r7, r0
	bge _080AC1C8
	adds r0, r7, r5
	lsls r3, r0, #2
	mov r1, sl
	adds r0, r5, r1
	adds r2, r7, r0
_080AC19C:
	mov r0, sl
	cmp r0, #0
	beq _080AC1AA
	ldrb r0, [r2]
	lsls r0, r0, #2
	add r0, r8
	b _080AC1AE
_080AC1AA:
	mov r1, r8
	adds r0, r1, r3
_080AC1AE:
	ldr r1, [r0]
	lsls r0, r1, #0x1f
	cmp r0, #0
	bne _080AC1DC
	lsls r0, r1, #0x1e
	cmp r0, #0
	blt _080AC1DC
	adds r3, #4
	adds r2, #1
	adds r4, #1
	ldr r0, [sp, #0xc]
	cmp r4, r0
	blt _080AC19C
_080AC1C8:
	adds r6, #8
	ldr r1, [sp, #0x18]
	cmp r6, r1
	bge _080AC1E0
	add r5, sb
	movs r2, #1
	add ip, r2
	ldr r3, [sp, #0x1c]
	cmp ip, r3
	ble _080AC18A
_080AC1DC:
	ldr r0, [sp, #4]
	str r6, [r0]
_080AC1E0:
	ldr r1, [sp, #8]
	cmp r1, #0
	beq _080AC26A
	ldr r2, [r1]
	str r2, [sp, #0x20]
	ldr r3, [sp, #0x10]
	lsls r1, r3, #3
	ldr r2, [sp]
	movs r3, #2
	ldrsh r0, [r2, r3]
	subs r1, r1, r0
	mov ip, r1
	ldr r0, [sp, #0x20]
	cmp ip, r0
	ble _080AC26A
	ldr r6, [sp, #0x10]
	subs r6, #1
	cmp r6, #0
	blt _080AC264
	mov r5, sb
	muls r5, r6, r5
	mov r1, sb
	rsbs r1, r1, #0
	str r1, [sp, #0x30]
_080AC210:
	adds r4, r7, #0
	ldr r2, [sp, #0xc]
	cmp r7, r2
	bge _080AC24E
	adds r0, r7, r5
	lsls r3, r0, #2
	mov r1, sl
	adds r0, r5, r1
	adds r1, r7, r0
_080AC222:
	mov r2, sl
	cmp r2, #0
	beq _080AC230
	ldrb r0, [r1]
	lsls r0, r0, #2
	add r0, r8
	b _080AC234
_080AC230:
	mov r2, r8
	adds r0, r2, r3
_080AC234:
	ldr r2, [r0]
	lsls r0, r2, #0x1f
	cmp r0, #0
	bne _080AC264
	lsls r0, r2, #0x1e
	cmp r0, #0
	blt _080AC264
	adds r3, #4
	adds r1, #1
	adds r4, #1
	ldr r0, [sp, #0xc]
	cmp r4, r0
	blt _080AC222
_080AC24E:
	movs r1, #8
	rsbs r1, r1, #0
	add ip, r1
	ldr r2, [sp, #0x20]
	cmp ip, r2
	ble _080AC26A
	ldr r3, [sp, #0x30]
	adds r5, r5, r3
	subs r6, #1
	cmp r6, #0
	bge _080AC210
_080AC264:
	mov r0, ip
	ldr r1, [sp, #8]
	str r0, [r1]
_080AC26A:
	ldr r2, [sp, #0x54]
	cmp r2, #0
	beq _080AC2EA
	ldr r3, [r2]
	mov ip, r3
	lsls r1, r7, #3
	ldr r2, [sp]
	movs r3, #0
	ldrsh r0, [r2, r3]
	subs r6, r1, r0
	cmp r6, ip
	ble _080AC2EA
	subs r5, r7, #1
	cmp r5, #0
	blt _080AC2E6
	ldr r1, [sp, #0x10]
	lsls r0, r1, #2
	mov r2, sb
	muls r2, r0, r2
	str r2, [sp, #0x2c]
_080AC292:
	ldr r4, [sp, #0x10]
	ldr r3, [sp, #0x14]
	cmp r4, r3
	bge _080AC2DA
	lsls r0, r5, #2
	ldr r1, [sp, #0x2c]
	adds r3, r1, r0
	mov r1, sb
	muls r1, r4, r1
	mov r2, sl
	adds r0, r5, r2
	adds r1, r1, r0
	mov r0, sb
	lsls r7, r0, #2
_080AC2AE:
	mov r2, sl
	cmp r2, #0
	beq _080AC2BC
	ldrb r0, [r1]
	lsls r0, r0, #2
	add r0, r8
	b _080AC2C0
_080AC2BC:
	mov r2, r8
	adds r0, r2, r3
_080AC2C0:
	ldr r2, [r0]
	lsls r0, r2, #0x1f
	cmp r0, #0
	bne _080AC2E6
	lsls r0, r2, #0x1e
	cmp r0, #0
	blt _080AC2E6
	adds r3, r3, r7
	add r1, sb
	adds r4, #1
	ldr r0, [sp, #0x14]
	cmp r4, r0
	blt _080AC2AE
_080AC2DA:
	subs r6, #8
	cmp r6, ip
	ble _080AC2EA
	subs r5, #1
	cmp r5, #0
	bge _080AC292
_080AC2E6:
	ldr r1, [sp, #0x54]
	str r6, [r1]
_080AC2EA:
	ldr r2, [sp, #0x58]
	cmp r2, #0
	beq _080AC378
	ldr r3, [r2]
	str r3, [sp, #0x24]
	ldr r0, [sp, #0xc]
	lsls r1, r0, #3
	ldr r2, [sp]
	movs r3, #4
	ldrsh r0, [r2, r3]
	subs r6, r1, r0
	ldr r0, [sp, #0x24]
	cmp r6, r0
	bge _080AC378
	movs r1, #1
	rsbs r1, r1, #0
	add r1, sb
	mov ip, r1
	ldr r5, [sp, #0xc]
	cmp r5, ip
	bgt _080AC374
	ldr r2, [sp, #0x10]
	lsls r0, r2, #2
	mov r3, sb
	muls r3, r0, r3
	str r3, [sp, #0x28]
_080AC31E:
	ldr r3, [sp, #0x10]
	ldr r0, [sp, #0x14]
	cmp r3, r0
	bge _080AC366
	lsls r0, r5, #2
	ldr r1, [sp, #0x28]
	adds r4, r1, r0
	mov r1, sb
	muls r1, r3, r1
	mov r2, sl
	adds r0, r5, r2
	adds r1, r1, r0
	mov r0, sb
	lsls r7, r0, #2
_080AC33A:
	mov r2, sl
	cmp r2, #0
	beq _080AC348
	ldrb r0, [r1]
	lsls r0, r0, #2
	add r0, r8
	b _080AC34C
_080AC348:
	mov r2, r8
	adds r0, r2, r4
_080AC34C:
	ldr r2, [r0]
	lsls r0, r2, #0x1f
	cmp r0, #0
	bne _080AC374
	lsls r0, r2, #0x1e
	cmp r0, #0
	blt _080AC374
	adds r4, r4, r7
	add r1, sb
	adds r3, #1
	ldr r0, [sp, #0x14]
	cmp r3, r0
	blt _080AC33A
_080AC366:
	adds r6, #8
	ldr r1, [sp, #0x24]
	cmp r6, r1
	bge _080AC378
	adds r5, #1
	cmp r5, ip
	ble _080AC31E
_080AC374:
	ldr r2, [sp, #0x58]
	str r6, [r2]
_080AC378:
	add sp, #0x34
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80AC388
sub_80AC388: @ 0x080AC388
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x30
	adds r4, r0, #0
	str r1, [sp]
	str r2, [sp, #4]
	str r3, [sp, #8]
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r6, r0, #0x13
	movs r2, #4
	ldrsh r0, [r1, r2]
	adds r0, #7
	asrs r0, r0, #3
	mov sl, r0
	ldrh r0, [r1, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x13
	str r0, [sp, #0xc]
	movs r3, #6
	ldrsh r1, [r1, r3]
	adds r0, r1, #7
	asrs r0, r0, #3
	str r0, [sp, #0x10]
	ldr r7, [r4]
	mov ip, r7
	ldrh r0, [r4, #8]
	mov r8, r0
	ldr r2, [r4, #4]
	mov sb, r2
	ldr r3, [sp, #4]
	cmp r3, #0
	beq _080AC43C
	ldr r7, [r3]
	str r7, [sp, #0x14]
	ldr r2, [sp, #0x10]
	lsls r0, r2, #3
	subs r5, r0, r1
	cmp r5, r7
	bge _080AC43C
	ldrh r0, [r4, #0xa]
	subs r0, #1
	str r0, [sp, #0x18]
	str r2, [sp, #0x2c]
	cmp r2, r0
	bgt _080AC438
	mov r4, r8
	muls r4, r2, r4
_080AC3EE:
	adds r3, r6, #0
	cmp r6, sl
	bge _080AC422
	adds r0, r6, r4
	lsls r2, r0, #2
	mov r7, sb
	adds r0, r4, r7
	adds r1, r6, r0
_080AC3FE:
	mov r0, sb
	cmp r0, #0
	beq _080AC40C
	ldrb r0, [r1]
	lsls r0, r0, #2
	add r0, ip
	b _080AC410
_080AC40C:
	mov r7, ip
	adds r0, r7, r2
_080AC410:
	ldr r0, [r0]
	lsls r0, r0, #0x1f
	cmp r0, #0
	bne _080AC438
	adds r2, #4
	adds r1, #1
	adds r3, #1
	cmp r3, sl
	blt _080AC3FE
_080AC422:
	adds r5, #8
	ldr r0, [sp, #0x14]
	cmp r5, r0
	bge _080AC43C
	add r4, r8
	ldr r1, [sp, #0x2c]
	adds r1, #1
	str r1, [sp, #0x2c]
	ldr r2, [sp, #0x18]
	cmp r1, r2
	ble _080AC3EE
_080AC438:
	ldr r3, [sp, #4]
	str r5, [r3]
_080AC43C:
	ldr r7, [sp, #8]
	cmp r7, #0
	beq _080AC4BC
	ldr r0, [r7]
	str r0, [sp, #0x1c]
	ldr r2, [sp, #0xc]
	lsls r1, r2, #3
	ldr r3, [sp]
	movs r7, #2
	ldrsh r0, [r3, r7]
	subs r1, r1, r0
	str r1, [sp, #0x2c]
	ldr r0, [sp, #0x1c]
	cmp r1, r0
	ble _080AC4BC
	adds r5, r2, #0
	subs r5, #1
	cmp r5, #0
	blt _080AC4B6
	mov r4, r8
	muls r4, r5, r4
	mov r1, r8
	rsbs r1, r1, #0
	str r1, [sp, #0x28]
_080AC46C:
	adds r3, r6, #0
	cmp r6, sl
	bge _080AC4A0
	adds r0, r6, r4
	lsls r1, r0, #2
	mov r2, sb
	adds r0, r4, r2
	adds r2, r6, r0
_080AC47C:
	mov r7, sb
	cmp r7, #0
	beq _080AC48A
	ldrb r0, [r2]
	lsls r0, r0, #2
	add r0, ip
	b _080AC48E
_080AC48A:
	mov r7, ip
	adds r0, r7, r1
_080AC48E:
	ldr r0, [r0]
	lsls r0, r0, #0x1f
	cmp r0, #0
	bne _080AC4B6
	adds r1, #4
	adds r2, #1
	adds r3, #1
	cmp r3, sl
	blt _080AC47C
_080AC4A0:
	ldr r0, [sp, #0x2c]
	subs r0, #8
	str r0, [sp, #0x2c]
	ldr r1, [sp, #0x1c]
	cmp r0, r1
	ble _080AC4BC
	ldr r2, [sp, #0x28]
	adds r4, r4, r2
	subs r5, #1
	cmp r5, #0
	bge _080AC46C
_080AC4B6:
	ldr r3, [sp, #0x2c]
	ldr r7, [sp, #8]
	str r3, [r7]
_080AC4BC:
	ldr r0, [sp, #0x50]
	cmp r0, #0
	beq _080AC53A
	ldr r1, [r0]
	str r1, [sp, #0x2c]
	lsls r1, r6, #3
	ldr r2, [sp]
	movs r3, #0
	ldrsh r0, [r2, r3]
	subs r5, r1, r0
	ldr r7, [sp, #0x2c]
	cmp r5, r7
	ble _080AC53A
	subs r4, r6, #1
	cmp r4, #0
	blt _080AC536
	ldr r1, [sp, #0xc]
	lsls r0, r1, #2
	mov r2, r8
	muls r2, r0, r2
	str r2, [sp, #0x24]
_080AC4E6:
	ldr r3, [sp, #0xc]
	ldr r6, [sp, #0x10]
	cmp r3, r6
	bge _080AC528
	lsls r0, r4, #2
	ldr r7, [sp, #0x24]
	adds r2, r7, r0
	mov r1, r8
	muls r1, r3, r1
	mov r6, sb
	adds r0, r4, r6
	adds r1, r1, r0
	mov r7, r8
	lsls r6, r7, #2
_080AC502:
	mov r0, sb
	cmp r0, #0
	beq _080AC510
	ldrb r0, [r1]
	lsls r0, r0, #2
	add r0, ip
	b _080AC514
_080AC510:
	mov r7, ip
	adds r0, r7, r2
_080AC514:
	ldr r0, [r0]
	lsls r0, r0, #0x1f
	cmp r0, #0
	bne _080AC536
	adds r2, r2, r6
	add r1, r8
	adds r3, #1
	ldr r0, [sp, #0x10]
	cmp r3, r0
	blt _080AC502
_080AC528:
	subs r5, #8
	ldr r1, [sp, #0x2c]
	cmp r5, r1
	ble _080AC53A
	subs r4, #1
	cmp r4, #0
	bge _080AC4E6
_080AC536:
	ldr r2, [sp, #0x50]
	str r5, [r2]
_080AC53A:
	ldr r3, [sp, #0x54]
	cmp r3, #0
	beq _080AC5C0
	ldr r6, [r3]
	str r6, [sp, #0x20]
	mov r7, sl
	lsls r1, r7, #3
	ldr r2, [sp]
	movs r3, #4
	ldrsh r0, [r2, r3]
	subs r5, r1, r0
	cmp r5, r6
	bge _080AC5C0
	mov r6, r8
	subs r6, #1
	str r6, [sp, #0x2c]
	mov r4, sl
	cmp r4, r6
	bgt _080AC5BC
	ldr r7, [sp, #0xc]
	lsls r0, r7, #2
	mov r1, r8
	muls r1, r0, r1
	mov sl, r1
_080AC56A:
	ldr r2, [sp, #0xc]
	ldr r3, [sp, #0x10]
	cmp r2, r3
	bge _080AC5AC
	lsls r0, r4, #2
	mov r6, sl
	adds r3, r6, r0
	mov r1, r8
	muls r1, r2, r1
	mov r7, sb
	adds r0, r4, r7
	adds r1, r1, r0
	mov r0, r8
	lsls r6, r0, #2
_080AC586:
	mov r7, sb
	cmp r7, #0
	beq _080AC594
	ldrb r0, [r1]
	lsls r0, r0, #2
	add r0, ip
	b _080AC598
_080AC594:
	mov r7, ip
	adds r0, r7, r3
_080AC598:
	ldr r0, [r0]
	lsls r0, r0, #0x1f
	cmp r0, #0
	bne _080AC5BC
	adds r3, r3, r6
	add r1, r8
	adds r2, #1
	ldr r0, [sp, #0x10]
	cmp r2, r0
	blt _080AC586
_080AC5AC:
	adds r5, #8
	ldr r1, [sp, #0x20]
	cmp r5, r1
	bge _080AC5C0
	adds r4, #1
	ldr r2, [sp, #0x2c]
	cmp r4, r2
	ble _080AC56A
_080AC5BC:
	ldr r3, [sp, #0x54]
	str r5, [r3]
_080AC5C0:
	add sp, #0x30
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80AC5D0
sub_80AC5D0: @ 0x080AC5D0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r4, r0, #0
	adds r0, r2, #0
	subs r0, #8
	asrs r3, r0, #3
	subs r0, r1, #6
	asrs r0, r0, #3
	mov sl, r0
	adds r2, #3
	asrs r2, r2, #3
	mov r8, r2
	adds r1, #5
	asrs r7, r1, #3
	cmp r3, r8
	bgt _080AC618
	cmp sl, r7
	bgt _080AC618
	ldrh r0, [r4, #8]
	mov sb, r0
	cmp r3, #0
	blt _080AC618
	mov r1, sl
	cmp r1, #0
	blt _080AC618
	ldrh r0, [r4, #0xa]
	cmp r8, r0
	bhs _080AC618
	cmp r7, sb
	bhs _080AC618
	ldr r6, [r4]
	cmp r6, #0
	bne _080AC61C
_080AC618:
	movs r0, #0
	b _080AC666
_080AC61C:
	ldr r4, [r4, #4]
	mov ip, r4
	adds r5, r3, #0
	cmp r5, r8
	bgt _080AC664
	mov r4, sb
	muls r4, r5, r4
_080AC62A:
	mov r3, sl
	cmp r3, r7
	bgt _080AC65C
	adds r0, r3, r4
	lsls r2, r0, #2
	mov r1, ip
	adds r0, r4, r1
	adds r1, r3, r0
_080AC63A:
	mov r0, ip
	cmp r0, #0
	beq _080AC648
	ldrb r0, [r1]
	lsls r0, r0, #2
	adds r0, r6, r0
	b _080AC64A
_080AC648:
	adds r0, r6, r2
_080AC64A:
	ldr r0, [r0]
	lsls r0, r0, #0x1e
	cmp r0, #0
	bge _080AC618
	adds r2, #4
	adds r1, #1
	adds r3, #1
	cmp r3, r7
	ble _080AC63A
_080AC65C:
	add r4, sb
	adds r5, #1
	cmp r5, r8
	ble _080AC62A
_080AC664:
	movs r0, #1
_080AC666:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_80AC674
sub_80AC674: @ 0x080AC674
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r5, r0, #0
	mov sl, r1
	ldr r0, [r1]
	movs r1, #0
	mov r2, sl
	str r1, [r2]
	str r0, [r5]
	movs r7, #0xca
	lsls r7, r7, #1
	adds r0, r5, r7
	str r1, [r0]
	movs r0, #0xcc
	lsls r0, r0, #1
	adds r3, r5, r0
	movs r2, #0x15
	movs r1, #0xff
	mov ip, r1
	movs r4, #0
	movs r7, #1
	mov r8, r7
	movs r6, #1
	rsbs r6, r6, #0
	adds r0, #0xa0
	adds r1, r5, r0
_080AC6B0:
	ldrb r0, [r1]
	mov r7, ip
	orrs r0, r7
	strb r0, [r1]
	strb r4, [r1, #1]
	strb r4, [r1, #2]
	mov r0, r8
	strb r0, [r1, #3]
	adds r1, #0x84
	subs r2, #1
	cmp r2, r6
	bne _080AC6B0
	ldr r1, _080AC814 @ =0x00000B78
	adds r4, r3, r1
	movs r6, #0xc
	ldr r2, _080AC818 @ =0x00000C14
	adds r7, r3, r2
	ldr r0, _080AC81C @ =0x00000C15
	adds r0, r0, r3
	mov r8, r0
	ldr r1, _080AC820 @ =0x0000102C
	adds r1, r5, r1
	str r1, [sp, #8]
	adds r2, r5, #4
	str r2, [sp, #4]
	movs r0, #0xca
	lsls r0, r0, #1
	adds r0, r5, r0
	str r0, [sp, #0xc]
	movs r1, #0
	mov sb, r1
_080AC6EE:
	adds r0, r4, #0
	bl sub_8007128
	adds r0, r4, #0
	bl sub_800736C
	adds r1, r0, #0
	str r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80074C0
	strb r0, [r4, #8]
	movs r0, #0xff
	strb r0, [r4, #9]
	mov r2, sb
	strb r2, [r4, #0xa]
	adds r4, #0xc
	subs r6, #1
	movs r0, #1
	rsbs r0, r0, #0
	cmp r6, r0
	bne _080AC6EE
	movs r4, #0
	strb r4, [r7]
	mov r7, r8
	strb r4, [r7]
	movs r1, #0xdb
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, _080AC824 @ =gUnknown_0858BA28
	bl sub_805E6CC
	movs r2, #0xde
	lsls r2, r2, #4
	adds r0, r5, r2
	ldr r1, _080AC828 @ =gUnknown_086678A0
	bl sub_805E6CC
	movs r7, #0xe1
	lsls r7, r7, #4
	adds r0, r5, r7
	ldr r1, _080AC82C @ =gUnknown_0871EF00
	bl sub_805E6CC
	movs r1, #0xe4
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, _080AC830 @ =gUnknown_086FAA80
	bl sub_805E6CC
	movs r2, #0xe7
	lsls r2, r2, #4
	adds r0, r5, r2
	ldr r1, _080AC834 @ =gUnknown_0871D51C
	bl sub_805E6CC
	adds r7, #0x90
	adds r0, r5, r7
	ldr r1, _080AC838 @ =gUnknown_0871EDD4
	bl sub_805E6CC
	movs r1, #0xed
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, _080AC83C @ =gUnknown_0871ECAC
	bl sub_805E6CC
	movs r2, #0xf0
	lsls r2, r2, #4
	adds r0, r5, r2
	ldr r1, _080AC840 @ =gUnknown_08667060
	bl sub_805E6CC
	adds r7, #0x90
	adds r0, r5, r7
	ldr r1, _080AC844 @ =gUnknown_08727A74
	bl sub_805E6CC
	movs r1, #0xf6
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, _080AC848 @ =gUnknown_08726CCC
	bl sub_805E6CC
	movs r2, #0xf9
	lsls r2, r2, #4
	adds r0, r5, r2
	ldr r1, _080AC84C @ =gUnknown_08727368
	bl sub_805E6CC
	adds r7, #0x90
	adds r0, r5, r7
	ldr r1, _080AC850 @ =gUnknown_08725DA0
	bl sub_805E6CC
	movs r1, #0xff
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, _080AC854 @ =gUnknown_086F2FAC
	bl sub_805E6CC
	movs r2, #0x81
	lsls r2, r2, #5
	adds r0, r5, r2
	str r4, [r0]
	adds r7, #0x64
	adds r0, r5, r7
	str r4, [r0]
	ldr r0, _080AC858 @ =0x00001028
	adds r1, r5, r0
	str r4, [r1]
	movs r0, #0
	ldr r2, [sp, #8]
	strh r4, [r2]
	strh r4, [r2, #2]
	strb r0, [r1, #9]
	str r4, [sp]
	ldr r0, [sp, #4]
	ldr r1, [sp, #0xc]
	cmp r0, r1
	beq _080AC7E8
	movs r2, #0
_080AC7E2:
	stm r0!, {r2}
	cmp r0, r1
	bne _080AC7E2
_080AC7E8:
	mov r7, sl
	ldr r1, [r7]
	cmp r1, #0
	beq _080AC800
	adds r0, r1, #0
	adds r0, #0x90
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080AC800:
	adds r0, r5, #0
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080AC814: .4byte 0x00000B78
_080AC818: .4byte 0x00000C14
_080AC81C: .4byte 0x00000C15
_080AC820: .4byte 0x0000102C
_080AC824: .4byte gUnknown_0858BA28
_080AC828: .4byte gUnknown_086678A0
_080AC82C: .4byte gUnknown_0871EF00
_080AC830: .4byte gUnknown_086FAA80
_080AC834: .4byte gUnknown_0871D51C
_080AC838: .4byte gUnknown_0871EDD4
_080AC83C: .4byte gUnknown_0871ECAC
_080AC840: .4byte gUnknown_08667060
_080AC844: .4byte gUnknown_08727A74
_080AC848: .4byte gUnknown_08726CCC
_080AC84C: .4byte gUnknown_08727368
_080AC850: .4byte gUnknown_08725DA0
_080AC854: .4byte gUnknown_086F2FAC
_080AC858: .4byte 0x00001028

	thumb_func_start sub_80AC85C
sub_80AC85C: @ 0x080AC85C
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r7, r1, #0
	movs r6, #0
	adds r4, r5, #4
_080AC866:
	ldr r1, [r4]
	cmp r1, #0
	beq _080AC878
	ldr r0, [r1, #0x14]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080AC878:
	adds r4, #4
	adds r6, #1
	cmp r6, #0x63
	bls _080AC866
	ldr r1, _080AC95C @ =0x00001028
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080AC896
	ldr r0, [r1, #0x24]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080AC896:
	ldr r2, _080AC960 @ =0x00001024
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	beq _080AC8A6
	movs r1, #3
	bl sub_80AB2E4
_080AC8A6:
	movs r1, #0x81
	lsls r1, r1, #5
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _080AC8B8
	movs r1, #3
	bl sub_803AC78
_080AC8B8:
	movs r2, #0xff
	lsls r2, r2, #4
	adds r0, r5, r2
	ldr r1, _080AC964 @ =gUnknown_080E5A28
	str r1, [r0]
	subs r2, #0x30
	adds r0, r5, r2
	str r1, [r0]
	subs r2, #0x30
	adds r0, r5, r2
	str r1, [r0]
	subs r2, #0x30
	adds r0, r5, r2
	str r1, [r0]
	subs r2, #0x30
	adds r0, r5, r2
	str r1, [r0]
	subs r2, #0x30
	adds r0, r5, r2
	str r1, [r0]
	subs r2, #0x30
	adds r0, r5, r2
	str r1, [r0]
	subs r2, #0x30
	adds r0, r5, r2
	str r1, [r0]
	subs r2, #0x30
	adds r0, r5, r2
	str r1, [r0]
	subs r2, #0x30
	adds r0, r5, r2
	str r1, [r0]
	subs r2, #0x30
	adds r0, r5, r2
	str r1, [r0]
	subs r2, #0x30
	adds r0, r5, r2
	str r1, [r0]
	subs r2, #0x30
	adds r0, r5, r2
	str r1, [r0]
	movs r0, #0xd1
	lsls r0, r0, #4
	adds r6, r5, r0
	cmp r6, #0
	beq _080AC932
	ldr r1, _080AC968 @ =0x00000DAC
	adds r4, r5, r1
	cmp r6, r4
	beq _080AC932
_080AC91C:
	subs r4, #0xc
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	cmp r6, r4
	bne _080AC91C
_080AC932:
	ldr r1, [r5]
	cmp r1, #0
	beq _080AC948
	adds r0, r1, #0
	adds r0, #0x90
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080AC948:
	movs r0, #1
	ands r0, r7
	cmp r0, #0
	beq _080AC956
	adds r0, r5, #0
	bl sub_8000608
_080AC956:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080AC95C: .4byte 0x00001028
_080AC960: .4byte 0x00001024
_080AC964: .4byte gUnknown_080E5A28
_080AC968: .4byte 0x00000DAC

	thumb_func_start sub_80AC96C
sub_80AC96C: @ 0x080AC96C
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	lsls r0, r5, #5
	adds r0, r0, r5
	lsls r0, r0, #2
	adds r0, r4, r0
	adds r6, r0, #0
	adds r6, #0xa0
	ldrb r0, [r6]
	mvns r0, r0
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x1f
	cmp r7, #0
	beq _080AC9A4
	movs r2, #0
	ldrsb r2, [r6, r2]
	ldr r0, _080AC9A0 @ =0x00000B78
	adds r1, r4, r0
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r1, r1, r0
_080AC99A:
	ldrb r0, [r1, #8]
	b _080AC9E4
	.align 2, 0
_080AC9A0: .4byte 0x00000B78
_080AC9A4:
	ldr r0, _080AC9D8 @ =0x00000C14
	adds r2, r4, r0
	ldrb r3, [r2]
	cmp r3, #0xd
	bhs _080AC9E0
	adds r1, r3, #0
	adds r0, r1, #1
	strb r0, [r2]
	ldr r0, _080AC9DC @ =0x00000B78
	adds r2, r4, r0
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r1, r2, r0
	movs r0, #9
	ldrsb r0, [r1, r0]
	cmp r0, r5
	beq _080AC9CC
	strb r5, [r1, #9]
	strb r7, [r1, #0xa]
_080AC9CC:
	movs r0, #0
	ldrsb r0, [r6, r0]
	cmp r0, r3
	beq _080AC99A
	strb r3, [r6]
	b _080AC99A
	.align 2, 0
_080AC9D8: .4byte 0x00000C14
_080AC9DC: .4byte 0x00000B78
_080AC9E0:
	movs r0, #1
	rsbs r0, r0, #0
_080AC9E4:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80AC9EC
sub_80AC9EC: @ 0x080AC9EC
	push {r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r7, r1, #0
	ldr r0, _080ACADC @ =gUnknown_080E8440
	str r0, [r6]
	ldr r1, _080ACAE0 @ =gUnknown_080E8344
	adds r0, r6, #0
	stm r0!, {r1}
	ldr r2, [r7]
	movs r1, #0
	str r1, [r7]
	str r2, [sp, #4]
	add r1, sp, #4
	bl sub_80AC674
	ldr r0, [r6, #4]
	add r1, sp, #8
	movs r5, #0x30
	ldrh r3, [r1]
	ldr r4, _080ACAE4 @ =0xFFFFFC00
	adds r2, r4, #0
	ands r2, r3
	orrs r2, r5
	strh r2, [r1]
	ldrb r5, [r1, #1]
	movs r3, #3
	adds r2, r3, #0
	ands r2, r5
	strb r2, [r1, #1]
	ldrh r5, [r1, #2]
	adds r2, r4, #0
	ands r2, r5
	strh r2, [r1, #2]
	ldrb r2, [r1, #3]
	ands r3, r2
	strb r3, [r1, #3]
	ldrh r2, [r1, #4]
	ands r4, r2
	strh r4, [r1, #4]
	movs r2, #0x1e
	str r2, [sp]
	movs r2, #0
	movs r3, #0
	bl sub_80A56DC
	movs r0, #0xa0
	bl sub_80005D4
	adds r1, r6, #0
	bl sub_803AB30
	ldr r1, _080ACAE8 @ =0x00001024
	adds r5, r6, r1
	adds r4, r0, #0
	ldr r0, [r5]
	cmp r4, r0
	beq _080ACA6A
	cmp r0, #0
	beq _080ACA6A
	movs r1, #3
	bl sub_803AC78
_080ACA6A:
	str r4, [r5]
	ldr r0, _080ACAEC @ =0x00001028
	adds r4, r6, r0
	movs r5, #0
	ldr r0, [r4]
	cmp r5, r0
	beq _080ACA82
	cmp r0, #0
	beq _080ACA82
	movs r1, #3
	bl sub_80AB2E4
_080ACA82:
	str r5, [r4]
	movs r0, #4
	bl sub_80005D4
	ldr r1, [r6, #4]
	ldr r2, [r1, #4]
	adds r1, r6, #0
	bl sub_80AAFC8
	ldr r1, _080ACAEC @ =0x00001028
	adds r5, r6, r1
	adds r4, r0, #0
	ldr r0, [r5]
	cmp r4, r0
	beq _080ACAAA
	cmp r0, #0
	beq _080ACAAA
	movs r1, #3
	bl sub_80AB2E4
_080ACAAA:
	str r4, [r5]
	movs r4, #0
_080ACAAE:
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_80AD49C
	adds r4, #1
	cmp r4, #0x63
	bls _080ACAAE
	ldr r1, [r7]
	cmp r1, #0
	beq _080ACAD2
	adds r0, r1, #0
	adds r0, #0x90
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080ACAD2:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080ACADC: .4byte gUnknown_080E8440
_080ACAE0: .4byte gUnknown_080E8344
_080ACAE4: .4byte 0xFFFFFC00
_080ACAE8: .4byte 0x00001024
_080ACAEC: .4byte 0x00001028

	thumb_func_start sub_80ACAF0
sub_80ACAF0: @ 0x080ACAF0
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r0, #0
	adds r7, r1, #0
	ldr r0, [r6, #4]
	adds r1, r0, #0
	adds r1, #0x90
	ldr r1, [r1]
	ldr r1, [r1, #0xc]
	bl sub_80D3910
	ldr r1, _080ACB54 @ =0x00001028
	adds r0, r6, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _080ACB14
	bl sub_80AB380
_080ACB14:
	ldr r0, _080ACB58 @ =0x0000102C
	adds r1, r6, r0
	ldr r4, [r1]
	rsbs r0, r4, #0
	orrs r0, r4
	cmp r0, #0
	bge _080ACBD8
	adds r5, r1, #0
	ldrb r2, [r5, #8]
	cmp r2, #0
	beq _080ACB8E
	ldrb r0, [r5, #9]
	subs r0, #1
	movs r2, #0
	strb r0, [r5, #9]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080ACB5C
	ldr r1, [r5]
	cmp r2, r1
	beq _080ACB4E
	cmp r1, #0
	beq _080ACB4E
	ldr r0, [r1, #0x24]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080ACB4E:
	movs r0, #0
	str r0, [r5]
	b _080ACB82
	.align 2, 0
_080ACB54: .4byte 0x00001028
_080ACB58: .4byte 0x0000102C
_080ACB5C:
	ldr r4, [r5]
	adds r1, r4, #0
	adds r1, #0x3f
	ldrb r0, [r1]
	cmp r0, #0
	bne _080ACB80
	adds r0, r4, #0
	adds r0, #0x28
	bl sub_805E8F0
	lsls r0, r0, #0x1e
	cmp r0, #0
	bge _080ACB82
	adds r1, r4, #0
	adds r1, #0x3c
	movs r0, #1
	strb r0, [r1]
	b _080ACB82
_080ACB80:
	strb r2, [r1]
_080ACB82:
	ldrb r0, [r5, #0xa]
	adds r0, #1
	movs r1, #7
	ands r0, r1
	strb r0, [r5, #0xa]
	b _080ACBD8
_080ACB8E:
	adds r1, r4, #0
	adds r1, #0x3f
	ldrb r0, [r1]
	cmp r0, #0
	bne _080ACBB4
	adds r0, r4, #0
	adds r0, #0x28
	bl sub_805E8F0
	adds r2, r0, #0
	lsls r0, r2, #0x1e
	cmp r0, #0
	bge _080ACBB0
	adds r1, r4, #0
	adds r1, #0x3c
	movs r0, #1
	strb r0, [r1]
_080ACBB0:
	adds r0, r2, #0
	b _080ACBB8
_080ACBB4:
	strb r2, [r1]
	movs r0, #2
_080ACBB8:
	lsls r0, r0, #0x1d
	cmp r0, #0
	bge _080ACBD8
	movs r4, #0
	ldr r1, [r5]
	cmp r4, r1
	beq _080ACBD6
	cmp r1, #0
	beq _080ACBD6
	ldr r0, [r1, #0x24]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080ACBD6:
	str r4, [r5]
_080ACBD8:
	adds r4, r6, #0
	adds r4, #8
	movs r1, #0xcc
	lsls r1, r1, #1
	adds r5, r6, r1
	mov r0, sp
	ldr r1, [r7]
	str r1, [sp]
	movs r1, #0
	strb r1, [r0, #4]
	cmp r4, r5
	beq _080ACC08
_080ACBF0:
	ldr r1, [r4]
	cmp r1, #0
	beq _080ACC02
	ldr r0, [r1, #0x14]
	ldr r2, [r0, #0x2c]
	adds r0, r1, #0
	mov r1, sp
	bl sub_80D3914
_080ACC02:
	adds r4, #4
	cmp r4, r5
	bne _080ACBF0
_080ACC08:
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80ACC10
sub_80ACC10: @ 0x080ACC10
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r4, _080ACEA4 @ =0xFFFFF350
	add sp, r4
	ldr r2, _080ACEA8 @ =0x00000C6C
	add r2, sp
	str r0, [r2]
	mov sb, r1
	movs r0, #0
	ldr r1, _080ACEAC @ =0x00000C58
	add r1, sp
	str r0, [r1]
	ldr r3, [r2]
	movs r4, #0xce
	lsls r4, r4, #1
	adds r1, r3, r4
	movs r2, #0x20
	ldr r0, _080ACEAC @ =0x00000C58
	add r0, sp
	ldr r0, [r0]
_080ACC3E:
	strb r0, [r1]
	subs r2, #1
	adds r1, #1
	cmp r2, #0
	bgt _080ACC3E
	ldr r5, _080ACEA8 @ =0x00000C6C
	add r5, sp
	ldr r5, [r5]
	ldr r0, [r5, #4]
	adds r1, r0, #0
	adds r1, #0x90
	ldr r4, [r1]
	mov r6, sb
	ldr r1, [r6]
	ldr r2, [r6, #4]
	ldr r3, [r6, #0xc]
	ldr r4, [r4, #0x10]
	bl sub_80D391C
	ldr r7, _080ACEB0 @ =0x00001024
	adds r0, r5, r7
	ldr r2, [r0]
	ldr r1, [r6]
	adds r4, r2, #0
	adds r4, #0x9c
	ldrb r0, [r4]
	cmp r0, #0
	beq _080ACC80
	adds r0, r2, #0
	bl sub_803ACD8
	movs r0, #0
	strb r0, [r4]
_080ACC80:
	ldr r0, _080ACEA8 @ =0x00000C6C
	add r0, sp
	ldr r0, [r0]
	movs r1, #0xce
	lsls r1, r1, #1
	adds r4, r0, r1
	movs r1, #0xdb
	lsls r1, r1, #4
	adds r0, r0, r1
	ldrb r1, [r0]
	ldr r3, _080ACEA8 @ =0x00000C6C
	add r3, sp
	ldr r3, [r3]
	ldr r5, _080ACEB4 @ =0x00000DB1
	adds r2, r3, r5
	strb r1, [r2]
	movs r3, #0
	ldr r5, _080ACEB8 @ =0x00000C9C
	add r5, sp
	str r0, [r5]
	movs r6, #0xca
	lsls r6, r6, #4
	add r6, sp
	str r2, [r6]
	ldrb r7, [r2]
	cmp r3, r7
	bhs _080ACCEE
	ldr r0, _080ACEA8 @ =0x00000C6C
	add r0, sp
	ldr r0, [r0]
	movs r1, #0xde
	lsls r1, r1, #1
	adds r5, r0, r1
	ldr r1, _080ACEBC @ =0x00000D1D
	adds r2, r0, r1
_080ACCC6:
	ldrb r0, [r2]
	lsrs r0, r0, #7
	cmp r0, #0
	bne _080ACCE0
	movs r0, #0
	ldrsb r0, [r2, r0]
	lsls r1, r0, #5
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r5, r1
	adds r1, #0x80
	movs r0, #0xff
	strb r0, [r1]
_080ACCE0:
	adds r2, #0xc
	adds r3, #1
	ldr r6, _080ACEC0 @ =0x00000C15
	adds r0, r4, r6
	ldrb r0, [r0]
	cmp r3, r0
	blo _080ACCC6
_080ACCEE:
	ldr r7, _080ACEC4 @ =0x00000C14
	adds r0, r4, r7
	movs r2, #0
	strb r2, [r0]
	mov r1, sb
	ldr r0, [r1, #8]
	ldrb r1, [r0]
	movs r0, #0x7c
	subs r0, r0, r1
	movs r3, #0xc7
	lsls r3, r3, #4
	add r3, sp
	str r0, [r3]
	cmp r0, #0x80
	bls _080ACD0E
	b _080AD0CE
_080ACD0E:
	add r0, sp, #0x14
	strb r2, [r0]
	add r0, sp, #0x18
	movs r1, #3
	ldr r5, _080ACEA8 @ =0x00000C6C
	add r5, sp
	ldr r5, [r5]
	ldr r4, [r5]
	adds r6, r5, #0
	adds r6, #8
	movs r2, #0xcc
	lsls r2, r2, #1
	adds r2, r5, r2
	ldr r3, _080ACEC8 @ =0x00000CA4
	add r3, sp
	str r2, [r3]
	ldr r5, _080ACECC @ =0x00000828
	add r5, sp
	adds r7, #0x84
	add r7, sp
	str r5, [r7]
	movs r3, #0
	movs r2, #1
	rsbs r2, r2, #0
_080ACD3E:
	str r3, [r0]
	movs r5, #0x81
	lsls r5, r5, #2
	adds r0, r0, r5
	subs r1, #1
	cmp r1, r2
	bne _080ACD3E
	ldr r1, [r4, #0x18]
	ldr r7, _080ACEA8 @ =0x00000C6C
	add r7, sp
	ldr r0, [r7]
	bl sub_80D3910
	adds r4, r0, #0
	ldr r1, _080ACEA8 @ =0x00000C6C
	add r1, sp
	ldr r1, [r1]
	ldr r0, [r1]
	ldr r1, [r0, #0x1c]
	ldr r2, _080ACEA8 @ =0x00000C6C
	add r2, sp
	ldr r0, [r2]
	bl sub_80D3910
	ldr r5, _080ACED0 @ =0x00000C28
	add r5, sp
	mov r3, sb
	ldr r1, [r3]
	ldr r2, [r3, #4]
	str r1, [r5]
	str r2, [r5, #4]
	add r7, sp, #0x14
	str r7, [r5, #8]
	strh r4, [r5, #0xc]
	strh r0, [r5, #0xe]
	mov r8, r6
	movs r0, #0xbc
	lsls r0, r0, #1
	add r0, r8
	ldr r1, _080ACED4 @ =0x00000C74
	add r1, sp
	str r0, [r1]
	ldr r1, [r0]
	cmp r1, #0
	beq _080ACDA4
	ldr r0, [r1, #0x14]
	ldr r2, [r0, #0x1c]
	adds r0, r1, #0
	adds r1, r5, #0
	bl sub_80D3914
_080ACDA4:
	ldr r2, _080ACEA8 @ =0x00000C6C
	add r2, sp
	ldr r2, [r2]
	ldr r3, _080ACED8 @ =0x00001028
	adds r0, r2, r3
	ldr r0, [r0]
	cmp r0, #0
	beq _080ACDBC
	ldr r2, [r5]
	add r1, sp, #0x14
	bl sub_80AB410
_080ACDBC:
	ldr r3, _080ACEA8 @ =0x00000C6C
	add r3, sp
	ldr r3, [r3]
	ldr r4, _080ACEDC @ =0x0000102C
	adds r6, r3, r4
	ldr r1, [r6]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _080ACDD2
	b _080AD032
_080ACDD2:
	ldr r4, _080ACEE0 @ =0x00000C5C
	add r4, sp
	ldr r1, [r5]
	ldr r2, [r5, #8]
	ldr r0, _080ACEE0 @ =0x00000C5C
	add r0, sp
	str r1, [r0]
	str r2, [r4, #4]
	ldr r0, [r3]
	ldr r1, [r0, #0x18]
	ldr r7, _080ACEA8 @ =0x00000C6C
	add r7, sp
	ldr r0, [r7]
	bl sub_80D3910
	adds r7, r0, #0
	ldr r1, _080ACEA8 @ =0x00000C6C
	add r1, sp
	ldr r1, [r1]
	ldr r0, [r1]
	ldr r1, [r0, #0x1c]
	ldr r2, _080ACEA8 @ =0x00000C6C
	add r2, sp
	ldr r0, [r2]
	bl sub_80D3910
	adds r2, r0, #0
	ldr r5, [r6]
	rsbs r0, r5, #0
	orrs r0, r5
	cmp r0, #0
	blt _080ACE14
	b _080AD032
_080ACE14:
	ldrb r0, [r6, #8]
	cmp r0, #0
	bne _080ACE1C
	b _080ACF58
_080ACE1C:
	ldrb r0, [r6, #0xa]
	cmp r0, #2
	bhi _080ACE24
	b _080AD032
_080ACE24:
	movs r3, #4
	ldrsh r0, [r6, r3]
	subs r0, r0, r7
	ldr r4, _080ACEE4 @ =0x00000C78
	add r4, sp
	str r0, [r4]
	movs r7, #6
	ldrsh r1, [r6, r7]
	subs r2, r1, r2
	ldr r0, _080ACEE8 @ =0x00000C7C
	add r0, sp
	str r2, [r0]
	movs r0, #0x80
	lsls r0, r0, #8
	subs r0, r0, r1
	mov sl, r0
	adds r6, r5, #0
	ldr r4, _080ACEEC @ =0x00000C38
	add r4, sp
	ldr r1, [r5, #0x28]
	ldr r3, [r1]
	ldrh r2, [r5, #0x34]
	lsls r2, r2, #2
	ldr r0, [r5, #0x2c]
	adds r0, r0, r2
	ldrh r2, [r0]
	adds r0, r4, #0
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	adds r7, r4, #0
	movs r1, #0xc6
	lsls r1, r1, #4
	add r1, sp
	ldr r3, [r1]
	adds r0, r5, #0
	ldm r0!, {r2}
	ldr r1, [r0, #4]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _080ACEF4
	ldrh r0, [r5, #0xc]
	adds r1, r5, #0
	adds r1, #0x10
	mov r4, sl
	str r4, [sp]
	str r7, [sp, #4]
	str r2, [sp, #8]
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r3, #0
	ldr r5, _080ACEE4 @ =0x00000C78
	add r5, sp
	ldr r1, [r5]
	ldr r3, _080ACEE8 @ =0x00000C7C
	add r3, sp
	ldr r2, [r3]
	movs r3, #0xaa
	ldr r4, _080ACEF0 @ =gUnknown_030004DC
	bl sub_80D391C
	b _080ACEF6
	.align 2, 0
_080ACEA4: .4byte 0xFFFFF350
_080ACEA8: .4byte 0x00000C6C
_080ACEAC: .4byte 0x00000C58
_080ACEB0: .4byte 0x00001024
_080ACEB4: .4byte 0x00000DB1
_080ACEB8: .4byte 0x00000C9C
_080ACEBC: .4byte 0x00000D1D
_080ACEC0: .4byte 0x00000C15
_080ACEC4: .4byte 0x00000C14
_080ACEC8: .4byte 0x00000CA4
_080ACECC: .4byte 0x00000828
_080ACED0: .4byte 0x00000C28
_080ACED4: .4byte 0x00000C74
_080ACED8: .4byte 0x00001028
_080ACEDC: .4byte 0x0000102C
_080ACEE0: .4byte 0x00000C5C
_080ACEE4: .4byte 0x00000C78
_080ACEE8: .4byte 0x00000C7C
_080ACEEC: .4byte 0x00000C38
_080ACEF0: .4byte gUnknown_030004DC
_080ACEF4:
	movs r0, #0
_080ACEF6:
	cmp r0, #0
	bne _080ACEFC
	b _080AD032
_080ACEFC:
	adds r0, r6, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	adds r5, r0, #0
	cmp r1, #0
	bne _080ACF0A
	b _080AD032
_080ACF0A:
	ldr r4, _080ACF34 @ =0x00000C5C
	add r4, sp
	ldr r1, [r4]
	adds r2, r7, #0
	adds r2, #8
	adds r0, r6, #0
	bl sub_80A480C
	adds r0, r6, #0
	adds r0, #0x3d
	ldrb r0, [r0]
	cmp r0, #0
	beq _080ACF38
	adds r1, r7, #0
	adds r1, #0x10
	adds r0, r6, #0
	movs r2, #1
	bl sub_80A4944
	b _080ACF52
	.align 2, 0
_080ACF34: .4byte 0x00000C5C
_080ACF38:
	adds r4, r6, #0
	adds r4, #0x3e
	ldrb r0, [r4]
	cmp r0, #0
	bne _080ACF52
	adds r1, r7, #0
	adds r1, #0x10
	adds r0, r6, #0
	movs r2, #1
	bl sub_80A4944
	movs r0, #1
	strb r0, [r4]
_080ACF52:
	movs r0, #0
	strb r0, [r5]
	b _080AD032
_080ACF58:
	movs r1, #4
	ldrsh r0, [r6, r1]
	subs r0, r0, r7
	movs r3, #0xc8
	lsls r3, r3, #4
	add r3, sp
	str r0, [r3]
	movs r4, #6
	ldrsh r1, [r6, r4]
	subs r2, r1, r2
	mov sl, r2
	movs r0, #0x80
	lsls r0, r0, #8
	subs r7, r0, r1
	ldr r4, _080ACFCC @ =0x00000C38
	add r4, sp
	ldr r1, [r5, #0x28]
	ldr r3, [r1]
	ldrh r2, [r5, #0x34]
	lsls r2, r2, #2
	ldr r0, [r5, #0x2c]
	adds r0, r0, r2
	ldrh r2, [r0]
	adds r0, r4, #0
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	adds r6, r4, #0
	movs r0, #0xc6
	lsls r0, r0, #4
	add r0, sp
	ldr r3, [r0]
	adds r0, r5, #0
	ldm r0!, {r2}
	ldr r1, [r0, #4]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _080ACFD4
	ldrh r0, [r5, #0xc]
	adds r1, r5, #0
	adds r1, #0x10
	str r7, [sp]
	str r6, [sp, #4]
	str r2, [sp, #8]
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r3, #0
	movs r2, #0xc8
	lsls r2, r2, #4
	add r2, sp
	ldr r1, [r2]
	mov r2, sl
	movs r3, #0xaa
	ldr r4, _080ACFD0 @ =gUnknown_030004DC
	bl sub_80D391C
	b _080ACFD6
	.align 2, 0
_080ACFCC: .4byte 0x00000C38
_080ACFD0: .4byte gUnknown_030004DC
_080ACFD4:
	movs r0, #0
_080ACFD6:
	cmp r0, #0
	beq _080AD032
	adds r0, r5, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	adds r7, r0, #0
	cmp r1, #0
	beq _080AD032
	ldr r3, _080AD010 @ =0x00000C5C
	add r3, sp
	ldr r1, [r3]
	adds r2, r6, #0
	adds r2, #8
	adds r0, r5, #0
	bl sub_80A480C
	adds r0, r5, #0
	adds r0, #0x3d
	ldrb r0, [r0]
	cmp r0, #0
	beq _080AD014
	adds r1, r6, #0
	adds r1, #0x10
	adds r0, r5, #0
	movs r2, #1
	bl sub_80A4944
	b _080AD02E
	.align 2, 0
_080AD010: .4byte 0x00000C5C
_080AD014:
	adds r4, r5, #0
	adds r4, #0x3e
	ldrb r0, [r4]
	cmp r0, #0
	bne _080AD02E
	adds r1, r6, #0
	adds r1, #0x10
	adds r0, r5, #0
	movs r2, #1
	bl sub_80A4944
	movs r0, #1
	strb r0, [r4]
_080AD02E:
	movs r0, #0
	strb r0, [r7]
_080AD032:
	ldr r4, _080AD058 @ =0x00000C6C
	add r4, sp
	ldr r4, [r4]
	movs r5, #0xcc
	lsls r5, r5, #1
	adds r0, r4, r5
	ldr r5, [r0]
	cmp r5, #0x64
	blo _080AD046
	movs r5, #0
_080AD046:
	lsls r0, r5, #2
	mov r7, r8
	adds r6, r7, r0
	ldr r0, _080AD05C @ =0x00000CA4
	add r0, sp
	ldr r7, [r0]
	adds r4, r6, #0
	b _080AD08A
	.align 2, 0
_080AD058: .4byte 0x00000C6C
_080AD05C: .4byte 0x00000CA4
_080AD060:
	ldr r3, _080AD1AC @ =0x00000C74
	add r3, sp
	ldr r3, [r3]
	cmp r4, r3
	beq _080AD07E
	ldr r3, [r4]
	cmp r3, #0
	beq _080AD07E
	ldr r0, [r3, #0x14]
	ldr r1, _080AD1B0 @ =0x00000C28
	add r1, sp
	ldr r2, [r0, #0x1c]
	adds r0, r3, #0
	bl sub_80D3914
_080AD07E:
	adds r4, #4
	cmp r4, r7
	bne _080AD086
	mov r4, r8
_080AD086:
	cmp r4, r6
	beq _080AD0A0
_080AD08A:
	add r0, sp, #0x14
	ldrb r0, [r0]
	movs r1, #0xc7
	lsls r1, r1, #4
	add r1, sp
	ldr r1, [r1]
	cmp r0, r1
	blo _080AD060
	mov r2, r8
	subs r0, r4, r2
	asrs r5, r0, #2
_080AD0A0:
	ldr r3, _080AD1B4 @ =0x00000C6C
	add r3, sp
	ldr r3, [r3]
	movs r4, #0xcc
	lsls r4, r4, #1
	adds r0, r3, r4
	str r5, [r0]
	mov r4, sb
	ldr r1, [r4, #8]
	add r0, sp, #0x14
	bl sub_8094A3C
	ldr r5, _080AD1B8 @ =0x00000C98
	add r5, sp
	ldr r0, [r5]
	add r6, sp, #0x18
	cmp r6, r0
	beq _080AD0CE
	adds r1, r6, #0
_080AD0C6:
	ldr r7, _080AD1BC @ =0xFFFFFDFC
	adds r0, r0, r7
	cmp r1, r0
	bne _080AD0C6
_080AD0CE:
	movs r1, #0xce
	lsls r1, r1, #1
	ldr r0, _080AD1B4 @ =0x00000C6C
	add r0, sp
	ldr r0, [r0]
	adds r1, r0, r1
	ldr r0, _080AD1C0 @ =0x00000C84
	add r0, sp
	str r1, [r0]
	mov r1, sb
	ldr r6, [r1]
	movs r2, #0
	ldr r3, _080AD1C4 @ =0x00000C88
	add r3, sp
	str r2, [r3]
	ldr r4, _080AD1C8 @ =0x00000C9C
	add r4, sp
	ldr r4, [r4]
	ldrb r4, [r4]
	ldr r5, _080AD1CC @ =0x00000C8C
	add r5, sp
	str r4, [r5]
	cmp r2, r4
	blo _080AD100
	b _080AD32A
_080AD100:
	ldr r5, _080AD1C0 @ =0x00000C84
	add r5, sp
	ldr r5, [r5]
	ldr r7, _080AD1D0 @ =0x00000B78
	adds r0, r5, r7
	ldr r7, _080AD1C4 @ =0x00000C88
	add r7, sp
	ldr r7, [r7]
	lsls r1, r7, #1
	adds r1, r1, r7
	lsls r1, r1, #2
	adds r0, r0, r1
	mov r8, r0
	ldrb r0, [r0, #9]
	lsrs r0, r0, #7
	adds r3, r7, #0
	adds r3, #1
	ldr r4, _080AD1D4 @ =0x00000C94
	add r4, sp
	str r3, [r4]
	cmp r0, #0
	beq _080AD12E
	b _080AD312
_080AD12E:
	mov r5, r8
	movs r1, #9
	ldrsb r1, [r5, r1]
	ldr r7, _080AD1C0 @ =0x00000C84
	add r7, sp
	ldr r2, [r7]
	adds r2, #0x20
	lsls r0, r1, #5
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r7, r2, r0
	adds r4, r7, #0
	adds r4, #0x82
	ldrb r0, [r4]
	cmp r0, #0
	bne _080AD156
	ldrb r0, [r5, #0xa]
	cmp r0, #0
	beq _080AD156
	b _080AD312
_080AD156:
	mov r0, r8
	ldrb r2, [r0, #8]
	lsls r2, r2, #5
	ldr r1, _080AD1D8 @ =0x05000200
	adds r2, r2, r1
	add r0, sp, #0x14
	adds r1, r7, #0
	movs r3, #0x20
	bl sub_8008F0C
	mov r2, sp
	adds r2, #0x14
	movs r3, #0xc9
	lsls r3, r3, #4
	add r3, sp
	str r2, [r3]
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080AD1E0
	cmp r1, #0
	beq _080AD18E
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080AD18E:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	ldr r3, _080AD1DC @ =0x00000CAC
	add r3, sp
	str r4, [r3]
	ldr r5, _080AD1C4 @ =0x00000C88
	add r5, sp
	ldr r4, [r5]
	adds r4, #1
	ldr r5, _080AD1D4 @ =0x00000C94
	add r5, sp
	str r4, [r5]
	b _080AD2F4
	.align 2, 0
_080AD1AC: .4byte 0x00000C74
_080AD1B0: .4byte 0x00000C28
_080AD1B4: .4byte 0x00000C6C
_080AD1B8: .4byte 0x00000C98
_080AD1BC: .4byte 0xFFFFFDFC
_080AD1C0: .4byte 0x00000C84
_080AD1C4: .4byte 0x00000C88
_080AD1C8: .4byte 0x00000C9C
_080AD1CC: .4byte 0x00000C8C
_080AD1D0: .4byte 0x00000B78
_080AD1D4: .4byte 0x00000C94
_080AD1D8: .4byte 0x05000200
_080AD1DC: .4byte 0x00000CAC
_080AD1E0:
	ldr r0, _080AD220 @ =0x00000CA8
	add r0, sp
	str r1, [r0]
	movs r0, #1
	ldr r2, _080AD224 @ =0x00000C68
	add r2, sp
	str r0, [r2]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	ldr r0, _080AD228 @ =0x00000C64
	add r0, sp
	str r4, [r0]
	ldr r1, [r2]
	cmp r4, r1
	bhs _080AD202
	adds r0, r2, #0
_080AD202:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080AD22C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sl, r4
	cmp r0, #0
	bne _080AD230
	mov r0, sl
	bl sub_80D3BC0
	b _080AD230
	.align 2, 0
_080AD220: .4byte 0x00000CA8
_080AD224: .4byte 0x00000C68
_080AD228: .4byte 0x00000C64
_080AD22C:
	movs r0, #0
	mov sl, r0
_080AD230:
	adds r4, r0, #0
	mov sb, r4
	ldr r2, [r6]
	mov r3, sb
	adds r7, #0x82
	ldr r4, _080AD250 @ =0x00000CAC
	add r4, sp
	str r7, [r4]
	ldr r7, _080AD254 @ =0x00000C88
	add r7, sp
	ldr r5, [r7]
	adds r5, #1
	ldr r7, _080AD258 @ =0x00000C94
	add r7, sp
	str r5, [r7]
	b _080AD270
	.align 2, 0
_080AD250: .4byte 0x00000CAC
_080AD254: .4byte 0x00000C88
_080AD258: .4byte 0x00000C94
_080AD25C:
	cmp r3, #0
	beq _080AD26C
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080AD26C:
	adds r2, #0x10
	adds r3, #0x10
_080AD270:
	ldr r0, _080AD2A0 @ =0x00000CA8
	add r0, sp
	ldr r0, [r0]
	cmp r2, r0
	bne _080AD25C
	adds r4, r3, #0
	ldr r0, _080AD2A4 @ =0x00000C68
	add r0, sp
	ldr r0, [r0]
	cmp r0, #1
	bne _080AD2A8
	cmp r4, #0
	beq _080AD29C
	adds r0, r4, #0
	movs r2, #0xc9
	lsls r2, r2, #4
	add r2, sp
	ldr r1, [r2]
	ldm r1!, {r3, r5, r7}
	stm r0!, {r3, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080AD29C:
	adds r4, #0x10
	b _080AD2D0
	.align 2, 0
_080AD2A0: .4byte 0x00000CA8
_080AD2A4: .4byte 0x00000C68
_080AD2A8:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080AD2CE
_080AD2B0:
	cmp r2, #0
	beq _080AD2C6
	adds r0, r2, #0
	movs r4, #0xc9
	lsls r4, r4, #4
	add r4, sp
	ldr r1, [r4]
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080AD2C6:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080AD2B0
_080AD2CE:
	adds r4, r2, #0
_080AD2D0:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080AD2E0
_080AD2DA:
	adds r1, #0x10
	cmp r1, r2
	bne _080AD2DA
_080AD2E0:
	cmp r0, #0
	beq _080AD2E8
	bl sub_80D0260
_080AD2E8:
	mov r0, sl
	add r0, sb
	mov r5, sb
	str r5, [r6]
	str r4, [r6, #4]
	str r0, [r6, #0xc]
_080AD2F4:
	movs r0, #0
	ldr r7, _080AD390 @ =0x00000CAC
	add r7, sp
	ldr r7, [r7]
	strb r0, [r7]
	mov r1, r8
	ldrb r0, [r1, #0xa]
	cmp r0, #0
	bne _080AD312
	ldrb r0, [r1, #9]
	lsrs r0, r0, #7
	cmp r0, #0
	bne _080AD312
	movs r0, #1
	strb r0, [r1, #0xa]
_080AD312:
	ldr r2, _080AD394 @ =0x00000C94
	add r2, sp
	ldr r2, [r2]
	ldr r3, _080AD398 @ =0x00000C88
	add r3, sp
	str r2, [r3]
	ldr r4, _080AD39C @ =0x00000C8C
	add r4, sp
	ldr r3, [r4]
	cmp r2, r3
	bhs _080AD32A
	b _080AD100
_080AD32A:
	ldr r5, _080AD3A0 @ =0x00000C6C
	add r5, sp
	ldr r5, [r5]
	movs r6, #0xce
	lsls r6, r6, #1
	adds r1, r5, r6
	ldr r6, _080AD3A4 @ =0x00000C9C
	add r6, sp
	ldr r6, [r6]
	ldrb r4, [r6]
	movs r7, #0xca
	lsls r7, r7, #4
	add r7, sp
	ldr r7, [r7]
	ldrb r7, [r7]
	cmp r4, r7
	bhs _080AD37C
	movs r5, #0xff
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #2
	ldr r2, _080AD3A8 @ =0x00000B81
	adds r0, r0, r2
	adds r1, r0, r1
	ldr r3, _080AD3A0 @ =0x00000C6C
	add r3, sp
	ldr r3, [r3]
	ldr r6, _080AD3AC @ =0x00000DB1
	adds r2, r3, r6
_080AD364:
	ldrb r3, [r1]
	lsrs r0, r3, #7
	cmp r0, #0
	bne _080AD372
	adds r0, r3, #0
	orrs r0, r5
	strb r0, [r1]
_080AD372:
	adds r1, #0xc
	adds r4, #1
	ldrb r6, [r2]
	cmp r4, r6
	blo _080AD364
_080AD37C:
	movs r3, #0xcb
	lsls r3, r3, #4
	add sp, r3
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080AD390: .4byte 0x00000CAC
_080AD394: .4byte 0x00000C94
_080AD398: .4byte 0x00000C88
_080AD39C: .4byte 0x00000C8C
_080AD3A0: .4byte 0x00000C6C
_080AD3A4: .4byte 0x00000C9C
_080AD3A8: .4byte 0x00000B81
_080AD3AC: .4byte 0x00000DB1

	thumb_func_start sub_80AD3B0
sub_80AD3B0: @ 0x080AD3B0
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r6, r0, #0
	adds r7, r1, #0
	adds r4, r6, #0
	adds r4, #8
	movs r0, #0xcc
	lsls r0, r0, #1
	adds r5, r6, r0
	cmp r4, r5
	beq _080AD3DC
_080AD3C6:
	ldr r2, [r4]
	cmp r2, #0
	beq _080AD3D6
	ldr r0, [r2, #0x14]
	ldr r1, [r0, #0x14]
	adds r0, r2, #0
	bl sub_80D3910
_080AD3D6:
	adds r4, #4
	cmp r4, r5
	bne _080AD3C6
_080AD3DC:
	ldr r1, _080AD494 @ =0x00001024
	adds r4, r6, r1
	movs r5, #0
	ldr r0, [r4]
	cmp r5, r0
	beq _080AD3F2
	cmp r0, #0
	beq _080AD3F2
	movs r1, #3
	bl sub_803AC78
_080AD3F2:
	str r5, [r4]
	ldr r0, _080AD498 @ =0x00001028
	adds r4, r6, r0
	movs r5, #0
	ldr r0, [r4]
	cmp r5, r0
	beq _080AD40A
	cmp r0, #0
	beq _080AD40A
	movs r1, #3
	bl sub_80AB2E4
_080AD40A:
	str r5, [r4]
	ldr r0, [r6, #4]
	movs r1, #0x1e
	str r1, [sp]
	adds r1, r7, #0
	movs r2, #0
	movs r3, #0
	bl sub_80A56DC
	movs r0, #0xa0
	bl sub_80005D4
	adds r1, r6, #0
	bl sub_803AB30
	ldr r1, _080AD494 @ =0x00001024
	adds r5, r6, r1
	adds r4, r0, #0
	ldr r0, [r5]
	cmp r4, r0
	beq _080AD43E
	cmp r0, #0
	beq _080AD43E
	movs r1, #3
	bl sub_803AC78
_080AD43E:
	str r4, [r5]
	movs r0, #4
	bl sub_80005D4
	ldr r1, [r6, #4]
	ldr r2, [r1, #4]
	adds r1, r6, #0
	bl sub_80AAFC8
	ldr r1, _080AD498 @ =0x00001028
	adds r5, r6, r1
	adds r4, r0, #0
	ldr r0, [r5]
	cmp r4, r0
	beq _080AD466
	cmp r0, #0
	beq _080AD466
	movs r1, #3
	bl sub_80AB2E4
_080AD466:
	str r4, [r5]
	adds r4, r6, #0
	adds r4, #8
	movs r0, #0xcc
	lsls r0, r0, #1
	adds r5, r6, r0
	cmp r4, r5
	beq _080AD48C
_080AD476:
	ldr r2, [r4]
	cmp r2, #0
	beq _080AD486
	ldr r0, [r2, #0x14]
	ldr r1, [r0, #0x10]
	adds r0, r2, #0
	bl sub_80D3910
_080AD486:
	adds r4, #4
	cmp r4, r5
	bne _080AD476
_080AD48C:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080AD494: .4byte 0x00001024
_080AD498: .4byte 0x00001028

	thumb_func_start sub_80AD49C
sub_80AD49C: @ 0x080AD49C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x14
	adds r7, r0, #0
	mov sb, r1
	adds r1, r7, #0
	adds r1, #8
	mov r2, sb
	lsls r0, r2, #2
	adds r4, r1, r0
	ldr r1, [r4]
	cmp r1, #0
	beq _080AD4CA
	ldr r0, [r1, #0x14]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
	movs r0, #0
	str r0, [r4]
_080AD4CA:
	movs r5, #0
	mov r0, sb
	subs r0, #0x5e
	cmp r0, #5
	bhi _080AD5AA
	lsls r0, r0, #2
	ldr r1, _080AD4E0 @ =_080AD4E4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080AD4E0: .4byte _080AD4E4
_080AD4E4: @ jump table
	.4byte _080AD4FC @ case 0
	.4byte _080AD504 @ case 1
	.4byte _080AD504 @ case 2
	.4byte _080AD504 @ case 3
	.4byte _080AD56C @ case 4
	.4byte _080AD56C @ case 5
_080AD4FC:
	adds r0, r7, #0
	bl sub_802C210
	b _080AD5A8
_080AD504:
	movs r0, #0x30
	bl sub_80005D4
	adds r5, r0, #0
	add r1, sp, #0xc
	movs r4, #0x8d
	lsls r4, r4, #2
	movs r0, #0
	mov r8, r0
	ldrh r2, [r1]
	ldr r3, _080AD564 @ =0xFFFFFC00
	adds r0, r3, #0
	ands r0, r2
	orrs r0, r4
	strh r0, [r1]
	movs r6, #0
	ldrb r4, [r1, #1]
	movs r2, #3
	adds r0, r2, #0
	ands r0, r4
	strb r0, [r1, #1]
	ldrh r4, [r1, #2]
	adds r0, r3, #0
	ands r0, r4
	strh r0, [r1, #2]
	ldrb r0, [r1, #3]
	ands r2, r0
	strb r2, [r1, #3]
	ldrh r0, [r1, #4]
	ands r3, r0
	strh r3, [r1, #4]
	add r4, sp, #4
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	strb r6, [r4, #6]
	mov r2, r8
	str r2, [sp]
	adds r0, r5, #0
	adds r1, r7, #0
	add r2, sp, #4
	movs r3, #2
	bl sub_80320DC
	ldr r0, _080AD568 @ =gUnknown_080E8404
	str r0, [r5, #0x14]
	b _080AD5AA
	.align 2, 0
_080AD564: .4byte 0xFFFFFC00
_080AD568: .4byte gUnknown_080E8404
_080AD56C:
	movs r0, #0x18
	bl sub_80005D4
	add r2, sp, #4
	movs r5, #0x8d
	lsls r5, r5, #2
	ldrh r3, [r2]
	ldr r4, _080AD5D4 @ =0xFFFFFC00
	adds r1, r4, #0
	ands r1, r3
	orrs r1, r5
	strh r1, [r2]
	ldrb r5, [r2, #1]
	movs r3, #3
	adds r1, r3, #0
	ands r1, r5
	strb r1, [r2, #1]
	ldrh r5, [r2, #2]
	adds r1, r4, #0
	ands r1, r5
	strh r1, [r2, #2]
	ldrb r1, [r2, #3]
	ands r3, r1
	strb r3, [r2, #3]
	ldrh r1, [r2, #4]
	ands r4, r1
	strh r4, [r2, #4]
	adds r1, r7, #0
	bl sub_8037CC4
_080AD5A8:
	adds r5, r0, #0
_080AD5AA:
	cmp r5, #0
	beq _080AD5C4
	adds r0, r7, #0
	adds r0, #8
	mov r2, sb
	lsls r1, r2, #2
	adds r0, r0, r1
	str r5, [r0]
	ldr r0, [r5, #0x14]
	ldr r1, [r0, #0x10]
	adds r0, r5, #0
	bl sub_80D3910
_080AD5C4:
	add sp, #0x14
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080AD5D4: .4byte 0xFFFFFC00

	thumb_func_start sub_80AD5D8
sub_80AD5D8: @ 0x080AD5D8
	push {lr}
	adds r3, r0, #0
	cmp r1, #0x1a
	bhi _080AD67C
	lsls r0, r1, #2
	ldr r1, _080AD5EC @ =_080AD5F0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080AD5EC: .4byte _080AD5F0
_080AD5F0: @ jump table
	.4byte _080AD65C @ case 0
	.4byte _080AD660 @ case 1
	.4byte _080AD660 @ case 2
	.4byte _080AD664 @ case 3
	.4byte _080AD660 @ case 4
	.4byte _080AD664 @ case 5
	.4byte _080AD670 @ case 6
	.4byte _080AD670 @ case 7
	.4byte _080AD670 @ case 8
	.4byte _080AD67C @ case 9
	.4byte _080AD67C @ case 10
	.4byte _080AD67C @ case 11
	.4byte _080AD67C @ case 12
	.4byte _080AD67C @ case 13
	.4byte _080AD668 @ case 14
	.4byte _080AD66C @ case 15
	.4byte _080AD66C @ case 16
	.4byte _080AD66C @ case 17
	.4byte _080AD66C @ case 18
	.4byte _080AD67C @ case 19
	.4byte _080AD67C @ case 20
	.4byte _080AD67C @ case 21
	.4byte _080AD67C @ case 22
	.4byte _080AD67C @ case 23
	.4byte _080AD67C @ case 24
	.4byte _080AD67C @ case 25
	.4byte _080AD670 @ case 26
_080AD65C:
	movs r0, #0
	b _080AD692
_080AD660:
	movs r0, #1
	b _080AD692
_080AD664:
	movs r0, #2
	b _080AD692
_080AD668:
	movs r0, #3
	b _080AD692
_080AD66C:
	movs r0, #4
	b _080AD692
_080AD670:
	movs r0, #5
	b _080AD692
_080AD674:
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	b _080AD692
_080AD67C:
	movs r2, #6
	ldr r0, _080AD698 @ =0x00000555
	adds r1, r3, r0
_080AD682:
	ldrb r0, [r1]
	cmp r0, #0
	beq _080AD674
	adds r1, #0x84
	adds r2, #1
	cmp r2, #0x16
	blo _080AD682
	movs r0, #0x15
_080AD692:
	pop {r1}
	bx r1
	.align 2, 0
_080AD698: .4byte 0x00000555

	thumb_func_start sub_80AD69C
sub_80AD69C: @ 0x080AD69C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	adds r5, r0, #0
	mov sb, r1
	adds r4, r2, #0
	ldr r0, _080AD6BC @ =0x00000233
	cmp r4, r0
	bls _080AD6C0
	movs r0, #0
	str r0, [r5]
	str r0, [r5, #4]
	strh r0, [r5, #8]
	b _080AD712
	.align 2, 0
_080AD6BC: .4byte 0x00000233
_080AD6C0:
	mov r1, sb
	ldr r0, [r1, #4]
	ldr r7, [r0]
	cmp r7, r4
	bne _080AD6CE
	ldr r0, [r0, #4]
	b _080AD6DE
_080AD6CE:
	movs r0, #0
	str r0, [sp]
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0
	bl sub_803A8A4
_080AD6DE:
	bl sub_80A4698
	ldrh r6, [r0, #0x20]
	ldrh r1, [r0, #0x22]
	mov r8, r1
	cmp r7, r4
	bne _080AD706
	mov r0, sb
	ldr r4, [r0, #4]
	ldr r0, [r4, #4]
	bl sub_80A4698
	movs r1, #0
	ldr r0, [r4, #0x2c]
	str r0, [r5]
	str r1, [r5, #4]
	strh r6, [r5, #8]
	mov r1, r8
	strh r1, [r5, #0xa]
	b _080AD714
_080AD706:
	ldr r1, [r0, #0x1c]
	ldr r0, [r0, #0x18]
	str r0, [r5]
	str r1, [r5, #4]
	strh r6, [r5, #8]
	mov r0, r8
_080AD712:
	strh r0, [r5, #0xa]
_080AD714:
	adds r0, r5, #0
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_80AD724
sub_80AD724: @ 0x080AD724
	push {r4, lr}
	sub sp, #0x10
	adds r4, r0, #0
	movs r0, #0xf2
	lsls r0, r0, #1
	bl sub_80005D4
	bl sub_80CFB28
	str r0, [sp, #4]
	ldr r0, _080AD770 @ =0x00001038
	bl sub_80005D4
	add r1, sp, #4
	bl sub_80AC9EC
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	adds r2, r1, #0
	movs r1, #0
	str r1, [r2]
	str r0, [r4]
	ldr r1, [sp]
	cmp r1, #0
	beq _080AD766
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080AD766:
	adds r0, r4, #0
	add sp, #0x10
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080AD770: .4byte 0x00001038
_080AD774:
	.byte 0x40, 0x68, 0x70, 0x47, 0x40, 0x68, 0x70, 0x47

	thumb_func_start sub_80AD77C
sub_80AD77C: @ 0x080AD77C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x1c
	adds r6, r0, #0
	adds r4, r1, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov sb, r2
	ldr r1, [r6]
	ldrh r2, [r4]
	lsls r2, r2, #0x16
	lsrs r2, r2, #0x16
	add r0, sp, #0xc
	ldr r3, [r1, #0x34]
	adds r1, r6, #0
	bl sub_80D3918
	ldrb r0, [r4, #1]
	lsrs r0, r0, #2
	ldrh r1, [r4, #2]
	ldr r5, _080AD870 @ =0x000003FF
	ands r1, r5
	lsls r1, r1, #6
	orrs r1, r0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrb r0, [r4, #3]
	lsrs r0, r0, #2
	ldrh r2, [r4, #4]
	ands r2, r5
	lsls r2, r2, #6
	orrs r2, r0
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	add r0, sp, #0xc
	bl sub_80AC5D0
	movs r1, #1
	eors r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	ldrb r0, [r4, #1]
	lsrs r0, r0, #2
	ldrh r1, [r4, #2]
	ands r1, r5
	lsls r1, r1, #6
	orrs r1, r0
	ldrb r2, [r4, #3]
	lsrs r2, r2, #2
	ldrh r0, [r4, #4]
	ands r0, r5
	lsls r0, r0, #6
	orrs r0, r2
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add r2, sp, #0x18
	strh r1, [r2]
	strh r0, [r2, #2]
	ldr r0, [r6]
	ldr r1, [r0, #0x64]
	adds r0, r6, #0
	bl sub_80D3910
	ldr r1, _080AD874 @ =0x0000102C
	adds r4, r6, r1
	adds r7, r0, #0
	ldr r0, [sp, #0x18]
	str r0, [r4, #4]
	movs r5, #0
	ldr r1, [r4]
	cmp r5, r1
	beq _080AD822
	cmp r1, #0
	beq _080AD822
	ldr r0, [r1, #0x24]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080AD822:
	str r5, [r4]
	mov r0, r8
	strb r0, [r4, #8]
	mov r5, r8
	cmp r5, #0
	beq _080AD878
	movs r0, #0x40
	bl sub_80005D4
	movs r1, #2
	str r1, [sp]
	movs r1, #3
	str r1, [sp, #4]
	add r2, sp, #8
	movs r1, #0
	strb r1, [r2]
	adds r1, r7, #0
	mov r2, sb
	adds r3, r6, #0
	bl sub_80A4A00
	adds r5, r0, #0
	ldr r1, [r4]
	cmp r5, r1
	beq _080AD864
	cmp r1, #0
	beq _080AD864
	ldr r0, [r1, #0x24]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080AD864:
	str r5, [r4]
	movs r1, #0
	movs r0, #0x10
	strb r0, [r4, #9]
	strb r1, [r4, #0xa]
	b _080AD8B0
	.align 2, 0
_080AD870: .4byte 0x000003FF
_080AD874: .4byte 0x0000102C
_080AD878:
	movs r0, #0x40
	bl sub_80005D4
	movs r1, #2
	str r1, [sp]
	movs r1, #3
	str r1, [sp, #4]
	add r1, sp, #8
	strb r5, [r1]
	adds r1, r7, #0
	ldr r2, _080AD8C0 @ =0x000001A9
	adds r3, r6, #0
	bl sub_80A4A00
	adds r5, r0, #0
	ldr r1, [r4]
	cmp r5, r1
	beq _080AD8AC
	cmp r1, #0
	beq _080AD8AC
	ldr r0, [r1, #0x24]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080AD8AC:
	str r5, [r4]
	movs r0, #0
_080AD8B0:
	add sp, #0x1c
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080AD8C0: .4byte 0x000001A9

	thumb_func_start sub_80AD8C4
sub_80AD8C4: @ 0x080AD8C4
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r7, r2, #0
	adds r4, r3, #0
	movs r2, #0
	movs r3, #0
	cmp r4, #8
	bhi _080AD918
	lsls r0, r4, #2
	ldr r1, _080AD8E0 @ =_080AD8E4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080AD8E0: .4byte _080AD8E4
_080AD8E4: @ jump table
	.4byte _080AD908 @ case 0
	.4byte _080AD908 @ case 1
	.4byte _080AD908 @ case 2
	.4byte _080AD908 @ case 3
	.4byte _080AD90E @ case 4
	.4byte _080AD918 @ case 5
	.4byte _080AD914 @ case 6
	.4byte _080AD914 @ case 7
	.4byte _080AD914 @ case 8
_080AD908:
	movs r2, #8
	movs r3, #0x10
	b _080AD918
_080AD90E:
	movs r2, #8
	movs r3, #0xb
	b _080AD918
_080AD914:
	movs r2, #0x10
	movs r3, #0x20
_080AD918:
	ldr r1, _080AD934 @ =0x00001028
	adds r0, r5, r1
	ldr r0, [r0]
	lsls r1, r6, #4
	adds r1, r1, r2
	lsls r2, r7, #4
	adds r3, #0x38
	adds r2, r2, r3
	adds r3, r4, #0
	bl sub_80AB68C
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080AD934: .4byte 0x00001028

	thumb_func_start sub_80AD938
sub_80AD938: @ 0x080AD938
	push {lr}
	ldr r0, [r0, #4]
	bl sub_80CFFC0
	pop {r0}
	bx r0

	thumb_func_start sub_80AD944
sub_80AD944: @ 0x080AD944
	push {lr}
	ldr r0, [r0, #4]
	bl sub_80A63B8
	pop {r0}
	bx r0

	thumb_func_start sub_80AD950
sub_80AD950: @ 0x080AD950
	push {lr}
	ldr r0, [r0, #4]
	bl sub_80A635C
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80AD960
sub_80AD960: @ 0x080AD960
	push {lr}
	ldr r0, [r0, #4]
	bl sub_80A6300
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80AD970
sub_80AD970: @ 0x080AD970
	push {lr}
	ldr r0, [r0, #4]
	bl sub_80A6024
	pop {r0}
	bx r0

	thumb_func_start sub_80AD97C
sub_80AD97C: @ 0x080AD97C
	push {lr}
	ldr r0, [r0, #4]
	bl sub_80A607C
	pop {r0}
	bx r0

	thumb_func_start sub_80AD988
sub_80AD988: @ 0x080AD988
	push {lr}
	ldr r0, [r0, #4]
	bl sub_80A62BC
	pop {r0}
	bx r0

	thumb_func_start sub_80AD994
sub_80AD994: @ 0x080AD994
	push {lr}
	ldr r0, [r0, #4]
	bl sub_80A6278
	pop {r0}
	bx r0

	thumb_func_start sub_80AD9A0
sub_80AD9A0: @ 0x080AD9A0
	push {lr}
	ldr r0, [r0, #4]
	bl sub_80A6234
	pop {r0}
	bx r0

	thumb_func_start sub_80AD9AC
sub_80AD9AC: @ 0x080AD9AC
	push {lr}
	ldr r0, [r0, #4]
	bl sub_80A61F0
	pop {r0}
	bx r0

	thumb_func_start sub_80AD9B8
sub_80AD9B8: @ 0x080AD9B8
	push {lr}
	ldr r0, [r0, #4]
	bl sub_80A6194
	pop {r0}
	bx r0

	thumb_func_start sub_80AD9C4
sub_80AD9C4: @ 0x080AD9C4
	push {lr}
	ldr r0, [r0, #4]
	bl sub_80A6138
	pop {r0}
	bx r0

	thumb_func_start sub_80AD9D0
sub_80AD9D0: @ 0x080AD9D0
	push {lr}
	ldr r0, [r0, #4]
	bl sub_80A601C
	pop {r0}
	bx r0
_080AD9DC:
	.byte 0x01, 0x49, 0x40, 0x18
	.byte 0x70, 0x47, 0x00, 0x00, 0xF4, 0x0F, 0x00, 0x00, 0x01, 0x49, 0x40, 0x18, 0x70, 0x47, 0x00, 0x00
	.byte 0xC4, 0x0F, 0x00, 0x00, 0x01, 0x49, 0x40, 0x18, 0x70, 0x47, 0x00, 0x00, 0x94, 0x0F, 0x00, 0x00
	.byte 0x01, 0x49, 0x40, 0x18, 0x70, 0x47, 0x00, 0x00, 0x64, 0x0F, 0x00, 0x00, 0x01, 0x49, 0x40, 0x18
	.byte 0x70, 0x47, 0x00, 0x00, 0x34, 0x0F, 0x00, 0x00, 0x01, 0x49, 0x40, 0x18, 0x70, 0x47, 0x00, 0x00
	.byte 0x04, 0x0F, 0x00, 0x00, 0x01, 0x49, 0x40, 0x18, 0x70, 0x47, 0x00, 0x00, 0xD4, 0x0E, 0x00, 0x00
	.byte 0x01, 0x49, 0x40, 0x18, 0x70, 0x47, 0x00, 0x00, 0xA4, 0x0E, 0x00, 0x00, 0x01, 0x49, 0x40, 0x18
	.byte 0x70, 0x47, 0x00, 0x00, 0x74, 0x0E, 0x00, 0x00, 0x01, 0x49, 0x40, 0x18, 0x70, 0x47, 0x00, 0x00
	.byte 0x44, 0x0E, 0x00, 0x00, 0x01, 0x49, 0x40, 0x18, 0x70, 0x47, 0x00, 0x00, 0x14, 0x0E, 0x00, 0x00
	.byte 0x01, 0x49, 0x40, 0x18, 0x70, 0x47, 0x00, 0x00, 0xE4, 0x0D, 0x00, 0x00, 0x01, 0x49, 0x40, 0x18
	.byte 0x70, 0x47, 0x00, 0x00, 0xB4, 0x0D, 0x00, 0x00, 0x01, 0x49, 0x40, 0x18, 0x00, 0x68, 0x70, 0x47
	.byte 0x24, 0x10, 0x00, 0x00

	thumb_func_start sub_80ADA84
sub_80ADA84: @ 0x080ADA84
	push {lr}
	sub sp, #4
	adds r0, r1, #0
	movs r1, #0
	str r1, [sp]
	movs r1, #1
	movs r2, #0
	movs r3, #0
	bl sub_803A8A4
	bl sub_80A4698
	ldrh r0, [r0, #0x22]
	lsls r0, r0, #3
	add sp, #4
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80ADAA8
sub_80ADAA8: @ 0x080ADAA8
	push {lr}
	sub sp, #4
	adds r0, r1, #0
	movs r1, #0
	str r1, [sp]
	movs r1, #1
	movs r2, #0
	movs r3, #0
	bl sub_803A8A4
	bl sub_80A4698
	ldrh r0, [r0, #0x20]
	lsls r0, r0, #3
	add sp, #4
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80ADACC
sub_80ADACC: @ 0x080ADACC
	push {r4, r5, lr}
	adds r4, r0, #0
	lsls r5, r3, #0x18
	lsrs r5, r5, #0x18
	movs r0, #0xde
	lsls r0, r0, #1
	adds r4, r4, r0
	lsls r0, r2, #5
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r4, r4, r0
	adds r0, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	adds r1, r4, #0
	adds r1, #0x82
	movs r0, #1
	strb r0, [r1]
	adds r4, #0x83
	strb r5, [r4]
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80ADAFC
sub_80ADAFC: @ 0x080ADAFC
	push {r4, lr}
	movs r2, #0xce
	lsls r2, r2, #1
	adds r3, r0, r2
	adds r4, r3, r1
	ldrb r0, [r4]
	adds r2, r0, #0
	subs r2, #0x10
	cmp r2, #0
	bge _080ADB1C
	adds r0, r3, #0
	bl sub_80AC96C
	adds r2, r0, #0
	adds r0, #0x10
	strb r0, [r4]
_080ADB1C:
	adds r0, r2, #0
	pop {r4}
	pop {r1}
	bx r1
_080ADB24:
	.byte 0x4A, 0x01, 0x52, 0x18, 0x92, 0x00, 0x80, 0x18, 0x02, 0x49, 0x40, 0x18
	.byte 0x00, 0x21, 0x01, 0x70, 0x70, 0x47, 0x00, 0x00, 0x3D, 0x02, 0x00, 0x00, 0x08, 0x30, 0x89, 0x00
	.byte 0x40, 0x18, 0x00, 0x68, 0x70, 0x47, 0x00, 0x00, 0x08, 0x30, 0x89, 0x00, 0x40, 0x18, 0x00, 0x68
	.byte 0x70, 0x47, 0x00, 0x00

	thumb_func_start sub_80ADB54
sub_80ADB54: @ 0x080ADB54
	push {r4, lr}
	adds r0, #8
	lsls r1, r1, #2
	adds r4, r0, r1
	ldr r1, [r4]
	cmp r1, #0
	beq _080ADB72
	ldr r0, [r1, #0x14]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
	movs r0, #0
	str r0, [r4]
_080ADB72:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_80ADB78
sub_80ADB78: @ 0x080ADB78
	push {lr}
	ldr r0, [r0, #4]
	bl sub_80A5A9C
	pop {r1}
	bx r1
_080ADB84:
	.byte 0x40, 0x68, 0x0E, 0x21, 0x40, 0x5E, 0x70, 0x47, 0x40, 0x68, 0x0A, 0x21
	.byte 0x40, 0x5E, 0x70, 0x47, 0x40, 0x68, 0x00, 0x68, 0x70, 0x47, 0x00, 0x00

	thumb_func_start sub_80ADB9C
sub_80ADB9C: @ 0x080ADB9C
	push {lr}
	ldr r0, [r0, #4]
	bl sub_80A59BC
	pop {r0}
	bx r0

	thumb_func_start sub_80ADBA8
sub_80ADBA8: @ 0x080ADBA8
	push {lr}
	ldr r0, [r0, #4]
	bl sub_80A5960
	pop {r0}
	bx r0

	thumb_func_start sub_80ADBB4
sub_80ADBB4: @ 0x080ADBB4
	push {r4, lr}
	sub sp, #8
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	lsrs r1, r1, #0x1e
	lsls r2, r2, #0x19
	lsrs r2, r2, #0x1b
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	str r0, [sp, #4]
	ldr r0, _080ADBFC @ =gUnknown_081074F6
	adds r4, r0, #0
	adds r4, #0x1b
	movs r1, #0
	str r1, [sp]
	adds r1, r4, #0
	add r2, sp, #4
	movs r3, #0
	bl sub_80E0E80
	adds r1, r0, #0
	movs r2, #0
	cmp r1, r4
	beq _080ADBF2
	ldr r0, [sp, #4]
	ldrb r1, [r1]
	cmp r0, r1
	blo _080ADBF2
	movs r2, #1
_080ADBF2:
	adds r0, r2, #0
	add sp, #8
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080ADBFC: .4byte gUnknown_081074F6

	thumb_func_start sub_80ADC00
sub_80ADC00: @ 0x080ADC00
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x20
	bl sub_80005D4
	adds r2, r0, #0
	movs r0, #0
	str r0, [r2]
	strh r0, [r2, #4]
	adds r1, r2, #0
	adds r1, #8
	str r0, [r2, #8]
	strh r0, [r1, #4]
	adds r1, #8
	str r0, [r2, #0x10]
	strh r0, [r1, #4]
	adds r1, #8
	str r0, [r2, #0x18]
	strh r0, [r1, #4]
	str r2, [r4]
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
_080ADC30:
	.byte 0x70, 0xB5, 0x46, 0x46, 0x40, 0xB4, 0x8E, 0xB0, 0x80, 0x46, 0x0D, 0x1C, 0x20, 0x20, 0x52, 0xF7
	.byte 0xC9, 0xFC, 0x06, 0x1C, 0x0D, 0x49, 0x68, 0x46, 0xB0, 0xF7, 0x40, 0xFD, 0x00, 0x9C, 0x0C, 0xA8
	.byte 0xE3, 0x68, 0x69, 0x46, 0x2A, 0x1C, 0x25, 0xF0, 0x5F, 0xFE, 0x0C, 0x98, 0x02, 0x88, 0x30, 0x1C
	.byte 0x23, 0x69, 0x69, 0x46, 0x25, 0xF0, 0x58, 0xFE, 0x05, 0x48, 0x00, 0x90, 0x40, 0x46, 0x06, 0x60
	.byte 0x0E, 0xB0, 0x08, 0xBC, 0x98, 0x46, 0x70, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x84, 0xD9, 0x52, 0x08
	.byte 0x28, 0x5A, 0x0E, 0x08

	thumb_func_start sub_80ADC84
sub_80ADC84: @ 0x080ADC84
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r0, [r5]
	bl sub_8000608
	movs r0, #1
	ands r0, r4
	cmp r0, #0
	beq _080ADC9E
	adds r0, r5, #0
	bl sub_8000608
_080ADC9E:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80ADCA4
sub_80ADCA4: @ 0x080ADCA4
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #0x58
	mov r8, r1
	ldr r4, [r0]
	ldr r1, _080ADD00 @ =gUnknown_0852D984
	add r0, sp, #0x20
	bl sub_805E6CC
	add r6, sp, #0x20
	ldr r5, [sp, #0x20]
	add r0, sp, #0x50
	ldr r3, [r5, #0xc]
	adds r1, r6, #0
	mov r2, r8
	bl sub_80D3918
	ldr r0, [sp, #0x50]
	ldrh r2, [r0]
	mov r0, sp
	ldr r3, [r5, #0x10]
	adds r1, r6, #0
	bl sub_80D3918
	ldr r0, _080ADD04 @ =gUnknown_080E5A28
	str r0, [sp, #0x20]
	mov r0, sp
	mov r1, sp
	movs r2, #0x20
	bl sub_80D3994
	mov r0, sp
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r1, r2}
	stm r4!, {r1, r2}
	add sp, #0x58
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080ADD00: .4byte gUnknown_0852D984
_080ADD04: .4byte gUnknown_080E5A28

	thumb_func_start sub_80ADD08
sub_80ADD08: @ 0x080ADD08
	push {r4, r5, lr}
	adds r2, r0, #0
	ldr r1, [r1]
	ldm r1!, {r3, r4, r5}
	stm r2!, {r3, r4, r5}
	ldm r1!, {r3, r4, r5}
	stm r2!, {r3, r4, r5}
	ldm r1!, {r3, r4}
	stm r2!, {r3, r4}
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_80ADD20
sub_80ADD20: @ 0x080ADD20
	push {lr}
	sub sp, #0x30
	ldr r1, _080ADD3C @ =gUnknown_0852D984
	mov r0, sp
	bl sub_805E6CC
	mov r0, sp
	ldrh r0, [r0, #0x20]
	ldr r1, _080ADD40 @ =gUnknown_080E5A28
	str r1, [sp]
	add sp, #0x30
	pop {r1}
	bx r1
	.align 2, 0
_080ADD3C: .4byte gUnknown_0852D984
_080ADD40: .4byte gUnknown_080E5A28

	thumb_func_start sub_80ADD44
sub_80ADD44: @ 0x080ADD44
	movs r2, #0
	str r2, [r0]
	movs r3, #0
	movs r1, #0x80
	lsls r1, r1, #1
	strh r1, [r0, #4]
	strh r2, [r0, #6]
	str r2, [r0, #8]
	str r2, [r0, #0xc]
	str r2, [r0, #0x10]
	strb r3, [r0, #0x14]
	bx lr

	thumb_func_start sub_80ADD5C
sub_80ADD5C: @ 0x080ADD5C
	str r1, [r0, #8]
	str r2, [r0, #0xc]
	movs r3, #0
	str r3, [r0, #0x10]
	strb r3, [r0, #0x14]
	rsbs r2, r1, #0
	orrs r2, r1
	lsrs r2, r2, #0x1f
	str r2, [r0]
	strh r3, [r0, #6]
	bx lr
	.align 2, 0

	thumb_func_start sub_80ADD74
sub_80ADD74: @ 0x080ADD74
	strh r1, [r0, #4]
	bx lr

	thumb_func_start sub_80ADD78
sub_80ADD78: @ 0x080ADD78
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	adds r7, r0, #0
	mov r8, r1
	mov sl, r2
	movs r0, #0
	str r0, [sp, #0x24]
	adds r0, r7, #0
	bl sub_80ADF40
	adds r6, r0, #0
	ldr r0, [r7]
	cmp r0, #2
	bne _080ADDBE
	mov r1, sl
	ldr r0, [r1]
	ldr r1, [r0, #0x14]
	mov r0, sl
	bl sub_80D3910
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080ADDB2
	movs r6, #0
	b _080ADDE2
_080ADDB2:
	movs r0, #1
	str r0, [r7]
	b _080ADDE2
_080ADDB8:
	movs r0, #2
	str r0, [r7]
	b _080ADF1A
_080ADDBE:
	movs r4, #0
	mov r1, sl
	ldr r0, [r1]
	ldr r1, [r0, #0xc]
	mov r0, sl
	bl sub_80D3910
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	ldrh r0, [r7, #4]
	cmp r0, #0
	bne _080ADDDA
	movs r0, #1
	orrs r1, r0
_080ADDDA:
	cmp r1, #0
	beq _080ADDE0
	movs r4, #1
_080ADDE0:
	str r4, [sp, #0x24]
_080ADDE2:
	ldr r5, [r7, #0x10]
	cmp r5, #0
	bne _080ADDEA
	ldr r5, [r7, #8]
_080ADDEA:
	movs r0, #0
	mov sb, r0
	b _080ADEF8
_080ADDF0:
	ldrb r2, [r5]
	adds r5, #1
	cmp r2, #0xd
	bhi _080ADE40
	lsls r0, r2, #2
	ldr r1, _080ADE04 @ =_080ADE08
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080ADE04: .4byte _080ADE08
_080ADE08: @ jump table
	.4byte _080ADEAE @ case 0
	.4byte _080ADE40 @ case 1
	.4byte _080ADE40 @ case 2
	.4byte _080ADE40 @ case 3
	.4byte _080ADE40 @ case 4
	.4byte _080ADEE4 @ case 5
	.4byte _080ADE40 @ case 6
	.4byte _080ADE40 @ case 7
	.4byte _080ADE40 @ case 8
	.4byte _080ADE40 @ case 9
	.4byte _080ADEC8 @ case 10
	.4byte _080ADE40 @ case 11
	.4byte _080ADED0 @ case 12
	.4byte _080ADEC0 @ case 13
_080ADE40:
	cmp r2, #0x1f
	bls _080ADEF8
	mov r1, sb
	orrs r1, r2
	mov sb, r1
	mov r1, r8
	ldr r0, [r1]
	ldr r2, [r0, #0xc]
	mov r0, r8
	mov r1, sb
	bl sub_80D3914
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080ADE64
	movs r0, #0
	mov sb, r0
	b _080ADEDC
_080ADE64:
	ldr r2, [r7, #0xc]
	cmp r2, #0
	beq _080ADEA6
	ldr r0, [r7, #0x10]
	cmp r0, #0
	bne _080ADEA6
	ldr r1, [r2]
	mov r0, sp
	ldr r3, [r1, #0xc]
	adds r1, r2, #0
	mov r2, sb
	bl sub_80D3918
	mov r0, sp
	ldrb r0, [r0]
	cmp r0, #0
	beq _080ADE9E
	movs r1, #0
	mov sb, r1
	adds r4, r7, #0
	adds r4, #0x14
	add r1, sp, #4
	adds r0, r4, #0
	bl sub_80D3B28
	str r5, [r7, #8]
	str r4, [r7, #0x10]
	adds r5, r4, #0
	b _080ADEF8
_080ADE9E:
	mov r0, sb
	lsls r0, r0, #8
	mov sb, r0
	b _080ADEF8
_080ADEA6:
	mov r1, sb
	lsls r1, r1, #8
	mov sb, r1
	b _080ADEF8
_080ADEAE:
	ldr r0, [r7, #0x10]
	cmp r0, #0
	beq _080ADEBC
	movs r0, #0
	str r0, [r7, #0x10]
	ldr r5, [r7, #8]
	b _080ADEF8
_080ADEBC:
	movs r5, #0
	b _080ADF1A
_080ADEC0:
	mov r1, r8
	ldr r0, [r1]
	ldr r1, [r0, #0x10]
	b _080ADED6
_080ADEC8:
	mov r1, r8
	ldr r0, [r1]
	ldr r1, [r0, #0x14]
	b _080ADED6
_080ADED0:
	mov r1, r8
	ldr r0, [r1]
	ldr r1, [r0, #0x18]
_080ADED6:
	mov r0, r8
	bl sub_80D3910
_080ADEDC:
	cmp r6, #0
	beq _080ADEF8
	subs r6, #1
	b _080ADEF8
_080ADEE4:
	mov r1, sl
	ldr r0, [r1]
	ldr r1, [r0, #0x10]
	mov r0, sl
	bl sub_80D3910
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080ADEF8
	b _080ADDB8
_080ADEF8:
	cmp r5, #0
	beq _080ADF1A
	ldr r0, [sp, #0x24]
	cmp r0, #0
	bne _080ADF06
	cmp r6, #0
	beq _080ADF1A
_080ADF06:
	mov r1, r8
	ldr r0, [r1]
	ldr r1, [r0, #0x1c]
	mov r0, r8
	bl sub_80D3910
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080ADF1A
	b _080ADDF0
_080ADF1A:
	ldr r0, [r7, #0x10]
	cmp r0, #0
	beq _080ADF24
	str r5, [r7, #0x10]
	b _080ADF2C
_080ADF24:
	str r5, [r7, #8]
	cmp r5, #0
	bne _080ADF2C
	str r5, [r7]
_080ADF2C:
	ldr r0, [r7]
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80ADF40
sub_80ADF40: @ 0x080ADF40
	push {r4, r5, lr}
	adds r2, r0, #0
	ldrh r0, [r2, #6]
	adds r5, r0, #0
	ldrh r0, [r2, #4]
	adds r1, r5, r0
	adds r4, r1, #0
	movs r0, #0xff
	ands r0, r1
	movs r3, #0
	cmp r0, #0
	beq _080ADF5A
	adds r3, r1, #0
_080ADF5A:
	strh r3, [r2, #6]
	adds r0, r4, #0
	asrs r1, r0, #8
	adds r0, r5, #0
	asrs r0, r0, #8
	subs r0, r1, r0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_80ADF6C
sub_80ADF6C: @ 0x080ADF6C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x40
	adds r6, r0, #0
	str r1, [sp, #0x14]
	bl sub_8008444
	ldr r0, _080AE340 @ =gUnknown_080E8500
	str r0, [r6, #4]
	movs r0, #2
	add r7, sp, #0x10
	movs r1, #1
	rsbs r1, r1, #0
_080ADF8C:
	subs r0, #1
	cmp r0, r1
	bne _080ADF8C
	movs r0, #4
	bl sub_80005D4
	adds r5, r0, #0
	add r0, sp, #0xc
	bl sub_800835C
	adds r0, r7, #0
	bl sub_800770C
	movs r4, #0
	str r4, [sp]
	add r0, sp, #0xc
	str r0, [sp, #4]
	str r7, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #0x18
	movs r3, #0
	bl sub_8050CC0
	movs r2, #0x83
	lsls r2, r2, #3
	adds r1, r6, r2
	str r0, [r1]
	adds r0, r7, #0
	movs r1, #2
	bl sub_8007714
	add r0, sp, #0xc
	movs r1, #2
	bl sub_8008364
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080AE344 @ =gUnknown_0873E5B0
	bl sub_805E6CC
	ldr r2, _080AE348 @ =0x0000041C
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080AE34C @ =gUnknown_0873DE44
	bl sub_805E6CC
	movs r2, #0x84
	lsls r2, r2, #3
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080AE350 @ =gUnknown_087405A0
	bl sub_805E6CC
	ldr r2, _080AE354 @ =0x00000424
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080AE358 @ =gUnknown_0858BA28
	bl sub_805E6CC
	movs r2, #0x85
	lsls r2, r2, #3
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080AE35C @ =gUnknown_0873AE54
	bl sub_805E6CC
	ldr r2, _080AE360 @ =0x0000042C
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080AE364 @ =gUnknown_0871D51C
	bl sub_805E6CC
	movs r2, #0x86
	lsls r2, r2, #3
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080AE368 @ =gUnknown_0872BE64
	bl sub_805E6CC
	ldr r2, _080AE36C @ =0x00000434
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080AE370 @ =gUnknown_0873D6D8
	bl sub_805E6CC
	movs r2, #0x87
	lsls r2, r2, #3
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x10
	bl sub_80005D4
	adds r5, r0, #0
	adds r0, r6, #0
	bl sub_8008918
	adds r1, r0, #0
	str r4, [r5]
	str r4, [r5, #4]
	ldr r0, _080AE374 @ =gUnknown_080E5B80
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0xc
	bl sub_8009300
	ldr r1, _080AE378 @ =0x0000043C
	adds r0, r6, r1
	str r5, [r0]
	movs r2, #0x8c
	lsls r2, r2, #3
	adds r0, r6, r2
	str r4, [r0]
	adds r1, #0x28
	adds r0, r6, r1
	str r4, [r0]
	adds r2, #8
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0x10
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	adds r2, #8
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0x10
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	adds r2, #8
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0x10
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	adds r2, #8
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0x10
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	adds r2, #8
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0x10
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	adds r2, #8
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0x10
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r3, r6, r2
	movs r0, #4
	ldr r4, _080AE37C @ =0x000007CC
	adds r5, r6, r4
	ldr r1, _080AE380 @ =0x000007D4
	adds r7, r6, r1
	ldr r2, _080AE384 @ =0x000007DC
	adds r2, r2, r6
	mov ip, r2
	adds r4, #0x28
	adds r4, r4, r6
	mov r8, r4
	adds r1, #0x28
	adds r1, r1, r6
	mov sb, r1
	ldr r2, _080AE388 @ =0x00000804
	adds r2, r2, r6
	mov sl, r2
	movs r4, #0x89
	lsls r4, r4, #4
	adds r4, r6, r4
	str r4, [sp, #0x18]
	ldr r1, _080AE38C @ =0x00000898
	adds r1, r6, r1
	str r1, [sp, #0x1c]
	movs r2, #0x8a
	lsls r2, r2, #4
	adds r2, r6, r2
	str r2, [sp, #0x20]
	ldr r4, _080AE390 @ =0x000008A8
	adds r4, r6, r4
	str r4, [sp, #0x24]
	movs r1, #0x8b
	lsls r1, r1, #4
	adds r1, r6, r1
	str r1, [sp, #0x28]
	ldr r2, _080AE394 @ =0x000008B8
	adds r2, r6, r2
	str r2, [sp, #0x2c]
	movs r4, #0x8c
	lsls r4, r4, #4
	adds r4, r6, r4
	str r4, [sp, #0x30]
	ldr r1, _080AE398 @ =0x000008C8
	adds r1, r6, r1
	str r1, [sp, #0x34]
	movs r2, #0x8d
	lsls r2, r2, #4
	adds r2, r6, r2
	str r2, [sp, #0x38]
	ldr r4, _080AE39C @ =0x000008D8
	adds r4, r6, r4
	str r4, [sp, #0x3c]
	movs r2, #0
	movs r1, #1
	rsbs r1, r1, #0
_080AE20E:
	stm r3!, {r2}
	subs r0, #1
	cmp r0, r1
	bne _080AE20E
	ldr r0, _080AE3A0 @ =0x00000564
	adds r1, r6, r0
	movs r0, #4
	movs r3, #0
	movs r2, #1
	rsbs r2, r2, #0
_080AE222:
	stm r1!, {r3}
	subs r0, #1
	cmp r0, r2
	bne _080AE222
	movs r2, #4
	movs r1, #0
	movs r3, #1
	rsbs r3, r3, #0
	movs r4, #0xaf
	lsls r4, r4, #3
	adds r0, r6, r4
_080AE238:
	str r1, [r0]
	strh r1, [r0, #4]
	str r1, [r0, #8]
	strh r1, [r0, #0xc]
	str r1, [r0, #0x10]
	strh r1, [r0, #0x14]
	str r1, [r0, #0x18]
	strh r1, [r0, #0x1c]
	adds r0, #0x20
	subs r2, #1
	cmp r2, r3
	bne _080AE238
	movs r0, #0xc3
	lsls r0, r0, #3
	adds r1, r6, r0
	movs r0, #4
	movs r3, #0
	movs r2, #1
	rsbs r2, r2, #0
_080AE25E:
	stm r1!, {r3}
	subs r0, #1
	cmp r0, r2
	bne _080AE25E
	ldr r2, _080AE3A4 @ =0x0000062C
	adds r1, r6, r2
	movs r0, #4
	movs r3, #0
	movs r2, #1
	rsbs r2, r2, #0
_080AE272:
	stm r1!, {r3}
	subs r0, #1
	cmp r0, r2
	bne _080AE272
	movs r2, #4
	movs r1, #0
	movs r3, #1
	rsbs r3, r3, #0
	movs r4, #0xc8
	lsls r4, r4, #3
	adds r0, r6, r4
_080AE288:
	str r1, [r0]
	strh r1, [r0, #4]
	str r1, [r0, #8]
	strh r1, [r0, #0xc]
	str r1, [r0, #0x10]
	strh r1, [r0, #0x14]
	str r1, [r0, #0x18]
	strh r1, [r0, #0x1c]
	adds r0, #0x20
	subs r2, #1
	cmp r2, r3
	bne _080AE288
	movs r0, #0xdc
	lsls r0, r0, #3
	adds r1, r6, r0
	movs r0, #4
	movs r3, #0
	movs r2, #1
	rsbs r2, r2, #0
_080AE2AE:
	stm r1!, {r3}
	subs r0, #1
	cmp r0, r2
	bne _080AE2AE
	ldr r2, _080AE3A8 @ =0x000006F4
	adds r1, r6, r2
	movs r0, #4
	movs r3, #0
	movs r2, #1
	rsbs r2, r2, #0
_080AE2C2:
	stm r1!, {r3}
	subs r0, #1
	cmp r0, r2
	bne _080AE2C2
	movs r4, #0xe1
	lsls r4, r4, #3
	adds r1, r6, r4
	movs r0, #4
	movs r3, #0
	movs r2, #1
	rsbs r2, r2, #0
_080AE2D8:
	stm r1!, {r3}
	subs r0, #1
	cmp r0, r2
	bne _080AE2D8
	movs r2, #4
	movs r1, #0
	movs r3, #1
	rsbs r3, r3, #0
	ldr r4, _080AE3AC @ =0x0000071C
	adds r0, r6, r4
_080AE2EC:
	str r1, [r0]
	strh r1, [r0, #4]
	str r1, [r0, #8]
	strh r1, [r0, #0xc]
	str r1, [r0, #0x10]
	strh r1, [r0, #0x14]
	str r1, [r0, #0x18]
	strh r1, [r0, #0x1c]
	adds r0, #0x20
	subs r2, #1
	cmp r2, r3
	bne _080AE2EC
	movs r4, #0
	ldr r1, _080AE3B0 @ =0x000007BC
	adds r0, r6, r1
	str r4, [r0]
	movs r2, #0xf8
	lsls r2, r2, #3
	adds r0, r6, r2
	str r4, [r0]
	adds r1, #8
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	str r4, [r5]
	strh r4, [r5, #4]
	str r4, [r7]
	strh r4, [r7, #4]
	mov r2, ip
	str r4, [r2]
	strh r4, [r2, #4]
	adds r1, #0x20
	adds r0, r6, r1
	str r4, [r0]
	movs r2, #0xfd
	lsls r2, r2, #3
	adds r0, r6, r2
	str r4, [r0]
	adds r1, #8
	adds r0, r6, r1
	b _080AE3B4
	.align 2, 0
_080AE340: .4byte gUnknown_080E8500
_080AE344: .4byte gUnknown_0873E5B0
_080AE348: .4byte 0x0000041C
_080AE34C: .4byte gUnknown_0873DE44
_080AE350: .4byte gUnknown_087405A0
_080AE354: .4byte 0x00000424
_080AE358: .4byte gUnknown_0858BA28
_080AE35C: .4byte gUnknown_0873AE54
_080AE360: .4byte 0x0000042C
_080AE364: .4byte gUnknown_0871D51C
_080AE368: .4byte gUnknown_0872BE64
_080AE36C: .4byte 0x00000434
_080AE370: .4byte gUnknown_0873D6D8
_080AE374: .4byte gUnknown_080E5B80
_080AE378: .4byte 0x0000043C
_080AE37C: .4byte 0x000007CC
_080AE380: .4byte 0x000007D4
_080AE384: .4byte 0x000007DC
_080AE388: .4byte 0x00000804
_080AE38C: .4byte 0x00000898
_080AE390: .4byte 0x000008A8
_080AE394: .4byte 0x000008B8
_080AE398: .4byte 0x000008C8
_080AE39C: .4byte 0x000008D8
_080AE3A0: .4byte 0x00000564
_080AE3A4: .4byte 0x0000062C
_080AE3A8: .4byte 0x000006F4
_080AE3AC: .4byte 0x0000071C
_080AE3B0: .4byte 0x000007BC
_080AE3B4:
	str r4, [r0]
	strh r4, [r0, #4]
	mov r2, r8
	str r4, [r2]
	strh r4, [r2, #4]
	mov r0, sb
	str r4, [r0]
	strh r4, [r0, #4]
	mov r1, sl
	str r4, [r1]
	strh r4, [r1, #4]
	ldr r2, _080AE4B8 @ =0x0000080C
	adds r0, r6, r2
	movs r1, #0
	bl sub_8008B54
	movs r1, #0x81
	lsls r1, r1, #4
	adds r0, r6, r1
	movs r1, #1
	bl sub_8008B54
	ldr r2, _080AE4BC @ =0x00000814
	adds r0, r6, r2
	movs r1, #2
	bl sub_8008B54
	ldr r1, _080AE4C0 @ =0x00000818
	adds r0, r6, r1
	movs r1, #3
	bl sub_8008B54
	ldr r2, _080AE4C4 @ =0x0000081C
	adds r0, r6, r2
	movs r1, #4
	bl sub_8008B54
	movs r1, #0x82
	lsls r1, r1, #4
	adds r0, r6, r1
	str r4, [r0]
	str r4, [r0, #4]
	ldr r1, _080AE4C8 @ =gUnknown_080E5B70
	str r1, [r0, #8]
	ldr r2, _080AE4CC @ =0x0000082C
	adds r0, r6, r2
	str r4, [r0]
	str r4, [r0, #4]
	ldr r1, _080AE4D0 @ =gUnknown_080E5B60
	str r1, [r0, #8]
	ldr r0, _080AE4D4 @ =0x00000888
	adds r5, r6, r0
	adds r0, r5, #0
	bl sub_8007874
	str r4, [r5, #4]
	ldr r0, [sp, #0x18]
	bl sub_8007874
	ldr r1, [sp, #0x18]
	str r4, [r1, #4]
	ldr r0, [sp, #0x1c]
	bl sub_8007874
	ldr r2, [sp, #0x1c]
	str r4, [r2, #4]
	ldr r0, [sp, #0x20]
	bl sub_8007874
	ldr r0, [sp, #0x20]
	str r4, [r0, #4]
	ldr r0, [sp, #0x24]
	bl sub_8007874
	ldr r1, [sp, #0x24]
	str r4, [r1, #4]
	ldr r0, [sp, #0x28]
	bl sub_8007874
	ldr r2, [sp, #0x28]
	str r4, [r2, #4]
	ldr r0, [sp, #0x2c]
	bl sub_8007874
	ldr r0, [sp, #0x2c]
	str r4, [r0, #4]
	ldr r0, [sp, #0x30]
	bl sub_8007874
	ldr r1, [sp, #0x30]
	str r4, [r1, #4]
	ldr r0, [sp, #0x34]
	bl sub_8007874
	ldr r2, [sp, #0x34]
	str r4, [r2, #4]
	ldr r0, [sp, #0x38]
	bl sub_8007874
	ldr r0, [sp, #0x38]
	str r4, [r0, #4]
	ldr r0, [sp, #0x3c]
	bl sub_8007874
	ldr r1, [sp, #0x3c]
	str r4, [r1, #4]
	movs r2, #0x91
	lsls r2, r2, #4
	adds r0, r6, r2
	str r4, [r0]
	movs r4, #0x93
	lsls r4, r4, #4
	adds r1, r6, r4
	ldr r2, [sp, #0x14]
	ldr r0, [r2]
	str r0, [r1]
	ldrb r1, [r2, #4]
	adds r4, #8
	adds r0, r6, r4
	strb r1, [r0]
	adds r0, r6, #0
	add sp, #0x40
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080AE4B8: .4byte 0x0000080C
_080AE4BC: .4byte 0x00000814
_080AE4C0: .4byte 0x00000818
_080AE4C4: .4byte 0x0000081C
_080AE4C8: .4byte gUnknown_080E5B70
_080AE4CC: .4byte 0x0000082C
_080AE4D0: .4byte gUnknown_080E5B60
_080AE4D4: .4byte 0x00000888

	thumb_func_start sub_80AE4D8
sub_80AE4D8: @ 0x080AE4D8
	ldr r1, _080AE4E0 @ =0x0000092C
	adds r0, r0, r1
	ldrb r0, [r0]
	bx lr
	.align 2, 0
_080AE4E0: .4byte 0x0000092C

	thumb_func_start sub_80AE4E4
sub_80AE4E4: @ 0x080AE4E4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	str r0, [sp, #0x1c]
	adds r7, r1, #0
	adds r0, r7, #0
	bl sub_80AE6C0
	adds r0, r7, #0
	bl sub_8008918
	add r1, sp, #0xc
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	ldr r0, _080AE57C @ =0x0000043C
	adds r4, r7, r0
	ldr r0, [r4]
	ldr r1, _080AE580 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl sub_800934C
	adds r0, r7, #0
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [r4]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
	adds r0, r7, #0
	bl sub_80B09B0
	adds r0, r7, #0
	bl sub_80B0AA0
	adds r0, r7, #0
	bl sub_80AE7D0
	adds r0, r7, #0
	bl sub_80AE894
	ldr r1, _080AE584 @ =0x0000080C
	adds r0, r7, r1
	movs r1, #0x22
	bl sub_8008B6C
	ldr r1, _080AE588 @ =0x00000838
	adds r0, r7, r1
	ldr r0, [r0]
	mov r1, sp
	adds r1, #0x10
	str r1, [sp, #0x24]
	adds r1, #4
	str r1, [sp, #0x28]
	cmp r0, #5
	beq _080AE5D4
_080AE562:
	adds r0, r7, #0
	bl sub_80087C8
	ldr r1, _080AE588 @ =0x00000838
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #4
	bhi _080AE5CA
	lsls r0, r0, #2
	ldr r1, _080AE58C @ =_080AE590
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080AE57C: .4byte 0x0000043C
_080AE580: .4byte 0x00000889
_080AE584: .4byte 0x0000080C
_080AE588: .4byte 0x00000838
_080AE58C: .4byte _080AE590
_080AE590: @ jump table
	.4byte _080AE5A4 @ case 0
	.4byte _080AE5AC @ case 1
	.4byte _080AE5B4 @ case 2
	.4byte _080AE5BC @ case 3
	.4byte _080AE5C4 @ case 4
_080AE5A4:
	adds r0, r7, #0
	bl sub_80B0BB8
	b _080AE5CA
_080AE5AC:
	adds r0, r7, #0
	bl sub_80B1B40
	b _080AE5CA
_080AE5B4:
	adds r0, r7, #0
	bl sub_80B1D34
	b _080AE5CA
_080AE5BC:
	adds r0, r7, #0
	bl sub_80B1D94
	b _080AE5CA
_080AE5C4:
	adds r0, r7, #0
	bl sub_80B2114
_080AE5CA:
	ldr r1, _080AE6B4 @ =0x00000838
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #5
	bne _080AE562
_080AE5D4:
	ldr r0, _080AE6B8 @ =0x0000043C
	adds r4, r7, r0
	ldr r2, [r4]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _080AE602
	ldr r1, _080AE6BC @ =0x00000889
	adds r0, r2, #0
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl sub_8009378
	adds r0, r7, #0
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [r4]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
_080AE602:
	ldr r0, [r4]
	ldr r0, [r0]
	rsbs r2, r0, #0
	orrs r2, r0
	cmp r2, #0
	bge _080AE67A
	movs r1, #0x83
	lsls r1, r1, #3
	adds r1, r7, r1
	str r1, [sp, #0x20]
	movs r0, #0x81
	lsls r0, r0, #4
	adds r0, r0, r7
	mov sl, r0
_080AE61E:
	adds r0, r7, #0
	bl sub_80087C8
	ldr r1, [sp, #0x20]
	ldr r1, [r1]
	mov sb, r1
	adds r0, r7, #0
	bl sub_80088DC
	mov r8, r0
	adds r0, r7, #0
	bl sub_8008920
	adds r6, r0, #0
	adds r0, r7, #0
	bl sub_8008918
	adds r5, r0, #0
	adds r0, r7, #0
	bl sub_8008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl sub_800894C
	str r4, [sp]
	str r0, [sp, #4]
	mov r0, sl
	str r0, [sp, #8]
	mov r0, sb
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl sub_8050D3C
	adds r0, r7, #0
	bl sub_80AF814
	ldr r1, _080AE6B8 @ =0x0000043C
	adds r0, r7, r1
	ldr r0, [r0]
	ldr r0, [r0]
	rsbs r2, r0, #0
	orrs r2, r0
	cmp r2, #0
	blt _080AE61E
_080AE67A:
	movs r0, #0
	str r0, [sp, #0x10]
	ldr r1, [sp, #0x24]
	str r1, [sp, #0x14]
	ldr r1, [sp, #0x28]
	str r0, [r1, #4]
	ldr r1, [sp, #0x24]
	str r0, [r1]
	ldr r1, [sp, #0x1c]
	str r0, [r1]
	ldr r1, [sp, #0x10]
	cmp r1, #0
	beq _080AE6A0
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080AE6A0:
	ldr r0, [sp, #0x1c]
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080AE6B4: .4byte 0x00000838
_080AE6B8: .4byte 0x0000043C
_080AE6BC: .4byte 0x00000889

	thumb_func_start sub_80AE6C0
sub_80AE6C0: @ 0x080AE6C0
	push {lr}
	bl sub_8008724
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80AE6CC
sub_80AE6CC: @ 0x080AE6CC
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r0, _080AE7BC @ =0x00000888
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #3
	bl sub_8007B54
	str r0, [r4, #4]
	movs r0, #0x89
	lsls r0, r0, #4
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #6
	bl sub_8007B54
	str r0, [r4, #4]
	movs r0, #0x8a
	lsls r0, r0, #4
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #5
	bl sub_8007B54
	str r0, [r4, #4]
	ldr r0, _080AE7C0 @ =0x000008A8
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007B54
	str r0, [r4, #4]
	movs r0, #0x8b
	lsls r0, r0, #4
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #4
	bl sub_8007B54
	str r0, [r4, #4]
	ldr r0, _080AE7C4 @ =0x000008B8
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #5
	bl sub_8007B54
	str r0, [r4, #4]
	movs r0, #0x8c
	lsls r0, r0, #4
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #5
	bl sub_8007B54
	str r0, [r4, #4]
	ldr r0, _080AE7C8 @ =0x000008C8
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #5
	bl sub_8007B54
	str r0, [r4, #4]
	movs r0, #0x8d
	lsls r0, r0, #4
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #6
	bl sub_8007B54
	str r0, [r4, #4]
	ldr r0, _080AE7CC @ =0x000008D8
	adds r5, r5, r0
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007C28
	adds r0, r5, #0
	movs r1, #6
	bl sub_8007B54
	str r0, [r5, #4]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080AE7BC: .4byte 0x00000888
_080AE7C0: .4byte 0x000008A8
_080AE7C4: .4byte 0x000008B8
_080AE7C8: .4byte 0x000008C8
_080AE7CC: .4byte 0x000008D8

	thumb_func_start sub_80AE7D0
sub_80AE7D0: @ 0x080AE7D0
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #4
	mov sb, r0
	ldr r1, _080AE870 @ =0x06007FE0
	movs r0, #0
	movs r2, #0x20
	bl sub_8008EB8
	movs r5, #1
	rsbs r5, r5, #0
	ldr r0, _080AE874 @ =0x0600F000
	mov r8, r0
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r5, #0
	mov r1, r8
	adds r2, r6, #0
	bl sub_8008EB8
	ldr r4, _080AE878 @ =0x0600F800
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl sub_8008EB8
	ldr r0, _080AE87C @ =gUnknown_0872FC34
	adds r1, r4, #0
	bl sub_80D102C
	ldr r0, _080AE880 @ =gUnknown_0872FE6C
	mov r1, r8
	bl sub_80D102C
	ldr r0, _080AE884 @ =gUnknown_0872FEF8
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl sub_80D102C
	ldr r0, _080AE888 @ =gUnknown_08731940
	movs r1, #0xa0
	lsls r1, r1, #0x13
	movs r2, #0x80
	lsls r2, r2, #2
	bl sub_8008E64
	mov r0, sb
	bl sub_8008918
	mov r2, sp
	movs r3, #0xb2
	lsls r3, r3, #5
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0]
	mov r0, sb
	bl sub_8008918
	mov r2, sp
	ldr r3, _080AE88C @ =0x00001E41
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xa]
	mov r0, sb
	bl sub_8008918
	mov r2, sp
	ldr r3, _080AE890 @ =0x00001F42
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xc]
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080AE870: .4byte 0x06007FE0
_080AE874: .4byte 0x0600F000
_080AE878: .4byte 0x0600F800
_080AE87C: .4byte gUnknown_0872FC34
_080AE880: .4byte gUnknown_0872FE6C
_080AE884: .4byte gUnknown_0872FEF8
_080AE888: .4byte gUnknown_08731940
_080AE88C: .4byte 0x00001E41
_080AE890: .4byte 0x00001F42

	thumb_func_start sub_80AE894
sub_80AE894: @ 0x080AE894
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xdc
	mov sb, r0
	ldr r0, _080AE9B8 @ =gUnknown_080F9F78
	ldr r0, [r0]
	ldr r1, _080AE9BC @ =0x050003C0
	movs r2, #0x20
	bl sub_8008E64
	mov r0, sb
	bl sub_80AE6CC
	ldr r1, _080AE9C0 @ =0x0500024A
	ldr r0, _080AE9C4 @ =0x050003C2
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _080AE9C8 @ =0x050003C4
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	movs r0, #0x1f
	strh r0, [r1]
	adds r1, #2
	ldr r2, _080AE9CC @ =0x0000675E
	adds r0, r2, #0
	strh r0, [r1]
	movs r1, #0x88
	lsls r1, r1, #3
	add r1, sb
	movs r0, #0
	movs r2, #8
	bl sub_8008EB8
	ldr r0, _080AE9D0 @ =0x0000090B
	add r0, sb
	ldrb r0, [r0]
	add r1, sp, #0x10
	movs r2, #0
	bl sub_804EC84
	ldr r1, _080AE9D4 @ =0x05000240
	movs r3, #0xf8
	lsls r3, r3, #2
	adds r0, r3, #0
	strh r0, [r1]
	adds r1, #2
	ldr r4, _080AE9D8 @ =0x00000303
	adds r0, r4, #0
	strh r0, [r1]
	adds r1, #2
	ldr r5, _080AE9DC @ =0x00004F15
	adds r0, r5, #0
	strh r0, [r1]
	adds r1, #2
	ldr r6, _080AE9E0 @ =0x00007FFF
	adds r0, r6, #0
	strh r0, [r1]
	adds r1, #2
	ldr r7, _080AE9E4 @ =0x000052F8
	adds r0, r7, #0
	strh r0, [r1]
	add r0, sp, #0x6c
	movs r5, #4
	movs r6, #2
	movs r1, #0
	mov r8, r1
	strh r5, [r0]
	strh r6, [r0, #2]
	ldr r0, [sp, #0x6c]
	mov r4, sb
	adds r4, #0xc
	adds r1, r4, #0
	movs r2, #0
	bl sub_804E7A0
	movs r2, #1
	mov sl, r2
	add r0, sp, #0x70
	strh r5, [r0]
	strh r6, [r0, #2]
	ldr r0, [sp, #0x70]
	add r3, sp, #0x10
	str r3, [sp]
	mov r5, r8
	str r5, [sp, #4]
	str r2, [sp, #8]
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_804E958
	mov r0, sb
	bl sub_8008910
	adds r5, r0, #0
	ldr r0, _080AE9E8 @ =0x00000888
	add r0, sb
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r2, r0, #0
	movs r3, #0x80
	lsls r3, r3, #1
	lsls r2, r2, #5
	ldr r6, _080AE9EC @ =0x06010000
	adds r2, r2, r6
	add r0, sp, #0x14
	adds r1, r4, #0
	bl sub_8008F0C
	add r7, sp, #0x14
	mov r8, r7
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080AE9F0
	cmp r1, #0
	beq _080AE996
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080AE996:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	mov r5, sp
	adds r5, #0x7c
	str r5, [sp, #0xc0]
	mov r6, sp
	adds r6, #0x24
	str r6, [sp, #0xb4]
	mov r7, sp
	adds r7, #0x44
	str r7, [sp, #0xb8]
	mov r0, sp
	adds r0, #0x48
	str r0, [sp, #0xbc]
	b _080AEACE
	.align 2, 0
_080AE9B8: .4byte gUnknown_080F9F78
_080AE9BC: .4byte 0x050003C0
_080AE9C0: .4byte 0x0500024A
_080AE9C4: .4byte 0x050003C2
_080AE9C8: .4byte 0x050003C4
_080AE9CC: .4byte 0x0000675E
_080AE9D0: .4byte 0x0000090B
_080AE9D4: .4byte 0x05000240
_080AE9D8: .4byte 0x00000303
_080AE9DC: .4byte 0x00004F15
_080AE9E0: .4byte 0x00007FFF
_080AE9E4: .4byte 0x000052F8
_080AE9E8: .4byte 0x00000888
_080AE9EC: .4byte 0x06010000
_080AE9F0:
	str r1, [sp, #0xd4]
	mov r1, sl
	str r1, [sp, #0x78]
	ldr r0, [r5]
	ldr r2, [sp, #0xd4]
	subs r0, r2, r0
	asrs r4, r0, #4
	str r4, [sp, #0x74]
	add r1, sp, #0x78
	add r0, sp, #0x74
	cmp r4, #1
	bhs _080AEA0A
	adds r0, r1, #0
_080AEA0A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080AEA28
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sl, r4
	cmp r0, #0
	bne _080AEA2C
	mov r0, sl
	bl sub_80D3BC0
	b _080AEA2C
_080AEA28:
	movs r0, #0
	mov sl, r0
_080AEA2C:
	adds r6, r0, #0
	str r6, [sp, #0xd8]
	ldr r2, [r5]
	adds r3, r6, #0
	mov r4, sp
	adds r4, #0x7c
	str r4, [sp, #0xc0]
	mov r6, sp
	adds r6, #0x24
	str r6, [sp, #0xb4]
	mov r7, sp
	adds r7, #0x44
	str r7, [sp, #0xb8]
	mov r0, sp
	adds r0, #0x48
	str r0, [sp, #0xbc]
	ldr r1, [sp, #0xd4]
	cmp r2, r1
	beq _080AEA6C
_080AEA52:
	cmp r3, #0
	beq _080AEA62
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080AEA62:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xd4]
	cmp r2, r0
	bne _080AEA52
_080AEA6C:
	adds r6, r3, #0
	ldr r0, [sp, #0x78]
	cmp r0, #1
	bne _080AEA88
	cmp r6, #0
	beq _080AEA84
	adds r0, r6, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080AEA84:
	adds r6, #0x10
	b _080AEAAA
_080AEA88:
	adds r3, r0, #0
	adds r2, r6, #0
	cmp r3, #0
	beq _080AEAA8
_080AEA90:
	cmp r2, #0
	beq _080AEAA0
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080AEAA0:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080AEA90
_080AEAA8:
	adds r6, r2, #0
_080AEAAA:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080AEABA
_080AEAB4:
	adds r1, #0x10
	cmp r1, r2
	bne _080AEAB4
_080AEABA:
	cmp r0, #0
	beq _080AEAC2
	bl sub_80D0260
_080AEAC2:
	ldr r0, [sp, #0xd8]
	add r0, sl
	ldr r7, [sp, #0xd8]
	str r7, [r5]
	str r6, [r5, #4]
	str r0, [r5, #0xc]
_080AEACE:
	movs r4, #0x88
	lsls r4, r4, #3
	add r4, sb
	ldr r0, _080AEC10 @ =0x00000888
	add r0, sb
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r3, r0, #0
	movs r0, #2
	str r0, [sp]
	movs r5, #0
	str r5, [sp, #4]
	str r0, [sp, #8]
	movs r0, #1
	mov r8, r0
	str r0, [sp, #0xc]
	ldr r0, [sp, #0xc0]
	movs r1, #0xd0
	movs r2, #8
	bl sub_804EA94
	ldr r0, [sp, #0x7c]
	ldr r1, [sp, #0x80]
	str r0, [r4]
	str r1, [r4, #4]
	movs r0, #0x14
	bl sub_80005D4
	ldr r1, _080AEC14 @ =0x0000041C
	add r1, sb
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r4, r0, #0
	movs r7, #0x96
	lsls r7, r7, #3
	add r7, sb
	ldr r0, [r7]
	cmp r4, r0
	beq _080AEB2A
	bl sub_8000608
_080AEB2A:
	str r4, [r7]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r0, #0
	strh r5, [r4]
	strh r5, [r4, #2]
	strh r5, [r4, #4]
	strh r5, [r4, #6]
	strh r5, [r4, #8]
	str r5, [r4, #0xc]
	strb r0, [r4, #0x10]
	strb r0, [r4, #0x11]
	str r5, [r4, #0x14]
	strb r0, [r4, #0x18]
	ldr r6, _080AEC18 @ =0x000004B4
	add r6, sb
	ldr r0, [r6]
	cmp r4, r0
	beq _080AEB58
	bl sub_8000608
_080AEB58:
	str r4, [r6]
	ldr r0, [r7]
	movs r1, #0
	bl sub_805E860
	ldr r0, [r6]
	movs r1, #0x40
	strh r1, [r0]
	ldr r0, [r6]
	strh r1, [r0, #2]
	ldr r4, [r6]
	movs r5, #0x89
	lsls r5, r5, #4
	add r5, sb
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	strh r0, [r4, #6]
	ldr r1, [r6]
	movs r0, #3
	strh r0, [r1, #4]
	movs r4, #0x97
	lsls r4, r4, #3
	add r4, sb
	ldr r0, [r7]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x24
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	ldr r0, [sp, #0xb4]
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	ldr r0, [sp, #0xb4]
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r1, r6, r7}
	stm r4!, {r1, r6, r7}
	ldm r0!, {r2, r3}
	stm r4!, {r2, r3}
	mov r0, sb
	bl sub_8008910
	adds r6, r0, #0
	movs r4, #0x98
	lsls r4, r4, #3
	add r4, sb
	ldr r7, [r4]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080AEBDE
	ldrh r3, [r4, #4]
_080AEBDE:
	lsls r2, r2, #5
	ldr r4, _080AEC1C @ =0x06010000
	adds r2, r2, r4
	add r0, sp, #0x14
	adds r1, r7, #0
	bl sub_8008F0C
	add r5, sp, #0x14
	mov sl, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080AEC20
	cmp r1, #0
	beq _080AEC08
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080AEC08:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080AECE6
	.align 2, 0
_080AEC10: .4byte 0x00000888
_080AEC14: .4byte 0x0000041C
_080AEC18: .4byte 0x000004B4
_080AEC1C: .4byte 0x06010000
_080AEC20:
	str r1, [sp, #0xd4]
	mov r4, r8
	str r4, [sp, #0x88]
	ldr r0, [r6]
	adds r5, r1, #0
	subs r0, r5, r0
	asrs r4, r0, #4
	str r4, [sp, #0x84]
	add r1, sp, #0x88
	add r0, sp, #0x84
	cmp r4, #1
	bhs _080AEC3A
	adds r0, r1, #0
_080AEC3A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080AEC58
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080AEC5C
	mov r0, r8
	bl sub_80D3BC0
	b _080AEC5C
_080AEC58:
	movs r0, #0
	mov r8, r0
_080AEC5C:
	adds r5, r0, #0
	str r5, [sp, #0xd8]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0xd4]
	cmp r2, r7
	beq _080AEC84
_080AEC6A:
	cmp r3, #0
	beq _080AEC7A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080AEC7A:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xd4]
	cmp r2, r0
	bne _080AEC6A
_080AEC84:
	adds r5, r3, #0
	ldr r0, [sp, #0x88]
	cmp r0, #1
	bne _080AECA0
	cmp r5, #0
	beq _080AEC9C
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080AEC9C:
	adds r5, #0x10
	b _080AECC2
_080AECA0:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080AECC0
_080AECA8:
	cmp r2, #0
	beq _080AECB8
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080AECB8:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080AECA8
_080AECC0:
	adds r5, r2, #0
_080AECC2:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080AECD2
_080AECCC:
	adds r1, #0x10
	cmp r1, r2
	bne _080AECCC
_080AECD2:
	cmp r0, #0
	beq _080AECDA
	bl sub_80D0260
_080AECDA:
	ldr r0, [sp, #0xd8]
	add r0, r8
	ldr r7, [sp, #0xd8]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080AECE6:
	mov r0, sb
	bl sub_8008910
	adds r4, r0, #0
	movs r2, #0x99
	lsls r2, r2, #3
	add r2, sb
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080AED00
	ldrh r3, [r2, #4]
_080AED00:
	adds r6, r4, #0
	add r0, sp, #0x14
	ldr r2, _080AED30 @ =0x05000260
	bl sub_8008F0C
	add r0, sp, #0x14
	mov sl, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080AED34
	cmp r1, #0
	beq _080AED26
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080AED26:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080AEDFC
	.align 2, 0
_080AED30: .4byte 0x05000260
_080AED34:
	str r1, [sp, #0xd4]
	movs r0, #1
	add r1, sp, #0x90
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0xd4]
	subs r0, r5, r0
	asrs r4, r0, #4
	str r4, [sp, #0x8c]
	ldr r0, [r1]
	add r2, sp, #0x8c
	cmp r4, r0
	bhs _080AED50
	adds r2, r1, #0
_080AED50:
	ldr r0, [r2]
	adds r0, r4, r0
	cmp r0, #0
	beq _080AED6E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080AED72
	mov r0, r8
	bl sub_80D3BC0
	b _080AED72
_080AED6E:
	movs r0, #0
	mov r8, r0
_080AED72:
	adds r5, r0, #0
	str r5, [sp, #0xd8]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0xd4]
	cmp r2, r7
	beq _080AED9A
_080AED80:
	cmp r3, #0
	beq _080AED90
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080AED90:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xd4]
	cmp r2, r0
	bne _080AED80
_080AED9A:
	adds r5, r3, #0
	ldr r1, [sp, #0x90]
	cmp r1, #1
	bne _080AEDB6
	cmp r5, #0
	beq _080AEDB2
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080AEDB2:
	adds r5, #0x10
	b _080AEDD8
_080AEDB6:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080AEDD6
_080AEDBE:
	cmp r2, #0
	beq _080AEDCE
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080AEDCE:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080AEDBE
_080AEDD6:
	adds r5, r2, #0
_080AEDD8:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080AEDE8
_080AEDE2:
	adds r1, #0x10
	cmp r1, r2
	bne _080AEDE2
_080AEDE8:
	cmp r0, #0
	beq _080AEDF0
	bl sub_80D0260
_080AEDF0:
	ldr r0, [sp, #0xd8]
	add r0, r8
	ldr r7, [sp, #0xd8]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080AEDFC:
	movs r0, #0x14
	bl sub_80005D4
	ldr r1, _080AEF1C @ =0x00000424
	add r1, sb
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r4, r0, #0
	movs r7, #0x9b
	lsls r7, r7, #3
	add r7, sb
	ldr r0, [r7]
	cmp r4, r0
	beq _080AEE24
	bl sub_8000608
_080AEE24:
	str r4, [r7]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r0, #0
	movs r5, #0
	strh r5, [r4]
	strh r5, [r4, #2]
	strh r5, [r4, #4]
	strh r5, [r4, #6]
	strh r5, [r4, #8]
	str r5, [r4, #0xc]
	strb r0, [r4, #0x10]
	strb r0, [r4, #0x11]
	str r5, [r4, #0x14]
	strb r0, [r4, #0x18]
	ldr r6, _080AEF20 @ =0x000004DC
	add r6, sb
	ldr r0, [r6]
	cmp r4, r0
	beq _080AEE54
	bl sub_8000608
_080AEE54:
	str r4, [r6]
	ldr r0, [r7]
	movs r1, #0
	bl sub_805E860
	ldr r1, [r6]
	movs r0, #0xc0
	strh r0, [r1]
	ldr r0, [r6]
	strh r5, [r0, #2]
	ldr r4, [r6]
	movs r5, #0x8a
	lsls r5, r5, #4
	add r5, sb
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	strh r0, [r4, #6]
	ldr r1, [r6]
	movs r0, #4
	strh r0, [r1, #4]
	ldr r0, [r6]
	movs r1, #1
	movs r2, #1
	mov r8, r2
	mov r3, r8
	strh r3, [r0, #8]
	ldr r0, [r6]
	strb r1, [r0, #0x18]
	movs r4, #0x9c
	lsls r4, r4, #3
	add r4, sb
	ldr r0, [r7]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x14
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r0, sp, #0x14
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	add r0, sp, #0x14
	ldm r0!, {r1, r6, r7}
	stm r4!, {r1, r6, r7}
	ldm r0!, {r2, r3, r6}
	stm r4!, {r2, r3, r6}
	ldm r0!, {r1, r7}
	stm r4!, {r1, r7}
	mov r0, sb
	bl sub_8008910
	adds r6, r0, #0
	movs r4, #0x9d
	lsls r4, r4, #3
	add r4, sb
	ldr r7, [r4]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080AEEEA
	ldrh r3, [r4, #4]
_080AEEEA:
	lsls r2, r2, #5
	ldr r4, _080AEF24 @ =0x06010000
	adds r2, r2, r4
	add r0, sp, #0x14
	adds r1, r7, #0
	bl sub_8008F0C
	add r5, sp, #0x14
	mov sl, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080AEF28
	cmp r1, #0
	beq _080AEF14
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080AEF14:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080AEFF0
	.align 2, 0
_080AEF1C: .4byte 0x00000424
_080AEF20: .4byte 0x000004DC
_080AEF24: .4byte 0x06010000
_080AEF28:
	str r1, [sp, #0xd4]
	add r1, sp, #0x98
	mov r4, r8
	str r4, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0xd4]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x94
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080AEF44
	adds r0, r1, #0
_080AEF44:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080AEF62
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080AEF66
	mov r0, r8
	bl sub_80D3BC0
	b _080AEF66
_080AEF62:
	movs r0, #0
	mov r8, r0
_080AEF66:
	adds r5, r0, #0
	str r5, [sp, #0xd8]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0xd4]
	cmp r2, r7
	beq _080AEF8E
_080AEF74:
	cmp r3, #0
	beq _080AEF84
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080AEF84:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xd4]
	cmp r2, r0
	bne _080AEF74
_080AEF8E:
	adds r5, r3, #0
	ldr r1, [sp, #0x98]
	cmp r1, #1
	bne _080AEFAA
	cmp r5, #0
	beq _080AEFA6
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080AEFA6:
	adds r5, #0x10
	b _080AEFCC
_080AEFAA:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080AEFCA
_080AEFB2:
	cmp r2, #0
	beq _080AEFC2
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080AEFC2:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080AEFB2
_080AEFCA:
	adds r5, r2, #0
_080AEFCC:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080AEFDC
_080AEFD6:
	adds r1, #0x10
	cmp r1, r2
	bne _080AEFD6
_080AEFDC:
	cmp r0, #0
	beq _080AEFE4
	bl sub_80D0260
_080AEFE4:
	ldr r0, [sp, #0xd8]
	add r0, r8
	ldr r7, [sp, #0xd8]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080AEFF0:
	mov r0, sb
	bl sub_8008910
	adds r4, r0, #0
	movs r2, #0x9e
	lsls r2, r2, #3
	add r2, sb
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080AF00A
	ldrh r3, [r2, #4]
_080AF00A:
	adds r6, r4, #0
	add r0, sp, #0x14
	ldr r2, _080AF038 @ =0x05000280
	bl sub_8008F0C
	add r0, sp, #0x14
	mov sl, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080AF03C
	cmp r1, #0
	beq _080AF030
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080AF030:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080AF104
	.align 2, 0
_080AF038: .4byte 0x05000280
_080AF03C:
	str r1, [sp, #0xd4]
	movs r0, #1
	add r1, sp, #0xa0
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0xd4]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x9c
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080AF058
	adds r0, r1, #0
_080AF058:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080AF076
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080AF07A
	mov r0, r8
	bl sub_80D3BC0
	b _080AF07A
_080AF076:
	movs r0, #0
	mov r8, r0
_080AF07A:
	adds r5, r0, #0
	str r5, [sp, #0xd8]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0xd4]
	cmp r2, r7
	beq _080AF0A2
_080AF088:
	cmp r3, #0
	beq _080AF098
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080AF098:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xd4]
	cmp r2, r0
	bne _080AF088
_080AF0A2:
	adds r5, r3, #0
	ldr r1, [sp, #0xa0]
	cmp r1, #1
	bne _080AF0BE
	cmp r5, #0
	beq _080AF0BA
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080AF0BA:
	adds r5, #0x10
	b _080AF0E0
_080AF0BE:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080AF0DE
_080AF0C6:
	cmp r2, #0
	beq _080AF0D6
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080AF0D6:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080AF0C6
_080AF0DE:
	adds r5, r2, #0
_080AF0E0:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080AF0F0
_080AF0EA:
	adds r1, #0x10
	cmp r1, r2
	bne _080AF0EA
_080AF0F0:
	cmp r0, #0
	beq _080AF0F8
	bl sub_80D0260
_080AF0F8:
	ldr r0, [sp, #0xd8]
	add r0, r8
	ldr r7, [sp, #0xd8]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080AF104:
	movs r0, #0x14
	bl sub_80005D4
	movs r1, #0x85
	lsls r1, r1, #3
	add r1, sb
	mov r8, r1
	ldr r1, [r1]
	movs r7, #0x80
	lsls r7, r7, #1
	movs r2, #0
	adds r3, r7, #0
	bl sub_805E824
	adds r4, r0, #0
	movs r6, #0xa0
	lsls r6, r6, #3
	add r6, sb
	ldr r0, [r6]
	cmp r4, r0
	beq _080AF132
	bl sub_8000608
_080AF132:
	str r4, [r6]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r4]
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	strh r0, [r4, #8]
	str r0, [r4, #0xc]
	strb r1, [r4, #0x10]
	strb r1, [r4, #0x11]
	str r0, [r4, #0x14]
	strb r1, [r4, #0x18]
	ldr r5, _080AF258 @ =0x00000504
	add r5, sb
	ldr r0, [r5]
	cmp r4, r0
	beq _080AF162
	bl sub_8000608
_080AF162:
	str r4, [r5]
	ldr r0, [r6]
	strh r7, [r0, #0x10]
	ldr r1, [r5]
	movs r0, #0x8e
	lsls r0, r0, #4
	add r0, sb
	ldrb r0, [r0]
	strh r0, [r1]
	ldr r1, [r5]
	movs r0, #0x40
	strh r0, [r1, #2]
	ldr r4, [r5]
	movs r0, #0x8b
	lsls r0, r0, #4
	add r0, sb
	ldr r1, [r0, #4]
	bl sub_8007D4C
	strh r0, [r4, #6]
	ldr r1, [r5]
	movs r0, #5
	strh r0, [r1, #4]
	ldr r0, [r5]
	movs r1, #1
	strh r1, [r0, #8]
	ldr r0, [r5]
	strb r1, [r0, #0x18]
	movs r0, #0x14
	bl sub_80005D4
	mov r2, r8
	ldr r1, [r2]
	movs r2, #0
	adds r3, r7, #0
	bl sub_805E824
	adds r4, r0, #0
	movs r5, #0xa5
	lsls r5, r5, #3
	add r5, sb
	ldr r0, [r5]
	cmp r4, r0
	beq _080AF1BE
	bl sub_8000608
_080AF1BE:
	str r4, [r5]
	ldr r1, _080AF25C @ =0x0000091A
	adds r0, r4, #0
	bl sub_805E860
	movs r4, #0xa6
	lsls r4, r4, #3
	add r4, sb
	ldr r0, [r5]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x14
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r0, sp, #0x14
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	add r0, sp, #0x14
	ldm r0!, {r3, r5, r6}
	stm r4!, {r3, r5, r6}
	ldm r0!, {r1, r2, r7}
	stm r4!, {r1, r2, r7}
	ldm r0!, {r3, r5}
	stm r4!, {r3, r5}
	mov r0, sb
	bl sub_8008910
	adds r5, r0, #0
	movs r4, #0xa7
	lsls r4, r4, #3
	add r4, sb
	ldr r7, [r4]
	ldr r0, _080AF260 @ =0x000008A8
	add r0, sb
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080AF224
	ldrh r3, [r4, #4]
_080AF224:
	adds r6, r5, #0
	lsls r2, r2, #5
	ldr r0, _080AF264 @ =0x06010000
	adds r2, r2, r0
	add r0, sp, #0x14
	adds r1, r7, #0
	bl sub_8008F0C
	add r1, sp, #0x14
	mov sl, r1
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080AF268
	cmp r1, #0
	beq _080AF250
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080AF250:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080AF32C
	.align 2, 0
_080AF258: .4byte 0x00000504
_080AF25C: .4byte 0x0000091A
_080AF260: .4byte 0x000008A8
_080AF264: .4byte 0x06010000
_080AF268:
	str r1, [sp, #0xd4]
	add r1, sp, #0xa8
	movs r5, #1
	str r5, [r1]
	ldr r0, [r6]
	ldr r7, [sp, #0xd4]
	subs r0, r7, r0
	asrs r4, r0, #4
	add r0, sp, #0xa4
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080AF284
	adds r0, r1, #0
_080AF284:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080AF2A2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080AF2A6
	mov r0, r8
	bl sub_80D3BC0
	b _080AF2A6
_080AF2A2:
	movs r0, #0
	mov r8, r0
_080AF2A6:
	adds r5, r0, #0
	str r5, [sp, #0xd8]
	ldr r2, [r6]
	adds r3, r5, #0
	b _080AF2C4
_080AF2B0:
	cmp r3, #0
	beq _080AF2C0
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080AF2C0:
	adds r2, #0x10
	adds r3, #0x10
_080AF2C4:
	ldr r0, [sp, #0xd4]
	cmp r2, r0
	bne _080AF2B0
	adds r5, r3, #0
	ldr r1, [sp, #0xa8]
	cmp r1, #1
	bne _080AF2E6
	cmp r5, #0
	beq _080AF2E2
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080AF2E2:
	adds r5, #0x10
	b _080AF308
_080AF2E6:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080AF306
_080AF2EE:
	cmp r2, #0
	beq _080AF2FE
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080AF2FE:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080AF2EE
_080AF306:
	adds r5, r2, #0
_080AF308:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080AF318
_080AF312:
	adds r1, #0x10
	cmp r1, r2
	bne _080AF312
_080AF318:
	cmp r0, #0
	beq _080AF320
	bl sub_80D0260
_080AF320:
	ldr r0, [sp, #0xd8]
	add r0, r8
	ldr r7, [sp, #0xd8]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080AF32C:
	mov r0, sb
	bl sub_8008910
	adds r4, r0, #0
	movs r2, #0xa8
	lsls r2, r2, #3
	add r2, sb
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080AF346
	ldrh r3, [r2, #4]
_080AF346:
	adds r6, r4, #0
	add r0, sp, #0x14
	ldr r2, _080AF374 @ =0x050003A0
	bl sub_8008F0C
	add r0, sp, #0x14
	mov sl, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080AF378
	cmp r1, #0
	beq _080AF36C
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080AF36C:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080AF440
	.align 2, 0
_080AF374: .4byte 0x050003A0
_080AF378:
	str r1, [sp, #0xd4]
	movs r0, #1
	add r1, sp, #0xb0
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0xd4]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0xac
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080AF394
	adds r0, r1, #0
_080AF394:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080AF3B2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080AF3B6
	mov r0, r8
	bl sub_80D3BC0
	b _080AF3B6
_080AF3B2:
	movs r0, #0
	mov r8, r0
_080AF3B6:
	adds r5, r0, #0
	str r5, [sp, #0xd8]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0xd4]
	cmp r2, r7
	beq _080AF3DE
_080AF3C4:
	cmp r3, #0
	beq _080AF3D4
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080AF3D4:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xd4]
	cmp r2, r0
	bne _080AF3C4
_080AF3DE:
	adds r5, r3, #0
	ldr r1, [sp, #0xb0]
	cmp r1, #1
	bne _080AF3FA
	cmp r5, #0
	beq _080AF3F6
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080AF3F6:
	adds r5, #0x10
	b _080AF41C
_080AF3FA:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080AF41A
_080AF402:
	cmp r2, #0
	beq _080AF412
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080AF412:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080AF402
_080AF41A:
	adds r5, r2, #0
_080AF41C:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080AF42C
_080AF426:
	adds r1, #0x10
	cmp r1, r2
	bne _080AF426
_080AF42C:
	cmp r0, #0
	beq _080AF434
	bl sub_80D0260
_080AF434:
	ldr r0, [sp, #0xd8]
	add r0, r8
	ldr r7, [sp, #0xd8]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080AF440:
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r4]
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	strh r0, [r4, #8]
	str r0, [r4, #0xc]
	strb r1, [r4, #0x10]
	strb r1, [r4, #0x11]
	str r0, [r4, #0x14]
	strb r1, [r4, #0x18]
	ldr r5, _080AF7E8 @ =0x0000052C
	add r5, sb
	ldr r0, [r5]
	cmp r4, r0
	beq _080AF46E
	bl sub_8000608
_080AF46E:
	str r4, [r5]
	ldr r0, _080AF7EC @ =0x000008A8
	add r0, sb
	ldr r1, [r0, #4]
	bl sub_8007D4C
	strh r0, [r4, #6]
	ldr r1, [r5]
	movs r0, #0xd
	strh r0, [r1, #4]
	ldr r1, [r5]
	movs r2, #1
	movs r0, #1
	strh r0, [r1, #8]
	ldr r0, [r5]
	strb r2, [r0, #0x18]
	ldr r1, [r5]
	movs r0, #0x40
	strh r0, [r1, #2]
	add r1, sp, #0x14
	ldr r0, _080AF7F0 @ =gUnknown_0810752C
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r5, r6}
	stm r1!, {r5, r6}
	movs r7, #0
	mov sl, r7
	movs r0, #0
	mov r8, r0
	movs r6, #0
	movs r5, #0xdc
	lsls r5, r5, #3
	add r5, sb
	ldr r7, _080AF7EC @ =0x000008A8
	add r7, sb
	mov r1, sp
	adds r1, #0x14
	str r1, [sp, #0xd0]
_080AF4BA:
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	strh r6, [r4]
	strh r6, [r4, #2]
	strh r6, [r4, #4]
	strh r6, [r4, #6]
	strh r6, [r4, #8]
	str r6, [r4, #0xc]
	mov r2, r8
	strb r2, [r4, #0x10]
	strb r2, [r4, #0x11]
	str r6, [r4, #0x14]
	strb r2, [r4, #0x18]
	ldr r0, [r5]
	cmp r4, r0
	beq _080AF4E2
	bl sub_8000608
_080AF4E2:
	str r4, [r5]
	ldr r1, [r7, #4]
	adds r0, r7, #0
	bl sub_8007D4C
	strh r0, [r4, #6]
	ldr r1, [r5]
	movs r0, #0xd
	strh r0, [r1, #4]
	ldr r1, [r5]
	movs r0, #1
	strh r0, [r1, #8]
	ldr r0, [r5]
	movs r3, #1
	strb r3, [r0, #0x18]
	ldm r5!, {r1}
	ldr r4, [sp, #0xd0]
	ldm r4!, {r0}
	str r4, [sp, #0xd0]
	strh r0, [r1]
	movs r0, #1
	add sl, r0
	mov r1, sl
	cmp r1, #4
	ble _080AF4BA
	ldr r0, [sp, #0xb8]
	ldr r1, _080AF7F4 @ =gUnknown_08107540
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldm r1!, {r5, r6, r7}
	stm r0!, {r5, r6, r7}
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
	movs r5, #0
	mov sl, r5
	mov r6, sb
	str r6, [sp, #0xcc]
	movs r7, #0xaa
	lsls r7, r7, #3
	add r7, sb
	mov r8, r7
_080AF538:
	movs r0, #0x14
	bl sub_80005D4
	ldr r1, _080AF7F8 @ =0x0000042C
	add r1, sb
	ldr r1, [r1]
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	adds r4, r0, #0
	mov r0, sl
	lsls r6, r0, #2
	mov r1, r8
	ldr r0, [r1]
	cmp r4, r0
	beq _080AF560
	bl sub_8000608
_080AF560:
	mov r2, r8
	str r4, [r2]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r3, #0
	strh r3, [r4]
	strh r3, [r4, #2]
	strh r3, [r4, #4]
	strh r3, [r4, #6]
	strh r3, [r4, #8]
	movs r5, #0
	str r5, [r4, #0xc]
	movs r7, #0
	strb r7, [r4, #0x10]
	movs r0, #0
	strb r0, [r4, #0x11]
	str r5, [r4, #0x14]
	strb r0, [r4, #0x18]
	mov r1, sb
	adds r5, r6, r1
	ldr r7, _080AF7FC @ =0x00000564
	adds r5, r5, r7
	ldr r0, [r5]
	cmp r4, r0
	beq _080AF59A
	bl sub_8000608
_080AF59A:
	str r4, [r5]
	ldr r2, [sp, #0xcc]
	adds r0, r2, r7
	ldr r2, [r0]
	mov r3, sl
	lsls r1, r3, #3
	ldr r4, [sp, #0xb8]
	adds r0, r4, r1
	ldr r0, [r0]
	strh r0, [r2]
	mov r5, sb
	adds r0, r6, r5
	adds r0, r0, r7
	ldr r2, [r0]
	ldr r0, [sp, #0xbc]
	adds r1, r0, r1
	ldr r0, [r1]
	strh r0, [r2, #2]
	adds r0, r6, r5
	adds r0, r0, r7
	ldr r4, [r0]
	ldr r0, _080AF800 @ =0x000008B8
	add r0, sb
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r0, r0, r6
	strh r0, [r4, #6]
	adds r0, r6, r5
	adds r0, r0, r7
	ldr r1, [r0]
	movs r0, #9
	strh r0, [r1, #4]
	adds r0, r6, r5
	adds r0, r0, r7
	ldr r1, [r0]
	movs r0, #1
	strh r0, [r1, #8]
	adds r0, r6, r5
	adds r0, r0, r7
	ldr r0, [r0]
	movs r1, #1
	strb r1, [r0, #0x18]
	ldr r2, [sp, #0xcc]
	adds r2, #4
	str r2, [sp, #0xcc]
	movs r3, #4
	add r8, r3
	movs r4, #1
	add sl, r4
	mov r5, sl
	cmp r5, #4
	ble _080AF538
	movs r6, #0
	mov sl, r6
	mov r7, sb
	str r7, [sp, #0xc8]
	movs r0, #0xc3
	lsls r0, r0, #3
	add r0, sb
	mov r8, r0
_080AF614:
	movs r0, #0x14
	bl sub_80005D4
	movs r1, #0x85
	lsls r1, r1, #3
	add r1, sb
	ldr r1, [r1]
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	adds r4, r0, #0
	mov r1, sl
	lsls r6, r1, #2
	mov r2, r8
	ldr r0, [r2]
	cmp r4, r0
	beq _080AF63E
	bl sub_8000608
_080AF63E:
	mov r3, r8
	str r4, [r3]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r0, #0
	strh r0, [r4]
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	strh r0, [r4, #8]
	str r0, [r4, #0xc]
	movs r5, #0
	strb r5, [r4, #0x10]
	strb r5, [r4, #0x11]
	str r0, [r4, #0x14]
	strb r5, [r4, #0x18]
	mov r7, sb
	adds r5, r6, r7
	ldr r7, _080AF804 @ =0x0000062C
	adds r5, r5, r7
	ldr r0, [r5]
	cmp r4, r0
	beq _080AF674
	bl sub_8000608
_080AF674:
	str r4, [r5]
	ldr r1, [sp, #0xc8]
	movs r2, #0xc3
	lsls r2, r2, #3
	adds r0, r1, r2
	ldr r0, [r0]
	movs r3, #0x80
	lsls r3, r3, #1
	strh r3, [r0, #0x10]
	mov r4, sb
	adds r0, r6, r4
	adds r0, r0, r7
	ldr r1, [r0]
	mov r0, sp
	adds r0, r0, r6
	adds r0, #0x14
	ldr r0, [r0]
	strh r0, [r1]
	adds r0, r6, r4
	adds r0, r0, r7
	ldr r1, [r0]
	ldr r0, _080AF808 @ =0x000008E1
	add r0, sb
	add r0, sl
	ldrb r0, [r0]
	strh r0, [r1, #2]
	adds r0, r6, r4
	adds r0, r0, r7
	ldr r4, [r0]
	movs r0, #0x8c
	lsls r0, r0, #4
	add r0, sb
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r0, r0, r6
	strh r0, [r4, #6]
	mov r5, sb
	adds r0, r6, r5
	adds r0, r0, r7
	ldr r1, [r0]
	movs r0, #0xa
	strh r0, [r1, #4]
	adds r0, r6, r5
	adds r0, r0, r7
	ldr r1, [r0]
	movs r0, #1
	strh r0, [r1, #8]
	adds r0, r6, r5
	adds r0, r0, r7
	ldr r0, [r0]
	movs r6, #1
	strb r6, [r0, #0x18]
	ldr r7, [sp, #0xc8]
	adds r7, #4
	str r7, [sp, #0xc8]
	movs r0, #4
	add r8, r0
	movs r1, #1
	add sl, r1
	mov r2, sl
	cmp r2, #4
	ble _080AF614
	movs r3, #0
	mov sl, r3
	mov r4, sb
	str r4, [sp, #0xc4]
	ldr r5, _080AF80C @ =0x000006F4
	add r5, sb
	mov r8, r5
_080AF700:
	movs r0, #0x14
	bl sub_80005D4
	movs r1, #0x86
	lsls r1, r1, #3
	add r1, sb
	ldr r1, [r1]
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	adds r4, r0, #0
	mov r7, sl
	lsls r6, r7, #2
	mov r1, r8
	ldr r0, [r1]
	cmp r4, r0
	beq _080AF72A
	bl sub_8000608
_080AF72A:
	mov r2, r8
	str r4, [r2]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r3, #0
	strh r3, [r4]
	strh r3, [r4, #2]
	strh r3, [r4, #4]
	strh r3, [r4, #6]
	strh r3, [r4, #8]
	movs r5, #0
	str r5, [r4, #0xc]
	movs r7, #0
	strb r7, [r4, #0x10]
	movs r0, #0
	strb r0, [r4, #0x11]
	str r5, [r4, #0x14]
	strb r0, [r4, #0x18]
	mov r1, sb
	adds r5, r6, r1
	movs r7, #0xe1
	lsls r7, r7, #3
	adds r5, r5, r7
	ldr r0, [r5]
	cmp r4, r0
	beq _080AF766
	bl sub_8000608
_080AF766:
	str r4, [r5]
	ldr r2, [sp, #0xc4]
	adds r0, r2, r7
	ldr r1, [r0]
	mov r0, sp
	adds r0, r0, r6
	adds r0, #0x14
	ldr r0, [r0]
	subs r0, #0x11
	strh r0, [r1]
	mov r3, sb
	adds r0, r6, r3
	adds r0, r0, r7
	ldr r1, [r0]
	ldr r0, _080AF808 @ =0x000008E1
	add r0, sb
	add r0, sl
	ldrb r0, [r0]
	subs r0, #0x18
	strh r0, [r1, #2]
	adds r0, r6, r3
	adds r0, r0, r7
	ldr r4, [r0]
	ldr r0, _080AF810 @ =0x000008C8
	add r0, sb
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r0, r0, r6
	strh r0, [r4, #6]
	mov r4, sb
	adds r0, r6, r4
	adds r0, r0, r7
	ldr r1, [r0]
	movs r0, #0xb
	strh r0, [r1, #4]
	adds r0, r6, r4
	adds r0, r0, r7
	ldr r1, [r0]
	movs r0, #1
	strh r0, [r1, #8]
	adds r0, r6, r4
	adds r0, r0, r7
	ldr r0, [r0]
	movs r5, #1
	strb r5, [r0, #0x18]
	ldr r6, [sp, #0xc4]
	adds r6, #4
	str r6, [sp, #0xc4]
	movs r7, #4
	add r8, r7
	movs r0, #1
	add sl, r0
	mov r1, sl
	cmp r1, #4
	ble _080AF700
	add sp, #0xdc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080AF7E8: .4byte 0x0000052C
_080AF7EC: .4byte 0x000008A8
_080AF7F0: .4byte gUnknown_0810752C
_080AF7F4: .4byte gUnknown_08107540
_080AF7F8: .4byte 0x0000042C
_080AF7FC: .4byte 0x00000564
_080AF800: .4byte 0x000008B8
_080AF804: .4byte 0x0000062C
_080AF808: .4byte 0x000008E1
_080AF80C: .4byte 0x000006F4
_080AF810: .4byte 0x000008C8

	thumb_func_start sub_80AF814
sub_80AF814: @ 0x080AF814
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x98
	adds r7, r0, #0
	ldr r1, _080AFA28 @ =0x0000092A
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080AF8AA
	movs r2, #0x89
	lsls r2, r2, #3
	adds r4, r7, r2
	movs r3, #2
	str r3, [sp, #0x60]
_080AF836:
	adds r0, r7, #0
	bl sub_8008920
	adds r3, r0, #0
	ldrb r2, [r3]
	cmp r2, #0x7f
	bhi _080AF856
	lsls r1, r2, #3
	adds r1, #4
	adds r1, r3, r1
	ldr r0, [r4]
	str r0, [r1]
	ldrh r0, [r4, #4]
	strh r0, [r1, #4]
	adds r0, r2, #1
	strb r0, [r3]
_080AF856:
	adds r4, #8
	ldr r5, [sp, #0x60]
	subs r5, #1
	str r5, [sp, #0x60]
	cmp r5, #0
	bge _080AF836
	adds r0, r7, #0
	bl sub_8008920
	adds r4, r0, #0
	movs r6, #0x8d
	lsls r6, r6, #3
	adds r0, r7, r6
	ldr r1, [r0]
	movs r2, #0
	cmp r1, #0
	beq _080AF87A
	ldrh r2, [r0, #4]
_080AF87A:
	ldr r3, _080AFA2C @ =0x00000464
	adds r0, r7, r3
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
	adds r0, r7, #0
	bl sub_8008920
	adds r4, r0, #0
	movs r5, #0x92
	lsls r5, r5, #3
	adds r0, r7, r5
	ldr r1, [r0]
	movs r2, #0
	cmp r1, #0
	beq _080AF89E
	ldrh r2, [r0, #4]
_080AF89E:
	ldr r6, _080AFA30 @ =0x0000048C
	adds r0, r7, r6
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
_080AF8AA:
	adds r0, r7, #0
	bl sub_8008920
	adds r3, r0, #0
	movs r0, #0x88
	lsls r0, r0, #3
	adds r1, r7, r0
	ldrb r2, [r3]
	cmp r2, #0x7f
	bhi _080AF8D4
	lsls r0, r2, #3
	adds r0, #4
	adds r0, r3, r0
	ldr r1, [r1]
	str r1, [r0]
	ldr r4, _080AFA34 @ =0x00000444
	adds r1, r7, r4
	ldrh r1, [r1]
	strh r1, [r0, #4]
	adds r0, r2, #1
	strb r0, [r3]
_080AF8D4:
	ldr r5, _080AFA38 @ =0x0000083C
	adds r0, r7, r5
	ldr r0, [r0]
	cmp r0, #1
	beq _080AF8E8
	ldr r6, _080AFA3C @ =0x00000838
	adds r0, r7, r6
	ldr r0, [r0]
	cmp r0, #2
	bne _080AF90C
_080AF8E8:
	adds r0, r7, #0
	bl sub_8008920
	adds r4, r0, #0
	movs r1, #0x97
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r1, [r0]
	movs r2, #0
	cmp r1, #0
	beq _080AF900
	ldrh r2, [r0, #4]
_080AF900:
	ldr r3, _080AFA40 @ =0x000004B4
	adds r0, r7, r3
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
_080AF90C:
	adds r0, r7, #0
	bl sub_8008920
	adds r4, r0, #0
	movs r5, #0x9c
	lsls r5, r5, #3
	adds r3, r7, r5
	ldr r0, [r3]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080AF926
	ldrh r2, [r3, #4]
_080AF926:
	ldr r6, _080AFA44 @ =0x000004DC
	adds r0, r7, r6
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
	ldr r1, _080AFA48 @ =0x00000504
	adds r0, r7, r1
	ldr r1, [r0]
	movs r2, #0x8e
	lsls r2, r2, #4
	adds r0, r7, r2
	ldrb r0, [r0]
	strh r0, [r1]
	ldr r3, _080AFA3C @ =0x00000838
	adds r0, r7, r3
	ldr r0, [r0]
	cmp r0, #3
	bne _080AF956
	ldr r4, _080AFA38 @ =0x0000083C
	adds r0, r7, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _080AF97E
_080AF956:
	ldr r6, _080AFA4C @ =0x00000929
	adds r5, r7, r6
	ldrb r0, [r5]
	cmp r0, #0
	beq _080AF97E
	movs r1, #0xa0
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r4, [r0]
	adds r0, r7, #0
	bl sub_80B3990
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_805E860
	movs r0, #0
	strb r0, [r5]
_080AF97E:
	movs r2, #0xa0
	lsls r2, r2, #3
	adds r5, r7, r2
	ldr r0, [r5]
	bl sub_805E8F0
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080AF992
	b _080AFC3E
_080AF992:
	movs r3, #0xa1
	lsls r3, r3, #3
	adds r4, r7, r3
	ldr r0, [r5]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sp
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	mov r0, sp
	mov r1, sp
	movs r2, #0x20
	bl sub_80D3994
	mov r0, sp
	ldm r0!, {r1, r5, r6}
	stm r4!, {r1, r5, r6}
	ldm r0!, {r2, r3, r5}
	stm r4!, {r2, r3, r5}
	ldm r0!, {r1, r6}
	stm r4!, {r1, r6}
	adds r0, r7, #0
	bl sub_8008910
	adds r5, r0, #0
	movs r2, #0xa2
	lsls r2, r2, #3
	adds r4, r7, r2
	ldr r3, [r4]
	mov r8, r3
	movs r6, #0x8b
	lsls r6, r6, #4
	adds r0, r7, r6
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080AF9F2
	ldrh r3, [r4, #4]
_080AF9F2:
	str r5, [sp, #0x90]
	lsls r2, r2, #5
	ldr r0, _080AFA50 @ =0x06010000
	adds r2, r2, r0
	mov r0, sp
	mov r1, r8
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080AFA54
	cmp r1, #0
	beq _080AFA1C
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080AFA1C:
	ldr r5, [sp, #0x90]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080AFB22
	.align 2, 0
_080AFA28: .4byte 0x0000092A
_080AFA2C: .4byte 0x00000464
_080AFA30: .4byte 0x0000048C
_080AFA34: .4byte 0x00000444
_080AFA38: .4byte 0x0000083C
_080AFA3C: .4byte 0x00000838
_080AFA40: .4byte 0x000004B4
_080AFA44: .4byte 0x000004DC
_080AFA48: .4byte 0x00000504
_080AFA4C: .4byte 0x00000929
_080AFA50: .4byte 0x06010000
_080AFA54:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x24]
	ldr r6, [sp, #0x90]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x20]
	add r1, sp, #0x24
	add r0, sp, #0x20
	cmp r4, #1
	bhs _080AFA6E
	adds r0, r1, #0
_080AFA6E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080AFA8C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080AFA90
	mov r0, sb
	bl sub_80D3BC0
	b _080AFA90
_080AFA8C:
	movs r0, #0
	mov sb, r0
_080AFA90:
	adds r5, r0, #0
	str r5, [sp, #0x94]
	ldr r0, [sp, #0x90]
	ldr r2, [r0]
	adds r3, r5, #0
	cmp r2, r8
	beq _080AFAB6
_080AFA9E:
	cmp r3, #0
	beq _080AFAAE
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080AFAAE:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _080AFA9E
_080AFAB6:
	adds r5, r3, #0
	ldr r0, [sp, #0x24]
	cmp r0, #1
	bne _080AFAD2
	cmp r5, #0
	beq _080AFACE
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080AFACE:
	adds r5, #0x10
	b _080AFAFA
_080AFAD2:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _080AFAF8
_080AFADA:
	cmp r2, #0
	beq _080AFAEA
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r5, r6}
	stm r0!, {r3, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080AFAEA:
	movs r4, #1
	rsbs r4, r4, #0
	add r8, r4
	adds r2, #0x10
	mov r5, r8
	cmp r5, #0
	bne _080AFADA
_080AFAF8:
	adds r5, r2, #0
_080AFAFA:
	ldr r6, [sp, #0x90]
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080AFB0C
_080AFB06:
	adds r1, #0x10
	cmp r1, r2
	bne _080AFB06
_080AFB0C:
	cmp r0, #0
	beq _080AFB14
	bl sub_80D0260
_080AFB14:
	ldr r0, [sp, #0x94]
	add r0, sb
	ldr r1, [sp, #0x94]
	ldr r2, [sp, #0x90]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_080AFB22:
	adds r0, r7, #0
	bl sub_8008910
	adds r4, r0, #0
	movs r3, #0xa3
	lsls r3, r3, #3
	adds r2, r7, r3
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080AFB3C
	ldrh r3, [r2, #4]
_080AFB3C:
	str r4, [sp, #0x90]
	mov r0, sp
	ldr r2, _080AFB6C @ =0x050002A0
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _080AFB70
	cmp r1, #0
	beq _080AFB60
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080AFB60:
	ldr r1, [sp, #0x90]
	ldr r0, [r1, #4]
	adds r0, #0x10
	str r0, [r1, #4]
	b _080AFC3E
	.align 2, 0
_080AFB6C: .4byte 0x050002A0
_080AFB70:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x2c]
	ldr r2, [sp, #0x90]
	ldr r0, [r2]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x28]
	add r1, sp, #0x2c
	add r0, sp, #0x28
	cmp r4, #1
	bhs _080AFB8A
	adds r0, r1, #0
_080AFB8A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080AFBA8
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080AFBAC
	mov r0, sb
	bl sub_80D3BC0
	b _080AFBAC
_080AFBA8:
	movs r0, #0
	mov sb, r0
_080AFBAC:
	adds r5, r0, #0
	str r5, [sp, #0x94]
	ldr r3, [sp, #0x90]
	ldr r2, [r3]
	adds r3, r5, #0
	cmp r2, r8
	beq _080AFBD2
_080AFBBA:
	cmp r3, #0
	beq _080AFBCA
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080AFBCA:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _080AFBBA
_080AFBD2:
	adds r5, r3, #0
	ldr r0, [sp, #0x2c]
	cmp r0, #1
	bne _080AFBEE
	cmp r5, #0
	beq _080AFBEA
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080AFBEA:
	adds r5, #0x10
	b _080AFC16
_080AFBEE:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _080AFC14
_080AFBF6:
	cmp r2, #0
	beq _080AFC06
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r5, r6}
	stm r0!, {r3, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080AFC06:
	movs r4, #1
	rsbs r4, r4, #0
	add r8, r4
	adds r2, #0x10
	mov r5, r8
	cmp r5, #0
	bne _080AFBF6
_080AFC14:
	adds r5, r2, #0
_080AFC16:
	ldr r6, [sp, #0x90]
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080AFC28
_080AFC22:
	adds r1, #0x10
	cmp r1, r2
	bne _080AFC22
_080AFC28:
	cmp r0, #0
	beq _080AFC30
	bl sub_80D0260
_080AFC30:
	ldr r0, [sp, #0x94]
	add r0, sb
	ldr r1, [sp, #0x94]
	ldr r2, [sp, #0x90]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_080AFC3E:
	adds r0, r7, #0
	bl sub_8008920
	adds r4, r0, #0
	movs r5, #0xa1
	lsls r5, r5, #3
	adds r3, r7, r5
	ldr r0, [r3]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080AFC58
	ldrh r2, [r3, #4]
_080AFC58:
	ldr r6, _080AFD68 @ =0x00000504
	adds r0, r7, r6
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
	movs r0, #0
	str r0, [sp, #0x60]
	movs r1, #0xe1
	lsls r1, r1, #3
	adds r1, r7, r1
	str r1, [sp, #0x80]
	movs r2, #0
	str r2, [sp, #0x84]
	movs r3, #0
	str r3, [sp, #0x88]
	ldr r4, _080AFD6C @ =0x0000071C
	adds r4, r7, r4
	str r4, [sp, #0x8c]
_080AFC7E:
	ldr r5, [sp, #0x80]
	ldr r1, [r5]
	ldr r6, _080AFD70 @ =0x000008E1
	adds r0, r7, r6
	ldr r2, [sp, #0x60]
	adds r0, r0, r2
	ldrb r0, [r0]
	subs r0, #0x18
	strh r0, [r1, #2]
	ldr r3, _080AFD74 @ =0x0000085C
	adds r0, r7, r3
	ldr r4, [sp, #0x84]
	adds r0, r0, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _080AFCA0
	b _080AFF9C
_080AFCA0:
	ldr r5, _080AFD78 @ =0x0000091F
	adds r0, r7, r5
	adds r6, r0, r2
	ldrb r0, [r6]
	adds r5, r4, r7
	cmp r0, #0
	beq _080AFCCC
	ldr r1, _080AFD7C @ =0x000006F4
	adds r0, r5, r1
	ldr r4, [r0]
	adds r0, r7, #0
	ldr r1, [sp, #0x60]
	bl sub_80B39F4
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_805E860
	movs r2, #0
	strb r2, [r6]
_080AFCCC:
	ldr r3, _080AFD7C @ =0x000006F4
	adds r4, r5, r3
	ldr r0, [r4]
	bl sub_805E8F0
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080AFCDE
	b _080AFF70
_080AFCDE:
	ldr r0, [r4]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sp
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	mov r0, sp
	mov r1, sp
	movs r2, #0x20
	bl sub_80D3994
	ldr r1, [sp, #0x8c]
	mov r0, sp
	ldm r0!, {r4, r5, r6}
	stm r1!, {r4, r5, r6}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r5, r6}
	stm r1!, {r5, r6}
	adds r0, r7, #0
	bl sub_8008910
	adds r4, r0, #0
	ldr r0, [sp, #0x8c]
	ldr r5, [r0, #8]
	ldr r1, _080AFD80 @ =0x000008C8
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl sub_8007D4C
	ldr r3, [sp, #0x84]
	adds r2, r3, r0
	ldr r6, [sp, #0x8c]
	ldr r0, [r6, #8]
	movs r3, #0
	cmp r0, #0
	beq _080AFD36
	ldrh r3, [r6, #0xc]
_080AFD36:
	adds r6, r4, #0
	lsls r2, r2, #5
	ldr r0, _080AFD84 @ =0x06010000
	adds r2, r2, r0
	mov r0, sp
	adds r1, r5, #0
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080AFD88
	cmp r1, #0
	beq _080AFD60
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080AFD60:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080AFE52
	.align 2, 0
_080AFD68: .4byte 0x00000504
_080AFD6C: .4byte 0x0000071C
_080AFD70: .4byte 0x000008E1
_080AFD74: .4byte 0x0000085C
_080AFD78: .4byte 0x0000091F
_080AFD7C: .4byte 0x000006F4
_080AFD80: .4byte 0x000008C8
_080AFD84: .4byte 0x06010000
_080AFD88:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x34]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x30]
	add r1, sp, #0x34
	add r0, sp, #0x30
	cmp r4, #1
	bhs _080AFDA0
	adds r0, r1, #0
_080AFDA0:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080AFDBE
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080AFDC2
	mov r0, sb
	bl sub_80D3BC0
	b _080AFDC2
_080AFDBE:
	movs r0, #0
	mov sb, r0
_080AFDC2:
	adds r5, r0, #0
	str r5, [sp, #0x94]
	ldr r2, [r6]
	mov ip, r5
	cmp r2, r8
	beq _080AFDEA
_080AFDCE:
	mov r5, ip
	cmp r5, #0
	beq _080AFDE0
	mov r0, ip
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080AFDE0:
	adds r2, #0x10
	movs r0, #0x10
	add ip, r0
	cmp r2, r8
	bne _080AFDCE
_080AFDEA:
	mov r5, ip
	ldr r0, [sp, #0x34]
	cmp r0, #1
	bne _080AFE06
	cmp r5, #0
	beq _080AFE02
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080AFE02:
	adds r5, #0x10
	b _080AFE2E
_080AFE06:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _080AFE2C
_080AFE0E:
	cmp r2, #0
	beq _080AFE1E
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080AFE1E:
	movs r5, #1
	rsbs r5, r5, #0
	add r8, r5
	adds r2, #0x10
	mov r0, r8
	cmp r0, #0
	bne _080AFE0E
_080AFE2C:
	adds r5, r2, #0
_080AFE2E:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080AFE3E
_080AFE38:
	adds r1, #0x10
	cmp r1, r2
	bne _080AFE38
_080AFE3E:
	cmp r0, #0
	beq _080AFE46
	bl sub_80D0260
_080AFE46:
	ldr r0, [sp, #0x94]
	add r0, sb
	ldr r1, [sp, #0x94]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080AFE52:
	adds r0, r7, #0
	bl sub_8008910
	adds r5, r0, #0
	ldr r2, [sp, #0x88]
	adds r0, r2, r7
	ldr r1, _080AFEA0 @ =0x0000072C
	adds r0, r0, r1
	ldr r4, [r0]
	adds r2, r2, r7
	adds r2, r2, r1
	ldr r0, [r2]
	movs r3, #0
	cmp r0, #0
	beq _080AFE72
	ldrh r3, [r2, #4]
_080AFE72:
	adds r6, r5, #0
	mov r0, sp
	adds r1, r4, #0
	ldr r2, _080AFEA4 @ =0x05000360
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080AFEA8
	cmp r1, #0
	beq _080AFE98
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080AFE98:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080AFF70
	.align 2, 0
_080AFEA0: .4byte 0x0000072C
_080AFEA4: .4byte 0x05000360
_080AFEA8:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x3c]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x38]
	add r1, sp, #0x3c
	add r0, sp, #0x38
	cmp r4, #1
	bhs _080AFEC0
	adds r0, r1, #0
_080AFEC0:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080AFEDE
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080AFEE2
	mov r0, sb
	bl sub_80D3BC0
	b _080AFEE2
_080AFEDE:
	movs r0, #0
	mov sb, r0
_080AFEE2:
	adds r5, r0, #0
	str r5, [sp, #0x94]
	ldr r2, [r6]
	mov ip, r5
	cmp r2, r8
	beq _080AFF08
_080AFEEE:
	mov r0, ip
	cmp r0, #0
	beq _080AFEFE
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080AFEFE:
	adds r2, #0x10
	movs r0, #0x10
	add ip, r0
	cmp r2, r8
	bne _080AFEEE
_080AFF08:
	mov r5, ip
	ldr r0, [sp, #0x3c]
	cmp r0, #1
	bne _080AFF24
	cmp r5, #0
	beq _080AFF20
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080AFF20:
	adds r5, #0x10
	b _080AFF4C
_080AFF24:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _080AFF4A
_080AFF2C:
	cmp r2, #0
	beq _080AFF3C
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080AFF3C:
	movs r5, #1
	rsbs r5, r5, #0
	add r8, r5
	adds r2, #0x10
	mov r0, r8
	cmp r0, #0
	bne _080AFF2C
_080AFF4A:
	adds r5, r2, #0
_080AFF4C:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080AFF5C
_080AFF56:
	adds r1, #0x10
	cmp r1, r2
	bne _080AFF56
_080AFF5C:
	cmp r0, #0
	beq _080AFF64
	bl sub_80D0260
_080AFF64:
	ldr r0, [sp, #0x94]
	add r0, sb
	ldr r1, [sp, #0x94]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080AFF70:
	adds r0, r7, #0
	bl sub_8008920
	adds r5, r0, #0
	ldr r2, [sp, #0x88]
	adds r0, r2, r7
	ldr r1, _080B00C8 @ =0x0000071C
	adds r0, r0, r1
	ldr r4, [r0]
	adds r3, r2, r7
	adds r3, r3, r1
	ldr r0, [r3]
	movs r2, #0
	cmp r0, #0
	beq _080AFF90
	ldrh r2, [r3, #4]
_080AFF90:
	ldr r6, [sp, #0x80]
	ldr r3, [r6]
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_805E99C
_080AFF9C:
	ldr r0, [sp, #0x80]
	adds r0, #4
	str r0, [sp, #0x80]
	ldr r1, [sp, #0x84]
	adds r1, #4
	str r1, [sp, #0x84]
	ldr r2, [sp, #0x88]
	adds r2, #0x20
	str r2, [sp, #0x88]
	ldr r3, [sp, #0x8c]
	adds r3, #0x20
	str r3, [sp, #0x8c]
	ldr r4, [sp, #0x60]
	adds r4, #1
	str r4, [sp, #0x60]
	cmp r4, #4
	bgt _080AFFC0
	b _080AFC7E
_080AFFC0:
	movs r5, #0
	str r5, [sp, #0x60]
	ldr r6, _080B00CC @ =0x0000062C
	adds r6, r7, r6
	str r6, [sp, #0x70]
	movs r0, #0
	str r0, [sp, #0x74]
	movs r1, #0
	str r1, [sp, #0x78]
	movs r2, #0xc8
	lsls r2, r2, #3
	adds r2, r7, r2
	str r2, [sp, #0x7c]
_080AFFDA:
	ldr r3, [sp, #0x70]
	ldr r1, [r3]
	ldr r4, _080B00D0 @ =0x000008E1
	adds r0, r7, r4
	ldr r5, [sp, #0x60]
	adds r0, r0, r5
	ldrb r0, [r0]
	strh r0, [r1, #2]
	ldr r6, _080B00D4 @ =0x00000848
	adds r0, r7, r6
	ldr r1, [sp, #0x74]
	adds r0, r0, r1
	ldr r0, [r0]
	subs r0, #5
	cmp r0, #1
	bhi _080AFFFC
	b _080B02F6
_080AFFFC:
	ldr r2, _080B00D8 @ =0x0000091A
	adds r0, r7, r2
	adds r6, r0, r5
	ldrb r0, [r6]
	adds r5, r1, r7
	cmp r0, #0
	beq _080B002A
	movs r3, #0xc3
	lsls r3, r3, #3
	adds r0, r5, r3
	ldr r4, [r0]
	adds r0, r7, #0
	ldr r1, [sp, #0x60]
	bl sub_80B39D8
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_805E860
	movs r4, #0
	strb r4, [r6]
_080B002A:
	movs r6, #0xc3
	lsls r6, r6, #3
	adds r4, r5, r6
	ldr r0, [r4]
	bl sub_805E8F0
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080B003E
	b _080B02C8
_080B003E:
	ldr r0, [r4]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sp
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	mov r0, sp
	mov r1, sp
	movs r2, #0x20
	bl sub_80D3994
	ldr r1, [sp, #0x7c]
	mov r0, sp
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r5, r6}
	stm r1!, {r2, r5, r6}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	adds r0, r7, #0
	bl sub_8008910
	adds r4, r0, #0
	ldr r6, [sp, #0x7c]
	ldr r5, [r6, #8]
	movs r1, #0x8c
	lsls r1, r1, #4
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl sub_8007D4C
	ldr r3, [sp, #0x74]
	adds r2, r3, r0
	ldr r0, [r6, #8]
	movs r3, #0
	cmp r0, #0
	beq _080B0096
	ldrh r3, [r6, #0xc]
_080B0096:
	adds r6, r4, #0
	lsls r2, r2, #5
	ldr r4, _080B00DC @ =0x06010000
	adds r2, r2, r4
	mov r0, sp
	adds r1, r5, #0
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B00E0
	cmp r1, #0
	beq _080B00C0
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B00C0:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B01AA
	.align 2, 0
_080B00C8: .4byte 0x0000071C
_080B00CC: .4byte 0x0000062C
_080B00D0: .4byte 0x000008E1
_080B00D4: .4byte 0x00000848
_080B00D8: .4byte 0x0000091A
_080B00DC: .4byte 0x06010000
_080B00E0:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x44]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x40]
	add r1, sp, #0x44
	add r0, sp, #0x40
	cmp r4, #1
	bhs _080B00F8
	adds r0, r1, #0
_080B00F8:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B0116
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080B011A
	mov r0, sb
	bl sub_80D3BC0
	b _080B011A
_080B0116:
	movs r0, #0
	mov sb, r0
_080B011A:
	adds r5, r0, #0
	str r5, [sp, #0x94]
	ldr r2, [r6]
	mov ip, r5
	cmp r2, r8
	beq _080B0142
_080B0126:
	mov r4, ip
	cmp r4, #0
	beq _080B0138
	mov r0, ip
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B0138:
	adds r2, #0x10
	movs r5, #0x10
	add ip, r5
	cmp r2, r8
	bne _080B0126
_080B0142:
	mov r5, ip
	ldr r0, [sp, #0x44]
	cmp r0, #1
	bne _080B015E
	cmp r5, #0
	beq _080B015A
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B015A:
	adds r5, #0x10
	b _080B0186
_080B015E:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _080B0184
_080B0166:
	cmp r2, #0
	beq _080B0176
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B0176:
	movs r5, #1
	rsbs r5, r5, #0
	add r8, r5
	adds r2, #0x10
	mov r0, r8
	cmp r0, #0
	bne _080B0166
_080B0184:
	adds r5, r2, #0
_080B0186:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B0196
_080B0190:
	adds r1, #0x10
	cmp r1, r2
	bne _080B0190
_080B0196:
	cmp r0, #0
	beq _080B019E
	bl sub_80D0260
_080B019E:
	ldr r0, [sp, #0x94]
	add r0, sb
	ldr r1, [sp, #0x94]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B01AA:
	adds r0, r7, #0
	bl sub_8008910
	adds r5, r0, #0
	ldr r2, [sp, #0x78]
	adds r0, r2, r7
	movs r1, #0xca
	lsls r1, r1, #3
	adds r0, r0, r1
	ldr r4, [r0]
	adds r2, r2, r7
	adds r2, r2, r1
	ldr r0, [r2]
	movs r3, #0
	cmp r0, #0
	beq _080B01CC
	ldrh r3, [r2, #4]
_080B01CC:
	adds r6, r5, #0
	mov r0, sp
	adds r1, r4, #0
	ldr r2, _080B01FC @ =0x05000340
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B0200
	cmp r1, #0
	beq _080B01F2
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B01F2:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B02C8
	.align 2, 0
_080B01FC: .4byte 0x05000340
_080B0200:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x4c]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x48]
	add r1, sp, #0x4c
	add r0, sp, #0x48
	cmp r4, #1
	bhs _080B0218
	adds r0, r1, #0
_080B0218:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B0236
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080B023A
	mov r0, sb
	bl sub_80D3BC0
	b _080B023A
_080B0236:
	movs r0, #0
	mov sb, r0
_080B023A:
	adds r5, r0, #0
	str r5, [sp, #0x94]
	ldr r2, [r6]
	mov ip, r5
	cmp r2, r8
	beq _080B0260
_080B0246:
	mov r0, ip
	cmp r0, #0
	beq _080B0256
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B0256:
	adds r2, #0x10
	movs r0, #0x10
	add ip, r0
	cmp r2, r8
	bne _080B0246
_080B0260:
	mov r5, ip
	ldr r0, [sp, #0x4c]
	cmp r0, #1
	bne _080B027C
	cmp r5, #0
	beq _080B0278
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B0278:
	adds r5, #0x10
	b _080B02A4
_080B027C:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _080B02A2
_080B0284:
	cmp r2, #0
	beq _080B0294
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B0294:
	movs r5, #1
	rsbs r5, r5, #0
	add r8, r5
	adds r2, #0x10
	mov r0, r8
	cmp r0, #0
	bne _080B0284
_080B02A2:
	adds r5, r2, #0
_080B02A4:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B02B4
_080B02AE:
	adds r1, #0x10
	cmp r1, r2
	bne _080B02AE
_080B02B4:
	cmp r0, #0
	beq _080B02BC
	bl sub_80D0260
_080B02BC:
	ldr r0, [sp, #0x94]
	add r0, sb
	ldr r1, [sp, #0x94]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B02C8:
	adds r0, r7, #0
	bl sub_8008920
	adds r5, r0, #0
	ldr r2, [sp, #0x78]
	adds r0, r2, r7
	movs r1, #0xc8
	lsls r1, r1, #3
	adds r0, r0, r1
	ldr r4, [r0]
	adds r3, r2, r7
	adds r3, r3, r1
	ldr r0, [r3]
	movs r2, #0
	cmp r0, #0
	beq _080B02EA
	ldrh r2, [r3, #4]
_080B02EA:
	ldr r6, [sp, #0x70]
	ldr r3, [r6]
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_805E99C
_080B02F6:
	ldr r0, [sp, #0x70]
	adds r0, #4
	str r0, [sp, #0x70]
	ldr r1, [sp, #0x74]
	adds r1, #4
	str r1, [sp, #0x74]
	ldr r2, [sp, #0x78]
	adds r2, #0x20
	str r2, [sp, #0x78]
	ldr r3, [sp, #0x7c]
	adds r3, #0x20
	str r3, [sp, #0x7c]
	ldr r4, [sp, #0x60]
	adds r4, #1
	str r4, [sp, #0x60]
	cmp r4, #4
	bgt _080B031A
	b _080AFFDA
_080B031A:
	ldr r6, _080B0480 @ =0x0000052C
	adds r5, r7, r6
	ldr r1, [r5]
	movs r2, #0x8e
	lsls r2, r2, #4
	adds r0, r7, r2
	ldrb r0, [r0]
	strh r0, [r1]
	adds r0, r7, #0
	bl sub_8008920
	adds r4, r0, #0
	adds r6, #4
	adds r3, r7, r6
	ldr r0, [r3]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080B0342
	ldrh r2, [r3, #4]
_080B0342:
	ldr r3, [r5]
	adds r0, r4, #0
	bl sub_805E99C
	movs r0, #0
	str r0, [sp, #0x60]
	movs r1, #0xa6
	lsls r1, r1, #3
	adds r6, r7, r1
	movs r2, #0xdc
	lsls r2, r2, #3
	adds r5, r7, r2
_080B035A:
	ldr r1, [r5]
	ldr r3, _080B0484 @ =0x000008E1
	adds r0, r7, r3
	ldr r4, [sp, #0x60]
	adds r0, r0, r4
	ldrb r0, [r0]
	strh r0, [r1, #2]
	adds r0, r7, #0
	bl sub_8008920
	adds r4, r0, #0
	ldr r0, [r6]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080B037C
	ldrh r2, [r6, #4]
_080B037C:
	ldm r5!, {r3}
	adds r0, r4, #0
	bl sub_805E99C
	ldr r0, [sp, #0x60]
	adds r0, #1
	str r0, [sp, #0x60]
	cmp r0, #4
	ble _080B035A
	movs r1, #0
	str r1, [sp, #0x60]
_080B0392:
	ldr r2, [sp, #0x60]
	lsls r0, r2, #2
	movs r3, #0x87
	lsls r3, r3, #4
	adds r1, r7, r3
	adds r1, r1, r0
	ldr r1, [r1]
	adds r2, #1
	str r2, [sp, #0x64]
	str r0, [sp, #0x68]
	cmp r1, #2
	bne _080B03AC
	b _080B06B0
_080B03AC:
	adds r0, r0, r7
	movs r5, #0xaa
	lsls r5, r5, #3
	adds r0, r0, r5
	ldr r4, [r0]
	adds r0, r7, #0
	ldr r1, [sp, #0x60]
	bl sub_80B39BC
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_805E860
	ldr r4, [sp, #0x68]
	adds r0, r4, r7
	adds r0, r0, r5
	ldr r0, [r0]
	bl sub_805E8F0
	lsls r0, r0, #0x1e
	ldr r5, [sp, #0x60]
	lsls r5, r5, #5
	str r5, [sp, #0x6c]
	adds r1, r4, r7
	cmp r0, #0
	blt _080B03E6
	b _080B067C
_080B03E6:
	adds r5, r5, r7
	movs r6, #0xaf
	lsls r6, r6, #3
	adds r4, r5, r6
	movs r2, #0xaa
	lsls r2, r2, #3
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sp
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	mov r0, sp
	mov r1, sp
	movs r2, #0x20
	bl sub_80D3994
	mov r0, sp
	ldm r0!, {r1, r3, r6}
	stm r4!, {r1, r3, r6}
	ldm r0!, {r2, r3, r6}
	stm r4!, {r2, r3, r6}
	ldm r0!, {r1, r2}
	stm r4!, {r1, r2}
	adds r0, r7, #0
	bl sub_8008910
	adds r4, r0, #0
	movs r3, #0xb0
	lsls r3, r3, #3
	adds r5, r5, r3
	ldr r6, [r5]
	mov r8, r6
	ldr r1, _080B0488 @ =0x000008B8
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl sub_8007D4C
	ldr r3, [sp, #0x68]
	adds r2, r3, r0
	ldr r0, [r5]
	movs r3, #0
	cmp r0, #0
	beq _080B044E
	ldrh r3, [r5, #4]
_080B044E:
	adds r6, r4, #0
	lsls r2, r2, #5
	ldr r4, _080B048C @ =0x06010000
	adds r2, r2, r4
	mov r0, sp
	mov r1, r8
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B0490
	cmp r1, #0
	beq _080B0478
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B0478:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B0560
	.align 2, 0
_080B0480: .4byte 0x0000052C
_080B0484: .4byte 0x000008E1
_080B0488: .4byte 0x000008B8
_080B048C: .4byte 0x06010000
_080B0490:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x54]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x50]
	add r1, sp, #0x54
	add r0, sp, #0x50
	cmp r4, #1
	bhs _080B04A8
	adds r0, r1, #0
_080B04A8:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B04C6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080B04CA
	mov r0, sb
	bl sub_80D3BC0
	b _080B04CA
_080B04C6:
	movs r0, #0
	mov sb, r0
_080B04CA:
	adds r5, r0, #0
	str r5, [sp, #0x94]
	ldr r2, [r6]
	mov ip, r5
	ldr r4, [sp, #0x60]
	adds r4, #1
	str r4, [sp, #0x64]
	cmp r2, r8
	beq _080B04F8
_080B04DC:
	mov r5, ip
	cmp r5, #0
	beq _080B04EE
	mov r0, ip
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B04EE:
	adds r2, #0x10
	movs r0, #0x10
	add ip, r0
	cmp r2, r8
	bne _080B04DC
_080B04F8:
	mov r5, ip
	ldr r0, [sp, #0x54]
	cmp r0, #1
	bne _080B0514
	cmp r5, #0
	beq _080B0510
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B0510:
	adds r5, #0x10
	b _080B053C
_080B0514:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _080B053A
_080B051C:
	cmp r2, #0
	beq _080B052C
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B052C:
	movs r5, #1
	rsbs r5, r5, #0
	add r8, r5
	adds r2, #0x10
	mov r0, r8
	cmp r0, #0
	bne _080B051C
_080B053A:
	adds r5, r2, #0
_080B053C:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B054C
_080B0546:
	adds r1, #0x10
	cmp r1, r2
	bne _080B0546
_080B054C:
	cmp r0, #0
	beq _080B0554
	bl sub_80D0260
_080B0554:
	ldr r0, [sp, #0x94]
	add r0, sb
	ldr r1, [sp, #0x94]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B0560:
	adds r0, r7, #0
	bl sub_8008910
	adds r5, r0, #0
	ldr r2, [sp, #0x6c]
	adds r0, r2, r7
	movs r1, #0xb1
	lsls r1, r1, #3
	adds r0, r0, r1
	ldr r4, [r0]
	adds r2, r2, r7
	adds r2, r2, r1
	ldr r0, [r2]
	movs r3, #0
	cmp r0, #0
	beq _080B0582
	ldrh r3, [r2, #4]
_080B0582:
	adds r6, r5, #0
	mov r0, sp
	adds r1, r4, #0
	ldr r2, _080B05B0 @ =0x05000320
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B05B4
	cmp r1, #0
	beq _080B05A8
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B05A8:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B067C
	.align 2, 0
_080B05B0: .4byte 0x05000320
_080B05B4:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x5c]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x58]
	add r1, sp, #0x5c
	add r0, sp, #0x58
	cmp r4, #1
	bhs _080B05CC
	adds r0, r1, #0
_080B05CC:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B05EA
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080B05EE
	mov r0, sb
	bl sub_80D3BC0
	b _080B05EE
_080B05EA:
	movs r0, #0
	mov sb, r0
_080B05EE:
	adds r5, r0, #0
	str r5, [sp, #0x94]
	ldr r2, [r6]
	mov ip, r5
	cmp r2, r8
	beq _080B0614
_080B05FA:
	mov r0, ip
	cmp r0, #0
	beq _080B060A
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B060A:
	adds r2, #0x10
	movs r0, #0x10
	add ip, r0
	cmp r2, r8
	bne _080B05FA
_080B0614:
	mov r5, ip
	ldr r0, [sp, #0x5c]
	cmp r0, #1
	bne _080B0630
	cmp r5, #0
	beq _080B062C
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B062C:
	adds r5, #0x10
	b _080B0658
_080B0630:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _080B0656
_080B0638:
	cmp r2, #0
	beq _080B0648
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B0648:
	movs r5, #1
	rsbs r5, r5, #0
	add r8, r5
	adds r2, #0x10
	mov r0, r8
	cmp r0, #0
	bne _080B0638
_080B0656:
	adds r5, r2, #0
_080B0658:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B0668
_080B0662:
	adds r1, #0x10
	cmp r1, r2
	bne _080B0662
_080B0668:
	cmp r0, #0
	beq _080B0670
	bl sub_80D0260
_080B0670:
	ldr r0, [sp, #0x94]
	add r0, sb
	ldr r1, [sp, #0x94]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B067C:
	adds r0, r7, #0
	bl sub_8008920
	adds r6, r0, #0
	ldr r2, [sp, #0x6c]
	adds r0, r2, r7
	movs r1, #0xaf
	lsls r1, r1, #3
	adds r0, r0, r1
	ldr r4, [r0]
	adds r5, r2, r7
	adds r5, r5, r1
	ldr r0, [r5]
	movs r2, #0
	cmp r0, #0
	beq _080B069E
	ldrh r2, [r5, #4]
_080B069E:
	ldr r3, [sp, #0x68]
	adds r0, r3, r7
	ldr r5, _080B06FC @ =0x00000564
	adds r0, r0, r5
	ldr r3, [r0]
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_805E99C
_080B06B0:
	ldr r6, [sp, #0x64]
	str r6, [sp, #0x60]
	cmp r6, #4
	bgt _080B06BA
	b _080B0392
_080B06BA:
	ldr r1, _080B0700 @ =0x0000092B
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080B06EA
	adds r0, r7, #0
	bl sub_8008920
	adds r4, r0, #0
	ldr r2, _080B0704 @ =0x000007EC
	adds r3, r7, r2
	ldr r0, [r3]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080B06DC
	ldrh r2, [r3, #4]
_080B06DC:
	movs r3, #0xfd
	lsls r3, r3, #3
	adds r0, r7, r3
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
_080B06EA:
	add sp, #0x98
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B06FC: .4byte 0x00000564
_080B0700: .4byte 0x0000092B
_080B0704: .4byte 0x000007EC

	thumb_func_start sub_80B0708
sub_80B0708: @ 0x080B0708
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x40
	mov sb, r0
	cmp r1, #0x3c
	beq _080B071C
	b _080B0912
_080B071C:
	ldr r5, _080B07A4 @ =0x0000090B
	add r5, sb
	ldrb r0, [r5]
	subs r0, #1
	movs r1, #0
	mov sl, r1
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #9
	bne _080B073E
	ldr r0, _080B07A8 @ =0x0000080C
	add r0, sb
	movs r1, #0xc0
	lsls r1, r1, #1
	bl sub_8008C28
_080B073E:
	ldrb r0, [r5]
	add r1, sp, #0xc
	movs r2, #0
	bl sub_804EC84
	ldrb r0, [r5]
	cmp r0, #9
	bhi _080B0764
	add r0, sp, #0x10
	ldr r1, _080B07AC @ =gUnknown_08107568
	movs r2, #2
	bl sub_80D3994
	add r1, sp, #0xc
	adds r0, r1, #0
	ldrb r0, [r0]
	strb r0, [r1, #1]
	movs r0, #0x30
	strb r0, [r1]
_080B0764:
	add r0, sp, #0x24
	movs r6, #4
	movs r7, #2
	strh r6, [r0]
	strh r7, [r0, #2]
	ldr r0, [sp, #0x24]
	mov r4, sb
	adds r4, #0xc
	adds r1, r4, #0
	movs r2, #0
	bl sub_804E7A0
	ldrb r0, [r5]
	mov r8, r4
	cmp r0, #9
	bls _080B07B0
	movs r1, #1
	add r0, sp, #0x28
	strh r6, [r0]
	strh r7, [r0, #2]
	ldr r0, [sp, #0x28]
	add r2, sp, #0xc
	str r2, [sp]
	mov r3, sl
	str r3, [sp, #4]
	str r1, [sp, #8]
	mov r1, r8
	movs r2, #0
	movs r3, #0
	bl sub_804E958
	b _080B07CE
	.align 2, 0
_080B07A4: .4byte 0x0000090B
_080B07A8: .4byte 0x0000080C
_080B07AC: .4byte gUnknown_08107568
_080B07B0:
	movs r1, #3
	add r0, sp, #0x2c
	strh r6, [r0]
	strh r7, [r0, #2]
	ldr r0, [sp, #0x2c]
	add r4, sp, #0xc
	str r4, [sp]
	mov r6, sl
	str r6, [sp, #4]
	str r1, [sp, #8]
	mov r1, r8
	movs r2, #0
	movs r3, #0
	bl sub_804E958
_080B07CE:
	mov r0, sb
	bl sub_8008910
	adds r4, r0, #0
	ldr r0, _080B081C @ =0x00000888
	add r0, sb
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r2, r0, #0
	movs r3, #0x80
	lsls r3, r3, #1
	adds r5, r4, #0
	lsls r2, r2, #5
	ldr r7, _080B0820 @ =0x06010000
	adds r2, r2, r7
	add r0, sp, #0x14
	mov r1, r8
	bl sub_8008F0C
	add r0, sp, #0x14
	mov r8, r0
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080B0824
	cmp r1, #0
	beq _080B0812
	adds r0, r1, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B0812:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080B08EA
	.align 2, 0
_080B081C: .4byte 0x00000888
_080B0820: .4byte 0x06010000
_080B0824:
	str r1, [sp, #0x38]
	movs r0, #1
	str r0, [sp, #0x34]
	ldr r0, [r5]
	adds r6, r1, #0
	subs r0, r6, r0
	asrs r4, r0, #4
	str r4, [sp, #0x30]
	add r1, sp, #0x34
	add r0, sp, #0x30
	cmp r4, #1
	bhs _080B083E
	adds r0, r1, #0
_080B083E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B085C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sl, r4
	cmp r0, #0
	bne _080B0860
	mov r0, sl
	bl sub_80D3BC0
	b _080B0860
_080B085C:
	movs r0, #0
	mov sl, r0
_080B0860:
	adds r4, r0, #0
	str r4, [sp, #0x3c]
	ldr r2, [r5]
	adds r3, r4, #0
	ldr r7, [sp, #0x38]
	cmp r2, r7
	beq _080B0888
_080B086E:
	cmp r3, #0
	beq _080B087E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B087E:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x38]
	cmp r2, r0
	bne _080B086E
_080B0888:
	adds r4, r3, #0
	ldr r0, [sp, #0x34]
	cmp r0, #1
	bne _080B08A4
	cmp r4, #0
	beq _080B08A0
	adds r0, r4, #0
	mov r1, r8
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080B08A0:
	adds r4, #0x10
	b _080B08C6
_080B08A4:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080B08C4
_080B08AC:
	cmp r2, #0
	beq _080B08BC
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B08BC:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B08AC
_080B08C4:
	adds r4, r2, #0
_080B08C6:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B08D6
_080B08D0:
	adds r1, #0x10
	cmp r1, r2
	bne _080B08D0
_080B08D6:
	cmp r0, #0
	beq _080B08DE
	bl sub_80D0260
_080B08DE:
	ldr r0, [sp, #0x3c]
	add r0, sl
	ldr r7, [sp, #0x3c]
	str r7, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080B08EA:
	ldr r0, _080B0924 @ =0x0000090B
	add r0, sb
	ldrb r0, [r0]
	cmp r0, #0
	bne _080B0912
	ldr r1, _080B0928 @ =0x00000838
	add r1, sb
	movs r0, #4
	str r0, [r1]
	ldr r0, _080B092C @ =0x0000080C
	add r0, sb
	movs r1, #0x80
	lsls r1, r1, #1
	bl sub_8008C28
	ldr r0, _080B0930 @ =0x00000814
	add r0, sb
	movs r1, #0xbb
	bl sub_8008B6C
_080B0912:
	add sp, #0x40
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B0924: .4byte 0x0000090B
_080B0928: .4byte 0x00000838
_080B092C: .4byte 0x0000080C
_080B0930: .4byte 0x00000814

	thumb_func_start sub_80B0934
sub_80B0934: @ 0x080B0934
	push {r4, r5, r6, lr}
	adds r3, r0, #0
	movs r1, #0xa0
	lsls r1, r1, #3
	adds r0, r3, r1
	ldr r1, [r0]
	movs r0, #0
	strh r0, [r1, #0x10]
	movs r2, #0
	movs r6, #0xc3
	lsls r6, r6, #3
	movs r4, #0
	ldr r5, _080B096C @ =0x000006F4
_080B094E:
	lsls r1, r2, #2
	adds r0, r1, r3
	adds r0, r0, r6
	ldr r0, [r0]
	strh r4, [r0, #0x10]
	adds r1, r1, r3
	adds r1, r1, r5
	ldr r0, [r1]
	strh r4, [r0, #0x10]
	adds r2, #1
	cmp r2, #4
	ble _080B094E
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080B096C: .4byte 0x000006F4

	thumb_func_start sub_80B0970
sub_80B0970: @ 0x080B0970
	push {r4, r5, r6, lr}
	adds r3, r0, #0
	movs r1, #0xa0
	lsls r1, r1, #3
	adds r0, r3, r1
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	strh r1, [r0, #0x10]
	movs r2, #0
	movs r6, #0xc3
	lsls r6, r6, #3
	adds r4, r1, #0
	ldr r5, _080B09AC @ =0x000006F4
_080B098C:
	lsls r1, r2, #2
	adds r0, r1, r3
	adds r0, r0, r6
	ldr r0, [r0]
	strh r4, [r0, #0x10]
	adds r1, r1, r3
	adds r1, r1, r5
	ldr r0, [r1]
	strh r4, [r0, #0x10]
	adds r2, #1
	cmp r2, #4
	ble _080B098C
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080B09AC: .4byte 0x000006F4

	thumb_func_start sub_80B09B0
sub_80B09B0: @ 0x080B09B0
	push {r4, r5, lr}
	sub sp, #0x1c
	adds r2, r0, #0
	mov r1, sp
	ldr r0, _080B09EC @ =gUnknown_0810756C
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
	ldr r0, [r0]
	str r0, [r1]
	ldr r0, _080B09F0 @ =0x00000934
	adds r1, r2, r0
	movs r3, #0x93
	lsls r3, r3, #4
	adds r0, r2, r3
	ldr r0, [r0]
	lsls r0, r0, #2
	add r0, sp
	ldr r0, [r0]
	str r0, [r1]
	ldr r4, _080B09F4 @ =0x00000938
	adds r0, r2, r4
	ldrb r1, [r0]
	cmp r1, #2
	bhi _080B09FC
	ldr r5, _080B09F8 @ =0x0000090E
	adds r1, r2, r5
	movs r0, #0xa
	b _080B0A92
	.align 2, 0
_080B09EC: .4byte gUnknown_0810756C
_080B09F0: .4byte 0x00000934
_080B09F4: .4byte 0x00000938
_080B09F8: .4byte 0x0000090E
_080B09FC:
	subs r0, r1, #3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _080B0A14
	ldr r0, _080B0A10 @ =0x0000090E
	adds r1, r2, r0
	movs r0, #0xf
	b _080B0A92
	.align 2, 0
_080B0A10: .4byte 0x0000090E
_080B0A14:
	subs r0, r1, #6
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _080B0A2C
	ldr r3, _080B0A28 @ =0x0000090E
	adds r1, r2, r3
	movs r0, #0x14
	b _080B0A92
	.align 2, 0
_080B0A28: .4byte 0x0000090E
_080B0A2C:
	adds r0, r1, #0
	subs r0, #9
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _080B0A44
	ldr r4, _080B0A40 @ =0x0000090E
	adds r1, r2, r4
	movs r0, #0x1e
	b _080B0A92
	.align 2, 0
_080B0A40: .4byte 0x0000090E
_080B0A44:
	adds r0, r1, #0
	subs r0, #0xb
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _080B0A5C
	ldr r5, _080B0A58 @ =0x0000090E
	adds r1, r2, r5
	movs r0, #0x23
	b _080B0A92
	.align 2, 0
_080B0A58: .4byte 0x0000090E
_080B0A5C:
	adds r0, r1, #0
	subs r0, #0xe
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _080B0A74
	ldr r0, _080B0A70 @ =0x0000090E
	adds r1, r2, r0
	movs r0, #0x2d
	b _080B0A92
	.align 2, 0
_080B0A70: .4byte 0x0000090E
_080B0A74:
	adds r0, r1, #0
	subs r0, #0x11
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _080B0A8C
	ldr r3, _080B0A88 @ =0x0000090E
	adds r1, r2, r3
	movs r0, #0x37
	b _080B0A92
	.align 2, 0
_080B0A88: .4byte 0x0000090E
_080B0A8C:
	ldr r4, _080B0A9C @ =0x0000090E
	adds r1, r2, r4
	movs r0, #0x3c
_080B0A92:
	strb r0, [r1]
	add sp, #0x1c
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080B0A9C: .4byte 0x0000090E

	thumb_func_start sub_80B0AA0
sub_80B0AA0: @ 0x080B0AA0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r3, r0, #0
	ldr r0, _080B0B94 @ =0x00000844
	adds r1, r3, r0
	movs r0, #0
	str r0, [r1]
	movs r2, #0
	movs r5, #0
	movs r7, #1
	ldr r1, _080B0B98 @ =0x00000848
	adds r4, r3, r1
	ldr r6, _080B0B9C @ =0x000008E1
	adds r6, r6, r3
	mov r8, r6
	movs r0, #0x8f
	lsls r0, r0, #4
	adds r0, r0, r3
	mov sb, r0
	adds r1, #0x14
	adds r1, r1, r3
	mov ip, r1
_080B0AD0:
	str r5, [r4]
	str r5, [r4, #0x28]
	mov r6, ip
	adds r6, #4
	mov ip, r6
	subs r6, #4
	stm r6!, {r5}
	mov r0, r8
	adds r1, r0, r2
	movs r0, #0x70
	strb r0, [r1]
	lsls r1, r2, #1
	mov r6, sb
	strh r5, [r6]
	ldr r6, _080B0BA0 @ =0x00000915
	adds r0, r3, r6
	adds r0, r0, r2
	strb r7, [r0]
	subs r6, #0x19
	adds r0, r3, r6
	adds r0, r0, r1
	strh r5, [r0]
	ldr r1, _080B0BA4 @ =0x00000906
	adds r0, r3, r1
	adds r0, r0, r2
	strb r5, [r0]
	adds r6, #0x1e
	adds r0, r3, r6
	adds r0, r0, r2
	strb r7, [r0]
	adds r1, #0x19
	adds r0, r3, r1
	adds r0, r0, r2
	strb r7, [r0]
	adds r6, #0xa
	adds r0, r3, r6
	adds r0, r0, r2
	strb r7, [r0]
	adds r4, #4
	movs r0, #2
	add sb, r0
	adds r2, #1
	cmp r2, #4
	ble _080B0AD0
	movs r4, #0x8e
	lsls r4, r4, #4
	adds r1, r3, r4
	movs r2, #0
	movs r0, #0x78
	strb r0, [r1]
	subs r6, #0x19
	adds r1, r3, r6
	movs r0, #0x3c
	strb r0, [r1]
	ldr r1, _080B0BA8 @ =0x000008FA
	adds r0, r3, r1
	strb r2, [r0]
	adds r4, #0x2c
	adds r0, r3, r4
	strb r2, [r0]
	adds r6, #2
	adds r0, r3, r6
	strb r2, [r0]
	ldr r0, _080B0BAC @ =0x00000884
	adds r1, r3, r0
	movs r0, #2
	str r0, [r1]
	ldr r1, _080B0BB0 @ =0x00000838
	adds r0, r3, r1
	str r2, [r0]
	subs r4, #0xd0
	adds r0, r3, r4
	str r2, [r0]
	subs r6, #0xcd
	adds r0, r3, r6
	str r2, [r0]
	adds r1, #0xdc
	adds r0, r3, r1
	movs r1, #1
	strb r1, [r0]
	adds r4, #0xed
	adds r0, r3, r4
	strb r1, [r0]
	adds r6, #0xea
	adds r0, r3, r6
	strb r2, [r0]
	ldr r1, _080B0BB4 @ =0x0000092B
	adds r0, r3, r1
	strb r2, [r0]
	adds r4, #3
	adds r0, r3, r4
	strb r2, [r0]
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B0B94: .4byte 0x00000844
_080B0B98: .4byte 0x00000848
_080B0B9C: .4byte 0x000008E1
_080B0BA0: .4byte 0x00000915
_080B0BA4: .4byte 0x00000906
_080B0BA8: .4byte 0x000008FA
_080B0BAC: .4byte 0x00000884
_080B0BB0: .4byte 0x00000838
_080B0BB4: .4byte 0x0000092B

	thumb_func_start sub_80B0BB8
sub_80B0BB8: @ 0x080B0BB8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xb8
	adds r7, r0, #0
	movs r0, #0
	str r0, [sp, #0x68]
	movs r1, #0
	str r1, [sp, #0x6c]
	movs r2, #0
	str r2, [sp, #0x70]
	mov sl, r2
	mov r3, sp
	adds r3, #0x20
	str r3, [sp, #0xa8]
	mov r4, sp
	adds r4, #0x34
	str r4, [sp, #0xac]
	mov r5, sp
	adds r5, #0x3c
	str r5, [sp, #0xb0]
	ldr r5, _080B0CB4 @ =gUnknown_08107588
	mov r6, sp
	adds r6, #0x50
	str r6, [sp, #0xb4]
	ldr r0, _080B0CB8 @ =gUnknown_0810759C
	mov r8, r0
	add r4, sp, #0x64
	ldr r2, [sp, #0xac]
_080B0BF6:
	stm r3!, {r1}
	mov r6, sl
	adds r0, r2, r6
	strb r1, [r0]
	movs r0, #1
	add sl, r0
	mov r6, sl
	cmp r6, #4
	ble _080B0BF6
	movs r0, #0
	str r0, [sp, #0x74]
	movs r1, #0
	str r1, [sp, #0x78]
	ldr r1, [sp, #0xb0]
	adds r0, r5, #0
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r6}
	stm r1!, {r2, r6}
	ldr r1, [sp, #0xb4]
	mov r0, r8
	ldm r0!, {r3, r5, r6}
	stm r1!, {r3, r5, r6}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	movs r5, #0
	str r5, [sp, #0x7c]
	movs r6, #0
	str r6, [sp, #0x80]
	movs r0, #0
	str r0, [sp, #0x84]
	movs r1, #0
	str r1, [sp, #0x88]
	movs r2, #0
	str r2, [sp, #0x8c]
	movs r3, #0
	str r3, [sp, #0x90]
	adds r0, r7, #0
	bl sub_8008918
	movs r5, #0xba
	lsls r5, r5, #5
	adds r1, r5, #0
	strh r1, [r4]
	strh r1, [r0]
	movs r6, #0x83
	lsls r6, r6, #3
	adds r6, r7, r6
	ldr r0, [r6]
	str r0, [sp, #0x98]
	adds r0, r7, #0
	bl sub_80088DC
	str r0, [sp, #0x9c]
	adds r0, r7, #0
	bl sub_8008920
	str r0, [sp, #0xa0]
	adds r0, r7, #0
	bl sub_8008918
	adds r5, r0, #0
	adds r0, r7, #0
	bl sub_8008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl sub_800894C
	movs r2, #0x81
	lsls r2, r2, #4
	adds r1, r7, r2
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	ldr r0, [sp, #0x98]
	ldr r1, [sp, #0x9c]
	ldr r2, [sp, #0xa0]
	adds r3, r5, #0
	bl sub_8050D3C
	ldr r4, [r6]
	adds r0, r7, #0
	bl sub_80B3A10
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_8050E50
	ldr r3, _080B0CBC @ =0x00000838
	adds r0, r7, r3
	bl _080B1B1C
	.align 2, 0
_080B0CB4: .4byte gUnknown_08107588
_080B0CB8: .4byte gUnknown_0810759C
_080B0CBC: .4byte 0x00000838

	thumb_func_start sub_080B0CC0
sub_080B0CC0: @ 0x080B0CC0
	adds r0, r7, #0
	bl sub_80087C8
	adds r0, r7, #0
	bl sub_80088B8
	movs r5, #0x83
	lsls r5, r5, #3
	adds r4, r7, r5
	ldr r0, [r4]
	bl sub_8050D34
	adds r6, r0, #0
	ldr r4, [r4]
	mov r8, r4
	adds r0, r7, #0
	bl sub_80088DC
	str r0, [sp, #0xa4]
	adds r0, r7, #0
	bl sub_8008920
	mov sb, r0
	adds r0, r7, #0
	bl sub_8008918
	adds r5, r0, #0
	adds r0, r7, #0
	bl sub_8008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl sub_800894C
	movs r2, #0x81
	lsls r2, r2, #4
	adds r1, r7, r2
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, r8
	ldr r1, [sp, #0xa4]
	mov r2, sb
	adds r3, r5, #0
	bl sub_8050D3C
	cmp r0, #6
	bls _080B0D22
	b _080B10E8
_080B0D22:
	lsls r0, r0, #2
	ldr r1, _080B0D2C @ =_080B0D30
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080B0D2C: .4byte _080B0D30
_080B0D30: @ jump table
	.4byte _080B0D4C @ case 0
	.4byte _080B10E8 @ case 1
	.4byte _080B10E8 @ case 2
	.4byte _080B0F34 @ case 3
	.4byte _080B10C2 @ case 4
	.4byte _080B10E8 @ case 5
	.4byte _080B10E8 @ case 6
_080B0D4C:
	ldr r3, [sp, #0x68]
	cmp r3, #8
	bne _080B0D60
	ldr r4, _080B0D5C @ =0x00000838
	adds r1, r7, r4
	movs r0, #1
	str r0, [r1]
	b _080B10E8
	.align 2, 0
_080B0D5C: .4byte 0x00000838
_080B0D60:
	ldr r5, [sp, #0x68]
	cmp r5, #4
	bne _080B0DB0
	movs r6, #1
	str r6, [sp, #0x84]
	ldr r0, [sp, #0x8c]
	cmp r0, #0
	bne _080B0D72
	b _080B10E8
_080B0D72:
	movs r1, #0x83
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r0, [r0]
	bl sub_8050D5C
	movs r2, #5
	str r2, [sp, #0x68]
	movs r3, #0
	str r3, [sp, #0x70]
	mov sl, r3
	movs r2, #1
	ldr r4, _080B0DA8 @ =0x0000091A
	adds r3, r7, r4
	ldr r5, _080B0DAC @ =0x00000848
	adds r1, r7, r5
_080B0D92:
	stm r1!, {r2}
	mov r6, sl
	adds r0, r3, r6
	strb r2, [r0]
	movs r0, #1
	add sl, r0
	mov r4, sl
	cmp r4, #4
	ble _080B0D92
	b _080B10E8
	.align 2, 0
_080B0DA8: .4byte 0x0000091A
_080B0DAC: .4byte 0x00000848
_080B0DB0:
	ldr r5, [sp, #0x68]
	cmp r5, #5
	bne _080B0E60
	movs r6, #1
	str r6, [sp, #0x88]
	ldr r0, [sp, #0x90]
	cmp r0, #0
	bne _080B0DC2
	b _080B10E8
_080B0DC2:
	adds r0, r7, #0
	bl sub_80B0AA0
	movs r1, #0x83
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r0, [r0]
	bl sub_8050D5C
	movs r2, #6
	str r2, [sp, #0x68]
	movs r3, #0
	str r3, [sp, #0x70]
	ldr r5, _080B0E10 @ =0x0000043C
	adds r4, r7, r5
	ldr r2, [r4]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _080B0E0A
	ldr r1, _080B0E14 @ =0x00000889
	adds r0, r2, #0
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl sub_8009378
	adds r0, r7, #0
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [r4]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
_080B0E0A:
	ldr r0, [r4]
	b _080B0E2A
	.align 2, 0
_080B0E10: .4byte 0x0000043C
_080B0E14: .4byte 0x00000889
_080B0E18:
	adds r0, r7, #0
	bl sub_80087C8
	adds r0, r7, #0
	bl sub_80AF814
	ldr r6, _080B0E58 @ =0x0000043C
	adds r0, r7, r6
	ldr r0, [r0]
_080B0E2A:
	ldr r0, [r0]
	rsbs r2, r0, #0
	orrs r2, r0
	cmp r2, #0
	blt _080B0E18
	ldr r0, _080B0E58 @ =0x0000043C
	adds r4, r7, r0
	ldr r0, [r4]
	ldr r1, _080B0E5C @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl sub_800934C
	adds r0, r7, #0
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [r4]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
	b _080B10E8
	.align 2, 0
_080B0E58: .4byte 0x0000043C
_080B0E5C: .4byte 0x00000889
_080B0E60:
	movs r1, #0x83
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r0, [r0]
	bl sub_8050D5C
	ldr r2, [sp, #0x68]
	cmp r2, #0
	beq _080B0EA4
	cmp r2, #6
	beq _080B0EA4
	adds r2, #1
	str r2, [sp, #0x68]
	movs r3, #0
	str r3, [sp, #0x70]
	cmp r2, #2
	beq _080B0EA4
	cmp r2, #8
	beq _080B0EA4
	mov sl, r3
	movs r2, #1
	ldr r4, _080B0F18 @ =0x0000091A
	adds r3, r7, r4
	ldr r5, _080B0F1C @ =0x00000848
	adds r1, r7, r5
_080B0E92:
	stm r1!, {r2}
	mov r6, sl
	adds r0, r3, r6
	strb r2, [r0]
	movs r0, #1
	add sl, r0
	mov r4, sl
	cmp r4, #4
	ble _080B0E92
_080B0EA4:
	ldr r5, [sp, #0x68]
	cmp r5, #4
	beq _080B0EAC
	b _080B10E8
_080B0EAC:
	movs r5, #0x3c
	add r4, sp, #0xc
	movs r6, #4
	mov sl, r6
_080B0EB4:
	bl sub_80D11E4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	muls r0, r5, r0
	lsrs r0, r0, #0x10
	adds r0, #0x78
	stm r4!, {r0}
	movs r0, #1
	rsbs r0, r0, #0
	add sl, r0
	mov r1, sl
	cmp r1, #0
	bge _080B0EB4
	movs r1, #0
	movs r2, #4
	mov sl, r2
	movs r3, #0x88
	lsls r3, r3, #4
	adds r0, r7, r3
_080B0EDC:
	str r1, [r0]
	subs r0, #4
	movs r4, #1
	rsbs r4, r4, #0
	add sl, r4
	mov r5, sl
	cmp r5, #0
	bge _080B0EDC
	movs r6, #5
	mov sl, r6
	ldr r1, _080B0F20 @ =0x00000844
	adds r0, r7, r1
	movs r2, #0
	str r2, [r0]
	ldr r3, _080B0F24 @ =0x00000929
	adds r1, r7, r3
	movs r0, #1
	strb r0, [r1]
	ldr r4, _080B0F28 @ =0x000008E3
	adds r1, r7, r4
	movs r0, #0x70
	strb r0, [r1]
	ldr r5, _080B0F2C @ =0x00000864
	adds r0, r7, r5
	str r2, [r0]
	ldr r6, _080B0F30 @ =0x00000878
	adds r0, r7, r6
	str r2, [r0]
	b _080B10E8
	.align 2, 0
_080B0F18: .4byte 0x0000091A
_080B0F1C: .4byte 0x00000848
_080B0F20: .4byte 0x00000844
_080B0F24: .4byte 0x00000929
_080B0F28: .4byte 0x000008E3
_080B0F2C: .4byte 0x00000864
_080B0F30: .4byte 0x00000878
_080B0F34:
	cmp r6, #5
	bgt _080B0F44
	cmp r6, #4
	blt _080B0F3E
	b _080B10E8
_080B0F3E:
	cmp r6, #1
	beq _080B0F58
	b _080B0F4A
_080B0F44:
	cmp r6, #6
	bne _080B0F4A
	b _080B103C
_080B0F4A:
	movs r1, #0x83
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r0, [r0]
	bl sub_8050D74
	b _080B10E8
_080B0F58:
	ldr r2, [sp, #0x68]
	cmp r2, #8
	bls _080B0F60
	b _080B10E8
_080B0F60:
	lsls r0, r2, #2
	ldr r1, _080B0F6C @ =_080B0F70
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080B0F6C: .4byte _080B0F70
_080B0F70: @ jump table
	.4byte _080B0F94 @ case 0
	.4byte _080B10E8 @ case 1
	.4byte _080B0FB0 @ case 2
	.4byte _080B0FC4 @ case 3
	.4byte _080B0FD8 @ case 4
	.4byte _080B0FEC @ case 5
	.4byte _080B1000 @ case 6
	.4byte _080B10E8 @ case 7
	.4byte _080B1028 @ case 8
_080B0F94:
	movs r3, #0x83
	lsls r3, r3, #3
	adds r0, r7, r3
	ldr r0, [r0]
	ldr r1, _080B0FA4 @ =gUnknown_081075B0
	ldr r2, _080B0FA8 @ =gUnknown_081075CC
	ldr r3, _080B0FAC @ =gUnknown_081075D0
	b _080B100E
	.align 2, 0
_080B0FA4: .4byte gUnknown_081075B0
_080B0FA8: .4byte gUnknown_081075CC
_080B0FAC: .4byte gUnknown_081075D0
_080B0FB0:
	movs r4, #0x83
	lsls r4, r4, #3
	adds r0, r7, r4
	ldr r0, [r0]
	ldr r1, _080B0FC0 @ =gUnknown_081075D4
	bl sub_8050D8C
	b _080B10E8
	.align 2, 0
_080B0FC0: .4byte gUnknown_081075D4
_080B0FC4:
	movs r5, #0x83
	lsls r5, r5, #3
	adds r0, r7, r5
	ldr r0, [r0]
	ldr r1, _080B0FD4 @ =gUnknown_08107608
	bl sub_8050D8C
	b _080B10E8
	.align 2, 0
_080B0FD4: .4byte gUnknown_08107608
_080B0FD8:
	movs r6, #0x83
	lsls r6, r6, #3
	adds r0, r7, r6
	ldr r0, [r0]
	ldr r1, _080B0FE8 @ =gUnknown_081076C8
	bl sub_8050D8C
	b _080B10E8
	.align 2, 0
_080B0FE8: .4byte gUnknown_081076C8
_080B0FEC:
	movs r1, #0x83
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r0, [r0]
	ldr r1, _080B0FFC @ =gUnknown_081077A4
	bl sub_8050D8C
	b _080B10E8
	.align 2, 0
_080B0FFC: .4byte gUnknown_081077A4
_080B1000:
	movs r2, #0x83
	lsls r2, r2, #3
	adds r0, r7, r2
	ldr r0, [r0]
	ldr r1, _080B101C @ =gUnknown_081077E4
	ldr r2, _080B1020 @ =gUnknown_081077F8
	ldr r3, _080B1024 @ =gUnknown_08107808
_080B100E:
	movs r4, #0
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	bl sub_8050E30
	b _080B10E8
	.align 2, 0
_080B101C: .4byte gUnknown_081077E4
_080B1020: .4byte gUnknown_081077F8
_080B1024: .4byte gUnknown_08107808
_080B1028:
	movs r3, #0x83
	lsls r3, r3, #3
	adds r0, r7, r3
	ldr r0, [r0]
	ldr r1, _080B1038 @ =gUnknown_08107818
	bl sub_8050D8C
	b _080B10E8
	.align 2, 0
_080B1038: .4byte gUnknown_08107818
_080B103C:
	movs r4, #0x83
	lsls r4, r4, #3
	adds r0, r7, r4
	ldr r0, [r0]
	bl sub_8050DF0
	cmp r0, #1
	beq _080B1052
	cmp r0, #2
	beq _080B106A
	b _080B10E8
_080B1052:
	ldr r5, [sp, #0x68]
	cmp r5, #0
	bne _080B105E
	movs r6, #1
	str r6, [sp, #0x68]
	b _080B10E8
_080B105E:
	ldr r0, [sp, #0x68]
	cmp r0, #6
	bne _080B10E8
	movs r1, #7
	str r1, [sp, #0x68]
	b _080B10E8
_080B106A:
	ldr r2, [sp, #0x68]
	cmp r2, #0
	bne _080B1076
	movs r3, #7
	str r3, [sp, #0x68]
	b _080B10E8
_080B1076:
	ldr r4, [sp, #0x68]
	cmp r4, #6
	bne _080B10E8
	movs r5, #1
	str r5, [sp, #0x68]
	movs r6, #0
	str r6, [sp, #0x6c]
	movs r0, #0
	str r0, [sp, #0x70]
	mov sl, r0
	movs r1, #0
	ldr r2, [sp, #0xac]
	ldr r3, [sp, #0xa8]
_080B1090:
	stm r3!, {r1}
	mov r4, sl
	adds r0, r2, r4
	strb r1, [r0]
	movs r5, #1
	add sl, r5
	mov r6, sl
	cmp r6, #4
	ble _080B1090
	movs r0, #0
	str r0, [sp, #0x74]
	movs r1, #0
	str r1, [sp, #0x78]
	movs r2, #0
	str r2, [sp, #0x7c]
	movs r3, #0
	str r3, [sp, #0x84]
	movs r4, #0
	str r4, [sp, #0x88]
	movs r5, #0
	str r5, [sp, #0x8c]
	movs r6, #0
	str r6, [sp, #0x90]
	str r0, [sp, #0x80]
	b _080B10E8
_080B10C2:
	ldr r1, [sp, #0x68]
	cmp r1, #3
	bne _080B10EE
	cmp r6, #5
	bne _080B10E8
	ldr r2, [sp, #0x6c]
	adds r2, #1
	str r2, [sp, #0x6c]
	ldr r3, [sp, #0x80]
	cmp r3, #0
	bne _080B10E8
	cmp r2, #2
	bne _080B10E8
	movs r4, #0x83
	lsls r4, r4, #3
	adds r0, r7, r4
	ldr r0, [r0]
	bl sub_8050DD8
_080B10E8:
	ldr r5, [sp, #0x68]
	cmp r5, #3
	beq _080B1108
_080B10EE:
	ldr r6, [sp, #0x68]
	cmp r6, #3
	bgt _080B10F8
	bl _080B1B0C
_080B10F8:
	cmp r6, #4
	bne _080B10FE
	b _080B13C0
_080B10FE:
	cmp r6, #5
	bne _080B1104
	b _080B1734
_080B1104:
	bl _080B1B0C
_080B1108:
	ldr r0, [sp, #0x70]
	cmp r0, #0
	bne _080B113C
	ldr r1, _080B1130 @ =0x00000844
	adds r0, r7, r1
	ldr r2, [sp, #0x68]
	str r2, [r0]
	ldr r3, _080B1134 @ =0x00000929
	adds r0, r7, r3
	movs r1, #1
	strb r1, [r0]
	movs r4, #0x85
	lsls r4, r4, #4
	adds r0, r7, r4
	str r1, [r0]
	ldr r5, _080B1138 @ =0x0000091C
	adds r0, r7, r5
	strb r1, [r0]
	b _080B12E4
	.align 2, 0
_080B1130: .4byte 0x00000844
_080B1134: .4byte 0x00000929
_080B1138: .4byte 0x0000091C
_080B113C:
	ldr r0, [sp, #0x70]
	cmp r0, #0x1e
	bne _080B1168
	ldr r1, _080B115C @ =0x00000864
	adds r0, r7, r1
	movs r1, #1
	str r1, [r0]
	ldr r2, _080B1160 @ =0x00000921
	adds r0, r7, r2
	strb r1, [r0]
	ldr r3, _080B1164 @ =0x00000814
	adds r0, r7, r3
	movs r1, #0xc7
	bl sub_8008B6C
	b _080B1384
	.align 2, 0
_080B115C: .4byte 0x00000864
_080B1160: .4byte 0x00000921
_080B1164: .4byte 0x00000814
_080B1168:
	ldr r4, [sp, #0x70]
	cmp r4, #0x3c
	bne _080B11A8
	ldr r5, _080B1198 @ =0x00000864
	adds r0, r7, r5
	movs r1, #0
	str r1, [r0]
	ldr r6, _080B119C @ =0x00000844
	adds r0, r7, r6
	str r1, [r0]
	ldr r1, _080B11A0 @ =0x00000929
	adds r0, r7, r1
	movs r1, #1
	strb r1, [r0]
	movs r2, #0x85
	lsls r2, r2, #4
	adds r0, r7, r2
	str r1, [r0]
	ldr r3, _080B11A4 @ =0x0000091A
	adds r0, r7, r3
	add r0, sl
	strb r1, [r0]
	b _080B1384
	.align 2, 0
_080B1198: .4byte 0x00000864
_080B119C: .4byte 0x00000844
_080B11A0: .4byte 0x00000929
_080B11A4: .4byte 0x0000091A
_080B11A8:
	ldr r4, [sp, #0x70]
	cmp r4, #0x5a
	bne _080B11E8
	ldr r5, _080B11DC @ =0x00000878
	adds r0, r7, r5
	movs r2, #1
	str r2, [r0]
	ldr r6, _080B11E0 @ =0x00000844
	adds r0, r7, r6
	ldr r1, [sp, #0x68]
	str r1, [r0]
	ldr r3, _080B11E4 @ =0x00000929
	adds r0, r7, r3
	strb r2, [r0]
	movs r4, #0x85
	lsls r4, r4, #4
	adds r1, r7, r4
	movs r0, #2
	str r0, [r1]
	adds r5, #0xa2
	adds r0, r7, r5
	add r0, sl
	strb r2, [r0]
	subs r6, #0x30
	b _080B12E6
	.align 2, 0
_080B11DC: .4byte 0x00000878
_080B11E0: .4byte 0x00000844
_080B11E4: .4byte 0x00000929
_080B11E8:
	ldr r0, [sp, #0x70]
	cmp r0, #0x78
	bne _080B1240
	ldr r1, _080B1228 @ =0x00000878
	adds r0, r7, r1
	movs r2, #0
	str r2, [r0]
	ldr r3, _080B122C @ =0x00000864
	adds r1, r7, r3
	movs r0, #2
	str r0, [r1]
	ldr r4, _080B1230 @ =0x00000921
	adds r0, r7, r4
	movs r1, #1
	strb r1, [r0]
	ldr r5, _080B1234 @ =0x00000844
	adds r0, r7, r5
	str r2, [r0]
	ldr r6, _080B1238 @ =0x00000929
	adds r0, r7, r6
	strb r1, [r0]
	movs r2, #0x85
	lsls r2, r2, #4
	adds r0, r7, r2
	str r1, [r0]
	adds r3, #0xb6
	adds r0, r7, r3
	add r0, sl
	strb r1, [r0]
	ldr r4, _080B123C @ =0x0000081C
	adds r0, r7, r4
	b _080B133A
	.align 2, 0
_080B1228: .4byte 0x00000878
_080B122C: .4byte 0x00000864
_080B1230: .4byte 0x00000921
_080B1234: .4byte 0x00000844
_080B1238: .4byte 0x00000929
_080B123C: .4byte 0x0000081C
_080B1240:
	ldr r5, [sp, #0x70]
	cmp r5, #0x96
	bne _080B1254
	ldr r6, _080B1250 @ =0x00000864
	adds r1, r7, r6
	movs r0, #0
	str r0, [r1]
	b _080B1384
	.align 2, 0
_080B1250: .4byte 0x00000864
_080B1254:
	ldr r0, [sp, #0x70]
	cmp r0, #0xb4
	bne _080B1280
	movs r2, #0x85
	lsls r2, r2, #4
	adds r1, r7, r2
	movs r0, #2
	str r0, [r1]
	ldr r3, _080B1278 @ =0x0000091A
	adds r0, r7, r3
	add r0, sl
	movs r1, #1
	strb r1, [r0]
	ldr r4, _080B127C @ =0x00000878
	adds r0, r7, r4
	str r1, [r0]
	b _080B1384
	.align 2, 0
_080B1278: .4byte 0x0000091A
_080B127C: .4byte 0x00000878
_080B1280:
	ldr r5, [sp, #0x70]
	cmp r5, #0xd2
	bne _080B12B8
	ldr r6, _080B12AC @ =0x00000878
	adds r1, r7, r6
	movs r0, #2
	str r0, [r1]
	movs r0, #0x85
	lsls r0, r0, #4
	adds r1, r7, r0
	movs r0, #4
	str r0, [r1]
	ldr r2, _080B12B0 @ =0x0000091C
	adds r1, r7, r2
	movs r0, #1
	strb r0, [r1]
	ldr r3, _080B12B4 @ =0x00000814
	adds r0, r7, r3
	movs r1, #0xa6
	bl sub_8008B6C
	b _080B1384
	.align 2, 0
_080B12AC: .4byte 0x00000878
_080B12B0: .4byte 0x0000091C
_080B12B4: .4byte 0x00000814
_080B12B8:
	ldr r4, [sp, #0x70]
	cmp r4, #0xf0
	bne _080B1300
	ldr r5, _080B12F0 @ =0x00000844
	adds r0, r7, r5
	ldr r6, [sp, #0x68]
	str r6, [r0]
	ldr r1, _080B12F4 @ =0x00000929
	adds r0, r7, r1
	movs r1, #0
	movs r2, #1
	strb r2, [r0]
	ldr r3, _080B12F8 @ =0x00000878
	adds r0, r7, r3
	str r1, [r0]
	movs r4, #0x85
	lsls r4, r4, #4
	adds r0, r7, r4
	str r6, [r0]
	adds r5, #0xd8
	adds r0, r7, r5
	strb r2, [r0]
_080B12E4:
	ldr r6, _080B12FC @ =0x00000814
_080B12E6:
	adds r0, r7, r6
	movs r1, #0x6c
	bl sub_8008B6C
	b _080B1384
	.align 2, 0
_080B12F0: .4byte 0x00000844
_080B12F4: .4byte 0x00000929
_080B12F8: .4byte 0x00000878
_080B12FC: .4byte 0x00000814
_080B1300:
	movs r0, #0x87
	lsls r0, r0, #1
	ldr r1, [sp, #0x70]
	cmp r1, r0
	bne _080B135C
	ldr r2, _080B1344 @ =0x00000844
	adds r1, r7, r2
	movs r0, #0
	str r0, [r1]
	ldr r3, _080B1348 @ =0x00000929
	adds r0, r7, r3
	movs r2, #1
	strb r2, [r0]
	movs r4, #0x85
	lsls r4, r4, #4
	adds r0, r7, r4
	str r2, [r0]
	ldr r5, _080B134C @ =0x0000091C
	adds r0, r7, r5
	strb r2, [r0]
	ldr r6, _080B1350 @ =0x00000864
	adds r1, r7, r6
	movs r0, #2
	str r0, [r1]
	ldr r1, _080B1354 @ =0x00000921
	adds r0, r7, r1
	strb r2, [r0]
	ldr r2, _080B1358 @ =0x0000081C
	adds r0, r7, r2
_080B133A:
	movs r1, #0xbc
	bl sub_8008B6C
	b _080B1384
	.align 2, 0
_080B1344: .4byte 0x00000844
_080B1348: .4byte 0x00000929
_080B134C: .4byte 0x0000091C
_080B1350: .4byte 0x00000864
_080B1354: .4byte 0x00000921
_080B1358: .4byte 0x0000081C
_080B135C:
	movs r0, #0x96
	lsls r0, r0, #1
	ldr r3, [sp, #0x70]
	cmp r3, r0
	bne _080B1384
	ldr r4, _080B139C @ =0x00000864
	adds r1, r7, r4
	movs r0, #0
	str r0, [r1]
	movs r5, #0x83
	lsls r5, r5, #3
	adds r0, r7, r5
	ldr r0, [r0]
	bl sub_8050DE4
	movs r6, #1
	rsbs r6, r6, #0
	str r6, [sp, #0x70]
	movs r0, #1
	str r0, [sp, #0x80]
_080B1384:
	movs r1, #0x85
	lsls r1, r1, #4
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #4
	bne _080B13A4
	ldr r2, _080B13A0 @ =0x000008E3
	adds r1, r7, r2
	ldrb r0, [r1]
	adds r0, #1
	b _080B13B0
	.align 2, 0
_080B139C: .4byte 0x00000864
_080B13A0: .4byte 0x000008E3
_080B13A4:
	cmp r0, #3
	bne _080B13B2
	ldr r3, _080B13BC @ =0x000008E3
	adds r1, r7, r3
	ldrb r0, [r1]
	subs r0, #1
_080B13B0:
	strb r0, [r1]
_080B13B2:
	ldr r4, [sp, #0x70]
	adds r4, #1
	str r4, [sp, #0x70]
	b _080B1B0C
	.align 2, 0
_080B13BC: .4byte 0x000008E3
_080B13C0:
	ldr r5, [sp, #0x84]
	cmp r5, #0
	bne _080B13C8
	b _080B1B0C
_080B13C8:
	movs r6, #0
	mov sl, r6
	ldr r0, _080B13F4 @ =0x00000848
	adds r0, r0, r7
	mov r8, r0
_080B13D2:
	mov r1, sl
	lsls r0, r1, #2
	ldr r2, _080B13F4 @ =0x00000848
	adds r1, r7, r2
	adds r1, r1, r0
	ldr r1, [r1]
	subs r1, #1
	adds r4, r0, #0
	cmp r1, #4
	bls _080B13E8
	b _080B158E
_080B13E8:
	lsls r0, r1, #2
	ldr r1, _080B13F8 @ =_080B13FC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080B13F4: .4byte 0x00000848
_080B13F8: .4byte _080B13FC
_080B13FC: @ jump table
	.4byte _080B1410 @ case 0
	.4byte _080B1458 @ case 1
	.4byte _080B14EC @ case 2
	.4byte _080B154C @ case 3
	.4byte _080B14B0 @ case 4
_080B1410:
	ldr r5, [sp, #0xa8]
	adds r3, r5, r4
	ldr r1, [r3]
	adds r1, #1
	str r1, [r3]
	mov r0, sp
	adds r0, r0, r4
	adds r0, #0xc
	ldr r0, [r0]
	asrs r0, r0, #1
	cmp r1, r0
	beq _080B142A
	b _080B158E
_080B142A:
	ldr r6, _080B1450 @ =0x00000848
	adds r0, r7, r6
	adds r0, r0, r4
	movs r1, #2
	str r1, [r0]
	ldr r1, _080B1454 @ =0x0000091A
	adds r0, r7, r1
	add r0, sl
	movs r2, #0
	movs r1, #1
	strb r1, [r0]
	str r2, [r3]
	movs r2, #0x87
	lsls r2, r2, #4
	adds r0, r7, r2
	adds r0, r0, r4
	str r1, [r0]
	b _080B158E
	.align 2, 0
_080B1450: .4byte 0x00000848
_080B1454: .4byte 0x0000091A
_080B1458:
	ldr r5, [sp, #0xa8]
	adds r3, r5, r4
	ldr r1, [r3]
	adds r1, #1
	str r1, [r3]
	mov r0, sp
	adds r0, r0, r4
	adds r0, #0xc
	ldr r0, [r0]
	asrs r0, r0, #1
	cmp r1, r0
	beq _080B1472
	b _080B158E
_080B1472:
	ldr r6, _080B14A4 @ =0x00000848
	adds r0, r7, r6
	adds r0, r0, r4
	movs r1, #4
	str r1, [r0]
	ldr r0, _080B14A8 @ =0x0000091A
	adds r1, r7, r0
	add r1, sl
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	str r2, [r3]
	movs r1, #0x87
	lsls r1, r1, #4
	adds r0, r7, r1
	adds r0, r0, r4
	movs r1, #2
	str r1, [r0]
	ldr r2, _080B14AC @ =0x00000814
	adds r0, r7, r2
	movs r1, #0xa6
	bl sub_8008B6C
	b _080B158E
	.align 2, 0
_080B14A4: .4byte 0x00000848
_080B14A8: .4byte 0x0000091A
_080B14AC: .4byte 0x00000814
_080B14B0:
	ldr r0, [sp, #0xac]
	add r0, sl
	ldrb r0, [r0]
	cmp r0, #0
	beq _080B158E
	ldr r3, [sp, #0xa8]
	adds r1, r3, r4
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
	cmp r0, #0x78
	bne _080B158E
	movs r0, #0
	str r0, [r1]
	ldr r5, _080B14E4 @ =0x00000848
	adds r0, r7, r5
	adds r0, r0, r4
	movs r1, #3
	str r1, [r0]
	ldr r6, _080B14E8 @ =0x0000091A
	adds r0, r7, r6
	add r0, sl
	movs r1, #1
	strb r1, [r0]
	b _080B158E
	.align 2, 0
_080B14E4: .4byte 0x00000848
_080B14E8: .4byte 0x0000091A
_080B14EC:
	ldr r0, _080B1534 @ =0x000008E1
	adds r1, r7, r0
	add r1, sl
	ldrb r0, [r1]
	subs r0, #1
	movs r2, #0
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x70
	bne _080B158E
	ldr r1, _080B1538 @ =0x00000848
	adds r0, r7, r1
	adds r0, r0, r4
	str r2, [r0]
	ldr r2, _080B153C @ =0x0000091A
	adds r0, r7, r2
	add r0, sl
	movs r2, #1
	strb r2, [r0]
	ldr r3, _080B1540 @ =0x0000085C
	adds r0, r7, r3
	adds r0, r0, r4
	movs r1, #2
	str r1, [r0]
	ldr r4, _080B1544 @ =0x0000091F
	adds r0, r7, r4
	add r0, sl
	strb r2, [r0]
	ldr r5, _080B1548 @ =0x0000081C
	adds r0, r7, r5
	movs r1, #0xbc
	bl sub_8008B6C
	b _080B158E
	.align 2, 0
_080B1534: .4byte 0x000008E1
_080B1538: .4byte 0x00000848
_080B153C: .4byte 0x0000091A
_080B1540: .4byte 0x0000085C
_080B1544: .4byte 0x0000091F
_080B1548: .4byte 0x0000081C
_080B154C:
	ldr r6, _080B15DC @ =0x000008E1
	adds r1, r7, r6
	add r1, sl
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xa8
	bne _080B158E
	ldr r1, _080B15E0 @ =0x00000848
	adds r0, r7, r1
	adds r0, r0, r4
	movs r1, #5
	str r1, [r0]
	ldr r2, _080B15E4 @ =0x0000091A
	adds r0, r7, r2
	add r0, sl
	movs r1, #1
	strb r1, [r0]
	ldr r3, _080B15E8 @ =0x0000085C
	adds r0, r7, r3
	adds r0, r0, r4
	str r1, [r0]
	ldr r4, _080B15EC @ =0x0000091F
	adds r0, r7, r4
	add r0, sl
	strb r1, [r0]
	ldr r5, _080B15F0 @ =0x00000814
	adds r0, r7, r5
	movs r1, #0xc7
	bl sub_8008B6C
_080B158E:
	movs r6, #1
	add sl, r6
	mov r0, sl
	cmp r0, #4
	bgt _080B159A
	b _080B13D2
_080B159A:
	ldr r1, [sp, #0x74]
	cmp r1, #0
	bne _080B15FC
	movs r2, #0
	mov sl, r2
	mov r3, r8
	ldr r0, [r3]
	cmp r0, #5
	bne _080B15C2
	ldr r4, _080B15E0 @ =0x00000848
	adds r1, r7, r4
_080B15B0:
	adds r1, #4
	movs r5, #1
	add sl, r5
	mov r6, sl
	cmp r6, #4
	bgt _080B15C2
	ldr r0, [r1]
	cmp r0, #5
	beq _080B15B0
_080B15C2:
	mov r0, sl
	cmp r0, #5
	beq _080B15CA
	b _080B16F4
_080B15CA:
	movs r1, #1
	str r1, [sp, #0x74]
	ldr r2, _080B15F4 @ =0x00000844
	adds r0, r7, r2
	str r1, [r0]
	ldr r3, _080B15F8 @ =0x00000929
	adds r0, r7, r3
	strb r1, [r0]
	b _080B16F4
	.align 2, 0
_080B15DC: .4byte 0x000008E1
_080B15E0: .4byte 0x00000848
_080B15E4: .4byte 0x0000091A
_080B15E8: .4byte 0x0000085C
_080B15EC: .4byte 0x0000091F
_080B15F0: .4byte 0x00000814
_080B15F4: .4byte 0x00000844
_080B15F8: .4byte 0x00000929
_080B15FC:
	ldr r6, _080B1614 @ =0x00000844
	adds r5, r7, r6
	ldr r4, [r5]
	cmp r4, #1
	beq _080B1618
	cmp r4, #1
	ble _080B16F4
	cmp r4, #2
	beq _080B166C
	cmp r4, #3
	beq _080B16C8
	b _080B16F4
	.align 2, 0
_080B1614: .4byte 0x00000844
_080B1618:
	movs r1, #0x8e
	lsls r1, r1, #4
	adds r0, r7, r1
	ldrb r1, [r0]
	subs r1, #2
	movs r6, #0
	strb r1, [r0]
	adds r0, r7, #0
	bl sub_80B34DC
	ldr r2, _080B1650 @ =0x00000884
	adds r0, r7, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _080B1658
	movs r0, #3
	str r0, [r5]
	ldr r3, _080B1654 @ =0x00000929
	adds r0, r7, r3
	strb r4, [r0]
	movs r5, #0x87
	lsls r5, r5, #4
	adds r0, r7, r5
	str r6, [r0]
	ldr r6, [sp, #0xac]
	strb r4, [r6]
	b _080B16AE
	.align 2, 0
_080B1650: .4byte 0x00000884
_080B1654: .4byte 0x00000929
_080B1658:
	cmp r0, #2
	bne _080B16F4
	str r6, [r5]
	ldr r2, _080B1668 @ =0x00000929
	adds r0, r7, r2
	strb r4, [r0]
	b _080B16F4
	.align 2, 0
_080B1668: .4byte 0x00000929
_080B166C:
	movs r3, #0x8e
	lsls r3, r3, #4
	adds r1, r7, r3
	ldrb r0, [r1]
	adds r0, #2
	movs r4, #0
	strb r0, [r1]
	adds r0, r7, #0
	bl sub_80B34DC
	ldr r6, _080B16BC @ =0x00000884
	adds r1, r7, r6
	ldr r0, [r1]
	cmp r0, #0
	beq _080B16F4
	cmp r0, #5
	beq _080B16F4
	movs r0, #3
	str r0, [r5]
	ldr r2, _080B16C0 @ =0x00000929
	adds r0, r7, r2
	movs r3, #1
	strb r3, [r0]
	ldr r1, [r1]
	lsls r2, r1, #2
	movs r5, #0x87
	lsls r5, r5, #4
	adds r0, r7, r5
	adds r0, r0, r2
	str r4, [r0]
	ldr r6, [sp, #0xac]
	adds r1, r6, r1
	strb r3, [r1]
_080B16AE:
	ldr r1, _080B16C4 @ =0x00000814
	adds r0, r7, r1
	movs r1, #0x6c
	bl sub_8008B6C
	b _080B16F4
	.align 2, 0
_080B16BC: .4byte 0x00000884
_080B16C0: .4byte 0x00000929
_080B16C4: .4byte 0x00000814
_080B16C8:
	ldr r2, [sp, #0x78]
	adds r2, #1
	str r2, [sp, #0x78]
	cmp r2, #0x1e
	ble _080B16F4
	ldr r3, _080B16E0 @ =0x00000884
	adds r0, r7, r3
	ldr r0, [r0]
	cmp r0, #4
	beq _080B16E4
	movs r0, #2
	b _080B16E6
	.align 2, 0
_080B16E0: .4byte 0x00000884
_080B16E4:
	movs r0, #1
_080B16E6:
	str r0, [r5]
	ldr r4, _080B170C @ =0x00000929
	adds r1, r7, r4
	movs r0, #1
	strb r0, [r1]
	movs r5, #0
	str r5, [sp, #0x78]
_080B16F4:
	movs r6, #1
	str r6, [sp, #0x8c]
	movs r0, #0
	mov sl, r0
	mov r1, r8
	ldr r0, [r1]
	cmp r0, #0
	beq _080B1710
	movs r2, #0
	str r2, [sp, #0x8c]
	b _080B1B0C
	.align 2, 0
_080B170C: .4byte 0x00000929
_080B1710:
	movs r3, #1
	add sl, r3
	mov r4, sl
	cmp r4, #4
	ble _080B171C
	b _080B1B0C
_080B171C:
	lsls r0, r4, #2
	ldr r5, _080B1730 @ =0x00000848
	adds r1, r7, r5
	adds r1, r1, r0
	ldr r0, [r1]
	cmp r0, #0
	beq _080B1710
	movs r6, #0
	str r6, [sp, #0x8c]
	b _080B1B0C
	.align 2, 0
_080B1730: .4byte 0x00000848
_080B1734:
	ldr r0, [sp, #0x88]
	cmp r0, #0
	bne _080B173C
	b _080B1B0C
_080B173C:
	ldr r1, _080B17B4 @ =0x00000848
	adds r1, r1, r7
	mov r8, r1
	ldr r2, [sp, #0x70]
	cmp r2, #0
	bne _080B1790
	movs r3, #1
	str r3, [sp, #0x70]
	movs r0, #0x78
	str r0, [sp, #0xc]
	movs r1, #0xd2
	str r1, [sp, #0x10]
	movs r0, #0xb4
	str r0, [sp, #0x14]
	str r1, [sp, #0x18]
	movs r0, #0x3c
	str r0, [sp, #0x1c]
	ldr r4, _080B17B8 @ =0x00000884
	adds r1, r7, r4
	movs r0, #4
	str r0, [r1]
	movs r5, #0x8e
	lsls r5, r5, #4
	adds r1, r7, r5
	movs r2, #0
	movs r0, #0xa8
	strb r0, [r1]
	ldr r6, _080B17BC @ =0x00000844
	adds r0, r7, r6
	str r2, [r0]
	ldr r1, _080B17C0 @ =0x00000929
	adds r0, r7, r1
	strb r3, [r0]
	movs r3, #0
	str r3, [sp, #0x78]
	ldr r1, [sp, #0xac]
	adds r0, r1, #0
	adds r0, #4
_080B1788:
	strb r2, [r0]
	subs r0, #1
	cmp r0, r1
	bge _080B1788
_080B1790:
	movs r4, #0
	mov sl, r4
_080B1794:
	mov r5, sl
	lsls r0, r5, #2
	ldr r6, _080B17B4 @ =0x00000848
	adds r1, r7, r6
	adds r1, r1, r0
	ldr r1, [r1]
	subs r1, #1
	adds r4, r0, #0
	cmp r1, #4
	bls _080B17AA
	b _080B199E
_080B17AA:
	lsls r0, r1, #2
	ldr r1, _080B17C4 @ =_080B17C8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080B17B4: .4byte 0x00000848
_080B17B8: .4byte 0x00000884
_080B17BC: .4byte 0x00000844
_080B17C0: .4byte 0x00000929
_080B17C4: .4byte _080B17C8
_080B17C8: @ jump table
	.4byte _080B17DC @ case 0
	.4byte _080B1820 @ case 1
	.4byte _080B1924 @ case 2
	.4byte _080B18B4 @ case 3
	.4byte _080B1980 @ case 4
_080B17DC:
	ldr r0, [sp, #0xa8]
	adds r2, r0, r4
	ldr r0, [r2]
	adds r0, #1
	str r0, [r2]
	mov r1, sp
	adds r1, r1, r4
	adds r1, #0xc
	ldr r1, [r1]
	cmp r0, r1
	beq _080B17F4
	b _080B199E
_080B17F4:
	movs r0, #0
	str r0, [r2]
	ldr r1, _080B1818 @ =0x00000848
	adds r0, r7, r1
	adds r0, r0, r4
	movs r1, #2
	str r1, [r0]
	ldr r2, _080B181C @ =0x0000091A
	adds r0, r7, r2
	add r0, sl
	movs r1, #1
	strb r1, [r0]
	movs r3, #0x87
	lsls r3, r3, #4
	adds r0, r7, r3
	adds r0, r0, r4
	str r1, [r0]
	b _080B199E
	.align 2, 0
_080B1818: .4byte 0x00000848
_080B181C: .4byte 0x0000091A
_080B1820:
	ldr r5, [sp, #0xa8]
	adds r2, r5, r4
	ldr r0, [r2]
	adds r0, #1
	str r0, [r2]
	ldr r6, [sp, #0xb0]
	adds r1, r6, r4
	ldr r1, [r1]
	cmp r0, r1
	bne _080B1862
	movs r0, #0
	str r0, [r2]
	ldr r1, _080B189C @ =0x00000848
	adds r0, r7, r1
	adds r0, r0, r4
	movs r1, #4
	str r1, [r0]
	ldr r2, _080B18A0 @ =0x0000091A
	adds r0, r7, r2
	add r0, sl
	movs r1, #1
	strb r1, [r0]
	movs r3, #0x87
	lsls r3, r3, #4
	adds r0, r7, r3
	adds r0, r0, r4
	movs r1, #2
	str r1, [r0]
	ldr r5, _080B18A4 @ =0x00000814
	adds r0, r7, r5
	movs r1, #0xa6
	bl sub_8008B6C
_080B1862:
	ldr r0, [sp, #0xac]
	add r0, sl
	ldrb r0, [r0]
	cmp r0, #0
	bne _080B186E
	b _080B199E
_080B186E:
	ldr r6, _080B189C @ =0x00000848
	adds r0, r7, r6
	adds r0, r0, r4
	movs r1, #0
	str r1, [r0]
	ldr r1, _080B18A0 @ =0x0000091A
	adds r0, r7, r1
	add r0, sl
	movs r2, #1
	strb r2, [r0]
	ldr r3, _080B18A8 @ =0x0000085C
	adds r0, r7, r3
	adds r0, r0, r4
	movs r1, #2
	str r1, [r0]
	ldr r4, _080B18AC @ =0x0000091F
	adds r0, r7, r4
	add r0, sl
	strb r2, [r0]
	ldr r5, _080B18B0 @ =0x0000081C
	adds r0, r7, r5
	b _080B1962
	.align 2, 0
_080B189C: .4byte 0x00000848
_080B18A0: .4byte 0x0000091A
_080B18A4: .4byte 0x00000814
_080B18A8: .4byte 0x0000085C
_080B18AC: .4byte 0x0000091F
_080B18B0: .4byte 0x0000081C
_080B18B4:
	ldr r6, _080B1910 @ =0x000008E1
	adds r1, r7, r6
	add r1, sl
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xa8
	bne _080B18F6
	ldr r1, _080B1914 @ =0x00000848
	adds r0, r7, r1
	adds r0, r0, r4
	movs r1, #5
	str r1, [r0]
	ldr r2, _080B1918 @ =0x0000091A
	adds r0, r7, r2
	add r0, sl
	movs r1, #1
	strb r1, [r0]
	ldr r3, _080B191C @ =0x0000085C
	adds r0, r7, r3
	adds r0, r0, r4
	str r1, [r0]
	ldr r5, _080B1920 @ =0x0000091F
	adds r0, r7, r5
	add r0, sl
	strb r1, [r0]
	subs r6, #0xcd
	adds r0, r7, r6
	movs r1, #0xc7
	bl sub_8008B6C
_080B18F6:
	ldr r0, [sp, #0xac]
	add r0, sl
	ldrb r0, [r0]
	cmp r0, #0
	beq _080B199E
	ldr r1, _080B1914 @ =0x00000848
	adds r0, r7, r1
	adds r0, r0, r4
	movs r1, #3
	str r1, [r0]
	ldr r2, _080B1918 @ =0x0000091A
	adds r0, r7, r2
	b _080B1998
	.align 2, 0
_080B1910: .4byte 0x000008E1
_080B1914: .4byte 0x00000848
_080B1918: .4byte 0x0000091A
_080B191C: .4byte 0x0000085C
_080B1920: .4byte 0x0000091F
_080B1924:
	ldr r3, _080B196C @ =0x000008E1
	adds r1, r7, r3
	add r1, sl
	ldrb r0, [r1]
	subs r0, #1
	movs r2, #0
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x70
	bne _080B199E
	ldr r5, _080B1970 @ =0x00000848
	adds r0, r7, r5
	adds r0, r0, r4
	str r2, [r0]
	ldr r6, _080B1974 @ =0x0000091A
	adds r0, r7, r6
	add r0, sl
	movs r2, #1
	strb r2, [r0]
	ldr r1, _080B1978 @ =0x0000085C
	adds r0, r7, r1
	adds r0, r0, r4
	movs r1, #2
	str r1, [r0]
	adds r3, #0x3e
	adds r0, r7, r3
	add r0, sl
	strb r2, [r0]
	ldr r4, _080B197C @ =0x0000081C
	adds r0, r7, r4
_080B1962:
	movs r1, #0xbc
	bl sub_8008B6C
	b _080B199E
	.align 2, 0
_080B196C: .4byte 0x000008E1
_080B1970: .4byte 0x00000848
_080B1974: .4byte 0x0000091A
_080B1978: .4byte 0x0000085C
_080B197C: .4byte 0x0000081C
_080B1980:
	ldr r0, [sp, #0xac]
	add r0, sl
	ldrb r0, [r0]
	cmp r0, #0
	beq _080B199E
	ldr r5, _080B19C0 @ =0x00000848
	adds r0, r7, r5
	adds r0, r0, r4
	movs r1, #3
	str r1, [r0]
	ldr r6, _080B19C4 @ =0x0000091A
	adds r0, r7, r6
_080B1998:
	add r0, sl
	movs r1, #1
	strb r1, [r0]
_080B199E:
	movs r0, #1
	add sl, r0
	mov r1, sl
	cmp r1, #4
	bgt _080B19AA
	b _080B1794
_080B19AA:
	ldr r2, _080B19C8 @ =0x00000844
	adds r5, r7, r2
	ldr r4, [r5]
	cmp r4, #1
	beq _080B1A24
	cmp r4, #1
	bgt _080B19CC
	cmp r4, #0
	beq _080B19D6
	b _080B1AD4
	.align 2, 0
_080B19C0: .4byte 0x00000848
_080B19C4: .4byte 0x0000091A
_080B19C8: .4byte 0x00000844
_080B19CC:
	cmp r4, #2
	beq _080B1A60
	cmp r4, #3
	beq _080B1A9C
	b _080B1AD4
_080B19D6:
	ldr r3, [sp, #0x7c]
	lsls r0, r3, #2
	ldr r6, [sp, #0xb4]
	adds r3, r6, r0
	ldr r2, [r3]
	lsls r1, r2, #2
	ldr r6, _080B1A18 @ =0x00000848
	adds r0, r7, r6
	adds r0, r0, r1
	ldr r0, [r0]
	cmp r0, #1
	ble _080B1AD4
	movs r0, #3
	str r0, [r5]
	ldr r1, _080B1A1C @ =0x00000929
	adds r0, r7, r1
	movs r1, #1
	strb r1, [r0]
	ldr r5, [sp, #0xac]
	adds r0, r5, r2
	strb r1, [r0]
	ldr r1, [r3]
	lsls r1, r1, #2
	adds r6, #0x28
	adds r0, r7, r6
	adds r0, r0, r1
	str r4, [r0]
	ldr r1, _080B1A20 @ =0x00000814
	adds r0, r7, r1
	movs r1, #0x6c
	bl sub_8008B6C
	b _080B1AD4
	.align 2, 0
_080B1A18: .4byte 0x00000848
_080B1A1C: .4byte 0x00000929
_080B1A20: .4byte 0x00000814
_080B1A24:
	movs r2, #0x8e
	lsls r2, r2, #4
	adds r1, r7, r2
	ldrb r0, [r1]
	subs r0, #2
	movs r6, #0
	strb r0, [r1]
	adds r0, r7, #0
	bl sub_80B34DC
	ldr r3, _080B1A58 @ =0x00000884
	adds r1, r7, r3
	ldr r2, [sp, #0x7c]
	lsls r0, r2, #2
	ldr r3, [sp, #0xb4]
	adds r0, r3, r0
	ldr r1, [r1]
	ldr r0, [r0]
	cmp r1, r0
	bne _080B1AD4
	str r6, [r5]
	ldr r5, _080B1A5C @ =0x00000929
	adds r0, r7, r5
	strb r4, [r0]
	b _080B1AD4
	.align 2, 0
_080B1A58: .4byte 0x00000884
_080B1A5C: .4byte 0x00000929
_080B1A60:
	movs r6, #0x8e
	lsls r6, r6, #4
	adds r1, r7, r6
	ldrb r0, [r1]
	adds r0, #2
	movs r4, #0
	strb r0, [r1]
	adds r0, r7, #0
	bl sub_80B34DC
	ldr r0, _080B1A94 @ =0x00000884
	adds r1, r7, r0
	ldr r2, [sp, #0x7c]
	lsls r0, r2, #2
	ldr r3, [sp, #0xb4]
	adds r0, r3, r0
	ldr r1, [r1]
	ldr r0, [r0]
	cmp r1, r0
	bne _080B1AD4
	str r4, [r5]
	ldr r4, _080B1A98 @ =0x00000929
	adds r1, r7, r4
	movs r0, #1
	strb r0, [r1]
	b _080B1AD4
	.align 2, 0
_080B1A94: .4byte 0x00000884
_080B1A98: .4byte 0x00000929
_080B1A9C:
	ldr r6, [sp, #0x78]
	adds r6, #1
	str r6, [sp, #0x78]
	cmp r6, #0x1e
	bne _080B1AD4
	movs r0, #0
	str r0, [sp, #0x78]
	ldr r1, [sp, #0x7c]
	cmp r1, #0
	beq _080B1AB4
	cmp r1, #2
	bne _080B1AB8
_080B1AB4:
	movs r0, #1
	b _080B1AC4
_080B1AB8:
	ldr r2, [sp, #0x7c]
	cmp r2, #1
	beq _080B1AC2
	cmp r2, #3
	bne _080B1AC6
_080B1AC2:
	movs r0, #2
_080B1AC4:
	str r0, [r5]
_080B1AC6:
	ldr r3, _080B1AEC @ =0x00000929
	adds r1, r7, r3
	movs r0, #1
	strb r0, [r1]
	ldr r4, [sp, #0x7c]
	adds r4, #1
	str r4, [sp, #0x7c]
_080B1AD4:
	movs r5, #1
	str r5, [sp, #0x90]
	movs r6, #0
	mov sl, r6
	mov r1, r8
	ldr r0, [r1]
	cmp r0, #0
	beq _080B1AF0
	movs r2, #0
	str r2, [sp, #0x90]
	b _080B1B0C
	.align 2, 0
_080B1AEC: .4byte 0x00000929
_080B1AF0:
	movs r3, #1
	add sl, r3
	mov r4, sl
	cmp r4, #4
	bgt _080B1B0C
	lsls r0, r4, #2
	ldr r5, _080B1B38 @ =0x00000848
	adds r1, r7, r5
	adds r1, r1, r0
	ldr r0, [r1]
	cmp r0, #0
	beq _080B1AF0
	movs r6, #0
	str r6, [sp, #0x90]
_080B1B0C:
	adds r0, r7, #0
	bl sub_80B3948
	adds r0, r7, #0
	bl sub_80AF814
	ldr r1, _080B1B3C @ =0x00000838
	adds r0, r7, r1
_080B1B1C:
	ldr r0, [r0]
	cmp r0, #0
	bne _080B1B26
	bl sub_080B0CC0
_080B1B26:
	add sp, #0xb8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B1B38: .4byte 0x00000848
_080B1B3C: .4byte 0x00000838

	thumb_func_start sub_80B1B40
sub_80B1B40: @ 0x080B1B40
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x64
	adds r7, r0, #0
	ldr r1, _080B1C14 @ =0x0000090E
	adds r0, r7, r1
	ldrb r0, [r0]
	add r1, sp, #0xc
	movs r2, #0
	bl sub_804EC84
	add r0, sp, #0x10
	ldr r4, _080B1C18 @ =gUnknown_0810782C
	adds r1, r4, #0
	movs r2, #6
	bl sub_80D3994
	add r0, sp, #0x18
	ldr r6, _080B1C1C @ =gUnknown_08107834
	adds r1, r6, #0
	movs r2, #0xe
	bl sub_80D3994
	add r0, sp, #0x28
	ldr r2, _080B1C20 @ =gUnknown_08107844
	mov r8, r2
	mov r1, r8
	movs r2, #0xa
	bl sub_80D3994
	add r5, sp, #0x34
	ldr r1, [r4]
	str r1, [sp, #0x34]
	ldrh r0, [r4, #4]
	strh r0, [r5, #4]
	str r1, [sp, #0x34]
	strh r0, [r5, #4]
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_80D3ADC
	adds r0, r5, #0
	add r1, sp, #0xc
	bl sub_80D3ADC
	adds r0, r5, #0
	mov r1, r8
	bl sub_80D3ADC
	movs r3, #1
	str r3, [sp, #0x5c]
	movs r0, #0
	str r0, [sp, #0x60]
	adds r0, r7, #0
	bl sub_8008918
	add r2, sp, #0x58
	movs r3, #0xba
	lsls r3, r3, #5
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0]
	movs r0, #0x83
	lsls r0, r0, #3
	adds r4, r7, r0
	ldr r0, [r4]
	bl sub_8050E5C
	ldr r4, [r4]
	mov sl, r4
	adds r0, r7, #0
	bl sub_80088DC
	mov sb, r0
	adds r0, r7, #0
	bl sub_8008920
	mov r8, r0
	adds r0, r7, #0
	bl sub_8008918
	adds r6, r0, #0
	adds r0, r7, #0
	bl sub_8008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl sub_800894C
	movs r2, #0x81
	lsls r2, r2, #4
	adds r1, r7, r2
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, sl
	mov r1, sb
	mov r2, r8
	adds r3, r6, #0
	bl sub_8050D3C
	b _080B1D0C
	.align 2, 0
_080B1C14: .4byte 0x0000090E
_080B1C18: .4byte gUnknown_0810782C
_080B1C1C: .4byte gUnknown_08107834
_080B1C20: .4byte gUnknown_08107844
_080B1C24:
	adds r0, r7, #0
	bl sub_80087C8
	adds r0, r7, #0
	bl sub_80088B8
	movs r0, #0x83
	lsls r0, r0, #3
	adds r4, r7, r0
	ldr r0, [r4]
	bl sub_8050D34
	mov sl, r0
	ldr r4, [r4]
	mov sb, r4
	adds r0, r7, #0
	bl sub_80088DC
	mov r8, r0
	adds r0, r7, #0
	bl sub_8008920
	adds r6, r0, #0
	adds r0, r7, #0
	bl sub_8008918
	adds r5, r0, #0
	adds r0, r7, #0
	bl sub_8008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl sub_800894C
	movs r2, #0x81
	lsls r2, r2, #4
	adds r1, r7, r2
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, sb
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl sub_8050D3C
	cmp r0, #6
	bhi _080B1D0C
	lsls r0, r0, #2
	ldr r1, _080B1C90 @ =_080B1C94
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080B1C90: .4byte _080B1C94
_080B1C94: @ jump table
	.4byte _080B1CB0 @ case 0
	.4byte _080B1CF0 @ case 1
	.4byte _080B1CF0 @ case 2
	.4byte _080B1CD2 @ case 3
	.4byte _080B1CF0 @ case 4
	.4byte _080B1CF0 @ case 5
	.4byte _080B1CF0 @ case 6
_080B1CB0:
	ldr r3, [sp, #0x5c]
	cmp r3, #0
	bne _080B1CC4
	ldr r0, _080B1CC0 @ =0x00000838
	adds r1, r7, r0
	movs r0, #2
	str r0, [r1]
	b _080B1D0C
	.align 2, 0
_080B1CC0: .4byte 0x00000838
_080B1CC4:
	movs r1, #0x83
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r0, [r0]
	bl sub_8050D5C
	b _080B1D0C
_080B1CD2:
	mov r2, sl
	cmp r2, #1
	bne _080B1CF0
	movs r3, #0x83
	lsls r3, r3, #3
	adds r4, r7, r3
	ldr r0, [r4]
	add r1, sp, #0x34
	bl sub_8050D8C
	ldr r0, [r4]
	bl sub_8050DD8
	movs r0, #0
	str r0, [sp, #0x5c]
_080B1CF0:
	ldr r1, [sp, #0x60]
	adds r1, #1
	str r1, [sp, #0x60]
	cmp r1, #0x78
	ble _080B1D0C
	movs r2, #0x83
	lsls r2, r2, #3
	adds r4, r7, r2
	ldr r0, [r4]
	bl sub_8050DE4
	ldr r0, [r4]
	bl sub_8050D74
_080B1D0C:
	adds r0, r7, #0
	bl sub_80AF814
	ldr r3, _080B1D30 @ =0x00000838
	adds r0, r7, r3
	ldr r0, [r0]
	cmp r0, #1
	bne _080B1D1E
	b _080B1C24
_080B1D1E:
	add sp, #0x64
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B1D30: .4byte 0x00000838

	thumb_func_start sub_80B1D34
sub_80B1D34: @ 0x080B1D34
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r4, r0, #0
	movs r6, #0
	bl sub_8008918
	mov r2, sp
	movs r3, #0xb2
	lsls r3, r3, #5
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0]
	adds r0, r4, #0
	bl sub_80AF814
	ldr r1, _080B1D8C @ =0x00000814
	adds r0, r4, r1
	movs r1, #0xbb
	bl sub_8008B6C
	ldr r3, _080B1D90 @ =0x00000838
	adds r0, r4, r3
	ldr r0, [r0]
	cmp r0, #2
	bne _080B1D84
	adds r5, r4, r3
	movs r7, #3
_080B1D6A:
	adds r0, r4, #0
	bl sub_80087C8
	adds r0, r4, #0
	bl sub_80AF814
	adds r6, #1
	cmp r6, #0x78
	ble _080B1D7E
	str r7, [r5]
_080B1D7E:
	ldr r0, [r5]
	cmp r0, #2
	beq _080B1D6A
_080B1D84:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B1D8C: .4byte 0x00000814
_080B1D90: .4byte 0x00000838

	thumb_func_start sub_80B1D94
sub_80B1D94: @ 0x080B1D94
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x3c
	adds r6, r0, #0
	movs r0, #0
	str r0, [sp, #0x30]
	movs r1, #0
	movs r2, #1
	ldr r3, _080B1E84 @ =0x0000091A
	adds r4, r6, r3
	ldr r5, _080B1E88 @ =0x00000848
	adds r3, r6, r5
_080B1DB2:
	stm r3!, {r2}
	adds r0, r4, r1
	strb r2, [r0]
	adds r1, #1
	cmp r1, #4
	ble _080B1DB2
	movs r0, #0x14
	bl sub_80005D4
	movs r7, #0x84
	lsls r7, r7, #3
	adds r1, r6, r7
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r4, r0, #0
	movs r0, #0x96
	lsls r0, r0, #3
	adds r5, r6, r0
	ldr r0, [r5]
	cmp r4, r0
	beq _080B1DE8
	bl sub_8000608
_080B1DE8:
	str r4, [r5]
	adds r0, r4, #0
	movs r1, #0
	bl sub_805E860
	movs r1, #0x97
	lsls r1, r1, #3
	adds r4, r6, r1
	ldr r0, [r5]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sp
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	mov r0, sp
	mov r1, sp
	movs r2, #0x20
	bl sub_80D3994
	mov r0, sp
	ldm r0!, {r2, r3, r5}
	stm r4!, {r2, r3, r5}
	ldm r0!, {r1, r2, r7}
	stm r4!, {r1, r2, r7}
	ldm r0!, {r3, r5}
	stm r4!, {r3, r5}
	adds r0, r6, #0
	bl sub_8008910
	adds r5, r0, #0
	movs r7, #0x98
	lsls r7, r7, #3
	adds r4, r6, r7
	ldr r7, [r4]
	movs r1, #0x89
	lsls r1, r1, #4
	adds r0, r6, r1
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080B1E50
	ldrh r3, [r4, #4]
_080B1E50:
	str r5, [sp, #0x34]
	lsls r2, r2, #5
	ldr r4, _080B1E8C @ =0x06010000
	adds r2, r2, r4
	mov r0, sp
	adds r1, r7, #0
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080B1E90
	cmp r1, #0
	beq _080B1E7A
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B1E7A:
	ldr r3, [sp, #0x34]
	ldr r0, [r3, #4]
	adds r0, #0x10
	str r0, [r3, #4]
	b _080B1F60
	.align 2, 0
_080B1E84: .4byte 0x0000091A
_080B1E88: .4byte 0x00000848
_080B1E8C: .4byte 0x06010000
_080B1E90:
	str r1, [sp, #0x38]
	movs r0, #1
	str r0, [sp, #0x24]
	ldr r4, [sp, #0x34]
	ldr r0, [r4]
	adds r5, r1, #0
	subs r0, r5, r0
	asrs r4, r0, #4
	str r4, [sp, #0x20]
	add r1, sp, #0x24
	add r0, sp, #0x20
	cmp r4, #1
	bhs _080B1EAC
	adds r0, r1, #0
_080B1EAC:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B1ECA
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080B1ECE
	mov r0, sb
	bl sub_80D3BC0
	b _080B1ECE
_080B1ECA:
	movs r0, #0
	mov sb, r0
_080B1ECE:
	adds r4, r0, #0
	mov r8, r4
	ldr r7, [sp, #0x34]
	ldr r2, [r7]
	mov r3, r8
	b _080B1EEE
_080B1EDA:
	cmp r3, #0
	beq _080B1EEA
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B1EEA:
	adds r2, #0x10
	adds r3, #0x10
_080B1EEE:
	ldr r0, [sp, #0x38]
	cmp r2, r0
	bne _080B1EDA
	adds r4, r3, #0
	ldr r0, [sp, #0x24]
	cmp r0, #1
	bne _080B1F10
	cmp r4, #0
	beq _080B1F0C
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B1F0C:
	adds r4, #0x10
	b _080B1F38
_080B1F10:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _080B1F36
_080B1F18:
	cmp r2, #0
	beq _080B1F28
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B1F28:
	movs r5, #1
	rsbs r5, r5, #0
	add ip, r5
	adds r2, #0x10
	mov r7, ip
	cmp r7, #0
	bne _080B1F18
_080B1F36:
	adds r4, r2, #0
_080B1F38:
	ldr r0, [sp, #0x34]
	ldr r2, [r0, #4]
	ldr r0, [r0]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B1F4A
_080B1F44:
	adds r1, #0x10
	cmp r1, r2
	bne _080B1F44
_080B1F4A:
	cmp r0, #0
	beq _080B1F52
	bl sub_80D0260
_080B1F52:
	mov r0, sb
	add r0, r8
	mov r1, r8
	ldr r2, [sp, #0x34]
	str r1, [r2]
	str r4, [r2, #4]
	str r0, [r2, #0xc]
_080B1F60:
	adds r0, r6, #0
	bl sub_8008910
	adds r4, r0, #0
	movs r3, #0x99
	lsls r3, r3, #3
	adds r2, r6, r3
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080B1F7A
	ldrh r3, [r2, #4]
_080B1F7A:
	str r4, [sp, #0x34]
	mov r0, sp
	ldr r2, _080B1FA8 @ =0x05000260
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _080B1FAC
	cmp r1, #0
	beq _080B1F9E
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B1F9E:
	ldr r1, [sp, #0x34]
	ldr r0, [r1, #4]
	adds r0, #0x10
	str r0, [r1, #4]
	b _080B2080
	.align 2, 0
_080B1FA8: .4byte 0x05000260
_080B1FAC:
	str r1, [sp, #0x38]
	movs r0, #1
	str r0, [sp, #0x2c]
	ldr r2, [sp, #0x34]
	ldr r0, [r2]
	adds r3, r1, #0
	subs r0, r3, r0
	asrs r4, r0, #4
	str r4, [sp, #0x28]
	add r1, sp, #0x2c
	add r0, sp, #0x28
	cmp r4, #1
	bhs _080B1FC8
	adds r0, r1, #0
_080B1FC8:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B1FE6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080B1FEA
	mov r0, sb
	bl sub_80D3BC0
	b _080B1FEA
_080B1FE6:
	movs r0, #0
	mov sb, r0
_080B1FEA:
	adds r4, r0, #0
	mov r8, r4
	ldr r4, [sp, #0x34]
	ldr r2, [r4]
	mov r3, r8
	ldr r5, [sp, #0x38]
	cmp r2, r5
	beq _080B2014
_080B1FFA:
	cmp r3, #0
	beq _080B200A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B200A:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0x38]
	cmp r2, r7
	bne _080B1FFA
_080B2014:
	adds r4, r3, #0
	ldr r0, [sp, #0x2c]
	cmp r0, #1
	bne _080B2030
	cmp r4, #0
	beq _080B202C
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B202C:
	adds r4, #0x10
	b _080B2058
_080B2030:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _080B2056
_080B2038:
	cmp r2, #0
	beq _080B2048
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B2048:
	movs r5, #1
	rsbs r5, r5, #0
	add ip, r5
	adds r2, #0x10
	mov r7, ip
	cmp r7, #0
	bne _080B2038
_080B2056:
	adds r4, r2, #0
_080B2058:
	ldr r0, [sp, #0x34]
	ldr r2, [r0, #4]
	ldr r0, [r0]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B206A
_080B2064:
	adds r1, #0x10
	cmp r1, r2
	bne _080B2064
_080B206A:
	cmp r0, #0
	beq _080B2072
	bl sub_80D0260
_080B2072:
	mov r0, sb
	add r0, r8
	mov r1, r8
	ldr r2, [sp, #0x34]
	str r1, [r2]
	str r4, [r2, #4]
	str r0, [r2, #0xc]
_080B2080:
	adds r0, r6, #0
	bl sub_80AF814
	ldr r3, _080B208C @ =0x00000838
	adds r0, r6, r3
	b _080B20F8
	.align 2, 0
_080B208C: .4byte 0x00000838
_080B2090:
	adds r0, r6, #0
	bl sub_80087C8
	adds r0, r6, #0
	bl sub_80088B8
	ldr r4, _080B20AC @ =0x0000083C
	adds r0, r6, r4
	ldr r0, [r0]
	cmp r0, #0
	beq _080B20B0
	cmp r0, #1
	beq _080B20DA
	b _080B20EE
	.align 2, 0
_080B20AC: .4byte 0x0000083C
_080B20B0:
	adds r0, r6, #0
	bl sub_80B3518
	adds r0, r6, #0
	bl sub_80B36B4
	adds r0, r6, #0
	bl sub_80B3948
	ldr r5, [sp, #0x30]
	adds r5, #1
	str r5, [sp, #0x30]
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_80B0708
	cmp r5, #0x3c
	bne _080B20EE
	movs r7, #0
	str r7, [sp, #0x30]
	b _080B20EE
_080B20DA:
	adds r0, r6, #0
	bl sub_80088CC
	movs r1, #8
	ands r1, r0
	cmp r1, #0
	beq _080B20EE
	adds r0, r6, #0
	bl sub_80B3BA8
_080B20EE:
	adds r0, r6, #0
	bl sub_80AF814
	ldr r1, _080B2110 @ =0x00000838
	adds r0, r6, r1
_080B20F8:
	ldr r0, [r0]
	cmp r0, #3
	beq _080B2090
	add sp, #0x3c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B2110: .4byte 0x00000838

	thumb_func_start sub_80B2114
sub_80B2114: @ 0x080B2114
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x13c
	mov sl, r0
	movs r0, #0
	mov sb, r0
	ldr r0, _080B2338 @ =0x00000844
	add r0, sl
	mov r1, sb
	str r1, [r0]
	ldr r1, _080B233C @ =0x00000929
	add r1, sl
	movs r0, #1
	strb r0, [r1]
	add r2, sp, #0x1c
	mov r8, r2
	mov r3, sp
	adds r3, #0x28
	str r3, [sp, #0x110]
	add r6, sp, #0x2c
	mov r4, sp
	adds r4, #0x64
	str r4, [sp, #0x128]
	mov r5, sp
	adds r5, #0x34
	str r5, [sp, #0x11c]
	mov r7, sp
	adds r7, #0x44
	str r7, [sp, #0x124]
	mov r0, sp
	adds r0, #0x30
	str r0, [sp, #0x118]
	movs r3, #0
	ldr r5, _080B2340 @ =0x0000091A
	add r5, sl
	movs r2, #1
	ldr r1, _080B2344 @ =0x00000848
	add r1, sl
	ldr r4, _080B2348 @ =0x0000091F
	add r4, sl
_080B216A:
	ldr r0, [r1]
	cmp r0, #5
	beq _080B2178
	str r3, [r1]
	mov r7, sb
	adds r0, r5, r7
	strb r2, [r0]
_080B2178:
	str r3, [r1, #0x14]
	mov r7, sb
	adds r0, r4, r7
	strb r2, [r0]
	adds r1, #4
	movs r0, #1
	add sb, r0
	mov r7, sb
	cmp r7, #4
	ble _080B216A
	ldr r2, _080B234C @ =0x0000090C
	add r2, sl
	ldrb r0, [r2]
	subs r0, #5
	strb r0, [r2]
	movs r3, #0x91
	lsls r3, r3, #4
	add r3, sl
	ldrb r0, [r2]
	ldr r4, _080B2350 @ =0x0000090D
	add r4, sl
	ldrb r1, [r4]
	subs r0, r0, r1
	str r0, [r3]
	cmp r0, #0
	bge _080B21B0
	movs r0, #0
	str r0, [r3]
_080B21B0:
	ldrb r0, [r2]
	cmp r0, #0x63
	bls _080B21BA
	movs r0, #0x63
	strb r0, [r2]
_080B21BA:
	ldrb r0, [r4]
	cmp r0, #0x63
	bls _080B21C4
	movs r0, #0x63
	strb r0, [r4]
_080B21C4:
	ldr r0, [r3]
	cmp r0, #0x63
	ble _080B21CE
	movs r0, #0x63
	str r0, [r3]
_080B21CE:
	ldrb r0, [r2]
	str r0, [sp, #0x28]
	ldrb r0, [r4]
	str r0, [sp, #0x2c]
	ldr r0, [r3]
	str r0, [sp, #0x30]
	mov r0, r8
	ldr r1, [sp, #0x110]
	movs r2, #0xc
	bl sub_80D3994
	add r0, sp, #0x10
	mov r1, r8
	movs r2, #0xc
	bl sub_80D3994
	movs r0, #0
	str r0, [sp, #0xe0]
	mov r0, sl
	bl sub_8008918
	movs r2, #0xba
	lsls r2, r2, #5
	adds r1, r2, #0
	ldr r3, [sp, #0x110]
	strh r1, [r3]
	strh r1, [r0]
	movs r4, #0x83
	lsls r4, r4, #3
	add r4, sl
	ldr r0, [r4]
	cmp r0, #0
	beq _080B221A
	cmp r0, #0
	beq _080B221A
	movs r1, #3
	bl sub_8050D0C
_080B221A:
	movs r0, #0
	str r0, [r4]
	movs r0, #4
	bl sub_80005D4
	adds r4, r0, #0
	ldr r0, [sp, #0x110]
	bl sub_800835C
	adds r0, r6, #0
	bl sub_800770C
	movs r0, #0
	str r0, [sp]
	ldr r5, [sp, #0x110]
	str r5, [sp, #4]
	str r6, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x18
	movs r3, #0
	bl sub_8050CC0
	movs r5, #0x83
	lsls r5, r5, #3
	add r5, sl
	adds r4, r0, #0
	ldr r0, [r5]
	cmp r4, r0
	beq _080B2260
	cmp r0, #0
	beq _080B2260
	movs r1, #3
	bl sub_8050D0C
_080B2260:
	str r4, [r5]
	adds r0, r6, #0
	movs r1, #2
	bl sub_8007714
	ldr r0, [sp, #0x110]
	movs r1, #2
	bl sub_8008364
	movs r0, #0x83
	lsls r0, r0, #3
	add r0, sl
	ldr r0, [r0]
	mov sb, r0
	mov r0, sl
	bl sub_80088DC
	mov r8, r0
	mov r0, sl
	bl sub_8008920
	adds r6, r0, #0
	mov r0, sl
	bl sub_8008918
	adds r5, r0, #0
	mov r0, sl
	bl sub_8008940
	adds r4, r0, #0
	mov r0, sl
	bl sub_800894C
	movs r1, #0x81
	lsls r1, r1, #4
	add r1, sl
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, sb
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl sub_8050D3C
	movs r0, #0
	ldr r1, [sp, #0x110]
	movs r2, #0
	bl sub_804EC84
	movs r6, #0
	mov sb, r6
	ldr r7, [sp, #0x110]
	str r7, [sp, #0xe4]
	movs r0, #0x8d
	lsls r0, r0, #4
	add r0, sl
	str r0, [sp, #0xe8]
_080B22D4:
	mov r1, sb
	lsls r4, r1, #6
	adds r0, r4, r1
	lsls r5, r0, #2
	mov r2, sl
	adds r1, r5, r2
	add r0, sp, #0x64
	movs r3, #4
	strh r3, [r0]
	movs r7, #2
	ldr r6, [sp, #0x128]
	strh r7, [r6, #2]
	ldr r0, [sp, #0x64]
	movs r2, #0x88
	lsls r2, r2, #1
	adds r1, r1, r2
	movs r2, #0
	bl sub_804E7A0
	mov r3, sb
	cmp r3, #1
	beq _080B2354
	ldr r0, [sp, #0xe4]
	bl sub_80D3B78
	lsls r0, r0, #3
	movs r2, #0x20
	subs r2, r2, r0
	mov r6, sl
	adds r1, r5, r6
	movs r3, #5
	add r0, sp, #0x68
	movs r7, #4
	strh r7, [r0]
	movs r5, #2
	strh r5, [r0, #2]
	ldr r0, [sp, #0x68]
	movs r6, #0x88
	lsls r6, r6, #1
	adds r1, r1, r6
	ldr r7, [sp, #0xe4]
	str r7, [sp]
	movs r5, #0
	str r5, [sp, #4]
	str r3, [sp, #8]
	movs r3, #0
	bl sub_804E958
	b _080B2384
	.align 2, 0
_080B2338: .4byte 0x00000844
_080B233C: .4byte 0x00000929
_080B2340: .4byte 0x0000091A
_080B2344: .4byte 0x00000848
_080B2348: .4byte 0x0000091F
_080B234C: .4byte 0x0000090C
_080B2350: .4byte 0x0000090D
_080B2354:
	ldr r0, [sp, #0xe4]
	bl sub_80D3B78
	lsls r0, r0, #3
	movs r2, #0x20
	subs r2, r2, r0
	movs r1, #7
	add r0, sp, #0x6c
	movs r6, #4
	strh r6, [r0]
	movs r7, #2
	strh r7, [r0, #2]
	ldr r0, [sp, #0x6c]
	ldr r3, [sp, #0xe4]
	str r3, [sp]
	movs r5, #0
	str r5, [sp, #4]
	str r1, [sp, #8]
	movs r1, #0x85
	lsls r1, r1, #2
	add r1, sl
	movs r3, #0
	bl sub_804E958
_080B2384:
	mov r0, sl
	bl sub_8008910
	adds r6, r0, #0
	add r4, sb
	lsls r4, r4, #2
	add r4, sl
	movs r7, #0x88
	lsls r7, r7, #1
	adds r4, r4, r7
	ldr r0, [sp, #0xe8]
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r2, r0, #0
	mov r1, sb
	lsls r5, r1, #3
	adds r2, r5, r2
	lsls r2, r2, #5
	ldr r3, _080B23E8 @ =0x06010000
	adds r2, r2, r3
	add r0, sp, #0x34
	adds r1, r4, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_8008F0C
	ldr r4, [sp, #0x11c]
	str r4, [sp, #0xec]
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	str r5, [sp, #0x114]
	cmp r1, r0
	beq _080B23EC
	cmp r1, #0
	beq _080B23D8
	adds r0, r1, #0
	adds r1, r4, #0
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B23D8:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	mov r3, sb
	adds r3, #1
	str r3, [sp, #0x10c]
	b _080B24B8
	.align 2, 0
_080B23E8: .4byte 0x06010000
_080B23EC:
	str r1, [sp, #0x130]
	movs r0, #1
	str r0, [sp, #0x74]
	ldr r0, [r6]
	adds r4, r1, #0
	subs r0, r4, r0
	asrs r4, r0, #4
	str r4, [sp, #0x70]
	add r1, sp, #0x74
	add r0, sp, #0x70
	cmp r4, #1
	bhs _080B2406
	adds r0, r1, #0
_080B2406:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B2424
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080B2428
	mov r0, r8
	bl sub_80D3BC0
	b _080B2428
_080B2424:
	movs r0, #0
	mov r8, r0
_080B2428:
	adds r4, r0, #0
	str r4, [sp, #0x134]
	ldr r2, [r6]
	adds r3, r4, #0
	mov r5, sb
	adds r5, #1
	str r5, [sp, #0x10c]
	ldr r7, [sp, #0x130]
	cmp r2, r7
	beq _080B2456
_080B243C:
	cmp r3, #0
	beq _080B244C
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B244C:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x130]
	cmp r2, r0
	bne _080B243C
_080B2456:
	adds r4, r3, #0
	ldr r0, [sp, #0x74]
	cmp r0, #1
	bne _080B2472
	cmp r4, #0
	beq _080B246E
	adds r0, r4, #0
	ldr r1, [sp, #0xec]
	ldm r1!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B246E:
	adds r4, #0x10
	b _080B2494
_080B2472:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080B2492
_080B247A:
	cmp r2, #0
	beq _080B248A
	adds r0, r2, #0
	ldr r1, [sp, #0xec]
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B248A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B247A
_080B2492:
	adds r4, r2, #0
_080B2494:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B24A4
_080B249E:
	adds r1, #0x10
	cmp r1, r2
	bne _080B249E
_080B24A4:
	cmp r0, #0
	beq _080B24AC
	bl sub_80D0260
_080B24AC:
	ldr r0, [sp, #0x134]
	add r0, r8
	ldr r7, [sp, #0x134]
	str r7, [r6]
	str r4, [r6, #4]
	str r0, [r6, #0xc]
_080B24B8:
	ldr r0, [sp, #0x114]
	movs r2, #0x89
	lsls r2, r2, #3
	adds r1, r0, r2
	add r1, sl
	movs r0, #0
	movs r2, #8
	bl sub_8008EB8
	mov r3, sb
	cmp r3, #2
	beq _080B250C
	ldr r4, [sp, #0x114]
	add r4, sl
	movs r5, #0x89
	lsls r5, r5, #3
	adds r4, r4, r5
	ldr r6, [sp, #0xe8]
	ldr r1, [r6, #4]
	adds r0, r6, #0
	bl sub_8007D4C
	adds r3, r0, #0
	ldr r7, [sp, #0x114]
	adds r3, r3, r7
	mov r0, sb
	lsls r2, r0, #4
	adds r2, #0x6d
	movs r1, #2
	str r1, [sp]
	movs r5, #0
	str r5, [sp, #4]
	str r1, [sp, #8]
	movs r0, #1
	str r0, [sp, #0xc]
	add r0, sp, #0x78
	movs r1, #0x78
	bl sub_804EA94
	ldr r0, [sp, #0x78]
	ldr r1, [sp, #0x7c]
	b _080B253C
_080B250C:
	movs r4, #0x8b
	lsls r4, r4, #3
	add r4, sl
	ldr r6, [sp, #0xe8]
	ldr r1, [r6, #4]
	adds r0, r6, #0
	bl sub_8007D4C
	adds r3, r0, #0
	adds r3, #0x10
	mov r7, sb
	str r7, [sp]
	movs r0, #0
	str r0, [sp, #4]
	str r7, [sp, #8]
	movs r0, #1
	str r0, [sp, #0xc]
	add r0, sp, #0x80
	movs r1, #0xb8
	movs r2, #0x8d
	bl sub_804EA94
	ldr r0, [sp, #0x80]
	ldr r1, [sp, #0x84]
_080B253C:
	str r0, [r4]
	str r1, [r4, #4]
	ldr r1, [sp, #0x10c]
	mov sb, r1
	cmp r1, #2
	bgt _080B254A
	b _080B22D4
_080B254A:
	movs r0, #0x14
	bl sub_80005D4
	ldr r1, _080B2668 @ =0x0000042C
	add r1, sl
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r4, r0, #0
	movs r7, #0x8c
	lsls r7, r7, #3
	add r7, sl
	ldr r0, [r7]
	cmp r4, r0
	beq _080B2572
	bl sub_8000608
_080B2572:
	str r4, [r7]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r4]
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	strh r0, [r4, #8]
	str r0, [r4, #0xc]
	strb r1, [r4, #0x10]
	strb r1, [r4, #0x11]
	str r0, [r4, #0x14]
	strb r1, [r4, #0x18]
	ldr r6, _080B266C @ =0x00000464
	add r6, sl
	ldr r0, [r6]
	cmp r4, r0
	beq _080B25A2
	bl sub_8000608
_080B25A2:
	str r4, [r6]
	ldr r0, [r7]
	movs r1, #1
	bl sub_805E860
	ldr r1, [r6]
	movs r0, #0x70
	strh r0, [r1]
	ldr r1, [r6]
	movs r0, #0x75
	strh r0, [r1, #2]
	ldr r4, [r6]
	movs r5, #0x8d
	lsls r5, r5, #4
	add r5, sl
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	adds r0, #0x24
	strh r0, [r4, #6]
	ldr r1, [r6]
	movs r0, #9
	strh r0, [r1, #4]
	ldr r0, [r6]
	movs r2, #1
	mov r8, r2
	mov r3, r8
	strb r3, [r0, #0x18]
	movs r4, #0x8d
	lsls r4, r4, #3
	add r4, sl
	ldr r0, [r7]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x44
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	ldr r0, [sp, #0x124]
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	ldr r0, [sp, #0x124]
	ldm r0!, {r1, r6, r7}
	stm r4!, {r1, r6, r7}
	ldm r0!, {r2, r3, r6}
	stm r4!, {r2, r3, r6}
	ldm r0!, {r1, r7}
	stm r4!, {r1, r7}
	mov r0, sl
	bl sub_8008910
	adds r6, r0, #0
	movs r4, #0x8e
	lsls r4, r4, #3
	add r4, sl
	ldr r7, [r4]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080B2636
	ldrh r3, [r4, #4]
_080B2636:
	lsls r2, r2, #5
	ldr r4, _080B2670 @ =0x06010480
	adds r2, r2, r4
	add r0, sp, #0x30
	adds r1, r7, #0
	bl sub_8008F0C
	ldr r5, [sp, #0x118]
	mov sb, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B2674
	cmp r1, #0
	beq _080B2660
	adds r0, r1, #0
	adds r1, r5, #0
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B2660:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B273A
	.align 2, 0
_080B2668: .4byte 0x0000042C
_080B266C: .4byte 0x00000464
_080B2670: .4byte 0x06010480
_080B2674:
	str r1, [sp, #0x134]
	mov r4, r8
	str r4, [sp, #0x8c]
	ldr r0, [r6]
	adds r5, r1, #0
	subs r0, r5, r0
	asrs r4, r0, #4
	str r4, [sp, #0x88]
	add r1, sp, #0x8c
	add r0, sp, #0x88
	cmp r4, #1
	bhs _080B268E
	adds r0, r1, #0
_080B268E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B26AC
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080B26B0
	mov r0, r8
	bl sub_80D3BC0
	b _080B26B0
_080B26AC:
	movs r0, #0
	mov r8, r0
_080B26B0:
	adds r5, r0, #0
	str r5, [sp, #0x138]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x134]
	cmp r2, r7
	beq _080B26D8
_080B26BE:
	cmp r3, #0
	beq _080B26CE
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B26CE:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x134]
	cmp r2, r0
	bne _080B26BE
_080B26D8:
	adds r5, r3, #0
	ldr r0, [sp, #0x8c]
	cmp r0, #1
	bne _080B26F4
	cmp r5, #0
	beq _080B26F0
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B26F0:
	adds r5, #0x10
	b _080B2716
_080B26F4:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080B2714
_080B26FC:
	cmp r2, #0
	beq _080B270C
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B270C:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B26FC
_080B2714:
	adds r5, r2, #0
_080B2716:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B2726
_080B2720:
	adds r1, #0x10
	cmp r1, r2
	bne _080B2720
_080B2726:
	cmp r0, #0
	beq _080B272E
	bl sub_80D0260
_080B272E:
	ldr r0, [sp, #0x138]
	add r0, r8
	ldr r7, [sp, #0x138]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B273A:
	mov r0, sl
	bl sub_8008910
	adds r4, r0, #0
	movs r2, #0x8f
	lsls r2, r2, #3
	add r2, sl
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080B2754
	ldrh r3, [r2, #4]
_080B2754:
	adds r6, r4, #0
	add r0, sp, #0x30
	ldr r2, _080B2784 @ =0x05000320
	bl sub_8008F0C
	ldr r0, [sp, #0x118]
	mov sb, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B2788
	cmp r1, #0
	beq _080B277A
	adds r0, r1, #0
	ldr r1, [sp, #0x118]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B277A:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B2850
	.align 2, 0
_080B2784: .4byte 0x05000320
_080B2788:
	str r1, [sp, #0x134]
	movs r0, #1
	add r1, sp, #0x94
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x134]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x90
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080B27A4
	adds r0, r1, #0
_080B27A4:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B27C2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080B27C6
	mov r0, r8
	bl sub_80D3BC0
	b _080B27C6
_080B27C2:
	movs r0, #0
	mov r8, r0
_080B27C6:
	adds r5, r0, #0
	str r5, [sp, #0x138]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x134]
	cmp r2, r7
	beq _080B27EE
_080B27D4:
	cmp r3, #0
	beq _080B27E4
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B27E4:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x134]
	cmp r2, r0
	bne _080B27D4
_080B27EE:
	adds r5, r3, #0
	ldr r1, [sp, #0x94]
	cmp r1, #1
	bne _080B280A
	cmp r5, #0
	beq _080B2806
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B2806:
	adds r5, #0x10
	b _080B282C
_080B280A:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080B282A
_080B2812:
	cmp r2, #0
	beq _080B2822
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B2822:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B2812
_080B282A:
	adds r5, r2, #0
_080B282C:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B283C
_080B2836:
	adds r1, #0x10
	cmp r1, r2
	bne _080B2836
_080B283C:
	cmp r0, #0
	beq _080B2844
	bl sub_80D0260
_080B2844:
	ldr r0, [sp, #0x138]
	add r0, r8
	ldr r7, [sp, #0x138]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B2850:
	movs r0, #0x14
	bl sub_80005D4
	movs r1, #0x86
	lsls r1, r1, #3
	add r1, sl
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r4, r0, #0
	movs r7, #0x91
	lsls r7, r7, #3
	add r7, sl
	ldr r0, [r7]
	cmp r4, r0
	beq _080B287A
	bl sub_8000608
_080B287A:
	str r4, [r7]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r4]
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	strh r0, [r4, #8]
	str r0, [r4, #0xc]
	strb r1, [r4, #0x10]
	strb r1, [r4, #0x11]
	str r0, [r4, #0x14]
	strb r1, [r4, #0x18]
	ldr r6, _080B2970 @ =0x0000048C
	add r6, sl
	ldr r0, [r6]
	cmp r4, r0
	beq _080B28AA
	bl sub_8000608
_080B28AA:
	str r4, [r6]
	ldr r0, [r7]
	movs r1, #0
	bl sub_805E860
	ldr r1, [r6]
	movs r0, #0x68
	strh r0, [r1]
	ldr r1, [r6]
	movs r0, #0x7d
	strh r0, [r1, #2]
	ldr r4, [r6]
	movs r5, #0x8d
	lsls r5, r5, #4
	add r5, sl
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	adds r0, #0x28
	strh r0, [r4, #6]
	ldr r1, [r6]
	movs r0, #0xb
	strh r0, [r1, #4]
	ldr r0, [r6]
	movs r1, #1
	mov r8, r1
	mov r2, r8
	strb r2, [r0, #0x18]
	movs r4, #0x92
	lsls r4, r4, #3
	add r4, sl
	ldr r0, [r7]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x30
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	ldr r0, [sp, #0x118]
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	ldr r0, [sp, #0x118]
	ldm r0!, {r3, r6, r7}
	stm r4!, {r3, r6, r7}
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r6, r7}
	stm r4!, {r6, r7}
	mov r0, sl
	bl sub_8008910
	adds r6, r0, #0
	movs r4, #0x93
	lsls r4, r4, #3
	add r4, sl
	ldr r7, [r4]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080B293E
	ldrh r3, [r4, #4]
_080B293E:
	lsls r2, r2, #5
	ldr r0, _080B2974 @ =0x06010500
	adds r2, r2, r0
	ldr r0, [sp, #0x118]
	adds r1, r7, #0
	bl sub_8008F0C
	ldr r1, [sp, #0x118]
	mov sb, r1
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B2978
	cmp r1, #0
	beq _080B2968
	adds r0, r1, #0
	ldr r1, [sp, #0x118]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B2968:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B2A3C
	.align 2, 0
_080B2970: .4byte 0x0000048C
_080B2974: .4byte 0x06010500
_080B2978:
	str r1, [sp, #0x134]
	add r1, sp, #0x9c
	mov r5, r8
	str r5, [r1]
	ldr r0, [r6]
	ldr r7, [sp, #0x134]
	subs r0, r7, r0
	asrs r4, r0, #4
	add r0, sp, #0x98
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080B2994
	adds r0, r1, #0
_080B2994:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B29B2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080B29B6
	mov r0, r8
	bl sub_80D3BC0
	b _080B29B6
_080B29B2:
	movs r0, #0
	mov r8, r0
_080B29B6:
	adds r5, r0, #0
	str r5, [sp, #0x138]
	ldr r2, [r6]
	adds r3, r5, #0
	b _080B29D4
_080B29C0:
	cmp r3, #0
	beq _080B29D0
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B29D0:
	adds r2, #0x10
	adds r3, #0x10
_080B29D4:
	ldr r0, [sp, #0x134]
	cmp r2, r0
	bne _080B29C0
	adds r5, r3, #0
	ldr r1, [sp, #0x9c]
	cmp r1, #1
	bne _080B29F6
	cmp r5, #0
	beq _080B29F2
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B29F2:
	adds r5, #0x10
	b _080B2A18
_080B29F6:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080B2A16
_080B29FE:
	cmp r2, #0
	beq _080B2A0E
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B2A0E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B29FE
_080B2A16:
	adds r5, r2, #0
_080B2A18:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B2A28
_080B2A22:
	adds r1, #0x10
	cmp r1, r2
	bne _080B2A22
_080B2A28:
	cmp r0, #0
	beq _080B2A30
	bl sub_80D0260
_080B2A30:
	ldr r0, [sp, #0x138]
	add r0, r8
	ldr r7, [sp, #0x138]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B2A3C:
	mov r0, sl
	bl sub_8008910
	adds r4, r0, #0
	movs r2, #0x94
	lsls r2, r2, #3
	add r2, sl
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080B2A56
	ldrh r3, [r2, #4]
_080B2A56:
	adds r6, r4, #0
	add r0, sp, #0x30
	ldr r2, _080B2A84 @ =0x05000360
	bl sub_8008F0C
	ldr r0, [sp, #0x118]
	mov sb, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B2A88
	cmp r1, #0
	beq _080B2A7C
	adds r0, r1, #0
	ldr r1, [sp, #0x118]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B2A7C:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B2B50
	.align 2, 0
_080B2A84: .4byte 0x05000360
_080B2A88:
	str r1, [sp, #0x134]
	movs r0, #1
	add r1, sp, #0xa4
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x134]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0xa0
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080B2AA4
	adds r0, r1, #0
_080B2AA4:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B2AC2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080B2AC6
	mov r0, r8
	bl sub_80D3BC0
	b _080B2AC6
_080B2AC2:
	movs r0, #0
	mov r8, r0
_080B2AC6:
	adds r5, r0, #0
	str r5, [sp, #0x138]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x134]
	cmp r2, r7
	beq _080B2AEE
_080B2AD4:
	cmp r3, #0
	beq _080B2AE4
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B2AE4:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x134]
	cmp r2, r0
	bne _080B2AD4
_080B2AEE:
	adds r5, r3, #0
	ldr r1, [sp, #0xa4]
	cmp r1, #1
	bne _080B2B0A
	cmp r5, #0
	beq _080B2B06
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B2B06:
	adds r5, #0x10
	b _080B2B2C
_080B2B0A:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080B2B2A
_080B2B12:
	cmp r2, #0
	beq _080B2B22
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B2B22:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B2B12
_080B2B2A:
	adds r5, r2, #0
_080B2B2C:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B2B3C
_080B2B36:
	adds r1, #0x10
	cmp r1, r2
	bne _080B2B36
_080B2B3C:
	cmp r0, #0
	beq _080B2B44
	bl sub_80D0260
_080B2B44:
	ldr r0, [sp, #0x138]
	add r0, r8
	ldr r7, [sp, #0x138]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B2B50:
	movs r0, #0x91
	lsls r0, r0, #4
	add r0, sl
	ldr r1, _080B2B90 @ =0x0000090E
	add r1, sl
	ldr r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	bge _080B2B98
	movs r0, #0x14
	bl sub_80005D4
	movs r1, #0x87
	lsls r1, r1, #3
	add r1, sl
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r5, r0, #0
	ldr r4, _080B2B94 @ =0x000007E4
	add r4, sl
	ldr r0, [r4]
	cmp r5, r0
	beq _080B2B8A
	bl sub_8000608
_080B2B8A:
	str r5, [r4]
	b _080B2BC8
	.align 2, 0
_080B2B90: .4byte 0x0000090E
_080B2B94: .4byte 0x000007E4
_080B2B98:
	movs r0, #0x14
	bl sub_80005D4
	ldr r1, _080B2CB8 @ =0x00000434
	add r1, sl
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r5, r0, #0
	ldr r4, _080B2CBC @ =0x000007E4
	add r4, sl
	ldr r0, [r4]
	cmp r5, r0
	beq _080B2BBE
	bl sub_8000608
_080B2BBE:
	str r5, [r4]
	ldr r1, _080B2CC0 @ =0x0000092C
	add r1, sl
	movs r0, #1
	strb r0, [r1]
_080B2BC8:
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r4]
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	strh r0, [r4, #8]
	str r0, [r4, #0xc]
	strb r1, [r4, #0x10]
	strb r1, [r4, #0x11]
	str r0, [r4, #0x14]
	strb r1, [r4, #0x18]
	movs r7, #0xfd
	lsls r7, r7, #3
	add r7, sl
	ldr r0, [r7]
	cmp r4, r0
	beq _080B2BF8
	bl sub_8000608
_080B2BF8:
	str r4, [r7]
	ldr r6, _080B2CBC @ =0x000007E4
	add r6, sl
	ldr r0, [r6]
	movs r1, #0
	bl sub_805E860
	ldr r0, [r7]
	movs r1, #0x40
	strh r1, [r0]
	ldr r0, [r7]
	strh r1, [r0, #2]
	ldr r4, [r7]
	ldr r5, _080B2CC4 @ =0x000008D8
	add r5, sl
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	strh r0, [r4, #6]
	ldr r1, [r7]
	movs r0, #0xc
	strh r0, [r1, #4]
	ldr r0, [r7]
	movs r1, #1
	mov r8, r1
	mov r2, r8
	strb r2, [r0, #0x18]
	ldr r4, _080B2CC8 @ =0x000007EC
	add r4, sl
	ldr r0, [r6]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x30
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	ldr r0, [sp, #0x118]
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	ldr r0, [sp, #0x118]
	ldm r0!, {r3, r6, r7}
	stm r4!, {r3, r6, r7}
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r6, r7}
	stm r4!, {r6, r7}
	mov r0, sl
	bl sub_8008910
	adds r6, r0, #0
	ldr r4, _080B2CCC @ =0x000007F4
	add r4, sl
	ldr r7, [r4]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080B2C86
	ldrh r3, [r4, #4]
_080B2C86:
	lsls r2, r2, #5
	ldr r0, _080B2CD0 @ =0x06010000
	adds r2, r2, r0
	ldr r0, [sp, #0x118]
	adds r1, r7, #0
	bl sub_8008F0C
	ldr r1, [sp, #0x118]
	mov sb, r1
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B2CD4
	cmp r1, #0
	beq _080B2CB0
	adds r0, r1, #0
	ldr r1, [sp, #0x118]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B2CB0:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B2D98
	.align 2, 0
_080B2CB8: .4byte 0x00000434
_080B2CBC: .4byte 0x000007E4
_080B2CC0: .4byte 0x0000092C
_080B2CC4: .4byte 0x000008D8
_080B2CC8: .4byte 0x000007EC
_080B2CCC: .4byte 0x000007F4
_080B2CD0: .4byte 0x06010000
_080B2CD4:
	str r1, [sp, #0x134]
	add r1, sp, #0xac
	mov r5, r8
	str r5, [r1]
	ldr r0, [r6]
	ldr r7, [sp, #0x134]
	subs r0, r7, r0
	asrs r4, r0, #4
	add r0, sp, #0xa8
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080B2CF0
	adds r0, r1, #0
_080B2CF0:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B2D0E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080B2D12
	mov r0, r8
	bl sub_80D3BC0
	b _080B2D12
_080B2D0E:
	movs r0, #0
	mov r8, r0
_080B2D12:
	adds r5, r0, #0
	str r5, [sp, #0x138]
	ldr r2, [r6]
	adds r3, r5, #0
	b _080B2D30
_080B2D1C:
	cmp r3, #0
	beq _080B2D2C
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B2D2C:
	adds r2, #0x10
	adds r3, #0x10
_080B2D30:
	ldr r0, [sp, #0x134]
	cmp r2, r0
	bne _080B2D1C
	adds r5, r3, #0
	ldr r1, [sp, #0xac]
	cmp r1, #1
	bne _080B2D52
	cmp r5, #0
	beq _080B2D4E
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B2D4E:
	adds r5, #0x10
	b _080B2D74
_080B2D52:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080B2D72
_080B2D5A:
	cmp r2, #0
	beq _080B2D6A
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B2D6A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B2D5A
_080B2D72:
	adds r5, r2, #0
_080B2D74:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B2D84
_080B2D7E:
	adds r1, #0x10
	cmp r1, r2
	bne _080B2D7E
_080B2D84:
	cmp r0, #0
	beq _080B2D8C
	bl sub_80D0260
_080B2D8C:
	ldr r0, [sp, #0x138]
	add r0, r8
	ldr r7, [sp, #0x138]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B2D98:
	mov r0, sl
	bl sub_8008910
	adds r4, r0, #0
	ldr r2, _080B2DE0 @ =0x000007FC
	add r2, sl
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080B2DB0
	ldrh r3, [r2, #4]
_080B2DB0:
	adds r6, r4, #0
	add r0, sp, #0x30
	ldr r2, _080B2DE4 @ =0x05000380
	bl sub_8008F0C
	ldr r0, [sp, #0x118]
	mov sb, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B2DE8
	cmp r1, #0
	beq _080B2DD6
	adds r0, r1, #0
	ldr r1, [sp, #0x118]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B2DD6:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B2EB0
	.align 2, 0
_080B2DE0: .4byte 0x000007FC
_080B2DE4: .4byte 0x05000380
_080B2DE8:
	str r1, [sp, #0x134]
	movs r0, #1
	add r1, sp, #0xb4
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x134]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0xb0
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080B2E04
	adds r0, r1, #0
_080B2E04:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B2E22
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080B2E26
	mov r0, r8
	bl sub_80D3BC0
	b _080B2E26
_080B2E22:
	movs r0, #0
	mov r8, r0
_080B2E26:
	adds r5, r0, #0
	str r5, [sp, #0x138]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x134]
	cmp r2, r7
	beq _080B2E4E
_080B2E34:
	cmp r3, #0
	beq _080B2E44
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B2E44:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x134]
	cmp r2, r0
	bne _080B2E34
_080B2E4E:
	adds r5, r3, #0
	ldr r1, [sp, #0xb4]
	cmp r1, #1
	bne _080B2E6A
	cmp r5, #0
	beq _080B2E66
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B2E66:
	adds r5, #0x10
	b _080B2E8C
_080B2E6A:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080B2E8A
_080B2E72:
	cmp r2, #0
	beq _080B2E82
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B2E82:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B2E72
_080B2E8A:
	adds r5, r2, #0
_080B2E8C:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B2E9C
_080B2E96:
	adds r1, #0x10
	cmp r1, r2
	bne _080B2E96
_080B2E9C:
	cmp r0, #0
	beq _080B2EA4
	bl sub_80D0260
_080B2EA4:
	ldr r0, [sp, #0x138]
	add r0, r8
	ldr r7, [sp, #0x138]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B2EB0:
	mov r0, sl
	bl sub_80B0934
	ldr r0, _080B2EE8 @ =0x0000080C
	add r0, sl
	ldr r2, _080B2EEC @ =0x0000FFFF
	movs r1, #0xcd
	bl sub_8008C38
	mov r0, sl
	bl sub_80AF814
	movs r0, #0
	str r0, [sp, #0xf0]
	movs r1, #0
	str r1, [sp, #0xf4]
	ldr r1, [sp, #0x118]
	movs r2, #0
	adds r0, r1, #0
	adds r0, #8
_080B2ED8:
	str r2, [r0]
	subs r0, #4
	cmp r0, r1
	bge _080B2ED8
	movs r2, #0
	str r2, [sp, #0xf8]
	b _080B34BA
	.align 2, 0
_080B2EE8: .4byte 0x0000080C
_080B2EEC: .4byte 0x0000FFFF
_080B2EF0:
	mov r0, sl
	bl sub_80087C8
	mov r0, sl
	bl sub_80088B8
	movs r1, #0x84
	lsls r1, r1, #4
	add r1, sl
	ldr r0, [r1]
	cmp r0, #0
	bne _080B2F1C
	ldr r3, [sp, #0xf0]
	adds r3, #1
	str r3, [sp, #0xf0]
	cmp r3, #0x78
	beq _080B2F14
	b _080B34B4
_080B2F14:
	movs r4, #0
	str r4, [sp, #0xf0]
	movs r0, #1
	b _080B34B2
_080B2F1C:
	mov r0, sl
	bl sub_80088D4
	str r0, [sp, #0xfc]
	movs r4, #0x83
	lsls r4, r4, #3
	add r4, sl
	ldr r0, [r4]
	bl sub_8050D34
	adds r7, r0, #0
	ldr r4, [r4]
	mov sb, r4
	mov r0, sl
	bl sub_80088DC
	mov r8, r0
	mov r0, sl
	bl sub_8008920
	adds r6, r0, #0
	mov r0, sl
	bl sub_8008918
	adds r5, r0, #0
	mov r0, sl
	bl sub_8008940
	adds r4, r0, #0
	mov r0, sl
	bl sub_800894C
	movs r1, #0x81
	lsls r1, r1, #4
	add r1, sl
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, sb
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl sub_8050D3C
	cmp r0, #6
	bhi _080B2FD0
	lsls r0, r0, #2
	ldr r1, _080B2F84 @ =_080B2F88
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080B2F84: .4byte _080B2F88
_080B2F88: @ jump table
	.4byte _080B2FA4 @ case 0
	.4byte _080B2FD0 @ case 1
	.4byte _080B2FD0 @ case 2
	.4byte _080B2FB2 @ case 3
	.4byte _080B2FD0 @ case 4
	.4byte _080B2FD0 @ case 5
	.4byte _080B2FD0 @ case 6
_080B2FA4:
	movs r0, #0x83
	lsls r0, r0, #3
	add r0, sl
	ldr r0, [r0]
	bl sub_8050D5C
	b _080B2FD0
_080B2FB2:
	cmp r7, #1
	bne _080B2FD0
	movs r4, #0x83
	lsls r4, r4, #3
	add r4, sl
	ldr r0, [r4]
	ldr r1, _080B2FE8 @ =gUnknown_08107850
	bl sub_8050D8C
	ldr r0, [r4]
	bl sub_8050DD8
	ldr r0, _080B2FEC @ =0x0000092A
	add r0, sl
	strb r7, [r0]
_080B2FD0:
	movs r0, #0x84
	lsls r0, r0, #4
	add r0, sl
	ldr r0, [r0]
	cmp r0, #2
	bne _080B2FDE
	b _080B343C
_080B2FDE:
	cmp r0, #2
	bgt _080B2FF0
	cmp r0, #1
	beq _080B2FF8
	b _080B34B4
	.align 2, 0
_080B2FE8: .4byte gUnknown_08107850
_080B2FEC: .4byte 0x0000092A
_080B2FF0:
	cmp r0, #3
	bne _080B2FF6
	b _080B3494
_080B2FF6:
	b _080B34B4
_080B2FF8:
	ldr r0, _080B3094 @ =0x0000092A
	add r0, sl
	ldrb r0, [r0]
	cmp r0, #0
	bne _080B3004
	b _080B34B4
_080B3004:
	ldr r5, [sp, #0xe0]
	adds r5, #1
	str r5, [sp, #0xe0]
	ldr r6, [sp, #0xf8]
	lsls r6, r6, #2
	str r6, [sp, #0x108]
	cmp r5, #0x14
	beq _080B3016
	b _080B31F4
_080B3016:
	movs r7, #0
	str r7, [sp, #0xe0]
	ldr r0, [sp, #0x118]
	adds r4, r0, r6
	ldr r0, [r4]
	adds r0, #1
	str r0, [r4]
	ldr r0, _080B3098 @ =0x00000814
	add r0, sl
	movs r1, #0xa6
	bl sub_8008B6C
	ldr r0, [r4]
	ldr r1, [sp, #0x110]
	movs r2, #0
	bl sub_804EC84
	ldr r1, [sp, #0xf8]
	lsls r4, r1, #6
	adds r0, r4, r1
	lsls r5, r0, #2
	mov r2, sl
	adds r1, r5, r2
	add r0, sp, #0xb8
	movs r6, #4
	movs r7, #2
	strh r6, [r0]
	strh r7, [r0, #2]
	ldr r0, [r0]
	movs r3, #0x88
	lsls r3, r3, #1
	adds r1, r1, r3
	movs r2, #0
	bl sub_804E7A0
	ldr r0, [sp, #0xf8]
	cmp r0, #1
	beq _080B309C
	ldr r0, [sp, #0x110]
	bl sub_80D3B78
	lsls r0, r0, #3
	movs r2, #0x20
	subs r2, r2, r0
	mov r3, sl
	adds r1, r5, r3
	movs r3, #5
	add r0, sp, #0xbc
	strh r6, [r0]
	strh r7, [r0, #2]
	ldr r0, [r0]
	movs r5, #0x88
	lsls r5, r5, #1
	adds r1, r1, r5
	ldr r6, [sp, #0x110]
	str r6, [sp]
	ldr r7, [sp, #0xe0]
	str r7, [sp, #4]
	str r3, [sp, #8]
	movs r3, #0
	bl sub_804E958
	b _080B30C8
	.align 2, 0
_080B3094: .4byte 0x0000092A
_080B3098: .4byte 0x00000814
_080B309C:
	ldr r0, [sp, #0x110]
	bl sub_80D3B78
	lsls r0, r0, #3
	movs r2, #0x20
	subs r2, r2, r0
	movs r3, #7
	add r0, sp, #0xc0
	strh r6, [r0]
	strh r7, [r0, #2]
	ldr r0, [r0]
	movs r1, #0x85
	lsls r1, r1, #2
	add r1, sl
	ldr r5, [sp, #0x110]
	str r5, [sp]
	ldr r6, [sp, #0xe0]
	str r6, [sp, #4]
	str r3, [sp, #8]
	movs r3, #0
	bl sub_804E958
_080B30C8:
	mov r0, sl
	bl sub_8008910
	adds r5, r0, #0
	ldr r7, [sp, #0xf8]
	adds r4, r4, r7
	lsls r4, r4, #2
	add r4, sl
	movs r0, #0x88
	lsls r0, r0, #1
	adds r4, r4, r0
	movs r0, #0x8d
	lsls r0, r0, #4
	add r0, sl
	ldr r1, [r0, #4]
	bl sub_8007D4C
	lsls r2, r7, #3
	adds r2, r2, r0
	movs r3, #0x80
	lsls r3, r3, #1
	lsls r2, r2, #5
	ldr r1, _080B3128 @ =0x06010000
	adds r2, r2, r1
	add r0, sp, #0x3c
	adds r1, r4, #0
	bl sub_8008F0C
	add r2, sp, #0x3c
	mov sb, r2
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	mov r3, sb
	str r3, [sp, #0x120]
	cmp r1, r0
	beq _080B312C
	cmp r1, #0
	beq _080B3120
	adds r0, r1, #0
	adds r1, r3, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B3120:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080B31F4
	.align 2, 0
_080B3128: .4byte 0x06010000
_080B312C:
	str r1, [sp, #0x134]
	movs r0, #1
	add r1, sp, #0xc8
	str r0, [r1]
	ldr r0, [r5]
	ldr r2, [sp, #0x134]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0xc4
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080B3148
	adds r0, r1, #0
_080B3148:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B3166
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080B316A
	mov r0, r8
	bl sub_80D3BC0
	b _080B316A
_080B3166:
	movs r0, #0
	mov r8, r0
_080B316A:
	adds r6, r0, #0
	str r6, [sp, #0x138]
	ldr r2, [r5]
	adds r3, r6, #0
	ldr r4, [sp, #0x134]
	cmp r2, r4
	beq _080B3192
_080B3178:
	cmp r3, #0
	beq _080B3188
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B3188:
	adds r2, #0x10
	adds r3, #0x10
	ldr r6, [sp, #0x134]
	cmp r2, r6
	bne _080B3178
_080B3192:
	adds r6, r3, #0
	ldr r1, [sp, #0xc8]
	cmp r1, #1
	bne _080B31AE
	cmp r6, #0
	beq _080B31AA
	adds r0, r6, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B31AA:
	adds r6, #0x10
	b _080B31D0
_080B31AE:
	adds r3, r1, #0
	adds r2, r6, #0
	cmp r3, #0
	beq _080B31CE
_080B31B6:
	cmp r2, #0
	beq _080B31C6
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B31C6:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B31B6
_080B31CE:
	adds r6, r2, #0
_080B31D0:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B31E0
_080B31DA:
	adds r1, #0x10
	cmp r1, r2
	bne _080B31DA
_080B31E0:
	cmp r0, #0
	beq _080B31E8
	bl sub_80D0260
_080B31E8:
	ldr r0, [sp, #0x138]
	add r0, r8
	ldr r1, [sp, #0x138]
	str r1, [r5]
	str r6, [r5, #4]
	str r0, [r5, #0xc]
_080B31F4:
	ldr r2, [sp, #0x118]
	ldr r3, [sp, #0x108]
	adds r0, r2, r3
	adds r1, r3, #0
	add r1, sp
	adds r1, #0x10
	ldr r2, [r0]
	ldr r0, [r1]
	cmp r2, r0
	bne _080B320E
	ldr r4, [sp, #0xf8]
	adds r4, #1
	str r4, [sp, #0xf8]
_080B320E:
	movs r0, #9
	ldr r5, [sp, #0xfc]
	ands r0, r5
	cmp r0, #0
	bne _080B321A
	b _080B3418
_080B321A:
	movs r6, #0
	mov sb, r6
	mov r7, sp
	adds r7, #0x3c
	str r7, [sp, #0x120]
	mov r0, sp
	adds r0, #0xcc
	str r0, [sp, #0x12c]
	mov r1, sp
	adds r1, #0xd0
	str r1, [sp, #0x100]
_080B3230:
	mov r2, sb
	lsls r0, r2, #2
	ldr r3, [sp, #0x118]
	adds r1, r3, r0
	add r0, sp
	adds r0, #0x10
	ldr r0, [r0]
	str r0, [r1]
	ldr r1, [sp, #0x110]
	movs r2, #0
	bl sub_804EC84
	mov r5, sb
	lsls r4, r5, #6
	adds r0, r4, r5
	lsls r5, r0, #2
	mov r6, sl
	adds r1, r5, r6
	add r0, sp, #0xcc
	movs r7, #4
	strh r7, [r0]
	movs r3, #2
	ldr r2, [sp, #0x12c]
	strh r3, [r2, #2]
	ldr r0, [r0]
	movs r6, #0x88
	lsls r6, r6, #1
	adds r1, r1, r6
	movs r2, #0
	bl sub_804E7A0
	mov r7, sb
	cmp r7, #1
	beq _080B32AA
	ldr r0, [sp, #0x110]
	bl sub_80D3B78
	lsls r0, r0, #3
	movs r2, #0x20
	subs r2, r2, r0
	mov r0, sl
	adds r1, r5, r0
	movs r3, #5
	movs r6, #4
	ldr r5, [sp, #0x100]
	strh r6, [r5]
	movs r7, #2
	strh r7, [r5, #2]
	ldr r0, [r5]
	movs r5, #0x88
	lsls r5, r5, #1
	adds r1, r1, r5
	ldr r6, [sp, #0x110]
	str r6, [sp]
	movs r7, #0
	str r7, [sp, #4]
	str r3, [sp, #8]
	movs r3, #0
	bl sub_804E958
	b _080B32DA
_080B32AA:
	ldr r0, [sp, #0x110]
	bl sub_80D3B78
	lsls r0, r0, #3
	movs r2, #0x20
	subs r2, r2, r0
	movs r1, #7
	add r0, sp, #0xd4
	movs r3, #4
	strh r3, [r0]
	movs r5, #2
	strh r5, [r0, #2]
	ldr r0, [r0]
	ldr r6, [sp, #0x110]
	str r6, [sp]
	movs r7, #0
	str r7, [sp, #4]
	str r1, [sp, #8]
	movs r1, #0x85
	lsls r1, r1, #2
	add r1, sl
	movs r3, #0
	bl sub_804E958
_080B32DA:
	mov r0, sl
	bl sub_8008910
	adds r5, r0, #0
	add r4, sb
	lsls r4, r4, #2
	add r4, sl
	movs r0, #0x88
	lsls r0, r0, #1
	adds r4, r4, r0
	movs r0, #0x8d
	lsls r0, r0, #4
	add r0, sl
	ldr r1, [r0, #4]
	bl sub_8007D4C
	mov r1, sb
	lsls r2, r1, #3
	adds r2, r2, r0
	lsls r2, r2, #5
	ldr r3, _080B333C @ =0x06010000
	adds r2, r2, r3
	add r0, sp, #0x3c
	adds r1, r4, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_8008F0C
	ldr r4, [sp, #0x120]
	str r4, [sp, #0x104]
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080B3340
	cmp r1, #0
	beq _080B332E
	adds r0, r1, #0
	adds r1, r4, #0
	ldm r1!, {r2, r6, r7}
	stm r0!, {r2, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B332E:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	mov r3, sb
	adds r3, #1
	str r3, [sp, #0x10c]
	b _080B340E
	.align 2, 0
_080B333C: .4byte 0x06010000
_080B3340:
	str r1, [sp, #0x134]
	movs r0, #1
	add r1, sp, #0xdc
	str r0, [r1]
	ldr r0, [r5]
	ldr r4, [sp, #0x134]
	subs r0, r4, r0
	asrs r4, r0, #4
	add r0, sp, #0xd8
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080B335C
	adds r0, r1, #0
_080B335C:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B337A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080B337E
	mov r0, r8
	bl sub_80D3BC0
	b _080B337E
_080B337A:
	movs r0, #0
	mov r8, r0
_080B337E:
	adds r6, r0, #0
	str r6, [sp, #0x138]
	ldr r2, [r5]
	adds r3, r6, #0
	mov r6, sb
	adds r6, #1
	str r6, [sp, #0x10c]
	ldr r7, [sp, #0x134]
	cmp r2, r7
	beq _080B33AC
_080B3392:
	cmp r3, #0
	beq _080B33A2
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B33A2:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x134]
	cmp r2, r0
	bne _080B3392
_080B33AC:
	adds r6, r3, #0
	ldr r1, [sp, #0xdc]
	cmp r1, #1
	bne _080B33C8
	cmp r6, #0
	beq _080B33C4
	adds r0, r6, #0
	ldr r1, [sp, #0x104]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B33C4:
	adds r6, #0x10
	b _080B33EA
_080B33C8:
	adds r3, r1, #0
	adds r2, r6, #0
	cmp r3, #0
	beq _080B33E8
_080B33D0:
	cmp r2, #0
	beq _080B33E0
	adds r0, r2, #0
	ldr r1, [sp, #0x104]
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B33E0:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B33D0
_080B33E8:
	adds r6, r2, #0
_080B33EA:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B33FA
_080B33F4:
	adds r1, #0x10
	cmp r1, r2
	bne _080B33F4
_080B33FA:
	cmp r0, #0
	beq _080B3402
	bl sub_80D0260
_080B3402:
	ldr r0, [sp, #0x138]
	add r0, r8
	ldr r7, [sp, #0x138]
	str r7, [r5]
	str r6, [r5, #4]
	str r0, [r5, #0xc]
_080B340E:
	ldr r0, [sp, #0x10c]
	mov sb, r0
	cmp r0, #2
	bgt _080B3418
	b _080B3230
_080B3418:
	ldr r1, [sp, #0x30]
	ldr r0, [sp, #0x10]
	cmp r1, r0
	bne _080B34B4
	ldr r2, [sp, #0x118]
	ldr r1, [r2, #4]
	ldr r0, [sp, #0x14]
	cmp r1, r0
	bne _080B34B4
	ldr r1, [r2, #8]
	ldr r0, [sp, #0x18]
	cmp r1, r0
	bne _080B34B4
	movs r1, #0x84
	lsls r1, r1, #4
	add r1, sl
	movs r0, #2
	b _080B34B2
_080B343C:
	ldr r3, [sp, #0xf4]
	adds r3, #1
	str r3, [sp, #0xf4]
	cmp r3, #0x3c
	bne _080B347A
	ldr r1, _080B3464 @ =0x0000092B
	add r1, sl
	movs r0, #1
	strb r0, [r1]
	ldr r0, _080B3468 @ =0x0000092C
	add r0, sl
	ldrb r0, [r0]
	cmp r0, #0
	bne _080B3470
	ldr r0, _080B346C @ =0x00000814
	add r0, sl
	movs r1, #0xb7
	bl sub_8008B6C
	b _080B347A
	.align 2, 0
_080B3464: .4byte 0x0000092B
_080B3468: .4byte 0x0000092C
_080B346C: .4byte 0x00000814
_080B3470:
	ldr r0, _080B3490 @ =0x00000814
	add r0, sl
	movs r1, #0xb6
	bl sub_8008B6C
_080B347A:
	ldr r4, [sp, #0xf4]
	cmp r4, #0xf0
	bne _080B34B4
	movs r5, #0
	str r5, [sp, #0xf4]
	movs r1, #0x84
	lsls r1, r1, #4
	add r1, sl
	movs r0, #3
	b _080B34B2
	.align 2, 0
_080B3490: .4byte 0x00000814
_080B3494:
	ldr r6, [sp, #0xf4]
	adds r6, #1
	str r6, [sp, #0xf4]
	movs r0, #9
	ldr r7, [sp, #0xfc]
	ands r0, r7
	cmp r0, #0
	bne _080B34AC
	movs r0, #0x96
	lsls r0, r0, #2
	cmp r6, r0
	bne _080B34B4
_080B34AC:
	ldr r1, _080B34D8 @ =0x00000838
	add r1, sl
	movs r0, #5
_080B34B2:
	str r0, [r1]
_080B34B4:
	mov r0, sl
	bl sub_80AF814
_080B34BA:
	ldr r0, _080B34D8 @ =0x00000838
	add r0, sl
	ldr r0, [r0]
	cmp r0, #4
	bne _080B34C6
	b _080B2EF0
_080B34C6:
	add sp, #0x13c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B34D8: .4byte 0x00000838

	thumb_func_start sub_80B34DC
sub_80B34DC: @ 0x080B34DC
	push {r4, r5, r6, lr}
	adds r3, r0, #0
	movs r2, #0
	movs r0, #0x8e
	lsls r0, r0, #4
	adds r5, r3, r0
	ldr r6, _080B34FC @ =gUnknown_0810787C
	subs r0, #0x5c
	adds r4, r3, r0
_080B34EE:
	adds r1, r2, r6
	ldrb r0, [r5]
	ldrb r1, [r1]
	cmp r0, r1
	bne _080B3500
	str r2, [r4]
	b _080B350E
	.align 2, 0
_080B34FC: .4byte gUnknown_0810787C
_080B3500:
	adds r2, #1
	cmp r2, #4
	ble _080B34EE
	ldr r0, _080B3514 @ =0x00000884
	adds r1, r3, r0
	movs r0, #5
	str r0, [r1]
_080B350E:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080B3514: .4byte 0x00000884

	thumb_func_start sub_80B3518
sub_80B3518: @ 0x080B3518
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	bl sub_80088D4
	adds r0, r4, #0
	bl sub_80088C4
	adds r7, r0, #0
	adds r0, r4, #0
	bl sub_80088CC
	mov r8, r0
	ldr r0, _080B3548 @ =0x00000844
	adds r6, r4, r0
	ldr r1, [r6]
	cmp r1, #2
	bgt _080B354C
	cmp r1, #1
	bge _080B3552
	cmp r1, #0
	beq _080B35B4
	b _080B3642
	.align 2, 0
_080B3548: .4byte 0x00000844
_080B354C:
	cmp r1, #3
	beq _080B3614
	b _080B3642
_080B3552:
	movs r5, #0x30
	ands r5, r7
	cmp r5, #0
	bne _080B357C
	adds r0, r4, #0
	bl sub_80B34DC
	ldr r1, _080B3574 @ =0x00000884
	adds r0, r4, r1
	ldr r0, [r0]
	cmp r0, #5
	beq _080B3642
	str r5, [r6]
	ldr r2, _080B3578 @ =0x00000929
	adds r1, r4, r2
	b _080B3608
	.align 2, 0
_080B3574: .4byte 0x00000884
_080B3578: .4byte 0x00000929
_080B357C:
	movs r0, #0x20
	ands r0, r7
	cmp r0, #0
	beq _080B358E
	cmp r1, #1
	beq _080B358E
	movs r1, #1
	str r1, [r6]
	b _080B35E2
_080B358E:
	movs r0, #0x10
	ands r0, r7
	cmp r0, #0
	beq _080B3642
	ldr r0, _080B35AC @ =0x00000844
	adds r1, r4, r0
	ldr r0, [r1]
	cmp r0, #2
	beq _080B3642
	movs r0, #2
	str r0, [r1]
	ldr r2, _080B35B0 @ =0x00000929
	adds r1, r4, r2
	b _080B3608
	.align 2, 0
_080B35AC: .4byte 0x00000844
_080B35B0: .4byte 0x00000929
_080B35B4:
	movs r0, #1
	ands r0, r7
	cmp r0, #0
	beq _080B35CC
	ldr r1, _080B35EC @ =0x00000914
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080B35CC
	adds r0, r4, #0
	bl sub_80B3A28
_080B35CC:
	ldr r0, _080B35F0 @ =0x00000844
	adds r2, r4, r0
	ldr r0, [r2]
	cmp r0, #0
	bne _080B3642
	movs r0, #0x20
	ands r0, r7
	cmp r0, #0
	beq _080B35F8
	movs r1, #1
	str r1, [r2]
_080B35E2:
	ldr r2, _080B35F4 @ =0x00000929
	adds r0, r4, r2
	strb r1, [r0]
	b _080B3642
	.align 2, 0
_080B35EC: .4byte 0x00000914
_080B35F0: .4byte 0x00000844
_080B35F4: .4byte 0x00000929
_080B35F8:
	movs r0, #0x10
	ands r0, r7
	cmp r0, #0
	beq _080B3642
	movs r0, #2
	str r0, [r2]
	ldr r0, _080B3610 @ =0x00000929
	adds r1, r4, r0
_080B3608:
	movs r0, #1
	strb r0, [r1]
	b _080B3642
	.align 2, 0
_080B3610: .4byte 0x00000929
_080B3614:
	ldr r1, _080B3670 @ =0x000008FA
	adds r2, r4, r1
	ldrb r0, [r2]
	adds r0, #1
	movs r3, #0
	strb r0, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1e
	bls _080B3642
	str r3, [r6]
	adds r1, #0x2f
	adds r0, r4, r1
	movs r1, #1
	strb r1, [r0]
	strb r3, [r2]
	adds r0, r7, #0
	ands r0, r1
	cmp r0, #0
	beq _080B3642
	ldr r2, _080B3674 @ =0x00000914
	adds r0, r4, r2
	strb r3, [r0]
_080B3642:
	ldr r0, _080B3674 @ =0x00000914
	adds r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _080B3656
	movs r0, #1
	ands r7, r0
	cmp r7, #0
	bne _080B3656
	strb r0, [r1]
_080B3656:
	ldr r1, _080B3678 @ =0x00000844
	adds r0, r4, r1
	ldr r0, [r0]
	cmp r0, #1
	bne _080B367C
	movs r2, #0x8e
	lsls r2, r2, #4
	adds r1, r4, r2
	ldrb r0, [r1]
	cmp r0, #0x49
	bls _080B367C
	subs r0, #2
	b _080B3694
	.align 2, 0
_080B3670: .4byte 0x000008FA
_080B3674: .4byte 0x00000914
_080B3678: .4byte 0x00000844
_080B367C:
	ldr r1, _080B36B0 @ =0x00000844
	adds r0, r4, r1
	ldr r0, [r0]
	cmp r0, #2
	bne _080B3696
	movs r2, #0x8e
	lsls r2, r2, #4
	adds r1, r4, r2
	ldrb r0, [r1]
	cmp r0, #0xa6
	bhi _080B3696
	adds r0, #2
_080B3694:
	strb r0, [r1]
_080B3696:
	movs r0, #8
	mov r1, r8
	ands r0, r1
	cmp r0, #0
	beq _080B36A6
	adds r0, r4, #0
	bl sub_80B3BA8
_080B36A6:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B36B0: .4byte 0x00000844

	thumb_func_start sub_80B36B4
sub_80B36B4: @ 0x080B36B4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	movs r7, #0
_080B36BE:
	ldr r1, _080B3708 @ =0x00000915
	adds r0, r5, r1
	adds r6, r0, r7
	ldrb r0, [r6]
	cmp r0, #0
	beq _080B36EA
	movs r4, #0xb4
	bl sub_80D11E4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r1, r0, #0
	muls r1, r4, r1
	asrs r1, r1, #0x10
	lsls r2, r7, #1
	ldr r3, _080B370C @ =0x000008E6
	adds r0, r5, r3
	adds r0, r0, r2
	movs r2, #0
	adds r1, #0xb4
	strh r1, [r0]
	strb r2, [r6]
_080B36EA:
	lsls r0, r7, #2
	ldr r4, _080B3710 @ =0x00000848
	adds r1, r5, r4
	adds r1, r1, r0
	ldr r1, [r1]
	subs r1, #1
	adds r4, r0, #0
	cmp r1, #5
	bls _080B36FE
	b _080B3924
_080B36FE:
	lsls r0, r1, #2
	ldr r1, _080B3714 @ =_080B3718
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080B3708: .4byte 0x00000915
_080B370C: .4byte 0x000008E6
_080B3710: .4byte 0x00000848
_080B3714: .4byte _080B3718
_080B3718: @ jump table
	.4byte _080B3840 @ case 0
	.4byte _080B38D0 @ case 1
	.4byte _080B3730 @ case 2
	.4byte _080B379C @ case 3
	.4byte _080B3924 @ case 4
	.4byte _080B3800 @ case 5
_080B3730:
	ldr r6, _080B3784 @ =0x000008E1
	adds r0, r5, r6
	adds r1, r0, r7
	ldrb r0, [r1]
	cmp r0, #0x70
	bls _080B3740
	subs r0, #1
	strb r0, [r1]
_080B3740:
	ldrb r0, [r1]
	cmp r0, #0x70
	beq _080B3748
	b _080B3924
_080B3748:
	ldr r1, _080B3788 @ =0x00000848
	adds r0, r5, r1
	adds r0, r0, r4
	movs r3, #1
	str r3, [r0]
	ldr r2, _080B378C @ =0x0000085C
	adds r0, r5, r2
	adds r0, r0, r4
	movs r1, #2
	str r1, [r0]
	ldr r4, _080B3790 @ =0x00000915
	adds r0, r5, r4
	adds r0, r0, r7
	movs r2, #0
	strb r3, [r0]
	lsls r1, r7, #1
	movs r6, #0x8f
	lsls r6, r6, #4
	adds r0, r5, r6
	adds r0, r0, r1
	strh r2, [r0]
	ldr r1, _080B3794 @ =0x0000091A
	adds r0, r5, r1
	adds r0, r0, r7
	strb r3, [r0]
	ldr r2, _080B3798 @ =0x0000091F
	adds r0, r5, r2
	adds r0, r0, r7
	strb r3, [r0]
	b _080B3924
	.align 2, 0
_080B3784: .4byte 0x000008E1
_080B3788: .4byte 0x00000848
_080B378C: .4byte 0x0000085C
_080B3790: .4byte 0x00000915
_080B3794: .4byte 0x0000091A
_080B3798: .4byte 0x0000091F
_080B379C:
	ldr r3, _080B37EC @ =0x000008E1
	adds r1, r5, r3
	adds r1, r1, r7
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xa8
	beq _080B37B2
	b _080B3924
_080B37B2:
	ldr r6, _080B37F0 @ =0x00000848
	adds r0, r5, r6
	adds r0, r0, r4
	movs r1, #5
	str r1, [r0]
	ldr r1, _080B37F4 @ =0x0000085C
	adds r0, r5, r1
	adds r0, r0, r4
	movs r2, #1
	str r2, [r0]
	adds r3, #0x2c
	adds r1, r5, r3
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r4, _080B37F8 @ =0x0000091A
	adds r0, r5, r4
	adds r0, r0, r7
	strb r2, [r0]
	adds r6, #0xd7
	adds r0, r5, r6
	adds r0, r0, r7
	strb r2, [r0]
	ldr r1, _080B37FC @ =0x00000814
	adds r0, r5, r1
	movs r1, #0xc7
	bl sub_8008B6C
	b _080B3924
	.align 2, 0
_080B37EC: .4byte 0x000008E1
_080B37F0: .4byte 0x00000848
_080B37F4: .4byte 0x0000085C
_080B37F8: .4byte 0x0000091A
_080B37FC: .4byte 0x00000814
_080B3800:
	lsls r1, r7, #1
	ldr r2, _080B3834 @ =0x000008FC
	adds r0, r5, r2
	adds r2, r0, r1
	ldrh r1, [r2]
	adds r1, #1
	movs r3, #0
	strh r1, [r2]
	lsls r1, r1, #0x10
	movs r0, #0x96
	lsls r0, r0, #0x11
	cmp r1, r0
	beq _080B381C
	b _080B3924
_080B381C:
	strh r3, [r2]
	ldr r3, _080B3838 @ =0x00000848
	adds r0, r5, r3
	adds r0, r0, r4
	movs r1, #3
	str r1, [r0]
	ldr r4, _080B383C @ =0x0000091A
	adds r0, r5, r4
	adds r0, r0, r7
	movs r1, #1
	strb r1, [r0]
	b _080B3924
	.align 2, 0
_080B3834: .4byte 0x000008FC
_080B3838: .4byte 0x00000848
_080B383C: .4byte 0x0000091A
_080B3840:
	lsls r2, r7, #1
	movs r6, #0x8f
	lsls r6, r6, #4
	adds r0, r5, r6
	adds r3, r0, r2
	ldrh r1, [r3]
	adds r1, #1
	movs r0, #0
	mov ip, r0
	movs r6, #0
	mov r8, r6
	strh r1, [r3]
	ldr r6, _080B38B8 @ =0x000008E6
	adds r0, r5, r6
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	lsrs r0, r0, #1
	cmp r1, r0
	bne _080B388C
	mov r0, r8
	strh r0, [r3]
	ldr r1, _080B38BC @ =0x00000848
	adds r0, r5, r1
	adds r0, r0, r4
	movs r1, #2
	str r1, [r0]
	movs r2, #0x87
	lsls r2, r2, #4
	adds r0, r5, r2
	adds r0, r0, r4
	movs r1, #1
	str r1, [r0]
	ldr r3, _080B38C0 @ =0x0000091A
	adds r0, r5, r3
	adds r0, r0, r7
	strb r1, [r0]
_080B388C:
	ldr r4, _080B38C4 @ =0x00000924
	adds r0, r5, r4
	adds r2, r0, r7
	ldrb r0, [r2]
	cmp r0, #0
	beq _080B3924
	ldr r6, _080B38C8 @ =0x0000090C
	adds r0, r5, r6
	ldrb r1, [r0]
	adds r1, #1
	strb r1, [r0]
	mov r1, ip
	strb r1, [r2]
	ldrb r0, [r0]
	cmp r0, #5
	bls _080B3924
	ldr r2, _080B38CC @ =0x0000081C
	adds r0, r5, r2
	movs r1, #0xbc
	bl sub_8008B6C
	b _080B3924
	.align 2, 0
_080B38B8: .4byte 0x000008E6
_080B38BC: .4byte 0x00000848
_080B38C0: .4byte 0x0000091A
_080B38C4: .4byte 0x00000924
_080B38C8: .4byte 0x0000090C
_080B38CC: .4byte 0x0000081C
_080B38D0:
	lsls r2, r7, #1
	movs r3, #0x8f
	lsls r3, r3, #4
	adds r0, r5, r3
	adds r3, r0, r2
	ldrh r1, [r3]
	adds r1, #1
	movs r6, #0
	mov r8, r6
	strh r1, [r3]
	ldr r6, _080B3938 @ =0x000008E6
	adds r0, r5, r6
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	lsrs r0, r0, #1
	cmp r1, r0
	bne _080B3924
	mov r0, r8
	strh r0, [r3]
	ldr r1, _080B393C @ =0x00000848
	adds r0, r5, r1
	adds r0, r0, r4
	movs r1, #4
	str r1, [r0]
	movs r2, #0x87
	lsls r2, r2, #4
	adds r0, r5, r2
	adds r0, r0, r4
	movs r1, #2
	str r1, [r0]
	ldr r3, _080B3940 @ =0x0000091A
	adds r0, r5, r3
	adds r0, r0, r7
	movs r1, #1
	strb r1, [r0]
	ldr r4, _080B3944 @ =0x00000814
	adds r0, r5, r4
	movs r1, #0xa6
	bl sub_8008B6C
_080B3924:
	adds r7, #1
	cmp r7, #4
	bgt _080B392C
	b _080B36BE
_080B392C:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B3938: .4byte 0x000008E6
_080B393C: .4byte 0x00000848
_080B3940: .4byte 0x0000091A
_080B3944: .4byte 0x00000814

	thumb_func_start sub_80B3948
sub_80B3948: @ 0x080B3948
	push {r4, r5, lr}
	ldr r1, _080B3988 @ =0x0000085C
	adds r2, r0, r1
	ldr r3, _080B398C @ =0x00000906
	adds r1, r0, r3
	movs r5, #1
	movs r4, #4
_080B3956:
	ldr r0, [r2]
	cmp r0, #2
	bgt _080B3976
	cmp r0, #1
	blt _080B3976
	ldrb r0, [r1]
	adds r0, #1
	movs r3, #0
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x3c
	bne _080B3976
	strb r3, [r1]
	str r3, [r2]
	strb r5, [r1, #0x19]
_080B3976:
	adds r2, #4
	adds r1, #1
	subs r4, #1
	cmp r4, #0
	bge _080B3956
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080B3988: .4byte 0x0000085C
_080B398C: .4byte 0x00000906

	thumb_func_start sub_80B3990
sub_80B3990: @ 0x080B3990
	ldr r2, _080B39B4 @ =gUnknown_08107882
	ldr r3, _080B39B8 @ =0x00000844
	adds r1, r0, r3
	ldr r1, [r1]
	lsls r1, r1, #1
	adds r1, r1, r2
	movs r2, #0x93
	lsls r2, r2, #4
	adds r0, r0, r2
	ldr r2, [r0]
	movs r0, #0x54
	muls r0, r2, r0
	ldrh r1, [r1]
	adds r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bx lr
	.align 2, 0
_080B39B4: .4byte gUnknown_08107882
_080B39B8: .4byte 0x00000844

	thumb_func_start sub_80B39BC
sub_80B39BC: @ 0x080B39BC
	ldr r2, _080B39D4 @ =gUnknown_0810788A
	lsls r1, r1, #2
	movs r3, #0x87
	lsls r3, r3, #4
	adds r0, r0, r3
	adds r0, r0, r1
	ldr r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	bx lr
	.align 2, 0
_080B39D4: .4byte gUnknown_0810788A

	thumb_func_start sub_80B39D8
sub_80B39D8: @ 0x080B39D8
	ldr r2, _080B39EC @ =gUnknown_08107890
	lsls r1, r1, #2
	ldr r3, _080B39F0 @ =0x00000848
	adds r0, r0, r3
	adds r0, r0, r1
	ldr r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	bx lr
	.align 2, 0
_080B39EC: .4byte gUnknown_08107890
_080B39F0: .4byte 0x00000848

	thumb_func_start sub_80B39F4
sub_80B39F4: @ 0x080B39F4
	ldr r2, _080B3A08 @ =gUnknown_0810789A
	lsls r1, r1, #2
	ldr r3, _080B3A0C @ =0x0000085C
	adds r0, r0, r3
	adds r0, r0, r1
	ldr r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	bx lr
	.align 2, 0
_080B3A08: .4byte gUnknown_0810789A
_080B3A0C: .4byte 0x0000085C

	thumb_func_start sub_80B3A10
sub_80B3A10: @ 0x080B3A10
	ldr r1, _080B3A20 @ =gUnknown_081078A0
	ldr r2, _080B3A24 @ =0x00000934
	adds r0, r0, r2
	ldr r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	bx lr
	.align 2, 0
_080B3A20: .4byte gUnknown_081078A0
_080B3A24: .4byte 0x00000934

	thumb_func_start sub_80B3A28
sub_80B3A28: @ 0x080B3A28
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r4, r0, #0
	bl sub_80B34DC
	ldr r1, _080B3AB8 @ =0x00000844
	adds r0, r4, r1
	movs r2, #3
	mov sb, r2
	str r2, [r0]
	ldr r3, _080B3ABC @ =0x00000929
	adds r0, r4, r3
	movs r1, #0
	mov r8, r1
	movs r7, #1
	strb r7, [r0]
	ldr r2, _080B3AC0 @ =0x00000884
	adds r5, r4, r2
	ldr r1, [r5]
	lsls r3, r1, #2
	movs r0, #0x87
	lsls r0, r0, #4
	adds r6, r4, r0
	adds r2, r6, r3
	ldr r0, [r2]
	cmp r0, #0
	bne _080B3AD4
	ldr r2, _080B3AC4 @ =0x00000848
	adds r0, r4, r2
	adds r0, r0, r3
	ldr r0, [r0]
	cmp r0, #1
	beq _080B3A70
	b _080B3B98
_080B3A70:
	lsls r1, r1, #1
	movs r3, #0x8f
	lsls r3, r3, #4
	adds r0, r4, r3
	adds r0, r0, r1
	movs r2, #0
	mov r1, r8
	strh r1, [r0]
	ldr r1, [r5]
	lsls r1, r1, #2
	subs r3, #0x94
	adds r0, r4, r3
	adds r0, r0, r1
	str r7, [r0]
	ldr r0, _080B3AC8 @ =0x0000090D
	adds r1, r4, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r1, _080B3ACC @ =0x0000091F
	adds r0, r4, r1
	ldr r1, [r5]
	adds r0, r0, r1
	strb r7, [r0]
	adds r3, #0xaa
	adds r0, r4, r3
	ldr r1, [r5]
	adds r0, r0, r1
	strb r2, [r0]
	ldr r1, _080B3AD0 @ =0x00000814
	adds r0, r4, r1
	movs r1, #0xc7
	bl sub_8008B6C
	b _080B3B98
	.align 2, 0
_080B3AB8: .4byte 0x00000844
_080B3ABC: .4byte 0x00000929
_080B3AC0: .4byte 0x00000884
_080B3AC4: .4byte 0x00000848
_080B3AC8: .4byte 0x0000090D
_080B3ACC: .4byte 0x0000091F
_080B3AD0: .4byte 0x00000814
_080B3AD4:
	cmp r0, #1
	bne _080B3B40
	mov r3, r8
	str r3, [r2]
	lsls r1, r1, #1
	movs r2, #0x8f
	lsls r2, r2, #4
	adds r0, r4, r2
	adds r0, r0, r1
	strh r3, [r0]
	ldr r3, _080B3B30 @ =0x00000915
	adds r0, r4, r3
	ldr r1, [r5]
	adds r0, r0, r1
	strb r7, [r0]
	ldr r2, [r5]
	lsls r1, r2, #2
	subs r3, #0xcd
	adds r0, r4, r3
	adds r0, r0, r1
	str r7, [r0]
	adds r3, #0x14
	adds r0, r4, r3
	adds r0, r0, r1
	movs r1, #2
	str r1, [r0]
	ldr r1, _080B3B34 @ =0x0000091A
	adds r0, r4, r1
	adds r0, r0, r2
	strb r7, [r0]
	ldr r2, _080B3B38 @ =0x00000924
	adds r0, r4, r2
	ldr r1, [r5]
	adds r0, r0, r1
	strb r7, [r0]
	adds r3, #0xc3
	adds r0, r4, r3
	ldr r1, [r5]
	adds r0, r0, r1
	strb r7, [r0]
	ldr r1, _080B3B3C @ =0x00000814
	adds r0, r4, r1
	movs r1, #0x6c
	bl sub_8008B6C
	b _080B3B98
	.align 2, 0
_080B3B30: .4byte 0x00000915
_080B3B34: .4byte 0x0000091A
_080B3B38: .4byte 0x00000924
_080B3B3C: .4byte 0x00000814
_080B3B40:
	ldr r2, _080B3B78 @ =0x00000814
	adds r0, r4, r2
	movs r1, #0x6c
	bl sub_8008B6C
	ldr r1, [r5]
	lsls r0, r1, #2
	adds r0, r6, r0
	mov r3, r8
	str r3, [r0]
	ldr r2, _080B3B7C @ =0x00000924
	adds r0, r4, r2
	adds r0, r0, r1
	strb r7, [r0]
	ldr r2, [r5]
	lsls r1, r2, #2
	ldr r3, _080B3B80 @ =0x00000848
	adds r0, r4, r3
	adds r1, r0, r1
	ldr r0, [r1]
	cmp r0, #4
	bne _080B3B88
	mov r0, sb
	str r0, [r1]
	ldr r1, _080B3B84 @ =0x0000091A
	adds r0, r4, r1
	b _080B3B94
	.align 2, 0
_080B3B78: .4byte 0x00000814
_080B3B7C: .4byte 0x00000924
_080B3B80: .4byte 0x00000848
_080B3B84: .4byte 0x0000091A
_080B3B88:
	cmp r0, #5
	bne _080B3B98
	movs r0, #6
	str r0, [r1]
	ldr r3, _080B3BA4 @ =0x0000091A
	adds r0, r4, r3
_080B3B94:
	adds r0, r0, r2
	strb r7, [r0]
_080B3B98:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B3BA4: .4byte 0x0000091A

	thumb_func_start sub_80B3BA8
sub_80B3BA8: @ 0x080B3BA8
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, _080B3BCC @ =0x00000818
	adds r0, r4, r1
	movs r1, #0xb8
	bl sub_8008B6C
	ldr r0, _080B3BD0 @ =0x0000083C
	adds r1, r4, r0
	ldr r0, [r1]
	cmp r0, #0
	bne _080B3BD4
	movs r0, #1
	str r0, [r1]
	adds r0, r4, #0
	bl sub_80B0934
	b _080B3BDE
	.align 2, 0
_080B3BCC: .4byte 0x00000818
_080B3BD0: .4byte 0x0000083C
_080B3BD4:
	movs r0, #0
	str r0, [r1]
	adds r0, r4, #0
	bl sub_80B0970
_080B3BDE:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_80B3BE4
sub_80B3BE4: @ 0x080B3BE4
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _080B3C04 @ =gUnknown_080E850C
	str r0, [r4]
	ldr r0, _080B3C08 @ =0x0000093C
	bl sub_80005D4
	adds r1, r5, #0
	bl sub_80ADF6C
	str r0, [r4, #4]
	adds r0, r4, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080B3C04: .4byte gUnknown_080E850C
_080B3C08: .4byte 0x0000093C

	thumb_func_start sub_80B3C0C
sub_80B3C0C: @ 0x080B3C0C
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _080B3C38 @ =gUnknown_080E850C
	str r0, [r4]
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080B3C28
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080B3C28:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_80007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080B3C38: .4byte gUnknown_080E850C

	thumb_func_start sub_80B3C3C
sub_80B3C3C: @ 0x080B3C3C
	push {r4, lr}
	sub sp, #0xc
	adds r4, r0, #0
	ldr r1, [r1, #4]
	mov r0, sp
	bl sub_80AE4E4
	ldr r2, [sp]
	mov r0, sp
	str r0, [sp, #4]
	str r2, [sp, #8]
	adds r1, r0, #0
	movs r0, #0
	str r0, [r1]
	str r2, [r4]
	ldr r1, [sp]
	cmp r1, #0
	beq _080B3C6C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080B3C6C:
	adds r0, r4, #0
	add sp, #0xc
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80B3C78
sub_80B3C78: @ 0x080B3C78
	push {lr}
	ldr r0, [r0, #4]
	bl sub_80AE4D8
	pop {r1}
	bx r1

	thumb_func_start sub_80B3C84
sub_80B3C84: @ 0x080B3C84
	ldr r0, [r0, #4]
	movs r1, #0x91
	lsls r1, r1, #4
	adds r0, r0, r1
	ldr r0, [r0]
	bx lr

	thumb_func_start sub_80B3C90
sub_80B3C90: @ 0x080B3C90
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r6, _080B3CC4 @ =gUnknown_081078BC
	adds r0, r6, #0
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, #0xc
	bls _080B3CA4
	movs r4, #0xc
_080B3CA4:
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl sub_80D3994
	adds r0, r5, r4
	movs r1, #0
	strb r1, [r0]
	movs r0, #0
	strb r0, [r5, #0x10]
	strb r0, [r5, #0x11]
	adds r0, r5, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080B3CC4: .4byte gUnknown_081078BC

	thumb_func_start sub_80B3CC8
sub_80B3CC8: @ 0x080B3CC8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x70
	adds r6, r0, #0
	mov sb, r1
	bl sub_8008444
	ldr r0, _080B4090 @ =gUnknown_080E851C
	str r0, [r6, #4]
	movs r0, #0
	strb r0, [r6, #8]
	movs r0, #5
	add r7, sp, #0x10
	movs r1, #1
	rsbs r1, r1, #0
_080B3CEC:
	subs r0, #1
	cmp r0, r1
	bne _080B3CEC
	ldr r1, _080B4094 @ =0x00000704
	adds r0, r6, r1
	movs r1, #0
	bl sub_8008B54
	movs r2, #0xe1
	lsls r2, r2, #3
	adds r0, r6, r2
	movs r1, #1
	bl sub_8008B54
	ldr r3, _080B4098 @ =0x0000070C
	adds r0, r6, r3
	movs r1, #2
	bl sub_8008B54
	movs r4, #0xe2
	lsls r4, r4, #3
	adds r0, r6, r4
	movs r1, #3
	bl sub_8008B54
	ldr r1, _080B409C @ =0x00000714
	adds r0, r6, r1
	movs r1, #4
	bl sub_8008B54
	movs r0, #4
	bl sub_80005D4
	adds r4, r0, #0
	add r0, sp, #0xc
	bl sub_800835C
	adds r0, r7, #0
	bl sub_800770C
	movs r5, #0
	str r5, [sp]
	add r2, sp, #0xc
	str r2, [sp, #4]
	str r7, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0xf
	movs r3, #0
	bl sub_8050CC0
	movs r3, #0xe3
	lsls r3, r3, #3
	adds r1, r6, r3
	str r0, [r1]
	adds r0, r7, #0
	movs r1, #2
	bl sub_8007714
	add r0, sp, #0xc
	movs r1, #2
	bl sub_8008364
	ldr r0, _080B40A0 @ =0x0000071C
	adds r4, r6, r0
	adds r0, r4, #0
	bl sub_8007128
	str r5, [r4, #4]
	ldr r1, _080B40A4 @ =0x00000724
	adds r4, r6, r1
	adds r0, r4, #0
	bl sub_8007128
	str r5, [r4, #4]
	ldr r2, _080B40A8 @ =0x0000072C
	adds r4, r6, r2
	movs r5, #1
	ldr r3, _080B40AC @ =0x000008DC
	adds r3, r3, r6
	mov sl, r3
	ldr r0, _080B40B0 @ =0x000008E4
	adds r0, r6, r0
	str r0, [sp, #0x14]
	ldr r1, _080B40B4 @ =0x000008EC
	adds r1, r6, r1
	str r1, [sp, #0x18]
	ldr r2, _080B40B8 @ =0x00000904
	adds r2, r6, r2
	str r2, [sp, #0x1c]
	ldr r3, _080B40BC @ =0x0000090C
	adds r3, r6, r3
	str r3, [sp, #0x24]
	ldr r0, _080B40C0 @ =0x00000914
	adds r0, r6, r0
	str r0, [sp, #0x2c]
	ldr r1, _080B40C4 @ =0x0000097C
	adds r1, r6, r1
	str r1, [sp, #0x4c]
	ldr r2, _080B40C8 @ =0x00000984
	adds r2, r6, r2
	str r2, [sp, #0x50]
	ldr r3, _080B40CC @ =0x0000098C
	adds r3, r6, r3
	str r3, [sp, #0x54]
	ldr r0, _080B40D0 @ =0x000009A4
	adds r0, r6, r0
	str r0, [sp, #0x58]
	ldr r1, _080B40D4 @ =0x000009AC
	adds r1, r6, r1
	str r1, [sp, #0x5c]
	ldr r2, _080B40D8 @ =0x000009B4
	adds r2, r6, r2
	str r2, [sp, #0x60]
	ldr r3, _080B40DC @ =0x000009CC
	adds r3, r6, r3
	str r3, [sp, #0x64]
	ldr r0, _080B40E0 @ =0x000009D4
	adds r0, r6, r0
	str r0, [sp, #0x68]
	ldr r1, _080B40E4 @ =0x000009DC
	adds r1, r6, r1
	str r1, [sp, #0x6c]
	ldr r2, _080B40E8 @ =0x00000A8C
	adds r2, r6, r2
	str r2, [sp, #0x20]
	ldr r3, _080B40EC @ =0x00000A94
	adds r3, r6, r3
	str r3, [sp, #0x28]
	ldr r0, _080B40F0 @ =0x00000A9C
	adds r0, r6, r0
	str r0, [sp, #0x30]
	movs r1, #0xab
	lsls r1, r1, #4
	adds r1, r6, r1
	str r1, [sp, #0x34]
	ldr r2, _080B40F4 @ =0x00000AB8
	adds r2, r6, r2
	str r2, [sp, #0x38]
	movs r3, #0xac
	lsls r3, r3, #4
	adds r3, r6, r3
	str r3, [sp, #0x3c]
	ldr r0, _080B40F8 @ =0x00000AD4
	adds r0, r6, r0
	str r0, [sp, #0x40]
	ldr r1, _080B40FC @ =0x00000ADC
	adds r1, r6, r1
	str r1, [sp, #0x44]
	ldr r2, _080B4100 @ =0x00000AE4
	adds r2, r6, r2
	str r2, [sp, #0x48]
	movs r3, #0
	mov r8, r3
	movs r7, #1
	rsbs r7, r7, #0
_080B3E24:
	adds r0, r4, #0
	bl sub_8007128
	mov r0, r8
	str r0, [r4, #4]
	adds r4, #8
	subs r5, #1
	cmp r5, r7
	bne _080B3E24
	ldr r1, _080B4104 @ =0x0000073C
	adds r4, r6, r1
	movs r5, #7
	movs r2, #0
	mov r8, r2
	movs r7, #1
	rsbs r7, r7, #0
_080B3E44:
	adds r0, r4, #0
	bl sub_8007128
	mov r3, r8
	str r3, [r4, #4]
	adds r4, #8
	subs r5, #1
	cmp r5, r7
	bne _080B3E44
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080B4108 @ =gUnknown_0858BA28
	bl sub_805E6CC
	ldr r4, _080B410C @ =0x0000077C
	adds r1, r6, r4
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080B4110 @ =gUnknown_0873DE44
	bl sub_805E6CC
	movs r2, #0xf0
	lsls r2, r2, #3
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080B4114 @ =gUnknown_0871D51C
	bl sub_805E6CC
	ldr r3, _080B4118 @ =0x00000784
	adds r1, r6, r3
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080B411C @ =gUnknown_08738144
	bl sub_805E6CC
	adds r4, #0xc
	adds r1, r6, r4
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080B4120 @ =gUnknown_0873AFC8
	bl sub_805E6CC
	ldr r2, _080B4124 @ =0x0000078C
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080B4128 @ =gUnknown_08731B40
	bl sub_805E6CC
	movs r3, #0xf2
	lsls r3, r3, #3
	adds r1, r6, r3
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080B412C @ =gUnknown_0873CEAC
	bl sub_805E6CC
	adds r4, #0xc
	adds r1, r6, r4
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080B4130 @ =gUnknown_08729460
	bl sub_805E6CC
	movs r2, #0xf3
	lsls r2, r2, #3
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080B4134 @ =gUnknown_087409E4
	bl sub_805E6CC
	ldr r3, _080B4138 @ =0x0000079C
	adds r1, r6, r3
	str r0, [r1]
	movs r0, #0x10
	bl sub_80005D4
	adds r4, r0, #0
	adds r0, r6, #0
	bl sub_8008918
	adds r1, r0, #0
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _080B413C @ =gUnknown_080E5B80
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xc
	bl sub_8009300
	movs r1, #0xf4
	lsls r1, r1, #3
	adds r0, r6, r1
	str r4, [r0]
	ldr r2, _080B4140 @ =0x000007A4
	adds r1, r6, r2
	movs r0, #1
	movs r3, #0
	movs r2, #1
	rsbs r2, r2, #0
_080B3F34:
	stm r1!, {r3}
	subs r0, #1
	cmp r0, r2
	bne _080B3F34
	ldr r3, _080B4144 @ =0x000007AC
	adds r1, r6, r3
	movs r0, #1
	movs r3, #0
	movs r2, #1
	rsbs r2, r2, #0
_080B3F48:
	stm r1!, {r3}
	subs r0, #1
	cmp r0, r2
	bne _080B3F48
	ldr r4, _080B4148 @ =0x000007B4
	adds r1, r6, r4
	movs r0, #4
	movs r3, #0
	movs r2, #1
	rsbs r2, r2, #0
_080B3F5C:
	stm r1!, {r3}
	subs r0, #1
	cmp r0, r2
	bne _080B3F5C
	movs r0, #0xf9
	lsls r0, r0, #3
	adds r1, r6, r0
	movs r0, #4
	movs r3, #0
	movs r2, #1
	rsbs r2, r2, #0
_080B3F72:
	stm r1!, {r3}
	subs r0, #1
	cmp r0, r2
	bne _080B3F72
	movs r2, #4
	movs r1, #0
	movs r3, #1
	rsbs r3, r3, #0
	ldr r4, _080B414C @ =0x000007DC
	adds r0, r6, r4
_080B3F86:
	str r1, [r0]
	strh r1, [r0, #4]
	str r1, [r0, #8]
	strh r1, [r0, #0xc]
	str r1, [r0, #0x10]
	strh r1, [r0, #0x14]
	str r1, [r0, #0x18]
	strh r1, [r0, #0x1c]
	adds r0, #0x20
	subs r2, #1
	cmp r2, r3
	bne _080B3F86
	ldr r0, _080B4150 @ =0x0000087C
	adds r1, r6, r0
	movs r0, #1
	movs r3, #0
	movs r2, #1
	rsbs r2, r2, #0
_080B3FAA:
	stm r1!, {r3}
	subs r0, #1
	cmp r0, r2
	bne _080B3FAA
	ldr r2, _080B4154 @ =0x00000884
	adds r1, r6, r2
	movs r0, #1
	movs r3, #0
	movs r2, #1
	rsbs r2, r2, #0
_080B3FBE:
	stm r1!, {r3}
	subs r0, #1
	cmp r0, r2
	bne _080B3FBE
	movs r2, #1
	movs r1, #0
	movs r3, #1
	rsbs r3, r3, #0
	ldr r4, _080B4158 @ =0x0000088C
	adds r0, r6, r4
_080B3FD2:
	str r1, [r0]
	strh r1, [r0, #4]
	str r1, [r0, #8]
	strh r1, [r0, #0xc]
	str r1, [r0, #0x10]
	strh r1, [r0, #0x14]
	str r1, [r0, #0x18]
	strh r1, [r0, #0x1c]
	adds r0, #0x20
	subs r2, #1
	cmp r2, r3
	bne _080B3FD2
	ldr r0, _080B415C @ =0x000008CC
	adds r1, r6, r0
	movs r0, #0
	str r0, [r1]
	movs r2, #0x8d
	lsls r2, r2, #4
	adds r1, r6, r2
	str r0, [r1]
	ldr r3, _080B4160 @ =0x000008D4
	adds r1, r6, r3
	str r0, [r1]
	strh r0, [r1, #4]
	mov r4, sl
	str r0, [r4]
	strh r0, [r4, #4]
	ldr r1, [sp, #0x14]
	str r0, [r1]
	strh r0, [r1, #4]
	ldr r2, [sp, #0x18]
	str r0, [r2]
	strh r0, [r2, #4]
	adds r3, #0x20
	adds r1, r6, r3
	str r0, [r1]
	ldr r4, _080B4164 @ =0x000008F8
	adds r1, r6, r4
	str r0, [r1]
	ldr r2, _080B4168 @ =0x000008FC
	adds r1, r6, r2
	str r0, [r1]
	strh r0, [r1, #4]
	ldr r3, [sp, #0x1c]
	str r0, [r3]
	strh r0, [r3, #4]
	ldr r4, [sp, #0x24]
	str r0, [r4]
	strh r0, [r4, #4]
	ldr r1, [sp, #0x2c]
	str r0, [r1]
	strh r0, [r1, #4]
	adds r2, #0x20
	adds r1, r6, r2
	movs r0, #1
	movs r3, #0
	movs r2, #1
	rsbs r2, r2, #0
_080B4046:
	stm r1!, {r3}
	subs r0, #1
	cmp r0, r2
	bne _080B4046
	ldr r3, _080B416C @ =0x00000924
	adds r1, r6, r3
	movs r0, #1
	movs r3, #0
	movs r2, #1
	rsbs r2, r2, #0
_080B405A:
	stm r1!, {r3}
	subs r0, #1
	cmp r0, r2
	bne _080B405A
	movs r2, #1
	movs r1, #0
	movs r3, #1
	rsbs r3, r3, #0
	ldr r4, _080B4170 @ =0x0000092C
	adds r0, r6, r4
_080B406E:
	str r1, [r0]
	strh r1, [r0, #4]
	str r1, [r0, #8]
	strh r1, [r0, #0xc]
	str r1, [r0, #0x10]
	strh r1, [r0, #0x14]
	str r1, [r0, #0x18]
	strh r1, [r0, #0x1c]
	adds r0, #0x20
	subs r2, #1
	cmp r2, r3
	bne _080B406E
	ldr r0, _080B4174 @ =0x0000096C
	adds r1, r6, r0
	movs r0, #0
	b _080B4178
	.align 2, 0
_080B4090: .4byte gUnknown_080E851C
_080B4094: .4byte 0x00000704
_080B4098: .4byte 0x0000070C
_080B409C: .4byte 0x00000714
_080B40A0: .4byte 0x0000071C
_080B40A4: .4byte 0x00000724
_080B40A8: .4byte 0x0000072C
_080B40AC: .4byte 0x000008DC
_080B40B0: .4byte 0x000008E4
_080B40B4: .4byte 0x000008EC
_080B40B8: .4byte 0x00000904
_080B40BC: .4byte 0x0000090C
_080B40C0: .4byte 0x00000914
_080B40C4: .4byte 0x0000097C
_080B40C8: .4byte 0x00000984
_080B40CC: .4byte 0x0000098C
_080B40D0: .4byte 0x000009A4
_080B40D4: .4byte 0x000009AC
_080B40D8: .4byte 0x000009B4
_080B40DC: .4byte 0x000009CC
_080B40E0: .4byte 0x000009D4
_080B40E4: .4byte 0x000009DC
_080B40E8: .4byte 0x00000A8C
_080B40EC: .4byte 0x00000A94
_080B40F0: .4byte 0x00000A9C
_080B40F4: .4byte 0x00000AB8
_080B40F8: .4byte 0x00000AD4
_080B40FC: .4byte 0x00000ADC
_080B4100: .4byte 0x00000AE4
_080B4104: .4byte 0x0000073C
_080B4108: .4byte gUnknown_0858BA28
_080B410C: .4byte 0x0000077C
_080B4110: .4byte gUnknown_0873DE44
_080B4114: .4byte gUnknown_0871D51C
_080B4118: .4byte 0x00000784
_080B411C: .4byte gUnknown_08738144
_080B4120: .4byte gUnknown_0873AFC8
_080B4124: .4byte 0x0000078C
_080B4128: .4byte gUnknown_08731B40
_080B412C: .4byte gUnknown_0873CEAC
_080B4130: .4byte gUnknown_08729460
_080B4134: .4byte gUnknown_087409E4
_080B4138: .4byte 0x0000079C
_080B413C: .4byte gUnknown_080E5B80
_080B4140: .4byte 0x000007A4
_080B4144: .4byte 0x000007AC
_080B4148: .4byte 0x000007B4
_080B414C: .4byte 0x000007DC
_080B4150: .4byte 0x0000087C
_080B4154: .4byte 0x00000884
_080B4158: .4byte 0x0000088C
_080B415C: .4byte 0x000008CC
_080B4160: .4byte 0x000008D4
_080B4164: .4byte 0x000008F8
_080B4168: .4byte 0x000008FC
_080B416C: .4byte 0x00000924
_080B4170: .4byte 0x0000092C
_080B4174: .4byte 0x0000096C
_080B4178:
	str r0, [r1]
	movs r2, #0x97
	lsls r2, r2, #4
	adds r1, r6, r2
	str r0, [r1]
	ldr r3, _080B4470 @ =0x00000974
	adds r1, r6, r3
	str r0, [r1]
	strh r0, [r1, #4]
	ldr r4, [sp, #0x4c]
	str r0, [r4]
	strh r0, [r4, #4]
	ldr r1, [sp, #0x50]
	str r0, [r1]
	strh r0, [r1, #4]
	ldr r2, [sp, #0x54]
	str r0, [r2]
	strh r0, [r2, #4]
	adds r3, #0x20
	adds r1, r6, r3
	str r0, [r1]
	ldr r4, _080B4474 @ =0x00000998
	adds r1, r6, r4
	str r0, [r1]
	ldr r2, _080B4478 @ =0x0000099C
	adds r1, r6, r2
	str r0, [r1]
	strh r0, [r1, #4]
	ldr r3, [sp, #0x58]
	str r0, [r3]
	strh r0, [r3, #4]
	ldr r4, [sp, #0x5c]
	str r0, [r4]
	strh r0, [r4, #4]
	ldr r1, [sp, #0x60]
	str r0, [r1]
	strh r0, [r1, #4]
	adds r2, #0x20
	adds r1, r6, r2
	str r0, [r1]
	movs r3, #0x9c
	lsls r3, r3, #4
	adds r1, r6, r3
	str r0, [r1]
	ldr r4, _080B447C @ =0x000009C4
	adds r1, r6, r4
	str r0, [r1]
	strh r0, [r1, #4]
	ldr r1, [sp, #0x64]
	str r0, [r1]
	strh r0, [r1, #4]
	ldr r2, [sp, #0x68]
	str r0, [r2]
	strh r0, [r2, #4]
	ldr r3, [sp, #0x6c]
	str r0, [r3]
	strh r0, [r3, #4]
	adds r4, #0x20
	adds r1, r6, r4
	str r0, [r1]
	ldr r0, _080B4480 @ =0x000009E8
	adds r1, r6, r0
	movs r0, #1
	movs r3, #0
	movs r2, #1
	rsbs r2, r2, #0
_080B41FC:
	stm r1!, {r3}
	subs r0, #1
	cmp r0, r2
	bne _080B41FC
	movs r2, #1
	movs r1, #0
	movs r3, #1
	rsbs r3, r3, #0
	movs r4, #0x9f
	lsls r4, r4, #4
	adds r0, r6, r4
_080B4212:
	str r1, [r0]
	strh r1, [r0, #4]
	str r1, [r0, #8]
	strh r1, [r0, #0xc]
	str r1, [r0, #0x10]
	strh r1, [r0, #0x14]
	str r1, [r0, #0x18]
	strh r1, [r0, #0x1c]
	adds r0, #0x20
	subs r2, #1
	cmp r2, r3
	bne _080B4212
	movs r0, #0xa3
	lsls r0, r0, #4
	adds r1, r6, r0
	movs r0, #0
	str r0, [r1]
	ldr r2, _080B4484 @ =0x00000A34
	adds r1, r6, r2
	movs r0, #1
	movs r3, #0
	movs r2, #1
	rsbs r2, r2, #0
_080B4240:
	stm r1!, {r3}
	subs r0, #1
	cmp r0, r2
	bne _080B4240
	movs r2, #1
	movs r1, #0
	movs r3, #1
	rsbs r3, r3, #0
	ldr r4, _080B4488 @ =0x00000A3C
	adds r0, r6, r4
_080B4254:
	str r1, [r0]
	strh r1, [r0, #4]
	str r1, [r0, #8]
	strh r1, [r0, #0xc]
	str r1, [r0, #0x10]
	strh r1, [r0, #0x14]
	str r1, [r0, #0x18]
	strh r1, [r0, #0x1c]
	adds r0, #0x20
	subs r2, #1
	cmp r2, r3
	bne _080B4254
	ldr r0, _080B448C @ =0x00000A7C
	adds r1, r6, r0
	movs r0, #0
	str r0, [r1]
	movs r2, #0xa8
	lsls r2, r2, #4
	adds r1, r6, r2
	str r0, [r1]
	ldr r3, _080B4490 @ =0x00000A84
	adds r1, r6, r3
	str r0, [r1]
	strh r0, [r1, #4]
	ldr r4, [sp, #0x20]
	str r0, [r4]
	strh r0, [r4, #4]
	ldr r1, [sp, #0x28]
	str r0, [r1]
	strh r0, [r1, #4]
	ldr r2, [sp, #0x30]
	str r0, [r2]
	strh r0, [r2, #4]
	adds r3, #0x20
	adds r1, r6, r3
	str r0, [r1]
	ldr r4, _080B4494 @ =0x00000AA8
	adds r1, r6, r4
	str r0, [r1]
	strh r0, [r1, #4]
	ldr r1, [sp, #0x34]
	str r0, [r1]
	strh r0, [r1, #4]
	ldr r2, [sp, #0x38]
	str r0, [r2]
	strh r0, [r2, #4]
	ldr r3, [sp, #0x3c]
	str r0, [r3]
	strh r0, [r3, #4]
	adds r4, #0x20
	adds r1, r6, r4
	str r0, [r1]
	ldr r2, _080B4498 @ =0x00000ACC
	adds r1, r6, r2
	str r0, [r1]
	strh r0, [r1, #4]
	ldr r3, [sp, #0x40]
	str r0, [r3]
	strh r0, [r3, #4]
	ldr r4, [sp, #0x44]
	str r0, [r4]
	strh r0, [r4, #4]
	ldr r1, [sp, #0x48]
	str r0, [r1]
	strh r0, [r1, #4]
	adds r2, #0x20
	adds r1, r6, r2
	movs r0, #9
	movs r3, #0
	movs r2, #1
	rsbs r2, r2, #0
_080B42E2:
	stm r1!, {r3}
	subs r0, #1
	cmp r0, r2
	bne _080B42E2
	ldr r3, _080B449C @ =0x00000B1C
	adds r5, r6, r3
	adds r0, r5, #0
	bl sub_80B3C90
	movs r4, #0xb3
	lsls r4, r4, #4
	adds r0, r6, r4
	movs r1, #0
	strb r1, [r0]
	ldr r2, _080B44A0 @ =0x00000B58
	adds r0, r6, r2
	strb r1, [r0]
	ldr r3, _080B44A4 @ =0x00000B59
	adds r1, r6, r3
	movs r0, #0x5a
	strb r0, [r1]
	adds r4, #0x2a
	adds r0, r6, r4
	movs r2, #0x19
	strb r2, [r0]
	ldr r1, _080B44A8 @ =0x00000B5B
	adds r0, r6, r1
	strb r2, [r0]
	adds r3, #3
	adds r1, r6, r3
	movs r0, #2
	strb r0, [r1]
	adds r4, #3
	adds r1, r6, r4
	movs r0, #0x10
	strb r0, [r1]
	ldr r1, _080B44AC @ =0x00000B5E
	adds r0, r6, r1
	strb r2, [r0]
	adds r3, #4
	adds r0, r6, r3
	strh r2, [r0]
	adds r4, #5
	adds r0, r6, r4
	strh r2, [r0]
	ldr r0, _080B44B0 @ =0x00000B64
	adds r1, r6, r0
	movs r0, #0x22
	strh r0, [r1]
	ldr r1, _080B44B4 @ =0x00000B66
	adds r0, r6, r1
	strh r2, [r0]
	ldr r2, _080B44B8 @ =0x00000B68
	adds r1, r6, r2
	movs r0, #0x24
	strh r0, [r1]
	adds r3, #0xa
	adds r1, r6, r3
	movs r0, #0x46
	strb r0, [r1]
	adds r4, #9
	adds r1, r6, r4
	movs r0, #0x14
	strb r0, [r1]
	ldr r1, _080B44BC @ =0x00000B6C
	adds r0, r6, r1
	movs r2, #0x3c
	strb r2, [r0]
	adds r3, #3
	adds r0, r6, r3
	movs r1, #0x73
	strb r1, [r0]
	adds r4, #3
	adds r0, r6, r4
	strb r2, [r0]
	adds r3, #2
	adds r0, r6, r3
	strb r1, [r0]
	adds r4, #2
	adds r0, r6, r4
	strb r2, [r0]
	ldr r2, _080B44C0 @ =0x00000B71
	adds r0, r6, r2
	strb r1, [r0]
	adds r3, #3
	adds r4, r6, r3
	movs r0, #0x2d
	strh r0, [r4]
	ldr r1, _080B44C4 @ =0x00000B74
	adds r0, r6, r1
	movs r1, #0xb4
	strb r1, [r0]
	adds r3, #3
	adds r2, r6, r3
	movs r0, #0x78
	strb r0, [r2]
	ldr r2, _080B44C8 @ =0x00000B76
	adds r0, r6, r2
	strb r1, [r0]
	adds r3, #2
	adds r0, r6, r3
	strb r1, [r0]
	adds r0, r5, #0
	mov r1, sb
	bl sub_80D3B28
	mov r0, sb
	ldrb r1, [r0, #0x10]
	ldr r2, _080B44CC @ =0x00000B2C
	adds r0, r6, r2
	strb r1, [r0]
	mov r3, sb
	ldrb r1, [r3, #0x11]
	adds r2, #1
	adds r0, r6, r2
	strb r1, [r0]
	ldrh r0, [r4]
	lsls r0, r0, #0x10
	movs r1, #0xb4
	lsls r1, r1, #1
	bl sub_80D0EC8
	strh r0, [r4]
	ldr r3, _080B44D0 @ =0x0000071C
	adds r4, r6, r3
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	bl sub_800736C
	str r0, [r4, #4]
	ldr r0, _080B44D4 @ =0x00000724
	adds r4, r6, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	bl sub_800736C
	str r0, [r4, #4]
	movs r7, #0
	movs r1, #0xe6
	lsls r1, r1, #3
	adds r5, r6, r1
_080B4408:
	lsls r4, r7, #3
	adds r4, r4, r6
	ldr r2, _080B44D8 @ =0x0000072C
	adds r4, r4, r2
	ldr r1, [r5]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	bl sub_800736C
	str r0, [r5]
	adds r5, #8
	adds r7, #1
	cmp r7, #1
	ble _080B4408
	movs r7, #0
	movs r3, #0xe8
	lsls r3, r3, #3
	adds r5, r6, r3
_080B4430:
	lsls r4, r7, #3
	adds r4, r4, r6
	ldr r0, _080B44DC @ =0x0000073C
	adds r4, r4, r0
	ldr r1, [r5]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	bl sub_800736C
	str r0, [r5]
	adds r5, #8
	adds r7, #1
	cmp r7, #7
	ble _080B4430
	movs r1, #0xe3
	lsls r1, r1, #3
	adds r0, r6, r1
	ldr r0, [r0]
	movs r1, #0
	bl sub_8050E50
	adds r0, r6, #0
	add sp, #0x70
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080B4470: .4byte 0x00000974
_080B4474: .4byte 0x00000998
_080B4478: .4byte 0x0000099C
_080B447C: .4byte 0x000009C4
_080B4480: .4byte 0x000009E8
_080B4484: .4byte 0x00000A34
_080B4488: .4byte 0x00000A3C
_080B448C: .4byte 0x00000A7C
_080B4490: .4byte 0x00000A84
_080B4494: .4byte 0x00000AA8
_080B4498: .4byte 0x00000ACC
_080B449C: .4byte 0x00000B1C
_080B44A0: .4byte 0x00000B58
_080B44A4: .4byte 0x00000B59
_080B44A8: .4byte 0x00000B5B
_080B44AC: .4byte 0x00000B5E
_080B44B0: .4byte 0x00000B64
_080B44B4: .4byte 0x00000B66
_080B44B8: .4byte 0x00000B68
_080B44BC: .4byte 0x00000B6C
_080B44C0: .4byte 0x00000B71
_080B44C4: .4byte 0x00000B74
_080B44C8: .4byte 0x00000B76
_080B44CC: .4byte 0x00000B2C
_080B44D0: .4byte 0x0000071C
_080B44D4: .4byte 0x00000724
_080B44D8: .4byte 0x0000072C
_080B44DC: .4byte 0x0000073C

	thumb_func_start sub_80B44E0
sub_80B44E0: @ 0x080B44E0
	movs r1, #0xb3
	lsls r1, r1, #4
	adds r0, r0, r1
	ldrb r0, [r0]
	bx lr
	.align 2, 0

	thumb_func_start sub_80B44EC
sub_80B44EC: @ 0x080B44EC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x10
	mov r8, r0
	adds r4, r1, #0
	adds r0, r4, #0
	bl sub_80B45E4
	adds r0, r4, #0
	bl sub_8008918
	mov r1, sp
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	adds r0, r4, #0
	bl sub_80B45F0
	ldr r1, _080B4548 @ =0x00000704
	adds r0, r4, r1
	movs r1, #0x21
	bl sub_8008B6C
	ldr r1, _080B454C @ =0x00000B32
	adds r0, r4, r1
	ldrb r0, [r0]
	add r6, sp, #4
	add r7, sp, #8
	cmp r0, #0
	bne _080B4586
_080B452C:
	adds r0, r4, #0
	bl sub_80087C8
	ldr r1, _080B4550 @ =0x00000B14
	adds r0, r4, r1
	ldr r0, [r0]
	cmp r0, #1
	beq _080B455E
	cmp r0, #1
	bgt _080B4554
	cmp r0, #0
	beq _080B456E
	b _080B457C
	.align 2, 0
_080B4548: .4byte 0x00000704
_080B454C: .4byte 0x00000B32
_080B4550: .4byte 0x00000B14
_080B4554:
	cmp r0, #2
	beq _080B4566
	cmp r0, #3
	beq _080B4576
	b _080B457C
_080B455E:
	adds r0, r4, #0
	bl sub_80B469C
	b _080B457C
_080B4566:
	adds r0, r4, #0
	bl sub_80B7648
	b _080B457C
_080B456E:
	adds r0, r4, #0
	bl sub_80B5824
	b _080B457C
_080B4576:
	adds r0, r4, #0
	bl sub_80B888C
_080B457C:
	ldr r1, _080B45E0 @ =0x00000B32
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080B452C
_080B4586:
	movs r1, #0xf4
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r0, [r0]
	ldr r0, [r0]
	rsbs r1, r0, #0
	orrs r1, r0
	cmp r1, #0
	bge _080B45B0
	movs r0, #0xf4
	lsls r0, r0, #3
	adds r5, r4, r0
_080B459E:
	adds r0, r4, #0
	bl sub_80087C8
	ldr r0, [r5]
	ldr r0, [r0]
	rsbs r1, r0, #0
	orrs r1, r0
	cmp r1, #0
	blt _080B459E
_080B45B0:
	movs r0, #0
	str r0, [sp, #4]
	str r6, [sp, #8]
	str r0, [r7, #4]
	str r0, [r6]
	mov r1, r8
	str r0, [r1]
	ldr r1, [sp, #4]
	cmp r1, #0
	beq _080B45D0
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080B45D0:
	mov r0, r8
	add sp, #0x10
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080B45E0: .4byte 0x00000B32

	thumb_func_start sub_80B45E4
sub_80B45E4: @ 0x080B45E4
	push {lr}
	bl sub_8008724
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80B45F0
sub_80B45F0: @ 0x080B45F0
	push {r4, r5, r6, lr}
	mov r6, sl
	mov r5, sb
	mov r4, r8
	push {r4, r5, r6}
	sub sp, #0xc
	adds r4, r0, #0
	ldr r1, _080B468C @ =0x00000B31
	adds r0, r4, r1
	movs r1, #0
	strb r1, [r0]
	ldr r2, _080B4690 @ =0x00000B32
	adds r0, r4, r2
	strb r1, [r0]
	ldr r3, _080B4694 @ =0x00000B18
	adds r2, r4, r3
	adds r3, #0x40
	adds r0, r4, r3
	ldrb r0, [r0]
	str r0, [r2]
	ldr r2, _080B4698 @ =0x00000B14
	adds r0, r4, r2
	str r1, [r0]
	subs r3, #0x1b
	adds r0, r4, r3
	movs r1, #0x16
	strb r1, [r0]
	adds r2, #0x2a
	adds r0, r4, r2
	strb r1, [r0]
	adds r3, #2
	adds r0, r4, r3
	strb r1, [r0]
	movs r1, #0xe3
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r0, [r0]
	mov sl, r0
	adds r0, r4, #0
	bl sub_80088DC
	mov sb, r0
	adds r0, r4, #0
	bl sub_8008920
	mov r8, r0
	adds r0, r4, #0
	bl sub_8008918
	adds r6, r0, #0
	adds r0, r4, #0
	bl sub_8008940
	adds r5, r0, #0
	adds r0, r4, #0
	bl sub_800894C
	movs r2, #0xe1
	lsls r2, r2, #3
	adds r4, r4, r2
	str r5, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	mov r0, sl
	mov r1, sb
	mov r2, r8
	adds r3, r6, #0
	bl sub_8050D3C
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080B468C: .4byte 0x00000B31
_080B4690: .4byte 0x00000B32
_080B4694: .4byte 0x00000B18
_080B4698: .4byte 0x00000B14

	thumb_func_start sub_80B469C
sub_80B469C: @ 0x080B469C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xb8
	adds r7, r0, #0
	movs r0, #0xe3
	lsls r0, r0, #3
	adds r4, r7, r0
	movs r5, #0
	ldr r0, [r4]
	cmp r5, r0
	beq _080B46C2
	cmp r0, #0
	beq _080B46C2
	movs r1, #3
	bl sub_8050D0C
_080B46C2:
	str r5, [r4]
	movs r0, #4
	bl sub_80005D4
	adds r5, r0, #0
	add r0, sp, #0xc
	bl sub_800835C
	add r4, sp, #0x10
	adds r0, r4, #0
	bl sub_800770C
	movs r0, #0
	str r0, [sp]
	add r1, sp, #0xc
	str r1, [sp, #4]
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #0xf
	movs r3, #0
	bl sub_8050CC0
	movs r2, #0xe3
	lsls r2, r2, #3
	adds r6, r7, r2
	adds r5, r0, #0
	ldr r0, [r6]
	cmp r5, r0
	beq _080B4708
	cmp r0, #0
	beq _080B4708
	movs r1, #3
	bl sub_8050D0C
_080B4708:
	str r5, [r6]
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007714
	add r0, sp, #0xc
	movs r1, #2
	bl sub_8008364
	movs r3, #0xe3
	lsls r3, r3, #3
	adds r0, r7, r3
	ldr r0, [r0]
	movs r1, #0
	bl sub_8050E50
	add r0, sp, #0xc
	bl sub_8007874
	movs r5, #0
	str r5, [sp, #0x10]
	add r6, sp, #0x14
	adds r0, r6, #0
	bl sub_8007874
	str r5, [r6, #4]
	add r4, sp, #0x1c
	mov r8, r4
	mov r0, r8
	bl sub_8007874
	str r5, [r4, #4]
	add r4, sp, #0x24
	adds r0, r4, #0
	bl sub_8007874
	str r5, [r4, #4]
	add r4, sp, #0x2c
	adds r0, r4, #0
	bl sub_8007874
	str r5, [r4, #4]
	ldr r1, [sp, #0x10]
	add r0, sp, #0xc
	bl sub_8007C28
	add r0, sp, #0xc
	movs r1, #3
	bl sub_8007B54
	adds r1, r0, #0
	str r1, [sp, #0x10]
	add r0, sp, #0xc
	bl sub_8007D4C
	str r0, [sp, #0x84]
	ldr r1, [sp, #0x18]
	adds r0, r6, #0
	bl sub_8007C28
	adds r0, r6, #0
	movs r1, #7
	bl sub_8007B54
	adds r1, r0, #0
	str r1, [sp, #0x18]
	adds r0, r6, #0
	bl sub_8007D4C
	str r0, [sp, #0x88]
	ldr r1, [sp, #0x20]
	mov r0, r8
	bl sub_8007C28
	mov r0, r8
	movs r1, #3
	bl sub_8007B54
	adds r1, r0, #0
	str r1, [sp, #0x20]
	mov r0, r8
	bl sub_8007D4C
	str r0, [sp, #0x8c]
	add r0, sp, #0x34
	bl sub_8007128
	add r0, sp, #0x34
	bl sub_800736C
	str r0, [sp, #0x38]
	movs r0, #0x79
	str r0, [sp, #0x90]
	ldr r1, _080B4944 @ =0x00000B33
	adds r0, r7, r1
	strb r5, [r0]
	ldr r2, _080B4948 @ =0x00000B34
	adds r0, r7, r2
	strb r5, [r0]
	ldr r3, _080B494C @ =0x00000B3C
	adds r1, r7, r3
	movs r0, #1
	strb r0, [r1]
	ldr r4, _080B4950 @ =0x00000B3B
	adds r0, r7, r4
	strb r5, [r0]
	adds r0, r7, #0
	bl sub_80B55D0
	add r0, sp, #0x3c
	bl sub_8007128
	ldr r1, [sp, #0x38]
	add r0, sp, #0x3c
	bl sub_800745C
	str r0, [sp, #0x40]
	add r4, sp, #0x3c
	adds r0, r7, #0
	adds r1, r4, #0
	bl sub_80BC288
	str r5, [sp, #0x94]
	mov r0, sp
	adds r0, #0x44
	str r0, [sp, #0x9c]
_080B4804:
	movs r0, #0x14
	bl sub_80005D4
	ldr r2, _080B4954 @ =0x00000784
	adds r1, r7, r2
	ldr r1, [r1]
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	adds r5, r0, #0
	ldr r3, [sp, #0x94]
	lsls r3, r3, #2
	mov sb, r3
	adds r4, r3, r7
	ldr r0, _080B4958 @ =0x0000091C
	adds r4, r4, r0
	ldr r0, [r4]
	cmp r5, r0
	beq _080B4832
	bl sub_8000608
_080B4832:
	str r5, [r4]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r4]
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	strh r0, [r4, #8]
	str r0, [r4, #0xc]
	strb r1, [r4, #0x10]
	strb r1, [r4, #0x11]
	str r0, [r4, #0x14]
	strb r1, [r4, #0x18]
	mov r1, sb
	adds r5, r1, r7
	ldr r2, _080B495C @ =0x00000924
	mov sl, r2
	add r5, sl
	ldr r0, [r5]
	adds r6, r1, r7
	cmp r4, r0
	beq _080B486A
	bl sub_8000608
_080B486A:
	str r4, [r5]
	ldr r3, _080B4958 @ =0x0000091C
	adds r3, r3, r6
	mov r8, r3
	ldr r0, [r3]
	movs r1, #2
	bl sub_805E860
	mov r4, sl
	adds r2, r6, r4
	ldr r3, [r2]
	ldr r5, [sp, #0x94]
	lsls r1, r5, #6
	adds r1, r7, r1
	adds r0, r1, #0
	adds r0, #0x8a
	ldrh r0, [r0]
	lsrs r0, r0, #8
	subs r0, #9
	strh r0, [r3]
	ldr r3, [r2]
	adds r1, #0x8c
	ldrh r0, [r1]
	lsrs r0, r0, #8
	subs r0, #0x20
	strh r0, [r3, #2]
	ldr r0, [r2]
	ldr r1, [sp, #0x8c]
	add sb, r1
	mov r3, sb
	strh r3, [r0, #6]
	ldr r4, [r2]
	ldr r5, _080B4960 @ =0x0000071C
	adds r0, r7, r5
	ldr r1, [r0, #4]
	bl sub_80074C0
	strh r0, [r4, #4]
	ldr r0, [sp, #0x94]
	lsls r6, r0, #5
	adds r5, r6, r7
	ldr r1, _080B4964 @ =0x0000092C
	adds r4, r5, r1
	mov r2, r8
	ldr r0, [r2]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x44
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	ldr r0, [sp, #0x9c]
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	ldr r0, [sp, #0x9c]
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r1, r3}
	stm r4!, {r1, r3}
	adds r0, r7, #0
	bl sub_8008910
	ldr r2, _080B4968 @ =0x00000934
	adds r5, r5, r2
	ldr r1, [r5]
	movs r3, #0
	str r6, [sp, #0xa4]
	cmp r1, #0
	beq _080B4908
	ldrh r3, [r5, #4]
_080B4908:
	adds r6, r0, #0
	mov r4, sb
	lsls r2, r4, #5
	ldr r5, _080B496C @ =0x06010000
	adds r2, r2, r5
	add r0, sp, #0x3c
	bl sub_8008F0C
	add r0, sp, #0x3c
	mov sl, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B4970
	cmp r1, #0
	beq _080B4934
	adds r0, r1, #0
	add r1, sp, #0x3c
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B4934:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	ldr r5, [sp, #0x94]
	adds r5, #1
	str r5, [sp, #0xa0]
	b _080B4A40
	.align 2, 0
_080B4944: .4byte 0x00000B33
_080B4948: .4byte 0x00000B34
_080B494C: .4byte 0x00000B3C
_080B4950: .4byte 0x00000B3B
_080B4954: .4byte 0x00000784
_080B4958: .4byte 0x0000091C
_080B495C: .4byte 0x00000924
_080B4960: .4byte 0x0000071C
_080B4964: .4byte 0x0000092C
_080B4968: .4byte 0x00000934
_080B496C: .4byte 0x06010000
_080B4970:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x68]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x64]
	add r1, sp, #0x68
	add r0, sp, #0x64
	cmp r4, #1
	bhs _080B4988
	adds r0, r1, #0
_080B4988:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B49A6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080B49AA
	mov r0, sb
	bl sub_80D3BC0
	b _080B49AA
_080B49A6:
	movs r0, #0
	mov sb, r0
_080B49AA:
	adds r5, r0, #0
	str r5, [sp, #0xb4]
	ldr r2, [r6]
	mov ip, r5
	ldr r0, [sp, #0x94]
	adds r0, #1
	str r0, [sp, #0xa0]
	cmp r2, r8
	beq _080B49D8
_080B49BC:
	mov r1, ip
	cmp r1, #0
	beq _080B49CE
	mov r0, ip
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B49CE:
	adds r2, #0x10
	movs r0, #0x10
	add ip, r0
	cmp r2, r8
	bne _080B49BC
_080B49D8:
	mov r5, ip
	ldr r0, [sp, #0x68]
	cmp r0, #1
	bne _080B49F4
	cmp r5, #0
	beq _080B49F0
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B49F0:
	adds r5, #0x10
	b _080B4A1C
_080B49F4:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _080B4A1A
_080B49FC:
	cmp r2, #0
	beq _080B4A0C
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B4A0C:
	movs r5, #1
	rsbs r5, r5, #0
	add r8, r5
	adds r2, #0x10
	mov r0, r8
	cmp r0, #0
	bne _080B49FC
_080B4A1A:
	adds r5, r2, #0
_080B4A1C:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B4A2C
_080B4A26:
	adds r1, #0x10
	cmp r1, r2
	bne _080B4A26
_080B4A2C:
	cmp r0, #0
	beq _080B4A34
	bl sub_80D0260
_080B4A34:
	ldr r0, [sp, #0xb4]
	add r0, sb
	ldr r1, [sp, #0xb4]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B4A40:
	adds r0, r7, #0
	bl sub_8008910
	mov r8, r0
	ldr r2, [sp, #0xa4]
	adds r0, r2, r7
	ldr r4, _080B4AA4 @ =0x0000093C
	adds r0, r0, r4
	ldr r5, [r0]
	ldr r3, _080B4AA8 @ =0x0000071C
	adds r0, r7, r3
	ldr r1, [r0, #4]
	bl sub_80074C0
	adds r2, r0, #0
	ldr r0, [sp, #0xa4]
	adds r6, r0, r7
	adds r6, r6, r4
	ldr r0, [r6]
	movs r3, #0
	cmp r0, #0
	beq _080B4A6E
	ldrh r3, [r6, #4]
_080B4A6E:
	mov r6, r8
	lsls r2, r2, #5
	ldr r1, _080B4AAC @ =0x05000200
	adds r2, r2, r1
	add r0, sp, #0x3c
	adds r1, r5, #0
	bl sub_8008F0C
	add r2, sp, #0x3c
	mov sl, r2
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B4AB0
	cmp r1, #0
	beq _080B4A9A
	adds r0, r1, #0
	add r1, sp, #0x3c
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B4A9A:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B4B78
	.align 2, 0
_080B4AA4: .4byte 0x0000093C
_080B4AA8: .4byte 0x0000071C
_080B4AAC: .4byte 0x05000200
_080B4AB0:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x70]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x6c]
	add r1, sp, #0x70
	add r0, sp, #0x6c
	cmp r4, #1
	bhs _080B4AC8
	adds r0, r1, #0
_080B4AC8:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B4AE6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080B4AEA
	mov r0, sb
	bl sub_80D3BC0
	b _080B4AEA
_080B4AE6:
	movs r0, #0
	mov sb, r0
_080B4AEA:
	adds r5, r0, #0
	str r5, [sp, #0xb4]
	ldr r2, [r6]
	mov ip, r5
	cmp r2, r8
	beq _080B4B10
_080B4AF6:
	mov r0, ip
	cmp r0, #0
	beq _080B4B06
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B4B06:
	adds r2, #0x10
	movs r0, #0x10
	add ip, r0
	cmp r2, r8
	bne _080B4AF6
_080B4B10:
	mov r5, ip
	ldr r0, [sp, #0x70]
	cmp r0, #1
	bne _080B4B2C
	cmp r5, #0
	beq _080B4B28
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B4B28:
	adds r5, #0x10
	b _080B4B54
_080B4B2C:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _080B4B52
_080B4B34:
	cmp r2, #0
	beq _080B4B44
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B4B44:
	movs r5, #1
	rsbs r5, r5, #0
	add r8, r5
	adds r2, #0x10
	mov r0, r8
	cmp r0, #0
	bne _080B4B34
_080B4B52:
	adds r5, r2, #0
_080B4B54:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B4B64
_080B4B5E:
	adds r1, #0x10
	cmp r1, r2
	bne _080B4B5E
_080B4B64:
	cmp r0, #0
	beq _080B4B6C
	bl sub_80D0260
_080B4B6C:
	ldr r0, [sp, #0xb4]
	add r0, sb
	ldr r1, [sp, #0xb4]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B4B78:
	ldr r2, [sp, #0xa0]
	str r2, [sp, #0x94]
	cmp r2, #1
	bhi _080B4B82
	b _080B4804
_080B4B82:
	ldr r3, _080B4BC0 @ =0x00000B48
	adds r4, r7, r3
	ldr r5, _080B4BC4 @ =0x00000B4C
	adds r3, r7, r5
	movs r0, #0xb4
	lsls r0, r0, #4
	adds r2, r7, r0
	subs r5, #8
	adds r1, r7, r5
	movs r0, #1
	str r0, [r1]
	str r0, [r2]
	str r0, [r3]
	str r0, [r4]
	ldr r0, _080B4BC8 @ =0x00000B54
	adds r2, r7, r0
	movs r3, #0xb5
	lsls r3, r3, #4
	adds r1, r7, r3
	movs r0, #0
	str r0, [r1]
	str r0, [r2]
	adds r0, r7, #0
	ldr r1, [sp, #0x88]
	bl sub_80BAC9C
	movs r4, #0
	str r4, [sp, #0x98]
	subs r5, #0x30
	b _080B528E
	.align 2, 0
_080B4BC0: .4byte 0x00000B48
_080B4BC4: .4byte 0x00000B4C
_080B4BC8: .4byte 0x00000B54
_080B4BCC:
	adds r0, r7, #0
	bl sub_80087C8
	adds r0, r7, #0
	bl sub_80088B8
	movs r1, #0xf4
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r0, [r0]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _080B4BEC
	b _080B4E4E
_080B4BEC:
	ldr r2, _080B4C0C @ =0x00000B18
	adds r0, r7, r2
	ldr r1, [r0]
	cmp r1, #0
	beq _080B4C00
	ldr r3, _080B4C10 @ =0x00000B33
	adds r0, r7, r3
	ldrb r0, [r0]
	cmp r0, #1
	bne _080B4C14
_080B4C00:
	adds r0, r7, #0
	ldr r1, [sp, #0x90]
	bl sub_80BA2C4
	str r0, [sp, #0x90]
	b _080B4E4E
	.align 2, 0
_080B4C0C: .4byte 0x00000B18
_080B4C10: .4byte 0x00000B33
_080B4C14:
	subs r0, r1, #1
	cmp r0, #1
	bls _080B4C1C
	b _080B4E4E
_080B4C1C:
	movs r5, #0xe3
	lsls r5, r5, #3
	adds r4, r7, r5
	ldr r0, [r4]
	bl sub_8050D34
	mov sl, r0
	ldr r4, [r4]
	mov sb, r4
	adds r0, r7, #0
	bl sub_80088DC
	mov r8, r0
	adds r0, r7, #0
	bl sub_8008920
	adds r6, r0, #0
	adds r0, r7, #0
	bl sub_8008918
	adds r5, r0, #0
	adds r0, r7, #0
	bl sub_8008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl sub_800894C
	movs r2, #0xe1
	lsls r2, r2, #3
	adds r1, r7, r2
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, sb
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl sub_8050D3C
	cmp r0, #6
	bls _080B4C72
	b _080B4E4E
_080B4C72:
	lsls r0, r0, #2
	ldr r1, _080B4C7C @ =_080B4C80
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080B4C7C: .4byte _080B4C80
_080B4C80: @ jump table
	.4byte _080B4C9C @ case 0
	.4byte _080B4DD4 @ case 1
	.4byte _080B4DD4 @ case 2
	.4byte _080B4CC6 @ case 3
	.4byte _080B4DD4 @ case 4
	.4byte _080B4DD4 @ case 5
	.4byte _080B4DD4 @ case 6
_080B4C9C:
	ldr r3, _080B4CB0 @ =0x00000B34
	adds r0, r7, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _080B4CB8
	ldr r4, _080B4CB4 @ =0x00000B14
	adds r1, r7, r4
	movs r0, #2
	str r0, [r1]
	b _080B4E4E
	.align 2, 0
_080B4CB0: .4byte 0x00000B34
_080B4CB4: .4byte 0x00000B14
_080B4CB8:
	movs r5, #0xe3
	lsls r5, r5, #3
	adds r0, r7, r5
	ldr r0, [r0]
	bl sub_8050D5C
	b _080B4E4E
_080B4CC6:
	mov r0, sl
	cmp r0, #5
	bgt _080B4CD6
	cmp r0, #4
	bge _080B4D24
	cmp r0, #1
	beq _080B4CEA
	b _080B4CDC
_080B4CD6:
	mov r1, sl
	cmp r1, #6
	beq _080B4D58
_080B4CDC:
	movs r2, #0xe3
	lsls r2, r2, #3
	adds r0, r7, r2
	ldr r0, [r0]
	bl sub_8050D74
	b _080B4DD4
_080B4CEA:
	ldr r3, _080B4D04 @ =0x00000B18
	adds r0, r7, r3
	ldr r0, [r0]
	cmp r0, #1
	bne _080B4D0C
	movs r4, #0xe3
	lsls r4, r4, #3
	adds r0, r7, r4
	ldr r0, [r0]
	ldr r1, _080B4D08 @ =gUnknown_081079C4
	bl sub_8050D8C
	b _080B4DD4
	.align 2, 0
_080B4D04: .4byte 0x00000B18
_080B4D08: .4byte gUnknown_081079C4
_080B4D0C:
	cmp r0, #2
	bne _080B4DD4
	movs r5, #0xe3
	lsls r5, r5, #3
	adds r0, r7, r5
	ldr r0, [r0]
	ldr r1, _080B4D20 @ =gUnknown_081079E0
	bl sub_8050D8C
	b _080B4DD4
	.align 2, 0
_080B4D20: .4byte gUnknown_081079E0
_080B4D24:
	ldr r1, _080B4D48 @ =0x00000B34
	adds r0, r7, r1
	ldrb r4, [r0]
	cmp r4, #0
	bne _080B4DD4
	movs r2, #0xe3
	lsls r2, r2, #3
	adds r0, r7, r2
	ldr r0, [r0]
	ldr r1, _080B4D4C @ =gUnknown_08107A30
	ldr r2, _080B4D50 @ =gUnknown_08107A4C
	ldr r3, _080B4D54 @ =gUnknown_08107A58
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	bl sub_8050E30
	b _080B4DD4
	.align 2, 0
_080B4D48: .4byte 0x00000B34
_080B4D4C: .4byte gUnknown_08107A30
_080B4D50: .4byte gUnknown_08107A4C
_080B4D54: .4byte gUnknown_08107A58
_080B4D58:
	movs r3, #0xe3
	lsls r3, r3, #3
	adds r4, r7, r3
	ldr r0, [r4]
	bl sub_8050DF0
	cmp r0, #1
	beq _080B4D6E
	cmp r0, #2
	beq _080B4DCC
	b _080B4DD4
_080B4D6E:
	ldr r5, _080B4D84 @ =0x00000B18
	adds r0, r7, r5
	ldr r0, [r0]
	cmp r0, #1
	beq _080B4D9C
	cmp r0, #1
	bgt _080B4D88
	cmp r0, #0
	beq _080B4D8E
	b _080B4DB4
	.align 2, 0
_080B4D84: .4byte 0x00000B18
_080B4D88:
	cmp r0, #2
	beq _080B4DAC
	b _080B4DB4
_080B4D8E:
	ldr r0, [r4]
	ldr r1, _080B4D98 @ =gUnknown_08107A68
	bl sub_8050D8C
	b _080B4DB4
	.align 2, 0
_080B4D98: .4byte gUnknown_08107A68
_080B4D9C:
	ldr r0, [r4]
	ldr r1, _080B4DA8 @ =gUnknown_08107A80
	bl sub_8050D8C
	b _080B4DB4
	.align 2, 0
_080B4DA8: .4byte gUnknown_08107A80
_080B4DAC:
	ldr r0, [r4]
	ldr r1, _080B4DC8 @ =gUnknown_08107A9C
	bl sub_8050D8C
_080B4DB4:
	movs r1, #0xe3
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r0, [r0]
	bl sub_8050DD8
	movs r2, #0
	str r2, [sp, #0x90]
	b _080B4DD4
	.align 2, 0
_080B4DC8: .4byte gUnknown_08107A9C
_080B4DCC:
	ldr r3, _080B4F54 @ =0x00000B33
	adds r1, r7, r3
	movs r0, #1
	strb r0, [r1]
_080B4DD4:
	ldr r4, [sp, #0x90]
	cmp r4, #0x77
	bgt _080B4DDE
	adds r4, #1
	str r4, [sp, #0x90]
_080B4DDE:
	ldr r5, [sp, #0x90]
	cmp r5, #0x78
	bne _080B4E0C
	movs r0, #0xb5
	lsls r0, r0, #4
	adds r1, r7, r0
	movs r0, #1
	str r0, [r1]
	movs r1, #0x7a
	str r1, [sp, #0x90]
	movs r2, #0xe3
	lsls r2, r2, #3
	adds r4, r7, r2
	ldr r0, [r4]
	bl sub_8050DE4
	ldr r0, [r4]
	ldr r1, _080B4F58 @ =gUnknown_08107AB4
	bl sub_8050D8C
	ldr r0, [r4]
	bl sub_8050DD8
_080B4E0C:
	ldr r0, [sp, #0x90]
	subs r0, #0x7a
	cmp r0, #0x59
	bhi _080B4E1A
	ldr r3, [sp, #0x90]
	adds r3, #1
	str r3, [sp, #0x90]
_080B4E1A:
	ldr r4, [sp, #0x90]
	cmp r4, #0xd4
	bne _080B4E4E
	movs r5, #0xb5
	lsls r5, r5, #4
	adds r0, r7, r5
	movs r5, #0
	str r5, [r0]
	movs r0, #0x79
	str r0, [sp, #0x90]
	movs r1, #0xe3
	lsls r1, r1, #3
	adds r4, r7, r1
	ldr r0, [r4]
	bl sub_8050DE4
	ldr r0, [r4]
	bl sub_8050D74
	ldr r2, _080B4F54 @ =0x00000B33
	adds r0, r7, r2
	strb r5, [r0]
	ldr r3, _080B4F5C @ =0x00000B34
	adds r1, r7, r3
	movs r0, #1
	strb r0, [r1]
_080B4E4E:
	adds r0, r7, #0
	ldr r1, [sp, #0x88]
	bl sub_80BB8EC
	adds r0, r7, #0
	bl sub_80B9AC0
	movs r4, #0
	mov sl, r4
_080B4E60:
	mov r5, sl
	lsls r1, r5, #0x18
	lsrs r1, r1, #0x18
	adds r0, r7, #0
	ldr r2, [sp, #0x84]
	bl sub_80B8EBC
	lsls r0, r5, #6
	adds r3, r7, r0
	adds r0, r3, #0
	adds r0, #0xab
	ldrb r0, [r0]
	adds r5, #1
	str r5, [sp, #0xa8]
	cmp r0, #0
	bne _080B4E82
	b _080B51AA
_080B4E82:
	mov r0, sl
	lsls r4, r0, #2
	adds r0, r4, r7
	ldr r1, _080B4F60 @ =0x00000924
	adds r0, r0, r1
	ldr r2, [r0]
	adds r0, r3, #0
	adds r0, #0x8a
	ldrh r0, [r0]
	lsrs r0, r0, #8
	subs r0, #9
	strh r0, [r2]
	adds r0, r4, r7
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r3, #0
	adds r0, #0x8c
	ldrh r0, [r0]
	lsrs r0, r0, #8
	subs r0, #0x20
	strh r0, [r1, #2]
	adds r0, r4, r7
	ldr r1, _080B4F64 @ =0x0000091C
	adds r0, r0, r1
	ldr r0, [r0]
	bl sub_805E8F0
	lsls r0, r0, #0x1e
	str r4, [sp, #0xac]
	mov r2, sl
	lsls r2, r2, #5
	str r2, [sp, #0xb0]
	cmp r0, #0
	blt _080B4EC8
	b _080B5178
_080B4EC8:
	adds r5, r2, r7
	ldr r3, _080B4F68 @ =0x0000092C
	adds r4, r5, r3
	ldr r1, [sp, #0xac]
	adds r0, r1, r7
	ldr r2, _080B4F64 @ =0x0000091C
	adds r0, r0, r2
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x3c
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r0, sp, #0x3c
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	add r0, sp, #0x3c
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r1, r3}
	stm r4!, {r1, r3}
	adds r0, r7, #0
	bl sub_8008910
	adds r4, r0, #0
	ldr r2, _080B4F6C @ =0x00000934
	adds r5, r5, r2
	ldr r0, [r5]
	adds r1, r0, #0
	ldr r3, [sp, #0xac]
	ldr r0, [sp, #0x8c]
	adds r2, r3, r0
	movs r3, #0
	cmp r1, #0
	beq _080B4F24
	ldrh r3, [r5, #4]
_080B4F24:
	adds r6, r4, #0
	lsls r2, r2, #5
	ldr r4, _080B4F70 @ =0x06010000
	adds r2, r2, r4
	add r0, sp, #0x3c
	bl sub_8008F0C
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B4F74
	cmp r1, #0
	beq _080B4F4A
	adds r0, r1, #0
	add r1, sp, #0x3c
	ldm r1!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B4F4A:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B5044
	.align 2, 0
_080B4F54: .4byte 0x00000B33
_080B4F58: .4byte gUnknown_08107AB4
_080B4F5C: .4byte 0x00000B34
_080B4F60: .4byte 0x00000924
_080B4F64: .4byte 0x0000091C
_080B4F68: .4byte 0x0000092C
_080B4F6C: .4byte 0x00000934
_080B4F70: .4byte 0x06010000
_080B4F74:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x78]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x74]
	add r1, sp, #0x78
	add r0, sp, #0x74
	cmp r4, #1
	bhs _080B4F8C
	adds r0, r1, #0
_080B4F8C:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B4FAA
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080B4FAE
	mov r0, sb
	bl sub_80D3BC0
	b _080B4FAE
_080B4FAA:
	movs r0, #0
	mov sb, r0
_080B4FAE:
	adds r5, r0, #0
	str r5, [sp, #0xb4]
	ldr r2, [r6]
	mov ip, r5
	mov r4, sl
	adds r4, #1
	str r4, [sp, #0xa8]
	cmp r2, r8
	beq _080B4FDC
_080B4FC0:
	mov r5, ip
	cmp r5, #0
	beq _080B4FD2
	mov r0, ip
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B4FD2:
	adds r2, #0x10
	movs r0, #0x10
	add ip, r0
	cmp r2, r8
	bne _080B4FC0
_080B4FDC:
	mov r5, ip
	ldr r0, [sp, #0x78]
	cmp r0, #1
	bne _080B4FF8
	cmp r5, #0
	beq _080B4FF4
	adds r0, r5, #0
	add r1, sp, #0x3c
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B4FF4:
	adds r5, #0x10
	b _080B5020
_080B4FF8:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _080B501E
_080B5000:
	cmp r2, #0
	beq _080B5010
	adds r0, r2, #0
	add r1, sp, #0x3c
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B5010:
	movs r5, #1
	rsbs r5, r5, #0
	add r8, r5
	adds r2, #0x10
	mov r0, r8
	cmp r0, #0
	bne _080B5000
_080B501E:
	adds r5, r2, #0
_080B5020:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B5030
_080B502A:
	adds r1, #0x10
	cmp r1, r2
	bne _080B502A
_080B5030:
	cmp r0, #0
	beq _080B5038
	bl sub_80D0260
_080B5038:
	ldr r0, [sp, #0xb4]
	add r0, sb
	ldr r1, [sp, #0xb4]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B5044:
	adds r0, r7, #0
	bl sub_8008910
	adds r6, r0, #0
	ldr r2, [sp, #0xb0]
	adds r0, r2, r7
	ldr r4, _080B50A4 @ =0x0000093C
	adds r0, r0, r4
	ldr r5, [r0]
	ldr r3, _080B50A8 @ =0x0000071C
	adds r0, r7, r3
	ldr r1, [r0, #4]
	bl sub_80074C0
	adds r2, r0, #0
	ldr r0, [sp, #0xb0]
	adds r1, r0, r7
	adds r1, r1, r4
	ldr r0, [r1]
	movs r3, #0
	cmp r0, #0
	beq _080B5072
	ldrh r3, [r1, #4]
_080B5072:
	lsls r2, r2, #5
	ldr r1, _080B50AC @ =0x05000200
	adds r2, r2, r1
	add r0, sp, #0x3c
	adds r1, r5, #0
	bl sub_8008F0C
	add r2, sp, #0x3c
	mov sl, r2
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B50B0
	cmp r1, #0
	beq _080B509C
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B509C:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B5178
	.align 2, 0
_080B50A4: .4byte 0x0000093C
_080B50A8: .4byte 0x0000071C
_080B50AC: .4byte 0x05000200
_080B50B0:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x80]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x7c]
	add r1, sp, #0x80
	add r0, sp, #0x7c
	cmp r4, #1
	bhs _080B50C8
	adds r0, r1, #0
_080B50C8:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B50E6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080B50EA
	mov r0, sb
	bl sub_80D3BC0
	b _080B50EA
_080B50E6:
	movs r0, #0
	mov sb, r0
_080B50EA:
	adds r5, r0, #0
	str r5, [sp, #0xb4]
	ldr r2, [r6]
	mov ip, r5
	cmp r2, r8
	beq _080B5110
_080B50F6:
	mov r0, ip
	cmp r0, #0
	beq _080B5106
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B5106:
	adds r2, #0x10
	movs r0, #0x10
	add ip, r0
	cmp r2, r8
	bne _080B50F6
_080B5110:
	mov r5, ip
	ldr r0, [sp, #0x80]
	cmp r0, #1
	bne _080B512C
	cmp r5, #0
	beq _080B5128
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B5128:
	adds r5, #0x10
	b _080B5154
_080B512C:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _080B5152
_080B5134:
	cmp r2, #0
	beq _080B5144
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B5144:
	movs r5, #1
	rsbs r5, r5, #0
	add r8, r5
	adds r2, #0x10
	mov r0, r8
	cmp r0, #0
	bne _080B5134
_080B5152:
	adds r5, r2, #0
_080B5154:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B5164
_080B515E:
	adds r1, #0x10
	cmp r1, r2
	bne _080B515E
_080B5164:
	cmp r0, #0
	beq _080B516C
	bl sub_80D0260
_080B516C:
	ldr r0, [sp, #0xb4]
	add r0, sb
	ldr r1, [sp, #0xb4]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B5178:
	adds r0, r7, #0
	bl sub_8008920
	adds r6, r0, #0
	ldr r2, [sp, #0xb0]
	adds r0, r2, r7
	ldr r1, _080B51F0 @ =0x0000092C
	adds r0, r0, r1
	ldr r4, [r0]
	adds r5, r2, r7
	adds r5, r5, r1
	ldr r0, [r5]
	movs r2, #0
	cmp r0, #0
	beq _080B5198
	ldrh r2, [r5, #4]
_080B5198:
	ldr r3, [sp, #0xac]
	adds r0, r3, r7
	ldr r5, _080B51F4 @ =0x00000924
	adds r0, r0, r5
	ldr r3, [r0]
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_805E99C
_080B51AA:
	ldr r0, [sp, #0xa8]
	mov sl, r0
	cmp r0, #1
	bgt _080B51B4
	b _080B4E60
_080B51B4:
	movs r1, #0
	mov sb, r1
	ldr r2, _080B51F8 @ =0xFFFFFE8A
	adds r5, r7, r2
	mov r8, r1
_080B51BE:
	mov r3, sb
	cmp r3, #7
	bgt _080B5204
	adds r0, r7, #0
	bl sub_8008920
	adds r4, r0, #0
	ldr r0, _080B51FC @ =0x00000ACC
	adds r3, r7, r0
	ldr r0, [r3]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080B51DC
	ldrh r2, [r3, #4]
_080B51DC:
	mov r3, r8
	adds r0, r3, r7
	ldr r3, _080B5200 @ =0x00000AEC
	adds r0, r0, r3
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
	b _080B524E
	.align 2, 0
_080B51F0: .4byte 0x0000092C
_080B51F4: .4byte 0x00000924
_080B51F8: .4byte 0xFFFFFE8A
_080B51FC: .4byte 0x00000ACC
_080B5200: .4byte 0x00000AEC
_080B5204:
	mov r4, r8
	adds r0, r4, r7
	ldr r6, _080B5308 @ =0x00000AEC
	adds r0, r0, r6
	ldr r1, [r0]
	ldrh r0, [r5]
	lsrs r0, r0, #8
	strh r0, [r1]
	adds r0, r4, r7
	adds r0, r0, r6
	ldr r1, [r0]
	ldrh r0, [r5, #2]
	lsrs r0, r0, #8
	strh r0, [r1, #2]
	adds r0, r4, r7
	adds r0, r0, r6
	ldr r1, [r0]
	ldrb r0, [r5, #0xb]
	strh r0, [r1, #8]
	adds r0, r7, #0
	bl sub_8008920
	adds r4, r0, #0
	ldr r1, _080B530C @ =0x00000AA8
	adds r0, r7, r1
	ldr r1, [r0]
	movs r2, #0
	cmp r1, #0
	beq _080B5240
	ldrh r2, [r0, #4]
_080B5240:
	mov r3, r8
	adds r0, r3, r7
	adds r0, r0, r6
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
_080B524E:
	adds r5, #0x40
	movs r4, #4
	add r8, r4
	movs r0, #1
	add sb, r0
	mov r1, sb
	cmp r1, #9
	ble _080B51BE
	ldr r2, [sp, #0x98]
	cmp r2, #0
	bne _080B528C
	movs r3, #0xf4
	lsls r3, r3, #3
	adds r4, r7, r3
	ldr r0, [r4]
	ldr r1, _080B5310 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl sub_800934C
	adds r0, r7, #0
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [r4]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
	movs r4, #1
	str r4, [sp, #0x98]
_080B528C:
	ldr r5, _080B5314 @ =0x00000B14
_080B528E:
	adds r0, r7, r5
	ldr r0, [r0]
	cmp r0, #1
	bne _080B5298
	b _080B4BCC
_080B5298:
	ldr r1, [sp, #0x38]
	add r0, sp, #0x34
	bl sub_80073E0
	add r0, sp, #0x34
	movs r1, #2
	bl sub_8007184
	ldr r1, [sp, #0x30]
	add r0, sp, #0x2c
	bl sub_8007C28
	add r0, sp, #0x2c
	movs r1, #2
	bl sub_80079E8
	ldr r1, [sp, #0x28]
	add r0, sp, #0x24
	bl sub_8007C28
	add r0, sp, #0x24
	movs r1, #2
	bl sub_80079E8
	ldr r1, [sp, #0x20]
	add r0, sp, #0x1c
	bl sub_8007C28
	add r0, sp, #0x1c
	movs r1, #2
	bl sub_80079E8
	ldr r1, [sp, #0x18]
	add r0, sp, #0x14
	bl sub_8007C28
	add r0, sp, #0x14
	movs r1, #2
	bl sub_80079E8
	ldr r1, [sp, #0x10]
	add r0, sp, #0xc
	bl sub_8007C28
	add r0, sp, #0xc
	movs r1, #2
	bl sub_80079E8
	add sp, #0xb8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B5308: .4byte 0x00000AEC
_080B530C: .4byte 0x00000AA8
_080B5310: .4byte 0x00000889
_080B5314: .4byte 0x00000B14

	thumb_func_start sub_80B5318
sub_80B5318: @ 0x080B5318
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	ldr r0, _080B533C @ =0x00000B3C
	adds r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #6
	bls _080B5328
	b _080B55C4
_080B5328:
	subs r0, #1
	cmp r0, #5
	bls _080B5330
	b _080B55BA
_080B5330:
	lsls r0, r0, #2
	ldr r1, _080B5340 @ =_080B5344
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080B533C: .4byte 0x00000B3C
_080B5340: .4byte _080B5344
_080B5344: @ jump table
	.4byte _080B535C @ case 0
	.4byte _080B5374 @ case 1
	.4byte _080B53AC @ case 2
	.4byte _080B5440 @ case 3
	.4byte _080B54AA @ case 4
	.4byte _080B5564 @ case 5
_080B535C:
	movs r2, #0xb4
	lsls r2, r2, #4
	adds r1, r4, r2
	movs r0, #0
	str r0, [r1]
	ldr r0, _080B5370 @ =0x00000B44
	adds r1, r4, r0
	movs r0, #1
	b _080B55B8
	.align 2, 0
_080B5370: .4byte 0x00000B44
_080B5374:
	movs r1, #0
	str r1, [r4, #0x6c]
	movs r0, #2
	str r0, [r4, #0x74]
	ldr r2, _080B53A4 @ =0x00000B3B
	adds r0, r4, r2
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x88
	strb r1, [r0]
	movs r1, #0xb4
	lsls r1, r1, #4
	adds r0, r4, r1
	movs r1, #1
	str r1, [r0]
	adds r2, #9
	adds r0, r4, r2
	str r1, [r0]
	ldr r1, _080B53A8 @ =0x0000070C
	adds r0, r4, r1
	movs r1, #0xcc
	bl sub_8008B88
	b _080B55BA
	.align 2, 0
_080B53A4: .4byte 0x00000B3B
_080B53A8: .4byte 0x0000070C
_080B53AC:
	ldr r2, _080B53F8 @ =0x00000B3B
	adds r5, r4, r2
	ldrb r6, [r5]
	cmp r6, #1
	bne _080B53D4
	ldr r1, _080B53FC @ =0x0000070C
	adds r0, r4, r1
	movs r1, #0xa6
	bl sub_8008B6C
	movs r2, #0x92
	lsls r2, r2, #4
	adds r0, r4, r2
	ldr r0, [r0]
	movs r1, #2
	bl sub_805E860
	adds r0, r4, #0
	adds r0, #0xeb
	strb r6, [r0]
_080B53D4:
	ldrb r0, [r5]
	cmp r0, #0x3b
	bhi _080B5400
	movs r0, #0xb4
	lsls r0, r0, #4
	adds r1, r4, r0
	movs r0, #2
	str r0, [r1]
	adds r1, r4, #0
	adds r1, #0x88
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	movs r0, #5
	str r0, [r4, #0x6c]
	adds r1, #0x24
	movs r0, #3
	b _080B55B8
	.align 2, 0
_080B53F8: .4byte 0x00000B3B
_080B53FC: .4byte 0x0000070C
_080B5400:
	cmp r0, #0xb3
	bhi _080B542C
	movs r2, #0xb4
	lsls r2, r2, #4
	adds r1, r4, r2
	movs r0, #1
	str r0, [r1]
	str r0, [r4, #0x6c]
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, _080B5428 @ =0x00000B64
	adds r0, r4, r1
	ldrh r0, [r0]
	adds r1, r4, #0
	adds r1, #0xcf
	strb r0, [r1]
	subs r1, #0x1b
	movs r0, #2
	b _080B55B8
	.align 2, 0
_080B5428: .4byte 0x00000B64
_080B542C:
	adds r1, r4, #0
	adds r1, #0xeb
	movs r0, #0
	strb r0, [r1]
	str r0, [r4, #0x6c]
	subs r1, #0x3f
	str r0, [r1]
	movs r0, #0xb4
	strb r0, [r5]
	b _080B55BA
_080B5440:
	ldr r2, _080B548C @ =0x0000070C
	adds r0, r4, r2
	movs r1, #0xcc
	bl sub_8008B88
	ldr r1, _080B5490 @ =0x00000B3B
	adds r0, r4, r1
	movs r1, #0
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x88
	strb r1, [r0]
	adds r1, r4, #0
	adds r1, #0xac
	movs r0, #2
	str r0, [r1]
	adds r0, r4, #0
	adds r0, #0xb4
	movs r5, #1
	str r5, [r0]
	movs r0, #3
	str r0, [r4, #0x74]
	adds r0, r4, #0
	adds r0, #0x8a
	ldrh r1, [r0]
	adds r0, #2
	ldrh r2, [r0]
	adds r0, r4, #0
	bl sub_80B9464
	adds r1, r0, #0
	adds r0, r4, #0
	adds r0, #0x84
	str r1, [r0]
	cmp r1, #0
	ble _080B5494
	str r5, [r4, #0x6c]
	b _080B55BA
	.align 2, 0
_080B548C: .4byte 0x0000070C
_080B5490: .4byte 0x00000B3B
_080B5494:
	cmp r1, #0
	beq _080B549A
	b _080B55BA
_080B549A:
	str r1, [r4, #0x6c]
	movs r2, #0xe3
	lsls r2, r2, #3
	adds r0, r4, r2
	ldr r0, [r0]
	bl sub_8050DE4
	b _080B55BA
_080B54AA:
	adds r0, r4, #0
	adds r0, #0xac
	movs r7, #2
	str r7, [r0]
	adds r0, #8
	movs r6, #1
	str r6, [r0]
	ldr r0, _080B54EC @ =0x00000B3B
	adds r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #1
	bne _080B54CC
	ldr r1, _080B54F0 @ =0x0000070C
	adds r0, r4, r1
	movs r1, #0xa6
	bl sub_8008B6C
_080B54CC:
	ldrb r0, [r5]
	cmp r0, #0x3b
	bhi _080B54F4
	movs r2, #0xb4
	lsls r2, r2, #4
	adds r0, r4, r2
	str r7, [r0]
	adds r1, r4, #0
	adds r1, #0x88
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	movs r0, #5
	str r0, [r4, #0x6c]
	b _080B5508
	.align 2, 0
_080B54EC: .4byte 0x00000B3B
_080B54F0: .4byte 0x0000070C
_080B54F4:
	cmp r0, #0xb3
	bhi _080B5504
	str r6, [r4, #0x6c]
	movs r1, #0xb4
	lsls r1, r1, #4
	adds r0, r4, r1
	str r6, [r0]
	b _080B5508
_080B5504:
	movs r0, #0xb4
	strb r0, [r5]
_080B5508:
	adds r6, r4, #0
	adds r6, #0x84
	ldr r0, [r6]
	cmp r0, #0
	blt _080B55BA
	adds r0, r4, #0
	adds r0, #0x8a
	ldrh r1, [r0]
	adds r5, r4, #0
	adds r5, #0x8c
	ldrh r2, [r5]
	adds r0, r4, #0
	bl sub_80B9464
	str r0, [r6]
	cmp r0, #0
	bge _080B55BA
	movs r2, #0xe3
	lsls r2, r2, #3
	adds r0, r4, r2
	ldr r0, [r0]
	bl sub_8050DE4
	ldr r0, _080B5560 @ =0x00000B3B
	adds r1, r4, r0
	movs r2, #0
	movs r0, #0xb4
	strb r0, [r1]
	str r2, [r4, #0x6c]
	ldrh r0, [r5]
	lsrs r0, r0, #0xb
	cmp r0, #9
	bhi _080B5552
	adds r1, r4, #0
	adds r1, #0x95
	movs r0, #2
	strb r0, [r1]
_080B5552:
	movs r1, #0xc0
	lsls r1, r1, #2
	adds r0, r1, #0
	ldrh r2, [r5]
	adds r0, r0, r2
	strh r0, [r5]
	b _080B55BA
	.align 2, 0
_080B5560: .4byte 0x00000B3B
_080B5564:
	adds r0, r4, #0
	adds r0, #0x88
	movs r1, #0
	strb r1, [r0]
	ldr r2, _080B55CC @ =0x00000B3B
	adds r0, r4, r2
	strb r1, [r0]
	adds r1, r4, #0
	adds r1, #0x95
	movs r0, #1
	strb r0, [r1]
	movs r3, #0
	movs r0, #0xb4
	adds r0, r0, r4
	mov ip, r0
	movs r7, #2
	movs r6, #0xf0
	lsls r6, r6, #7
	movs r2, #0xe8
	lsls r2, r2, #6
	adds r0, r4, #0
	adds r0, #0x8a
	subs r1, #0x29
	movs r5, #0xc0
	lsls r5, r5, #5
_080B5596:
	str r7, [r1]
	strh r6, [r0]
	strh r2, [r0, #2]
	adds r2, r2, r5
	adds r0, #0x40
	adds r1, #0x40
	adds r3, #1
	cmp r3, #1
	bls _080B5596
	movs r0, #0
	movs r1, #2
	str r1, [r4, #0x74]
	mov r1, ip
	str r0, [r1]
	movs r2, #0xb4
	lsls r2, r2, #4
	adds r1, r4, r2
_080B55B8:
	str r0, [r1]
_080B55BA:
	ldr r0, _080B55CC @ =0x00000B3B
	adds r1, r4, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_080B55C4:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B55CC: .4byte 0x00000B3B

	thumb_func_start sub_80B55D0
sub_80B55D0: @ 0x080B55D0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	ldr r4, _080B5738 @ =0xFFFFDFF0
	add sp, r4
	adds r7, r0, #0
	bl sub_8008724
	ldr r0, _080B573C @ =gUnknown_086FD240
	add r1, sp, #0xc
	bl sub_80D102C
	ldr r0, _080B5740 @ =0x0000200C
	add r0, sp
	mov r8, r0
	ldr r6, _080B5744 @ =0x0600F000
	ldr r4, _080B5748 @ =0x00000896
	add r4, sp
	movs r5, #0x1f
_080B55F8:
	adds r0, r4, #0
	adds r1, r6, #0
	movs r2, #0x40
	bl sub_8008E64
	adds r6, #0x40
	adds r4, #0x78
	subs r5, #1
	cmp r5, #0
	bge _080B55F8
	ldr r0, _080B574C @ =gUnknown_086FB004
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl sub_80D102C
	ldr r0, _080B5750 @ =gUnknown_086FD19C
	movs r1, #0xa0
	lsls r1, r1, #0x13
	bl sub_80D102C
	ldr r0, _080B5754 @ =gUnknown_0872C5D0
	ldr r1, _080B5758 @ =0x0600E800
	bl sub_80D102C
	ldr r0, _080B575C @ =gUnknown_0872C73C
	ldr r1, _080B5760 @ =0x0600F800
	bl sub_80D102C
	ldr r0, _080B5764 @ =gUnknown_0872C84C
	ldr r1, _080B5768 @ =0x06004000
	bl sub_80D102C
	ldr r0, _080B576C @ =gUnknown_0872D5AC
	ldr r1, _080B5770 @ =0x050000E0
	movs r2, #0x80
	lsls r2, r2, #2
	bl sub_8008E64
	adds r0, r7, #0
	bl sub_8008918
	ldr r4, _080B5740 @ =0x0000200C
	add r4, sp
	movs r2, #0xfa
	lsls r2, r2, #5
	adds r1, r2, #0
	strh r1, [r4]
	mov r2, r8
	ldrh r1, [r2]
	strh r1, [r0]
	adds r0, r7, #0
	bl sub_8008918
	ldr r2, _080B5774 @ =0x00001F45
	adds r1, r2, #0
	strh r1, [r4]
	mov r2, r8
	ldrh r1, [r2]
	strh r1, [r0, #0xa]
	adds r0, r7, #0
	bl sub_8008918
	ldr r2, _080B5778 @ =0x00001E43
	adds r1, r2, #0
	strh r1, [r4]
	mov r2, r8
	ldrh r1, [r2]
	strh r1, [r0, #0xc]
	adds r0, r7, #0
	bl sub_8008918
	ldr r2, _080B577C @ =0x00001D46
	adds r1, r2, #0
	strh r1, [r4]
	mov r2, r8
	ldrh r1, [r2]
	strh r1, [r0, #0xe]
	ldr r1, _080B5780 @ =0x0600BFE0
	movs r0, #0
	movs r2, #0x20
	bl sub_8008EB8
	adds r0, r7, #0
	bl sub_8008918
	movs r6, #0xb8
	strh r6, [r4]
	mov r2, r8
	ldrh r1, [r2]
	strh r1, [r0, #0x14]
	adds r0, r7, #0
	bl sub_8008918
	movs r5, #0xe0
	strh r5, [r4]
	mov r2, r8
	ldrh r1, [r2]
	strh r1, [r0, #0x16]
	adds r0, r7, #0
	bl sub_8008918
	strh r6, [r4]
	mov r2, r8
	ldrh r1, [r2]
	strh r1, [r0, #0x1c]
	adds r0, r7, #0
	bl sub_8008918
	strh r5, [r4]
	mov r2, r8
	ldrh r1, [r2]
	strh r1, [r0, #0x1e]
	adds r0, r7, #0
	bl sub_80B5788
	movs r1, #0xe3
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r0, [r0]
	mov sb, r0
	adds r0, r7, #0
	bl sub_80088DC
	mov r8, r0
	adds r0, r7, #0
	bl sub_8008920
	adds r6, r0, #0
	adds r0, r7, #0
	bl sub_8008918
	adds r5, r0, #0
	adds r0, r7, #0
	bl sub_8008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl sub_800894C
	movs r2, #0xe1
	lsls r2, r2, #3
	adds r1, r7, r2
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, sb
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl sub_8050D3C
	ldr r3, _080B5784 @ =0x00002010
	add sp, r3
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B5738: .4byte 0xFFFFDFF0
_080B573C: .4byte gUnknown_086FD240
_080B5740: .4byte 0x0000200C
_080B5744: .4byte 0x0600F000
_080B5748: .4byte 0x00000896
_080B574C: .4byte gUnknown_086FB004
_080B5750: .4byte gUnknown_086FD19C
_080B5754: .4byte gUnknown_0872C5D0
_080B5758: .4byte 0x0600E800
_080B575C: .4byte gUnknown_0872C73C
_080B5760: .4byte 0x0600F800
_080B5764: .4byte gUnknown_0872C84C
_080B5768: .4byte 0x06004000
_080B576C: .4byte gUnknown_0872D5AC
_080B5770: .4byte 0x050000E0
_080B5774: .4byte 0x00001F45
_080B5778: .4byte 0x00001E43
_080B577C: .4byte 0x00001D46
_080B5780: .4byte 0x0600BFE0
_080B5784: .4byte 0x00002010

	thumb_func_start sub_80B5788
sub_80B5788: @ 0x080B5788
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r4, r0, #0
	movs r5, #0
	movs r0, #0
	mov sl, r0
	ldr r1, _080B5820 @ =0x00000B5E
	adds r1, r1, r4
	mov r8, r1
	movs r7, #1
	mov ip, r7
	adds r2, r4, #0
	adds r2, #0x8c
	movs r6, #0xe8
	lsls r6, r6, #6
	adds r3, r4, #0
	adds r3, #0x8a
	movs r0, #0xf0
	lsls r0, r0, #7
	mov sb, r0
_080B57B6:
	lsls r1, r5, #6
	mov r7, sb
	strh r7, [r3]
	strh r6, [r2]
	mov r7, r8
	ldrb r0, [r7]
	strb r0, [r2, #3]
	mov r0, ip
	strb r0, [r2, #0x11]
	strb r0, [r2, #9]
	adds r0, r4, #0
	adds r0, #0x6c
	adds r0, r0, r1
	movs r7, #2
	str r7, [r0]
	adds r0, r4, #0
	adds r0, #0x70
	adds r0, r0, r1
	str r7, [r0]
	mov r0, sl
	strb r0, [r2, #0x1f]
	adds r2, #0x40
	movs r1, #0xc0
	lsls r1, r1, #5
	adds r6, r6, r1
	adds r3, #0x40
	adds r5, #1
	cmp r5, #1
	ble _080B57B6
	movs r0, #3
	str r0, [r4, #0x74]
	str r0, [r4, #0x78]
	adds r0, r4, #0
	adds r0, #0xb4
	movs r1, #1
	str r1, [r0]
	adds r0, #4
	str r1, [r0]
	adds r0, r4, #0
	movs r1, #0
	bl sub_80B8DF4
	adds r0, r4, #0
	movs r1, #1
	bl sub_80B8DF4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B5820: .4byte 0x00000B5E

	thumb_func_start sub_80B5824
sub_80B5824: @ 0x080B5824
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1a4
	str r0, [sp, #0x138]
	add r5, sp, #0x30
	adds r0, r5, #0
	bl sub_8007874
	movs r4, #0
	str r4, [r5, #4]
	add r6, sp, #0x38
	adds r0, r6, #0
	bl sub_8007874
	str r4, [r6, #4]
	add r0, sp, #0x40
	mov r8, r0
	bl sub_8007874
	mov r1, r8
	str r4, [r1, #4]
	add r2, sp, #0x48
	mov sb, r2
	mov r0, sb
	bl sub_8007874
	mov r3, sb
	str r4, [r3, #4]
	add r7, sp, #0x50
	mov sl, r7
	mov r0, sl
	bl sub_8007874
	str r4, [r7, #4]
	add r7, sp, #0x58
	adds r0, r7, #0
	bl sub_8007874
	str r4, [r7, #4]
	ldr r1, [sp, #0x34]
	adds r0, r5, #0
	bl sub_8007C28
	adds r0, r5, #0
	movs r1, #6
	bl sub_8007B54
	adds r1, r0, #0
	str r1, [sp, #0x34]
	adds r0, r5, #0
	bl sub_8007D4C
	str r0, [sp, #0x13c]
	ldr r1, [sp, #0x3c]
	adds r0, r6, #0
	bl sub_8007C28
	adds r0, r6, #0
	movs r1, #5
	bl sub_8007B54
	adds r1, r0, #0
	str r1, [sp, #0x3c]
	adds r0, r6, #0
	bl sub_8007D4C
	str r0, [sp, #0x140]
	ldr r1, [sp, #0x44]
	mov r0, r8
	bl sub_8007C28
	mov r0, r8
	movs r1, #8
	bl sub_8007B54
	adds r1, r0, #0
	str r1, [sp, #0x44]
	mov r0, r8
	bl sub_8007D4C
	str r0, [sp, #0x144]
	ldr r1, [sp, #0x4c]
	mov r0, sb
	bl sub_8007C28
	mov r0, sb
	movs r1, #3
	bl sub_8007B54
	adds r1, r0, #0
	str r1, [sp, #0x4c]
	mov r0, sb
	bl sub_8007D4C
	str r0, [sp, #0x148]
	ldr r1, [sp, #0x54]
	mov r0, sl
	bl sub_8007C28
	mov r0, sl
	movs r1, #7
	bl sub_8007B54
	adds r1, r0, #0
	str r1, [sp, #0x54]
	mov r0, sl
	bl sub_8007D4C
	str r0, [sp, #0x14c]
	ldr r1, [sp, #0x5c]
	adds r0, r7, #0
	bl sub_8007C28
	adds r0, r7, #0
	movs r1, #6
	bl sub_8007B54
	adds r1, r0, #0
	str r1, [sp, #0x5c]
	adds r0, r7, #0
	bl sub_8007D4C
	str r0, [sp, #0x150]
	ldr r0, [sp, #0x138]
	bl sub_80B757C
	ldr r0, [sp, #0x138]
	ldr r1, [sp, #0x13c]
	bl sub_80B7164
	mov r0, sp
	adds r0, #0x60
	str r0, [sp, #0x180]
	mov r1, sp
	adds r1, #0x80
	str r1, [sp, #0x184]
	mov r2, sp
	adds r2, #0x88
	str r2, [sp, #0x188]
	mov r3, sp
	adds r3, #0xa0
	str r3, [sp, #0x164]
	mov r4, sp
	adds r4, #0xb0
	str r4, [sp, #0x16c]
	mov r4, sp
	movs r5, #5
	mov sb, r5
_080B5952:
	movs r0, #0
	adds r1, r4, #0
	movs r2, #8
	bl sub_8008EB8
	adds r4, #8
	movs r7, #1
	rsbs r7, r7, #0
	add sb, r7
	mov r0, sb
	cmp r0, #0
	bge _080B5952
	movs r1, #0
	mov sb, r1
	ldr r2, [sp, #0x140]
	lsls r2, r2, #5
	mov sl, r2
	ldr r3, [sp, #0x144]
	lsls r3, r3, #5
	str r3, [sp, #0x17c]
	ldr r4, [sp, #0x144]
	adds r4, #0x6e
	str r4, [sp, #0x168]
	ldr r5, [sp, #0x144]
	adds r5, #0xdc
	str r5, [sp, #0x170]
	movs r7, #0x3f
	mov r8, r7
	mov r4, sp
	movs r6, #0x58
	movs r5, #0x38
_080B5990:
	mov r0, sb
	lsls r3, r0, #3
	ldrb r1, [r4, #3]
	mov r0, r8
	ands r0, r1
	movs r1, #0x80
	orrs r0, r1
	strb r0, [r4, #3]
	ldrb r0, [r4, #1]
	mov r2, r8
	ands r2, r0
	movs r0, #0x40
	orrs r2, r0
	ldrb r1, [r4, #5]
	movs r0, #0xf
	ands r0, r1
	strb r0, [r4, #5]
	ldr r1, [sp, #0x13c]
	adds r3, r3, r1
	ldr r7, _080B59F8 @ =0x000003FF
	adds r0, r7, #0
	ands r3, r0
	ldrh r0, [r4, #4]
	ldr r7, _080B59FC @ =0xFFFFFC00
	adds r1, r7, #0
	ands r0, r1
	orrs r0, r3
	strh r0, [r4, #4]
	movs r0, #0x10
	orrs r2, r0
	strb r2, [r4, #1]
	mov r0, sb
	cmp r0, #2
	bgt _080B5A08
	ldr r0, [sp, #0x138]
	adds r0, #0x9e
	bl sub_80D3B78
	lsrs r0, r0, #1
	lsls r0, r0, #3
	subs r0, r5, r0
	ldr r2, _080B5A00 @ =0x000001FF
	adds r1, r2, #0
	ands r0, r1
	ldrh r1, [r4, #2]
	ldr r3, _080B5A04 @ =0xFFFFFE00
	ands r1, r3
	orrs r1, r0
	strh r1, [r4, #2]
	movs r0, #0x30
	b _080B5A28
	.align 2, 0
_080B59F8: .4byte 0x000003FF
_080B59FC: .4byte 0xFFFFFC00
_080B5A00: .4byte 0x000001FF
_080B5A04: .4byte 0xFFFFFE00
_080B5A08:
	ldr r0, [sp, #0x138]
	adds r0, #0xde
	bl sub_80D3B78
	lsrs r0, r0, #1
	lsls r0, r0, #3
	subs r0, r6, r0
	ldr r7, _080B5B4C @ =0x000001FF
	adds r1, r7, #0
	ands r0, r1
	ldrh r1, [r4, #2]
	ldr r2, _080B5B50 @ =0xFFFFFE00
	ands r1, r2
	orrs r1, r0
	strh r1, [r4, #2]
	movs r0, #0x88
_080B5A28:
	strb r0, [r4]
	adds r4, #8
	adds r6, #0x20
	adds r5, #0x20
	movs r3, #1
	add sb, r3
	mov r7, sb
	cmp r7, #5
	ble _080B5990
	movs r0, #0x14
	bl sub_80005D4
	ldr r2, [sp, #0x138]
	movs r3, #0xf1
	lsls r3, r3, #3
	adds r1, r2, r3
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r4, r0, #0
	ldr r5, [sp, #0x138]
	ldr r7, _080B5B54 @ =0x0000096C
	adds r6, r5, r7
	ldr r0, [r6]
	cmp r4, r0
	beq _080B5A66
	bl sub_8000608
_080B5A66:
	str r4, [r6]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r4]
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	strh r0, [r4, #8]
	str r0, [r4, #0xc]
	strb r1, [r4, #0x10]
	strb r1, [r4, #0x11]
	str r0, [r4, #0x14]
	strb r1, [r4, #0x18]
	ldr r0, [sp, #0x138]
	movs r1, #0x97
	lsls r1, r1, #4
	adds r5, r0, r1
	ldr r0, [r5]
	cmp r4, r0
	beq _080B5A9A
	bl sub_8000608
_080B5A9A:
	str r4, [r5]
	ldr r0, [r6]
	ldr r2, [sp, #0x138]
	ldr r3, _080B5B58 @ =0x00000B18
	adds r1, r2, r3
	ldr r1, [r1]
	bl sub_805E860
	ldr r1, [r5]
	movs r0, #0x60
	strh r0, [r1]
	ldr r1, [r5]
	movs r0, #0xa
	strh r0, [r1, #2]
	ldr r0, [r5]
	add r4, sp, #0x140
	ldrh r4, [r4]
	strh r4, [r0, #6]
	ldr r0, [r5]
	movs r1, #1
	movs r7, #1
	mov r8, r7
	mov r2, r8
	strh r2, [r0, #4]
	ldr r0, [r5]
	strb r1, [r0, #0x18]
	ldr r3, [sp, #0x138]
	ldr r5, _080B5B5C @ =0x00000974
	adds r4, r3, r5
	ldr r0, [r6]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x60
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	ldr r0, [sp, #0x180]
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	ldr r0, [sp, #0x180]
	ldm r0!, {r1, r2, r7}
	stm r4!, {r1, r2, r7}
	ldm r0!, {r3, r5, r7}
	stm r4!, {r3, r5, r7}
	ldm r0!, {r1, r2}
	stm r4!, {r1, r2}
	ldr r0, [sp, #0x138]
	bl sub_8008910
	ldr r3, [sp, #0x138]
	ldr r4, _080B5B60 @ =0x0000097C
	adds r2, r3, r4
	ldr r1, [r2]
	movs r3, #0
	cmp r1, #0
	beq _080B5B1A
	ldrh r3, [r2, #4]
_080B5B1A:
	adds r6, r0, #0
	ldr r2, _080B5B64 @ =0x06010000
	add r2, sl
	ldr r0, [sp, #0x180]
	bl sub_8008F0C
	ldr r5, [sp, #0x180]
	mov sb, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B5B68
	cmp r1, #0
	beq _080B5B42
	adds r0, r1, #0
	adds r1, r5, #0
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B5B42:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B5C34
	.align 2, 0
_080B5B4C: .4byte 0x000001FF
_080B5B50: .4byte 0xFFFFFE00
_080B5B54: .4byte 0x0000096C
_080B5B58: .4byte 0x00000B18
_080B5B5C: .4byte 0x00000974
_080B5B60: .4byte 0x0000097C
_080B5B64: .4byte 0x06010000
_080B5B68:
	str r1, [sp, #0x19c]
	add r1, sp, #0xd4
	mov r4, r8
	str r4, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x19c]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0xd0
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _080B5B86
	mov r0, sl
_080B5B86:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B5BA4
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080B5BA8
	mov r0, r8
	bl sub_80D3BC0
	b _080B5BA8
_080B5BA4:
	movs r0, #0
	mov r8, r0
_080B5BA8:
	adds r5, r0, #0
	str r5, [sp, #0x1a0]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x19c]
	cmp r2, r7
	beq _080B5BD0
_080B5BB6:
	cmp r3, #0
	beq _080B5BC6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B5BC6:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x19c]
	cmp r2, r0
	bne _080B5BB6
_080B5BD0:
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _080B5BEE
	cmp r5, #0
	beq _080B5BEA
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B5BEA:
	adds r5, #0x10
	b _080B5C10
_080B5BEE:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080B5C0E
_080B5BF6:
	cmp r2, #0
	beq _080B5C06
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B5C06:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B5BF6
_080B5C0E:
	adds r5, r2, #0
_080B5C10:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B5C20
_080B5C1A:
	adds r1, #0x10
	cmp r1, r2
	bne _080B5C1A
_080B5C20:
	cmp r0, #0
	beq _080B5C28
	bl sub_80D0260
_080B5C28:
	ldr r0, [sp, #0x1a0]
	add r0, r8
	ldr r1, [sp, #0x1a0]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B5C34:
	ldr r0, [sp, #0x138]
	bl sub_8008910
	adds r4, r0, #0
	ldr r3, [sp, #0x138]
	ldr r5, _080B5C7C @ =0x00000984
	adds r2, r3, r5
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080B5C4E
	ldrh r3, [r2, #4]
_080B5C4E:
	adds r6, r4, #0
	add r0, sp, #0x60
	ldr r2, _080B5C80 @ =0x05000220
	bl sub_8008F0C
	ldr r7, [sp, #0x180]
	mov sb, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B5C84
	cmp r1, #0
	beq _080B5C74
	adds r0, r1, #0
	adds r1, r7, #0
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B5C74:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B5D50
	.align 2, 0
_080B5C7C: .4byte 0x00000984
_080B5C80: .4byte 0x05000220
_080B5C84:
	str r1, [sp, #0x19c]
	movs r0, #1
	add r1, sp, #0xdc
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x19c]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0xd8
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _080B5CA2
	mov r0, sl
_080B5CA2:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B5CC0
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080B5CC4
	mov r0, r8
	bl sub_80D3BC0
	b _080B5CC4
_080B5CC0:
	movs r0, #0
	mov r8, r0
_080B5CC4:
	adds r5, r0, #0
	str r5, [sp, #0x1a0]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x19c]
	cmp r2, r7
	beq _080B5CEC
_080B5CD2:
	cmp r3, #0
	beq _080B5CE2
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B5CE2:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x19c]
	cmp r2, r0
	bne _080B5CD2
_080B5CEC:
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _080B5D0A
	cmp r5, #0
	beq _080B5D06
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B5D06:
	adds r5, #0x10
	b _080B5D2C
_080B5D0A:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080B5D2A
_080B5D12:
	cmp r2, #0
	beq _080B5D22
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B5D22:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B5D12
_080B5D2A:
	adds r5, r2, #0
_080B5D2C:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B5D3C
_080B5D36:
	adds r1, #0x10
	cmp r1, r2
	bne _080B5D36
_080B5D3C:
	cmp r0, #0
	beq _080B5D44
	bl sub_80D0260
_080B5D44:
	ldr r0, [sp, #0x1a0]
	add r0, r8
	ldr r1, [sp, #0x1a0]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B5D50:
	movs r0, #0x14
	bl sub_80005D4
	ldr r2, [sp, #0x138]
	ldr r3, _080B5E54 @ =0x0000078C
	adds r1, r2, r3
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r4, r0, #0
	ldr r5, [sp, #0x138]
	ldr r7, _080B5E58 @ =0x00000994
	adds r6, r5, r7
	ldr r0, [r6]
	cmp r4, r0
	beq _080B5D7A
	bl sub_8000608
_080B5D7A:
	str r4, [r6]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r4]
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	strh r0, [r4, #8]
	str r0, [r4, #0xc]
	strb r1, [r4, #0x10]
	strb r1, [r4, #0x11]
	str r0, [r4, #0x14]
	strb r1, [r4, #0x18]
	ldr r0, [sp, #0x138]
	ldr r1, _080B5E5C @ =0x00000998
	adds r5, r0, r1
	ldr r0, [r5]
	cmp r4, r0
	beq _080B5DAC
	bl sub_8000608
_080B5DAC:
	str r4, [r5]
	ldr r0, [r6]
	movs r1, #0
	bl sub_805E860
	ldr r1, [r5]
	movs r0, #0x10
	strh r0, [r1]
	ldr r1, [r5]
	movs r0, #0x4a
	strh r0, [r1, #2]
	ldr r0, [r5]
	add r2, sp, #0x144
	ldrh r2, [r2]
	strh r2, [r0, #6]
	ldr r1, [r5]
	movs r0, #2
	strh r0, [r1, #4]
	ldr r0, [r5]
	movs r5, #1
	strb r5, [r0, #0x18]
	ldr r3, [sp, #0x138]
	ldr r7, _080B5E60 @ =0x0000099C
	adds r4, r3, r7
	ldr r0, [r6]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x60
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	ldr r0, [sp, #0x180]
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	ldr r0, [sp, #0x180]
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r1, r2, r7}
	stm r4!, {r1, r2, r7}
	ldm r0!, {r3, r7}
	stm r4!, {r3, r7}
	ldr r0, [sp, #0x138]
	bl sub_8008910
	ldr r1, [sp, #0x138]
	ldr r3, _080B5E64 @ =0x000009A4
	adds r2, r1, r3
	ldr r1, [r2]
	movs r3, #0
	cmp r1, #0
	beq _080B5E22
	ldrh r3, [r2, #4]
_080B5E22:
	adds r6, r0, #0
	ldr r4, [sp, #0x17c]
	ldr r7, _080B5E68 @ =0x06010000
	adds r2, r4, r7
	ldr r0, [sp, #0x180]
	bl sub_8008F0C
	ldr r0, [sp, #0x180]
	mov sb, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B5E6C
	cmp r1, #0
	beq _080B5E4C
	adds r0, r1, #0
	ldr r1, [sp, #0x180]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B5E4C:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B5F36
	.align 2, 0
_080B5E54: .4byte 0x0000078C
_080B5E58: .4byte 0x00000994
_080B5E5C: .4byte 0x00000998
_080B5E60: .4byte 0x0000099C
_080B5E64: .4byte 0x000009A4
_080B5E68: .4byte 0x06010000
_080B5E6C:
	str r1, [sp, #0x19c]
	add r1, sp, #0xe4
	str r5, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x19c]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0xe0
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _080B5E88
	mov r0, sl
_080B5E88:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B5EA6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080B5EAA
	mov r0, r8
	bl sub_80D3BC0
	b _080B5EAA
_080B5EA6:
	movs r0, #0
	mov r8, r0
_080B5EAA:
	adds r5, r0, #0
	str r5, [sp, #0x1a0]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x19c]
	cmp r2, r7
	beq _080B5ED2
_080B5EB8:
	cmp r3, #0
	beq _080B5EC8
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B5EC8:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x19c]
	cmp r2, r0
	bne _080B5EB8
_080B5ED2:
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _080B5EF0
	cmp r5, #0
	beq _080B5EEC
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B5EEC:
	adds r5, #0x10
	b _080B5F12
_080B5EF0:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080B5F10
_080B5EF8:
	cmp r2, #0
	beq _080B5F08
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B5F08:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B5EF8
_080B5F10:
	adds r5, r2, #0
_080B5F12:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B5F22
_080B5F1C:
	adds r1, #0x10
	cmp r1, r2
	bne _080B5F1C
_080B5F22:
	cmp r0, #0
	beq _080B5F2A
	bl sub_80D0260
_080B5F2A:
	ldr r0, [sp, #0x1a0]
	add r0, r8
	ldr r1, [sp, #0x1a0]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B5F36:
	ldr r0, [sp, #0x138]
	bl sub_8008910
	adds r4, r0, #0
	ldr r3, [sp, #0x138]
	ldr r5, _080B5F80 @ =0x000009AC
	adds r2, r3, r5
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080B5F50
	ldrh r3, [r2, #4]
_080B5F50:
	adds r6, r4, #0
	add r0, sp, #0x60
	ldr r2, _080B5F84 @ =0x05000240
	bl sub_8008F0C
	ldr r7, [sp, #0x180]
	mov sb, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B5F88
	cmp r1, #0
	beq _080B5F76
	adds r0, r1, #0
	adds r1, r7, #0
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B5F76:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B6054
	.align 2, 0
_080B5F80: .4byte 0x000009AC
_080B5F84: .4byte 0x05000240
_080B5F88:
	str r1, [sp, #0x19c]
	movs r0, #1
	add r1, sp, #0xec
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x19c]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0xe8
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _080B5FA6
	mov r0, sl
_080B5FA6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B5FC4
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080B5FC8
	mov r0, r8
	bl sub_80D3BC0
	b _080B5FC8
_080B5FC4:
	movs r0, #0
	mov r8, r0
_080B5FC8:
	adds r5, r0, #0
	str r5, [sp, #0x1a0]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x19c]
	cmp r2, r7
	beq _080B5FF0
_080B5FD6:
	cmp r3, #0
	beq _080B5FE6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B5FE6:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x19c]
	cmp r2, r0
	bne _080B5FD6
_080B5FF0:
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _080B600E
	cmp r5, #0
	beq _080B600A
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B600A:
	adds r5, #0x10
	b _080B6030
_080B600E:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080B602E
_080B6016:
	cmp r2, #0
	beq _080B6026
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B6026:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B6016
_080B602E:
	adds r5, r2, #0
_080B6030:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B6040
_080B603A:
	adds r1, #0x10
	cmp r1, r2
	bne _080B603A
_080B6040:
	cmp r0, #0
	beq _080B6048
	bl sub_80D0260
_080B6048:
	ldr r0, [sp, #0x1a0]
	add r0, r8
	ldr r1, [sp, #0x1a0]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B6054:
	movs r1, #0
	movs r0, #0
	ldr r2, [sp, #0x180]
	strh r0, [r2, #8]
	str r0, [r2, #0xc]
	strb r1, [r2, #0x10]
	strb r1, [r2, #0x11]
	str r0, [r2, #0x14]
	movs r0, #0x90
	strh r0, [r2]
	movs r0, #0x26
	strh r0, [r2, #2]
	add r3, sp, #0x168
	ldrh r3, [r3]
	strh r3, [r2, #6]
	movs r0, #3
	strh r0, [r2, #4]
	movs r4, #1
	strb r4, [r2, #0x18]
	ldr r5, [sp, #0x138]
	movs r7, #0xf2
	lsls r7, r7, #3
	adds r0, r5, r7
	ldr r1, [r0]
	ldr r2, [r1]
	ldr r0, [sp, #0x184]
	ldr r3, [r2, #0x10]
	movs r2, #0
	bl sub_80D3918
	ldr r0, [sp, #0x138]
	bl sub_8008910
	adds r2, r0, #0
	ldr r1, [sp, #0x188]
	ldr r0, [r1]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080B60A8
	ldr r5, [sp, #0x188]
	ldrh r3, [r5, #4]
_080B60A8:
	adds r6, r2, #0
	ldr r7, [sp, #0x17c]
	ldr r0, _080B60DC @ =0x06010DC0
	adds r2, r7, r0
	add r0, sp, #0xa0
	bl sub_8008F0C
	ldr r1, [sp, #0x164]
	mov sb, r1
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B60E0
	cmp r1, #0
	beq _080B60D2
	adds r0, r1, #0
	ldr r1, [sp, #0x164]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B60D2:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B61AA
	.align 2, 0
_080B60DC: .4byte 0x06010DC0
_080B60E0:
	str r1, [sp, #0x19c]
	add r1, sp, #0xf4
	str r4, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x19c]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0xf0
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _080B60FC
	mov r0, sl
_080B60FC:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B611A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080B611E
	mov r0, r8
	bl sub_80D3BC0
	b _080B611E
_080B611A:
	movs r0, #0
	mov r8, r0
_080B611E:
	adds r5, r0, #0
	str r5, [sp, #0x1a0]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x19c]
	cmp r2, r7
	beq _080B6146
_080B612C:
	cmp r3, #0
	beq _080B613C
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B613C:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x19c]
	cmp r2, r0
	bne _080B612C
_080B6146:
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _080B6164
	cmp r5, #0
	beq _080B6160
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B6160:
	adds r5, #0x10
	b _080B6186
_080B6164:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080B6184
_080B616C:
	cmp r2, #0
	beq _080B617C
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B617C:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B616C
_080B6184:
	adds r5, r2, #0
_080B6186:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B6196
_080B6190:
	adds r1, #0x10
	cmp r1, r2
	bne _080B6190
_080B6196:
	cmp r0, #0
	beq _080B619E
	bl sub_80D0260
_080B619E:
	ldr r0, [sp, #0x1a0]
	add r0, r8
	ldr r1, [sp, #0x1a0]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B61AA:
	movs r0, #0x14
	bl sub_80005D4
	ldr r2, [sp, #0x138]
	movs r3, #0xf2
	lsls r3, r3, #3
	adds r1, r2, r3
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r4, r0, #0
	ldr r5, [sp, #0x138]
	ldr r7, _080B62C0 @ =0x000009BC
	adds r6, r5, r7
	ldr r0, [r6]
	cmp r4, r0
	beq _080B61D6
	bl sub_8000608
_080B61D6:
	str r4, [r6]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r4]
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	strh r0, [r4, #8]
	str r0, [r4, #0xc]
	strb r1, [r4, #0x10]
	strb r1, [r4, #0x11]
	str r0, [r4, #0x14]
	strb r1, [r4, #0x18]
	ldr r0, [sp, #0x138]
	movs r1, #0x9c
	lsls r1, r1, #4
	adds r5, r0, r1
	ldr r0, [r5]
	cmp r4, r0
	beq _080B620A
	bl sub_8000608
_080B620A:
	str r4, [r5]
	ldr r0, [r6]
	ldr r3, [sp, #0x138]
	ldr r4, _080B62C4 @ =0x00000B18
	adds r2, r3, r4
	ldr r7, _080B62C8 @ =0x00000B3D
	adds r1, r3, r7
	ldr r2, [r2]
	adds r1, r1, r2
	ldrb r1, [r1]
	bl sub_805E860
	ldr r1, [r5]
	movs r0, #0x90
	strh r0, [r1]
	ldr r1, [r5]
	movs r0, #0x26
	strh r0, [r1, #2]
	ldr r0, [r5]
	add r1, sp, #0x170
	ldrh r1, [r1]
	strh r1, [r0, #6]
	ldr r1, [r5]
	movs r0, #3
	strh r0, [r1, #4]
	ldr r0, [r5]
	movs r5, #1
	strb r5, [r0, #0x18]
	ldr r2, [sp, #0x138]
	ldr r3, _080B62CC @ =0x000009C4
	adds r4, r2, r3
	ldr r0, [r6]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0xb0
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	ldr r0, [sp, #0x16c]
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	ldr r0, [sp, #0x16c]
	ldm r0!, {r1, r2, r7}
	stm r4!, {r1, r2, r7}
	ldm r0!, {r1, r3, r7}
	stm r4!, {r1, r3, r7}
	ldm r0!, {r2, r3}
	stm r4!, {r2, r3}
	ldr r0, [sp, #0x138]
	bl sub_8008910
	ldr r4, [sp, #0x138]
	ldr r7, _080B62D0 @ =0x000009CC
	adds r2, r4, r7
	ldr r1, [r2]
	movs r3, #0
	cmp r1, #0
	beq _080B628E
	ldrh r3, [r2, #4]
_080B628E:
	adds r6, r0, #0
	ldr r0, [sp, #0x17c]
	ldr r4, _080B62D4 @ =0x06011B80
	adds r2, r0, r4
	add r0, sp, #0xa0
	bl sub_8008F0C
	ldr r7, [sp, #0x164]
	mov sb, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B62D8
	cmp r1, #0
	beq _080B62B8
	adds r0, r1, #0
	adds r1, r7, #0
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B62B8:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B63A2
	.align 2, 0
_080B62C0: .4byte 0x000009BC
_080B62C4: .4byte 0x00000B18
_080B62C8: .4byte 0x00000B3D
_080B62CC: .4byte 0x000009C4
_080B62D0: .4byte 0x000009CC
_080B62D4: .4byte 0x06011B80
_080B62D8:
	str r1, [sp, #0x19c]
	add r1, sp, #0xfc
	str r5, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x19c]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0xf8
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _080B62F4
	mov r0, sl
_080B62F4:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B6312
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080B6316
	mov r0, r8
	bl sub_80D3BC0
	b _080B6316
_080B6312:
	movs r0, #0
	mov r8, r0
_080B6316:
	adds r5, r0, #0
	str r5, [sp, #0x1a0]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x19c]
	cmp r2, r7
	beq _080B633E
_080B6324:
	cmp r3, #0
	beq _080B6334
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B6334:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x19c]
	cmp r2, r0
	bne _080B6324
_080B633E:
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _080B635C
	cmp r5, #0
	beq _080B6358
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B6358:
	adds r5, #0x10
	b _080B637E
_080B635C:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080B637C
_080B6364:
	cmp r2, #0
	beq _080B6374
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B6374:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B6364
_080B637C:
	adds r5, r2, #0
_080B637E:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B638E
_080B6388:
	adds r1, #0x10
	cmp r1, r2
	bne _080B6388
_080B638E:
	cmp r0, #0
	beq _080B6396
	bl sub_80D0260
_080B6396:
	ldr r0, [sp, #0x1a0]
	add r0, r8
	ldr r1, [sp, #0x1a0]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B63A2:
	ldr r0, [sp, #0x138]
	bl sub_8008910
	adds r4, r0, #0
	ldr r3, [sp, #0x138]
	ldr r5, _080B63EC @ =0x000009D4
	adds r2, r3, r5
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080B63BC
	ldrh r3, [r2, #4]
_080B63BC:
	adds r6, r4, #0
	add r0, sp, #0xa0
	ldr r2, _080B63F0 @ =0x05000260
	bl sub_8008F0C
	ldr r7, [sp, #0x164]
	mov sb, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B63F4
	cmp r1, #0
	beq _080B63E2
	adds r0, r1, #0
	adds r1, r7, #0
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B63E2:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B64BE
	.align 2, 0
_080B63EC: .4byte 0x000009D4
_080B63F0: .4byte 0x05000260
_080B63F4:
	mov sl, r1
	movs r0, #1
	add r1, sp, #0x104
	str r0, [r1]
	ldr r0, [r6]
	mov r5, sl
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x100
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x100
	cmp r4, r0
	bhs _080B6414
	adds r1, r2, #0
_080B6414:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B6432
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080B6436
	mov r0, r8
	bl sub_80D3BC0
	b _080B6436
_080B6432:
	movs r0, #0
	mov r8, r0
_080B6436:
	adds r5, r0, #0
	str r5, [sp, #0x1a0]
	ldr r2, [r6]
	adds r3, r5, #0
	cmp r2, sl
	beq _080B645A
_080B6442:
	cmp r3, #0
	beq _080B6452
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B6452:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080B6442
_080B645A:
	adds r5, r3, #0
	add r0, sp, #0x104
	ldr r0, [r0]
	cmp r0, #1
	bne _080B6478
	cmp r5, #0
	beq _080B6474
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B6474:
	adds r5, #0x10
	b _080B649A
_080B6478:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080B6498
_080B6480:
	cmp r2, #0
	beq _080B6490
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B6490:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B6480
_080B6498:
	adds r5, r2, #0
_080B649A:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B64AA
_080B64A4:
	adds r1, #0x10
	cmp r1, r2
	bne _080B64A4
_080B64AA:
	cmp r0, #0
	beq _080B64B2
	bl sub_80D0260
_080B64B2:
	ldr r0, [sp, #0x1a0]
	add r0, r8
	ldr r1, [sp, #0x1a0]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B64BE:
	movs r0, #0x14
	bl sub_80005D4
	ldr r2, [sp, #0x138]
	ldr r3, _080B65EC @ =0x00000794
	adds r1, r2, r3
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r4, r0, #0
	ldr r7, [sp, #0x138]
	ldr r0, _080B65F0 @ =0x000009E4
	adds r5, r7, r0
	ldr r0, [r5]
	cmp r4, r0
	beq _080B64E8
	bl sub_8000608
_080B64E8:
	str r4, [r5]
	adds r0, r4, #0
	movs r1, #0
	bl sub_805E860
	movs r1, #0
	mov sb, r1
	movs r3, #0x9f
	lsls r3, r3, #4
	ldr r2, [sp, #0x138]
	adds r3, r2, r3
	str r3, [sp, #0x18c]
	movs r4, #0
	str r4, [sp, #0x190]
	ldr r5, _080B65F4 @ =0x000009E8
	adds r5, r2, r5
	str r5, [sp, #0x194]
	ldr r7, [sp, #0x148]
	str r7, [sp, #0x198]
_080B650E:
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r0, #0
	strh r0, [r4]
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	strh r0, [r4, #8]
	movs r1, #0
	str r1, [r4, #0xc]
	strb r0, [r4, #0x10]
	strb r0, [r4, #0x11]
	str r1, [r4, #0x14]
	strb r0, [r4, #0x18]
	ldr r2, [sp, #0x194]
	ldr r0, [r2]
	cmp r4, r0
	beq _080B653A
	bl sub_8000608
_080B653A:
	ldr r3, [sp, #0x194]
	str r4, [r3]
	movs r0, #0x9e
	mov r5, sb
	muls r5, r0, r5
	adds r0, r5, #0
	adds r0, #0x28
	strh r0, [r4]
	movs r0, #0xe
	strh r0, [r4, #2]
	add r7, sp, #0x198
	ldrh r7, [r7]
	strh r7, [r4, #6]
	movs r0, #4
	strh r0, [r4, #4]
	movs r5, #1
	strb r5, [r4, #0x18]
	mov r0, sb
	cmp r0, #0
	bne _080B656C
	ldr r1, [sp, #0x138]
	ldr r2, _080B65F4 @ =0x000009E8
	adds r0, r1, r2
	ldr r0, [r0]
	strb r5, [r0, #0x10]
_080B656C:
	ldr r3, [sp, #0x138]
	ldr r4, _080B65F0 @ =0x000009E4
	adds r0, r3, r4
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0xa0
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	ldr r0, [sp, #0x164]
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	ldr r1, [sp, #0x18c]
	ldr r0, [sp, #0x164]
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r2, r4, r7}
	stm r1!, {r2, r4, r7}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	ldr r0, [sp, #0x138]
	bl sub_8008910
	ldr r7, [sp, #0x18c]
	ldr r1, [r7, #8]
	movs r3, #0
	cmp r1, #0
	beq _080B65B6
	ldrh r3, [r7, #0xc]
_080B65B6:
	adds r6, r0, #0
	ldr r0, [sp, #0x198]
	lsls r2, r0, #5
	ldr r4, _080B65F8 @ =0x06010000
	adds r2, r2, r4
	ldr r0, [sp, #0x164]
	bl sub_8008F0C
	ldr r7, [sp, #0x164]
	mov sl, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B65FC
	cmp r1, #0
	beq _080B65E2
	adds r0, r1, #0
	adds r1, r7, #0
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B65E2:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B66C4
	.align 2, 0
_080B65EC: .4byte 0x00000794
_080B65F0: .4byte 0x000009E4
_080B65F4: .4byte 0x000009E8
_080B65F8: .4byte 0x06010000
_080B65FC:
	str r1, [sp, #0x19c]
	add r2, sp, #0x10c
	str r5, [r2]
	ldr r0, [r6]
	ldr r5, [sp, #0x19c]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x108
	str r4, [r0]
	ldr r1, [r2]
	cmp r4, r1
	bhs _080B6616
	adds r0, r2, #0
_080B6616:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B6634
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080B6638
	mov r0, r8
	bl sub_80D3BC0
	b _080B6638
_080B6634:
	movs r0, #0
	mov r8, r0
_080B6638:
	adds r5, r0, #0
	str r5, [sp, #0x1a0]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x19c]
	cmp r2, r7
	beq _080B6660
_080B6646:
	cmp r3, #0
	beq _080B6656
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B6656:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x19c]
	cmp r2, r0
	bne _080B6646
_080B6660:
	adds r5, r3, #0
	add r0, sp, #0x10c
	ldr r0, [r0]
	cmp r0, #1
	bne _080B667E
	cmp r5, #0
	beq _080B667A
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B667A:
	adds r5, #0x10
	b _080B66A0
_080B667E:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080B669E
_080B6686:
	cmp r2, #0
	beq _080B6696
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B6696:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B6686
_080B669E:
	adds r5, r2, #0
_080B66A0:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B66B0
_080B66AA:
	adds r1, #0x10
	cmp r1, r2
	bne _080B66AA
_080B66B0:
	cmp r0, #0
	beq _080B66B8
	bl sub_80D0260
_080B66B8:
	ldr r0, [sp, #0x1a0]
	add r0, r8
	ldr r7, [sp, #0x1a0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B66C4:
	ldr r0, [sp, #0x138]
	bl sub_8008910
	adds r5, r0, #0
	ldr r1, [sp, #0x190]
	ldr r2, [sp, #0x138]
	adds r0, r1, r2
	movs r1, #0xa0
	lsls r1, r1, #4
	adds r0, r0, r1
	ldr r4, [r0]
	ldr r3, [sp, #0x190]
	adds r2, r3, r2
	adds r2, r2, r1
	ldr r0, [r2]
	movs r3, #0
	cmp r0, #0
	beq _080B66EA
	ldrh r3, [r2, #4]
_080B66EA:
	adds r6, r5, #0
	add r0, sp, #0xa0
	adds r1, r4, #0
	ldr r2, _080B671C @ =0x05000280
	bl sub_8008F0C
	ldr r4, [sp, #0x164]
	mov sl, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B6720
	cmp r1, #0
	beq _080B6712
	adds r0, r1, #0
	adds r1, r4, #0
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B6712:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B67EA
	.align 2, 0
_080B671C: .4byte 0x05000280
_080B6720:
	str r1, [sp, #0x19c]
	movs r0, #1
	add r2, sp, #0x114
	str r0, [r2]
	ldr r0, [r6]
	ldr r3, [sp, #0x19c]
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0x110
	str r4, [r0]
	ldr r1, [r2]
	cmp r4, r1
	bhs _080B673C
	adds r0, r2, #0
_080B673C:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B675A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080B675E
	mov r0, r8
	bl sub_80D3BC0
	b _080B675E
_080B675A:
	movs r0, #0
	mov r8, r0
_080B675E:
	adds r5, r0, #0
	str r5, [sp, #0x1a0]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x19c]
	cmp r2, r4
	beq _080B6786
_080B676C:
	cmp r3, #0
	beq _080B677C
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B677C:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x19c]
	cmp r2, r5
	bne _080B676C
_080B6786:
	adds r5, r3, #0
	add r0, sp, #0x114
	ldr r0, [r0]
	cmp r0, #1
	bne _080B67A4
	cmp r5, #0
	beq _080B67A0
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B67A0:
	adds r5, #0x10
	b _080B67C6
_080B67A4:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080B67C4
_080B67AC:
	cmp r2, #0
	beq _080B67BC
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B67BC:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B67AC
_080B67C4:
	adds r5, r2, #0
_080B67C6:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B67D6
_080B67D0:
	adds r1, #0x10
	cmp r1, r2
	bne _080B67D0
_080B67D6:
	cmp r0, #0
	beq _080B67DE
	bl sub_80D0260
_080B67DE:
	ldr r0, [sp, #0x1a0]
	add r0, r8
	ldr r1, [sp, #0x1a0]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B67EA:
	ldr r2, [sp, #0x18c]
	adds r2, #0x20
	str r2, [sp, #0x18c]
	ldr r3, [sp, #0x190]
	adds r3, #0x20
	str r3, [sp, #0x190]
	ldr r4, [sp, #0x194]
	adds r4, #4
	str r4, [sp, #0x194]
	ldr r5, [sp, #0x198]
	adds r5, #4
	str r5, [sp, #0x198]
	movs r7, #1
	add sb, r7
	mov r0, sb
	cmp r0, #1
	bgt _080B680E
	b _080B650E
_080B680E:
	movs r0, #0x14
	bl sub_80005D4
	ldr r2, [sp, #0x138]
	movs r3, #0xf3
	lsls r3, r3, #3
	adds r1, r2, r3
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r4, r0, #0
	ldr r7, [sp, #0x138]
	movs r0, #0xa3
	lsls r0, r0, #4
	adds r5, r7, r0
	ldr r0, [r5]
	cmp r4, r0
	beq _080B683C
	bl sub_8000608
_080B683C:
	str r4, [r5]
	adds r0, r4, #0
	movs r1, #0
	bl sub_805E860
	ldr r1, [r5]
	movs r0, #0x90
	strh r0, [r1, #0x10]
	movs r1, #0
	mov sb, r1
	movs r2, #0
	mov r8, r2
	movs r5, #0
	ldr r3, [sp, #0x138]
	ldr r4, _080B69AC @ =0x00000A34
	adds r6, r3, r4
	movs r7, #0
_080B685E:
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	strh r5, [r4]
	strh r5, [r4, #2]
	strh r5, [r4, #4]
	strh r5, [r4, #6]
	strh r5, [r4, #8]
	str r5, [r4, #0xc]
	mov r0, r8
	strb r0, [r4, #0x10]
	strb r0, [r4, #0x11]
	str r5, [r4, #0x14]
	strb r0, [r4, #0x18]
	ldr r0, [r6]
	cmp r4, r0
	beq _080B6886
	bl sub_8000608
_080B6886:
	stm r6!, {r4}
	mov r1, sb
	lsls r0, r1, #7
	adds r0, #0x10
	strh r0, [r4]
	movs r0, #0x4a
	subs r0, r0, r7
	strh r0, [r4, #2]
	add r2, sp, #0x14c
	ldrh r2, [r2]
	strh r2, [r4, #6]
	movs r0, #5
	strh r0, [r4, #4]
	movs r3, #1
	mov sl, r3
	mov r0, sl
	strb r0, [r4, #0x18]
	adds r7, #0x24
	add sb, r3
	mov r1, sb
	cmp r1, #1
	ble _080B685E
	movs r0, #0x14
	bl sub_80005D4
	ldr r2, [sp, #0x138]
	ldr r3, _080B69B0 @ =0x0000079C
	adds r1, r2, r3
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r4, r0, #0
	ldr r7, [sp, #0x138]
	ldr r0, _080B69B4 @ =0x00000A7C
	adds r5, r7, r0
	ldr r0, [r5]
	cmp r4, r0
	beq _080B68DC
	bl sub_8000608
_080B68DC:
	str r4, [r5]
	adds r0, r4, #0
	movs r1, #0
	bl sub_805E860
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r4]
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	strh r0, [r4, #8]
	str r0, [r4, #0xc]
	strb r1, [r4, #0x10]
	strb r1, [r4, #0x11]
	str r0, [r4, #0x14]
	strb r1, [r4, #0x18]
	ldr r1, [sp, #0x138]
	movs r2, #0xa8
	lsls r2, r2, #4
	adds r5, r1, r2
	ldr r0, [r5]
	cmp r4, r0
	beq _080B6918
	bl sub_8000608
_080B6918:
	str r4, [r5]
	movs r0, #0x60
	strh r0, [r4]
	movs r0, #0x48
	strh r0, [r4, #2]
	add r3, sp, #0x150
	ldrh r3, [r3]
	strh r3, [r4, #6]
	movs r0, #6
	strh r0, [r4, #4]
	mov r5, sl
	strb r5, [r4, #0x18]
	movs r7, #1
	str r7, [sp, #0x154]
	movs r0, #0
	str r0, [sp, #0x158]
	ldr r1, [sp, #0x138]
	ldr r2, _080B69B8 @ =0x00000B14
	adds r0, r1, r2
	ldr r0, [r0]
	cmp r0, #0
	beq _080B6946
	b _080B70EA
_080B6946:
	movs r3, #0xf4
	lsls r3, r3, #3
	adds r3, r1, r3
	str r3, [sp, #0x15c]
_080B694E:
	ldr r0, [sp, #0x138]
	bl sub_80087C8
	ldr r0, [sp, #0x138]
	bl sub_80088B8
	ldr r0, [sp, #0x138]
	bl sub_80088D4
	adds r4, r0, #0
	ldr r5, [sp, #0x154]
	cmp r5, #0
	beq _080B698C
	ldr r7, [sp, #0x15c]
	ldr r0, [r7]
	adds r0, #0xc
	ldr r1, _080B69BC @ =0x00000889
	movs r2, #1
	movs r3, #1
	bl sub_800934C
	ldr r0, [sp, #0x138]
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [r7]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
	movs r0, #0
	str r0, [sp, #0x154]
_080B698C:
	ldr r1, [sp, #0x158]
	cmp r1, #0
	beq _080B69C0
	ldr r2, [sp, #0x15c]
	ldr r0, [r2]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _080B69FC
	ldr r3, [sp, #0x138]
	ldr r4, _080B69B8 @ =0x00000B14
	adds r0, r3, r4
	movs r5, #1
	str r5, [r0]
	b _080B69FC
	.align 2, 0
_080B69AC: .4byte 0x00000A34
_080B69B0: .4byte 0x0000079C
_080B69B4: .4byte 0x00000A7C
_080B69B8: .4byte 0x00000B14
_080B69BC: .4byte 0x00000889
_080B69C0:
	movs r7, #1
	ands r4, r7
	cmp r4, #0
	beq _080B69FC
	ldr r0, [sp, #0x138]
	movs r1, #0xf4
	lsls r1, r1, #3
	adds r4, r0, r1
	ldr r2, [r4]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _080B69FC
	movs r3, #1
	str r3, [sp, #0x158]
	adds r0, r2, #0
	adds r0, #0xc
	ldr r1, _080B6BCC @ =0x00000889
	movs r2, #1
	bl sub_8009378
	ldr r0, [sp, #0x138]
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [r4]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
_080B69FC:
	mov r4, sp
	movs r5, #5
	mov sb, r5
_080B6A02:
	ldr r0, [sp, #0x138]
	bl sub_8008920
	adds r3, r0, #0
	ldrb r2, [r3]
	cmp r2, #0x7f
	bhi _080B6A22
	lsls r0, r2, #3
	adds r0, #4
	adds r0, r3, r0
	ldr r1, [r4]
	str r1, [r0]
	ldrh r1, [r4, #4]
	strh r1, [r0, #4]
	adds r0, r2, #1
	strb r0, [r3]
_080B6A22:
	adds r4, #8
	movs r7, #1
	rsbs r7, r7, #0
	add sb, r7
	mov r0, sb
	cmp r0, #0
	bge _080B6A02
	ldr r0, [sp, #0x138]
	bl sub_8008920
	adds r4, r0, #0
	ldr r1, [sp, #0x138]
	ldr r2, _080B6BD0 @ =0x00000974
	adds r0, r1, r2
	ldr r1, [r0]
	movs r2, #0
	cmp r1, #0
	beq _080B6A48
	ldrh r2, [r0, #4]
_080B6A48:
	ldr r3, [sp, #0x138]
	movs r5, #0x97
	lsls r5, r5, #4
	adds r0, r3, r5
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
	ldr r0, [sp, #0x138]
	bl sub_8008920
	adds r4, r0, #0
	ldr r7, [sp, #0x138]
	ldr r1, _080B6BD4 @ =0x0000099C
	adds r0, r7, r1
	ldr r1, [r0]
	movs r2, #0
	cmp r1, #0
	beq _080B6A70
	ldrh r2, [r0, #4]
_080B6A70:
	ldr r3, [sp, #0x138]
	ldr r5, _080B6BD8 @ =0x00000998
	adds r0, r3, r5
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
	ldr r7, [sp, #0x138]
	ldr r0, _080B6BDC @ =0x00000B18
	adds r1, r7, r0
	ldr r2, _080B6BE0 @ =0x00000B3D
	adds r0, r7, r2
	ldr r1, [r1]
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080B6AB8
	adds r0, r7, #0
	bl sub_8008920
	adds r4, r0, #0
	ldr r3, _080B6BE4 @ =0x000009C4
	adds r0, r7, r3
	ldr r1, [r0]
	movs r2, #0
	cmp r1, #0
	beq _080B6AA8
	ldrh r2, [r0, #4]
_080B6AA8:
	ldr r5, [sp, #0x138]
	movs r7, #0x9c
	lsls r7, r7, #4
	adds r0, r5, r7
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
_080B6AB8:
	ldr r0, [sp, #0x138]
	bl sub_8008920
	adds r3, r0, #0
	ldr r1, [sp, #0x184]
	ldr r0, [r1]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080B6AD0
	ldr r4, [sp, #0x184]
	ldrh r2, [r4, #4]
_080B6AD0:
	adds r0, r3, #0
	ldr r3, [sp, #0x180]
	bl sub_805E99C
	movs r5, #0
	mov sb, r5
	ldr r7, [sp, #0x138]
	movs r0, #0x9f
	lsls r0, r0, #4
	adds r4, r7, r0
_080B6AE4:
	ldr r0, [sp, #0x138]
	bl sub_8008920
	adds r5, r0, #0
	ldr r0, [r4]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080B6AF8
	ldrh r2, [r4, #4]
_080B6AF8:
	mov r3, sb
	lsls r0, r3, #2
	ldr r7, [sp, #0x138]
	adds r0, r0, r7
	ldr r3, _080B6BE8 @ =0x000009E8
	adds r0, r0, r3
	ldr r3, [r0]
	adds r0, r5, #0
	bl sub_805E99C
	adds r4, #0x20
	movs r5, #1
	add sb, r5
	mov r7, sb
	cmp r7, #1
	ble _080B6AE4
	movs r0, #0
	mov sb, r0
	movs r2, #0xa3
	lsls r2, r2, #4
	ldr r1, [sp, #0x138]
	adds r2, r1, r2
	str r2, [sp, #0x160]
_080B6B26:
	ldr r3, [sp, #0x160]
	ldr r0, [r3]
	bl sub_805E8F0
	lsls r0, r0, #0x1e
	mov r4, sb
	adds r4, #1
	str r4, [sp, #0x174]
	mov r5, sb
	lsls r5, r5, #5
	mov sl, r5
	mov r7, sb
	lsls r7, r7, #2
	str r7, [sp, #0x178]
	cmp r0, #0
	blt _080B6B48
	b _080B6DEE
_080B6B48:
	ldr r5, [sp, #0x138]
	add r5, sl
	ldr r0, _080B6BEC @ =0x00000A3C
	adds r4, r5, r0
	ldr r1, [sp, #0x160]
	ldr r0, [r1]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0xa0
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	ldr r0, [sp, #0x164]
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	ldr r0, [sp, #0x164]
	ldm r0!, {r2, r3, r7}
	stm r4!, {r2, r3, r7}
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r1, r7}
	stm r4!, {r1, r7}
	ldr r0, [sp, #0x138]
	bl sub_8008910
	adds r2, r0, #0
	ldr r3, _080B6BF0 @ =0x00000A44
	adds r5, r5, r3
	ldr r0, [r5]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080B6B9A
	ldrh r3, [r5, #4]
_080B6B9A:
	adds r6, r2, #0
	ldr r4, [sp, #0x14c]
	lsls r2, r4, #5
	ldr r0, [sp, #0x164]
	ldr r5, _080B6BF4 @ =0x06010000
	adds r2, r2, r5
	bl sub_8008F0C
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B6BF8
	cmp r1, #0
	beq _080B6BC2
	adds r0, r1, #0
	ldr r1, [sp, #0x164]
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B6BC2:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B6CCE
	.align 2, 0
_080B6BCC: .4byte 0x00000889
_080B6BD0: .4byte 0x00000974
_080B6BD4: .4byte 0x0000099C
_080B6BD8: .4byte 0x00000998
_080B6BDC: .4byte 0x00000B18
_080B6BE0: .4byte 0x00000B3D
_080B6BE4: .4byte 0x000009C4
_080B6BE8: .4byte 0x000009E8
_080B6BEC: .4byte 0x00000A3C
_080B6BF0: .4byte 0x00000A44
_080B6BF4: .4byte 0x06010000
_080B6BF8:
	str r1, [sp, #0x19c]
	add r2, sp, #0x11c
	movs r4, #1
	str r4, [r2]
	ldr r0, [r6]
	ldr r5, [sp, #0x19c]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x118
	str r4, [r0]
	ldr r1, [r2]
	cmp r4, r1
	bhs _080B6C14
	adds r0, r2, #0
_080B6C14:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B6C32
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080B6C36
	mov r0, r8
	bl sub_80D3BC0
	b _080B6C36
_080B6C32:
	movs r0, #0
	mov r8, r0
_080B6C36:
	adds r5, r0, #0
	str r5, [sp, #0x1a0]
	ldr r2, [r6]
	adds r3, r5, #0
	mov r7, sb
	adds r7, #1
	str r7, [sp, #0x174]
	mov r0, sb
	lsls r0, r0, #2
	str r0, [sp, #0x178]
	ldr r1, [sp, #0x19c]
	cmp r2, r1
	beq _080B6C6A
_080B6C50:
	cmp r3, #0
	beq _080B6C60
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B6C60:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x19c]
	cmp r2, r0
	bne _080B6C50
_080B6C6A:
	adds r5, r3, #0
	add r0, sp, #0x11c
	ldr r0, [r0]
	cmp r0, #1
	bne _080B6C88
	cmp r5, #0
	beq _080B6C84
	adds r0, r5, #0
	add r1, sp, #0xa0
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B6C84:
	adds r5, #0x10
	b _080B6CAA
_080B6C88:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080B6CA8
_080B6C90:
	cmp r2, #0
	beq _080B6CA0
	adds r0, r2, #0
	add r1, sp, #0xa0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B6CA0:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B6C90
_080B6CA8:
	adds r5, r2, #0
_080B6CAA:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B6CBA
_080B6CB4:
	adds r1, #0x10
	cmp r1, r2
	bne _080B6CB4
_080B6CBA:
	cmp r0, #0
	beq _080B6CC2
	bl sub_80D0260
_080B6CC2:
	ldr r0, [sp, #0x1a0]
	add r0, r8
	ldr r7, [sp, #0x1a0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B6CCE:
	ldr r0, [sp, #0x138]
	bl sub_8008910
	adds r5, r0, #0
	ldr r0, [sp, #0x138]
	add r0, sl
	ldr r1, _080B6D20 @ =0x00000A4C
	adds r0, r0, r1
	ldr r4, [r0]
	ldr r2, [sp, #0x138]
	add r2, sl
	adds r2, r2, r1
	ldr r0, [r2]
	movs r3, #0
	cmp r0, #0
	beq _080B6CF0
	ldrh r3, [r2, #4]
_080B6CF0:
	adds r6, r5, #0
	add r0, sp, #0xa0
	adds r1, r4, #0
	ldr r2, _080B6D24 @ =0x050002A0
	bl sub_8008F0C
	ldr r0, [sp, #0x164]
	mov sb, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B6D28
	cmp r1, #0
	beq _080B6D18
	adds r0, r1, #0
	ldr r1, [sp, #0x164]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B6D18:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B6DEE
	.align 2, 0
_080B6D20: .4byte 0x00000A4C
_080B6D24: .4byte 0x050002A0
_080B6D28:
	str r1, [sp, #0x19c]
	add r2, sp, #0x124
	movs r5, #1
	str r5, [r2]
	ldr r0, [r6]
	ldr r7, [sp, #0x19c]
	subs r0, r7, r0
	asrs r4, r0, #4
	add r0, sp, #0x120
	str r4, [r0]
	ldr r1, [r2]
	cmp r4, r1
	bhs _080B6D44
	adds r0, r2, #0
_080B6D44:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B6D62
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080B6D66
	mov r0, r8
	bl sub_80D3BC0
	b _080B6D66
_080B6D62:
	movs r0, #0
	mov r8, r0
_080B6D66:
	adds r5, r0, #0
	str r5, [sp, #0x1a0]
	ldr r2, [r6]
	adds r3, r5, #0
	b _080B6D84
_080B6D70:
	cmp r3, #0
	beq _080B6D80
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B6D80:
	adds r2, #0x10
	adds r3, #0x10
_080B6D84:
	ldr r0, [sp, #0x19c]
	cmp r2, r0
	bne _080B6D70
	adds r5, r3, #0
	add r0, sp, #0x124
	ldr r0, [r0]
	cmp r0, #1
	bne _080B6DA8
	cmp r5, #0
	beq _080B6DA4
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B6DA4:
	adds r5, #0x10
	b _080B6DCA
_080B6DA8:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080B6DC8
_080B6DB0:
	cmp r2, #0
	beq _080B6DC0
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B6DC0:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B6DB0
_080B6DC8:
	adds r5, r2, #0
_080B6DCA:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B6DDA
_080B6DD4:
	adds r1, #0x10
	cmp r1, r2
	bne _080B6DD4
_080B6DDA:
	cmp r0, #0
	beq _080B6DE2
	bl sub_80D0260
_080B6DE2:
	ldr r0, [sp, #0x1a0]
	add r0, r8
	ldr r7, [sp, #0x1a0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B6DEE:
	ldr r0, [sp, #0x138]
	bl sub_8008920
	adds r6, r0, #0
	ldr r0, [sp, #0x138]
	add r0, sl
	ldr r1, _080B6EC4 @ =0x00000A3C
	adds r0, r0, r1
	ldr r4, [r0]
	ldr r5, [sp, #0x138]
	add r5, sl
	adds r5, r5, r1
	ldr r0, [r5]
	movs r2, #0
	cmp r0, #0
	beq _080B6E10
	ldrh r2, [r5, #4]
_080B6E10:
	ldr r1, [sp, #0x178]
	ldr r3, [sp, #0x138]
	adds r0, r1, r3
	ldr r5, _080B6EC8 @ =0x00000A34
	adds r0, r0, r5
	ldr r3, [r0]
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_805E99C
	ldr r7, [sp, #0x174]
	mov sb, r7
	mov r0, sb
	cmp r0, #1
	bgt _080B6E30
	b _080B6B26
_080B6E30:
	ldr r1, [sp, #0x138]
	ldr r2, _080B6ECC @ =0x00000A7C
	adds r4, r1, r2
	ldr r0, [r4]
	bl sub_805E8F0
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080B6E44
	b _080B70B4
_080B6E44:
	ldr r0, [r4]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0xa0
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	ldr r0, [sp, #0x164]
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	ldr r3, [sp, #0x138]
	ldr r4, _080B6ED0 @ =0x00000A84
	adds r1, r3, r4
	ldr r0, [sp, #0x164]
	ldm r0!, {r2, r5, r7}
	stm r1!, {r2, r5, r7}
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
	ldm r0!, {r2, r7}
	stm r1!, {r2, r7}
	ldr r0, [sp, #0x138]
	bl sub_8008910
	ldr r3, [sp, #0x138]
	ldr r4, _080B6ED4 @ =0x00000A8C
	adds r2, r3, r4
	ldr r1, [r2]
	movs r3, #0
	cmp r1, #0
	beq _080B6E90
	ldrh r3, [r2, #4]
_080B6E90:
	adds r6, r0, #0
	ldr r5, [sp, #0x150]
	lsls r2, r5, #5
	ldr r0, [sp, #0x164]
	ldr r7, _080B6ED8 @ =0x06010000
	adds r2, r2, r7
	bl sub_8008F0C
	ldr r0, [sp, #0x164]
	mov sb, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B6EDC
	cmp r1, #0
	beq _080B6EBC
	adds r0, r1, #0
	ldr r1, [sp, #0x164]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B6EBC:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B6FA0
	.align 2, 0
_080B6EC4: .4byte 0x00000A3C
_080B6EC8: .4byte 0x00000A34
_080B6ECC: .4byte 0x00000A7C
_080B6ED0: .4byte 0x00000A84
_080B6ED4: .4byte 0x00000A8C
_080B6ED8: .4byte 0x06010000
_080B6EDC:
	mov sl, r1
	add r2, sp, #0x12c
	movs r5, #1
	str r5, [r2]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	add r0, sp, #0x128
	str r4, [r0]
	ldr r1, [r2]
	cmp r4, r1
	bhs _080B6EF6
	adds r0, r2, #0
_080B6EF6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B6F14
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080B6F18
	mov r0, r8
	bl sub_80D3BC0
	b _080B6F18
_080B6F14:
	movs r0, #0
	mov r8, r0
_080B6F18:
	adds r5, r0, #0
	str r5, [sp, #0x1a0]
	ldr r2, [r6]
	adds r3, r5, #0
	cmp r2, sl
	beq _080B6F3C
_080B6F24:
	cmp r3, #0
	beq _080B6F34
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B6F34:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080B6F24
_080B6F3C:
	adds r5, r3, #0
	add r0, sp, #0x12c
	ldr r0, [r0]
	cmp r0, #1
	bne _080B6F5A
	cmp r5, #0
	beq _080B6F56
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B6F56:
	adds r5, #0x10
	b _080B6F7C
_080B6F5A:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080B6F7A
_080B6F62:
	cmp r2, #0
	beq _080B6F72
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B6F72:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B6F62
_080B6F7A:
	adds r5, r2, #0
_080B6F7C:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B6F8C
_080B6F86:
	adds r1, #0x10
	cmp r1, r2
	bne _080B6F86
_080B6F8C:
	cmp r0, #0
	beq _080B6F94
	bl sub_80D0260
_080B6F94:
	ldr r0, [sp, #0x1a0]
	add r0, r8
	ldr r1, [sp, #0x1a0]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B6FA0:
	ldr r0, [sp, #0x138]
	bl sub_8008910
	adds r4, r0, #0
	ldr r3, [sp, #0x138]
	ldr r5, _080B6FE8 @ =0x00000A94
	adds r2, r3, r5
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080B6FBA
	ldrh r3, [r2, #4]
_080B6FBA:
	adds r6, r4, #0
	add r0, sp, #0xa0
	ldr r2, _080B6FEC @ =0x050002C0
	bl sub_8008F0C
	ldr r7, [sp, #0x164]
	mov sb, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B6FF0
	cmp r1, #0
	beq _080B6FE0
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B6FE0:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B70B4
	.align 2, 0
_080B6FE8: .4byte 0x00000A94
_080B6FEC: .4byte 0x050002C0
_080B6FF0:
	mov sl, r1
	add r2, sp, #0x134
	movs r5, #1
	str r5, [r2]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	add r0, sp, #0x130
	str r4, [r0]
	ldr r1, [r2]
	cmp r4, r1
	bhs _080B700A
	adds r0, r2, #0
_080B700A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B7028
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080B702C
	mov r0, r8
	bl sub_80D3BC0
	b _080B702C
_080B7028:
	movs r0, #0
	mov r8, r0
_080B702C:
	adds r5, r0, #0
	str r5, [sp, #0x1a0]
	ldr r2, [r6]
	adds r3, r5, #0
	cmp r2, sl
	beq _080B7050
_080B7038:
	cmp r3, #0
	beq _080B7048
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B7048:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080B7038
_080B7050:
	adds r5, r3, #0
	add r0, sp, #0x134
	ldr r0, [r0]
	cmp r0, #1
	bne _080B706E
	cmp r5, #0
	beq _080B706A
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B706A:
	adds r5, #0x10
	b _080B7090
_080B706E:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080B708E
_080B7076:
	cmp r2, #0
	beq _080B7086
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B7086:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B7076
_080B708E:
	adds r5, r2, #0
_080B7090:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B70A0
_080B709A:
	adds r1, #0x10
	cmp r1, r2
	bne _080B709A
_080B70A0:
	cmp r0, #0
	beq _080B70A8
	bl sub_80D0260
_080B70A8:
	ldr r0, [sp, #0x1a0]
	add r0, r8
	ldr r1, [sp, #0x1a0]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B70B4:
	ldr r0, [sp, #0x138]
	bl sub_8008920
	adds r4, r0, #0
	ldr r2, [sp, #0x138]
	ldr r5, _080B715C @ =0x00000A84
	adds r3, r2, r5
	ldr r0, [r3]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080B70CE
	ldrh r2, [r3, #4]
_080B70CE:
	ldr r7, [sp, #0x138]
	movs r3, #0xa8
	lsls r3, r3, #4
	adds r0, r7, r3
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
	ldr r4, _080B7160 @ =0x00000B14
	adds r0, r7, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _080B70EA
	b _080B694E
_080B70EA:
	ldr r1, [sp, #0x5c]
	add r0, sp, #0x58
	bl sub_8007C28
	add r0, sp, #0x58
	movs r1, #2
	bl sub_80079E8
	ldr r1, [sp, #0x54]
	add r0, sp, #0x50
	bl sub_8007C28
	add r0, sp, #0x50
	movs r1, #2
	bl sub_80079E8
	ldr r1, [sp, #0x4c]
	add r0, sp, #0x48
	bl sub_8007C28
	add r0, sp, #0x48
	movs r1, #2
	bl sub_80079E8
	ldr r1, [sp, #0x44]
	add r0, sp, #0x40
	bl sub_8007C28
	add r0, sp, #0x40
	movs r1, #2
	bl sub_80079E8
	ldr r1, [sp, #0x3c]
	add r0, sp, #0x38
	bl sub_8007C28
	add r0, sp, #0x38
	movs r1, #2
	bl sub_80079E8
	ldr r1, [sp, #0x34]
	add r0, sp, #0x30
	bl sub_8007C28
	add r0, sp, #0x30
	movs r1, #2
	bl sub_80079E8
	add sp, #0x1a4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B715C: .4byte 0x00000A84
_080B7160: .4byte 0x00000B14

	thumb_func_start sub_80B7164
sub_80B7164: @ 0x080B7164
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x7c
	mov sb, r0
	str r1, [sp, #0x40]
	bl sub_8008724
	ldr r0, _080B72E8 @ =gUnknown_0872D5CC
	ldr r1, _080B72EC @ =0x0600F000
	bl sub_80D102C
	ldr r0, _080B72F0 @ =gUnknown_0872D630
	ldr r1, _080B72F4 @ =0x0600F800
	bl sub_80D102C
	ldr r0, _080B72F8 @ =gUnknown_0872D6D8
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl sub_80D102C
	ldr r1, _080B72FC @ =0x0600BFE0
	movs r0, #0
	movs r2, #0x20
	bl sub_8008EB8
	ldr r0, _080B7300 @ =gUnknown_0872DDE4
	movs r1, #0xa0
	lsls r1, r1, #0x13
	movs r2, #0x80
	lsls r2, r2, #2
	bl sub_8008E64
	mov r0, sb
	bl sub_8008918
	add r1, sp, #0xc
	movs r3, #0xb2
	lsls r3, r3, #5
	adds r2, r3, #0
	strh r2, [r1]
	movs r4, #0
	strh r2, [r0]
	mov r0, sb
	bl sub_8008918
	add r2, sp, #0xc
	ldr r5, _080B7304 @ =0x00001F41
	adds r1, r5, #0
	strh r1, [r2]
	strh r1, [r0, #0xa]
	mov r0, sb
	bl sub_8008918
	add r2, sp, #0xc
	ldr r6, _080B7308 @ =0x00001E42
	adds r1, r6, #0
	strh r1, [r2]
	strh r1, [r0, #0xc]
	mov r0, sb
	bl sub_8008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #0x14]
	mov r0, sb
	bl sub_8008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #0x16]
	ldr r1, _080B730C @ =0x05000200
	movs r7, #0xf8
	lsls r7, r7, #2
	adds r0, r7, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _080B7310 @ =0x0000FFFE
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r3, _080B7314 @ =0x00007F34
	adds r0, r3, #0
	strh r0, [r1]
	mov sl, r4
	mov r4, sp
	adds r4, #0x20
	str r4, [sp, #0x50]
	mov r5, sp
	adds r5, #0x24
	str r5, [sp, #0x54]
	mov r6, sp
	adds r6, #0x30
	str r6, [sp, #0x64]
	mov r7, sp
	adds r7, #0x34
	str r7, [sp, #0x68]
	mov r0, sp
	adds r0, #0x10
	str r0, [sp, #0x44]
_080B7230:
	mov r1, sl
	lsls r1, r1, #6
	mov r8, r1
	mov r4, r8
	add r4, sl
	lsls r4, r4, #2
	mov r2, sb
	adds r1, r4, r2
	add r0, sp, #0x20
	movs r3, #4
	strh r3, [r0]
	movs r6, #2
	ldr r5, [sp, #0x50]
	strh r6, [r5, #2]
	ldr r0, [sp, #0x20]
	adds r1, #0xf0
	movs r2, #0
	bl sub_804E7A0
	mov r7, sl
	lsls r6, r7, #1
	mov r0, sb
	movs r1, #2
	adds r2, r6, #0
	mov r3, sb
	adds r3, #0x9e
	bl sub_80BC254
	adds r2, r0, #0
	mov r0, sb
	adds r1, r4, r0
	add r0, sp, #0x24
	movs r3, #4
	strh r3, [r0]
	movs r7, #2
	ldr r5, [sp, #0x54]
	strh r7, [r5, #2]
	ldr r0, [sp, #0x24]
	adds r1, #0xf0
	str r2, [sp]
	movs r2, #0
	str r2, [sp, #4]
	movs r3, #1
	str r3, [sp, #8]
	movs r3, #0
	bl sub_804E958
	mov r0, sb
	bl sub_8008910
	add r4, sb
	adds r4, #0xf0
	mov r7, sl
	lsls r5, r7, #3
	ldr r1, [sp, #0x40]
	adds r2, r5, r1
	adds r7, r0, #0
	lsls r2, r2, #5
	ldr r3, _080B7318 @ =0x06010000
	adds r2, r2, r3
	add r0, sp, #0x10
	adds r1, r4, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_8008F0C
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	mov r4, r8
	str r4, [sp, #0x60]
	str r6, [sp, #0x58]
	str r5, [sp, #0x5c]
	cmp r1, r0
	beq _080B731C
	cmp r1, #0
	beq _080B72D4
	adds r0, r1, #0
	ldr r1, [sp, #0x44]
	ldm r1!, {r2, r5, r6}
	stm r0!, {r2, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080B72D4:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	mov r3, sb
	adds r3, #0xde
	str r3, [sp, #0x48]
	mov r4, sl
	adds r4, #1
	str r4, [sp, #0x4c]
	b _080B73EE
	.align 2, 0
_080B72E8: .4byte gUnknown_0872D5CC
_080B72EC: .4byte 0x0600F000
_080B72F0: .4byte gUnknown_0872D630
_080B72F4: .4byte 0x0600F800
_080B72F8: .4byte gUnknown_0872D6D8
_080B72FC: .4byte 0x0600BFE0
_080B7300: .4byte gUnknown_0872DDE4
_080B7304: .4byte 0x00001F41
_080B7308: .4byte 0x00001E42
_080B730C: .4byte 0x05000200
_080B7310: .4byte 0x0000FFFE
_080B7314: .4byte 0x00007F34
_080B7318: .4byte 0x06010000
_080B731C:
	str r1, [sp, #0x6c]
	movs r5, #1
	str r5, [sp, #0x2c]
	ldr r0, [r7]
	adds r6, r1, #0
	subs r0, r6, r0
	asrs r4, r0, #4
	str r4, [sp, #0x28]
	add r1, sp, #0x2c
	add r0, sp, #0x28
	cmp r4, #1
	bhs _080B7336
	adds r0, r1, #0
_080B7336:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B7354
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080B7358
	mov r0, r8
	bl sub_80D3BC0
	b _080B7358
_080B7354:
	movs r0, #0
	mov r8, r0
_080B7358:
	adds r4, r0, #0
	str r4, [sp, #0x70]
	ldr r2, [r7]
	adds r3, r4, #0
	mov r0, sb
	adds r0, #0xde
	str r0, [sp, #0x48]
	mov r1, sl
	adds r1, #1
	str r1, [sp, #0x4c]
	ldr r4, [sp, #0x6c]
	cmp r2, r4
	beq _080B738C
_080B7372:
	cmp r3, #0
	beq _080B7382
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080B7382:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x6c]
	cmp r2, r5
	bne _080B7372
_080B738C:
	adds r4, r3, #0
	ldr r0, [sp, #0x2c]
	cmp r0, #1
	bne _080B73A8
	cmp r4, #0
	beq _080B73A4
	adds r0, r4, #0
	ldr r1, [sp, #0x44]
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080B73A4:
	adds r4, #0x10
	b _080B73CA
_080B73A8:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080B73C8
_080B73B0:
	cmp r2, #0
	beq _080B73C0
	adds r0, r2, #0
	ldr r1, [sp, #0x44]
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080B73C0:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B73B0
_080B73C8:
	adds r4, r2, #0
_080B73CA:
	ldr r2, [r7, #4]
	ldr r0, [r7]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B73DA
_080B73D4:
	adds r1, #0x10
	cmp r1, r2
	bne _080B73D4
_080B73DA:
	cmp r0, #0
	beq _080B73E2
	bl sub_80D0260
_080B73E2:
	ldr r0, [sp, #0x70]
	add r0, r8
	ldr r1, [sp, #0x70]
	str r1, [r7]
	str r4, [r7, #4]
	str r0, [r7, #0xc]
_080B73EE:
	ldr r4, [sp, #0x60]
	add r4, sl
	lsls r4, r4, #2
	mov r2, sb
	adds r1, r4, r2
	movs r3, #0xfe
	lsls r3, r3, #2
	adds r1, r1, r3
	add r0, sp, #0x30
	movs r5, #4
	strh r5, [r0]
	movs r7, #2
	ldr r6, [sp, #0x64]
	strh r7, [r6, #2]
	ldr r0, [sp, #0x30]
	adds r1, #4
	movs r2, #0
	bl sub_804E7A0
	mov r0, sb
	movs r1, #2
	ldr r2, [sp, #0x58]
	ldr r3, [sp, #0x48]
	bl sub_80BC254
	adds r2, r0, #0
	mov r0, sb
	adds r1, r4, r0
	movs r3, #0xfe
	lsls r3, r3, #2
	adds r1, r1, r3
	movs r5, #1
	add r0, sp, #0x34
	movs r6, #4
	strh r6, [r0]
	movs r0, #2
	ldr r7, [sp, #0x68]
	strh r0, [r7, #2]
	ldr r0, [sp, #0x34]
	adds r1, #4
	str r2, [sp]
	movs r2, #0
	str r2, [sp, #4]
	str r5, [sp, #8]
	movs r3, #0
	bl sub_804E958
	mov r0, sb
	bl sub_8008910
	add r4, sb
	movs r3, #0xfe
	lsls r3, r3, #2
	adds r4, r4, r3
	adds r4, #4
	adds r6, r0, #0
	ldr r7, [sp, #0x5c]
	ldr r0, [sp, #0x40]
	adds r2, r7, r0
	lsls r0, r2, #5
	ldr r1, _080B749C @ =0x06010300
	adds r2, r0, r1
	add r0, sp, #0xc
	adds r1, r4, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_8008F0C
	add r2, sp, #0xc
	mov sl, r2
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B74A0
	cmp r1, #0
	beq _080B7492
	adds r0, r1, #0
	add r1, sp, #0xc
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B7492:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B7560
	.align 2, 0
_080B749C: .4byte 0x06010300
_080B74A0:
	str r1, [sp, #0x74]
	str r5, [sp, #0x3c]
	ldr r0, [r6]
	adds r7, r1, #0
	subs r0, r7, r0
	asrs r4, r0, #4
	str r4, [sp, #0x38]
	add r1, sp, #0x3c
	add r0, sp, #0x38
	cmp r4, #1
	bhs _080B74B8
	adds r0, r1, #0
_080B74B8:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B74D6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080B74DA
	mov r0, r8
	bl sub_80D3BC0
	b _080B74DA
_080B74D6:
	movs r0, #0
	mov r8, r0
_080B74DA:
	adds r5, r0, #0
	str r5, [sp, #0x78]
	ldr r2, [r6]
	adds r3, r5, #0
	b _080B74F8
_080B74E4:
	cmp r3, #0
	beq _080B74F4
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B74F4:
	adds r2, #0x10
	adds r3, #0x10
_080B74F8:
	ldr r0, [sp, #0x74]
	cmp r2, r0
	bne _080B74E4
	adds r5, r3, #0
	ldr r0, [sp, #0x3c]
	cmp r0, #1
	bne _080B751A
	cmp r5, #0
	beq _080B7516
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B7516:
	adds r5, #0x10
	b _080B753C
_080B751A:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080B753A
_080B7522:
	cmp r2, #0
	beq _080B7532
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B7532:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B7522
_080B753A:
	adds r5, r2, #0
_080B753C:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B754C
_080B7546:
	adds r1, #0x10
	cmp r1, r2
	bne _080B7546
_080B754C:
	cmp r0, #0
	beq _080B7554
	bl sub_80D0260
_080B7554:
	ldr r0, [sp, #0x78]
	add r0, r8
	ldr r7, [sp, #0x78]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B7560:
	ldr r0, [sp, #0x4c]
	mov sl, r0
	cmp r0, #2
	bgt _080B756A
	b _080B7230
_080B756A:
	add sp, #0x7c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80B757C
sub_80B757C: @ 0x080B757C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r6, r0, #0
	movs r5, #0
	movs r1, #0
	adds r3, r6, #0
	adds r3, #0x9e
	movs r4, #0
	adds r2, r6, #0
	adds r2, #0xde
	adds r7, r3, #0
	mov r8, r2
_080B7596:
	adds r0, r3, r1
	strb r4, [r0]
	adds r0, r2, r1
	strb r4, [r0]
	adds r1, #1
	cmp r1, #0xd
	ble _080B7596
	ldr r0, _080B75C4 @ =0x00000B1C
	adds r1, r6, r0
	adds r0, r7, #0
	bl sub_80D3B28
	ldr r1, _080B75C8 @ =0x00000B18
	adds r0, r6, r1
	ldr r0, [r0]
	cmp r0, #1
	beq _080B75E8
	cmp r0, #1
	bgt _080B75CC
	cmp r0, #0
	beq _080B75D2
	b _080B7612
	.align 2, 0
_080B75C4: .4byte 0x00000B1C
_080B75C8: .4byte 0x00000B18
_080B75CC:
	cmp r0, #2
	beq _080B7600
	b _080B7612
_080B75D2:
	movs r4, #6
	bl sub_80D11E4
	ldr r1, _080B75E4 @ =0x0000FFFF
	ands r1, r0
	adds r0, r1, #0
	muls r0, r4, r0
	lsrs r5, r0, #0x10
	b _080B7612
	.align 2, 0
_080B75E4: .4byte 0x0000FFFF
_080B75E8:
	movs r4, #7
	bl sub_80D11E4
	ldr r1, _080B75FC @ =0x0000FFFF
	ands r1, r0
	adds r0, r1, #0
	muls r0, r4, r0
	lsrs r5, r0, #0x10
	adds r5, #6
	b _080B7612
	.align 2, 0
_080B75FC: .4byte 0x0000FFFF
_080B7600:
	movs r4, #7
	bl sub_80D11E4
	ldr r1, _080B763C @ =0x0000FFFF
	ands r1, r0
	adds r0, r1, #0
	muls r0, r4, r0
	lsrs r5, r0, #0x10
	adds r5, #0xd
_080B7612:
	ldr r2, _080B7640 @ =0x00000B18
	adds r1, r6, r2
	adds r2, #0x25
	adds r0, r6, r2
	ldr r1, [r1]
	adds r0, r0, r1
	strb r5, [r0]
	movs r0, #0xd
	adds r1, r5, #0
	muls r1, r0, r1
	ldr r0, _080B7644 @ =gUnknown_081078BD
	adds r1, r1, r0
	mov r0, r8
	bl sub_80D3B28
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B763C: .4byte 0x0000FFFF
_080B7640: .4byte 0x00000B18
_080B7644: .4byte gUnknown_081078BD

	thumb_func_start sub_80B7648
sub_80B7648: @ 0x080B7648
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc0
	adds r7, r0, #0
	mov r0, sp
	bl sub_8007874
	movs r0, #0
	mov sl, r0
	str r0, [sp, #4]
	add r4, sp, #8
	adds r0, r4, #0
	bl sub_8007874
	mov r1, sl
	str r1, [r4, #4]
	add r5, sp, #0x10
	adds r0, r5, #0
	bl sub_8007874
	mov r2, sl
	str r2, [r5, #4]
	add r6, sp, #0x18
	adds r0, r6, #0
	bl sub_8007874
	mov r3, sl
	str r3, [r6, #4]
	add r0, sp, #0x20
	mov r8, r0
	bl sub_8007874
	mov r1, sl
	mov r2, r8
	str r1, [r2, #4]
	add r3, sp, #0x28
	mov sb, r3
	mov r0, sb
	bl sub_8007874
	mov r0, sl
	mov r1, sb
	str r0, [r1, #4]
	ldr r1, [sp, #4]
	mov r0, sp
	bl sub_8007C28
	mov r0, sp
	movs r1, #6
	bl sub_8007B54
	adds r1, r0, #0
	str r1, [sp, #4]
	mov r0, sp
	bl sub_8007D4C
	str r0, [sp, #0x90]
	ldr r1, [sp, #0xc]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #3
	bl sub_8007B54
	adds r1, r0, #0
	str r1, [sp, #0xc]
	adds r0, r4, #0
	bl sub_8007D4C
	str r0, [sp, #0x94]
	ldr r1, [sp, #0x14]
	adds r0, r5, #0
	bl sub_8007C28
	adds r0, r5, #0
	movs r1, #7
	bl sub_8007B54
	adds r1, r0, #0
	str r1, [sp, #0x14]
	adds r0, r5, #0
	bl sub_8007D4C
	str r0, [sp, #0x98]
	ldr r1, [sp, #0x1c]
	adds r0, r6, #0
	bl sub_8007C28
	adds r0, r6, #0
	movs r1, #3
	bl sub_8007B54
	adds r1, r0, #0
	str r1, [sp, #0x1c]
	adds r0, r6, #0
	bl sub_8007D4C
	str r0, [sp, #0x9c]
	ldr r1, [sp, #0x24]
	mov r0, r8
	bl sub_8007C28
	mov r0, r8
	movs r1, #2
	bl sub_8007B54
	str r0, [sp, #0x24]
	ldr r1, [sp, #0x2c]
	mov r0, sb
	bl sub_8007C28
	mov r0, sb
	movs r1, #3
	bl sub_8007B54
	str r0, [sp, #0x2c]
	add r0, sp, #0x30
	bl sub_8007128
	add r0, sp, #0x30
	bl sub_800736C
	str r0, [sp, #0x34]
	movs r0, #0x14
	bl sub_80005D4
	movs r2, #0xf0
	lsls r2, r2, #3
	adds r1, r7, r2
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r4, r0, #0
	ldr r3, _080B784C @ =0x000008F4
	adds r6, r7, r3
	ldr r0, [r6]
	cmp r4, r0
	beq _080B776E
	bl sub_8000608
_080B776E:
	str r4, [r6]
	movs r0, #0x1c
	bl sub_80005D4
	adds r5, r0, #0
	movs r0, #0
	mov r4, sl
	strh r4, [r5]
	strh r4, [r5, #2]
	strh r4, [r5, #4]
	strh r4, [r5, #6]
	strh r4, [r5, #8]
	mov r1, sl
	str r1, [r5, #0xc]
	strb r0, [r5, #0x10]
	strb r0, [r5, #0x11]
	str r1, [r5, #0x14]
	strb r0, [r5, #0x18]
	ldr r2, _080B7850 @ =0x000008F8
	adds r4, r7, r2
	ldr r0, [r4]
	cmp r5, r0
	beq _080B77A0
	bl sub_8000608
_080B77A0:
	str r5, [r4]
	ldr r0, [r6]
	movs r1, #0
	bl sub_805E860
	ldr r0, [r4]
	movs r1, #0x40
	strh r1, [r0]
	ldr r0, [r4]
	strh r1, [r0, #2]
	ldr r0, [r4]
	add r3, sp, #0x90
	ldrh r3, [r3]
	strh r3, [r0, #6]
	ldr r4, [r4]
	ldr r5, _080B7854 @ =0x00000724
	adds r0, r7, r5
	ldr r1, [r0, #4]
	bl sub_80074C0
	strh r0, [r4, #4]
	ldr r0, _080B7858 @ =0x000008FC
	adds r4, r7, r0
	ldr r0, [r6]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x38
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r5, sp, #0x38
	adds r0, r5, #0
	adds r1, r5, #0
	movs r2, #0x20
	bl sub_80D3994
	adds r0, r5, #0
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r1, r2, r6}
	stm r4!, {r1, r2, r6}
	ldm r0!, {r3, r6}
	stm r4!, {r3, r6}
	adds r0, r7, #0
	bl sub_8008910
	ldr r1, _080B785C @ =0x00000904
	adds r2, r7, r1
	ldr r1, [r2]
	movs r3, #0
	cmp r1, #0
	beq _080B7814
	ldrh r3, [r2, #4]
_080B7814:
	str r0, [sp, #0xb8]
	ldr r4, [sp, #0x90]
	lsls r2, r4, #5
	ldr r5, _080B7860 @ =0x06010000
	adds r2, r2, r5
	add r0, sp, #0x38
	bl sub_8008F0C
	add r6, sp, #0x38
	mov sl, r6
	ldr r0, [sp, #0xb8]
	ldr r1, [r0, #4]
	ldr r0, [r0, #0xc]
	cmp r1, r0
	beq _080B7864
	cmp r1, #0
	beq _080B7842
	adds r0, r1, #0
	add r1, sp, #0x38
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B7842:
	ldr r5, [sp, #0xb8]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080B7932
	.align 2, 0
_080B784C: .4byte 0x000008F4
_080B7850: .4byte 0x000008F8
_080B7854: .4byte 0x00000724
_080B7858: .4byte 0x000008FC
_080B785C: .4byte 0x00000904
_080B7860: .4byte 0x06010000
_080B7864:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x5c]
	ldr r6, [sp, #0xb8]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x58]
	add r1, sp, #0x5c
	add r0, sp, #0x58
	cmp r4, #1
	bhs _080B787E
	adds r0, r1, #0
_080B787E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B789C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080B78A0
	mov r0, sb
	bl sub_80D3BC0
	b _080B78A0
_080B789C:
	movs r0, #0
	mov sb, r0
_080B78A0:
	adds r5, r0, #0
	str r5, [sp, #0xbc]
	ldr r0, [sp, #0xb8]
	ldr r2, [r0]
	adds r3, r5, #0
	cmp r2, r8
	beq _080B78C6
_080B78AE:
	cmp r3, #0
	beq _080B78BE
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080B78BE:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _080B78AE
_080B78C6:
	adds r5, r3, #0
	ldr r0, [sp, #0x5c]
	cmp r0, #1
	bne _080B78E2
	cmp r5, #0
	beq _080B78DE
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B78DE:
	adds r5, #0x10
	b _080B790A
_080B78E2:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _080B7908
_080B78EA:
	cmp r2, #0
	beq _080B78FA
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r5, r6}
	stm r0!, {r3, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080B78FA:
	movs r4, #1
	rsbs r4, r4, #0
	add r8, r4
	adds r2, #0x10
	mov r5, r8
	cmp r5, #0
	bne _080B78EA
_080B7908:
	adds r5, r2, #0
_080B790A:
	ldr r6, [sp, #0xb8]
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B791C
_080B7916:
	adds r1, #0x10
	cmp r1, r2
	bne _080B7916
_080B791C:
	cmp r0, #0
	beq _080B7924
	bl sub_80D0260
_080B7924:
	ldr r0, [sp, #0xbc]
	add r0, sb
	ldr r1, [sp, #0xbc]
	ldr r2, [sp, #0xb8]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_080B7932:
	adds r0, r7, #0
	bl sub_8008910
	adds r5, r0, #0
	ldr r3, _080B7990 @ =0x0000090C
	adds r4, r7, r3
	ldr r6, [r4]
	mov r8, r6
	ldr r1, _080B7994 @ =0x00000724
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl sub_80074C0
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080B7958
	ldrh r3, [r4, #4]
_080B7958:
	str r5, [sp, #0xb8]
	lsls r2, r2, #5
	ldr r4, _080B7998 @ =0x05000200
	adds r2, r2, r4
	add r0, sp, #0x38
	mov r1, r8
	bl sub_8008F0C
	add r5, sp, #0x38
	mov sl, r5
	ldr r6, [sp, #0xb8]
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B799C
	cmp r1, #0
	beq _080B7986
	adds r0, r1, #0
	add r1, sp, #0x38
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B7986:
	ldr r5, [sp, #0xb8]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080B7A6A
	.align 2, 0
_080B7990: .4byte 0x0000090C
_080B7994: .4byte 0x00000724
_080B7998: .4byte 0x05000200
_080B799C:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x64]
	ldr r6, [sp, #0xb8]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x60]
	add r1, sp, #0x64
	add r0, sp, #0x60
	cmp r4, #1
	bhs _080B79B6
	adds r0, r1, #0
_080B79B6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B79D4
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080B79D8
	mov r0, sb
	bl sub_80D3BC0
	b _080B79D8
_080B79D4:
	movs r0, #0
	mov sb, r0
_080B79D8:
	adds r5, r0, #0
	str r5, [sp, #0xbc]
	ldr r0, [sp, #0xb8]
	ldr r2, [r0]
	adds r3, r5, #0
	cmp r2, r8
	beq _080B79FE
_080B79E6:
	cmp r3, #0
	beq _080B79F6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080B79F6:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _080B79E6
_080B79FE:
	adds r5, r3, #0
	ldr r0, [sp, #0x64]
	cmp r0, #1
	bne _080B7A1A
	cmp r5, #0
	beq _080B7A16
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B7A16:
	adds r5, #0x10
	b _080B7A42
_080B7A1A:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _080B7A40
_080B7A22:
	cmp r2, #0
	beq _080B7A32
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r5, r6}
	stm r0!, {r3, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080B7A32:
	movs r4, #1
	rsbs r4, r4, #0
	add r8, r4
	adds r2, #0x10
	mov r5, r8
	cmp r5, #0
	bne _080B7A22
_080B7A40:
	adds r5, r2, #0
_080B7A42:
	ldr r6, [sp, #0xb8]
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B7A54
_080B7A4E:
	adds r1, #0x10
	cmp r1, r2
	bne _080B7A4E
_080B7A54:
	cmp r0, #0
	beq _080B7A5C
	bl sub_80D0260
_080B7A5C:
	ldr r0, [sp, #0xbc]
	add r0, sb
	ldr r1, [sp, #0xbc]
	ldr r2, [sp, #0xb8]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_080B7A6A:
	adds r0, r7, #0
	bl sub_80B8578
	adds r0, r7, #0
	bl sub_8008910
	adds r5, r0, #0
	movs r3, #0xab
	lsls r3, r3, #4
	adds r4, r7, r3
	ldr r6, [r4]
	mov r8, r6
	ldr r1, [sp, #0x24]
	add r0, sp, #0x20
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080B7A96
	ldrh r3, [r4, #4]
_080B7A96:
	str r5, [sp, #0xb8]
	lsls r2, r2, #5
	ldr r0, _080B7ACC @ =0x06010000
	adds r2, r2, r0
	add r0, sp, #0x38
	mov r1, r8
	bl sub_8008F0C
	add r1, sp, #0x38
	mov sl, r1
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080B7AD0
	cmp r1, #0
	beq _080B7AC2
	adds r0, r1, #0
	add r1, sp, #0x38
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B7AC2:
	ldr r5, [sp, #0xb8]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080B7B9E
	.align 2, 0
_080B7ACC: .4byte 0x06010000
_080B7AD0:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x6c]
	ldr r6, [sp, #0xb8]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x68]
	add r1, sp, #0x6c
	add r0, sp, #0x68
	cmp r4, #1
	bhs _080B7AEA
	adds r0, r1, #0
_080B7AEA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B7B08
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080B7B0C
	mov r0, sb
	bl sub_80D3BC0
	b _080B7B0C
_080B7B08:
	movs r0, #0
	mov sb, r0
_080B7B0C:
	adds r5, r0, #0
	str r5, [sp, #0xbc]
	ldr r0, [sp, #0xb8]
	ldr r2, [r0]
	adds r3, r5, #0
	cmp r2, r8
	beq _080B7B32
_080B7B1A:
	cmp r3, #0
	beq _080B7B2A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080B7B2A:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _080B7B1A
_080B7B32:
	adds r5, r3, #0
	ldr r0, [sp, #0x6c]
	cmp r0, #1
	bne _080B7B4E
	cmp r5, #0
	beq _080B7B4A
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B7B4A:
	adds r5, #0x10
	b _080B7B76
_080B7B4E:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _080B7B74
_080B7B56:
	cmp r2, #0
	beq _080B7B66
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r5, r6}
	stm r0!, {r3, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080B7B66:
	movs r4, #1
	rsbs r4, r4, #0
	add r8, r4
	adds r2, #0x10
	mov r5, r8
	cmp r5, #0
	bne _080B7B56
_080B7B74:
	adds r5, r2, #0
_080B7B76:
	ldr r6, [sp, #0xb8]
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B7B88
_080B7B82:
	adds r1, #0x10
	cmp r1, r2
	bne _080B7B82
_080B7B88:
	cmp r0, #0
	beq _080B7B90
	bl sub_80D0260
_080B7B90:
	ldr r0, [sp, #0xbc]
	add r0, sb
	ldr r1, [sp, #0xbc]
	ldr r2, [sp, #0xb8]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_080B7B9E:
	adds r0, r7, #0
	bl sub_8008910
	adds r5, r0, #0
	ldr r3, _080B7BF8 @ =0x00000AD4
	adds r4, r7, r3
	ldr r6, [r4]
	mov r8, r6
	ldr r1, [sp, #0x2c]
	add r0, sp, #0x28
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080B7BC2
	ldrh r3, [r4, #4]
_080B7BC2:
	str r5, [sp, #0xb8]
	lsls r2, r2, #5
	ldr r0, _080B7BFC @ =0x06010000
	adds r2, r2, r0
	add r0, sp, #0x38
	mov r1, r8
	bl sub_8008F0C
	add r1, sp, #0x38
	mov sl, r1
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080B7C00
	cmp r1, #0
	beq _080B7BEE
	adds r0, r1, #0
	add r1, sp, #0x38
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B7BEE:
	ldr r5, [sp, #0xb8]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080B7CCE
	.align 2, 0
_080B7BF8: .4byte 0x00000AD4
_080B7BFC: .4byte 0x06010000
_080B7C00:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x74]
	ldr r6, [sp, #0xb8]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x70]
	add r1, sp, #0x74
	add r0, sp, #0x70
	cmp r4, #1
	bhs _080B7C1A
	adds r0, r1, #0
_080B7C1A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B7C38
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080B7C3C
	mov r0, sb
	bl sub_80D3BC0
	b _080B7C3C
_080B7C38:
	movs r0, #0
	mov sb, r0
_080B7C3C:
	adds r5, r0, #0
	str r5, [sp, #0xbc]
	ldr r0, [sp, #0xb8]
	ldr r2, [r0]
	adds r3, r5, #0
	cmp r2, r8
	beq _080B7C62
_080B7C4A:
	cmp r3, #0
	beq _080B7C5A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080B7C5A:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _080B7C4A
_080B7C62:
	adds r5, r3, #0
	ldr r0, [sp, #0x74]
	cmp r0, #1
	bne _080B7C7E
	cmp r5, #0
	beq _080B7C7A
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B7C7A:
	adds r5, #0x10
	b _080B7CA6
_080B7C7E:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _080B7CA4
_080B7C86:
	cmp r2, #0
	beq _080B7C96
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r5, r6}
	stm r0!, {r3, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080B7C96:
	movs r4, #1
	rsbs r4, r4, #0
	add r8, r4
	adds r2, #0x10
	mov r5, r8
	cmp r5, #0
	bne _080B7C86
_080B7CA4:
	adds r5, r2, #0
_080B7CA6:
	ldr r6, [sp, #0xb8]
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B7CB8
_080B7CB2:
	adds r1, #0x10
	cmp r1, r2
	bne _080B7CB2
_080B7CB8:
	cmp r0, #0
	beq _080B7CC0
	bl sub_80D0260
_080B7CC0:
	ldr r0, [sp, #0xbc]
	add r0, sb
	ldr r1, [sp, #0xbc]
	ldr r2, [sp, #0xb8]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_080B7CCE:
	movs r3, #0
	mov sb, r3
	ldr r4, _080B7CE4 @ =0x00000AEC
	adds r5, r7, r4
_080B7CD6:
	mov r6, sb
	cmp r6, #7
	bgt _080B7CE8
	ldr r4, [r5]
	ldr r1, [sp, #0x2c]
	add r0, sp, #0x28
	b _080B7CEE
	.align 2, 0
_080B7CE4: .4byte 0x00000AEC
_080B7CE8:
	ldr r4, [r5]
	ldr r1, [sp, #0x24]
	add r0, sp, #0x20
_080B7CEE:
	bl sub_8007D4C
	strh r0, [r4, #6]
	ldm r5!, {r1}
	movs r0, #1
	strb r0, [r1, #0x18]
	add sb, r0
	mov r0, sb
	cmp r0, #9
	ble _080B7CD6
	movs r1, #0
	mov sb, r1
	ldr r2, _080B7D3C @ =0xFFFFFE8A
	adds r6, r7, r2
	mov r8, r1
_080B7D0C:
	mov r3, sb
	cmp r3, #7
	bgt _080B7D48
	adds r0, r7, #0
	bl sub_8008920
	adds r4, r0, #0
	ldr r5, _080B7D40 @ =0x00000ACC
	adds r3, r7, r5
	ldr r0, [r3]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080B7D2A
	ldrh r2, [r3, #4]
_080B7D2A:
	mov r3, r8
	adds r0, r3, r7
	ldr r5, _080B7D44 @ =0x00000AEC
	adds r0, r0, r5
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
	b _080B7D94
	.align 2, 0
_080B7D3C: .4byte 0xFFFFFE8A
_080B7D40: .4byte 0x00000ACC
_080B7D44: .4byte 0x00000AEC
_080B7D48:
	mov r1, r8
	adds r0, r1, r7
	ldr r5, _080B7E14 @ =0x00000AEC
	adds r0, r0, r5
	ldr r1, [r0]
	ldrh r0, [r6]
	lsrs r0, r0, #8
	strh r0, [r1]
	mov r2, r8
	adds r0, r2, r7
	adds r0, r0, r5
	ldr r1, [r0]
	ldrh r0, [r6, #2]
	lsrs r0, r0, #8
	strh r0, [r1, #2]
	adds r0, r2, r7
	adds r0, r0, r5
	ldr r1, [r0]
	ldrb r0, [r6, #0xb]
	strh r0, [r1, #8]
	adds r0, r7, #0
	bl sub_8008920
	adds r4, r0, #0
	ldr r3, _080B7E18 @ =0x00000AA8
	adds r0, r7, r3
	ldr r1, [r0]
	movs r2, #0
	cmp r1, #0
	beq _080B7D86
	ldrh r2, [r0, #4]
_080B7D86:
	mov r3, r8
	adds r0, r3, r7
	adds r0, r0, r5
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
_080B7D94:
	adds r6, #0x40
	movs r4, #4
	add r8, r4
	movs r5, #1
	add sb, r5
	mov r0, sb
	cmp r0, #9
	ble _080B7D0C
	movs r1, #0
	mov sb, r1
_080B7DA8:
	mov r2, sb
	lsls r1, r2, #2
	adds r0, r1, r7
	ldr r3, _080B7E1C @ =0x00000924
	adds r0, r0, r3
	ldr r0, [r0]
	ldr r4, [sp, #0x9c]
	adds r5, r4, r1
	strh r5, [r0, #6]
	adds r0, r7, #0
	bl sub_8008910
	adds r6, r0, #0
	mov r0, sb
	lsls r2, r0, #5
	adds r0, r2, r7
	ldr r1, _080B7E20 @ =0x00000934
	adds r0, r0, r1
	ldr r4, [r0]
	adds r2, r2, r7
	adds r2, r2, r1
	ldr r0, [r2]
	movs r3, #0
	cmp r0, #0
	beq _080B7DDC
	ldrh r3, [r2, #4]
_080B7DDC:
	lsls r2, r5, #5
	ldr r1, _080B7E24 @ =0x06010000
	adds r2, r2, r1
	add r0, sp, #0x38
	adds r1, r4, #0
	bl sub_8008F0C
	mov r2, sp
	adds r2, #0x38
	str r2, [sp, #0xa0]
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B7E28
	cmp r1, #0
	beq _080B7E08
	adds r0, r1, #0
	add r1, sp, #0x38
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B7E08:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	movs r6, #1
	add sb, r6
	b _080B7EF6
	.align 2, 0
_080B7E14: .4byte 0x00000AEC
_080B7E18: .4byte 0x00000AA8
_080B7E1C: .4byte 0x00000924
_080B7E20: .4byte 0x00000934
_080B7E24: .4byte 0x06010000
_080B7E28:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x7c]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x78]
	add r1, sp, #0x7c
	add r0, sp, #0x78
	cmp r4, #1
	bhs _080B7E40
	adds r0, r1, #0
_080B7E40:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B7E5E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sl, r4
	cmp r0, #0
	bne _080B7E62
	mov r0, sl
	bl sub_80D3BC0
	b _080B7E62
_080B7E5E:
	movs r0, #0
	mov sl, r0
_080B7E62:
	adds r5, r0, #0
	str r5, [sp, #0xbc]
	ldr r2, [r6]
	mov ip, r5
	movs r0, #1
	add sb, r0
	cmp r2, r8
	beq _080B7E8E
_080B7E72:
	mov r1, ip
	cmp r1, #0
	beq _080B7E84
	mov r0, ip
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B7E84:
	adds r2, #0x10
	movs r0, #0x10
	add ip, r0
	cmp r2, r8
	bne _080B7E72
_080B7E8E:
	mov r5, ip
	ldr r0, [sp, #0x7c]
	cmp r0, #1
	bne _080B7EAA
	cmp r5, #0
	beq _080B7EA6
	adds r0, r5, #0
	ldr r1, [sp, #0xa0]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B7EA6:
	adds r5, #0x10
	b _080B7ED2
_080B7EAA:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _080B7ED0
_080B7EB2:
	cmp r2, #0
	beq _080B7EC2
	adds r0, r2, #0
	ldr r1, [sp, #0xa0]
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B7EC2:
	movs r5, #1
	rsbs r5, r5, #0
	add r8, r5
	adds r2, #0x10
	mov r0, r8
	cmp r0, #0
	bne _080B7EB2
_080B7ED0:
	adds r5, r2, #0
_080B7ED2:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B7EE2
_080B7EDC:
	adds r1, #0x10
	cmp r1, r2
	bne _080B7EDC
_080B7EE2:
	cmp r0, #0
	beq _080B7EEA
	bl sub_80D0260
_080B7EEA:
	ldr r0, [sp, #0xbc]
	add r0, sl
	ldr r1, [sp, #0xbc]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B7EF6:
	mov r2, sb
	cmp r2, #1
	bgt _080B7EFE
	b _080B7DA8
_080B7EFE:
	adds r0, r7, #0
	ldr r1, [sp, #0x98]
	bl sub_80BA7E4
	ldr r3, _080B7F0C @ =0x00000B14
	adds r0, r7, r3
	b _080B84E4
	.align 2, 0
_080B7F0C: .4byte 0x00000B14
_080B7F10:
	adds r0, r7, #0
	bl sub_80087C8
	adds r0, r7, #0
	bl sub_80088B8
	adds r0, r7, #0
	bl sub_80BA608
	ldr r4, _080B7F98 @ =0x00000B31
	adds r0, r7, r4
	ldrb r0, [r0]
	cmp r0, #0
	beq _080B7F2E
	b _080B8086
_080B7F2E:
	adds r0, r7, #0
	bl sub_80BA6B8
	adds r0, r7, #0
	bl sub_80BA284
	movs r5, #0
	mov sb, r5
	adds r6, r7, #0
	adds r6, #0x84
	adds r0, r7, #0
	adds r0, #0x8c
	str r0, [sp, #0xb0]
	adds r1, r7, #0
	adds r1, #0xcc
	str r1, [sp, #0xb4]
_080B7F4E:
	mov r2, sb
	lsls r4, r2, #6
	adds r5, r7, r4
	adds r0, r5, #0
	adds r0, #0x8a
	ldrh r1, [r0]
	adds r0, #2
	ldrh r2, [r0]
	adds r0, r7, #0
	bl sub_80B9464
	adds r1, r6, r4
	str r0, [r1]
	adds r0, r5, #0
	adds r0, #0x9c
	ldrb r0, [r0]
	cmp r0, #0
	bne _080B7FC4
	adds r0, r5, #0
	adds r0, #0x99
	ldrb r0, [r0]
	cmp r0, #0
	beq _080B7FA6
	adds r0, r5, #0
	adds r0, #0x9a
	ldrb r0, [r0]
	cmp r0, #0
	bne _080B7FA6
	mov r3, sb
	cmp r3, #0
	bne _080B7F9C
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	bl sub_80B94A8
	b _080B7FA6
	.align 2, 0
_080B7F98: .4byte 0x00000B31
_080B7F9C:
	adds r0, r7, #0
	movs r1, #1
	movs r2, #0
	bl sub_80B94A8
_080B7FA6:
	adds r4, r7, r4
	adds r0, r4, #0
	adds r0, #0x9a
	ldrb r0, [r0]
	cmp r0, #1
	bne _080B7FBA
	adds r0, r7, #0
	mov r1, sb
	bl sub_80B9844
_080B7FBA:
	adds r0, r4, #0
	adds r0, #0x9c
	ldrb r0, [r0]
	cmp r0, #0
	beq _080B8068
_080B7FC4:
	mov r4, sb
	lsls r5, r4, #6
	adds r0, r7, r5
	adds r4, r0, #0
	adds r4, #0x91
	ldr r0, _080B8000 @ =0x00000B59
	adds r1, r7, r0
	ldrb r0, [r4]
	ldrb r1, [r1]
	cmp r0, r1
	bls _080B7FE8
	adds r0, r5, #0
	adds r0, #0x6c
	adds r0, r7, r0
	bl sub_80BA0C4
	movs r0, #0
	strb r0, [r4]
_080B7FE8:
	adds r0, r7, #0
	adds r0, #0x7c
	adds r0, r0, r5
	ldr r0, [r0]
	cmp r0, #1
	beq _080B8028
	cmp r0, #1
	bgt _080B8004
	cmp r0, #0
	beq _080B800E
	b _080B8056
	.align 2, 0
_080B8000: .4byte 0x00000B59
_080B8004:
	cmp r0, #2
	beq _080B8038
	cmp r0, #3
	beq _080B8048
	b _080B8056
_080B800E:
	ldr r1, _080B8024 @ =0x0000070C
	adds r0, r7, r1
	movs r1, #0xcc
	bl sub_8008B88
	adds r0, r7, #0
	mov r1, sb
	bl sub_80B9B50
	b _080B8056
	.align 2, 0
_080B8024: .4byte 0x0000070C
_080B8028:
	ldrb r0, [r4]
	cmp r0, #0
	bne _080B8056
	adds r0, r7, #0
	mov r1, sb
	bl sub_80B9F0C
	b _080B8056
_080B8038:
	ldrb r0, [r4]
	cmp r0, #0
	bne _080B8056
	adds r0, r7, #0
	mov r1, sb
	bl sub_80B9F38
	b _080B8056
_080B8048:
	ldrb r0, [r4]
	cmp r0, #0
	bne _080B8056
	adds r0, r7, #0
	mov r1, sb
	bl sub_80B9E1C
_080B8056:
	adds r1, r7, #0
	adds r1, #0x91
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	adds r1, #0x40
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_080B8068:
	mov r0, sb
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	cmp r0, #1
	bhi _080B8078
	b _080B7F4E
_080B8078:
	adds r0, r7, #0
	bl sub_80BA734
	adds r0, r7, #0
	bl sub_80B9AC0
	b _080B80B4
_080B8086:
	adds r0, r7, #0
	bl sub_8008920
	adds r4, r0, #0
	ldr r2, _080B80D0 @ =0x000008FC
	adds r0, r7, r2
	ldr r1, [r0]
	movs r2, #0
	cmp r1, #0
	beq _080B809C
	ldrh r2, [r0, #4]
_080B809C:
	ldr r3, _080B80D4 @ =0x000008F8
	adds r0, r7, r3
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
	adds r4, r7, #0
	adds r4, #0x8c
	str r4, [sp, #0xb0]
	adds r5, r7, #0
	adds r5, #0xcc
	str r5, [sp, #0xb4]
_080B80B4:
	movs r6, #0
	mov sb, r6
_080B80B8:
	ldr r1, [sp, #0xb0]
	ldrh r0, [r1]
	ldr r2, [sp, #0xb4]
	ldrh r2, [r2]
	cmp r0, r2
	bls _080B80D8
	adds r0, r7, #0
	mov r1, sb
	ldr r2, [sp, #0x94]
	bl sub_80B8EBC
	b _080B80EA
	.align 2, 0
_080B80D0: .4byte 0x000008FC
_080B80D4: .4byte 0x000008F8
_080B80D8:
	movs r1, #1
	mov r3, sb
	subs r1, r1, r3
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r7, #0
	ldr r2, [sp, #0x94]
	bl sub_80B8EBC
_080B80EA:
	mov r4, sb
	lsls r0, r4, #6
	adds r3, r7, r0
	adds r0, r3, #0
	adds r0, #0xab
	ldrb r0, [r0]
	adds r4, #1
	str r4, [sp, #0xa4]
	cmp r0, #0
	bne _080B8100
	b _080B8420
_080B8100:
	mov r5, sb
	lsls r4, r5, #2
	adds r0, r4, r7
	ldr r1, _080B81CC @ =0x00000924
	adds r0, r0, r1
	ldr r2, [r0]
	adds r0, r3, #0
	adds r0, #0x8a
	ldrh r0, [r0]
	lsrs r0, r0, #8
	subs r0, #9
	strh r0, [r2]
	adds r0, r4, r7
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r3, #0
	adds r0, #0x8c
	ldrh r0, [r0]
	lsrs r0, r0, #8
	subs r0, #0x20
	strh r0, [r1, #2]
	adds r0, r4, r7
	ldr r6, _080B81D0 @ =0x0000091C
	adds r0, r0, r6
	ldr r0, [r0]
	bl sub_805E8F0
	lsls r0, r0, #0x1e
	str r4, [sp, #0xa8]
	lsls r5, r5, #5
	str r5, [sp, #0xac]
	cmp r0, #0
	blt _080B8144
	b _080B83EE
_080B8144:
	adds r5, r5, r7
	ldr r0, _080B81D4 @ =0x0000092C
	adds r4, r5, r0
	ldr r1, [sp, #0xa8]
	adds r0, r1, r7
	adds r0, r0, r6
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x38
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r0, sp, #0x38
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	add r0, sp, #0x38
	ldm r0!, {r2, r3, r6}
	stm r4!, {r2, r3, r6}
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r1, r6}
	stm r4!, {r1, r6}
	adds r0, r7, #0
	bl sub_8008910
	adds r4, r0, #0
	ldr r2, _080B81D8 @ =0x00000934
	adds r5, r5, r2
	ldr r0, [r5]
	adds r1, r0, #0
	ldr r3, [sp, #0xa8]
	ldr r6, [sp, #0x9c]
	adds r2, r3, r6
	movs r3, #0
	cmp r1, #0
	beq _080B819E
	ldrh r3, [r5, #4]
_080B819E:
	adds r6, r4, #0
	lsls r2, r2, #5
	ldr r0, _080B81DC @ =0x06010000
	adds r2, r2, r0
	add r0, sp, #0x38
	bl sub_8008F0C
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B81E0
	cmp r1, #0
	beq _080B81C4
	adds r0, r1, #0
	add r1, sp, #0x38
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B81C4:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B82B4
	.align 2, 0
_080B81CC: .4byte 0x00000924
_080B81D0: .4byte 0x0000091C
_080B81D4: .4byte 0x0000092C
_080B81D8: .4byte 0x00000934
_080B81DC: .4byte 0x06010000
_080B81E0:
	mov r8, r1
	movs r0, #1
	add r1, sp, #0x84
	str r0, [r1]
	ldr r0, [r6]
	mov r5, r8
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x80
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080B81FC
	adds r0, r1, #0
_080B81FC:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B821A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sl, r4
	cmp r0, #0
	bne _080B821E
	mov r0, sl
	bl sub_80D3BC0
	b _080B821E
_080B821A:
	movs r0, #0
	mov sl, r0
_080B821E:
	adds r5, r0, #0
	str r5, [sp, #0xbc]
	ldr r2, [r6]
	mov ip, r5
	mov r0, sb
	adds r0, #1
	str r0, [sp, #0xa4]
	cmp r2, r8
	beq _080B824C
_080B8230:
	mov r1, ip
	cmp r1, #0
	beq _080B8242
	mov r0, ip
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B8242:
	adds r2, #0x10
	movs r0, #0x10
	add ip, r0
	cmp r2, r8
	bne _080B8230
_080B824C:
	mov r5, ip
	ldr r1, [sp, #0x84]
	cmp r1, #1
	bne _080B8268
	cmp r5, #0
	beq _080B8264
	adds r0, r5, #0
	add r1, sp, #0x38
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B8264:
	adds r5, #0x10
	b _080B8290
_080B8268:
	mov r8, r1
	adds r2, r5, #0
	cmp r1, #0
	beq _080B828E
_080B8270:
	cmp r2, #0
	beq _080B8280
	adds r0, r2, #0
	add r1, sp, #0x38
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B8280:
	movs r5, #1
	rsbs r5, r5, #0
	add r8, r5
	adds r2, #0x10
	mov r0, r8
	cmp r0, #0
	bne _080B8270
_080B828E:
	adds r5, r2, #0
_080B8290:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B82A0
_080B829A:
	adds r1, #0x10
	cmp r1, r2
	bne _080B829A
_080B82A0:
	cmp r0, #0
	beq _080B82A8
	bl sub_80D0260
_080B82A8:
	ldr r0, [sp, #0xbc]
	add r0, sl
	ldr r1, [sp, #0xbc]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B82B4:
	adds r0, r7, #0
	bl sub_8008910
	adds r6, r0, #0
	ldr r2, [sp, #0xac]
	adds r0, r2, r7
	ldr r4, _080B8314 @ =0x0000093C
	adds r0, r0, r4
	ldr r5, [r0]
	ldr r3, _080B8318 @ =0x0000071C
	adds r0, r7, r3
	ldr r1, [r0, #4]
	bl sub_80074C0
	adds r2, r0, #0
	ldr r0, [sp, #0xac]
	adds r1, r0, r7
	adds r1, r1, r4
	ldr r0, [r1]
	movs r3, #0
	cmp r0, #0
	beq _080B82E2
	ldrh r3, [r1, #4]
_080B82E2:
	lsls r2, r2, #5
	ldr r1, _080B831C @ =0x05000200
	adds r2, r2, r1
	add r0, sp, #0x38
	adds r1, r5, #0
	bl sub_8008F0C
	add r2, sp, #0x38
	mov sl, r2
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B8320
	cmp r1, #0
	beq _080B830C
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B830C:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B83EE
	.align 2, 0
_080B8314: .4byte 0x0000093C
_080B8318: .4byte 0x0000071C
_080B831C: .4byte 0x05000200
_080B8320:
	mov r8, r1
	movs r0, #1
	add r1, sp, #0x8c
	str r0, [r1]
	ldr r0, [r6]
	mov r2, r8
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0x88
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080B833C
	adds r0, r1, #0
_080B833C:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B835A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080B835E
	mov r0, sb
	bl sub_80D3BC0
	b _080B835E
_080B835A:
	movs r0, #0
	mov sb, r0
_080B835E:
	adds r5, r0, #0
	str r5, [sp, #0xbc]
	ldr r2, [r6]
	mov ip, r5
	cmp r2, r8
	beq _080B8386
_080B836A:
	mov r3, ip
	cmp r3, #0
	beq _080B837C
	mov r0, ip
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B837C:
	adds r2, #0x10
	movs r4, #0x10
	add ip, r4
	cmp r2, r8
	bne _080B836A
_080B8386:
	mov r5, ip
	ldr r1, [sp, #0x8c]
	cmp r1, #1
	bne _080B83A2
	cmp r5, #0
	beq _080B839E
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B839E:
	adds r5, #0x10
	b _080B83CA
_080B83A2:
	mov r8, r1
	adds r2, r5, #0
	cmp r1, #0
	beq _080B83C8
_080B83AA:
	cmp r2, #0
	beq _080B83BA
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080B83BA:
	movs r5, #1
	rsbs r5, r5, #0
	add r8, r5
	adds r2, #0x10
	mov r0, r8
	cmp r0, #0
	bne _080B83AA
_080B83C8:
	adds r5, r2, #0
_080B83CA:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B83DA
_080B83D4:
	adds r1, #0x10
	cmp r1, r2
	bne _080B83D4
_080B83DA:
	cmp r0, #0
	beq _080B83E2
	bl sub_80D0260
_080B83E2:
	ldr r0, [sp, #0xbc]
	add r0, sb
	ldr r1, [sp, #0xbc]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B83EE:
	adds r0, r7, #0
	bl sub_8008920
	adds r6, r0, #0
	ldr r2, [sp, #0xac]
	adds r0, r2, r7
	ldr r1, _080B8470 @ =0x0000092C
	adds r0, r0, r1
	ldr r4, [r0]
	adds r5, r2, r7
	adds r5, r5, r1
	ldr r0, [r5]
	movs r2, #0
	cmp r0, #0
	beq _080B840E
	ldrh r2, [r5, #4]
_080B840E:
	ldr r3, [sp, #0xa8]
	adds r0, r3, r7
	ldr r5, _080B8474 @ =0x00000924
	adds r0, r0, r5
	ldr r3, [r0]
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_805E99C
_080B8420:
	ldr r6, [sp, #0xa4]
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	cmp r0, #1
	bhi _080B842E
	b _080B80B8
_080B842E:
	adds r0, r7, #0
	ldr r1, [sp, #0x98]
	bl sub_80BB8EC
	movs r0, #0
	mov sb, r0
	ldr r1, _080B8478 @ =0xFFFFFE8A
	adds r5, r7, r1
	mov r8, r0
_080B8440:
	mov r2, sb
	cmp r2, #7
	bgt _080B8484
	adds r0, r7, #0
	bl sub_8008920
	adds r4, r0, #0
	ldr r6, _080B847C @ =0x00000ACC
	adds r3, r7, r6
	ldr r0, [r3]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080B845E
	ldrh r2, [r3, #4]
_080B845E:
	mov r3, r8
	adds r0, r3, r7
	ldr r6, _080B8480 @ =0x00000AEC
	adds r0, r0, r6
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
	b _080B84D0
	.align 2, 0
_080B8470: .4byte 0x0000092C
_080B8474: .4byte 0x00000924
_080B8478: .4byte 0xFFFFFE8A
_080B847C: .4byte 0x00000ACC
_080B8480: .4byte 0x00000AEC
_080B8484:
	mov r1, r8
	adds r0, r1, r7
	ldr r6, _080B856C @ =0x00000AEC
	adds r0, r0, r6
	ldr r1, [r0]
	ldrh r0, [r5]
	lsrs r0, r0, #8
	strh r0, [r1]
	mov r2, r8
	adds r0, r2, r7
	adds r0, r0, r6
	ldr r1, [r0]
	ldrh r0, [r5, #2]
	lsrs r0, r0, #8
	strh r0, [r1, #2]
	adds r0, r2, r7
	adds r0, r0, r6
	ldr r1, [r0]
	ldrb r0, [r5, #0xb]
	strh r0, [r1, #8]
	adds r0, r7, #0
	bl sub_8008920
	adds r4, r0, #0
	ldr r3, _080B8570 @ =0x00000AA8
	adds r0, r7, r3
	ldr r1, [r0]
	movs r2, #0
	cmp r1, #0
	beq _080B84C2
	ldrh r2, [r0, #4]
_080B84C2:
	mov r3, r8
	adds r0, r3, r7
	adds r0, r0, r6
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
_080B84D0:
	adds r5, #0x40
	movs r4, #4
	add r8, r4
	movs r6, #1
	add sb, r6
	mov r0, sb
	cmp r0, #9
	ble _080B8440
	ldr r1, _080B8574 @ =0x00000B14
	adds r0, r7, r1
_080B84E4:
	ldr r0, [r0]
	cmp r0, #2
	bne _080B84EC
	b _080B7F10
_080B84EC:
	ldr r1, [sp, #0x34]
	add r0, sp, #0x30
	bl sub_80073E0
	add r0, sp, #0x30
	movs r1, #2
	bl sub_8007184
	ldr r1, [sp, #0x2c]
	add r0, sp, #0x28
	bl sub_8007C28
	add r0, sp, #0x28
	movs r1, #2
	bl sub_80079E8
	ldr r1, [sp, #0x24]
	add r0, sp, #0x20
	bl sub_8007C28
	add r0, sp, #0x20
	movs r1, #2
	bl sub_80079E8
	ldr r1, [sp, #0x1c]
	add r0, sp, #0x18
	bl sub_8007C28
	add r0, sp, #0x18
	movs r1, #2
	bl sub_80079E8
	ldr r1, [sp, #0x14]
	add r0, sp, #0x10
	bl sub_8007C28
	add r0, sp, #0x10
	movs r1, #2
	bl sub_80079E8
	ldr r1, [sp, #0xc]
	add r0, sp, #8
	bl sub_8007C28
	add r0, sp, #8
	movs r1, #2
	bl sub_80079E8
	ldr r1, [sp, #4]
	mov r0, sp
	bl sub_8007C28
	mov r0, sp
	movs r1, #2
	bl sub_80079E8
	add sp, #0xc0
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B856C: .4byte 0x00000AEC
_080B8570: .4byte 0x00000AA8
_080B8574: .4byte 0x00000B14

	thumb_func_start sub_80B8578
sub_80B8578: @ 0x080B8578
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r6, r0, #0
	bl sub_8008918
	mov r2, sp
	movs r3, #0xf2
	lsls r3, r3, #5
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0]
	adds r0, r6, #0
	bl sub_8008918
	mov r2, sp
	ldr r3, _080B86D4 @ =0x00001F45
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xa]
	adds r0, r6, #0
	bl sub_8008918
	mov r2, sp
	ldr r3, _080B86D8 @ =0x00001E43
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xc]
	adds r0, r6, #0
	bl sub_8008918
	mov r2, sp
	ldr r3, _080B86DC @ =0x00001D46
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xe]
	movs r5, #0
	movs r4, #0
	ldr r0, _080B86E0 @ =0x00000B5E
	adds r0, r0, r6
	mov sl, r0
	movs r1, #2
	mov r8, r1
	movs r2, #1
	mov ip, r2
	ldr r3, _080B86E4 @ =0x00000B5B
	adds r3, r3, r6
	mov sb, r3
_080B85DE:
	lsls r2, r5, #6
	adds r3, r6, r2
	adds r0, r3, #0
	adds r0, #0x98
	strb r4, [r0]
	subs r0, #0x10
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	adds r0, #0x10
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	adds r1, r3, #0
	adds r1, #0x8a
	movs r0, #0xf0
	lsls r0, r0, #7
	strh r0, [r1]
	lsls r0, r5, #1
	adds r0, r0, r5
	lsls r0, r0, #0xb
	movs r1, #0xe8
	lsls r1, r1, #6
	adds r0, r0, r1
	adds r1, r3, #0
	adds r1, #0x8c
	strh r0, [r1]
	mov r1, sl
	ldrb r0, [r1]
	adds r1, r3, #0
	adds r1, #0x8f
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x9b
	strb r4, [r0]
	adds r0, r6, #0
	adds r0, #0x6c
	adds r0, r0, r2
	mov r1, r8
	str r1, [r0]
	adds r0, r6, #0
	adds r0, #0x70
	adds r0, r0, r2
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x9d
	mov r1, ip
	strb r1, [r0]
	adds r0, r6, #0
	adds r0, #0x7c
	adds r0, r0, r2
	movs r7, #3
	str r7, [r0]
	adds r0, r6, #0
	adds r0, #0x80
	adds r0, r0, r2
	str r4, [r0]
	adds r0, r3, #0
	adds r0, #0x90
	strb r4, [r0]
	adds r0, #0xc
	strb r1, [r0]
	subs r0, #0xb
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	mov r2, sb
	ldrb r0, [r2]
	adds r1, r3, #0
	adds r1, #0x93
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x94
	mov r1, r8
	strb r1, [r0]
	adds r0, #1
	mov r2, ip
	strb r2, [r0]
	adds r0, #0x16
	strb r4, [r0]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #1
	bls _080B85DE
	movs r0, #2
	str r0, [r6, #0x74]
	str r7, [r6, #0x78]
	adds r0, r6, #0
	adds r0, #0xb4
	movs r5, #0
	str r5, [r0]
	adds r0, #4
	movs r4, #1
	str r4, [r0]
	adds r0, r6, #0
	movs r1, #0
	bl sub_80B8DF4
	adds r0, r6, #0
	movs r1, #1
	bl sub_80B8DF4
	movs r3, #0xb4
	lsls r3, r3, #4
	adds r1, r6, r3
	ldr r2, _080B86E8 @ =0x00000B44
	adds r0, r6, r2
	str r4, [r0]
	str r4, [r1]
	adds r3, #0x10
	adds r0, r6, r3
	str r5, [r0]
	ldr r1, _080B86EC @ =0x00000B18
	adds r0, r6, r1
	ldr r0, [r0]
	cmp r0, #1
	beq _080B8730
	cmp r0, #1
	bgt _080B86F0
	cmp r0, #0
	beq _080B86F6
	b _080B8794
	.align 2, 0
_080B86D4: .4byte 0x00001F45
_080B86D8: .4byte 0x00001E43
_080B86DC: .4byte 0x00001D46
_080B86E0: .4byte 0x00000B5E
_080B86E4: .4byte 0x00000B5B
_080B86E8: .4byte 0x00000B44
_080B86EC: .4byte 0x00000B18
_080B86F0:
	cmp r0, #2
	beq _080B8758
	b _080B8794
_080B86F6:
	ldr r2, _080B8718 @ =0x00000B2C
	adds r0, r6, r2
	ldrb r0, [r0]
	cmp r0, #0
	bne _080B8720
	movs r4, #0x56
	bl sub_80D11E4
	ldr r1, _080B871C @ =0x0000FFFF
	ands r1, r0
	adds r0, r1, #0
	muls r0, r4, r0
	lsrs r0, r0, #0x10
	adds r1, r6, #0
	adds r1, #0xce
	b _080B8792
	.align 2, 0
_080B8718: .4byte 0x00000B2C
_080B871C: .4byte 0x0000FFFF
_080B8720:
	bl sub_80D11E4
	ldr r1, _080B872C @ =0x0000FFFF
	ands r1, r0
	lsrs r1, r1, #9
	b _080B876C
	.align 2, 0
_080B872C: .4byte 0x0000FFFF
_080B8730:
	ldr r3, _080B8750 @ =0x00000B2C
	adds r0, r6, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _080B8762
	movs r4, #0xab
	bl sub_80D11E4
	ldr r1, _080B8754 @ =0x0000FFFF
	ands r1, r0
	adds r0, r1, #0
	muls r0, r4, r0
	lsrs r0, r0, #0x10
	adds r1, r6, #0
	adds r1, #0xce
	b _080B8792
	.align 2, 0
_080B8750: .4byte 0x00000B2C
_080B8754: .4byte 0x0000FFFF
_080B8758:
	ldr r1, _080B8774 @ =0x00000B2C
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080B877C
_080B8762:
	bl sub_80D11E4
	ldr r1, _080B8778 @ =0x0000FFFF
	ands r1, r0
	lsrs r1, r1, #8
_080B876C:
	adds r0, r6, #0
	adds r0, #0xce
	strb r1, [r0]
	b _080B8794
	.align 2, 0
_080B8774: .4byte 0x00000B2C
_080B8778: .4byte 0x0000FFFF
_080B877C:
	movs r4, #0x55
	bl sub_80D11E4
	ldr r1, _080B87B8 @ =0x0000FFFF
	ands r1, r0
	adds r0, r1, #0
	muls r0, r4, r0
	adds r1, r6, #0
	adds r1, #0xce
	lsrs r0, r0, #0x10
	adds r0, #0xab
_080B8792:
	strb r0, [r1]
_080B8794:
	ldr r2, _080B87BC @ =0x00000B2D
	adds r0, r6, r2
	ldrb r0, [r0]
	adds r2, r6, #0
	adds r2, #0x8e
	movs r1, #0
	strb r0, [r2]
	ldr r3, _080B87C0 @ =0x00000B3A
	adds r0, r6, r3
	strb r1, [r0]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B87B8: .4byte 0x0000FFFF
_080B87BC: .4byte 0x00000B2D
_080B87C0: .4byte 0x00000B3A

	thumb_func_start sub_80B87C4
sub_80B87C4: @ 0x080B87C4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r4, r0, #0
	bl sub_8008918
	add r1, sp, #0xc
	movs r3, #0xfa
	lsls r3, r3, #5
	adds r2, r3, #0
	strh r2, [r1]
	movs r7, #0
	strh r2, [r0]
	adds r0, r4, #0
	bl sub_8008918
	add r2, sp, #0xc
	ldr r3, _080B887C @ =0x00001F45
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xa]
	adds r0, r4, #0
	bl sub_8008918
	add r2, sp, #0xc
	ldr r3, _080B8880 @ =0x00001E43
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xc]
	adds r0, r4, #0
	bl sub_8008918
	add r2, sp, #0xc
	ldr r3, _080B8884 @ =0x00001D46
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xe]
	ldr r1, _080B8888 @ =0x0600BFE0
	movs r0, #0
	movs r2, #0x20
	bl sub_8008EB8
	movs r1, #0xe3
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r0, [r0]
	mov sl, r0
	adds r0, r4, #0
	bl sub_80088DC
	mov sb, r0
	adds r0, r4, #0
	bl sub_8008920
	mov r8, r0
	adds r0, r4, #0
	bl sub_8008918
	adds r6, r0, #0
	adds r0, r4, #0
	bl sub_8008940
	adds r5, r0, #0
	adds r0, r4, #0
	bl sub_800894C
	str r5, [sp]
	str r0, [sp, #4]
	str r7, [sp, #8]
	mov r0, sl
	mov r1, sb
	mov r2, r8
	adds r3, r6, #0
	bl sub_8050D3C
	adds r1, r4, #0
	adds r1, #0xdd
	movs r0, #1
	strb r0, [r1]
	adds r4, #0x9d
	strb r0, [r4]
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B887C: .4byte 0x00001F45
_080B8880: .4byte 0x00001E43
_080B8884: .4byte 0x00001D46
_080B8888: .4byte 0x0600BFE0

	thumb_func_start sub_80B888C
sub_80B888C: @ 0x080B888C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x68
	adds r7, r0, #0
	movs r0, #0xe3
	lsls r0, r0, #3
	adds r4, r7, r0
	movs r5, #0
	ldr r0, [r4]
	cmp r5, r0
	beq _080B88B2
	cmp r0, #0
	beq _080B88B2
	movs r1, #3
	bl sub_8050D0C
_080B88B2:
	str r5, [r4]
	movs r0, #4
	bl sub_80005D4
	adds r5, r0, #0
	add r0, sp, #0xc
	bl sub_800835C
	add r4, sp, #0x10
	adds r0, r4, #0
	bl sub_800770C
	movs r0, #0
	str r0, [sp]
	add r1, sp, #0xc
	str r1, [sp, #4]
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #0xf
	movs r3, #0
	bl sub_8050CC0
	movs r2, #0xe3
	lsls r2, r2, #3
	adds r6, r7, r2
	adds r5, r0, #0
	ldr r0, [r6]
	cmp r5, r0
	beq _080B88F8
	cmp r0, #0
	beq _080B88F8
	movs r1, #3
	bl sub_8050D0C
_080B88F8:
	str r5, [r6]
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007714
	add r0, sp, #0xc
	movs r1, #2
	bl sub_8008364
	movs r3, #0xe3
	lsls r3, r3, #3
	adds r0, r7, r3
	ldr r0, [r0]
	movs r1, #0
	bl sub_8050E50
	add r0, sp, #0xc
	bl sub_8007874
	movs r0, #0
	mov sb, r0
	str r0, [sp, #0x10]
	add r5, sp, #0x14
	adds r0, r5, #0
	bl sub_8007874
	mov r1, sb
	str r1, [r5, #4]
	add r6, sp, #0x1c
	adds r0, r6, #0
	bl sub_8007874
	mov r2, sb
	str r2, [r6, #4]
	add r4, sp, #0x24
	adds r0, r4, #0
	bl sub_8007874
	mov r3, sb
	str r3, [r4, #4]
	add r4, sp, #0x2c
	adds r0, r4, #0
	bl sub_8007874
	mov r0, sb
	str r0, [r4, #4]
	ldr r1, [sp, #0x10]
	add r0, sp, #0xc
	bl sub_8007C28
	add r0, sp, #0xc
	movs r1, #3
	bl sub_8007B54
	adds r1, r0, #0
	str r1, [sp, #0x10]
	add r0, sp, #0xc
	bl sub_8007D4C
	str r0, [sp, #0x44]
	ldr r1, [sp, #0x18]
	adds r0, r5, #0
	bl sub_8007C28
	adds r0, r5, #0
	movs r1, #7
	bl sub_8007B54
	adds r1, r0, #0
	str r1, [sp, #0x18]
	adds r0, r5, #0
	bl sub_8007D4C
	str r0, [sp, #0x48]
	ldr r1, [sp, #0x20]
	adds r0, r6, #0
	bl sub_8007C28
	adds r0, r6, #0
	movs r1, #5
	bl sub_8007B54
	str r0, [sp, #0x20]
	add r0, sp, #0x34
	bl sub_8007128
	add r0, sp, #0x34
	bl sub_800736C
	str r0, [sp, #0x38]
	mov r1, sb
	strb r1, [r7, #8]
	adds r0, r7, #0
	adds r0, #0xc4
	ldr r1, [r0]
	adds r2, r7, #0
	adds r2, #8
	str r2, [sp, #0x64]
	str r0, [sp, #0x60]
	cmp r1, #0
	bge _080B89CC
	movs r3, #0x9e
	adds r3, r3, r7
	mov r8, r3
	adds r0, r2, #0
	b _080B89D4
_080B89CC:
	movs r3, #0xde
	adds r3, r3, r7
	mov r8, r3
	ldr r0, [sp, #0x64]
_080B89D4:
	bl sub_80D3B78
	ldr r1, [sp, #0x64]
	adds r6, r1, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080B8A02
	mov r0, r8
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080B89F2
	adds r4, r5, #0
_080B89F2:
	adds r0, r6, #0
	mov r1, r8
	adds r2, r4, #0
	bl sub_80D3994
	adds r0, r6, r4
	mov r2, sb
	strb r2, [r0]
_080B8A02:
	movs r3, #0xb5
	str r3, [sp, #0x4c]
	movs r0, #0
	str r0, [sp, #0x50]
	adds r0, r7, #0
	bl sub_80B87C4
	add r0, sp, #0x3c
	bl sub_8007128
	ldr r1, [sp, #0x38]
	add r0, sp, #0x3c
	bl sub_800745C
	str r0, [sp, #0x40]
	add r1, sp, #0x3c
	adds r0, r7, #0
	bl sub_80BC288
	adds r0, r7, #0
	movs r1, #0
	ldr r2, [sp, #0x44]
	bl sub_80B8EBC
	adds r0, r7, #0
	movs r1, #1
	ldr r2, [sp, #0x44]
	bl sub_80B8EBC
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	bl sub_80BAC9C
	movs r1, #0xe2
	lsls r1, r1, #3
	adds r0, r7, r1
	movs r1, #0xb4
	bl sub_8008BB0
	movs r2, #0
	str r2, [sp, #0x54]
	ldr r3, _080B8AEC @ =0x00000B14
	adds r0, r7, r3
	ldr r0, [r0]
	cmp r0, #3
	beq _080B8A60
	b _080B8D30
_080B8A60:
	movs r0, #0xe3
	lsls r0, r0, #3
	adds r0, r0, r7
	mov sl, r0
	movs r1, #0xf4
	lsls r1, r1, #3
	adds r1, r7, r1
	str r1, [sp, #0x5c]
_080B8A70:
	adds r0, r7, #0
	bl sub_80087C8
	adds r0, r7, #0
	bl sub_80088B8
	mov r2, sl
	ldr r0, [r2]
	bl sub_8050D34
	str r0, [sp, #0x58]
	mov r3, sl
	ldr r3, [r3]
	mov sb, r3
	adds r0, r7, #0
	bl sub_80088DC
	mov r8, r0
	adds r0, r7, #0
	bl sub_8008920
	adds r6, r0, #0
	adds r0, r7, #0
	bl sub_8008918
	adds r5, r0, #0
	adds r0, r7, #0
	bl sub_8008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl sub_800894C
	movs r2, #0xe1
	lsls r2, r2, #3
	adds r1, r7, r2
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, sb
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl sub_8050D3C
	ldr r3, [sp, #0x54]
	cmp r3, #0
	beq _080B8AF0
	ldr r1, [sp, #0x5c]
	ldr r0, [r1]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r1, r0, #0x1f
	cmp r1, #0
	beq _080B8AE2
	b _080B8C28
_080B8AE2:
	ldr r2, _080B8AEC @ =0x00000B14
	adds r0, r7, r2
	str r1, [r0]
	b _080B8C28
	.align 2, 0
_080B8AEC: .4byte 0x00000B14
_080B8AF0:
	cmp r0, #0
	beq _080B8AFA
	cmp r0, #3
	beq _080B8B7E
	b _080B8C28
_080B8AFA:
	ldr r3, [sp, #0x50]
	cmp r3, #1
	ble _080B8B74
	movs r0, #1
	str r0, [sp, #0x54]
	ldr r1, [sp, #0x5c]
	ldr r0, [r1]
	adds r0, #0xc
	ldr r1, _080B8B40 @ =0x00000889
	movs r2, #1
	movs r3, #1
	bl sub_8009378
	adds r0, r7, #0
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r3, [sp, #0x5c]
	ldr r1, [r3]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
	ldr r1, [sp, #0x60]
	ldr r0, [r1]
	cmp r0, #0
	bge _080B8B64
	ldr r2, _080B8B44 @ =0x00000B18
	adds r1, r7, r2
	ldr r0, [r1]
	cmp r0, #1
	bgt _080B8B48
	adds r0, #1
	str r0, [r1]
	b _080B8C28
	.align 2, 0
_080B8B40: .4byte 0x00000889
_080B8B44: .4byte 0x00000B18
_080B8B48:
	ldr r3, _080B8B60 @ =0x00000B32
	adds r0, r7, r3
	add r1, sp, #0x54
	ldrb r1, [r1]
	strb r1, [r0]
	movs r2, #0xb3
	lsls r2, r2, #4
	adds r0, r7, r2
	add r3, sp, #0x54
	ldrb r3, [r3]
	strb r3, [r0]
	b _080B8C28
	.align 2, 0
_080B8B60: .4byte 0x00000B32
_080B8B64:
	ldr r1, _080B8B70 @ =0x00000B32
	adds r0, r7, r1
	add r2, sp, #0x54
	ldrb r2, [r2]
	strb r2, [r0]
	b _080B8C28
	.align 2, 0
_080B8B70: .4byte 0x00000B32
_080B8B74:
	mov r3, sl
	ldr r0, [r3]
	bl sub_8050D5C
	b _080B8C28
_080B8B7E:
	ldr r0, [sp, #0x58]
	cmp r0, #1
	beq _080B8B8E
	mov r1, sl
	ldr r0, [r1]
	bl sub_8050D74
	b _080B8C28
_080B8B8E:
	ldr r2, [sp, #0x50]
	cmp r2, #0
	beq _080B8B9A
	cmp r2, #1
	beq _080B8BB0
	b _080B8C28
_080B8B9A:
	mov r3, sl
	ldr r0, [r3]
	ldr r1, _080B8BAC @ =gUnknown_08107ABC
	bl sub_8050D8C
	movs r0, #1
	str r0, [sp, #0x50]
	b _080B8C28
	.align 2, 0
_080B8BAC: .4byte gUnknown_08107ABC
_080B8BB0:
	movs r1, #0xe2
	lsls r1, r1, #3
	adds r0, r7, r1
	bl sub_8008BE0
	movs r2, #0xb4
	lsls r2, r2, #4
	adds r0, r7, r2
	ldr r3, [sp, #0x54]
	str r3, [r0]
	ldr r1, _080B8C60 @ =0x00000B44
	adds r0, r7, r1
	ldr r2, [sp, #0x50]
	str r2, [r0]
	movs r3, #0xb5
	lsls r3, r3, #4
	adds r0, r7, r3
	ldr r1, [sp, #0x54]
	str r1, [r0]
	ldr r2, _080B8C64 @ =gUnknown_08107AC4
	mov r8, r2
	ldr r0, [sp, #0x64]
	bl sub_80D3B78
	ldr r3, [sp, #0x64]
	adds r6, r3, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080B8C0C
	mov r0, r8
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080B8BFA
	adds r4, r5, #0
_080B8BFA:
	adds r0, r6, #0
	mov r1, r8
	adds r2, r4, #0
	bl sub_80D3994
	adds r0, r6, r4
	add r1, sp, #0x54
	ldrb r1, [r1]
	strb r1, [r0]
_080B8C0C:
	mov r2, sl
	ldr r0, [r2]
	ldr r1, [sp, #0x64]
	bl sub_8050D8C
	mov r3, sl
	ldr r0, [r3]
	bl sub_8050DD8
	movs r0, #0
	str r0, [sp, #0x4c]
	ldr r1, [sp, #0x50]
	adds r1, #1
	str r1, [sp, #0x50]
_080B8C28:
	ldr r2, [sp, #0x4c]
	cmp r2, #0xb3
	bgt _080B8C32
	adds r2, #1
	str r2, [sp, #0x4c]
_080B8C32:
	ldr r3, [sp, #0x4c]
	cmp r3, #0xb4
	bne _080B8C40
	mov r1, sl
	ldr r0, [r1]
	bl sub_8050DE4
_080B8C40:
	movs r4, #0
	adds r5, r7, #0
	adds r5, #0x84
_080B8C46:
	ldr r0, [r5]
	cmp r0, #0
	bge _080B8C68
	movs r1, #1
	subs r1, r1, r4
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r7, #0
	ldr r2, [sp, #0x44]
	bl sub_80B8EBC
	b _080B8C74
	.align 2, 0
_080B8C60: .4byte 0x00000B44
_080B8C64: .4byte gUnknown_08107AC4
_080B8C68:
	lsls r1, r4, #0x18
	lsrs r1, r1, #0x18
	adds r0, r7, #0
	ldr r2, [sp, #0x44]
	bl sub_80B8EBC
_080B8C74:
	adds r4, #1
	cmp r4, #1
	ble _080B8C46
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	bl sub_80BB8EC
	movs r2, #0
	mov sb, r2
	ldr r3, _080B8CBC @ =0xFFFFFE8A
	adds r5, r7, r3
	mov r8, r2
_080B8C8C:
	mov r0, sb
	cmp r0, #7
	bgt _080B8CC8
	adds r0, r7, #0
	bl sub_8008920
	adds r4, r0, #0
	ldr r1, _080B8CC0 @ =0x00000ACC
	adds r3, r7, r1
	ldr r0, [r3]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080B8CAA
	ldrh r2, [r3, #4]
_080B8CAA:
	mov r3, r8
	adds r0, r3, r7
	ldr r3, _080B8CC4 @ =0x00000AEC
	adds r0, r0, r3
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
	b _080B8D14
	.align 2, 0
_080B8CBC: .4byte 0xFFFFFE8A
_080B8CC0: .4byte 0x00000ACC
_080B8CC4: .4byte 0x00000AEC
_080B8CC8:
	mov r1, r8
	adds r0, r1, r7
	ldr r6, _080B8DA0 @ =0x00000AEC
	adds r0, r0, r6
	ldr r1, [r0]
	ldrh r0, [r5]
	lsrs r0, r0, #8
	strh r0, [r1]
	mov r2, r8
	adds r0, r2, r7
	adds r0, r0, r6
	ldr r1, [r0]
	ldrh r0, [r5, #2]
	lsrs r0, r0, #8
	strh r0, [r1, #2]
	adds r0, r2, r7
	adds r0, r0, r6
	ldr r1, [r0]
	ldrb r0, [r5, #0xb]
	strh r0, [r1, #8]
	adds r0, r7, #0
	bl sub_8008920
	adds r4, r0, #0
	ldr r3, _080B8DA4 @ =0x00000AA8
	adds r0, r7, r3
	ldr r1, [r0]
	movs r2, #0
	cmp r1, #0
	beq _080B8D06
	ldrh r2, [r0, #4]
_080B8D06:
	mov r3, r8
	adds r0, r3, r7
	adds r0, r0, r6
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
_080B8D14:
	adds r5, #0x40
	movs r0, #4
	add r8, r0
	movs r1, #1
	add sb, r1
	mov r2, sb
	cmp r2, #9
	ble _080B8C8C
	ldr r3, _080B8DA8 @ =0x00000B14
	adds r0, r7, r3
	ldr r0, [r0]
	cmp r0, #3
	bne _080B8D30
	b _080B8A70
_080B8D30:
	ldr r1, [sp, #0x38]
	add r0, sp, #0x34
	bl sub_80073E0
	add r0, sp, #0x34
	movs r1, #2
	bl sub_8007184
	ldr r1, [sp, #0x30]
	add r0, sp, #0x2c
	bl sub_8007C28
	add r0, sp, #0x2c
	movs r1, #2
	bl sub_80079E8
	ldr r1, [sp, #0x28]
	add r0, sp, #0x24
	bl sub_8007C28
	add r0, sp, #0x24
	movs r1, #2
	bl sub_80079E8
	ldr r1, [sp, #0x20]
	add r0, sp, #0x1c
	bl sub_8007C28
	add r0, sp, #0x1c
	movs r1, #2
	bl sub_80079E8
	ldr r1, [sp, #0x18]
	add r0, sp, #0x14
	bl sub_8007C28
	add r0, sp, #0x14
	movs r1, #2
	bl sub_80079E8
	ldr r1, [sp, #0x10]
	add r0, sp, #0xc
	bl sub_8007C28
	add r0, sp, #0xc
	movs r1, #2
	bl sub_80079E8
	add sp, #0x68
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B8DA0: .4byte 0x00000AEC
_080B8DA4: .4byte 0x00000AA8
_080B8DA8: .4byte 0x00000B14

	thumb_func_start sub_80B8DAC
sub_80B8DAC: @ 0x080B8DAC
	push {r4, lr}
	adds r4, r2, #0
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	cmp r3, #1
	bne _080B8DC4
	ldr r2, _080B8DE8 @ =0x00000B18
	adds r0, r0, r2
	ldr r0, [r0]
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
_080B8DC4:
	ldr r2, _080B8DEC @ =gUnknown_08107ACC
	lsls r1, r1, #1
	lsls r0, r3, #1
	adds r0, r0, r3
	lsls r0, r0, #2
	adds r1, r1, r0
	adds r1, r1, r2
	ldr r0, _080B8DF0 @ =gUnknown_08107AFC
	adds r0, r4, r0
	ldrb r2, [r0]
	ldrh r0, [r1]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080B8DE8: .4byte 0x00000B18
_080B8DEC: .4byte gUnknown_08107ACC
_080B8DF0: .4byte gUnknown_08107AFC

	thumb_func_start sub_80B8DF4
sub_80B8DF4: @ 0x080B8DF4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov r8, r1
	movs r0, #0x14
	bl sub_80005D4
	ldr r2, _080B8EB0 @ =0x0000077C
	adds r1, r6, r2
	ldr r1, [r1]
	movs r2, #0x80
	lsls r2, r2, #1
	mov sl, r2
	movs r2, #0
	mov r3, sl
	bl sub_805E824
	adds r4, r0, #0
	mov r0, r8
	lsls r7, r0, #2
	adds r5, r7, r6
	ldr r1, _080B8EB4 @ =0x000007A4
	mov sb, r1
	add r5, sb
	ldr r0, [r5]
	cmp r4, r0
	beq _080B8E38
	bl sub_8000608
_080B8E38:
	str r4, [r5]
	movs r0, #0x1c
	bl sub_80005D4
	adds r5, r0, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r5]
	strh r0, [r5, #2]
	strh r0, [r5, #4]
	strh r0, [r5, #6]
	strh r0, [r5, #8]
	str r0, [r5, #0xc]
	strb r1, [r5, #0x10]
	strb r1, [r5, #0x11]
	str r0, [r5, #0x14]
	strb r1, [r5, #0x18]
	adds r4, r7, r6
	ldr r2, _080B8EB8 @ =0x000007AC
	adds r4, r4, r2
	ldr r0, [r4]
	adds r7, r7, r6
	cmp r5, r0
	beq _080B8E6C
	bl sub_8000608
_080B8E6C:
	str r5, [r4]
	mov r0, sb
	adds r4, r7, r0
	ldr r5, [r4]
	mov r1, r8
	lsls r2, r1, #6
	adds r0, r6, #0
	adds r0, #0x6c
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r6, #0
	adds r0, #0x74
	adds r0, r0, r2
	ldr r2, [r0]
	adds r0, r6, #0
	mov r3, r8
	bl sub_80B8DAC
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r5, #0
	bl sub_805E860
	ldr r0, [r4]
	mov r2, sl
	strh r2, [r0, #0x10]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B8EB0: .4byte 0x0000077C
_080B8EB4: .4byte 0x000007A4
_080B8EB8: .4byte 0x000007AC

	thumb_func_start sub_80B8EBC
sub_80B8EBC: @ 0x080B8EBC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x84
	mov sb, r0
	str r2, [sp, #0x60]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r1, [sp, #0x5c]
	lsls r4, r1, #6
	adds r0, #0x78
	adds r6, r0, r4
	subs r0, #4
	adds r7, r0, r4
	ldr r0, [r6]
	ldr r5, [r7]
	cmp r0, r5
	bne _080B8F00
	mov r0, sb
	adds r0, #0x70
	adds r0, r0, r4
	mov r2, sb
	adds r2, #0x6c
	adds r1, r2, r4
	ldr r3, [r0]
	ldr r0, [r1]
	str r2, [sp, #0x68]
	ldr r1, [sp, #0x5c]
	lsls r1, r1, #2
	mov sl, r1
	cmp r3, r0
	beq _080B8F3A
_080B8F00:
	str r5, [r6]
	mov r1, sb
	adds r1, #0x70
	adds r1, r1, r4
	mov r6, sb
	adds r6, #0x6c
	adds r2, r6, r4
	ldr r0, [r2]
	str r0, [r1]
	ldr r3, [sp, #0x5c]
	lsls r5, r3, #2
	mov r4, sb
	adds r0, r5, r4
	ldr r1, _080B8FE0 @ =0x000007A4
	adds r0, r0, r1
	ldr r4, [r0]
	ldr r1, [r2]
	ldr r2, [r7]
	mov r0, sb
	bl sub_80B8DAC
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_805E860
	str r6, [sp, #0x68]
	mov sl, r5
_080B8F3A:
	ldr r2, [sp, #0x5c]
	lsls r2, r2, #6
	str r2, [sp, #0x64]
	adds r7, r2, #0
	add r7, sb
	movs r3, #0x9d
	adds r3, r3, r7
	mov r8, r3
	ldrb r0, [r3]
	rsbs r4, r0, #0
	orrs r4, r0
	lsrs r4, r4, #0x1f
	mov r0, sl
	add r0, sb
	ldr r6, _080B8FE0 @ =0x000007A4
	adds r0, r0, r6
	ldr r0, [r0]
	bl sub_805E8F0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x19
	movs r1, #1
	ands r0, r1
	orrs r4, r0
	movs r5, #0
	mov r0, r8
	strb r4, [r0]
	mov r0, sl
	add r0, sb
	adds r0, r0, r6
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sp
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r2, sp, #0x20
	movs r0, #0
	strh r5, [r2]
	strh r5, [r2, #2]
	strh r5, [r2, #4]
	strh r5, [r2, #6]
	strh r5, [r2, #8]
	str r5, [r2, #0xc]
	strb r0, [r2, #0x10]
	strb r0, [r2, #0x11]
	str r5, [r2, #0x14]
	strb r0, [r2, #0x18]
	mov r0, sl
	add r0, sb
	ldr r1, _080B8FE4 @ =0x000007AC
	adds r0, r0, r1
	adds r1, r2, #0
	ldr r0, [r0]
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
	ldm r0!, {r3, r4, r6}
	stm r1!, {r3, r4, r6}
	ldr r0, [r0]
	str r0, [r1]
	adds r0, r7, #0
	adds r0, #0x8a
	ldrh r0, [r0]
	lsrs r0, r0, #8
	strh r0, [r2]
	ldr r5, [sp, #0x68]
	ldr r6, [sp, #0x64]
	adds r0, r5, r6
	ldr r0, [r0]
	str r6, [sp, #0x74]
	adds r6, r2, #0
	cmp r0, #5
	beq _080B8FE8
	adds r0, r7, #0
	adds r0, #0x8c
	b _080B8FEC
	.align 2, 0
_080B8FE0: .4byte 0x000007A4
_080B8FE4: .4byte 0x000007AC
_080B8FE8:
	adds r0, r7, #0
	adds r0, #0x96
_080B8FEC:
	ldrh r0, [r0]
	lsrs r0, r0, #8
	strh r0, [r6, #2]
	adds r4, r6, #0
	ldr r7, [sp, #0x60]
	add r7, sl
	mov r8, r7
	strh r7, [r4, #6]
	ldr r0, [sp, #0x5c]
	lsls r5, r0, #3
	mov r1, sb
	adds r0, r5, r1
	ldr r2, _080B909C @ =0x0000072C
	adds r0, r0, r2
	ldr r1, [r0, #4]
	bl sub_80074C0
	strh r0, [r4, #4]
	movs r3, #1
	mov sl, r3
	mov r7, sl
	strb r7, [r4, #0x18]
	ldr r7, [sp, #0x74]
	add r7, sb
	adds r0, r7, #0
	adds r0, #0x95
	ldrb r0, [r0]
	strh r0, [r4, #8]
	mov r0, sb
	bl sub_8008920
	adds r3, r0, #0
	ldr r0, [sp]
	adds r1, r0, #0
	mov r0, sp
	movs r2, #0
	str r5, [sp, #0x70]
	cmp r1, #0
	beq _080B903C
	ldrh r2, [r0, #4]
_080B903C:
	adds r0, r3, #0
	adds r3, r6, #0
	bl sub_805E99C
	adds r0, r7, #0
	adds r0, #0x9d
	ldrb r0, [r0]
	cmp r0, #0
	bne _080B9050
	b _080B92A4
_080B9050:
	mov r0, sb
	bl sub_8008910
	add r2, sp, #8
	ldr r1, [sp, #8]
	movs r3, #0
	cmp r1, #0
	beq _080B9062
	ldrh r3, [r2, #4]
_080B9062:
	adds r5, r0, #0
	mov r0, r8
	lsls r2, r0, #5
	ldr r4, _080B90A0 @ =0x06010000
	adds r2, r2, r4
	add r0, sp, #0x3c
	bl sub_8008F0C
	add r6, sp, #0x3c
	mov r8, r6
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080B90A4
	cmp r1, #0
	beq _080B908E
	adds r0, r1, #0
	add r1, sp, #0x3c
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B908E:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	mov r4, sp
	adds r4, #0x10
	str r4, [sp, #0x6c]
	b _080B9170
	.align 2, 0
_080B909C: .4byte 0x0000072C
_080B90A0: .4byte 0x06010000
_080B90A4:
	str r1, [sp, #0x78]
	mov r6, sl
	str r6, [sp, #0x50]
	ldr r0, [r5]
	adds r7, r1, #0
	subs r0, r7, r0
	asrs r4, r0, #4
	str r4, [sp, #0x4c]
	add r1, sp, #0x50
	add r0, sp, #0x4c
	cmp r4, #1
	bhs _080B90BE
	adds r0, r1, #0
_080B90BE:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B90DC
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sl, r4
	cmp r0, #0
	bne _080B90E0
	mov r0, sl
	bl sub_80D3BC0
	b _080B90E0
_080B90DC:
	movs r0, #0
	mov sl, r0
_080B90E0:
	adds r4, r0, #0
	str r4, [sp, #0x7c]
	ldr r2, [r5]
	adds r3, r4, #0
	mov r0, sp
	adds r0, #0x10
	str r0, [sp, #0x6c]
	ldr r1, [sp, #0x78]
	cmp r2, r1
	beq _080B910E
_080B90F4:
	cmp r3, #0
	beq _080B9104
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B9104:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x78]
	cmp r2, r0
	bne _080B90F4
_080B910E:
	adds r4, r3, #0
	ldr r0, [sp, #0x50]
	cmp r0, #1
	bne _080B912A
	cmp r4, #0
	beq _080B9126
	adds r0, r4, #0
	mov r1, r8
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080B9126:
	adds r4, #0x10
	b _080B914C
_080B912A:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080B914A
_080B9132:
	cmp r2, #0
	beq _080B9142
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B9142:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B9132
_080B914A:
	adds r4, r2, #0
_080B914C:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B915C
_080B9156:
	adds r1, #0x10
	cmp r1, r2
	bne _080B9156
_080B915C:
	cmp r0, #0
	beq _080B9164
	bl sub_80D0260
_080B9164:
	ldr r0, [sp, #0x7c]
	add r0, sl
	ldr r7, [sp, #0x7c]
	str r7, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080B9170:
	mov r0, sb
	bl sub_8008910
	adds r4, r0, #0
	ldr r5, [sp, #0x10]
	ldr r0, [sp, #0x70]
	add r0, sb
	ldr r1, _080B91CC @ =0x0000072C
	adds r0, r0, r1
	ldr r1, [r0, #4]
	bl sub_80074C0
	adds r2, r0, #0
	ldr r0, [sp, #0x10]
	movs r3, #0
	cmp r0, #0
	beq _080B9196
	ldr r6, [sp, #0x6c]
	ldrh r3, [r6, #4]
_080B9196:
	adds r6, r4, #0
	lsls r2, r2, #5
	ldr r7, _080B91D0 @ =0x05000200
	adds r2, r2, r7
	add r0, sp, #0x3c
	adds r1, r5, #0
	bl sub_8008F0C
	add r0, sp, #0x3c
	mov r8, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080B91D4
	cmp r1, #0
	beq _080B91C2
	adds r0, r1, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B91C2:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080B929A
	.align 2, 0
_080B91CC: .4byte 0x0000072C
_080B91D0: .4byte 0x05000200
_080B91D4:
	str r1, [sp, #0x7c]
	movs r0, #1
	str r0, [sp, #0x58]
	ldr r0, [r6]
	adds r5, r1, #0
	subs r0, r5, r0
	asrs r4, r0, #4
	str r4, [sp, #0x54]
	add r1, sp, #0x58
	add r0, sp, #0x54
	cmp r4, #1
	bhs _080B91EE
	adds r0, r1, #0
_080B91EE:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080B920C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sl, r4
	cmp r0, #0
	bne _080B9210
	mov r0, sl
	bl sub_80D3BC0
	b _080B9210
_080B920C:
	movs r0, #0
	mov sl, r0
_080B9210:
	adds r5, r0, #0
	str r5, [sp, #0x80]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x7c]
	cmp r2, r7
	beq _080B9238
_080B921E:
	cmp r3, #0
	beq _080B922E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B922E:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x7c]
	cmp r2, r0
	bne _080B921E
_080B9238:
	adds r5, r3, #0
	ldr r0, [sp, #0x58]
	cmp r0, #1
	bne _080B9254
	cmp r5, #0
	beq _080B9250
	adds r0, r5, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080B9250:
	adds r5, #0x10
	b _080B9276
_080B9254:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080B9274
_080B925C:
	cmp r2, #0
	beq _080B926C
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080B926C:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080B925C
_080B9274:
	adds r5, r2, #0
_080B9276:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080B9286
_080B9280:
	adds r1, #0x10
	cmp r1, r2
	bne _080B9280
_080B9286:
	cmp r0, #0
	beq _080B928E
	bl sub_80D0260
_080B928E:
	ldr r0, [sp, #0x80]
	add r0, sl
	ldr r7, [sp, #0x80]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080B929A:
	ldr r0, [sp, #0x74]
	add r0, sb
	adds r0, #0x9d
	movs r1, #0
	strb r1, [r0]
_080B92A4:
	add sp, #0x84
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80B92B4
sub_80B92B4: @ 0x080B92B4
	push {r4, r5, lr}
	sub sp, #0x10
	adds r4, r0, #0
	adds r0, #0xac
	ldr r0, [r0]
	cmp r0, #1
	bls _080B92C4
	b _080B93D0
_080B92C4:
	adds r0, r4, #0
	adds r0, #0xca
	ldrh r1, [r0]
	adds r0, #2
	ldrh r2, [r0]
	subs r0, #0x18
	ldr r3, [r0]
	subs r0, #0x2a
	ldrh r0, [r0]
	str r0, [sp]
	adds r0, r4, #0
	adds r0, #0x8c
	ldrh r0, [r0]
	str r0, [sp, #4]
	ldr r5, _080B9314 @ =0x00000B5D
	adds r0, r4, r5
	ldrb r0, [r0]
	str r0, [sp, #8]
	adds r5, #0x15
	adds r0, r4, r5
	ldrh r0, [r0]
	str r0, [sp, #0xc]
	adds r0, r4, #0
	bl sub_80B96AC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080B9340
	adds r0, r4, #0
	adds r0, #0xce
	ldrb r0, [r0]
	cmp r0, #0x50
	bls _080B9320
	bl sub_80D11E4
	ldr r1, _080B9318 @ =0x0000FFFF
	ands r1, r0
	lsrs r1, r1, #9
	ldr r2, _080B931C @ =0x00000B6A
	b _080B93E8
	.align 2, 0
_080B9314: .4byte 0x00000B5D
_080B9318: .4byte 0x0000FFFF
_080B931C: .4byte 0x00000B6A
_080B9320:
	bl sub_80D11E4
	ldr r1, _080B9338 @ =0x0000FFFF
	ands r1, r0
	lsrs r1, r1, #9
	ldr r5, _080B933C @ =0x00000B6B
	adds r0, r4, r5
	ldrb r0, [r0]
	cmp r1, r0
	bls _080B9416
	b _080B93F0
	.align 2, 0
_080B9338: .4byte 0x0000FFFF
_080B933C: .4byte 0x00000B6B
_080B9340:
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0
	bl sub_80B9F64
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080B9390
	adds r0, r4, #0
	adds r0, #0xce
	ldrb r0, [r0]
	cmp r0, #0x50
	bls _080B9370
	bl sub_80D11E4
	ldr r1, _080B9368 @ =0x0000FFFF
	ands r1, r0
	lsrs r1, r1, #9
	ldr r2, _080B936C @ =0x00000B6C
	b _080B93E8
	.align 2, 0
_080B9368: .4byte 0x0000FFFF
_080B936C: .4byte 0x00000B6C
_080B9370:
	bl sub_80D11E4
	ldr r1, _080B9388 @ =0x0000FFFF
	ands r1, r0
	lsrs r1, r1, #9
	ldr r5, _080B938C @ =0x00000B6D
	adds r0, r4, r5
	ldrb r0, [r0]
	cmp r1, r0
	bls _080B9416
	b _080B93F0
	.align 2, 0
_080B9388: .4byte 0x0000FFFF
_080B938C: .4byte 0x00000B6D
_080B9390:
	adds r0, r4, #0
	adds r0, #0xce
	ldrb r0, [r0]
	cmp r0, #0x50
	bls _080B93B8
	bl sub_80D11E4
	ldr r1, _080B93B0 @ =0x0000FFFF
	ands r1, r0
	lsrs r1, r1, #9
	ldr r2, _080B93B4 @ =0x00000B6E
	adds r0, r4, r2
	ldrb r0, [r0]
	cmp r1, r0
	bls _080B9416
	b _080B93F0
	.align 2, 0
_080B93B0: .4byte 0x0000FFFF
_080B93B4: .4byte 0x00000B6E
_080B93B8:
	bl sub_80D11E4
	ldr r1, _080B93C8 @ =0x0000FFFF
	ands r1, r0
	lsrs r1, r1, #9
	ldr r5, _080B93CC @ =0x00000B6F
	adds r0, r4, r5
	b _080B93EA
	.align 2, 0
_080B93C8: .4byte 0x0000FFFF
_080B93CC: .4byte 0x00000B6F
_080B93D0:
	adds r0, r4, #0
	adds r0, #0xce
	ldrb r0, [r0]
	cmp r0, #0x50
	bls _080B93FC
	bl sub_80D11E4
	ldr r1, _080B93F8 @ =0x0000FFFF
	ands r1, r0
	lsrs r1, r1, #9
	movs r2, #0xb7
	lsls r2, r2, #4
_080B93E8:
	adds r0, r4, r2
_080B93EA:
	ldrb r0, [r0]
	cmp r1, r0
	bhs _080B9416
_080B93F0:
	adds r0, r4, #0
	bl sub_80B9428
	b _080B9416
	.align 2, 0
_080B93F8: .4byte 0x0000FFFF
_080B93FC:
	bl sub_80D11E4
	ldr r1, _080B9420 @ =0x0000FFFF
	ands r1, r0
	lsrs r1, r1, #9
	ldr r5, _080B9424 @ =0x00000B71
	adds r0, r4, r5
	ldrb r0, [r0]
	cmp r1, r0
	bls _080B9416
	adds r0, r4, #0
	bl sub_80B9428
_080B9416:
	add sp, #0x10
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080B9420: .4byte 0x0000FFFF
_080B9424: .4byte 0x00000B71

	thumb_func_start sub_80B9428
sub_80B9428: @ 0x080B9428
	push {r4, lr}
	adds r1, r0, #0
	adds r0, #0xd8
	movs r3, #0
	movs r4, #1
	strb r4, [r0]
	adds r2, r1, #0
	adds r2, #0xac
	ldr r0, [r2]
	cmp r0, #1
	bhi _080B945A
	adds r0, r1, #0
	adds r0, #0xdc
	strb r3, [r0]
	subs r0, #0x14
	strb r3, [r0]
	adds r0, #0x11
	strb r4, [r0]
	movs r0, #5
	str r0, [r2]
	ldr r2, _080B9460 @ =0x0000070C
	adds r0, r1, r2
	movs r1, #0xcc
	bl sub_8008B6C
_080B945A:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080B9460: .4byte 0x0000070C

	thumb_func_start sub_80B9464
sub_80B9464: @ 0x080B9464
	push {lr}
	lsls r1, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r1, r1, #0x18
	subs r1, #0x78
	lsrs r2, r2, #0x18
	subs r2, #0x4c
	adds r0, r1, #0
	muls r0, r1, r0
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #3
	adds r1, r1, r0
	lsls r1, r1, #6
	adds r0, r2, #0
	muls r0, r2, r0
	adds r2, r0, #0
	lsls r0, r2, #3
	adds r0, r0, r2
	lsls r0, r0, #8
	adds r1, r1, r0
	movs r0, #0xe1
	lsls r0, r0, #0xe
	subs r2, r0, r1
	subs r1, r2, #1
	ldr r0, _080B94A4 @ =0x0002C6FE
	cmp r1, r0
	bhi _080B949E
	movs r2, #0
_080B949E:
	adds r0, r2, #0
	pop {r1}
	bx r1
	.align 2, 0
_080B94A4: .4byte 0x0002C6FE

	thumb_func_start sub_80B94A8
sub_80B94A8: @ 0x080B94A8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r1, [sp, #0x10]
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	mov r8, r2
	lsls r1, r1, #6
	mov sl, r1
	adds r6, r5, r1
	adds r1, r6, #0
	adds r1, #0x88
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	adds r1, #1
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r3, _080B95B4 @ =0x00000B5C
	adds r1, r5, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrb r1, [r1]
	cmp r0, r1
	bhs _080B95C0
	lsls r3, r2, #6
	adds r0, r5, #0
	adds r0, #0x6c
	adds r0, r0, r3
	ldr r0, [r0]
	cmp r0, #5
	beq _080B94F8
	b _080B9654
_080B94F8:
	adds r4, r5, r3
	adds r7, r4, #0
	adds r7, #0x8a
	str r7, [sp, #0x14]
	ldrh r1, [r7]
	adds r0, r4, #0
	adds r0, #0x8c
	str r0, [sp, #0x18]
	ldrh r2, [r0]
	adds r7, r5, #0
	adds r7, #0x74
	str r7, [sp, #0x1c]
	adds r0, r7, r3
	ldr r3, [r0]
	movs r0, #0x8a
	adds r0, r0, r6
	mov sb, r0
	ldrh r0, [r0]
	str r0, [sp]
	adds r7, r6, #0
	adds r7, #0x8c
	str r7, [sp, #0x24]
	ldrh r0, [r7]
	str r0, [sp, #4]
	ldr r0, _080B95B8 @ =0x00000B5D
	adds r0, r5, r0
	str r0, [sp, #0x20]
	ldrb r0, [r0]
	str r0, [sp, #8]
	ldr r7, _080B95BC @ =0x00000B72
	adds r7, r7, r5
	mov r8, r7
	ldrh r0, [r7]
	str r0, [sp, #0xc]
	adds r0, r5, #0
	bl sub_80B96AC
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080B954A
	b _080B9654
_080B954A:
	mov r0, sb
	ldrh r1, [r0]
	ldr r3, [sp, #0x24]
	ldrh r2, [r3]
	ldr r0, [sp, #0x1c]
	add r0, sl
	ldr r3, [r0]
	ldr r7, [sp, #0x14]
	ldrh r0, [r7]
	str r0, [sp]
	ldr r7, [sp, #0x18]
	ldrh r0, [r7]
	str r0, [sp, #4]
	ldr r7, [sp, #0x20]
	ldrb r0, [r7]
	str r0, [sp, #8]
	mov r7, r8
	ldrh r0, [r7]
	str r0, [sp, #0xc]
	adds r0, r5, #0
	bl sub_80B96AC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080B9654
	adds r0, r6, #0
	adds r0, #0x99
	movs r1, #0
	strb r1, [r0]
	adds r1, r6, #0
	adds r1, #0x9a
	movs r0, #1
	strb r0, [r1]
	adds r1, r4, #0
	adds r1, #0x99
	movs r2, #0
	strb r2, [r1]
	adds r1, #1
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0x9c
	strb r2, [r0]
	adds r0, r6, #0
	adds r0, #0x90
	strb r2, [r0]
	adds r0, r4, #0
	adds r0, #0x90
	strb r2, [r0]
	adds r0, r5, #0
	bl sub_80B9734
	b _080B969C
	.align 2, 0
_080B95B4: .4byte 0x00000B5C
_080B95B8: .4byte 0x00000B5D
_080B95BC: .4byte 0x00000B72
_080B95C0:
	adds r0, r6, #0
	adds r0, #0x8a
	ldrh r1, [r0]
	adds r0, #2
	ldrh r2, [r0]
	adds r0, r5, #0
	adds r0, #0x74
	add r0, sl
	ldr r3, [r0]
	mov r4, r8
	lsls r0, r4, #6
	adds r4, r5, r0
	adds r0, r4, #0
	adds r0, #0x8a
	ldrh r0, [r0]
	str r0, [sp]
	adds r0, r4, #0
	adds r0, #0x8c
	ldrh r0, [r0]
	str r0, [sp, #4]
	ldr r7, _080B964C @ =0x00000B5D
	adds r0, r5, r7
	ldrb r0, [r0]
	str r0, [sp, #8]
	adds r7, #0x15
	adds r0, r5, r7
	ldrh r0, [r0]
	str r0, [sp, #0xc]
	adds r0, r5, #0
	bl sub_80B96AC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080B9654
	adds r0, r5, #0
	ldr r1, [sp, #0x10]
	bl sub_80B97FC
	mov r1, r8
	lsls r0, r1, #2
	adds r0, r0, r5
	ldr r2, _080B9650 @ =0x0000091C
	adds r0, r0, r2
	ldr r0, [r0]
	movs r1, #2
	bl sub_805E860
	adds r0, r4, #0
	adds r0, #0xab
	movs r1, #1
	strb r1, [r0]
	adds r0, r6, #0
	adds r0, #0x9b
	strb r1, [r0]
	subs r0, #2
	movs r3, #0
	strb r3, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x99
	strb r3, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #2
	strb r3, [r0]
	subs r0, #0xc
	strb r3, [r0]
	b _080B969C
	.align 2, 0
_080B964C: .4byte 0x00000B5D
_080B9650: .4byte 0x0000091C
_080B9654:
	ldr r4, [sp, #0x10]
	lsls r0, r4, #6
	adds r6, r5, r0
	adds r1, r6, #0
	adds r1, #0x89
	ldrb r0, [r1]
	cmp r0, #1
	bls _080B9668
	movs r0, #0
	strb r0, [r1]
_080B9668:
	adds r1, r6, #0
	adds r1, #0x88
	ldrb r0, [r1]
	cmp r0, #0x3b
	bls _080B969C
	movs r4, #0
	strb r4, [r1]
	adds r0, r5, #0
	ldr r1, [sp, #0x10]
	bl sub_80B9828
	adds r0, r6, #0
	adds r0, #0x9b
	strb r4, [r0]
	subs r0, #2
	strb r4, [r0]
	adds r1, r6, #0
	adds r1, #0x9a
	movs r0, #1
	strb r0, [r1]
	movs r7, #0xe2
	lsls r7, r7, #3
	adds r0, r5, r7
	movs r1, #0xb5
	bl sub_8008B6C
_080B969C:
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80B96AC
sub_80B96AC: @ 0x080B96AC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	mov r8, r3
	ldr r3, [sp, #0x18]
	ldr r4, [sp, #0x1c]
	ldr r5, [sp, #0x20]
	ldr r0, [sp, #0x24]
	lsls r1, r1, #0x10
	lsls r2, r2, #0x10
	lsls r3, r3, #0x10
	lsls r4, r4, #0x10
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	adds r7, r6, #0
	lsrs r3, r3, #0x18
	lsrs r1, r1, #0x18
	subs r3, r3, r1
	lsrs r2, r2, #0x18
	lsrs r4, r4, #0x18
	subs r2, r2, r4
	adds r0, r3, #0
	muls r0, r3, r0
	adds r1, r2, #0
	muls r1, r2, r1
	adds r0, r0, r1
	adds r1, r5, #0
	muls r1, r5, r1
	cmp r0, r1
	bgt _080B9726
	adds r0, r3, #0
	adds r1, r2, #0
	bl sub_80D3748
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	mov r0, r8
	cmp r0, #1
	bne _080B970A
	cmp r1, r6
	blo _080B9722
	movs r0, #0x80
	lsls r0, r0, #9
	subs r0, r0, r6
	b _080B971E
_080B970A:
	mov r3, r8
	cmp r3, #3
	bne _080B9712
	movs r3, #1
_080B9712:
	adds r3, #1
	lsls r3, r3, #0xe
	adds r0, r7, r3
	cmp r1, r0
	bge _080B9726
	subs r0, r3, r7
_080B971E:
	cmp r1, r0
	ble _080B9726
_080B9722:
	movs r0, #1
	b _080B9728
_080B9726:
	movs r0, #0
_080B9728:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80B9734
sub_80B9734: @ 0x080B9734
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r4, #0x64
	bl sub_80D11E4
	ldr r1, _080B9780 @ =0x0000FFFF
	ands r1, r0
	adds r0, r1, #0
	muls r0, r4, r0
	lsrs r2, r0, #0x10
	adds r0, r5, #0
	adds r0, #0x8e
	adds r1, r5, #0
	adds r1, #0xce
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	bls _080B9784
	cmp r2, #0x59
	bhi _080B97AC
	adds r4, r5, #0
	adds r4, #0x80
	movs r0, #3
	str r0, [r4]
	movs r1, #0x92
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r0, [r0]
	movs r1, #2
	bl sub_805E860
	adds r1, r5, #0
	adds r1, #0xeb
	movs r0, #1
	strb r0, [r1]
	subs r1, #0x2b
	movs r0, #5
	b _080B97CC
	.align 2, 0
_080B9780: .4byte 0x0000FFFF
_080B9784:
	cmp r2, #0x59
	bls _080B97AC
	adds r4, r5, #0
	adds r4, #0x80
	movs r0, #3
	str r0, [r4]
	movs r1, #0x92
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r0, [r0]
	movs r1, #2
	bl sub_805E860
	adds r1, r5, #0
	adds r1, #0xeb
	movs r0, #1
	strb r0, [r1]
	subs r1, #0x2b
	movs r0, #5
	b _080B97CC
_080B97AC:
	adds r4, r5, #0
	adds r4, #0x80
	movs r0, #5
	str r0, [r4]
	ldr r1, _080B97E4 @ =0x0000091C
	adds r0, r5, r1
	ldr r0, [r0]
	movs r1, #2
	bl sub_805E860
	adds r1, r5, #0
	adds r1, #0xab
	movs r0, #1
	strb r0, [r1]
	adds r1, #0x15
	movs r0, #3
_080B97CC:
	str r0, [r1]
	movs r6, #0
	movs r3, #1
	adds r1, r5, #0
	adds r1, #0x9b
	movs r2, #1
_080B97D8:
	ldr r0, [r4]
	cmp r0, #5
	bne _080B97E8
	strb r6, [r1]
	b _080B97EA
	.align 2, 0
_080B97E4: .4byte 0x0000091C
_080B97E8:
	strb r3, [r1]
_080B97EA:
	adds r1, #0x40
	adds r4, #0x40
	subs r2, #1
	cmp r2, #0
	bge _080B97D8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80B97FC
sub_80B97FC: @ 0x080B97FC
	push {lr}
	adds r2, r0, #0
	lsls r1, r1, #0x18
	cmp r1, #0
	beq _080B9814
	adds r1, r2, #0
	adds r1, #0x80
	movs r0, #4
	str r0, [r1]
	adds r1, #0x40
	movs r0, #2
	b _080B9820
_080B9814:
	adds r1, r2, #0
	adds r1, #0x80
	movs r0, #2
	str r0, [r1]
	adds r1, #0x40
	movs r0, #4
_080B9820:
	str r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80B9828
sub_80B9828: @ 0x080B9828
	push {lr}
	lsls r1, r1, #0x18
	cmp r1, #0
	beq _080B9836
	adds r1, r0, #0
	adds r1, #0xc0
	b _080B983A
_080B9836:
	adds r1, r0, #0
	adds r1, #0x80
_080B983A:
	movs r0, #1
	str r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80B9844
sub_80B9844: @ 0x080B9844
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	lsls r1, r1, #0x18
	lsrs r0, r1, #0x18
	movs r2, #0x80
	lsls r2, r2, #0x11
	adds r1, r1, r2
	lsrs r6, r1, #0x18
	cmp r6, #1
	bls _080B985E
	movs r6, #0
_080B985E:
	lsls r1, r0, #6
	adds r0, r4, r1
	adds r2, r0, #0
	adds r2, #0x88
	ldrb r3, [r2]
	subs r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r5, r1, #0
	cmp r0, #0x3a
	bhi _080B98A0
	adds r0, r4, #0
	adds r0, #0x6c
	adds r0, r0, r5
	ldr r0, [r0]
	cmp r0, #5
	bne _080B98A0
	adds r0, r3, #1
	strb r0, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x3b
	bhi _080B988E
	b _080B9AAE
_080B988E:
	movs r0, #0
	strb r0, [r2]
	movs r6, #0xe2
	lsls r6, r6, #3
	adds r0, r4, r6
	movs r1, #0xb5
	bl sub_8008B6C
	b _080B9AAE
_080B98A0:
	adds r1, r4, #0
	adds r1, #0x80
	adds r0, r1, r5
	ldr r0, [r0]
	adds r7, r1, #0
	cmp r0, #5
	bls _080B98B0
	b _080B9AA4
_080B98B0:
	lsls r0, r0, #2
	ldr r1, _080B98BC @ =_080B98C0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080B98BC: .4byte _080B98C0
_080B98C0: @ jump table
	.4byte _080B98D8 @ case 0
	.4byte _080B98EA @ case 1
	.4byte _080B990C @ case 2
	.4byte _080B9930 @ case 3
	.4byte _080B9970 @ case 4
	.4byte _080B9A18 @ case 5
_080B98D8:
	adds r1, r4, r5
	adds r2, r1, #0
	adds r2, #0x9c
	movs r3, #0
	movs r0, #1
	strb r0, [r2]
	adds r1, #0x9a
	strb r3, [r1]
	b _080B9AA4
_080B98EA:
	adds r3, r4, r5
	adds r2, r3, #0
	adds r2, #0x90
	ldr r0, _080B9904 @ =0x00000B75
	adds r1, r4, r0
	ldrb r0, [r2]
	ldrb r1, [r1]
	cmp r0, r1
	bhs _080B9908
	movs r1, #0xb6
	lsls r1, r1, #4
	b _080B9A52
	.align 2, 0
_080B9904: .4byte 0x00000B75
_080B9908:
	movs r1, #0
	b _080B9A78
_080B990C:
	adds r3, r4, r5
	adds r2, r3, #0
	adds r2, #0x90
	ldrb r1, [r2]
	ldr r6, _080B9924 @ =0x00000B74
	adds r0, r4, r6
	ldrb r0, [r0]
	subs r0, #0x3c
	cmp r1, r0
	bge _080B992C
	ldr r1, _080B9928 @ =0x00000B62
	b _080B9A52
	.align 2, 0
_080B9924: .4byte 0x00000B74
_080B9928: .4byte 0x00000B62
_080B992C:
	movs r1, #0
	b _080B9A78
_080B9930:
	adds r3, r4, r5
	adds r2, r3, #0
	adds r2, #0x90
	ldrb r1, [r2]
	cmp r1, #0x3b
	bhi _080B9954
	adds r0, r4, #0
	adds r0, #0x6c
	adds r0, r0, r5
	movs r1, #5
	str r1, [r0]
	adds r1, r3, #0
	adds r1, #0x88
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x3c
	strb r0, [r2]
	b _080B9AA4
_080B9954:
	ldr r6, _080B9964 @ =0x00000B76
	adds r0, r4, r6
	ldrb r0, [r0]
	cmp r1, r0
	bhs _080B996C
	ldr r1, _080B9968 @ =0x00000B64
	b _080B9A52
	.align 2, 0
_080B9964: .4byte 0x00000B76
_080B9968: .4byte 0x00000B64
_080B996C:
	movs r1, #0
	b _080B9A78
_080B9970:
	adds r3, r4, r5
	movs r0, #0x90
	adds r0, r0, r3
	mov r8, r0
	ldrb r1, [r0]
	cmp r1, #0x3b
	bhi _080B99C0
	adds r6, r4, #0
	adds r6, #0x6c
	cmp r1, #0
	bne _080B99B0
	adds r2, r6, r5
	ldr r0, [r2]
	cmp r0, #1
	bhi _080B999A
	ldr r1, _080B99B8 @ =0x00000B66
	adds r0, r4, r1
	ldrh r0, [r0]
	adds r1, r3, #0
	adds r1, #0x8f
	strb r0, [r1]
_080B999A:
	ldr r0, [r2]
	cmp r0, #2
	beq _080B99A4
	cmp r0, #4
	bne _080B99B0
_080B99A4:
	ldr r2, _080B99BC @ =0x00000B64
	adds r0, r4, r2
	ldrh r1, [r0]
	adds r0, r3, #0
	adds r0, #0x8f
	strb r1, [r0]
_080B99B0:
	adds r1, r6, r5
	movs r0, #3
	str r0, [r1]
	b _080B9AA4
	.align 2, 0
_080B99B8: .4byte 0x00000B66
_080B99BC: .4byte 0x00000B64
_080B99C0:
	ldr r0, _080B99DC @ =0x00000B74
	ldrb r2, [r0, r4]
	cmp r1, r2
	bhs _080B99E0
	cmp r1, #0x3c
	bne _080B9A5C
	adds r0, r4, #0
	adds r0, #0x74
	adds r2, r0, r5
	lsls r1, r6, #6
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [r2]
	b _080B9A5C
	.align 2, 0
_080B99DC: .4byte 0x00000B74
_080B99E0:
	adds r0, r3, #0
	adds r0, #0xab
	movs r1, #0
	strb r1, [r0]
	mov r6, r8
	strb r1, [r6]
	adds r0, r7, r5
	str r1, [r0]
	adds r2, r3, #0
	adds r2, #0x9c
	movs r0, #1
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x9a
	strb r1, [r0]
	ldr r1, _080B9A10 @ =0x00000B5E
	adds r0, r4, r1
	ldrb r0, [r0]
	adds r1, r3, #0
	adds r1, #0x8f
	strb r0, [r1]
	ldr r2, _080B9A14 @ =0x00000B59
	adds r0, r4, r2
	b _080B9A9C
	.align 2, 0
_080B9A10: .4byte 0x00000B5E
_080B9A14: .4byte 0x00000B59
_080B9A18:
	adds r3, r4, r5
	adds r2, r3, #0
	adds r2, #0x90
	ldrb r0, [r2]
	cmp r0, #0x1d
	bhi _080B9A30
	adds r0, r4, #0
	adds r0, #0x6c
	adds r0, r0, r5
	movs r1, #3
	str r1, [r0]
	b _080B9AA4
_080B9A30:
	ldrb r1, [r2]
	ldr r0, _080B9A68 @ =0x00000B77
	ldrb r0, [r0, r4]
	mov r8, r0
	subs r0, #0x3c
	cmp r1, r0
	bge _080B9A70
	cmp r1, #0x1e
	bne _080B9A50
	adds r0, r4, #0
	adds r0, #0x74
	adds r2, r0, r5
	lsls r1, r6, #6
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [r2]
_080B9A50:
	ldr r1, _080B9A6C @ =0x00000B68
_080B9A52:
	adds r0, r4, r1
	ldrh r1, [r0]
	adds r0, r3, #0
	adds r0, #0x8f
	strb r1, [r0]
_080B9A5C:
	adds r0, r4, #0
	adds r0, #0x6c
	adds r0, r0, r5
	movs r1, #1
	str r1, [r0]
	b _080B9AA4
	.align 2, 0
_080B9A68: .4byte 0x00000B77
_080B9A6C: .4byte 0x00000B68
_080B9A70:
	adds r0, r3, #0
	adds r0, #0xab
	movs r1, #0
	strb r1, [r0]
_080B9A78:
	strb r1, [r2]
	adds r0, r7, r5
	str r1, [r0]
	adds r2, r3, #0
	adds r2, #0x9c
	movs r0, #1
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x9a
	strb r1, [r0]
	ldr r2, _080B9AB8 @ =0x00000B5E
	adds r0, r4, r2
	ldrb r0, [r0]
	adds r1, r3, #0
	adds r1, #0x8f
	strb r0, [r1]
	ldr r6, _080B9ABC @ =0x00000B59
	adds r0, r4, r6
_080B9A9C:
	ldrb r0, [r0]
	adds r0, #1
	adds r1, #2
	strb r0, [r1]
_080B9AA4:
	adds r1, r4, r5
	adds r1, #0x90
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_080B9AAE:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B9AB8: .4byte 0x00000B5E
_080B9ABC: .4byte 0x00000B59

	thumb_func_start sub_80B9AC0
sub_80B9AC0: @ 0x080B9AC0
	push {r4, r5, lr}
	adds r4, r0, #0
	movs r5, #0
_080B9AC6:
	lsls r1, r5, #6
	adds r0, r4, #0
	adds r0, #0x6c
	adds r0, r0, r1
	ldr r0, [r0]
	adds r2, r1, #0
	cmp r0, #5
	bhi _080B9B42
	lsls r0, r0, #2
	ldr r1, _080B9AE0 @ =_080B9AE4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080B9AE0: .4byte _080B9AE4
_080B9AE4: @ jump table
	.4byte _080B9B20 @ case 0
	.4byte _080B9AFC @ case 1
	.4byte _080B9B08 @ case 2
	.4byte _080B9B2C @ case 3
	.4byte _080B9B14 @ case 4
	.4byte _080B9B38 @ case 5
_080B9AFC:
	adds r0, r2, #0
	adds r0, #0x6c
	adds r0, r4, r0
	bl sub_80BA1A4
	b _080B9B42
_080B9B08:
	adds r0, r2, #0
	adds r0, #0x6c
	adds r0, r4, r0
	bl sub_80BA1F4
	b _080B9B42
_080B9B14:
	adds r0, r2, #0
	adds r0, #0x6c
	adds r0, r4, r0
	bl sub_80BA1F8
	b _080B9B42
_080B9B20:
	adds r0, r2, #0
	adds r0, #0x6c
	adds r0, r4, r0
	bl sub_80BA1FC
	b _080B9B42
_080B9B2C:
	adds r0, r2, #0
	adds r0, #0x6c
	adds r0, r4, r0
	bl sub_80BA200
	b _080B9B42
_080B9B38:
	adds r0, r2, #0
	adds r0, #0x6c
	adds r0, r4, r0
	bl sub_80BA204
_080B9B42:
	adds r5, #1
	cmp r5, #1
	bls _080B9AC6
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80B9B50
sub_80B9B50: @ 0x080B9B50
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	mov r8, r0
	lsls r1, r1, #0x18
	lsrs r0, r1, #0x18
	str r0, [sp, #0x10]
	movs r2, #0x80
	lsls r2, r2, #0x11
	adds r1, r1, r2
	lsrs r1, r1, #0x18
	str r1, [sp, #0x14]
	cmp r1, #1
	bls _080B9B7C
	adds r0, r1, #0
	subs r0, #2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x14]
_080B9B7C:
	ldr r3, [sp, #0x10]
	lsls r4, r3, #6
	mov r5, r8
	adds r5, #0x74
	adds r6, r5, r4
	ldr r7, [r6]
	bl sub_80D11E4
	ldr r1, _080B9BE8 @ =0x0000FFFF
	mov sb, r1
	ands r0, r1
	lsrs r0, r0, #8
	mov ip, r0
	mov r2, r8
	adds r3, r2, r4
	adds r2, r3, #0
	adds r2, #0x93
	ldrb r1, [r2]
	ldr r0, _080B9BEC @ =0x00000B5B
	add r0, r8
	ldrb r0, [r0]
	subs r0, #1
	mov sl, r4
	cmp r1, r0
	bgt _080B9BB0
	b _080B9CDA
_080B9BB0:
	movs r0, #0
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x8e
	ldrb r0, [r0]
	cmp ip, r0
	bgt _080B9C32
	movs r4, #0x64
	bl sub_80D11E4
	mov r3, sb
	ands r0, r3
	muls r0, r4, r0
	lsrs r4, r0, #0x10
	mov r0, r8
	ldr r1, [sp, #0x10]
	ldr r2, [sp, #0x14]
	bl sub_80B9F64
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	beq _080B9C04
	cmp r0, #1
	bgt _080B9BF0
	cmp r0, #0
	beq _080B9BFA
	b _080B9CDA
	.align 2, 0
_080B9BE8: .4byte 0x0000FFFF
_080B9BEC: .4byte 0x00000B5B
_080B9BF0:
	cmp r0, #2
	beq _080B9C12
	cmp r0, #3
	beq _080B9C24
	b _080B9CDA
_080B9BFA:
	adds r0, r4, #0
	subs r0, #0x5a
	cmp r0, #4
	bls _080B9CC8
	b _080B9CCE
_080B9C04:
	adds r0, r4, #0
	subs r0, #0x5f
	cmp r0, #4
	bls _080B9CBA
	cmp r4, #0x59
	bgt _080B9CDA
	b _080B9CD6
_080B9C12:
	adds r0, r4, #0
	subs r0, #0x5a
	cmp r0, #4
	bls _080B9CC8
	adds r0, r4, #0
	subs r0, #0x5f
	cmp r0, #4
	bls _080B9CD6
	b _080B9CBA
_080B9C24:
	adds r0, r4, #0
	subs r0, #0x5f
	cmp r0, #4
	bls _080B9CBA
	cmp r4, #0x59
	bgt _080B9CDA
	b _080B9CC8
_080B9C32:
	movs r4, #0x64
	bl sub_80D11E4
	mov r1, sb
	ands r0, r1
	muls r0, r4, r0
	lsrs r4, r0, #0x10
	mov r0, r8
	ldr r1, [sp, #0x10]
	ldr r2, [sp, #0x14]
	bl sub_80B9F64
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	beq _080B9C80
	cmp r0, #1
	bgt _080B9C5C
	cmp r0, #0
	beq _080B9C66
	b _080B9CDA
_080B9C5C:
	cmp r0, #2
	beq _080B9C9A
	cmp r0, #3
	beq _080B9CB2
	b _080B9CDA
_080B9C66:
	adds r0, r4, #0
	subs r0, #0x4b
	cmp r0, #4
	bls _080B9CBA
	adds r0, r4, #0
	subs r0, #0x50
	cmp r0, #9
	bls _080B9CC8
	adds r0, r4, #0
	subs r0, #0x5a
	cmp r0, #9
	bhi _080B9CDA
	b _080B9CD6
_080B9C80:
	adds r0, r4, #0
	subs r0, #0xa
	cmp r0, #9
	bls _080B9CBA
	adds r0, r4, #0
	subs r0, #0x14
	cmp r0, #4
	bls _080B9CC8
	adds r0, r4, #0
	subs r0, #0x19
	cmp r0, #0x4a
	bhi _080B9CDA
	b _080B9CD6
_080B9C9A:
	subs r0, r4, #5
	cmp r0, #0x4a
	bls _080B9CBA
	adds r0, r4, #0
	subs r0, #0x50
	cmp r0, #9
	bls _080B9CC8
	adds r0, r4, #0
	subs r0, #0x5a
	cmp r0, #9
	bhi _080B9CDA
	b _080B9CD6
_080B9CB2:
	adds r0, r4, #0
	subs r0, #0xa
	cmp r0, #9
	bhi _080B9CC0
_080B9CBA:
	ldr r0, [r6]
	adds r7, r0, #2
	b _080B9CDA
_080B9CC0:
	adds r0, r4, #0
	subs r0, #0x14
	cmp r0, #0x4a
	bhi _080B9CCE
_080B9CC8:
	ldr r0, [r6]
	adds r7, r0, #3
	b _080B9CDA
_080B9CCE:
	adds r0, r4, #0
	subs r0, #0x5f
	cmp r0, #4
	bhi _080B9CDA
_080B9CD6:
	ldr r0, [r6]
	adds r7, r0, #1
_080B9CDA:
	cmp r7, #3
	ble _080B9CE0
	subs r7, #4
_080B9CE0:
	mov r2, sl
	adds r3, r5, r2
	str r7, [r3]
	mov r6, r8
	add r6, sl
	adds r1, r6, #0
	adds r1, #0x94
	ldrb r0, [r1]
	cmp r0, #1
	bhi _080B9CF6
	b _080B9DF6
_080B9CF6:
	movs r7, #0
	strb r7, [r1]
	adds r0, r6, #0
	adds r0, #0x8a
	ldrh r1, [r0]
	adds r0, #2
	ldrh r2, [r0]
	ldr r3, [r3]
	ldr r4, [sp, #0x14]
	lsls r0, r4, #6
	add r0, r8
	adds r4, r0, #0
	adds r4, #0x8a
	ldrh r4, [r4]
	str r4, [sp]
	adds r0, #0x8c
	ldrh r0, [r0]
	str r0, [sp, #4]
	movs r0, #0x10
	str r0, [sp, #8]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [sp, #0xc]
	mov r0, r8
	bl sub_80B96AC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080B9DB2
	adds r0, r6, #0
	adds r0, #0x8e
	ldrb r0, [r0]
	cmp r0, #0xef
	bls _080B9DA8
	bl sub_80D11E4
	ldr r1, _080B9D70 @ =0x0000FFFF
	ands r1, r0
	lsrs r1, r1, #9
	cmp r1, #0x78
	bls _080B9DA8
	ldr r0, [sp, #0x10]
	cmp r0, #0
	bne _080B9D74
	mov r1, r8
	ldr r0, [r1, #0x6c]
	cmp r0, #1
	bhi _080B9DF6
	mov r0, r8
	adds r0, #0x9c
	strb r7, [r0]
	subs r0, #0x14
	strb r7, [r0]
	adds r1, #0x99
	movs r0, #1
	strb r0, [r1]
	movs r0, #5
	mov r2, r8
	str r0, [r2, #0x6c]
	b _080B9D96
	.align 2, 0
_080B9D70: .4byte 0x0000FFFF
_080B9D74:
	ldr r3, [sp, #0x10]
	cmp r3, #1
	bne _080B9DF6
	mov r1, r8
	adds r1, #0xac
	ldr r0, [r1]
	cmp r0, #1
	bhi _080B9DF6
	mov r0, r8
	adds r0, #0xdc
	strb r7, [r0]
	subs r0, #0x14
	strb r7, [r0]
	adds r0, #0x11
	strb r3, [r0]
	movs r0, #5
	str r0, [r1]
_080B9D96:
	ldr r0, _080B9DA4 @ =0x0000070C
	add r0, r8
	movs r1, #0xcc
	bl sub_8008B6C
	b _080B9DF6
	.align 2, 0
_080B9DA4: .4byte 0x0000070C
_080B9DA8:
	mov r0, r8
	adds r0, #0x6c
	add r0, sl
	str r7, [r0]
	b _080B9DF6
_080B9DB2:
	mov r0, r8
	adds r0, #0x84
	add r0, sl
	ldr r4, [r0]
	cmp r4, #0
	bne _080B9DEC
	bl sub_80D11E4
	ldr r5, _080B9DE8 @ =0x0000FFFF
	ands r0, r5
	lsrs r0, r0, #9
	adds r1, r6, #0
	adds r1, #0x8e
	ldrb r1, [r1]
	cmp r0, r1
	blo _080B9DDE
	bl sub_80D11E4
	ands r0, r5
	lsrs r0, r0, #9
	cmp r0, #0x6e
	bhi _080B9DEC
_080B9DDE:
	mov r0, r8
	adds r0, #0x6c
	add r0, sl
	str r4, [r0]
	b _080B9DF6
	.align 2, 0
_080B9DE8: .4byte 0x0000FFFF
_080B9DEC:
	mov r0, r8
	adds r0, #0x6c
	add r0, sl
	movs r1, #1
	str r1, [r0]
_080B9DF6:
	mov r1, r8
	add r1, sl
	adds r2, r1, #0
	adds r2, #0x94
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	adds r1, #0x93
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80B9E1C
sub_80B9E1C: @ 0x080B9E1C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	mov sb, r0
	lsls r1, r1, #0x18
	lsrs r0, r1, #0x18
	str r0, [sp]
	movs r2, #0x80
	lsls r2, r2, #0x11
	adds r1, r1, r2
	lsrs r1, r1, #0x18
	mov r8, r1
	cmp r1, #1
	bls _080B9E42
	movs r0, #0
	mov r8, r0
_080B9E42:
	ldr r1, [sp]
	lsls r4, r1, #6
	mov r5, sb
	adds r5, #0x74
	adds r0, r5, r4
	ldr r6, [r0]
	bl sub_80D11E4
	ldr r2, _080B9E90 @ =0x0000FFFF
	mov sl, r2
	ands r0, r2
	lsrs r0, r0, #8
	mov r2, sb
	adds r1, r2, r4
	adds r1, #0x8e
	adds r7, r4, #0
	ldrb r1, [r1]
	cmp r0, r1
	bhs _080B9EE6
	bl sub_80D11E4
	mov r1, sl
	ands r0, r1
	lsrs r4, r0, #0xf
	mov r0, sb
	ldr r1, [sp]
	mov r2, r8
	bl sub_80B9F64
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #7
	bhi _080B9EE6
	lsls r0, r0, #2
	ldr r1, _080B9E94 @ =_080B9E98
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080B9E90: .4byte 0x0000FFFF
_080B9E94: .4byte _080B9E98
_080B9E98: @ jump table
	.4byte _080B9EB8 @ case 0
	.4byte _080B9EC8 @ case 1
	.4byte _080B9ED4 @ case 2
	.4byte _080B9EE0 @ case 3
	.4byte _080B9EBE @ case 4
	.4byte _080B9EC4 @ case 5
	.4byte _080B9ED0 @ case 6
	.4byte _080B9EDC @ case 7
_080B9EB8:
	adds r0, r5, r7
	ldr r6, [r0]
	b _080B9EE6
_080B9EBE:
	cmp r4, #0
	ble _080B9EE6
	b _080B9EC8
_080B9EC4:
	cmp r4, #0
	ble _080B9ED4
_080B9EC8:
	adds r0, r5, r7
	ldr r0, [r0]
	adds r6, r0, #1
	b _080B9EE6
_080B9ED0:
	cmp r4, #0
	bgt _080B9EE0
_080B9ED4:
	adds r0, r5, r7
	ldr r0, [r0]
	adds r6, r0, #2
	b _080B9EE6
_080B9EDC:
	cmp r4, #0
	ble _080B9EE6
_080B9EE0:
	adds r0, r5, r7
	ldr r0, [r0]
	adds r6, r0, #3
_080B9EE6:
	cmp r6, #3
	ble _080B9EEC
	subs r6, #4
_080B9EEC:
	adds r0, r5, r7
	str r6, [r0]
	mov r0, sb
	adds r0, #0x6c
	adds r0, r0, r7
	movs r1, #0
	str r1, [r0]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80B9F0C
sub_80B9F0C: @ 0x080B9F0C
	push {r4, r5, lr}
	adds r4, r0, #0
	lsls r5, r1, #0x18
	lsrs r5, r5, #0x12
	adds r0, #0x6c
	adds r0, r0, r5
	movs r1, #2
	str r1, [r0]
	bl sub_80D11E4
	ldr r1, _080B9F34 @ =0x0000FFFF
	ands r1, r0
	lsrs r1, r1, #0xe
	adds r4, #0x74
	adds r4, r4, r5
	str r1, [r4]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080B9F34: .4byte 0x0000FFFF

	thumb_func_start sub_80B9F38
sub_80B9F38: @ 0x080B9F38
	push {r4, r5, lr}
	adds r4, r0, #0
	lsls r5, r1, #0x18
	lsrs r5, r5, #0x12
	adds r0, #0x6c
	adds r0, r0, r5
	movs r1, #4
	str r1, [r0]
	bl sub_80D11E4
	ldr r1, _080B9F60 @ =0x0000FFFF
	ands r1, r0
	lsrs r1, r1, #0xe
	adds r4, #0x74
	adds r4, r4, r5
	str r1, [r4]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080B9F60: .4byte 0x0000FFFF

	thumb_func_start sub_80B9F64
sub_80B9F64: @ 0x080B9F64
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	lsls r2, r2, #0x18
	movs r6, #0
	lsrs r2, r2, #0x12
	adds r2, r5, r2
	adds r0, r2, #0
	adds r0, #0x8a
	ldrh r3, [r0]
	lsls r0, r4, #6
	adds r0, r5, r0
	adds r1, r0, #0
	adds r1, #0x8a
	ldrh r1, [r1]
	subs r3, r3, r1
	adds r0, #0x8c
	ldrh r1, [r0]
	adds r2, #0x8c
	ldrh r0, [r2]
	subs r1, r1, r0
	cmp r3, #0
	ble _080B9F9C
	cmp r1, #0
	ble _080B9F9C
	cmp r1, r3
	bgt _080B9FB0
_080B9F9C:
	cmp r3, #0
	bge _080B9FA8
	cmp r1, #0
	ble _080B9FBE
	cmn r1, r3
	bgt _080B9FB0
_080B9FA8:
	cmp r1, #0
	ble _080B9FBE
	cmp r3, #0
	bne _080B9FBE
_080B9FB0:
	lsls r1, r4, #6
	adds r0, r5, #0
	adds r0, #0x74
	adds r0, r0, r1
	ldr r1, [r0]
	movs r0, #4
	b _080BA09A
_080B9FBE:
	cmp r3, #0
	ble _080B9FEC
	cmp r1, #0
	ble _080B9FCA
	cmp r3, r1
	bgt _080B9FD6
_080B9FCA:
	cmp r1, #0
	bge _080B9FD2
	cmn r3, r1
	bgt _080B9FD6
_080B9FD2:
	cmp r1, #0
	bne _080B9FE4
_080B9FD6:
	lsls r1, r4, #6
	adds r0, r5, #0
	adds r0, #0x74
	adds r0, r0, r1
	ldr r1, [r0]
	movs r0, #5
	b _080BA09A
_080B9FE4:
	cmp r1, #0
	bge _080B9FEC
	cmn r3, r1
	blt _080BA000
_080B9FEC:
	cmp r3, #0
	bge _080B9FF8
	cmp r1, #0
	bge _080BA00E
	cmp r3, r1
	bgt _080BA000
_080B9FF8:
	cmp r1, #0
	bge _080BA00E
	cmp r3, #0
	bne _080BA00E
_080BA000:
	lsls r1, r4, #6
	adds r0, r5, #0
	adds r0, #0x74
	adds r0, r0, r1
	ldr r1, [r0]
	movs r0, #6
	b _080BA09A
_080BA00E:
	cmp r3, #0
	bge _080BA034
	cmp r1, #0
	bge _080BA01A
	cmp r3, r1
	blt _080BA026
_080BA01A:
	cmp r1, #0
	ble _080BA022
	cmn r3, r1
	blt _080BA026
_080BA022:
	cmp r1, #0
	bne _080BA034
_080BA026:
	lsls r1, r4, #6
	adds r0, r5, #0
	adds r0, #0x74
	adds r0, r0, r1
	ldr r1, [r0]
	movs r0, #7
	b _080BA09A
_080BA034:
	cmp r3, #0
	ble _080BA068
	cmp r1, #0
	ble _080BA04E
	cmp r3, r1
	bne _080BA04E
	lsls r1, r4, #6
	adds r0, r5, #0
	adds r0, #0x74
	adds r0, r0, r1
	ldr r1, [r0]
	movs r0, #0xc
	b _080BA09A
_080BA04E:
	cmp r3, #0
	ble _080BA068
	cmp r1, #0
	bge _080BA068
	cmn r3, r1
	bne _080BA068
	lsls r1, r4, #6
	adds r0, r5, #0
	adds r0, #0x74
	adds r0, r0, r1
	ldr r1, [r0]
	movs r0, #0xd
	b _080BA09A
_080BA068:
	cmp r3, #0
	bge _080BA0A0
	cmp r1, #0
	bge _080BA082
	cmp r3, r1
	bne _080BA082
	lsls r1, r4, #6
	adds r0, r5, #0
	adds r0, #0x74
	adds r0, r0, r1
	ldr r1, [r0]
	movs r0, #0xe
	b _080BA09A
_080BA082:
	cmp r3, #0
	bge _080BA0A0
	cmp r1, #0
	ble _080BA0A0
	cmn r3, r1
	bne _080BA0A0
	lsls r1, r4, #6
	adds r0, r5, #0
	adds r0, #0x74
	adds r0, r0, r1
	ldr r1, [r0]
	movs r0, #0xf
_080BA09A:
	subs r0, r0, r1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
_080BA0A0:
	subs r0, r6, #4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #7
	bhi _080BA0AE
	adds r6, r0, #0
	b _080BA0BA
_080BA0AE:
	cmp r6, #0xb
	bls _080BA0BA
	adds r0, r6, #0
	subs r0, #8
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
_080BA0BA:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80BA0C4
sub_80BA0C4: @ 0x080BA0C4
	push {r4, r5, lr}
	adds r5, r0, #0
	movs r4, #0x64
	bl sub_80D11E4
	ldr r1, _080BA0F8 @ =0x0000FFFF
	ands r1, r0
	adds r0, r1, #0
	muls r0, r4, r0
	lsrs r1, r0, #0x10
	adds r0, r5, #0
	adds r0, #0x22
	ldrb r0, [r0]
	adds r2, r0, #0
	cmp r2, #0x50
	bhi _080BA120
	adds r0, r5, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	cmp r0, #0
	beq _080BA10C
	cmp r1, #0x1d
	bhi _080BA0FC
	movs r0, #0
	b _080BA19C
	.align 2, 0
_080BA0F8: .4byte 0x0000FFFF
_080BA0FC:
	cmp r1, #0x2c
	bhi _080BA104
	movs r0, #1
	b _080BA19C
_080BA104:
	cmp r1, #0x3b
	bhi _080BA19A
	movs r0, #2
	b _080BA19C
_080BA10C:
	cmp r1, #0x22
	bls _080BA19C
	cmp r1, #0x36
	bhi _080BA118
	movs r0, #1
	b _080BA19C
_080BA118:
	cmp r1, #0x4a
	bhi _080BA19A
	movs r0, #2
	b _080BA19C
_080BA120:
	subs r0, #0x51
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x9f
	bhi _080BA160
	adds r0, r5, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	cmp r0, #0
	beq _080BA14C
	cmp r1, #0x22
	bhi _080BA13C
	movs r0, #0
	b _080BA19C
_080BA13C:
	cmp r1, #0x2c
	bhi _080BA144
	movs r0, #1
	b _080BA19C
_080BA144:
	cmp r1, #0x36
	bhi _080BA19A
	movs r0, #2
	b _080BA19C
_080BA14C:
	cmp r1, #0x27
	bls _080BA19C
	cmp r1, #0x36
	bhi _080BA158
	movs r0, #1
	b _080BA19C
_080BA158:
	cmp r1, #0x45
	bhi _080BA19A
	movs r0, #2
	b _080BA19C
_080BA160:
	cmp r2, #0xf0
	bls _080BA19E
	adds r0, r5, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	cmp r0, #0
	beq _080BA186
	cmp r1, #0x27
	bhi _080BA176
	movs r0, #0
	b _080BA19C
_080BA176:
	cmp r1, #0x2c
	bhi _080BA17E
	movs r0, #1
	b _080BA19C
_080BA17E:
	cmp r1, #0x31
	bhi _080BA19A
	movs r0, #2
	b _080BA19C
_080BA186:
	cmp r1, #0x2c
	bls _080BA19C
	cmp r1, #0x36
	bhi _080BA192
	movs r0, #1
	b _080BA19C
_080BA192:
	cmp r1, #0x40
	bhi _080BA19A
	movs r0, #2
	b _080BA19C
_080BA19A:
	movs r0, #3
_080BA19C:
	str r0, [r5, #0x10]
_080BA19E:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80BA1A4
sub_80BA1A4: @ 0x080BA1A4
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	cmp r0, #0
	bne _080BA1BC
	adds r0, r2, #0
	adds r0, #0x23
	ldrb r1, [r0]
	ldrh r0, [r2, #0x20]
	subs r0, r0, r1
	strh r0, [r2, #0x20]
	b _080BA1EE
_080BA1BC:
	cmp r0, #1
	bne _080BA1CC
	adds r1, r2, #0
	adds r1, #0x23
	ldrh r0, [r2, #0x1e]
	ldrb r1, [r1]
	adds r0, r0, r1
	b _080BA1EC
_080BA1CC:
	cmp r0, #2
	bne _080BA1DE
	adds r1, r2, #0
	adds r1, #0x23
	ldrh r0, [r2, #0x20]
	ldrb r1, [r1]
	adds r0, r0, r1
	strh r0, [r2, #0x20]
	b _080BA1EE
_080BA1DE:
	cmp r0, #3
	bne _080BA1EE
	adds r0, r2, #0
	adds r0, #0x23
	ldrb r1, [r0]
	ldrh r0, [r2, #0x1e]
	subs r0, r0, r1
_080BA1EC:
	strh r0, [r2, #0x1e]
_080BA1EE:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80BA1F4
sub_80BA1F4: @ 0x080BA1F4
	bx lr
	.align 2, 0

	thumb_func_start sub_80BA1F8
sub_80BA1F8: @ 0x080BA1F8
	bx lr
	.align 2, 0

	thumb_func_start sub_80BA1FC
sub_80BA1FC: @ 0x080BA1FC
	bx lr
	.align 2, 0

	thumb_func_start sub_80BA200
sub_80BA200: @ 0x080BA200
	bx lr
	.align 2, 0

	thumb_func_start sub_80BA204
sub_80BA204: @ 0x080BA204
	push {lr}
	adds r1, r0, #0
	ldrb r0, [r1, #0x1c]
	cmp r0, #1
	bls _080BA27C
	cmp r0, #2
	beq _080BA27C
	cmp r0, #9
	bne _080BA224
	ldr r2, _080BA220 @ =0xFFFFFCB0
	adds r0, r2, #0
	ldrh r2, [r1, #0x20]
	adds r0, r0, r2
	b _080BA27E
	.align 2, 0
_080BA220: .4byte 0xFFFFFCB0
_080BA224:
	cmp r0, #0x13
	bne _080BA238
	ldr r2, _080BA234 @ =0xFFFFFA00
	adds r0, r2, #0
	ldrh r2, [r1, #0x20]
	adds r0, r0, r2
	b _080BA27E
	.align 2, 0
_080BA234: .4byte 0xFFFFFA00
_080BA238:
	cmp r0, #0x1d
	bne _080BA24C
	ldr r2, _080BA248 @ =0xFFFFF800
	adds r0, r2, #0
	ldrh r2, [r1, #0x20]
	adds r0, r0, r2
	b _080BA27E
	.align 2, 0
_080BA248: .4byte 0xFFFFF800
_080BA24C:
	cmp r0, #0x27
	bne _080BA260
	ldr r2, _080BA25C @ =0xFFFFFA00
	adds r0, r2, #0
	ldrh r2, [r1, #0x20]
	adds r0, r0, r2
	b _080BA27E
	.align 2, 0
_080BA25C: .4byte 0xFFFFFA00
_080BA260:
	cmp r0, #0x31
	bne _080BA274
	ldr r2, _080BA270 @ =0xFFFFFCB0
	adds r0, r2, #0
	ldrh r2, [r1, #0x20]
	adds r0, r0, r2
	b _080BA27E
	.align 2, 0
_080BA270: .4byte 0xFFFFFCB0
_080BA274:
	cmp r0, #0x39
	beq _080BA27C
	cmp r0, #0x39
	bls _080BA280
_080BA27C:
	ldrh r0, [r1, #0x20]
_080BA27E:
	strh r0, [r1, #0x2a]
_080BA280:
	pop {r0}
	bx r0

	thumb_func_start sub_80BA284
sub_80BA284: @ 0x080BA284
	push {r4, lr}
	adds r1, r0, #0
	adds r1, #0x92
	movs r3, #0xb4
	lsls r3, r3, #4
	adds r2, r0, r3
	movs r4, #1
_080BA292:
	ldrb r0, [r1, #6]
	cmp r0, #0
	beq _080BA2B4
	movs r0, #2
	str r0, [r2]
	ldrb r0, [r1]
	adds r0, #1
	movs r3, #0
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x3c
	bls _080BA2B4
	movs r0, #1
	str r0, [r2]
	strb r3, [r1, #6]
	strb r3, [r1]
_080BA2B4:
	adds r1, #0x40
	adds r2, #4
	subs r4, #1
	cmp r4, #0
	bge _080BA292
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_80BA2C4
sub_80BA2C4: @ 0x080BA2C4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r7, r0, #0
	mov sl, r1
	movs r0, #0xe3
	lsls r0, r0, #3
	adds r4, r7, r0
	ldr r0, [r4]
	bl sub_8050D34
	adds r6, r0, #0
	ldr r4, [r4]
	str r4, [sp, #0xc]
	adds r0, r7, #0
	bl sub_80088DC
	mov r8, r0
	adds r0, r7, #0
	bl sub_8008920
	mov sb, r0
	adds r0, r7, #0
	bl sub_8008918
	adds r5, r0, #0
	adds r0, r7, #0
	bl sub_8008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl sub_800894C
	movs r2, #0xe1
	lsls r2, r2, #3
	adds r1, r7, r2
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	ldr r0, [sp, #0xc]
	mov r1, r8
	mov r2, sb
	adds r3, r5, #0
	bl sub_8050D3C
	cmp r0, #6
	bls _080BA32A
	b _080BA54A
_080BA32A:
	lsls r0, r0, #2
	ldr r1, _080BA334 @ =_080BA338
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080BA334: .4byte _080BA338
_080BA338: @ jump table
	.4byte _080BA354 @ case 0
	.4byte _080BA4D2 @ case 1
	.4byte _080BA4D2 @ case 2
	.4byte _080BA39C @ case 3
	.4byte _080BA4D2 @ case 4
	.4byte _080BA4D2 @ case 5
	.4byte _080BA4D2 @ case 6
_080BA354:
	ldr r1, _080BA368 @ =0x00000B34
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080BA370
	ldr r2, _080BA36C @ =0x00000B14
	adds r1, r7, r2
	movs r0, #2
	str r0, [r1]
	b _080BA54A
	.align 2, 0
_080BA368: .4byte 0x00000B34
_080BA36C: .4byte 0x00000B14
_080BA370:
	ldr r1, _080BA394 @ =0x00000B3C
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r0, #3
	bne _080BA386
	ldr r2, _080BA398 @ =0x00000B3B
	adds r0, r7, r2
	ldrb r0, [r0]
	cmp r0, #0xb3
	bhi _080BA386
	b _080BA54A
_080BA386:
	movs r1, #0xe3
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r0, [r0]
	bl sub_8050D5C
	b _080BA54A
	.align 2, 0
_080BA394: .4byte 0x00000B3C
_080BA398: .4byte 0x00000B3B
_080BA39C:
	cmp r6, #5
	bgt _080BA3AA
	cmp r6, #4
	bge _080BA410
	cmp r6, #1
	beq _080BA3BC
	b _080BA3AE
_080BA3AA:
	cmp r6, #6
	beq _080BA450
_080BA3AE:
	movs r2, #0xe3
	lsls r2, r2, #3
	adds r0, r7, r2
	ldr r0, [r0]
	bl sub_8050D74
	b _080BA4D2
_080BA3BC:
	ldr r1, _080BA40C @ =0x00000B3C
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r0, #4
	bne _080BA3DC
	adds r0, r7, #0
	adds r0, #0x84
	ldr r0, [r0]
	cmp r0, #0
	ble _080BA3DC
	movs r2, #0xe3
	lsls r2, r2, #3
	adds r0, r7, r2
	ldr r0, [r0]
	bl sub_8050DD8
_080BA3DC:
	ldr r1, _080BA40C @ =0x00000B3C
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r0, #5
	bne _080BA3FC
	adds r0, r7, #0
	adds r0, #0x84
	ldr r0, [r0]
	cmp r0, #0
	bne _080BA3FC
	movs r2, #0xe3
	lsls r2, r2, #3
	adds r0, r7, r2
	ldr r0, [r0]
	bl sub_8050DD8
_080BA3FC:
	ldr r1, _080BA40C @ =0x00000B3C
	adds r0, r7, r1
	ldrb r1, [r0]
	adds r0, r7, #0
	bl sub_80BA574
	b _080BA4D2
	.align 2, 0
_080BA40C: .4byte 0x00000B3C
_080BA410:
	ldr r2, _080BA440 @ =0x00000B3C
	adds r1, r7, r2
	ldrb r0, [r1]
	adds r0, #1
	movs r4, #0
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #6
	bne _080BA4D2
	movs r1, #0xe3
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r0, [r0]
	ldr r1, _080BA444 @ =gUnknown_08107B00
	ldr r2, _080BA448 @ =gUnknown_08107B14
	ldr r3, _080BA44C @ =gUnknown_08107B1C
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	bl sub_8050E30
	b _080BA4D2
	.align 2, 0
_080BA440: .4byte 0x00000B3C
_080BA444: .4byte gUnknown_08107B00
_080BA448: .4byte gUnknown_08107B14
_080BA44C: .4byte gUnknown_08107B1C
_080BA450:
	movs r2, #0xe3
	lsls r2, r2, #3
	adds r4, r7, r2
	ldr r0, [r4]
	bl sub_8050DF0
	cmp r0, #1
	beq _080BA466
	cmp r0, #2
	beq _080BA4C4
	b _080BA4D2
_080BA466:
	ldr r1, _080BA47C @ =0x00000B18
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #1
	beq _080BA494
	cmp r0, #1
	bgt _080BA480
	cmp r0, #0
	beq _080BA486
	b _080BA4AC
	.align 2, 0
_080BA47C: .4byte 0x00000B18
_080BA480:
	cmp r0, #2
	beq _080BA4A4
	b _080BA4AC
_080BA486:
	ldr r0, [r4]
	ldr r1, _080BA490 @ =gUnknown_08107A68
	bl sub_8050D8C
	b _080BA4AC
	.align 2, 0
_080BA490: .4byte gUnknown_08107A68
_080BA494:
	ldr r0, [r4]
	ldr r1, _080BA4A0 @ =gUnknown_08107A80
	bl sub_8050D8C
	b _080BA4AC
	.align 2, 0
_080BA4A0: .4byte gUnknown_08107A80
_080BA4A4:
	ldr r0, [r4]
	ldr r1, _080BA4C0 @ =gUnknown_08107A9C
	bl sub_8050D8C
_080BA4AC:
	movs r2, #0xe3
	lsls r2, r2, #3
	adds r0, r7, r2
	ldr r0, [r0]
	bl sub_8050DD8
	movs r0, #0
	mov sl, r0
	b _080BA4D2
	.align 2, 0
_080BA4C0: .4byte gUnknown_08107A9C
_080BA4C4:
	ldr r1, _080BA564 @ =0x00000B3C
	adds r0, r7, r1
	movs r1, #1
	strb r1, [r0]
	ldr r2, _080BA568 @ =0x00000B33
	adds r0, r7, r2
	strb r1, [r0]
_080BA4D2:
	mov r0, sl
	cmp r0, #0x77
	bgt _080BA4DC
	movs r1, #1
	add sl, r1
_080BA4DC:
	mov r2, sl
	cmp r2, #0x78
	bne _080BA50A
	movs r0, #0xb5
	lsls r0, r0, #4
	adds r1, r7, r0
	movs r0, #1
	str r0, [r1]
	movs r1, #0x7a
	mov sl, r1
	movs r2, #0xe3
	lsls r2, r2, #3
	adds r4, r7, r2
	ldr r0, [r4]
	bl sub_8050DE4
	ldr r0, [r4]
	ldr r1, _080BA56C @ =gUnknown_08107AB4
	bl sub_8050D8C
	ldr r0, [r4]
	bl sub_8050DD8
_080BA50A:
	mov r0, sl
	subs r0, #0x7a
	cmp r0, #0x59
	bhi _080BA516
	movs r0, #1
	add sl, r0
_080BA516:
	mov r1, sl
	cmp r1, #0xd4
	bne _080BA54A
	movs r2, #0xb5
	lsls r2, r2, #4
	adds r0, r7, r2
	movs r5, #0
	str r5, [r0]
	movs r0, #0x79
	mov sl, r0
	movs r1, #0xe3
	lsls r1, r1, #3
	adds r4, r7, r1
	ldr r0, [r4]
	bl sub_8050DE4
	ldr r0, [r4]
	bl sub_8050D74
	ldr r2, _080BA568 @ =0x00000B33
	adds r0, r7, r2
	strb r5, [r0]
	ldr r0, _080BA570 @ =0x00000B34
	adds r1, r7, r0
	movs r0, #1
	strb r0, [r1]
_080BA54A:
	adds r0, r7, #0
	bl sub_80B5318
	mov r0, sl
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080BA564: .4byte 0x00000B3C
_080BA568: .4byte 0x00000B33
_080BA56C: .4byte gUnknown_08107AB4
_080BA570: .4byte 0x00000B34

	thumb_func_start sub_80BA574
sub_80BA574: @ 0x080BA574
	push {lr}
	adds r2, r0, #0
	subs r0, r1, #1
	cmp r0, #4
	bhi _080BA5FE
	lsls r0, r0, #2
	ldr r1, _080BA588 @ =_080BA58C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080BA588: .4byte _080BA58C
_080BA58C: @ jump table
	.4byte _080BA5A0 @ case 0
	.4byte _080BA5B4 @ case 1
	.4byte _080BA5C8 @ case 2
	.4byte _080BA5DC @ case 3
	.4byte _080BA5F0 @ case 4
_080BA5A0:
	movs r1, #0xe3
	lsls r1, r1, #3
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r1, _080BA5B0 @ =gUnknown_08107B28
	bl sub_8050D8C
	b _080BA5FE
	.align 2, 0
_080BA5B0: .4byte gUnknown_08107B28
_080BA5B4:
	movs r1, #0xe3
	lsls r1, r1, #3
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r1, _080BA5C4 @ =gUnknown_08107B5C
	bl sub_8050D8C
	b _080BA5FE
	.align 2, 0
_080BA5C4: .4byte gUnknown_08107B5C
_080BA5C8:
	movs r1, #0xe3
	lsls r1, r1, #3
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r1, _080BA5D8 @ =gUnknown_08107C18
	bl sub_8050D8C
	b _080BA5FE
	.align 2, 0
_080BA5D8: .4byte gUnknown_08107C18
_080BA5DC:
	movs r1, #0xe3
	lsls r1, r1, #3
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r1, _080BA5EC @ =gUnknown_08107CB0
	bl sub_8050D8C
	b _080BA5FE
	.align 2, 0
_080BA5EC: .4byte gUnknown_08107CB0
_080BA5F0:
	movs r1, #0xe3
	lsls r1, r1, #3
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r1, _080BA604 @ =gUnknown_08107CE0
	bl sub_8050D8C
_080BA5FE:
	pop {r0}
	bx r0
	.align 2, 0
_080BA604: .4byte gUnknown_08107CE0

	thumb_func_start sub_80BA608
sub_80BA608: @ 0x080BA608
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80088CC
	movs r1, #8
	ands r1, r0
	cmp r1, #0
	beq _080BA6AC
	ldr r1, _080BA668 @ =0x00000714
	adds r0, r4, r1
	movs r1, #0xb8
	bl sub_8008B6C
	ldr r3, _080BA66C @ =0x00000B31
	adds r2, r4, r3
	ldrb r1, [r2]
	cmp r1, #0
	beq _080BA678
	movs r0, #0
	strb r0, [r2]
	ldr r1, _080BA670 @ =0x000007A4
	adds r0, r4, r1
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	strh r1, [r0, #0x10]
	movs r2, #0xf5
	lsls r2, r2, #3
	adds r0, r4, r2
	ldr r0, [r0]
	strh r1, [r0, #0x10]
	ldr r3, _080BA674 @ =0x0000087C
	adds r0, r4, r3
	ldr r0, [r0]
	strh r1, [r0, #0x10]
	adds r2, #0xd8
	adds r0, r4, r2
	ldr r0, [r0]
	strh r1, [r0, #0x10]
	adds r3, #0xa0
	adds r0, r4, r3
	ldr r0, [r0]
	strh r1, [r0, #0x10]
	adds r2, #0xa0
	adds r0, r4, r2
	ldr r0, [r0]
	strh r1, [r0, #0x10]
	b _080BA6AC
	.align 2, 0
_080BA668: .4byte 0x00000714
_080BA66C: .4byte 0x00000B31
_080BA670: .4byte 0x000007A4
_080BA674: .4byte 0x0000087C
_080BA678:
	ldr r3, _080BA6B4 @ =0x000007A4
	adds r0, r4, r3
	ldr r0, [r0]
	strh r1, [r0, #0x10]
	adds r3, #4
	adds r0, r4, r3
	ldr r0, [r0]
	strh r1, [r0, #0x10]
	adds r3, #0xd4
	adds r0, r4, r3
	ldr r0, [r0]
	strh r1, [r0, #0x10]
	adds r3, #4
	adds r0, r4, r3
	ldr r0, [r0]
	strh r1, [r0, #0x10]
	adds r3, #0x9c
	adds r0, r4, r3
	ldr r0, [r0]
	strh r1, [r0, #0x10]
	adds r3, #4
	adds r0, r4, r3
	ldr r0, [r0]
	strh r1, [r0, #0x10]
	movs r0, #1
	strb r0, [r2]
_080BA6AC:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080BA6B4: .4byte 0x000007A4

	thumb_func_start sub_80BA6B8
sub_80BA6B8: @ 0x080BA6B8
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80088D4
	adds r3, r4, #0
	adds r3, #0x9c
	ldrb r1, [r3]
	cmp r1, #1
	bne _080BA6F8
	ands r0, r1
	cmp r0, #0
	beq _080BA6F8
	adds r0, r4, #0
	adds r0, #0x98
	movs r2, #0
	strb r1, [r0]
	ldr r0, [r4, #0x6c]
	cmp r0, #1
	bhi _080BA6F8
	strb r2, [r3]
	adds r0, r4, #0
	adds r0, #0x88
	strb r2, [r0]
	adds r0, #0x11
	strb r1, [r0]
	movs r0, #5
	str r0, [r4, #0x6c]
	ldr r1, _080BA72C @ =0x0000070C
	adds r0, r4, r1
	movs r1, #0xcc
	bl sub_8008B6C
_080BA6F8:
	adds r0, r4, #0
	adds r0, #0xdc
	ldrb r0, [r0]
	cmp r0, #1
	bne _080BA724
	ldr r3, _080BA730 @ =0x00000B3A
	adds r2, r4, r3
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	ldrb r1, [r2]
	adds r3, #0x20
	adds r0, r4, r3
	ldrb r0, [r0]
	subs r0, #1
	cmp r1, r0
	ble _080BA724
	movs r0, #0
	strb r0, [r2]
	adds r0, r4, #0
	bl sub_80B92B4
_080BA724:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080BA72C: .4byte 0x0000070C
_080BA730: .4byte 0x00000B3A

	thumb_func_start sub_80BA734
sub_80BA734: @ 0x080BA734
	push {r4, lr}
	adds r3, r0, #0
	adds r0, #0x84
	ldr r0, [r0]
	cmp r0, #0
	bge _080BA788
	adds r4, r3, #0
	adds r4, #0x8c
	ldrh r0, [r4]
	lsrs r0, r0, #8
	cmp r0, #0x47
	bhi _080BA754
	adds r1, r3, #0
	adds r1, #0x95
	movs r0, #2
	strb r0, [r1]
_080BA754:
	movs r1, #0xc0
	lsls r1, r1, #2
	adds r0, r1, #0
	ldrh r2, [r4]
	adds r0, r0, r2
	movs r2, #0
	strh r0, [r4]
	ldr r4, _080BA780 @ =0x00000B14
	adds r0, r3, r4
	movs r1, #3
	str r1, [r0]
	adds r4, #0x2c
	adds r0, r3, r4
	str r2, [r0]
	ldr r2, _080BA784 @ =0x00000B44
	adds r0, r3, r2
	str r1, [r0]
	adds r4, #0x10
	adds r1, r3, r4
	movs r0, #1
	str r0, [r1]
	b _080BA7D4
	.align 2, 0
_080BA780: .4byte 0x00000B14
_080BA784: .4byte 0x00000B44
_080BA788:
	adds r0, r3, #0
	adds r0, #0xc4
	ldr r0, [r0]
	cmp r0, #0
	bge _080BA7D4
	adds r0, r3, #0
	adds r0, #0x8c
	ldrh r0, [r0]
	lsrs r0, r0, #8
	cmp r0, #0x47
	bhi _080BA7A6
	adds r1, r3, #0
	adds r1, #0xd5
	movs r0, #2
	strb r0, [r1]
_080BA7A6:
	adds r1, r3, #0
	adds r1, #0xcc
	movs r2, #0xc0
	lsls r2, r2, #2
	adds r0, r2, #0
	ldrh r4, [r1]
	adds r0, r0, r4
	strh r0, [r1]
	ldr r1, _080BA7DC @ =0x00000B14
	adds r0, r3, r1
	movs r2, #3
	str r2, [r0]
	ldr r4, _080BA7E0 @ =0x00000B44
	adds r0, r3, r4
	movs r1, #1
	str r1, [r0]
	subs r4, #4
	adds r0, r3, r4
	str r2, [r0]
	movs r2, #0xb5
	lsls r2, r2, #4
	adds r0, r3, r2
	str r1, [r0]
_080BA7D4:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080BA7DC: .4byte 0x00000B14
_080BA7E0: .4byte 0x00000B44

	thumb_func_start sub_80BA7E4
sub_80BA7E4: @ 0x080BA7E4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x50
	mov sb, r0
	str r1, [sp, #0x28]
	movs r2, #0
	movs r3, #0xf9
	lsls r3, r3, #3
_080BA7FA:
	lsls r0, r2, #2
	add r0, sb
	adds r0, r0, r3
	ldr r0, [r0]
	strh r1, [r0, #6]
	adds r1, #0xf
	adds r2, #1
	cmp r2, #4
	bls _080BA7FA
	movs r2, #0
	ldr r4, [sp, #0x28]
	adds r4, #0x69
	ldr r0, [sp, #0x28]
	lsls r0, r0, #5
	str r0, [sp, #0x44]
	ldr r3, _080BA8B0 @ =0x00000884
	ldr r1, [sp, #0x28]
	adds r1, #0x4b
_080BA81E:
	lsls r0, r2, #2
	add r0, sb
	adds r0, r0, r3
	ldr r0, [r0]
	strh r1, [r0, #6]
	adds r1, #0xf
	adds r2, #1
	cmp r2, #1
	bls _080BA81E
	movs r0, #0x8d
	lsls r0, r0, #4
	add r0, sb
	ldr r0, [r0]
	strh r4, [r0, #6]
	movs r1, #0
	mov r8, r1
_080BA83E:
	mov r0, sb
	bl sub_8008910
	adds r5, r0, #0
	mov r2, r8
	lsls r1, r2, #5
	mov r3, sb
	adds r0, r1, r3
	ldr r2, _080BA8B4 @ =0x000007E4
	adds r0, r0, r2
	ldr r7, [r0]
	mov r4, r8
	lsls r0, r4, #4
	subs r0, r0, r4
	ldr r6, [sp, #0x28]
	adds r3, r0, r6
	mov r0, sb
	adds r4, r1, r0
	adds r4, r4, r2
	ldr r0, [r4]
	movs r6, #0
	str r1, [sp, #0x38]
	cmp r0, #0
	beq _080BA870
	ldrh r6, [r4, #4]
_080BA870:
	lsls r2, r3, #5
	ldr r1, _080BA8B8 @ =0x06010000
	adds r2, r2, r1
	mov r0, sp
	adds r1, r7, #0
	adds r3, r6, #0
	bl sub_8008F0C
	mov r2, sp
	str r2, [sp, #0x2c]
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080BA8BC
	cmp r1, #0
	beq _080BA89C
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r3, r4, r6}
	stm r0!, {r3, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_080BA89C:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	mov r7, r8
	lsls r7, r7, #2
	str r7, [sp, #0x34]
	movs r0, #1
	add r8, r0
	b _080BA98A
	.align 2, 0
_080BA8B0: .4byte 0x00000884
_080BA8B4: .4byte 0x000007E4
_080BA8B8: .4byte 0x06010000
_080BA8BC:
	str r1, [sp, #0x48]
	movs r0, #1
	str r0, [sp, #0x14]
	ldr r0, [r5]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x10]
	add r1, sp, #0x14
	add r0, sp, #0x10
	cmp r4, #1
	bhs _080BA8D4
	adds r0, r1, #0
_080BA8D4:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BA8F2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sl, r4
	cmp r0, #0
	bne _080BA8F6
	mov r0, sl
	bl sub_80D3BC0
	b _080BA8F6
_080BA8F2:
	movs r0, #0
	mov sl, r0
_080BA8F6:
	adds r4, r0, #0
	str r4, [sp, #0x4c]
	ldr r2, [r5]
	adds r3, r4, #0
	mov r4, r8
	lsls r4, r4, #2
	str r4, [sp, #0x34]
	movs r6, #1
	add r8, r6
	ldr r7, [sp, #0x48]
	cmp r2, r7
	beq _080BA928
_080BA90E:
	cmp r3, #0
	beq _080BA91E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BA91E:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x48]
	cmp r2, r0
	bne _080BA90E
_080BA928:
	adds r4, r3, #0
	ldr r0, [sp, #0x14]
	cmp r0, #1
	bne _080BA944
	cmp r4, #0
	beq _080BA940
	adds r0, r4, #0
	ldr r1, [sp, #0x2c]
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080BA940:
	adds r4, #0x10
	b _080BA966
_080BA944:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080BA964
_080BA94C:
	cmp r2, #0
	beq _080BA95C
	adds r0, r2, #0
	ldr r1, [sp, #0x2c]
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BA95C:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BA94C
_080BA964:
	adds r4, r2, #0
_080BA966:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BA976
_080BA970:
	adds r1, #0x10
	cmp r1, r2
	bne _080BA970
_080BA976:
	cmp r0, #0
	beq _080BA97E
	bl sub_80D0260
_080BA97E:
	ldr r0, [sp, #0x4c]
	add r0, sl
	ldr r7, [sp, #0x4c]
	str r7, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080BA98A:
	mov r0, sb
	bl sub_8008920
	adds r5, r0, #0
	ldr r0, [sp, #0x38]
	add r0, sb
	ldr r1, _080BAA30 @ =0x000007DC
	adds r0, r0, r1
	ldr r4, [r0]
	ldr r3, [sp, #0x38]
	add r3, sb
	adds r3, r3, r1
	ldr r0, [r3]
	movs r2, #0
	cmp r0, #0
	beq _080BA9AC
	ldrh r2, [r3, #4]
_080BA9AC:
	ldr r0, [sp, #0x34]
	add r0, sb
	movs r1, #0xf9
	lsls r1, r1, #3
	adds r0, r0, r1
	ldr r3, [r0]
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_805E99C
	mov r2, r8
	cmp r2, #4
	bhi _080BA9C8
	b _080BA83E
_080BA9C8:
	movs r7, #0
_080BA9CA:
	mov r0, sb
	bl sub_8008910
	adds r5, r0, #0
	lsls r2, r7, #5
	mov r3, sb
	adds r0, r2, r3
	ldr r1, _080BAA34 @ =0x00000894
	adds r0, r0, r1
	ldr r6, [r0]
	adds r4, r2, r3
	adds r4, r4, r1
	ldr r0, [r4]
	movs r3, #0
	str r2, [sp, #0x40]
	cmp r0, #0
	beq _080BA9EE
	ldrh r3, [r4, #4]
_080BA9EE:
	lsls r0, r7, #4
	subs r0, r0, r7
	ldr r4, [sp, #0x28]
	adds r2, r0, r4
	lsls r0, r2, #5
	ldr r1, _080BAA38 @ =0x06010960
	adds r2, r0, r1
	mov r0, sp
	adds r1, r6, #0
	bl sub_8008F0C
	mov r2, sp
	str r2, [sp, #0x30]
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080BAA3C
	cmp r1, #0
	beq _080BAA20
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r3, r4, r6}
	stm r0!, {r3, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_080BAA20:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	lsls r0, r7, #2
	str r0, [sp, #0x3c]
	adds r1, r7, #1
	str r1, [sp, #0x4c]
	b _080BAB0A
	.align 2, 0
_080BAA30: .4byte 0x000007DC
_080BAA34: .4byte 0x00000894
_080BAA38: .4byte 0x06010960
_080BAA3C:
	str r1, [sp, #0x48]
	movs r0, #1
	str r0, [sp, #0x1c]
	ldr r0, [r5]
	adds r2, r1, #0
	subs r0, r2, r0
	asrs r4, r0, #4
	str r4, [sp, #0x18]
	add r1, sp, #0x1c
	add r0, sp, #0x18
	cmp r4, #1
	bhs _080BAA56
	adds r0, r1, #0
_080BAA56:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BAA74
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sl, r4
	cmp r0, #0
	bne _080BAA78
	mov r0, sl
	bl sub_80D3BC0
	b _080BAA78
_080BAA74:
	movs r0, #0
	mov sl, r0
_080BAA78:
	adds r4, r0, #0
	mov r8, r4
	ldr r2, [r5]
	mov r3, r8
	lsls r4, r7, #2
	str r4, [sp, #0x3c]
	adds r6, r7, #1
	str r6, [sp, #0x4c]
	ldr r7, [sp, #0x48]
	cmp r2, r7
	beq _080BAAA8
_080BAA8E:
	cmp r3, #0
	beq _080BAA9E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BAA9E:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x48]
	cmp r2, r0
	bne _080BAA8E
_080BAAA8:
	adds r4, r3, #0
	ldr r0, [sp, #0x1c]
	cmp r0, #1
	bne _080BAAC4
	cmp r4, #0
	beq _080BAAC0
	adds r0, r4, #0
	ldr r1, [sp, #0x30]
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080BAAC0:
	adds r4, #0x10
	b _080BAAE6
_080BAAC4:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080BAAE4
_080BAACC:
	cmp r2, #0
	beq _080BAADC
	adds r0, r2, #0
	ldr r1, [sp, #0x30]
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BAADC:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BAACC
_080BAAE4:
	adds r4, r2, #0
_080BAAE6:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BAAF6
_080BAAF0:
	adds r1, #0x10
	cmp r1, r2
	bne _080BAAF0
_080BAAF6:
	cmp r0, #0
	beq _080BAAFE
	bl sub_80D0260
_080BAAFE:
	mov r0, sl
	add r0, r8
	mov r7, r8
	str r7, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080BAB0A:
	mov r0, sb
	bl sub_8008920
	adds r6, r0, #0
	ldr r0, [sp, #0x40]
	add r0, sb
	ldr r1, _080BAB8C @ =0x0000088C
	adds r0, r0, r1
	ldr r4, [r0]
	ldr r2, [sp, #0x40]
	add r2, sb
	adds r2, r2, r1
	ldr r0, [r2]
	movs r5, #0
	cmp r0, #0
	beq _080BAB2C
	ldrh r5, [r2, #4]
_080BAB2C:
	ldr r0, [sp, #0x3c]
	add r0, sb
	ldr r1, _080BAB90 @ =0x00000884
	adds r0, r0, r1
	ldr r3, [r0]
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r5, #0
	bl sub_805E99C
	ldr r7, [sp, #0x4c]
	cmp r7, #1
	bhi _080BAB48
	b _080BA9CA
_080BAB48:
	mov r0, sb
	bl sub_8008910
	ldr r2, _080BAB94 @ =0x000008DC
	add r2, sb
	ldr r1, [r2]
	movs r3, #0
	cmp r1, #0
	beq _080BAB5C
	ldrh r3, [r2, #4]
_080BAB5C:
	adds r5, r0, #0
	ldr r4, [sp, #0x44]
	ldr r6, _080BAB98 @ =0x06010D20
	adds r2, r4, r6
	mov r0, sp
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080BAB9C
	cmp r1, #0
	beq _080BAB84
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BAB84:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080BAC62
	.align 2, 0
_080BAB8C: .4byte 0x0000088C
_080BAB90: .4byte 0x00000884
_080BAB94: .4byte 0x000008DC
_080BAB98: .4byte 0x06010D20
_080BAB9C:
	str r1, [sp, #0x48]
	movs r0, #1
	str r0, [sp, #0x24]
	ldr r0, [r5]
	adds r4, r1, #0
	subs r0, r4, r0
	asrs r4, r0, #4
	str r4, [sp, #0x20]
	add r1, sp, #0x24
	add r0, sp, #0x20
	cmp r4, #1
	bhs _080BABB6
	adds r0, r1, #0
_080BABB6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BABD4
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080BABD8
	mov r0, r8
	bl sub_80D3BC0
	b _080BABD8
_080BABD4:
	movs r0, #0
	mov r8, r0
_080BABD8:
	adds r4, r0, #0
	str r4, [sp, #0x4c]
	ldr r2, [r5]
	adds r3, r4, #0
	ldr r6, [sp, #0x48]
	cmp r2, r6
	beq _080BAC00
_080BABE6:
	cmp r3, #0
	beq _080BABF6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BABF6:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0x48]
	cmp r2, r7
	bne _080BABE6
_080BAC00:
	adds r4, r3, #0
	ldr r0, [sp, #0x24]
	cmp r0, #1
	bne _080BAC1C
	cmp r4, #0
	beq _080BAC18
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080BAC18:
	adds r4, #0x10
	b _080BAC3E
_080BAC1C:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080BAC3C
_080BAC24:
	cmp r2, #0
	beq _080BAC34
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BAC34:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BAC24
_080BAC3C:
	adds r4, r2, #0
_080BAC3E:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BAC4E
_080BAC48:
	adds r1, #0x10
	cmp r1, r2
	bne _080BAC48
_080BAC4E:
	cmp r0, #0
	beq _080BAC56
	bl sub_80D0260
_080BAC56:
	ldr r0, [sp, #0x4c]
	add r0, r8
	ldr r7, [sp, #0x4c]
	str r7, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080BAC62:
	mov r0, sb
	bl sub_8008920
	adds r4, r0, #0
	ldr r3, _080BAC98 @ =0x000008D4
	add r3, sb
	ldr r0, [r3]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080BAC7A
	ldrh r2, [r3, #4]
_080BAC7A:
	movs r0, #0x8d
	lsls r0, r0, #4
	add r0, sb
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
	add sp, #0x50
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080BAC98: .4byte 0x000008D4

	thumb_func_start sub_80BAC9C
sub_80BAC9C: @ 0x080BAC9C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xf0
	mov sb, r0
	str r1, [sp, #0x90]
	ldr r1, _080BB03C @ =gUnknown_08107CFC
	mov r0, sp
	movs r2, #0x40
	bl sub_80D3994
	movs r0, #0
	str r0, [sp, #0x94]
	mov r1, sp
	adds r1, #4
	str r1, [sp, #0xa0]
	mov r2, sp
	adds r2, #0x40
	str r2, [sp, #0xb8]
	ldr r3, [sp, #0x90]
	str r3, [sp, #0xe4]
	mov sl, sb
	ldr r4, _080BB040 @ =0x000007B4
	add r4, sb
	mov r8, r4
_080BACD2:
	movs r0, #0x14
	bl sub_80005D4
	ldr r1, _080BB044 @ =0x0000077C
	add r1, sb
	ldr r1, [r1]
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	adds r4, r0, #0
	ldr r5, [sp, #0x94]
	lsls r6, r5, #2
	mov r7, r8
	ldr r0, [r7]
	cmp r4, r0
	beq _080BACFA
	bl sub_8000608
_080BACFA:
	mov r0, r8
	str r4, [r0]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r0, #0
	strh r0, [r4]
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	strh r0, [r4, #8]
	str r0, [r4, #0xc]
	movs r1, #0
	strb r1, [r4, #0x10]
	strb r1, [r4, #0x11]
	str r0, [r4, #0x14]
	strb r1, [r4, #0x18]
	mov r2, sb
	adds r5, r6, r2
	movs r7, #0xf9
	lsls r7, r7, #3
	adds r5, r5, r7
	ldr r0, [r5]
	cmp r4, r0
	beq _080BAD32
	bl sub_8000608
_080BAD32:
	str r4, [r5]
	ldr r0, _080BB040 @ =0x000007B4
	add r0, sl
	ldr r4, [r0]
	mov r0, sb
	movs r1, #0
	ldr r2, [sp, #0x94]
	movs r3, #0
	bl sub_80BB890
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_805E860
	mov r3, sb
	adds r0, r6, r3
	adds r0, r0, r7
	ldr r0, [r0]
	add r4, sp, #0xe4
	ldrh r4, [r4]
	strh r4, [r0, #6]
	adds r0, r6, r3
	adds r0, r0, r7
	ldr r5, [r0]
	ldr r0, [sp, #0x94]
	lsls r4, r0, #3
	adds r0, r4, r3
	ldr r1, _080BB048 @ =0x0000073C
	adds r0, r0, r1
	ldr r1, [r0, #4]
	bl sub_80074C0
	strh r0, [r5, #4]
	mov r2, sb
	adds r0, r6, r2
	adds r0, r0, r7
	ldr r1, [r0]
	movs r0, #1
	strh r0, [r1, #8]
	adds r0, r6, r2
	adds r0, r0, r7
	ldr r0, [r0]
	movs r3, #1
	strb r3, [r0, #0x18]
	adds r0, r6, r2
	adds r0, r0, r7
	ldr r1, [r0]
	mov r5, sp
	adds r0, r5, r4
	ldr r0, [r0]
	strh r0, [r1]
	adds r0, r6, r2
	adds r0, r0, r7
	ldr r1, [r0]
	ldr r7, [sp, #0xa0]
	adds r4, r7, r4
	ldr r0, [r4]
	strh r0, [r1, #2]
	ldr r0, [sp, #0xe4]
	adds r0, #0xf
	str r0, [sp, #0xe4]
	movs r1, #4
	add sl, r1
	add r8, r1
	ldr r2, [sp, #0x94]
	adds r2, #1
	str r2, [sp, #0x94]
	cmp r2, #4
	ble _080BACD2
	movs r3, #0
	str r3, [sp, #0x94]
	ldr r4, [sp, #0x90]
	adds r4, #0x69
	str r4, [sp, #0xbc]
	ldr r5, [sp, #0x90]
	lsls r5, r5, #5
	str r5, [sp, #0xb0]
	adds r7, #0x28
	str r7, [sp, #0xd4]
	mov r0, sp
	adds r0, #0x28
	str r0, [sp, #0xd8]
	ldr r1, [sp, #0x90]
	adds r1, #0x4b
	str r1, [sp, #0xdc]
	mov r2, sb
	str r2, [sp, #0xe0]
	ldr r3, _080BB04C @ =0x0000087C
	add r3, sb
	mov sl, r3
_080BADEA:
	movs r0, #0x14
	bl sub_80005D4
	ldr r1, _080BB044 @ =0x0000077C
	add r1, sb
	ldr r1, [r1]
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	adds r4, r0, #0
	ldr r5, [sp, #0x94]
	lsls r6, r5, #2
	mov r7, sl
	ldr r0, [r7]
	cmp r4, r0
	beq _080BAE12
	bl sub_8000608
_080BAE12:
	mov r0, sl
	str r4, [r0]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r1, #0
	mov r8, r1
	mov r2, r8
	strh r2, [r4]
	strh r2, [r4, #2]
	strh r2, [r4, #4]
	strh r2, [r4, #6]
	strh r2, [r4, #8]
	mov r3, r8
	str r3, [r4, #0xc]
	movs r5, #0
	strb r5, [r4, #0x10]
	strb r5, [r4, #0x11]
	str r3, [r4, #0x14]
	strb r5, [r4, #0x18]
	mov r7, sb
	adds r5, r6, r7
	ldr r7, _080BB050 @ =0x00000884
	adds r5, r5, r7
	ldr r0, [r5]
	cmp r4, r0
	beq _080BAE4E
	bl sub_8000608
_080BAE4E:
	str r4, [r5]
	ldr r1, [sp, #0xe0]
	ldr r2, _080BB04C @ =0x0000087C
	adds r0, r1, r2
	ldr r4, [r0]
	movs r0, #0xb4
	lsls r0, r0, #4
	add r0, sb
	adds r0, r0, r6
	ldr r3, [r0]
	mov r0, sb
	movs r1, #1
	ldr r2, [sp, #0x94]
	bl sub_80BB890
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_805E860
	mov r3, sb
	adds r0, r6, r3
	adds r0, r0, r7
	ldr r0, [r0]
	add r4, sp, #0xdc
	ldrh r4, [r4]
	strh r4, [r0, #6]
	adds r0, r6, r3
	adds r0, r0, r7
	ldr r4, [r0]
	ldr r5, [sp, #0x94]
	lsls r0, r5, #3
	add r0, sb
	ldr r1, _080BB054 @ =0x00000764
	adds r0, r0, r1
	ldr r1, [r0, #4]
	bl sub_80074C0
	strh r0, [r4, #4]
	mov r2, sb
	adds r0, r6, r2
	adds r0, r0, r7
	ldr r0, [r0]
	movs r3, #1
	strh r3, [r0, #8]
	adds r0, r6, r2
	adds r0, r0, r7
	ldr r0, [r0]
	movs r4, #1
	strb r4, [r0, #0x18]
	adds r0, r6, r2
	adds r0, r0, r7
	ldr r1, [r0]
	ldr r5, [sp, #0xd8]
	ldr r0, [r5]
	strh r0, [r1]
	adds r0, r6, r2
	adds r0, r0, r7
	ldr r1, [r0]
	ldr r7, [sp, #0xd4]
	ldr r0, [r7]
	strh r0, [r1, #2]
	adds r0, r7, #0
	adds r0, #8
	str r0, [sp, #0xd4]
	adds r5, #8
	str r5, [sp, #0xd8]
	ldr r1, [sp, #0xdc]
	adds r1, #0xf
	str r1, [sp, #0xdc]
	ldr r2, [sp, #0xe0]
	adds r2, #4
	str r2, [sp, #0xe0]
	movs r3, #4
	add sl, r3
	ldr r4, [sp, #0x94]
	adds r4, #1
	str r4, [sp, #0x94]
	cmp r4, #1
	bgt _080BAEF2
	b _080BADEA
_080BAEF2:
	movs r0, #0x14
	bl sub_80005D4
	ldr r1, _080BB044 @ =0x0000077C
	add r1, sb
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r5, r0, #0
	ldr r4, _080BB058 @ =0x000008CC
	add r4, sb
	ldr r0, [r4]
	cmp r5, r0
	beq _080BAF18
	bl sub_8000608
_080BAF18:
	str r5, [r4]
	movs r0, #0x1c
	bl sub_80005D4
	adds r5, r0, #0
	movs r0, #0
	mov r7, r8
	strh r7, [r5]
	mov r1, r8
	strh r1, [r5, #2]
	strh r1, [r5, #4]
	strh r1, [r5, #6]
	strh r1, [r5, #8]
	mov r2, r8
	str r2, [r5, #0xc]
	strb r0, [r5, #0x10]
	strb r0, [r5, #0x11]
	str r2, [r5, #0x14]
	strb r0, [r5, #0x18]
	movs r6, #0x8d
	lsls r6, r6, #4
	add r6, sb
	ldr r0, [r6]
	cmp r5, r0
	beq _080BAF4E
	bl sub_8000608
_080BAF4E:
	str r5, [r6]
	ldr r4, [r4]
	movs r0, #0xb5
	lsls r0, r0, #4
	add r0, sb
	ldr r3, [r0]
	mov r0, sb
	movs r1, #2
	movs r2, #0
	bl sub_80BB890
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_805E860
	ldr r0, [r6]
	add r3, sp, #0xbc
	ldrh r3, [r3]
	strh r3, [r0, #6]
	ldr r4, [r6]
	ldr r0, _080BB05C @ =0x00000774
	add r0, sb
	ldr r1, [r0, #4]
	bl sub_80074C0
	strh r0, [r4, #4]
	ldr r0, [r6]
	movs r1, #1
	strh r1, [r0, #8]
	ldr r0, [r6]
	strb r1, [r0, #0x18]
	ldr r1, [r6]
	ldr r0, [sp, #0x38]
	strh r0, [r1]
	ldr r1, [r6]
	ldr r0, [sp, #0x3c]
	strh r0, [r1, #2]
	movs r4, #0
	str r4, [sp, #0x94]
	ldr r5, [sp, #0xb8]
	str r5, [sp, #0x98]
	movs r7, #0
	str r7, [sp, #0xc0]
	ldr r0, _080BB048 @ =0x0000073C
	add r0, sb
	str r0, [sp, #0xc4]
	ldr r1, [sp, #0x90]
	lsls r0, r1, #5
	ldr r2, _080BB060 @ =0x06010000
	adds r2, r0, r2
	str r2, [sp, #0xc8]
	ldr r3, _080BB040 @ =0x000007B4
	add r3, sb
	str r3, [sp, #0xcc]
	ldr r4, _080BB064 @ =0x000007DC
	add r4, sb
	str r4, [sp, #0xd0]
_080BAFC4:
	ldr r5, [sp, #0xcc]
	ldr r0, [r5]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x40
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	ldr r0, [sp, #0x98]
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	ldr r1, [sp, #0xd0]
	ldr r0, [sp, #0x98]
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r4, r5, r7}
	stm r1!, {r4, r5, r7}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	mov r0, sb
	bl sub_8008910
	adds r2, r0, #0
	ldr r4, [sp, #0xd0]
	ldr r0, [r4, #8]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080BB00E
	ldrh r3, [r4, #0xc]
_080BB00E:
	adds r6, r2, #0
	ldr r0, [sp, #0x98]
	ldr r2, [sp, #0xc8]
	bl sub_8008F0C
	ldr r5, [sp, #0x98]
	mov sl, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BB068
	cmp r1, #0
	beq _080BB034
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BB034:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080BB12E
	.align 2, 0
_080BB03C: .4byte gUnknown_08107CFC
_080BB040: .4byte 0x000007B4
_080BB044: .4byte 0x0000077C
_080BB048: .4byte 0x0000073C
_080BB04C: .4byte 0x0000087C
_080BB050: .4byte 0x00000884
_080BB054: .4byte 0x00000764
_080BB058: .4byte 0x000008CC
_080BB05C: .4byte 0x00000774
_080BB060: .4byte 0x06010000
_080BB064: .4byte 0x000007DC
_080BB068:
	str r1, [sp, #0xe8]
	movs r0, #1
	str r0, [sp, #0x64]
	ldr r0, [r6]
	adds r4, r1, #0
	subs r0, r4, r0
	asrs r4, r0, #4
	str r4, [sp, #0x60]
	add r1, sp, #0x64
	add r0, sp, #0x60
	cmp r4, #1
	bhs _080BB082
	adds r0, r1, #0
_080BB082:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BB0A0
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080BB0A4
	mov r0, r8
	bl sub_80D3BC0
	b _080BB0A4
_080BB0A0:
	movs r0, #0
	mov r8, r0
_080BB0A4:
	adds r5, r0, #0
	str r5, [sp, #0xec]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r5, [sp, #0xe8]
	cmp r2, r5
	beq _080BB0CC
_080BB0B2:
	cmp r3, #0
	beq _080BB0C2
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BB0C2:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0xe8]
	cmp r2, r7
	bne _080BB0B2
_080BB0CC:
	adds r5, r3, #0
	ldr r0, [sp, #0x64]
	cmp r0, #1
	bne _080BB0E8
	cmp r5, #0
	beq _080BB0E4
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BB0E4:
	adds r5, #0x10
	b _080BB10A
_080BB0E8:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080BB108
_080BB0F0:
	cmp r2, #0
	beq _080BB100
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BB100:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BB0F0
_080BB108:
	adds r5, r2, #0
_080BB10A:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BB11A
_080BB114:
	adds r1, #0x10
	cmp r1, r2
	bne _080BB114
_080BB11A:
	cmp r0, #0
	beq _080BB122
	bl sub_80D0260
_080BB122:
	ldr r0, [sp, #0xec]
	add r0, r8
	ldr r7, [sp, #0xec]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080BB12E:
	mov r0, sb
	bl sub_8008910
	adds r6, r0, #0
	ldr r0, [sp, #0xc0]
	add r0, sb
	ldr r4, _080BB18C @ =0x000007EC
	adds r0, r0, r4
	ldr r5, [r0]
	ldr r0, [sp, #0xc4]
	ldr r1, [r0, #4]
	bl sub_80074C0
	adds r2, r0, #0
	ldr r1, [sp, #0xc0]
	add r1, sb
	adds r1, r1, r4
	ldr r0, [r1]
	movs r3, #0
	cmp r0, #0
	beq _080BB15A
	ldrh r3, [r1, #4]
_080BB15A:
	lsls r2, r2, #5
	ldr r1, _080BB190 @ =0x05000200
	adds r2, r2, r1
	add r0, sp, #0x40
	adds r1, r5, #0
	bl sub_8008F0C
	ldr r2, [sp, #0xb8]
	mov sl, r2
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BB194
	cmp r1, #0
	beq _080BB184
	adds r0, r1, #0
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080BB184:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080BB256
	.align 2, 0
_080BB18C: .4byte 0x000007EC
_080BB190: .4byte 0x05000200
_080BB194:
	str r1, [sp, #0xe8]
	movs r0, #1
	str r0, [sp, #0x6c]
	ldr r0, [r6]
	adds r7, r1, #0
	subs r0, r7, r0
	asrs r4, r0, #4
	str r4, [sp, #0x68]
	add r1, sp, #0x6c
	add r0, sp, #0x68
	cmp r4, #1
	bhs _080BB1AE
	adds r0, r1, #0
_080BB1AE:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BB1CC
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080BB1D0
	mov r0, r8
	bl sub_80D3BC0
	b _080BB1D0
_080BB1CC:
	movs r0, #0
	mov r8, r0
_080BB1D0:
	adds r5, r0, #0
	str r5, [sp, #0xec]
	ldr r2, [r6]
	adds r3, r5, #0
	b _080BB1EE
_080BB1DA:
	cmp r3, #0
	beq _080BB1EA
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BB1EA:
	adds r2, #0x10
	adds r3, #0x10
_080BB1EE:
	ldr r0, [sp, #0xe8]
	cmp r2, r0
	bne _080BB1DA
	adds r5, r3, #0
	ldr r0, [sp, #0x6c]
	cmp r0, #1
	bne _080BB210
	cmp r5, #0
	beq _080BB20C
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BB20C:
	adds r5, #0x10
	b _080BB232
_080BB210:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080BB230
_080BB218:
	cmp r2, #0
	beq _080BB228
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BB228:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BB218
_080BB230:
	adds r5, r2, #0
_080BB232:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BB242
_080BB23C:
	adds r1, #0x10
	cmp r1, r2
	bne _080BB23C
_080BB242:
	cmp r0, #0
	beq _080BB24A
	bl sub_80D0260
_080BB24A:
	ldr r0, [sp, #0xec]
	add r0, r8
	ldr r7, [sp, #0xec]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080BB256:
	mov r0, sb
	bl sub_8008920
	adds r5, r0, #0
	ldr r0, [sp, #0xc0]
	add r0, sb
	ldr r1, _080BB36C @ =0x000007DC
	adds r0, r0, r1
	ldr r4, [r0]
	ldr r3, [sp, #0xc0]
	add r3, sb
	adds r3, r3, r1
	ldr r0, [r3]
	movs r2, #0
	cmp r0, #0
	beq _080BB278
	ldrh r2, [r3, #4]
_080BB278:
	ldr r0, [sp, #0xcc]
	ldr r3, [r0, #0x14]
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_805E99C
	ldr r1, [sp, #0xc0]
	adds r1, #0x20
	str r1, [sp, #0xc0]
	ldr r2, [sp, #0xc4]
	adds r2, #8
	str r2, [sp, #0xc4]
	ldr r3, [sp, #0xc8]
	movs r4, #0xf0
	lsls r4, r4, #1
	adds r3, r3, r4
	str r3, [sp, #0xc8]
	ldr r5, [sp, #0xcc]
	adds r5, #4
	str r5, [sp, #0xcc]
	ldr r7, [sp, #0xd0]
	adds r7, #0x20
	str r7, [sp, #0xd0]
	ldr r0, [sp, #0x94]
	adds r0, #1
	str r0, [sp, #0x94]
	cmp r0, #4
	bgt _080BB2B2
	b _080BAFC4
_080BB2B2:
	movs r1, #0
	str r1, [sp, #0x94]
	ldr r2, [sp, #0xb8]
	str r2, [sp, #0x9c]
_080BB2BA:
	ldr r3, [sp, #0x94]
	lsls r3, r3, #5
	mov r8, r3
	mov r5, r8
	add r5, sb
	ldr r7, _080BB370 @ =0x0000088C
	adds r4, r5, r7
	ldr r0, [sp, #0x94]
	lsls r6, r0, #2
	mov r1, sb
	adds r0, r6, r1
	ldr r2, _080BB374 @ =0x0000087C
	adds r0, r0, r2
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x40
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	ldr r0, [sp, #0x9c]
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	ldr r0, [sp, #0x9c]
	ldm r0!, {r1, r3, r7}
	stm r4!, {r1, r3, r7}
	ldm r0!, {r2, r3, r7}
	stm r4!, {r2, r3, r7}
	ldm r0!, {r1, r2}
	stm r4!, {r1, r2}
	mov r0, sb
	bl sub_8008910
	adds r2, r0, #0
	ldr r3, _080BB378 @ =0x00000894
	adds r5, r5, r3
	ldr r0, [r5]
	adds r1, r0, #0
	movs r3, #0
	str r6, [sp, #0xa8]
	mov r4, r8
	str r4, [sp, #0xb4]
	cmp r1, #0
	beq _080BB322
	ldrh r3, [r5, #4]
_080BB322:
	adds r6, r2, #0
	ldr r5, [sp, #0x94]
	lsls r0, r5, #4
	subs r0, r0, r5
	ldr r7, [sp, #0x90]
	adds r2, r0, r7
	lsls r0, r2, #5
	ldr r4, _080BB37C @ =0x06010960
	adds r2, r0, r4
	ldr r0, [sp, #0x9c]
	bl sub_8008F0C
	ldr r5, [sp, #0x9c]
	mov sl, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BB380
	cmp r1, #0
	beq _080BB356
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BB356:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	ldr r4, [sp, #0x94]
	lsls r4, r4, #3
	str r4, [sp, #0xac]
	ldr r5, [sp, #0x94]
	adds r5, #1
	str r5, [sp, #0xa4]
	b _080BB452
	.align 2, 0
_080BB36C: .4byte 0x000007DC
_080BB370: .4byte 0x0000088C
_080BB374: .4byte 0x0000087C
_080BB378: .4byte 0x00000894
_080BB37C: .4byte 0x06010960
_080BB380:
	str r1, [sp, #0xe8]
	movs r0, #1
	str r0, [sp, #0x74]
	ldr r0, [r6]
	adds r7, r1, #0
	subs r0, r7, r0
	asrs r4, r0, #4
	str r4, [sp, #0x70]
	add r1, sp, #0x74
	add r0, sp, #0x70
	cmp r4, #1
	bhs _080BB39A
	adds r0, r1, #0
_080BB39A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BB3B8
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080BB3BC
	mov r0, r8
	bl sub_80D3BC0
	b _080BB3BC
_080BB3B8:
	movs r0, #0
	mov r8, r0
_080BB3BC:
	adds r5, r0, #0
	str r5, [sp, #0xec]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r0, [sp, #0x94]
	lsls r0, r0, #3
	str r0, [sp, #0xac]
	ldr r1, [sp, #0x94]
	adds r1, #1
	str r1, [sp, #0xa4]
	ldr r4, [sp, #0xe8]
	cmp r2, r4
	beq _080BB3F0
_080BB3D6:
	cmp r3, #0
	beq _080BB3E6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BB3E6:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0xe8]
	cmp r2, r5
	bne _080BB3D6
_080BB3F0:
	adds r5, r3, #0
	ldr r0, [sp, #0x74]
	cmp r0, #1
	bne _080BB40C
	cmp r5, #0
	beq _080BB408
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BB408:
	adds r5, #0x10
	b _080BB42E
_080BB40C:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080BB42C
_080BB414:
	cmp r2, #0
	beq _080BB424
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BB424:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BB414
_080BB42C:
	adds r5, r2, #0
_080BB42E:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BB43E
_080BB438:
	adds r1, #0x10
	cmp r1, r2
	bne _080BB438
_080BB43E:
	cmp r0, #0
	beq _080BB446
	bl sub_80D0260
_080BB446:
	ldr r0, [sp, #0xec]
	add r0, r8
	ldr r1, [sp, #0xec]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080BB452:
	mov r0, sb
	bl sub_8008910
	adds r6, r0, #0
	ldr r0, [sp, #0xb4]
	add r0, sb
	ldr r4, _080BB4B8 @ =0x0000089C
	adds r0, r0, r4
	ldr r5, [r0]
	ldr r0, [sp, #0xac]
	add r0, sb
	ldr r2, _080BB4BC @ =0x00000764
	adds r0, r0, r2
	ldr r1, [r0, #4]
	bl sub_80074C0
	adds r2, r0, #0
	ldr r1, [sp, #0xb4]
	add r1, sb
	adds r1, r1, r4
	ldr r0, [r1]
	movs r3, #0
	cmp r0, #0
	beq _080BB484
	ldrh r3, [r1, #4]
_080BB484:
	lsls r2, r2, #5
	ldr r4, _080BB4C0 @ =0x05000200
	adds r2, r2, r4
	add r0, sp, #0x40
	adds r1, r5, #0
	bl sub_8008F0C
	ldr r5, [sp, #0xb8]
	mov sl, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BB4C4
	cmp r1, #0
	beq _080BB4AE
	adds r0, r1, #0
	adds r1, r5, #0
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BB4AE:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080BB58A
	.align 2, 0
_080BB4B8: .4byte 0x0000089C
_080BB4BC: .4byte 0x00000764
_080BB4C0: .4byte 0x05000200
_080BB4C4:
	str r1, [sp, #0xe8]
	movs r0, #1
	str r0, [sp, #0x7c]
	ldr r0, [r6]
	adds r4, r1, #0
	subs r0, r4, r0
	asrs r4, r0, #4
	str r4, [sp, #0x78]
	add r1, sp, #0x7c
	add r0, sp, #0x78
	cmp r4, #1
	bhs _080BB4DE
	adds r0, r1, #0
_080BB4DE:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BB4FC
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080BB500
	mov r0, r8
	bl sub_80D3BC0
	b _080BB500
_080BB4FC:
	movs r0, #0
	mov r8, r0
_080BB500:
	adds r5, r0, #0
	str r5, [sp, #0xec]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r5, [sp, #0xe8]
	cmp r2, r5
	beq _080BB528
_080BB50E:
	cmp r3, #0
	beq _080BB51E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BB51E:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0xe8]
	cmp r2, r7
	bne _080BB50E
_080BB528:
	adds r5, r3, #0
	ldr r0, [sp, #0x7c]
	cmp r0, #1
	bne _080BB544
	cmp r5, #0
	beq _080BB540
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BB540:
	adds r5, #0x10
	b _080BB566
_080BB544:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080BB564
_080BB54C:
	cmp r2, #0
	beq _080BB55C
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BB55C:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BB54C
_080BB564:
	adds r5, r2, #0
_080BB566:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BB576
_080BB570:
	adds r1, #0x10
	cmp r1, r2
	bne _080BB570
_080BB576:
	cmp r0, #0
	beq _080BB57E
	bl sub_80D0260
_080BB57E:
	ldr r0, [sp, #0xec]
	add r0, r8
	ldr r7, [sp, #0xec]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080BB58A:
	mov r0, sb
	bl sub_8008920
	adds r5, r0, #0
	ldr r0, [sp, #0xb4]
	add r0, sb
	ldr r1, _080BB648 @ =0x0000088C
	adds r0, r0, r1
	ldr r4, [r0]
	ldr r3, [sp, #0xb4]
	add r3, sb
	adds r3, r3, r1
	ldr r0, [r3]
	movs r2, #0
	cmp r0, #0
	beq _080BB5AC
	ldrh r2, [r3, #4]
_080BB5AC:
	ldr r0, [sp, #0xa8]
	add r0, sb
	ldr r1, _080BB64C @ =0x00000884
	adds r0, r0, r1
	ldr r3, [r0]
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_805E99C
	ldr r2, [sp, #0xa4]
	str r2, [sp, #0x94]
	cmp r2, #1
	bgt _080BB5C8
	b _080BB2BA
_080BB5C8:
	ldr r4, _080BB650 @ =0x000008D4
	add r4, sb
	ldr r0, _080BB654 @ =0x000008CC
	add r0, sb
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x40
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	ldr r0, [sp, #0xb8]
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	ldr r0, [sp, #0xb8]
	ldm r0!, {r3, r5, r7}
	stm r4!, {r3, r5, r7}
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r5, r7}
	stm r4!, {r5, r7}
	mov r0, sb
	bl sub_8008910
	ldr r2, _080BB658 @ =0x000008DC
	add r2, sb
	ldr r1, [r2]
	movs r3, #0
	cmp r1, #0
	beq _080BB614
	ldrh r3, [r2, #4]
_080BB614:
	adds r6, r0, #0
	ldr r0, [sp, #0xb0]
	ldr r4, _080BB65C @ =0x06010D20
	adds r2, r0, r4
	ldr r0, [sp, #0xb8]
	bl sub_8008F0C
	ldr r5, [sp, #0xb8]
	mov sl, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BB660
	cmp r1, #0
	beq _080BB63E
	adds r0, r1, #0
	adds r1, r5, #0
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BB63E:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080BB728
	.align 2, 0
_080BB648: .4byte 0x0000088C
_080BB64C: .4byte 0x00000884
_080BB650: .4byte 0x000008D4
_080BB654: .4byte 0x000008CC
_080BB658: .4byte 0x000008DC
_080BB65C: .4byte 0x06010D20
_080BB660:
	str r1, [sp, #0xe8]
	movs r0, #1
	add r1, sp, #0x84
	str r0, [r1]
	ldr r0, [r6]
	ldr r4, [sp, #0xe8]
	subs r0, r4, r0
	asrs r4, r0, #4
	add r0, sp, #0x80
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080BB67C
	adds r0, r1, #0
_080BB67C:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BB69A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080BB69E
	mov r0, r8
	bl sub_80D3BC0
	b _080BB69E
_080BB69A:
	movs r0, #0
	mov r8, r0
_080BB69E:
	adds r5, r0, #0
	str r5, [sp, #0xec]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r5, [sp, #0xe8]
	cmp r2, r5
	beq _080BB6C6
_080BB6AC:
	cmp r3, #0
	beq _080BB6BC
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BB6BC:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0xe8]
	cmp r2, r7
	bne _080BB6AC
_080BB6C6:
	adds r5, r3, #0
	ldr r1, [sp, #0x84]
	cmp r1, #1
	bne _080BB6E2
	cmp r5, #0
	beq _080BB6DE
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BB6DE:
	adds r5, #0x10
	b _080BB704
_080BB6E2:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080BB702
_080BB6EA:
	cmp r2, #0
	beq _080BB6FA
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BB6FA:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BB6EA
_080BB702:
	adds r5, r2, #0
_080BB704:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BB714
_080BB70E:
	adds r1, #0x10
	cmp r1, r2
	bne _080BB70E
_080BB714:
	cmp r0, #0
	beq _080BB71C
	bl sub_80D0260
_080BB71C:
	ldr r0, [sp, #0xec]
	add r0, r8
	ldr r7, [sp, #0xec]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080BB728:
	mov r0, sb
	bl sub_8008910
	adds r5, r0, #0
	ldr r4, _080BB780 @ =0x000008E4
	add r4, sb
	ldr r7, [r4]
	ldr r0, _080BB784 @ =0x00000774
	add r0, sb
	ldr r1, [r0, #4]
	bl sub_80074C0
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080BB74C
	ldrh r3, [r4, #4]
_080BB74C:
	adds r6, r5, #0
	lsls r2, r2, #5
	ldr r0, _080BB788 @ =0x05000200
	adds r2, r2, r0
	add r0, sp, #0x40
	adds r1, r7, #0
	bl sub_8008F0C
	ldr r1, [sp, #0xb8]
	mov r8, r1
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BB78C
	cmp r1, #0
	beq _080BB778
	adds r0, r1, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BB778:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080BB854
	.align 2, 0
_080BB780: .4byte 0x000008E4
_080BB784: .4byte 0x00000774
_080BB788: .4byte 0x05000200
_080BB78C:
	str r1, [sp, #0xe8]
	movs r0, #1
	add r1, sp, #0x8c
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0xe8]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x88
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080BB7A8
	adds r0, r1, #0
_080BB7A8:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BB7C6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sl, r4
	cmp r0, #0
	bne _080BB7CA
	mov r0, sl
	bl sub_80D3BC0
	b _080BB7CA
_080BB7C6:
	movs r0, #0
	mov sl, r0
_080BB7CA:
	adds r5, r0, #0
	str r5, [sp, #0xec]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0xe8]
	cmp r2, r7
	beq _080BB7F2
_080BB7D8:
	cmp r3, #0
	beq _080BB7E8
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BB7E8:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xe8]
	cmp r2, r0
	bne _080BB7D8
_080BB7F2:
	adds r5, r3, #0
	ldr r1, [sp, #0x8c]
	cmp r1, #1
	bne _080BB80E
	cmp r5, #0
	beq _080BB80A
	adds r0, r5, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BB80A:
	adds r5, #0x10
	b _080BB830
_080BB80E:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080BB82E
_080BB816:
	cmp r2, #0
	beq _080BB826
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BB826:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BB816
_080BB82E:
	adds r5, r2, #0
_080BB830:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BB840
_080BB83A:
	adds r1, #0x10
	cmp r1, r2
	bne _080BB83A
_080BB840:
	cmp r0, #0
	beq _080BB848
	bl sub_80D0260
_080BB848:
	ldr r0, [sp, #0xec]
	add r0, sl
	ldr r7, [sp, #0xec]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080BB854:
	mov r0, sb
	bl sub_8008920
	adds r4, r0, #0
	ldr r3, _080BB88C @ =0x000008D4
	add r3, sb
	ldr r0, [r3]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080BB86C
	ldrh r2, [r3, #4]
_080BB86C:
	movs r0, #0x8d
	lsls r0, r0, #4
	add r0, sb
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
	add sp, #0xf0
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080BB88C: .4byte 0x000008D4

	thumb_func_start sub_80BB890
sub_80BB890: @ 0x080BB890
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0
	cmp r1, #1
	beq _080BB8B4
	cmp r1, #1
	bgt _080BB8A4
	cmp r1, #0
	beq _080BB8AA
	b _080BB8E0
_080BB8A4:
	cmp r1, #2
	beq _080BB8D8
	b _080BB8E0
_080BB8AA:
	ldr r1, _080BB8B0 @ =gUnknown_08107D3C
	lsls r0, r2, #1
	b _080BB8DC
	.align 2, 0
_080BB8B0: .4byte gUnknown_08107D3C
_080BB8B4:
	cmp r2, #0
	beq _080BB8C0
	ldr r1, _080BB8D0 @ =0x00000B18
	adds r0, r4, r1
	ldr r0, [r0]
	adds r2, r2, r0
_080BB8C0:
	ldr r0, _080BB8D4 @ =gUnknown_08107D46
	lsls r1, r3, #1
	lsls r2, r2, #3
	adds r1, r1, r2
	adds r1, r1, r0
	ldrh r0, [r1]
	b _080BB8E0
	.align 2, 0
_080BB8D0: .4byte 0x00000B18
_080BB8D4: .4byte gUnknown_08107D46
_080BB8D8:
	ldr r1, _080BB8E8 @ =gUnknown_08107D66
	lsls r0, r3, #1
_080BB8DC:
	adds r0, r0, r1
	ldrh r0, [r0]
_080BB8E0:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080BB8E8: .4byte gUnknown_08107D66

	thumb_func_start sub_80BB8EC
sub_80BB8EC: @ 0x080BB8EC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x84
	mov r8, r0
	str r1, [sp, #0x50]
	movs r0, #0
	str r0, [sp, #0x54]
	movs r1, #0
	str r1, [sp, #0x68]
	ldr r2, _080BB9A4 @ =0x0000073C
	add r2, r8
	str r2, [sp, #0x6c]
	ldr r3, [sp, #0x50]
	str r3, [sp, #0x70]
	ldr r4, _080BB9A8 @ =0x000007B4
	add r4, r8
	str r4, [sp, #0x74]
	ldr r5, _080BB9AC @ =0x000007DC
	add r5, r8
	str r5, [sp, #0x78]
_080BB91A:
	ldr r7, [sp, #0x74]
	ldr r0, [r7]
	bl sub_805E8F0
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080BB92A
	b _080BBBA6
_080BB92A:
	ldr r0, [r7]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sp
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	mov r0, sp
	mov r1, sp
	movs r2, #0x20
	bl sub_80D3994
	ldr r1, [sp, #0x78]
	mov r0, sp
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r5, r7}
	stm r1!, {r2, r5, r7}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	mov r0, r8
	bl sub_8008910
	adds r2, r0, #0
	ldr r5, [sp, #0x78]
	ldr r0, [r5, #8]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080BB972
	ldrh r3, [r5, #0xc]
_080BB972:
	adds r6, r2, #0
	ldr r7, [sp, #0x70]
	lsls r2, r7, #5
	ldr r0, _080BB9B0 @ =0x06010000
	adds r2, r2, r0
	mov r0, sp
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BB9B4
	cmp r1, #0
	beq _080BB99C
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BB99C:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080BBA7A
	.align 2, 0
_080BB9A4: .4byte 0x0000073C
_080BB9A8: .4byte 0x000007B4
_080BB9AC: .4byte 0x000007DC
_080BB9B0: .4byte 0x06010000
_080BB9B4:
	str r1, [sp, #0x7c]
	movs r0, #1
	str r0, [sp, #0x24]
	ldr r0, [r6]
	adds r5, r1, #0
	subs r0, r5, r0
	asrs r4, r0, #4
	str r4, [sp, #0x20]
	add r1, sp, #0x24
	add r0, sp, #0x20
	cmp r4, #1
	bhs _080BB9CE
	adds r0, r1, #0
_080BB9CE:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BB9EC
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080BB9F0
	mov r0, sb
	bl sub_80D3BC0
	b _080BB9F0
_080BB9EC:
	movs r0, #0
	mov sb, r0
_080BB9F0:
	adds r5, r0, #0
	str r5, [sp, #0x80]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x7c]
	cmp r2, r7
	beq _080BBA18
_080BB9FE:
	cmp r3, #0
	beq _080BBA0E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BBA0E:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x7c]
	cmp r2, r0
	bne _080BB9FE
_080BBA18:
	adds r5, r3, #0
	ldr r0, [sp, #0x24]
	cmp r0, #1
	bne _080BBA34
	cmp r5, #0
	beq _080BBA30
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BBA30:
	adds r5, #0x10
	b _080BBA56
_080BBA34:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080BBA54
_080BBA3C:
	cmp r2, #0
	beq _080BBA4C
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BBA4C:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BBA3C
_080BBA54:
	adds r5, r2, #0
_080BBA56:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BBA66
_080BBA60:
	adds r1, #0x10
	cmp r1, r2
	bne _080BBA60
_080BBA66:
	cmp r0, #0
	beq _080BBA6E
	bl sub_80D0260
_080BBA6E:
	ldr r0, [sp, #0x80]
	add r0, sb
	ldr r7, [sp, #0x80]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080BBA7A:
	mov r0, r8
	bl sub_8008910
	adds r6, r0, #0
	ldr r0, [sp, #0x68]
	add r0, r8
	ldr r4, _080BBAD8 @ =0x000007EC
	adds r0, r0, r4
	ldr r5, [r0]
	ldr r0, [sp, #0x6c]
	ldr r1, [r0, #4]
	bl sub_80074C0
	adds r2, r0, #0
	ldr r1, [sp, #0x68]
	add r1, r8
	adds r1, r1, r4
	ldr r0, [r1]
	movs r3, #0
	cmp r0, #0
	beq _080BBAA6
	ldrh r3, [r1, #4]
_080BBAA6:
	lsls r2, r2, #5
	ldr r1, _080BBADC @ =0x05000200
	adds r2, r2, r1
	mov r0, sp
	adds r1, r5, #0
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BBAE0
	cmp r1, #0
	beq _080BBACE
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BBACE:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080BBBA6
	.align 2, 0
_080BBAD8: .4byte 0x000007EC
_080BBADC: .4byte 0x05000200
_080BBAE0:
	str r1, [sp, #0x7c]
	movs r0, #1
	str r0, [sp, #0x2c]
	ldr r0, [r6]
	adds r5, r1, #0
	subs r0, r5, r0
	asrs r4, r0, #4
	str r4, [sp, #0x28]
	add r1, sp, #0x2c
	add r0, sp, #0x28
	cmp r4, #1
	bhs _080BBAFA
	adds r0, r1, #0
_080BBAFA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BBB18
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080BBB1C
	mov r0, sb
	bl sub_80D3BC0
	b _080BBB1C
_080BBB18:
	movs r0, #0
	mov sb, r0
_080BBB1C:
	adds r5, r0, #0
	str r5, [sp, #0x80]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x7c]
	cmp r2, r7
	beq _080BBB44
_080BBB2A:
	cmp r3, #0
	beq _080BBB3A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BBB3A:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x7c]
	cmp r2, r0
	bne _080BBB2A
_080BBB44:
	adds r5, r3, #0
	ldr r0, [sp, #0x2c]
	cmp r0, #1
	bne _080BBB60
	cmp r5, #0
	beq _080BBB5C
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BBB5C:
	adds r5, #0x10
	b _080BBB82
_080BBB60:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080BBB80
_080BBB68:
	cmp r2, #0
	beq _080BBB78
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BBB78:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BBB68
_080BBB80:
	adds r5, r2, #0
_080BBB82:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BBB92
_080BBB8C:
	adds r1, #0x10
	cmp r1, r2
	bne _080BBB8C
_080BBB92:
	cmp r0, #0
	beq _080BBB9A
	bl sub_80D0260
_080BBB9A:
	ldr r0, [sp, #0x80]
	add r0, sb
	ldr r7, [sp, #0x80]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080BBBA6:
	mov r0, r8
	bl sub_8008920
	adds r5, r0, #0
	ldr r0, [sp, #0x68]
	add r0, r8
	ldr r1, _080BBCF8 @ =0x000007DC
	adds r0, r0, r1
	ldr r4, [r0]
	ldr r3, [sp, #0x68]
	add r3, r8
	adds r3, r3, r1
	ldr r0, [r3]
	movs r2, #0
	cmp r0, #0
	beq _080BBBC8
	ldrh r2, [r3, #4]
_080BBBC8:
	ldr r0, [sp, #0x74]
	ldr r3, [r0, #0x14]
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_805E99C
	ldr r1, [sp, #0x68]
	adds r1, #0x20
	str r1, [sp, #0x68]
	ldr r2, [sp, #0x6c]
	adds r2, #8
	str r2, [sp, #0x6c]
	ldr r3, [sp, #0x70]
	adds r3, #0xf
	str r3, [sp, #0x70]
	ldr r4, [sp, #0x74]
	adds r4, #4
	str r4, [sp, #0x74]
	ldr r5, [sp, #0x78]
	adds r5, #0x20
	str r5, [sp, #0x78]
	ldr r7, [sp, #0x54]
	adds r7, #1
	str r7, [sp, #0x54]
	cmp r7, #4
	bgt _080BBBFE
	b _080BB91A
_080BBBFE:
	movs r0, #0
	str r0, [sp, #0x54]
_080BBC02:
	ldr r2, [sp, #0x54]
	lsls r1, r2, #2
	ldr r0, _080BBCFC @ =0x00000B48
	add r0, r8
	adds r6, r0, r1
	movs r0, #0xb4
	lsls r0, r0, #4
	add r0, r8
	adds r5, r0, r1
	ldr r0, [r6]
	ldr r3, [r5]
	str r1, [sp, #0x5c]
	cmp r0, r3
	beq _080BBC40
	adds r0, r1, #0
	add r0, r8
	ldr r4, _080BBD00 @ =0x0000087C
	adds r0, r0, r4
	ldr r4, [r0]
	mov r0, r8
	movs r1, #1
	bl sub_80BB890
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_805E860
	ldr r0, [r5]
	str r0, [r6]
_080BBC40:
	ldr r0, [sp, #0x5c]
	add r0, r8
	ldr r5, _080BBD00 @ =0x0000087C
	adds r0, r0, r5
	ldr r0, [r0]
	bl sub_805E8F0
	lsls r0, r0, #0x1e
	ldr r7, [sp, #0x54]
	lsls r7, r7, #5
	str r7, [sp, #0x64]
	ldr r1, [sp, #0x54]
	adds r1, #1
	str r1, [sp, #0x58]
	ldr r1, [sp, #0x5c]
	add r1, r8
	cmp r0, #0
	blt _080BBC66
	b _080BBF12
_080BBC66:
	adds r5, r7, #0
	add r5, r8
	ldr r2, _080BBD04 @ =0x0000088C
	adds r4, r5, r2
	ldr r3, _080BBD00 @ =0x0000087C
	adds r0, r1, r3
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sp
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	mov r0, sp
	mov r1, sp
	movs r2, #0x20
	bl sub_80D3994
	mov r0, sp
	ldm r0!, {r1, r2, r7}
	stm r4!, {r1, r2, r7}
	ldm r0!, {r1, r3, r7}
	stm r4!, {r1, r3, r7}
	ldm r0!, {r2, r3}
	stm r4!, {r2, r3}
	mov r0, r8
	bl sub_8008910
	ldr r4, _080BBD08 @ =0x00000894
	adds r5, r5, r4
	ldr r1, [r5]
	movs r3, #0
	cmp r1, #0
	beq _080BBCB6
	ldrh r3, [r5, #4]
_080BBCB6:
	adds r6, r0, #0
	ldr r5, [sp, #0x54]
	lsls r0, r5, #4
	subs r0, r0, r5
	ldr r7, [sp, #0x50]
	adds r2, r0, r7
	lsls r0, r2, #5
	ldr r4, _080BBD0C @ =0x06010960
	adds r2, r0, r4
	mov r0, sp
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BBD10
	cmp r1, #0
	beq _080BBCE8
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BBCE8:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	ldr r3, [sp, #0x54]
	lsls r3, r3, #3
	str r3, [sp, #0x60]
	b _080BBDDE
	.align 2, 0
_080BBCF8: .4byte 0x000007DC
_080BBCFC: .4byte 0x00000B48
_080BBD00: .4byte 0x0000087C
_080BBD04: .4byte 0x0000088C
_080BBD08: .4byte 0x00000894
_080BBD0C: .4byte 0x06010960
_080BBD10:
	str r1, [sp, #0x7c]
	movs r0, #1
	str r0, [sp, #0x34]
	ldr r0, [r6]
	adds r4, r1, #0
	subs r0, r4, r0
	asrs r4, r0, #4
	str r4, [sp, #0x30]
	add r1, sp, #0x34
	add r0, sp, #0x30
	cmp r4, #1
	bhs _080BBD2A
	adds r0, r1, #0
_080BBD2A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BBD48
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080BBD4C
	mov r0, sb
	bl sub_80D3BC0
	b _080BBD4C
_080BBD48:
	movs r0, #0
	mov sb, r0
_080BBD4C:
	adds r5, r0, #0
	str r5, [sp, #0x80]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r5, [sp, #0x54]
	lsls r5, r5, #3
	str r5, [sp, #0x60]
	ldr r7, [sp, #0x54]
	adds r7, #1
	str r7, [sp, #0x58]
	b _080BBD76
_080BBD62:
	cmp r3, #0
	beq _080BBD72
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BBD72:
	adds r2, #0x10
	adds r3, #0x10
_080BBD76:
	ldr r0, [sp, #0x7c]
	cmp r2, r0
	bne _080BBD62
	adds r5, r3, #0
	ldr r0, [sp, #0x34]
	cmp r0, #1
	bne _080BBD98
	cmp r5, #0
	beq _080BBD94
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BBD94:
	adds r5, #0x10
	b _080BBDBA
_080BBD98:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080BBDB8
_080BBDA0:
	cmp r2, #0
	beq _080BBDB0
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BBDB0:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BBDA0
_080BBDB8:
	adds r5, r2, #0
_080BBDBA:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BBDCA
_080BBDC4:
	adds r1, #0x10
	cmp r1, r2
	bne _080BBDC4
_080BBDCA:
	cmp r0, #0
	beq _080BBDD2
	bl sub_80D0260
_080BBDD2:
	ldr r0, [sp, #0x80]
	add r0, sb
	ldr r7, [sp, #0x80]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080BBDDE:
	mov r0, r8
	bl sub_8008910
	adds r6, r0, #0
	ldr r0, [sp, #0x64]
	add r0, r8
	ldr r4, _080BBE40 @ =0x0000089C
	adds r0, r0, r4
	ldr r5, [r0]
	ldr r0, [sp, #0x60]
	add r0, r8
	ldr r1, _080BBE44 @ =0x00000764
	adds r0, r0, r1
	ldr r1, [r0, #4]
	bl sub_80074C0
	adds r2, r0, #0
	ldr r1, [sp, #0x64]
	add r1, r8
	adds r1, r1, r4
	ldr r0, [r1]
	movs r3, #0
	cmp r0, #0
	beq _080BBE10
	ldrh r3, [r1, #4]
_080BBE10:
	lsls r2, r2, #5
	ldr r4, _080BBE48 @ =0x05000200
	adds r2, r2, r4
	mov r0, sp
	adds r1, r5, #0
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BBE4C
	cmp r1, #0
	beq _080BBE38
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BBE38:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080BBF12
	.align 2, 0
_080BBE40: .4byte 0x0000089C
_080BBE44: .4byte 0x00000764
_080BBE48: .4byte 0x05000200
_080BBE4C:
	str r1, [sp, #0x7c]
	movs r0, #1
	str r0, [sp, #0x3c]
	ldr r0, [r6]
	adds r3, r1, #0
	subs r0, r3, r0
	asrs r4, r0, #4
	str r4, [sp, #0x38]
	add r1, sp, #0x3c
	add r0, sp, #0x38
	cmp r4, #1
	bhs _080BBE66
	adds r0, r1, #0
_080BBE66:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BBE84
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080BBE88
	mov r0, sb
	bl sub_80D3BC0
	b _080BBE88
_080BBE84:
	movs r0, #0
	mov sb, r0
_080BBE88:
	adds r5, r0, #0
	str r5, [sp, #0x80]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x7c]
	cmp r2, r4
	beq _080BBEB0
_080BBE96:
	cmp r3, #0
	beq _080BBEA6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BBEA6:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x7c]
	cmp r2, r5
	bne _080BBE96
_080BBEB0:
	adds r5, r3, #0
	ldr r0, [sp, #0x3c]
	cmp r0, #1
	bne _080BBECC
	cmp r5, #0
	beq _080BBEC8
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BBEC8:
	adds r5, #0x10
	b _080BBEEE
_080BBECC:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080BBEEC
_080BBED4:
	cmp r2, #0
	beq _080BBEE4
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BBEE4:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BBED4
_080BBEEC:
	adds r5, r2, #0
_080BBEEE:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BBEFE
_080BBEF8:
	adds r1, #0x10
	cmp r1, r2
	bne _080BBEF8
_080BBEFE:
	cmp r0, #0
	beq _080BBF06
	bl sub_80D0260
_080BBF06:
	ldr r0, [sp, #0x80]
	add r0, sb
	ldr r1, [sp, #0x80]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080BBF12:
	mov r0, r8
	bl sub_8008920
	adds r6, r0, #0
	ldr r0, [sp, #0x64]
	add r0, r8
	ldr r1, _080BC010 @ =0x0000088C
	adds r0, r0, r1
	ldr r4, [r0]
	ldr r5, [sp, #0x64]
	add r5, r8
	adds r5, r5, r1
	ldr r0, [r5]
	movs r2, #0
	cmp r0, #0
	beq _080BBF34
	ldrh r2, [r5, #4]
_080BBF34:
	ldr r0, [sp, #0x5c]
	add r0, r8
	ldr r3, _080BC014 @ =0x00000884
	adds r0, r0, r3
	ldr r3, [r0]
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_805E99C
	ldr r4, [sp, #0x58]
	str r4, [sp, #0x54]
	cmp r4, #1
	bgt _080BBF50
	b _080BBC02
_080BBF50:
	ldr r6, _080BC018 @ =0x00000B54
	add r6, r8
	movs r5, #0xb5
	lsls r5, r5, #4
	add r5, r8
	ldr r0, [r6]
	ldr r3, [r5]
	cmp r0, r3
	beq _080BBF82
	ldr r0, _080BC01C @ =0x000008CC
	add r0, r8
	ldr r4, [r0]
	mov r0, r8
	movs r1, #2
	movs r2, #0
	bl sub_80BB890
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_805E860
	ldr r0, [r5]
	str r0, [r6]
_080BBF82:
	ldr r5, _080BC01C @ =0x000008CC
	add r5, r8
	ldr r0, [r5]
	bl sub_805E8F0
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080BBF94
	b _080BC21A
_080BBF94:
	ldr r4, _080BC020 @ =0x000008D4
	add r4, r8
	ldr r0, [r5]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sp
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	mov r0, sp
	mov r1, sp
	movs r2, #0x20
	bl sub_80D3994
	mov r0, sp
	ldm r0!, {r1, r5, r7}
	stm r4!, {r1, r5, r7}
	ldm r0!, {r2, r3, r5}
	stm r4!, {r2, r3, r5}
	ldm r0!, {r1, r7}
	stm r4!, {r1, r7}
	mov r0, r8
	bl sub_8008910
	ldr r2, _080BC024 @ =0x000008DC
	add r2, r8
	ldr r1, [r2]
	movs r3, #0
	cmp r1, #0
	beq _080BBFDC
	ldrh r3, [r2, #4]
_080BBFDC:
	adds r6, r0, #0
	ldr r4, [sp, #0x50]
	lsls r2, r4, #5
	ldr r5, _080BC028 @ =0x06010D20
	adds r2, r2, r5
	mov r0, sp
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BC02C
	cmp r1, #0
	beq _080BC006
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BC006:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080BC0F2
	.align 2, 0
_080BC010: .4byte 0x0000088C
_080BC014: .4byte 0x00000884
_080BC018: .4byte 0x00000B54
_080BC01C: .4byte 0x000008CC
_080BC020: .4byte 0x000008D4
_080BC024: .4byte 0x000008DC
_080BC028: .4byte 0x06010D20
_080BC02C:
	str r1, [sp, #0x7c]
	movs r0, #1
	str r0, [sp, #0x44]
	ldr r0, [r6]
	adds r4, r1, #0
	subs r0, r4, r0
	asrs r4, r0, #4
	str r4, [sp, #0x40]
	add r1, sp, #0x44
	add r0, sp, #0x40
	cmp r4, #1
	bhs _080BC046
	adds r0, r1, #0
_080BC046:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BC064
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080BC068
	mov r0, sb
	bl sub_80D3BC0
	b _080BC068
_080BC064:
	movs r0, #0
	mov sb, r0
_080BC068:
	adds r5, r0, #0
	str r5, [sp, #0x80]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r5, [sp, #0x7c]
	cmp r2, r5
	beq _080BC090
_080BC076:
	cmp r3, #0
	beq _080BC086
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BC086:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0x7c]
	cmp r2, r7
	bne _080BC076
_080BC090:
	adds r5, r3, #0
	ldr r0, [sp, #0x44]
	cmp r0, #1
	bne _080BC0AC
	cmp r5, #0
	beq _080BC0A8
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BC0A8:
	adds r5, #0x10
	b _080BC0CE
_080BC0AC:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080BC0CC
_080BC0B4:
	cmp r2, #0
	beq _080BC0C4
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BC0C4:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BC0B4
_080BC0CC:
	adds r5, r2, #0
_080BC0CE:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BC0DE
_080BC0D8:
	adds r1, #0x10
	cmp r1, r2
	bne _080BC0D8
_080BC0DE:
	cmp r0, #0
	beq _080BC0E6
	bl sub_80D0260
_080BC0E6:
	ldr r0, [sp, #0x80]
	add r0, sb
	ldr r7, [sp, #0x80]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080BC0F2:
	mov r0, r8
	bl sub_8008910
	adds r5, r0, #0
	ldr r4, _080BC148 @ =0x000008E4
	add r4, r8
	ldr r7, [r4]
	ldr r0, _080BC14C @ =0x00000774
	add r0, r8
	ldr r1, [r0, #4]
	bl sub_80074C0
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080BC116
	ldrh r3, [r4, #4]
_080BC116:
	adds r6, r5, #0
	lsls r2, r2, #5
	ldr r0, _080BC150 @ =0x05000200
	adds r2, r2, r0
	mov r0, sp
	adds r1, r7, #0
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BC154
	cmp r1, #0
	beq _080BC140
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BC140:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080BC21A
	.align 2, 0
_080BC148: .4byte 0x000008E4
_080BC14C: .4byte 0x00000774
_080BC150: .4byte 0x05000200
_080BC154:
	str r1, [sp, #0x7c]
	movs r0, #1
	str r0, [sp, #0x4c]
	ldr r0, [r6]
	adds r5, r1, #0
	subs r0, r5, r0
	asrs r4, r0, #4
	str r4, [sp, #0x48]
	add r1, sp, #0x4c
	add r0, sp, #0x48
	cmp r4, #1
	bhs _080BC16E
	adds r0, r1, #0
_080BC16E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BC18C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080BC190
	mov r0, sb
	bl sub_80D3BC0
	b _080BC190
_080BC18C:
	movs r0, #0
	mov sb, r0
_080BC190:
	adds r5, r0, #0
	str r5, [sp, #0x80]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x7c]
	cmp r2, r7
	beq _080BC1B8
_080BC19E:
	cmp r3, #0
	beq _080BC1AE
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BC1AE:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x7c]
	cmp r2, r0
	bne _080BC19E
_080BC1B8:
	adds r5, r3, #0
	ldr r0, [sp, #0x4c]
	cmp r0, #1
	bne _080BC1D4
	cmp r5, #0
	beq _080BC1D0
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BC1D0:
	adds r5, #0x10
	b _080BC1F6
_080BC1D4:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080BC1F4
_080BC1DC:
	cmp r2, #0
	beq _080BC1EC
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BC1EC:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BC1DC
_080BC1F4:
	adds r5, r2, #0
_080BC1F6:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BC206
_080BC200:
	adds r1, #0x10
	cmp r1, r2
	bne _080BC200
_080BC206:
	cmp r0, #0
	beq _080BC20E
	bl sub_80D0260
_080BC20E:
	ldr r0, [sp, #0x80]
	add r0, sb
	ldr r7, [sp, #0x80]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080BC21A:
	mov r0, r8
	bl sub_8008920
	adds r4, r0, #0
	ldr r3, _080BC250 @ =0x000008D4
	add r3, r8
	ldr r0, [r3]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080BC232
	ldrh r2, [r3, #4]
_080BC232:
	movs r0, #0x8d
	lsls r0, r0, #4
	add r0, r8
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
	add sp, #0x84
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080BC250: .4byte 0x000008D4

	thumb_func_start sub_80BC254
sub_80BC254: @ 0x080BC254
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r6, r3, #0
	movs r3, #0
	lsls r4, r1, #1
	cmp r3, r4
	bge _080BC278
	ldr r0, _080BC284 @ =0x00000B35
	adds r5, r7, r0
	lsls r0, r2, #1
	adds r2, r0, r6
_080BC26A:
	adds r1, r5, r3
	ldrb r0, [r2]
	strb r0, [r1]
	adds r2, #1
	adds r3, #1
	cmp r3, r4
	blt _080BC26A
_080BC278:
	ldr r1, _080BC284 @ =0x00000B35
	adds r0, r7, r1
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080BC284: .4byte 0x00000B35

	thumb_func_start sub_80BC288
sub_80BC288: @ 0x080BC288
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x98
	mov r8, r0
	str r1, [sp, #0x88]
	mov r0, sp
	bl sub_8007874
	movs r4, #0
	str r4, [sp, #4]
	add r5, sp, #8
	adds r0, r5, #0
	bl sub_8007874
	str r4, [r5, #4]
	ldr r1, [sp, #4]
	mov r0, sp
	bl sub_8007C28
	mov r0, sp
	movs r1, #2
	bl sub_8007B54
	str r0, [sp, #4]
	ldr r1, [sp, #0xc]
	adds r0, r5, #0
	bl sub_8007C28
	adds r0, r5, #0
	movs r1, #3
	bl sub_8007B54
	str r0, [sp, #0xc]
	add r4, sp, #0x10
	ldr r1, _080BC3C8 @ =gUnknown_08107D6C
	adds r0, r4, #0
	movs r2, #0x40
	bl sub_80D3994
	movs r0, #0x14
	bl sub_80005D4
	ldr r7, _080BC3CC @ =0x0000077C
	add r7, r8
	ldr r1, [r7]
	movs r2, #0x80
	lsls r2, r2, #1
	mov sb, r2
	movs r2, #0
	mov r3, sb
	bl sub_805E824
	adds r5, r0, #0
	ldr r6, _080BC3D0 @ =0x00000AA4
	add r6, r8
	ldr r0, [r6]
	cmp r5, r0
	beq _080BC306
	bl sub_8000608
_080BC306:
	str r5, [r6]
	movs r0, #0x14
	bl sub_80005D4
	ldr r1, [r7]
	movs r2, #0
	mov r3, sb
	bl sub_805E824
	adds r5, r0, #0
	ldr r4, _080BC3D4 @ =0x00000AC8
	add r4, r8
	ldr r0, [r4]
	cmp r5, r0
	beq _080BC328
	bl sub_8000608
_080BC328:
	str r5, [r4]
	ldr r0, [r6]
	ldr r1, _080BC3D8 @ =0x0000091A
	bl sub_805E860
	ldr r0, [r4]
	ldr r1, _080BC3DC @ =0x0000091B
	bl sub_805E860
	ldr r4, _080BC3E0 @ =0x00000AA8
	add r4, r8
	ldr r0, [r6]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x50
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r5, sp, #0x50
	adds r0, r5, #0
	adds r1, r5, #0
	movs r2, #0x20
	bl sub_80D3994
	adds r0, r5, #0
	ldm r0!, {r1, r3, r7}
	stm r4!, {r1, r3, r7}
	ldm r0!, {r2, r3, r7}
	stm r4!, {r2, r3, r7}
	ldm r0!, {r1, r2}
	stm r4!, {r1, r2}
	mov r0, r8
	bl sub_8008910
	adds r6, r0, #0
	movs r4, #0xab
	lsls r4, r4, #4
	add r4, r8
	ldr r7, [r4]
	ldr r1, [sp, #4]
	mov r0, sp
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080BC394
	ldrh r3, [r4, #4]
_080BC394:
	lsls r2, r2, #5
	ldr r4, _080BC3E4 @ =0x06010000
	adds r2, r2, r4
	add r0, sp, #0x50
	adds r1, r7, #0
	bl sub_8008F0C
	add r5, sp, #0x50
	mov sl, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BC3E8
	cmp r1, #0
	beq _080BC3BE
	adds r0, r1, #0
	add r1, sp, #0x50
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BC3BE:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080BC4AE
	.align 2, 0
_080BC3C8: .4byte gUnknown_08107D6C
_080BC3CC: .4byte 0x0000077C
_080BC3D0: .4byte 0x00000AA4
_080BC3D4: .4byte 0x00000AC8
_080BC3D8: .4byte 0x0000091A
_080BC3DC: .4byte 0x0000091B
_080BC3E0: .4byte 0x00000AA8
_080BC3E4: .4byte 0x06010000
_080BC3E8:
	str r1, [sp, #0x8c]
	movs r0, #1
	str r0, [sp, #0x74]
	ldr r0, [r6]
	adds r4, r1, #0
	subs r0, r4, r0
	asrs r4, r0, #4
	str r4, [sp, #0x70]
	add r1, sp, #0x74
	add r0, sp, #0x70
	cmp r4, #1
	bhs _080BC402
	adds r0, r1, #0
_080BC402:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BC420
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080BC424
	mov r0, sb
	bl sub_80D3BC0
	b _080BC424
_080BC420:
	movs r0, #0
	mov sb, r0
_080BC424:
	adds r5, r0, #0
	str r5, [sp, #0x90]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r5, [sp, #0x8c]
	cmp r2, r5
	beq _080BC44C
_080BC432:
	cmp r3, #0
	beq _080BC442
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BC442:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0x8c]
	cmp r2, r7
	bne _080BC432
_080BC44C:
	adds r5, r3, #0
	ldr r0, [sp, #0x74]
	cmp r0, #1
	bne _080BC468
	cmp r5, #0
	beq _080BC464
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BC464:
	adds r5, #0x10
	b _080BC48A
_080BC468:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080BC488
_080BC470:
	cmp r2, #0
	beq _080BC480
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BC480:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BC470
_080BC488:
	adds r5, r2, #0
_080BC48A:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BC49A
_080BC494:
	adds r1, #0x10
	cmp r1, r2
	bne _080BC494
_080BC49A:
	cmp r0, #0
	beq _080BC4A2
	bl sub_80D0260
_080BC4A2:
	ldr r0, [sp, #0x90]
	add r0, sb
	ldr r7, [sp, #0x90]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080BC4AE:
	mov r0, r8
	bl sub_8008910
	adds r5, r0, #0
	ldr r4, _080BC504 @ =0x00000AB8
	add r4, r8
	ldr r7, [r4]
	ldr r0, [sp, #0x88]
	ldr r1, [r0, #4]
	bl sub_80074C0
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080BC4D0
	ldrh r3, [r4, #4]
_080BC4D0:
	adds r6, r5, #0
	lsls r2, r2, #5
	ldr r1, _080BC508 @ =0x05000200
	adds r2, r2, r1
	add r0, sp, #0x50
	adds r1, r7, #0
	bl sub_8008F0C
	add r2, sp, #0x50
	mov sl, r2
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BC50C
	cmp r1, #0
	beq _080BC4FC
	adds r0, r1, #0
	add r1, sp, #0x50
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080BC4FC:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080BC5CE
	.align 2, 0
_080BC504: .4byte 0x00000AB8
_080BC508: .4byte 0x05000200
_080BC50C:
	str r1, [sp, #0x8c]
	movs r0, #1
	str r0, [sp, #0x7c]
	ldr r0, [r6]
	adds r7, r1, #0
	subs r0, r7, r0
	asrs r4, r0, #4
	str r4, [sp, #0x78]
	add r1, sp, #0x7c
	add r0, sp, #0x78
	cmp r4, #1
	bhs _080BC526
	adds r0, r1, #0
_080BC526:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BC544
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080BC548
	mov r0, sb
	bl sub_80D3BC0
	b _080BC548
_080BC544:
	movs r0, #0
	mov sb, r0
_080BC548:
	adds r5, r0, #0
	str r5, [sp, #0x90]
	ldr r2, [r6]
	adds r3, r5, #0
	b _080BC566
_080BC552:
	cmp r3, #0
	beq _080BC562
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BC562:
	adds r2, #0x10
	adds r3, #0x10
_080BC566:
	ldr r0, [sp, #0x8c]
	cmp r2, r0
	bne _080BC552
	adds r5, r3, #0
	ldr r0, [sp, #0x7c]
	cmp r0, #1
	bne _080BC588
	cmp r5, #0
	beq _080BC584
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BC584:
	adds r5, #0x10
	b _080BC5AA
_080BC588:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080BC5A8
_080BC590:
	cmp r2, #0
	beq _080BC5A0
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BC5A0:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BC590
_080BC5A8:
	adds r5, r2, #0
_080BC5AA:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BC5BA
_080BC5B4:
	adds r1, #0x10
	cmp r1, r2
	bne _080BC5B4
_080BC5BA:
	cmp r0, #0
	beq _080BC5C2
	bl sub_80D0260
_080BC5C2:
	ldr r0, [sp, #0x90]
	add r0, sb
	ldr r7, [sp, #0x90]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080BC5CE:
	ldr r5, _080BC65C @ =0x00000ACC
	add r5, r8
	ldr r0, _080BC660 @ =0x00000AC8
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x50
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r4, sp, #0x50
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	ldm r4!, {r0, r1, r2}
	stm r5!, {r0, r1, r2}
	ldm r4!, {r0, r3, r7}
	stm r5!, {r0, r3, r7}
	ldm r4!, {r1, r2}
	stm r5!, {r1, r2}
	mov r0, r8
	bl sub_8008910
	adds r5, r0, #0
	ldr r4, _080BC664 @ =0x00000AD4
	add r4, r8
	ldr r7, [r4]
	ldr r1, [sp, #0xc]
	add r0, sp, #8
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080BC628
	ldrh r3, [r4, #4]
_080BC628:
	adds r6, r5, #0
	lsls r2, r2, #5
	ldr r4, _080BC668 @ =0x06010000
	adds r2, r2, r4
	add r0, sp, #0x50
	adds r1, r7, #0
	bl sub_8008F0C
	add r5, sp, #0x50
	mov sl, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BC66C
	cmp r1, #0
	beq _080BC654
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BC654:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080BC734
	.align 2, 0
_080BC65C: .4byte 0x00000ACC
_080BC660: .4byte 0x00000AC8
_080BC664: .4byte 0x00000AD4
_080BC668: .4byte 0x06010000
_080BC66C:
	str r1, [sp, #0x8c]
	movs r0, #1
	add r1, sp, #0x84
	str r0, [r1]
	ldr r0, [r6]
	ldr r4, [sp, #0x8c]
	subs r0, r4, r0
	asrs r4, r0, #4
	add r0, sp, #0x80
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080BC688
	adds r0, r1, #0
_080BC688:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BC6A6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080BC6AA
	mov r0, sb
	bl sub_80D3BC0
	b _080BC6AA
_080BC6A6:
	movs r0, #0
	mov sb, r0
_080BC6AA:
	adds r4, r0, #0
	str r4, [sp, #0x94]
	ldr r2, [r6]
	adds r3, r4, #0
	ldr r5, [sp, #0x8c]
	cmp r2, r5
	beq _080BC6D2
_080BC6B8:
	cmp r3, #0
	beq _080BC6C8
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BC6C8:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0x8c]
	cmp r2, r7
	bne _080BC6B8
_080BC6D2:
	adds r4, r3, #0
	ldr r1, [sp, #0x84]
	cmp r1, #1
	bne _080BC6EE
	cmp r4, #0
	beq _080BC6EA
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldr r1, [r1]
	str r1, [r0]
_080BC6EA:
	adds r4, #0x10
	b _080BC710
_080BC6EE:
	adds r3, r1, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080BC70E
_080BC6F6:
	cmp r2, #0
	beq _080BC706
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BC706:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BC6F6
_080BC70E:
	adds r4, r2, #0
_080BC710:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BC720
_080BC71A:
	adds r1, #0x10
	cmp r1, r2
	bne _080BC71A
_080BC720:
	cmp r0, #0
	beq _080BC728
	bl sub_80D0260
_080BC728:
	ldr r0, [sp, #0x94]
	add r0, sb
	ldr r7, [sp, #0x94]
	str r7, [r6]
	str r4, [r6, #4]
	str r0, [r6, #0xc]
_080BC734:
	movs r7, #0
	ldr r5, _080BC7D0 @ =0x00000AEC
	add r5, r8
	ldr r6, _080BC7D4 @ =0xFFFFFE8A
	add r6, r8
	movs r0, #0
	mov sb, r0
	movs r1, #0
	mov sl, r1
_080BC746:
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r0, #0
	strh r0, [r4]
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	strh r0, [r4, #8]
	str r0, [r4, #0xc]
	mov r2, sl
	strb r2, [r4, #0x10]
	strb r2, [r4, #0x11]
	str r0, [r4, #0x14]
	strb r2, [r4, #0x18]
	ldr r0, [r5]
	cmp r4, r0
	beq _080BC770
	bl sub_8000608
_080BC770:
	str r4, [r5]
	cmp r7, #7
	bhi _080BC7DC
	lsls r1, r7, #3
	mov r0, sp
	adds r0, r0, r1
	adds r0, #0x10
	ldr r0, [r0]
	strh r0, [r4]
	add r0, sp, #0x14
	adds r0, r0, r1
	ldr r0, [r0]
	strh r0, [r4, #2]
	ldr r1, [sp, #0xc]
	add r0, sp, #8
	bl sub_8007D4C
	strh r0, [r4, #6]
	ldr r4, [r5]
	ldr r3, [sp, #0x88]
	ldr r1, [r3, #4]
	adds r0, r3, #0
	bl sub_80074C0
	strh r0, [r4, #4]
	ldr r1, [r5]
	movs r0, #2
	strh r0, [r1, #8]
	mov r0, r8
	bl sub_8008920
	adds r4, r0, #0
	ldr r3, _080BC7D8 @ =0x00000ACC
	add r3, r8
	ldr r1, [r3]
	movs r2, #0
	mov r0, sb
	add r0, r8
	cmp r1, #0
	beq _080BC7C2
	ldrh r2, [r3, #4]
_080BC7C2:
	ldr r3, _080BC7D0 @ =0x00000AEC
	adds r0, r0, r3
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
	b _080BC83A
	.align 2, 0
_080BC7D0: .4byte 0x00000AEC
_080BC7D4: .4byte 0xFFFFFE8A
_080BC7D8: .4byte 0x00000ACC
_080BC7DC:
	ldrh r0, [r6]
	lsrs r0, r0, #8
	strh r0, [r4]
	ldrh r0, [r6, #2]
	lsrs r0, r0, #8
	strh r0, [r4, #2]
	ldr r1, [sp, #4]
	mov r0, sp
	bl sub_8007D4C
	strh r0, [r4, #6]
	ldr r4, [r5]
	ldr r0, [sp, #0x88]
	ldr r1, [r0, #4]
	bl sub_80074C0
	strh r0, [r4, #4]
	ldr r1, [r5]
	ldrh r0, [r6]
	lsrs r0, r0, #8
	strh r0, [r1]
	ldr r1, [r5]
	ldrh r0, [r6, #2]
	lsrs r0, r0, #8
	strh r0, [r1, #2]
	ldr r1, [r5]
	ldrb r0, [r6, #0xb]
	strh r0, [r1, #8]
	mov r0, r8
	bl sub_8008920
	adds r4, r0, #0
	ldr r3, _080BC890 @ =0x00000AA8
	add r3, r8
	ldr r1, [r3]
	movs r2, #0
	mov r0, sb
	add r0, r8
	cmp r1, #0
	beq _080BC82E
	ldrh r2, [r3, #4]
_080BC82E:
	ldr r3, _080BC894 @ =0x00000AEC
	adds r0, r0, r3
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
_080BC83A:
	ldm r5!, {r1}
	movs r0, #1
	strb r0, [r1, #0x18]
	adds r6, #0x40
	movs r4, #4
	add sb, r4
	adds r7, #1
	cmp r7, #9
	bhi _080BC84E
	b _080BC746
_080BC84E:
	ldr r1, [sp, #0xc]
	add r0, sp, #8
	bl sub_8007C28
	add r0, sp, #8
	movs r1, #2
	bl sub_80079E8
	ldr r1, [sp, #4]
	mov r0, sp
	bl sub_8007C28
	mov r0, sp
	movs r1, #2
	bl sub_80079E8
	ldr r5, [sp, #0x88]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_80073E0
	ldr r0, [sp, #0x88]
	movs r1, #2
	bl sub_8007184
	add sp, #0x98
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080BC890: .4byte 0x00000AA8
_080BC894: .4byte 0x00000AEC

	thumb_func_start sub_80BC898
sub_80BC898: @ 0x080BC898
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _080BC8B8 @ =gUnknown_080E8528
	str r0, [r4]
	ldr r0, _080BC8BC @ =0x00000B78
	bl sub_80005D4
	adds r1, r5, #0
	bl sub_80B3CC8
	str r0, [r4, #4]
	adds r0, r4, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080BC8B8: .4byte gUnknown_080E8528
_080BC8BC: .4byte 0x00000B78

	thumb_func_start sub_80BC8C0
sub_80BC8C0: @ 0x080BC8C0
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _080BC8EC @ =gUnknown_080E8528
	str r0, [r4]
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080BC8DC
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080BC8DC:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_80007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080BC8EC: .4byte gUnknown_080E8528

	thumb_func_start sub_80BC8F0
sub_80BC8F0: @ 0x080BC8F0
	push {lr}
	ldr r0, [r0, #4]
	bl sub_80B44E0
	pop {r1}
	bx r1

	thumb_func_start sub_80BC8FC
sub_80BC8FC: @ 0x080BC8FC
	push {r4, lr}
	sub sp, #0xc
	adds r4, r0, #0
	ldr r1, [r1, #4]
	mov r0, sp
	bl sub_80B44EC
	ldr r2, [sp]
	mov r0, sp
	str r0, [sp, #4]
	str r2, [sp, #8]
	adds r1, r0, #0
	movs r0, #0
	str r0, [r1]
	str r2, [r4]
	ldr r1, [sp]
	cmp r1, #0
	beq _080BC92C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080BC92C:
	adds r0, r4, #0
	add sp, #0xc
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80BC938
sub_80BC938: @ 0x080BC938
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x14
	adds r6, r0, #0
	mov r8, r1
	bl sub_8008444
	ldr r0, _080BCC78 @ =gUnknown_080E8538
	str r0, [r6, #4]
	movs r0, #2
	add r7, sp, #0x10
	movs r1, #1
	rsbs r1, r1, #0
_080BC954:
	subs r0, #1
	cmp r0, r1
	bne _080BC954
	movs r0, #4
	bl sub_80005D4
	adds r5, r0, #0
	add r0, sp, #0xc
	bl sub_800835C
	adds r0, r7, #0
	bl sub_800770C
	movs r4, #0
	str r4, [sp]
	add r0, sp, #0xc
	str r0, [sp, #4]
	str r7, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #0x18
	movs r3, #0
	bl sub_8050CC0
	movs r2, #0x83
	lsls r2, r2, #3
	adds r1, r6, r2
	str r0, [r1]
	adds r0, r7, #0
	movs r1, #2
	bl sub_8007714
	add r0, sp, #0xc
	movs r1, #2
	bl sub_8008364
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080BCC7C @ =gUnknown_0873E5B0
	bl sub_805E6CC
	ldr r2, _080BCC80 @ =0x0000041C
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080BCC84 @ =gUnknown_0873DE44
	bl sub_805E6CC
	movs r2, #0x84
	lsls r2, r2, #3
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080BCC88 @ =gUnknown_086678A0
	bl sub_805E6CC
	ldr r2, _080BCC8C @ =0x00000424
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080BCC90 @ =gUnknown_087405A0
	bl sub_805E6CC
	movs r2, #0x85
	lsls r2, r2, #3
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080BCC94 @ =gUnknown_0858BA28
	bl sub_805E6CC
	ldr r2, _080BCC98 @ =0x0000042C
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080BCC9C @ =gUnknown_0871D51C
	bl sub_805E6CC
	movs r2, #0x86
	lsls r2, r2, #3
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080BCCA0 @ =gUnknown_0872BE64
	bl sub_805E6CC
	ldr r2, _080BCCA4 @ =0x00000434
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080BCCA8 @ =gUnknown_0873D6D8
	bl sub_805E6CC
	movs r2, #0x87
	lsls r2, r2, #3
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x10
	bl sub_80005D4
	adds r5, r0, #0
	adds r0, r6, #0
	bl sub_8008918
	adds r1, r0, #0
	str r4, [r5]
	str r4, [r5, #4]
	ldr r0, _080BCCAC @ =gUnknown_080E5B80
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0xc
	bl sub_8009300
	ldr r1, _080BCCB0 @ =0x0000043C
	adds r0, r6, r1
	str r5, [r0]
	movs r2, #0x8c
	lsls r2, r2, #3
	adds r0, r6, r2
	str r4, [r0]
	adds r1, #0x28
	adds r0, r6, r1
	str r4, [r0]
	adds r2, #8
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0x10
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	adds r2, #8
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0x10
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	adds r2, #8
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0x10
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	adds r2, #8
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0x10
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	adds r2, #8
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0x10
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	adds r2, #8
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0x10
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	adds r2, #8
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0x10
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	movs r1, #0
	bl sub_8008B54
	ldr r1, _080BCCB4 @ =0x0000057C
	adds r0, r6, r1
	movs r1, #1
	bl sub_8008B54
	movs r2, #0xb0
	lsls r2, r2, #3
	adds r0, r6, r2
	movs r1, #2
	bl sub_8008B54
	ldr r1, _080BCCB8 @ =0x00000584
	adds r0, r6, r1
	movs r1, #3
	bl sub_8008B54
	movs r2, #0xb1
	lsls r2, r2, #3
	adds r0, r6, r2
	str r4, [r0]
	str r4, [r0, #4]
	ldr r1, _080BCCBC @ =gUnknown_080E5B70
	str r1, [r0, #8]
	ldr r1, _080BCCC0 @ =0x00000594
	adds r0, r6, r1
	str r4, [r0]
	str r4, [r0, #4]
	ldr r1, _080BCCC4 @ =gUnknown_080E5B60
	str r1, [r0, #8]
	adds r2, #0x28
	adds r5, r6, r2
	adds r0, r5, #0
	bl sub_8007874
	str r4, [r5, #4]
	movs r0, #0xb7
	lsls r0, r0, #3
	adds r5, r6, r0
	adds r0, r5, #0
	bl sub_8007874
	str r4, [r5, #4]
	movs r1, #0xb8
	lsls r1, r1, #3
	adds r5, r6, r1
	adds r0, r5, #0
	bl sub_8007874
	str r4, [r5, #4]
	movs r2, #0xb9
	lsls r2, r2, #3
	adds r5, r6, r2
	adds r0, r5, #0
	bl sub_8007874
	str r4, [r5, #4]
	movs r0, #0xba
	lsls r0, r0, #3
	adds r5, r6, r0
	adds r0, r5, #0
	bl sub_8007874
	str r4, [r5, #4]
	movs r1, #0xbb
	lsls r1, r1, #3
	adds r5, r6, r1
	adds r0, r5, #0
	bl sub_8007874
	str r4, [r5, #4]
	movs r2, #0xbc
	lsls r2, r2, #3
	adds r5, r6, r2
	adds r0, r5, #0
	bl sub_8007874
	str r4, [r5, #4]
	movs r0, #0xbd
	lsls r0, r0, #3
	adds r5, r6, r0
	adds r0, r5, #0
	bl sub_8007874
	str r4, [r5, #4]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r5, r6, r1
	adds r0, r5, #0
	bl sub_8007874
	str r4, [r5, #4]
	ldr r2, _080BCCC8 @ =0x00000604
	adds r0, r6, r2
	str r4, [r0]
	ldr r0, _080BCCCC @ =0x00000614
	adds r1, r6, r0
	mov r2, r8
	ldr r0, [r2]
	str r0, [r1]
	ldrb r1, [r2, #4]
	ldr r2, _080BCCD0 @ =0x0000061C
	adds r0, r6, r2
	strb r1, [r0]
	adds r0, r6, #0
	add sp, #0x14
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080BCC78: .4byte gUnknown_080E8538
_080BCC7C: .4byte gUnknown_0873E5B0
_080BCC80: .4byte 0x0000041C
_080BCC84: .4byte gUnknown_0873DE44
_080BCC88: .4byte gUnknown_086678A0
_080BCC8C: .4byte 0x00000424
_080BCC90: .4byte gUnknown_087405A0
_080BCC94: .4byte gUnknown_0858BA28
_080BCC98: .4byte 0x0000042C
_080BCC9C: .4byte gUnknown_0871D51C
_080BCCA0: .4byte gUnknown_0872BE64
_080BCCA4: .4byte 0x00000434
_080BCCA8: .4byte gUnknown_0873D6D8
_080BCCAC: .4byte gUnknown_080E5B80
_080BCCB0: .4byte 0x0000043C
_080BCCB4: .4byte 0x0000057C
_080BCCB8: .4byte 0x00000584
_080BCCBC: .4byte gUnknown_080E5B70
_080BCCC0: .4byte 0x00000594
_080BCCC4: .4byte gUnknown_080E5B60
_080BCCC8: .4byte 0x00000604
_080BCCCC: .4byte 0x00000614
_080BCCD0: .4byte 0x0000061C

	thumb_func_start sub_80BCCD4
sub_80BCCD4: @ 0x080BCCD4
	movs r1, #0xc2
	lsls r1, r1, #3
	adds r0, r0, r1
	ldrb r0, [r0]
	bx lr
	.align 2, 0

	thumb_func_start sub_80BCCE0
sub_80BCCE0: @ 0x080BCCE0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	str r0, [sp, #0x1c]
	adds r7, r1, #0
	adds r0, r7, #0
	bl sub_80BCEBC
	adds r0, r7, #0
	bl sub_8008918
	add r1, sp, #0xc
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	ldr r0, _080BCD80 @ =0x0000043C
	adds r4, r7, r0
	ldr r0, [r4]
	ldr r1, _080BCD84 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl sub_800934C
	adds r0, r7, #0
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [r4]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
	adds r0, r7, #0
	bl sub_80BE954
	adds r0, r7, #0
	bl sub_80BEA34
	adds r0, r7, #0
	bl sub_80BCFAC
	adds r0, r7, #0
	bl sub_80BD064
	movs r1, #0xaf
	lsls r1, r1, #3
	adds r0, r7, r1
	movs r1, #0x22
	bl sub_8008B6C
	movs r1, #0xb4
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r0, [r0]
	mov r1, sp
	adds r1, #0x10
	str r1, [sp, #0x24]
	adds r1, #4
	str r1, [sp, #0x28]
	cmp r0, #5
	beq _080BCDD2
_080BCD62:
	adds r0, r7, #0
	bl sub_80087C8
	movs r1, #0xb4
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #4
	bhi _080BCDC6
	lsls r0, r0, #2
	ldr r1, _080BCD88 @ =_080BCD8C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080BCD80: .4byte 0x0000043C
_080BCD84: .4byte 0x00000889
_080BCD88: .4byte _080BCD8C
_080BCD8C: @ jump table
	.4byte _080BCDA0 @ case 0
	.4byte _080BCDA8 @ case 1
	.4byte _080BCDB0 @ case 2
	.4byte _080BCDB8 @ case 3
	.4byte _080BCDC0 @ case 4
_080BCDA0:
	adds r0, r7, #0
	bl sub_80BEAD4
	b _080BCDC6
_080BCDA8:
	adds r0, r7, #0
	bl sub_80BF0EC
	b _080BCDC6
_080BCDB0:
	adds r0, r7, #0
	bl sub_80BF2EC
	b _080BCDC6
_080BCDB8:
	adds r0, r7, #0
	bl sub_80BF348
	b _080BCDC6
_080BCDC0:
	adds r0, r7, #0
	bl sub_80BF764
_080BCDC6:
	movs r1, #0xb4
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #5
	bne _080BCD62
_080BCDD2:
	ldr r0, _080BCEB0 @ =0x0000043C
	adds r4, r7, r0
	ldr r2, [r4]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _080BCE00
	ldr r1, _080BCEB4 @ =0x00000889
	adds r0, r2, #0
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl sub_8009378
	adds r0, r7, #0
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [r4]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
_080BCE00:
	ldr r0, [r4]
	ldr r0, [r0]
	rsbs r2, r0, #0
	orrs r2, r0
	cmp r2, #0
	bge _080BCE76
	movs r1, #0x83
	lsls r1, r1, #3
	adds r1, r7, r1
	str r1, [sp, #0x20]
	ldr r0, _080BCEB8 @ =0x0000057C
	adds r0, r0, r7
	mov sl, r0
_080BCE1A:
	adds r0, r7, #0
	bl sub_80087C8
	ldr r1, [sp, #0x20]
	ldr r1, [r1]
	mov sb, r1
	adds r0, r7, #0
	bl sub_80088DC
	mov r8, r0
	adds r0, r7, #0
	bl sub_8008920
	adds r6, r0, #0
	adds r0, r7, #0
	bl sub_8008918
	adds r5, r0, #0
	adds r0, r7, #0
	bl sub_8008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl sub_800894C
	str r4, [sp]
	str r0, [sp, #4]
	mov r0, sl
	str r0, [sp, #8]
	mov r0, sb
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl sub_8050D3C
	adds r0, r7, #0
	bl sub_80BDF40
	ldr r1, _080BCEB0 @ =0x0000043C
	adds r0, r7, r1
	ldr r0, [r0]
	ldr r0, [r0]
	rsbs r2, r0, #0
	orrs r2, r0
	cmp r2, #0
	blt _080BCE1A
_080BCE76:
	movs r0, #0
	str r0, [sp, #0x10]
	ldr r1, [sp, #0x24]
	str r1, [sp, #0x14]
	ldr r1, [sp, #0x28]
	str r0, [r1, #4]
	ldr r1, [sp, #0x24]
	str r0, [r1]
	ldr r1, [sp, #0x1c]
	str r0, [r1]
	ldr r1, [sp, #0x10]
	cmp r1, #0
	beq _080BCE9C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080BCE9C:
	ldr r0, [sp, #0x1c]
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080BCEB0: .4byte 0x0000043C
_080BCEB4: .4byte 0x00000889
_080BCEB8: .4byte 0x0000057C

	thumb_func_start sub_80BCEBC
sub_80BCEBC: @ 0x080BCEBC
	push {lr}
	bl sub_8008724
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80BCEC8
sub_80BCEC8: @ 0x080BCEC8
	push {r4, r5, lr}
	adds r5, r0, #0
	movs r0, #0xb6
	lsls r0, r0, #3
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #3
	bl sub_8007B54
	str r0, [r4, #4]
	movs r0, #0xb7
	lsls r0, r0, #3
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #6
	bl sub_8007B54
	str r0, [r4, #4]
	movs r0, #0xb8
	lsls r0, r0, #3
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007B54
	str r0, [r4, #4]
	movs r0, #0xb9
	lsls r0, r0, #3
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #5
	bl sub_8007B54
	str r0, [r4, #4]
	movs r0, #0xba
	lsls r0, r0, #3
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #5
	bl sub_8007B54
	str r0, [r4, #4]
	movs r0, #0xbb
	lsls r0, r0, #3
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007B54
	str r0, [r4, #4]
	movs r0, #0xbe
	lsls r0, r0, #3
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #4
	bl sub_8007B54
	str r0, [r4, #4]
	movs r0, #0xbd
	lsls r0, r0, #3
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007B54
	str r0, [r4, #4]
	movs r0, #0xbc
	lsls r0, r0, #3
	adds r5, r5, r0
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007C28
	adds r0, r5, #0
	movs r1, #6
	bl sub_8007B54
	str r0, [r5, #4]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80BCFAC
sub_80BCFAC: @ 0x080BCFAC
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #4
	mov sb, r0
	movs r5, #1
	rsbs r5, r5, #0
	ldr r0, _080BD044 @ =0x0600F000
	mov r8, r0
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r5, #0
	mov r1, r8
	adds r2, r6, #0
	bl sub_8008EB8
	ldr r4, _080BD048 @ =0x0600F800
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl sub_8008EB8
	ldr r0, _080BD04C @ =gUnknown_0873BE24
	adds r1, r4, #0
	bl sub_80D102C
	ldr r0, _080BD050 @ =gUnknown_0873BF48
	mov r1, r8
	bl sub_80D102C
	ldr r0, _080BD054 @ =gUnknown_0873BFF0
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl sub_80D102C
	ldr r0, _080BD058 @ =gUnknown_0873CBF4
	movs r1, #0xa0
	lsls r1, r1, #0x13
	movs r2, #0x80
	lsls r2, r2, #2
	bl sub_8008E64
	mov r0, sb
	bl sub_8008918
	mov r2, sp
	movs r3, #0xb2
	lsls r3, r3, #5
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0]
	mov r0, sb
	bl sub_8008918
	mov r2, sp
	ldr r3, _080BD05C @ =0x00001E41
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xa]
	mov r0, sb
	bl sub_8008918
	mov r2, sp
	ldr r3, _080BD060 @ =0x00001F42
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xc]
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080BD044: .4byte 0x0600F000
_080BD048: .4byte 0x0600F800
_080BD04C: .4byte gUnknown_0873BE24
_080BD050: .4byte gUnknown_0873BF48
_080BD054: .4byte gUnknown_0873BFF0
_080BD058: .4byte gUnknown_0873CBF4
_080BD05C: .4byte 0x00001E41
_080BD060: .4byte 0x00001F42

	thumb_func_start sub_80BD064
sub_80BD064: @ 0x080BD064
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xac
	mov sb, r0
	ldr r0, _080BD17C @ =gUnknown_080F9F78
	ldr r0, [r0]
	ldr r1, _080BD180 @ =0x05000320
	movs r2, #0x20
	bl sub_8008E64
	mov r0, sb
	bl sub_80BCEC8
	ldr r1, _080BD184 @ =0x0500024A
	ldr r0, _080BD188 @ =0x05000322
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _080BD18C @ =0x05000324
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	movs r0, #0x1f
	strh r0, [r1]
	adds r1, #2
	ldr r2, _080BD190 @ =0x0000675E
	adds r0, r2, #0
	strh r0, [r1]
	movs r1, #0x88
	lsls r1, r1, #3
	add r1, sb
	movs r0, #0
	movs r2, #8
	bl sub_8008EB8
	ldr r0, _080BD194 @ =0x000005FD
	add r0, sb
	ldrb r0, [r0]
	add r1, sp, #0x10
	movs r2, #0
	bl sub_804EC84
	ldr r1, _080BD198 @ =0x05000240
	movs r3, #0xf8
	lsls r3, r3, #2
	adds r0, r3, #0
	strh r0, [r1]
	adds r1, #2
	ldr r4, _080BD19C @ =0x00000303
	adds r0, r4, #0
	strh r0, [r1]
	adds r1, #2
	ldr r5, _080BD1A0 @ =0x00004F15
	adds r0, r5, #0
	strh r0, [r1]
	adds r1, #2
	ldr r6, _080BD1A4 @ =0x00007FFF
	adds r0, r6, #0
	strh r0, [r1]
	adds r1, #2
	ldr r7, _080BD1A8 @ =0x000052F8
	adds r0, r7, #0
	strh r0, [r1]
	add r0, sp, #0x44
	movs r5, #4
	movs r6, #2
	movs r1, #0
	mov r8, r1
	strh r5, [r0]
	strh r6, [r0, #2]
	ldr r0, [sp, #0x44]
	mov r4, sb
	adds r4, #0xc
	adds r1, r4, #0
	movs r2, #0
	bl sub_804E7A0
	movs r2, #1
	mov sl, r2
	add r0, sp, #0x48
	strh r5, [r0]
	strh r6, [r0, #2]
	ldr r0, [sp, #0x48]
	add r3, sp, #0x10
	str r3, [sp]
	mov r5, r8
	str r5, [sp, #4]
	str r2, [sp, #8]
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_804E958
	mov r0, sb
	bl sub_8008910
	adds r5, r0, #0
	movs r0, #0xb6
	lsls r0, r0, #3
	add r0, sb
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r2, r0, #0
	movs r3, #0x80
	lsls r3, r3, #1
	lsls r2, r2, #5
	ldr r6, _080BD1AC @ =0x06010000
	adds r2, r2, r6
	add r0, sp, #0x14
	adds r1, r4, #0
	bl sub_8008F0C
	add r7, sp, #0x14
	mov r8, r7
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080BD1B0
	cmp r1, #0
	beq _080BD168
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BD168:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	mov r5, sp
	adds r5, #0x54
	str r5, [sp, #0xa0]
	mov r6, sp
	adds r6, #0x24
	str r6, [sp, #0x9c]
	b _080BD280
	.align 2, 0
_080BD17C: .4byte gUnknown_080F9F78
_080BD180: .4byte 0x05000320
_080BD184: .4byte 0x0500024A
_080BD188: .4byte 0x05000322
_080BD18C: .4byte 0x05000324
_080BD190: .4byte 0x0000675E
_080BD194: .4byte 0x000005FD
_080BD198: .4byte 0x05000240
_080BD19C: .4byte 0x00000303
_080BD1A0: .4byte 0x00004F15
_080BD1A4: .4byte 0x00007FFF
_080BD1A8: .4byte 0x000052F8
_080BD1AC: .4byte 0x06010000
_080BD1B0:
	str r1, [sp, #0xa4]
	mov r7, sl
	str r7, [sp, #0x50]
	ldr r0, [r5]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x4c]
	add r1, sp, #0x50
	add r0, sp, #0x4c
	cmp r4, #1
	bhs _080BD1C8
	adds r0, r1, #0
_080BD1C8:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BD1E6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sl, r4
	cmp r0, #0
	bne _080BD1EA
	mov r0, sl
	bl sub_80D3BC0
	b _080BD1EA
_080BD1E6:
	movs r0, #0
	mov sl, r0
_080BD1EA:
	adds r6, r0, #0
	str r6, [sp, #0xa8]
	ldr r2, [r5]
	adds r3, r6, #0
	mov r4, sp
	adds r4, #0x54
	str r4, [sp, #0xa0]
	mov r6, sp
	adds r6, #0x24
	str r6, [sp, #0x9c]
	ldr r7, [sp, #0xa4]
	cmp r2, r7
	beq _080BD21E
_080BD204:
	cmp r3, #0
	beq _080BD214
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BD214:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xa4]
	cmp r2, r0
	bne _080BD204
_080BD21E:
	adds r6, r3, #0
	ldr r0, [sp, #0x50]
	cmp r0, #1
	bne _080BD23A
	cmp r6, #0
	beq _080BD236
	adds r0, r6, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BD236:
	adds r6, #0x10
	b _080BD25C
_080BD23A:
	adds r3, r0, #0
	adds r2, r6, #0
	cmp r3, #0
	beq _080BD25A
_080BD242:
	cmp r2, #0
	beq _080BD252
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BD252:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BD242
_080BD25A:
	adds r6, r2, #0
_080BD25C:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BD26C
_080BD266:
	adds r1, #0x10
	cmp r1, r2
	bne _080BD266
_080BD26C:
	cmp r0, #0
	beq _080BD274
	bl sub_80D0260
_080BD274:
	ldr r0, [sp, #0xa8]
	add r0, sl
	ldr r7, [sp, #0xa8]
	str r7, [r5]
	str r6, [r5, #4]
	str r0, [r5, #0xc]
_080BD280:
	movs r4, #0x88
	lsls r4, r4, #3
	add r4, sb
	movs r0, #0xb6
	lsls r0, r0, #3
	add r0, sb
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r3, r0, #0
	movs r0, #2
	str r0, [sp]
	movs r5, #0
	str r5, [sp, #4]
	str r0, [sp, #8]
	movs r0, #1
	mov r8, r0
	str r0, [sp, #0xc]
	ldr r0, [sp, #0xa0]
	movs r1, #0xd0
	movs r2, #8
	bl sub_804EA94
	ldr r0, [sp, #0x54]
	ldr r1, [sp, #0x58]
	str r0, [r4]
	str r1, [r4, #4]
	movs r0, #0x14
	bl sub_80005D4
	ldr r1, _080BD3C4 @ =0x0000041C
	add r1, sb
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r4, r0, #0
	movs r7, #0x8c
	lsls r7, r7, #3
	add r7, sb
	ldr r0, [r7]
	cmp r4, r0
	beq _080BD2DE
	bl sub_8000608
_080BD2DE:
	str r4, [r7]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r0, #0
	strh r5, [r4]
	strh r5, [r4, #2]
	strh r5, [r4, #4]
	strh r5, [r4, #6]
	strh r5, [r4, #8]
	str r5, [r4, #0xc]
	strb r0, [r4, #0x10]
	strb r0, [r4, #0x11]
	str r5, [r4, #0x14]
	strb r0, [r4, #0x18]
	ldr r6, _080BD3C8 @ =0x00000464
	add r6, sb
	ldr r0, [r6]
	cmp r4, r0
	beq _080BD30C
	bl sub_8000608
_080BD30C:
	str r4, [r6]
	ldr r0, [r7]
	movs r1, #0
	bl sub_805E860
	ldr r0, [r6]
	movs r1, #0x40
	strh r1, [r0]
	ldr r0, [r6]
	strh r1, [r0, #2]
	ldr r4, [r6]
	movs r5, #0xb7
	lsls r5, r5, #3
	add r5, sb
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	strh r0, [r4, #6]
	ldr r1, [r6]
	movs r0, #3
	strh r0, [r1, #4]
	movs r4, #0x8d
	lsls r4, r4, #3
	add r4, sb
	ldr r0, [r7]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x24
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	ldr r0, [sp, #0x9c]
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	ldr r0, [sp, #0x9c]
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r1, r6, r7}
	stm r4!, {r1, r6, r7}
	ldm r0!, {r2, r3}
	stm r4!, {r2, r3}
	mov r0, sb
	bl sub_8008910
	adds r6, r0, #0
	movs r4, #0x8e
	lsls r4, r4, #3
	add r4, sb
	ldr r7, [r4]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080BD392
	ldrh r3, [r4, #4]
_080BD392:
	lsls r2, r2, #5
	ldr r4, _080BD3CC @ =0x06010000
	adds r2, r2, r4
	add r0, sp, #0x14
	adds r1, r7, #0
	bl sub_8008F0C
	add r5, sp, #0x14
	mov sl, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BD3D0
	cmp r1, #0
	beq _080BD3BC
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BD3BC:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080BD496
	.align 2, 0
_080BD3C4: .4byte 0x0000041C
_080BD3C8: .4byte 0x00000464
_080BD3CC: .4byte 0x06010000
_080BD3D0:
	str r1, [sp, #0xa4]
	mov r4, r8
	str r4, [sp, #0x60]
	ldr r0, [r6]
	adds r5, r1, #0
	subs r0, r5, r0
	asrs r4, r0, #4
	str r4, [sp, #0x5c]
	add r1, sp, #0x60
	add r0, sp, #0x5c
	cmp r4, #1
	bhs _080BD3EA
	adds r0, r1, #0
_080BD3EA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BD408
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080BD40C
	mov r0, r8
	bl sub_80D3BC0
	b _080BD40C
_080BD408:
	movs r0, #0
	mov r8, r0
_080BD40C:
	adds r5, r0, #0
	str r5, [sp, #0xa8]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0xa4]
	cmp r2, r7
	beq _080BD434
_080BD41A:
	cmp r3, #0
	beq _080BD42A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BD42A:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xa4]
	cmp r2, r0
	bne _080BD41A
_080BD434:
	adds r5, r3, #0
	ldr r0, [sp, #0x60]
	cmp r0, #1
	bne _080BD450
	cmp r5, #0
	beq _080BD44C
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BD44C:
	adds r5, #0x10
	b _080BD472
_080BD450:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080BD470
_080BD458:
	cmp r2, #0
	beq _080BD468
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BD468:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BD458
_080BD470:
	adds r5, r2, #0
_080BD472:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BD482
_080BD47C:
	adds r1, #0x10
	cmp r1, r2
	bne _080BD47C
_080BD482:
	cmp r0, #0
	beq _080BD48A
	bl sub_80D0260
_080BD48A:
	ldr r0, [sp, #0xa8]
	add r0, r8
	ldr r7, [sp, #0xa8]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080BD496:
	mov r0, sb
	bl sub_8008910
	adds r4, r0, #0
	movs r2, #0x8f
	lsls r2, r2, #3
	add r2, sb
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080BD4B0
	ldrh r3, [r2, #4]
_080BD4B0:
	adds r6, r4, #0
	add r0, sp, #0x14
	ldr r2, _080BD4E0 @ =0x05000260
	bl sub_8008F0C
	add r0, sp, #0x14
	mov sl, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BD4E4
	cmp r1, #0
	beq _080BD4D6
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BD4D6:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080BD5AA
	.align 2, 0
_080BD4E0: .4byte 0x05000260
_080BD4E4:
	str r1, [sp, #0xa4]
	movs r0, #1
	str r0, [sp, #0x68]
	ldr r0, [r6]
	adds r5, r1, #0
	subs r0, r5, r0
	asrs r4, r0, #4
	str r4, [sp, #0x64]
	add r1, sp, #0x68
	add r0, sp, #0x64
	cmp r4, #1
	bhs _080BD4FE
	adds r0, r1, #0
_080BD4FE:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BD51C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080BD520
	mov r0, r8
	bl sub_80D3BC0
	b _080BD520
_080BD51C:
	movs r0, #0
	mov r8, r0
_080BD520:
	adds r5, r0, #0
	str r5, [sp, #0xa8]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0xa4]
	cmp r2, r7
	beq _080BD548
_080BD52E:
	cmp r3, #0
	beq _080BD53E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BD53E:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xa4]
	cmp r2, r0
	bne _080BD52E
_080BD548:
	adds r5, r3, #0
	ldr r0, [sp, #0x68]
	cmp r0, #1
	bne _080BD564
	cmp r5, #0
	beq _080BD560
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BD560:
	adds r5, #0x10
	b _080BD586
_080BD564:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080BD584
_080BD56C:
	cmp r2, #0
	beq _080BD57C
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BD57C:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BD56C
_080BD584:
	adds r5, r2, #0
_080BD586:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BD596
_080BD590:
	adds r1, #0x10
	cmp r1, r2
	bne _080BD590
_080BD596:
	cmp r0, #0
	beq _080BD59E
	bl sub_80D0260
_080BD59E:
	ldr r0, [sp, #0xa8]
	add r0, r8
	ldr r7, [sp, #0xa8]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080BD5AA:
	movs r0, #0x14
	bl sub_80005D4
	movs r1, #0x85
	lsls r1, r1, #3
	add r1, sb
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r4, r0, #0
	movs r7, #0x96
	lsls r7, r7, #3
	add r7, sb
	ldr r0, [r7]
	cmp r4, r0
	beq _080BD5D4
	bl sub_8000608
_080BD5D4:
	str r4, [r7]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r0, #0
	movs r5, #0
	strh r5, [r4]
	strh r5, [r4, #2]
	strh r5, [r4, #4]
	strh r5, [r4, #6]
	strh r5, [r4, #8]
	str r5, [r4, #0xc]
	strb r0, [r4, #0x10]
	strb r0, [r4, #0x11]
	str r5, [r4, #0x14]
	strb r0, [r4, #0x18]
	ldr r6, _080BD6CC @ =0x000004B4
	add r6, sb
	ldr r0, [r6]
	cmp r4, r0
	beq _080BD604
	bl sub_8000608
_080BD604:
	str r4, [r6]
	ldr r0, [r7]
	movs r1, #0
	bl sub_805E860
	ldr r1, [r6]
	movs r0, #0xc0
	strh r0, [r1]
	ldr r0, [r6]
	strh r5, [r0, #2]
	ldr r4, [r6]
	movs r5, #0xba
	lsls r5, r5, #3
	add r5, sb
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	strh r0, [r4, #6]
	ldr r1, [r6]
	movs r0, #5
	strh r0, [r1, #4]
	ldr r0, [r6]
	movs r1, #1
	movs r2, #1
	mov r8, r2
	mov r3, r8
	strh r3, [r0, #8]
	ldr r0, [r6]
	strb r1, [r0, #0x18]
	movs r4, #0x97
	lsls r4, r4, #3
	add r4, sb
	ldr r0, [r7]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x14
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r0, sp, #0x14
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	add r0, sp, #0x14
	ldm r0!, {r1, r6, r7}
	stm r4!, {r1, r6, r7}
	ldm r0!, {r2, r3, r6}
	stm r4!, {r2, r3, r6}
	ldm r0!, {r1, r7}
	stm r4!, {r1, r7}
	mov r0, sb
	bl sub_8008910
	adds r6, r0, #0
	movs r4, #0x98
	lsls r4, r4, #3
	add r4, sb
	ldr r7, [r4]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080BD69A
	ldrh r3, [r4, #4]
_080BD69A:
	lsls r2, r2, #5
	ldr r4, _080BD6D0 @ =0x06010000
	adds r2, r2, r4
	add r0, sp, #0x14
	adds r1, r7, #0
	bl sub_8008F0C
	add r5, sp, #0x14
	mov sl, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BD6D4
	cmp r1, #0
	beq _080BD6C4
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BD6C4:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080BD79A
	.align 2, 0
_080BD6CC: .4byte 0x000004B4
_080BD6D0: .4byte 0x06010000
_080BD6D4:
	str r1, [sp, #0xa4]
	mov r4, r8
	str r4, [sp, #0x70]
	ldr r0, [r6]
	adds r5, r1, #0
	subs r0, r5, r0
	asrs r4, r0, #4
	str r4, [sp, #0x6c]
	add r1, sp, #0x70
	add r0, sp, #0x6c
	cmp r4, #1
	bhs _080BD6EE
	adds r0, r1, #0
_080BD6EE:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BD70C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080BD710
	mov r0, r8
	bl sub_80D3BC0
	b _080BD710
_080BD70C:
	movs r0, #0
	mov r8, r0
_080BD710:
	adds r5, r0, #0
	str r5, [sp, #0xa8]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0xa4]
	cmp r2, r7
	beq _080BD738
_080BD71E:
	cmp r3, #0
	beq _080BD72E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BD72E:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xa4]
	cmp r2, r0
	bne _080BD71E
_080BD738:
	adds r5, r3, #0
	ldr r0, [sp, #0x70]
	cmp r0, #1
	bne _080BD754
	cmp r5, #0
	beq _080BD750
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BD750:
	adds r5, #0x10
	b _080BD776
_080BD754:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080BD774
_080BD75C:
	cmp r2, #0
	beq _080BD76C
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BD76C:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BD75C
_080BD774:
	adds r5, r2, #0
_080BD776:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BD786
_080BD780:
	adds r1, #0x10
	cmp r1, r2
	bne _080BD780
_080BD786:
	cmp r0, #0
	beq _080BD78E
	bl sub_80D0260
_080BD78E:
	ldr r0, [sp, #0xa8]
	add r0, r8
	ldr r7, [sp, #0xa8]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080BD79A:
	mov r0, sb
	bl sub_8008910
	adds r4, r0, #0
	movs r2, #0x99
	lsls r2, r2, #3
	add r2, sb
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080BD7B4
	ldrh r3, [r2, #4]
_080BD7B4:
	adds r6, r4, #0
	add r0, sp, #0x14
	ldr r2, _080BD7E4 @ =0x050002A0
	bl sub_8008F0C
	add r0, sp, #0x14
	mov sl, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BD7E8
	cmp r1, #0
	beq _080BD7DA
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BD7DA:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080BD8AE
	.align 2, 0
_080BD7E4: .4byte 0x050002A0
_080BD7E8:
	str r1, [sp, #0xa4]
	movs r0, #1
	str r0, [sp, #0x78]
	ldr r0, [r6]
	adds r5, r1, #0
	subs r0, r5, r0
	asrs r4, r0, #4
	str r4, [sp, #0x74]
	add r1, sp, #0x78
	add r0, sp, #0x74
	cmp r4, #1
	bhs _080BD802
	adds r0, r1, #0
_080BD802:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BD820
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080BD824
	mov r0, r8
	bl sub_80D3BC0
	b _080BD824
_080BD820:
	movs r0, #0
	mov r8, r0
_080BD824:
	adds r5, r0, #0
	str r5, [sp, #0xa8]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0xa4]
	cmp r2, r7
	beq _080BD84C
_080BD832:
	cmp r3, #0
	beq _080BD842
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BD842:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xa4]
	cmp r2, r0
	bne _080BD832
_080BD84C:
	adds r5, r3, #0
	ldr r0, [sp, #0x78]
	cmp r0, #1
	bne _080BD868
	cmp r5, #0
	beq _080BD864
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BD864:
	adds r5, #0x10
	b _080BD88A
_080BD868:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080BD888
_080BD870:
	cmp r2, #0
	beq _080BD880
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BD880:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BD870
_080BD888:
	adds r5, r2, #0
_080BD88A:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BD89A
_080BD894:
	adds r1, #0x10
	cmp r1, r2
	bne _080BD894
_080BD89A:
	cmp r0, #0
	beq _080BD8A2
	bl sub_80D0260
_080BD8A2:
	ldr r0, [sp, #0xa8]
	add r0, r8
	ldr r7, [sp, #0xa8]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080BD8AE:
	movs r0, #0x14
	bl sub_80005D4
	movs r1, #0x86
	lsls r1, r1, #3
	add r1, sb
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r4, r0, #0
	movs r7, #0xa5
	lsls r7, r7, #3
	add r7, sb
	ldr r0, [r7]
	cmp r4, r0
	beq _080BD8D8
	bl sub_8000608
_080BD8D8:
	str r4, [r7]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r4]
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	strh r0, [r4, #8]
	str r0, [r4, #0xc]
	strb r1, [r4, #0x10]
	strb r1, [r4, #0x11]
	str r0, [r4, #0x14]
	strb r1, [r4, #0x18]
	ldr r6, _080BD9C4 @ =0x0000052C
	add r6, sb
	ldr r0, [r6]
	cmp r4, r0
	beq _080BD908
	bl sub_8000608
_080BD908:
	str r4, [r6]
	ldr r0, [r7]
	movs r1, #0
	bl sub_805E860
	ldr r1, [r6]
	movs r0, #0x80
	strh r0, [r1]
	ldr r1, [r6]
	movs r0, #0x30
	strh r0, [r1, #2]
	ldr r4, [r6]
	movs r5, #0xbb
	lsls r5, r5, #3
	add r5, sb
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	strh r0, [r4, #6]
	ldr r1, [r6]
	movs r0, #6
	strh r0, [r1, #4]
	movs r4, #0xa6
	lsls r4, r4, #3
	add r4, sb
	ldr r0, [r7]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x14
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r0, sp, #0x14
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	add r0, sp, #0x14
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r1, r6, r7}
	stm r4!, {r1, r6, r7}
	ldm r0!, {r2, r3}
	stm r4!, {r2, r3}
	mov r0, sb
	bl sub_8008910
	adds r6, r0, #0
	movs r4, #0xa7
	lsls r4, r4, #3
	add r4, sb
	ldr r7, [r4]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080BD990
	ldrh r3, [r4, #4]
_080BD990:
	lsls r2, r2, #5
	ldr r4, _080BD9C8 @ =0x06010000
	adds r2, r2, r4
	add r0, sp, #0x14
	adds r1, r7, #0
	bl sub_8008F0C
	add r5, sp, #0x14
	mov sl, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BD9CC
	cmp r1, #0
	beq _080BD9BA
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BD9BA:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080BDA92
	.align 2, 0
_080BD9C4: .4byte 0x0000052C
_080BD9C8: .4byte 0x06010000
_080BD9CC:
	str r1, [sp, #0xa4]
	movs r0, #1
	str r0, [sp, #0x80]
	ldr r0, [r6]
	adds r4, r1, #0
	subs r0, r4, r0
	asrs r4, r0, #4
	str r4, [sp, #0x7c]
	add r1, sp, #0x80
	add r0, sp, #0x7c
	cmp r4, #1
	bhs _080BD9E6
	adds r0, r1, #0
_080BD9E6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BDA04
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080BDA08
	mov r0, r8
	bl sub_80D3BC0
	b _080BDA08
_080BDA04:
	movs r0, #0
	mov r8, r0
_080BDA08:
	adds r5, r0, #0
	str r5, [sp, #0xa8]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r5, [sp, #0xa4]
	cmp r2, r5
	beq _080BDA30
_080BDA16:
	cmp r3, #0
	beq _080BDA26
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BDA26:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0xa4]
	cmp r2, r7
	bne _080BDA16
_080BDA30:
	adds r5, r3, #0
	ldr r0, [sp, #0x80]
	cmp r0, #1
	bne _080BDA4C
	cmp r5, #0
	beq _080BDA48
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BDA48:
	adds r5, #0x10
	b _080BDA6E
_080BDA4C:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080BDA6C
_080BDA54:
	cmp r2, #0
	beq _080BDA64
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BDA64:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BDA54
_080BDA6C:
	adds r5, r2, #0
_080BDA6E:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BDA7E
_080BDA78:
	adds r1, #0x10
	cmp r1, r2
	bne _080BDA78
_080BDA7E:
	cmp r0, #0
	beq _080BDA86
	bl sub_80D0260
_080BDA86:
	ldr r0, [sp, #0xa8]
	add r0, r8
	ldr r7, [sp, #0xa8]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080BDA92:
	mov r0, sb
	bl sub_8008910
	adds r4, r0, #0
	movs r2, #0xa8
	lsls r2, r2, #3
	add r2, sb
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080BDAAC
	ldrh r3, [r2, #4]
_080BDAAC:
	adds r6, r4, #0
	add r0, sp, #0x14
	ldr r2, _080BDADC @ =0x050002C0
	bl sub_8008F0C
	add r0, sp, #0x14
	mov sl, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BDAE0
	cmp r1, #0
	beq _080BDAD2
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BDAD2:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080BDBA6
	.align 2, 0
_080BDADC: .4byte 0x050002C0
_080BDAE0:
	str r1, [sp, #0xa4]
	movs r0, #1
	str r0, [sp, #0x88]
	ldr r0, [r6]
	adds r5, r1, #0
	subs r0, r5, r0
	asrs r4, r0, #4
	str r4, [sp, #0x84]
	add r1, sp, #0x88
	add r0, sp, #0x84
	cmp r4, #1
	bhs _080BDAFA
	adds r0, r1, #0
_080BDAFA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BDB18
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080BDB1C
	mov r0, r8
	bl sub_80D3BC0
	b _080BDB1C
_080BDB18:
	movs r0, #0
	mov r8, r0
_080BDB1C:
	adds r5, r0, #0
	str r5, [sp, #0xa8]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0xa4]
	cmp r2, r7
	beq _080BDB44
_080BDB2A:
	cmp r3, #0
	beq _080BDB3A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BDB3A:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xa4]
	cmp r2, r0
	bne _080BDB2A
_080BDB44:
	adds r5, r3, #0
	ldr r0, [sp, #0x88]
	cmp r0, #1
	bne _080BDB60
	cmp r5, #0
	beq _080BDB5C
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BDB5C:
	adds r5, #0x10
	b _080BDB82
_080BDB60:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080BDB80
_080BDB68:
	cmp r2, #0
	beq _080BDB78
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BDB78:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BDB68
_080BDB80:
	adds r5, r2, #0
_080BDB82:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BDB92
_080BDB8C:
	adds r1, #0x10
	cmp r1, r2
	bne _080BDB8C
_080BDB92:
	cmp r0, #0
	beq _080BDB9A
	bl sub_80D0260
_080BDB9A:
	ldr r0, [sp, #0xa8]
	add r0, r8
	ldr r7, [sp, #0xa8]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080BDBA6:
	movs r0, #0x14
	bl sub_80005D4
	ldr r7, _080BDD3C @ =0x0000042C
	add r7, sb
	ldr r1, [r7]
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	adds r5, r0, #0
	movs r4, #0x9b
	lsls r4, r4, #3
	add r4, sb
	ldr r0, [r4]
	cmp r5, r0
	beq _080BDBCE
	bl sub_8000608
_080BDBCE:
	str r5, [r4]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r0, #0
	mov r8, r0
	movs r6, #0
	strh r6, [r4]
	strh r6, [r4, #2]
	strh r6, [r4, #4]
	strh r6, [r4, #6]
	strh r6, [r4, #8]
	str r6, [r4, #0xc]
	mov r1, r8
	strb r1, [r4, #0x10]
	strb r1, [r4, #0x11]
	str r6, [r4, #0x14]
	strb r1, [r4, #0x18]
	ldr r5, _080BDD40 @ =0x000004DC
	add r5, sb
	ldr r0, [r5]
	cmp r4, r0
	beq _080BDC02
	bl sub_8000608
_080BDC02:
	str r4, [r5]
	movs r0, #0x85
	strh r0, [r4]
	movs r0, #0x50
	strh r0, [r4, #2]
	movs r0, #0xbe
	lsls r0, r0, #3
	add r0, sb
	ldr r1, [r0, #4]
	bl sub_8007D4C
	strh r0, [r4, #6]
	ldr r1, [r5]
	movs r0, #0xa
	strh r0, [r1, #4]
	ldr r0, [r5]
	movs r2, #1
	mov sl, r2
	strh r2, [r0, #8]
	ldr r0, [r5]
	mov r3, sl
	strb r3, [r0, #0x18]
	movs r0, #0x14
	bl sub_80005D4
	ldr r1, [r7]
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	adds r4, r0, #0
	movs r7, #0xa0
	lsls r7, r7, #3
	add r7, sb
	ldr r0, [r7]
	cmp r4, r0
	beq _080BDC52
	bl sub_8000608
_080BDC52:
	str r4, [r7]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	strh r6, [r4]
	strh r6, [r4, #2]
	strh r6, [r4, #4]
	strh r6, [r4, #6]
	strh r6, [r4, #8]
	str r6, [r4, #0xc]
	mov r5, r8
	strb r5, [r4, #0x10]
	strb r5, [r4, #0x11]
	str r6, [r4, #0x14]
	strb r5, [r4, #0x18]
	ldr r6, _080BDD44 @ =0x00000504
	add r6, sb
	ldr r0, [r6]
	cmp r4, r0
	beq _080BDC80
	bl sub_8000608
_080BDC80:
	str r4, [r6]
	ldr r0, [r7]
	ldr r1, _080BDD48 @ =0x0000091A
	bl sub_805E860
	ldr r4, [r6]
	movs r5, #0xbd
	lsls r5, r5, #3
	add r5, sb
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	strh r0, [r4, #6]
	ldr r1, [r6]
	movs r0, #8
	strh r0, [r1, #4]
	ldr r0, [r6]
	movs r1, #1
	strh r1, [r0, #8]
	ldr r0, [r6]
	mov r2, sl
	strb r2, [r0, #0x18]
	movs r4, #0xa1
	lsls r4, r4, #3
	add r4, sb
	ldr r0, [r7]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x14
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r0, sp, #0x14
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	add r0, sp, #0x14
	ldm r0!, {r3, r6, r7}
	stm r4!, {r3, r6, r7}
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r6, r7}
	stm r4!, {r6, r7}
	mov r0, sb
	bl sub_8008910
	adds r6, r0, #0
	movs r4, #0xa2
	lsls r4, r4, #3
	add r4, sb
	ldr r7, [r4]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080BDD08
	ldrh r3, [r4, #4]
_080BDD08:
	lsls r2, r2, #5
	ldr r0, _080BDD4C @ =0x06010000
	adds r2, r2, r0
	add r0, sp, #0x14
	adds r1, r7, #0
	bl sub_8008F0C
	add r1, sp, #0x14
	mov sl, r1
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BDD50
	cmp r1, #0
	beq _080BDD32
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BDD32:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080BDE14
	.align 2, 0
_080BDD3C: .4byte 0x0000042C
_080BDD40: .4byte 0x000004DC
_080BDD44: .4byte 0x00000504
_080BDD48: .4byte 0x0000091A
_080BDD4C: .4byte 0x06010000
_080BDD50:
	str r1, [sp, #0xa4]
	add r0, sp, #0x90
	movs r5, #1
	str r5, [r0]
	ldr r1, [r6]
	ldr r7, [sp, #0xa4]
	subs r1, r7, r1
	asrs r4, r1, #4
	str r4, [sp, #0x8c]
	ldr r1, [r0]
	add r2, sp, #0x8c
	cmp r4, r1
	bhs _080BDD6C
	adds r2, r0, #0
_080BDD6C:
	ldr r0, [r2]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BDD8A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080BDD8E
	mov r0, r8
	bl sub_80D3BC0
	b _080BDD8E
_080BDD8A:
	movs r0, #0
	mov r8, r0
_080BDD8E:
	adds r5, r0, #0
	str r5, [sp, #0xa8]
	ldr r2, [r6]
	adds r3, r5, #0
	b _080BDDAC
_080BDD98:
	cmp r3, #0
	beq _080BDDA8
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BDDA8:
	adds r2, #0x10
	adds r3, #0x10
_080BDDAC:
	ldr r0, [sp, #0xa4]
	cmp r2, r0
	bne _080BDD98
	adds r5, r3, #0
	ldr r0, [sp, #0x90]
	cmp r0, #1
	bne _080BDDCE
	cmp r5, #0
	beq _080BDDCA
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BDDCA:
	adds r5, #0x10
	b _080BDDF0
_080BDDCE:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080BDDEE
_080BDDD6:
	cmp r2, #0
	beq _080BDDE6
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BDDE6:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BDDD6
_080BDDEE:
	adds r5, r2, #0
_080BDDF0:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BDE00
_080BDDFA:
	adds r1, #0x10
	cmp r1, r2
	bne _080BDDFA
_080BDE00:
	cmp r0, #0
	beq _080BDE08
	bl sub_80D0260
_080BDE08:
	ldr r0, [sp, #0xa8]
	add r0, r8
	ldr r7, [sp, #0xa8]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080BDE14:
	mov r0, sb
	bl sub_8008910
	adds r4, r0, #0
	movs r1, #0xa3
	lsls r1, r1, #3
	add r1, sb
	ldr r0, [r1]
	adds r2, r0, #0
	movs r3, #0
	cmp r2, #0
	beq _080BDE2E
	ldrh r3, [r1, #4]
_080BDE2E:
	adds r6, r4, #0
	add r0, sp, #0x14
	adds r1, r2, #0
	ldr r2, _080BDE60 @ =0x05000300
	bl sub_8008F0C
	add r0, sp, #0x14
	mov r8, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BDE64
	cmp r1, #0
	beq _080BDE56
	adds r0, r1, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BDE56:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080BDF30
	.align 2, 0
_080BDE60: .4byte 0x05000300
_080BDE64:
	str r1, [sp, #0xa4]
	movs r0, #1
	add r1, sp, #0x98
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0xa4]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x94
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _080BDE82
	mov r0, sl
_080BDE82:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BDEA0
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080BDEA4
	mov r0, sb
	bl sub_80D3BC0
	b _080BDEA4
_080BDEA0:
	movs r0, #0
	mov sb, r0
_080BDEA4:
	adds r5, r0, #0
	str r5, [sp, #0xa8]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0xa4]
	cmp r2, r7
	beq _080BDECC
_080BDEB2:
	cmp r3, #0
	beq _080BDEC2
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BDEC2:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xa4]
	cmp r2, r0
	bne _080BDEB2
_080BDECC:
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _080BDEEA
	cmp r5, #0
	beq _080BDEE6
	adds r0, r5, #0
	mov r1, r8
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BDEE6:
	adds r5, #0x10
	b _080BDF0C
_080BDEEA:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080BDF0A
_080BDEF2:
	cmp r2, #0
	beq _080BDF02
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BDF02:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BDEF2
_080BDF0A:
	adds r5, r2, #0
_080BDF0C:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BDF1C
_080BDF16:
	adds r1, #0x10
	cmp r1, r2
	bne _080BDF16
_080BDF1C:
	cmp r0, #0
	beq _080BDF24
	bl sub_80D0260
_080BDF24:
	ldr r0, [sp, #0xa8]
	add r0, sb
	ldr r1, [sp, #0xa8]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080BDF30:
	add sp, #0xac
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80BDF40
sub_80BDF40: @ 0x080BDF40
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x48
	adds r5, r0, #0
	ldr r1, _080BE0FC @ =0x0000060B
	adds r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080BDF88
	movs r2, #0x89
	lsls r2, r2, #3
	adds r4, r5, r2
	movs r6, #2
_080BDF60:
	adds r0, r5, #0
	bl sub_8008920
	adds r3, r0, #0
	ldrb r2, [r3]
	cmp r2, #0x7f
	bhi _080BDF80
	lsls r1, r2, #3
	adds r1, #4
	adds r1, r3, r1
	ldr r0, [r4]
	str r0, [r1]
	ldrh r0, [r4, #4]
	strh r0, [r1, #4]
	adds r0, r2, #1
	strb r0, [r3]
_080BDF80:
	adds r4, #8
	subs r6, #1
	cmp r6, #0
	bge _080BDF60
_080BDF88:
	adds r0, r5, #0
	bl sub_8008920
	adds r3, r0, #0
	movs r4, #0x88
	lsls r4, r4, #3
	adds r1, r5, r4
	ldrb r2, [r3]
	cmp r2, #0x7f
	bhi _080BDFB2
	lsls r0, r2, #3
	adds r0, #4
	adds r0, r3, r0
	ldr r1, [r1]
	str r1, [r0]
	ldr r6, _080BE100 @ =0x00000444
	adds r1, r5, r6
	ldrh r1, [r1]
	strh r1, [r0, #4]
	adds r0, r2, #1
	strb r0, [r3]
_080BDFB2:
	ldr r7, _080BE104 @ =0x000005A4
	adds r0, r5, r7
	ldr r0, [r0]
	subs r0, #2
	cmp r0, #1
	bls _080BDFCA
	movs r1, #0xb4
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #2
	bne _080BDFEE
_080BDFCA:
	adds r0, r5, #0
	bl sub_8008920
	adds r4, r0, #0
	movs r2, #0x8d
	lsls r2, r2, #3
	adds r0, r5, r2
	ldr r1, [r0]
	movs r2, #0
	cmp r1, #0
	beq _080BDFE2
	ldrh r2, [r0, #4]
_080BDFE2:
	ldr r3, _080BE108 @ =0x00000464
	adds r0, r5, r3
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
_080BDFEE:
	ldr r4, _080BE0FC @ =0x0000060B
	adds r0, r5, r4
	ldrb r0, [r0]
	cmp r0, #0
	beq _080BE01E
	adds r0, r5, #0
	bl sub_8008920
	adds r4, r0, #0
	movs r6, #0x92
	lsls r6, r6, #3
	adds r3, r5, r6
	ldr r0, [r3]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080BE012
	ldrh r2, [r3, #4]
_080BE012:
	ldr r7, _080BE10C @ =0x0000048C
	adds r0, r5, r7
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
_080BE01E:
	adds r0, r5, #0
	bl sub_8008920
	adds r4, r0, #0
	movs r0, #0x97
	lsls r0, r0, #3
	adds r3, r5, r0
	ldr r0, [r3]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080BE038
	ldrh r2, [r3, #4]
_080BE038:
	ldr r3, _080BE110 @ =0x000004B4
	adds r0, r5, r3
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
	movs r4, #0xb4
	lsls r4, r4, #3
	adds r0, r5, r4
	ldr r0, [r0]
	subs r0, #4
	cmp r0, #1
	bhi _080BE054
	b _080BE344
_080BE054:
	movs r7, #0xa5
	lsls r7, r7, #3
	adds r6, r5, r7
	ldr r0, [r6]
	bl sub_805E8F0
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080BE068
	b _080BE308
_080BE068:
	movs r0, #0xa6
	lsls r0, r0, #3
	adds r4, r5, r0
	ldr r0, [r6]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sp
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	mov r0, sp
	mov r1, sp
	movs r2, #0x20
	bl sub_80D3994
	mov r0, sp
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r1, r6, r7}
	stm r4!, {r1, r6, r7}
	ldm r0!, {r2, r3}
	stm r4!, {r2, r3}
	adds r0, r5, #0
	bl sub_8008910
	adds r6, r0, #0
	movs r7, #0xa7
	lsls r7, r7, #3
	adds r4, r5, r7
	ldr r7, [r4]
	movs r1, #0xbb
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080BE0C6
	ldrh r3, [r4, #4]
_080BE0C6:
	str r6, [sp, #0x40]
	lsls r2, r2, #5
	ldr r4, _080BE114 @ =0x06010000
	adds r2, r2, r4
	mov r0, sp
	adds r1, r7, #0
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BE118
	cmp r1, #0
	beq _080BE0F0
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r6, r7}
	stm r0!, {r2, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BE0F0:
	ldr r3, [sp, #0x40]
	ldr r0, [r3, #4]
	adds r0, #0x10
	str r0, [r3, #4]
	b _080BE1E8
	.align 2, 0
_080BE0FC: .4byte 0x0000060B
_080BE100: .4byte 0x00000444
_080BE104: .4byte 0x000005A4
_080BE108: .4byte 0x00000464
_080BE10C: .4byte 0x0000048C
_080BE110: .4byte 0x000004B4
_080BE114: .4byte 0x06010000
_080BE118:
	str r1, [sp, #0x44]
	movs r0, #1
	str r0, [sp, #0x24]
	ldr r4, [sp, #0x40]
	ldr r0, [r4]
	adds r6, r1, #0
	subs r0, r6, r0
	asrs r4, r0, #4
	str r4, [sp, #0x20]
	add r1, sp, #0x24
	add r0, sp, #0x20
	cmp r4, #1
	bhs _080BE134
	adds r0, r1, #0
_080BE134:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BE152
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080BE156
	mov r0, sb
	bl sub_80D3BC0
	b _080BE156
_080BE152:
	movs r0, #0
	mov sb, r0
_080BE156:
	adds r4, r0, #0
	mov r8, r4
	ldr r7, [sp, #0x40]
	ldr r2, [r7]
	mov r3, r8
	b _080BE176
_080BE162:
	cmp r3, #0
	beq _080BE172
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BE172:
	adds r2, #0x10
	adds r3, #0x10
_080BE176:
	ldr r0, [sp, #0x44]
	cmp r2, r0
	bne _080BE162
	adds r4, r3, #0
	ldr r0, [sp, #0x24]
	cmp r0, #1
	bne _080BE198
	cmp r4, #0
	beq _080BE194
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080BE194:
	adds r4, #0x10
	b _080BE1C0
_080BE198:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _080BE1BE
_080BE1A0:
	cmp r2, #0
	beq _080BE1B0
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BE1B0:
	movs r6, #1
	rsbs r6, r6, #0
	add ip, r6
	adds r2, #0x10
	mov r7, ip
	cmp r7, #0
	bne _080BE1A0
_080BE1BE:
	adds r4, r2, #0
_080BE1C0:
	ldr r0, [sp, #0x40]
	ldr r2, [r0, #4]
	ldr r0, [r0]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BE1D2
_080BE1CC:
	adds r1, #0x10
	cmp r1, r2
	bne _080BE1CC
_080BE1D2:
	cmp r0, #0
	beq _080BE1DA
	bl sub_80D0260
_080BE1DA:
	mov r0, sb
	add r0, r8
	mov r1, r8
	ldr r2, [sp, #0x40]
	str r1, [r2]
	str r4, [r2, #4]
	str r0, [r2, #0xc]
_080BE1E8:
	adds r0, r5, #0
	bl sub_8008910
	adds r4, r0, #0
	movs r3, #0xa8
	lsls r3, r3, #3
	adds r2, r5, r3
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080BE202
	ldrh r3, [r2, #4]
_080BE202:
	str r4, [sp, #0x40]
	mov r0, sp
	ldr r2, _080BE230 @ =0x050002C0
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _080BE234
	cmp r1, #0
	beq _080BE226
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BE226:
	ldr r1, [sp, #0x40]
	ldr r0, [r1, #4]
	adds r0, #0x10
	str r0, [r1, #4]
	b _080BE308
	.align 2, 0
_080BE230: .4byte 0x050002C0
_080BE234:
	str r1, [sp, #0x44]
	movs r0, #1
	str r0, [sp, #0x2c]
	ldr r2, [sp, #0x40]
	ldr r0, [r2]
	adds r3, r1, #0
	subs r0, r3, r0
	asrs r4, r0, #4
	str r4, [sp, #0x28]
	add r1, sp, #0x2c
	add r0, sp, #0x28
	cmp r4, #1
	bhs _080BE250
	adds r0, r1, #0
_080BE250:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BE26E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080BE272
	mov r0, sb
	bl sub_80D3BC0
	b _080BE272
_080BE26E:
	movs r0, #0
	mov sb, r0
_080BE272:
	adds r4, r0, #0
	mov r8, r4
	ldr r4, [sp, #0x40]
	ldr r2, [r4]
	mov r3, r8
	ldr r6, [sp, #0x44]
	cmp r2, r6
	beq _080BE29C
_080BE282:
	cmp r3, #0
	beq _080BE292
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BE292:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0x44]
	cmp r2, r7
	bne _080BE282
_080BE29C:
	adds r4, r3, #0
	ldr r0, [sp, #0x2c]
	cmp r0, #1
	bne _080BE2B8
	cmp r4, #0
	beq _080BE2B4
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080BE2B4:
	adds r4, #0x10
	b _080BE2E0
_080BE2B8:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _080BE2DE
_080BE2C0:
	cmp r2, #0
	beq _080BE2D0
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BE2D0:
	movs r6, #1
	rsbs r6, r6, #0
	add ip, r6
	adds r2, #0x10
	mov r7, ip
	cmp r7, #0
	bne _080BE2C0
_080BE2DE:
	adds r4, r2, #0
_080BE2E0:
	ldr r0, [sp, #0x40]
	ldr r2, [r0, #4]
	ldr r0, [r0]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BE2F2
_080BE2EC:
	adds r1, #0x10
	cmp r1, r2
	bne _080BE2EC
_080BE2F2:
	cmp r0, #0
	beq _080BE2FA
	bl sub_80D0260
_080BE2FA:
	mov r0, sb
	add r0, r8
	mov r1, r8
	ldr r2, [sp, #0x40]
	str r1, [r2]
	str r4, [r2, #4]
	str r0, [r2, #0xc]
_080BE308:
	ldr r3, _080BE33C @ =0x000005AC
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #3
	bne _080BE372
	adds r0, r5, #0
	bl sub_8008920
	adds r4, r0, #0
	movs r6, #0xa6
	lsls r6, r6, #3
	adds r3, r5, r6
	ldr r0, [r3]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080BE32C
	ldrh r2, [r3, #4]
_080BE32C:
	ldr r7, _080BE340 @ =0x0000052C
	adds r0, r5, r7
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
	b _080BE372
	.align 2, 0
_080BE33C: .4byte 0x000005AC
_080BE340: .4byte 0x0000052C
_080BE344:
	ldr r1, _080BE3A0 @ =0x0000060B
	adds r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080BE372
	adds r0, r5, #0
	bl sub_8008920
	adds r4, r0, #0
	movs r2, #0xa6
	lsls r2, r2, #3
	adds r0, r5, r2
	ldr r1, [r0]
	movs r2, #0
	cmp r1, #0
	beq _080BE366
	ldrh r2, [r0, #4]
_080BE366:
	ldr r3, _080BE3A4 @ =0x0000052C
	adds r0, r5, r3
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
_080BE372:
	movs r4, #0xb4
	lsls r4, r4, #3
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #3
	beq _080BE3A8
	cmp r0, #0
	beq _080BE3A8
	movs r6, #0x9b
	lsls r6, r6, #3
	adds r0, r5, r6
	ldr r4, [r0]
	adds r0, r5, #0
	bl sub_80C09D8
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_805E860
	b _080BE3D0
	.align 2, 0
_080BE3A0: .4byte 0x0000060B
_080BE3A4: .4byte 0x0000052C
_080BE3A8:
	ldr r7, _080BE478 @ =0x0000060E
	adds r6, r5, r7
	ldrb r0, [r6]
	cmp r0, #0
	beq _080BE3D0
	movs r1, #0x9b
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r4, [r0]
	adds r0, r5, #0
	bl sub_80C09D8
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_805E860
	movs r0, #0
	strb r0, [r6]
_080BE3D0:
	movs r2, #0x9b
	lsls r2, r2, #3
	adds r6, r5, r2
	ldr r0, [r6]
	bl sub_805E8F0
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080BE3E4
	b _080BE670
_080BE3E4:
	movs r3, #0x9c
	lsls r3, r3, #3
	adds r4, r5, r3
	ldr r0, [r6]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sp
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	mov r0, sp
	mov r1, sp
	movs r2, #0x20
	bl sub_80D3994
	mov r0, sp
	ldm r0!, {r1, r6, r7}
	stm r4!, {r1, r6, r7}
	ldm r0!, {r2, r3, r6}
	stm r4!, {r2, r3, r6}
	ldm r0!, {r1, r7}
	stm r4!, {r1, r7}
	adds r0, r5, #0
	bl sub_8008910
	adds r6, r0, #0
	movs r2, #0x9d
	lsls r2, r2, #3
	adds r4, r5, r2
	ldr r7, [r4]
	movs r3, #0xbe
	lsls r3, r3, #3
	adds r0, r5, r3
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080BE442
	ldrh r3, [r4, #4]
_080BE442:
	str r6, [sp, #0x40]
	lsls r2, r2, #5
	ldr r4, _080BE47C @ =0x06010000
	adds r2, r2, r4
	mov r0, sp
	adds r1, r7, #0
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BE480
	cmp r1, #0
	beq _080BE46C
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r6, r7}
	stm r0!, {r2, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BE46C:
	ldr r3, [sp, #0x40]
	ldr r0, [r3, #4]
	adds r0, #0x10
	str r0, [r3, #4]
	b _080BE550
	.align 2, 0
_080BE478: .4byte 0x0000060E
_080BE47C: .4byte 0x06010000
_080BE480:
	str r1, [sp, #0x44]
	movs r0, #1
	str r0, [sp, #0x34]
	ldr r4, [sp, #0x40]
	ldr r0, [r4]
	adds r6, r1, #0
	subs r0, r6, r0
	asrs r4, r0, #4
	str r4, [sp, #0x30]
	add r1, sp, #0x34
	add r0, sp, #0x30
	cmp r4, #1
	bhs _080BE49C
	adds r0, r1, #0
_080BE49C:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BE4BA
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080BE4BE
	mov r0, sb
	bl sub_80D3BC0
	b _080BE4BE
_080BE4BA:
	movs r0, #0
	mov sb, r0
_080BE4BE:
	adds r4, r0, #0
	mov r8, r4
	ldr r7, [sp, #0x40]
	ldr r2, [r7]
	mov r3, r8
	b _080BE4DE
_080BE4CA:
	cmp r3, #0
	beq _080BE4DA
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BE4DA:
	adds r2, #0x10
	adds r3, #0x10
_080BE4DE:
	ldr r0, [sp, #0x44]
	cmp r2, r0
	bne _080BE4CA
	adds r4, r3, #0
	ldr r0, [sp, #0x34]
	cmp r0, #1
	bne _080BE500
	cmp r4, #0
	beq _080BE4FC
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080BE4FC:
	adds r4, #0x10
	b _080BE528
_080BE500:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _080BE526
_080BE508:
	cmp r2, #0
	beq _080BE518
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BE518:
	movs r6, #1
	rsbs r6, r6, #0
	add ip, r6
	adds r2, #0x10
	mov r7, ip
	cmp r7, #0
	bne _080BE508
_080BE526:
	adds r4, r2, #0
_080BE528:
	ldr r0, [sp, #0x40]
	ldr r2, [r0, #4]
	ldr r0, [r0]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BE53A
_080BE534:
	adds r1, #0x10
	cmp r1, r2
	bne _080BE534
_080BE53A:
	cmp r0, #0
	beq _080BE542
	bl sub_80D0260
_080BE542:
	mov r0, sb
	add r0, r8
	mov r1, r8
	ldr r2, [sp, #0x40]
	str r1, [r2]
	str r4, [r2, #4]
	str r0, [r2, #0xc]
_080BE550:
	adds r0, r5, #0
	bl sub_8008910
	adds r4, r0, #0
	movs r3, #0x9e
	lsls r3, r3, #3
	adds r2, r5, r3
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080BE56A
	ldrh r3, [r2, #4]
_080BE56A:
	str r4, [sp, #0x40]
	mov r0, sp
	ldr r2, _080BE598 @ =0x05000340
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _080BE59C
	cmp r1, #0
	beq _080BE58E
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BE58E:
	ldr r1, [sp, #0x40]
	ldr r0, [r1, #4]
	adds r0, #0x10
	str r0, [r1, #4]
	b _080BE670
	.align 2, 0
_080BE598: .4byte 0x05000340
_080BE59C:
	str r1, [sp, #0x44]
	movs r0, #1
	str r0, [sp, #0x3c]
	ldr r2, [sp, #0x40]
	ldr r0, [r2]
	adds r3, r1, #0
	subs r0, r3, r0
	asrs r4, r0, #4
	str r4, [sp, #0x38]
	add r1, sp, #0x3c
	add r0, sp, #0x38
	cmp r4, #1
	bhs _080BE5B8
	adds r0, r1, #0
_080BE5B8:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BE5D6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080BE5DA
	mov r0, sb
	bl sub_80D3BC0
	b _080BE5DA
_080BE5D6:
	movs r0, #0
	mov sb, r0
_080BE5DA:
	adds r4, r0, #0
	mov r8, r4
	ldr r4, [sp, #0x40]
	ldr r2, [r4]
	mov r3, r8
	ldr r6, [sp, #0x44]
	cmp r2, r6
	beq _080BE604
_080BE5EA:
	cmp r3, #0
	beq _080BE5FA
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BE5FA:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0x44]
	cmp r2, r7
	bne _080BE5EA
_080BE604:
	adds r4, r3, #0
	ldr r0, [sp, #0x3c]
	cmp r0, #1
	bne _080BE620
	cmp r4, #0
	beq _080BE61C
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080BE61C:
	adds r4, #0x10
	b _080BE648
_080BE620:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _080BE646
_080BE628:
	cmp r2, #0
	beq _080BE638
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BE638:
	movs r6, #1
	rsbs r6, r6, #0
	add ip, r6
	adds r2, #0x10
	mov r7, ip
	cmp r7, #0
	bne _080BE628
_080BE646:
	adds r4, r2, #0
_080BE648:
	ldr r0, [sp, #0x40]
	ldr r2, [r0, #4]
	ldr r0, [r0]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BE65A
_080BE654:
	adds r1, #0x10
	cmp r1, r2
	bne _080BE654
_080BE65A:
	cmp r0, #0
	beq _080BE662
	bl sub_80D0260
_080BE662:
	mov r0, sb
	add r0, r8
	mov r1, r8
	ldr r2, [sp, #0x40]
	str r1, [r2]
	str r4, [r2, #4]
	str r0, [r2, #0xc]
_080BE670:
	adds r0, r5, #0
	bl sub_8008920
	adds r4, r0, #0
	movs r6, #0x9c
	lsls r6, r6, #3
	adds r3, r5, r6
	ldr r0, [r3]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080BE68A
	ldrh r2, [r3, #4]
_080BE68A:
	ldr r7, _080BE714 @ =0x000004DC
	adds r0, r5, r7
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
	ldr r1, _080BE718 @ =0x0000060D
	adds r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080BE6D2
	ldr r2, _080BE71C @ =0x00000504
	adds r4, r5, r2
	ldr r1, [r4]
	movs r3, #0xc1
	lsls r3, r3, #3
	adds r0, r5, r3
	ldrb r0, [r0]
	strh r0, [r1]
	ldr r1, [r4]
	movs r0, #0x50
	strh r0, [r1, #2]
	adds r0, r5, #0
	bl sub_8008920
	movs r6, #0xa1
	lsls r6, r6, #3
	adds r3, r5, r6
	ldr r1, [r3]
	movs r2, #0
	cmp r1, #0
	beq _080BE6CC
	ldrh r2, [r3, #4]
_080BE6CC:
	ldr r3, [r4]
	bl sub_805E99C
_080BE6D2:
	ldr r7, _080BE720 @ =0x0000060C
	adds r0, r5, r7
	ldrb r0, [r0]
	cmp r0, #0
	beq _080BE702
	adds r0, r5, #0
	bl sub_8008920
	adds r4, r0, #0
	movs r0, #0xab
	lsls r0, r0, #3
	adds r3, r5, r0
	ldr r0, [r3]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080BE6F6
	ldrh r2, [r3, #4]
_080BE6F6:
	ldr r3, _080BE724 @ =0x00000554
	adds r0, r5, r3
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
_080BE702:
	add sp, #0x48
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080BE714: .4byte 0x000004DC
_080BE718: .4byte 0x0000060D
_080BE71C: .4byte 0x00000504
_080BE720: .4byte 0x0000060C
_080BE724: .4byte 0x00000554

	thumb_func_start sub_80BE728
sub_80BE728: @ 0x080BE728
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x40
	mov sb, r0
	cmp r1, #0x3c
	beq _080BE73C
	b _080BE93A
_080BE73C:
	ldr r5, _080BE7C8 @ =0x000005FD
	add r5, sb
	ldrb r0, [r5]
	subs r0, #1
	movs r1, #0
	mov sl, r1
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #9
	bne _080BE760
	movs r0, #0xaf
	lsls r0, r0, #3
	add r0, sb
	movs r1, #0xc0
	lsls r1, r1, #1
	bl sub_8008C28
_080BE760:
	ldrb r0, [r5]
	add r1, sp, #0xc
	movs r2, #0
	bl sub_804EC84
	ldrb r0, [r5]
	cmp r0, #9
	bhi _080BE786
	add r0, sp, #0x10
	ldr r1, _080BE7CC @ =gUnknown_08107DB8
	movs r2, #2
	bl sub_80D3994
	add r1, sp, #0xc
	adds r0, r1, #0
	ldrb r0, [r0]
	strb r0, [r1, #1]
	movs r0, #0x30
	strb r0, [r1]
_080BE786:
	add r0, sp, #0x24
	movs r6, #4
	movs r7, #2
	strh r6, [r0]
	strh r7, [r0, #2]
	ldr r0, [sp, #0x24]
	mov r4, sb
	adds r4, #0xc
	adds r1, r4, #0
	movs r2, #0
	bl sub_804E7A0
	ldrb r0, [r5]
	mov r8, r4
	cmp r0, #9
	bls _080BE7D0
	movs r1, #1
	add r0, sp, #0x28
	strh r6, [r0]
	strh r7, [r0, #2]
	ldr r0, [sp, #0x28]
	add r2, sp, #0xc
	str r2, [sp]
	mov r3, sl
	str r3, [sp, #4]
	str r1, [sp, #8]
	mov r1, r8
	movs r2, #0
	movs r3, #0
	bl sub_804E958
	b _080BE7EE
	.align 2, 0
_080BE7C8: .4byte 0x000005FD
_080BE7CC: .4byte gUnknown_08107DB8
_080BE7D0:
	movs r1, #3
	add r0, sp, #0x2c
	strh r6, [r0]
	strh r7, [r0, #2]
	ldr r0, [sp, #0x2c]
	add r4, sp, #0xc
	str r4, [sp]
	mov r6, sl
	str r6, [sp, #4]
	str r1, [sp, #8]
	mov r1, r8
	movs r2, #0
	movs r3, #0
	bl sub_804E958
_080BE7EE:
	mov r0, sb
	bl sub_8008910
	adds r4, r0, #0
	movs r0, #0xb6
	lsls r0, r0, #3
	add r0, sb
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r2, r0, #0
	movs r3, #0x80
	lsls r3, r3, #1
	adds r5, r4, #0
	lsls r2, r2, #5
	ldr r7, _080BE83C @ =0x06010000
	adds r2, r2, r7
	add r0, sp, #0x14
	mov r1, r8
	bl sub_8008F0C
	add r0, sp, #0x14
	mov r8, r0
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080BE840
	cmp r1, #0
	beq _080BE834
	adds r0, r1, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BE834:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080BE906
	.align 2, 0
_080BE83C: .4byte 0x06010000
_080BE840:
	str r1, [sp, #0x38]
	movs r0, #1
	str r0, [sp, #0x34]
	ldr r0, [r5]
	adds r6, r1, #0
	subs r0, r6, r0
	asrs r4, r0, #4
	str r4, [sp, #0x30]
	add r1, sp, #0x34
	add r0, sp, #0x30
	cmp r4, #1
	bhs _080BE85A
	adds r0, r1, #0
_080BE85A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BE878
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sl, r4
	cmp r0, #0
	bne _080BE87C
	mov r0, sl
	bl sub_80D3BC0
	b _080BE87C
_080BE878:
	movs r0, #0
	mov sl, r0
_080BE87C:
	adds r4, r0, #0
	str r4, [sp, #0x3c]
	ldr r2, [r5]
	adds r3, r4, #0
	ldr r7, [sp, #0x38]
	cmp r2, r7
	beq _080BE8A4
_080BE88A:
	cmp r3, #0
	beq _080BE89A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BE89A:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x38]
	cmp r2, r0
	bne _080BE88A
_080BE8A4:
	adds r4, r3, #0
	ldr r0, [sp, #0x34]
	cmp r0, #1
	bne _080BE8C0
	cmp r4, #0
	beq _080BE8BC
	adds r0, r4, #0
	mov r1, r8
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080BE8BC:
	adds r4, #0x10
	b _080BE8E2
_080BE8C0:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080BE8E0
_080BE8C8:
	cmp r2, #0
	beq _080BE8D8
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BE8D8:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BE8C8
_080BE8E0:
	adds r4, r2, #0
_080BE8E2:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BE8F2
_080BE8EC:
	adds r1, #0x10
	cmp r1, r2
	bne _080BE8EC
_080BE8F2:
	cmp r0, #0
	beq _080BE8FA
	bl sub_80D0260
_080BE8FA:
	ldr r0, [sp, #0x3c]
	add r0, sl
	ldr r7, [sp, #0x3c]
	str r7, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080BE906:
	ldr r0, _080BE94C @ =0x000005FD
	add r0, sb
	ldrb r2, [r0]
	cmp r2, #0
	bne _080BE93A
	movs r1, #0xb4
	lsls r1, r1, #3
	add r1, sb
	movs r0, #4
	str r0, [r1]
	ldr r0, _080BE950 @ =0x000005AC
	add r0, sb
	str r2, [r0]
	movs r0, #0xaf
	lsls r0, r0, #3
	add r0, sb
	movs r1, #0x80
	lsls r1, r1, #1
	bl sub_8008C28
	movs r0, #0xb0
	lsls r0, r0, #3
	add r0, sb
	movs r1, #0xbb
	bl sub_8008B6C
_080BE93A:
	add sp, #0x40
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080BE94C: .4byte 0x000005FD
_080BE950: .4byte 0x000005AC

	thumb_func_start sub_80BE954
sub_80BE954: @ 0x080BE954
	push {r4, r5, lr}
	sub sp, #0x1c
	adds r2, r0, #0
	mov r1, sp
	ldr r0, _080BE994 @ =gUnknown_08107DBC
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
	ldr r0, [r0]
	str r0, [r1]
	movs r0, #0xc3
	lsls r0, r0, #3
	adds r1, r2, r0
	ldr r3, _080BE998 @ =0x00000614
	adds r0, r2, r3
	ldr r0, [r0]
	lsls r0, r0, #2
	add r0, sp
	ldr r0, [r0]
	str r0, [r1]
	ldr r4, _080BE99C @ =0x0000061C
	adds r0, r2, r4
	ldrb r1, [r0]
	cmp r1, #2
	bhi _080BE9A0
	movs r5, #0xc0
	lsls r5, r5, #3
	adds r1, r2, r5
	movs r0, #2
	b _080BEA28
	.align 2, 0
_080BE994: .4byte gUnknown_08107DBC
_080BE998: .4byte 0x00000614
_080BE99C: .4byte 0x0000061C
_080BE9A0:
	subs r0, r1, #3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _080BE9B4
	movs r0, #0xc0
	lsls r0, r0, #3
	adds r1, r2, r0
	movs r0, #3
	b _080BEA28
_080BE9B4:
	subs r0, r1, #6
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _080BE9C8
	movs r3, #0xc0
	lsls r3, r3, #3
	adds r1, r2, r3
	movs r0, #4
	b _080BEA28
_080BE9C8:
	adds r0, r1, #0
	subs r0, #9
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _080BE9DE
	movs r4, #0xc0
	lsls r4, r4, #3
	adds r1, r2, r4
	movs r0, #5
	b _080BEA28
_080BE9DE:
	adds r0, r1, #0
	subs r0, #0xb
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _080BE9F4
	movs r5, #0xc0
	lsls r5, r5, #3
	adds r1, r2, r5
	movs r0, #7
	b _080BEA28
_080BE9F4:
	adds r0, r1, #0
	subs r0, #0xe
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _080BEA0A
	movs r0, #0xc0
	lsls r0, r0, #3
	adds r1, r2, r0
	movs r0, #9
	b _080BEA28
_080BEA0A:
	adds r0, r1, #0
	subs r0, #0x11
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _080BEA20
	movs r3, #0xc0
	lsls r3, r3, #3
	adds r1, r2, r3
	movs r0, #0xa
	b _080BEA28
_080BEA20:
	movs r4, #0xc0
	lsls r4, r4, #3
	adds r1, r2, r4
	movs r0, #0xb
_080BEA28:
	strb r0, [r1]
	add sp, #0x1c
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80BEA34
sub_80BEA34: @ 0x080BEA34
	push {r4, lr}
	movs r2, #0xb4
	lsls r2, r2, #3
	adds r1, r0, r2
	movs r2, #0
	str r2, [r1]
	ldr r3, _080BEAC4 @ =0x000005A4
	adds r1, r0, r3
	str r2, [r1]
	movs r4, #0xb5
	lsls r4, r4, #3
	adds r1, r0, r4
	str r2, [r1]
	adds r3, #8
	adds r1, r0, r3
	str r2, [r1]
	adds r4, #0x53
	adds r1, r0, r4
	strb r2, [r1]
	adds r3, #0x4e
	adds r1, r0, r3
	strb r2, [r1]
	subs r4, #2
	adds r1, r0, r4
	strb r2, [r1]
	subs r3, #2
	adds r1, r0, r3
	strb r2, [r1]
	adds r4, #4
	adds r3, r0, r4
	movs r1, #0x3c
	strb r1, [r3]
	ldr r3, _080BEAC8 @ =0x000005FE
	adds r1, r0, r3
	strb r2, [r1]
	adds r4, #2
	adds r1, r0, r4
	strb r2, [r1]
	movs r1, #0xc1
	lsls r1, r1, #3
	adds r3, r0, r1
	movs r1, #0x85
	strb r1, [r3]
	ldr r3, _080BEACC @ =0x00000609
	adds r1, r0, r3
	strb r2, [r1]
	adds r4, #0xb
	adds r1, r0, r4
	strb r2, [r1]
	adds r3, #2
	adds r1, r0, r3
	strb r2, [r1]
	adds r4, #4
	adds r1, r0, r4
	movs r3, #1
	strb r3, [r1]
	subs r4, #2
	adds r1, r0, r4
	strb r2, [r1]
	adds r4, #1
	adds r1, r0, r4
	strb r3, [r1]
	ldr r3, _080BEAD0 @ =0x0000060F
	adds r1, r0, r3
	strb r2, [r1]
	adds r4, #3
	adds r0, r0, r4
	strb r2, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080BEAC4: .4byte 0x000005A4
_080BEAC8: .4byte 0x000005FE
_080BEACC: .4byte 0x00000609
_080BEAD0: .4byte 0x0000060F

	thumb_func_start sub_80BEAD4
sub_80BEAD4: @ 0x080BEAD4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x24
	adds r7, r0, #0
	movs r0, #0
	str r0, [sp, #0x10]
	movs r1, #0
	str r1, [sp, #0x14]
	ldr r2, _080BEB78 @ =0x00000611
	adds r0, r7, r2
	strb r1, [r0]
	ldr r1, _080BEB7C @ =0x00000612
	adds r0, r7, r1
	mov r2, sp
	ldrb r2, [r2, #0x14]
	strb r2, [r0]
	movs r3, #0
	str r3, [sp, #0x18]
	movs r0, #0x85
	lsls r0, r0, #8
	str r0, [sp, #0x1c]
	adds r0, r7, #0
	bl sub_8008918
	add r2, sp, #0xc
	movs r3, #0xba
	lsls r3, r3, #5
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0]
	movs r0, #0x83
	lsls r0, r0, #3
	adds r0, r0, r7
	mov r8, r0
	ldr r1, [r0]
	mov sl, r1
	adds r0, r7, #0
	bl sub_80088DC
	mov sb, r0
	adds r0, r7, #0
	bl sub_8008920
	str r0, [sp, #0x20]
	adds r0, r7, #0
	bl sub_8008918
	adds r5, r0, #0
	adds r0, r7, #0
	bl sub_8008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl sub_800894C
	ldr r2, _080BEB80 @ =0x0000057C
	adds r1, r7, r2
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, sl
	mov r1, sb
	ldr r2, [sp, #0x20]
	adds r3, r5, #0
	bl sub_8050D3C
	mov r3, r8
	ldr r4, [r3]
	adds r0, r7, #0
	bl sub_80C0B58
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_8050E50
	b _080BF0CC
	.align 2, 0
_080BEB78: .4byte 0x00000611
_080BEB7C: .4byte 0x00000612
_080BEB80: .4byte 0x0000057C
_080BEB84:
	adds r0, r7, #0
	bl sub_80087C8
	adds r0, r7, #0
	bl sub_80088B8
	movs r2, #0x83
	lsls r2, r2, #3
	adds r4, r7, r2
	ldr r0, [r4]
	bl sub_8050D34
	adds r6, r0, #0
	ldr r4, [r4]
	mov sb, r4
	adds r0, r7, #0
	bl sub_80088DC
	mov r8, r0
	adds r0, r7, #0
	bl sub_8008920
	mov sl, r0
	adds r0, r7, #0
	bl sub_8008918
	adds r5, r0, #0
	adds r0, r7, #0
	bl sub_8008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl sub_800894C
	ldr r3, _080BEBF0 @ =0x0000057C
	adds r1, r7, r3
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, sb
	mov r1, r8
	mov r2, sl
	adds r3, r5, #0
	bl sub_8050D3C
	cmp r0, #6
	bls _080BEBE4
	b _080BEEA6
_080BEBE4:
	lsls r0, r0, #2
	ldr r1, _080BEBF4 @ =_080BEBF8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080BEBF0: .4byte 0x0000057C
_080BEBF4: .4byte _080BEBF8
_080BEBF8: @ jump table
	.4byte _080BEC14 @ case 0
	.4byte _080BEEA6 @ case 1
	.4byte _080BEEA6 @ case 2
	.4byte _080BECBC @ case 3
	.4byte _080BEE8A @ case 4
	.4byte _080BEEA6 @ case 5
	.4byte _080BEEA6 @ case 6
_080BEC14:
	ldr r0, [sp, #0x10]
	cmp r0, #8
	bne _080BEC26
	movs r2, #0xb4
	lsls r2, r2, #3
	adds r1, r7, r2
	movs r0, #1
	str r0, [r1]
	b _080BEEA6
_080BEC26:
	movs r3, #0x83
	lsls r3, r3, #3
	adds r0, r7, r3
	ldr r0, [r0]
	bl sub_8050D5C
	ldr r0, [sp, #0x10]
	cmp r0, #5
	beq _080BEC3A
	b _080BEEA6
_080BEC3A:
	ldr r1, _080BEC6C @ =0x0000043C
	adds r4, r7, r1
	ldr r2, [r4]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _080BEC68
	ldr r1, _080BEC70 @ =0x00000889
	adds r0, r2, #0
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl sub_8009378
	adds r0, r7, #0
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [r4]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
_080BEC68:
	ldr r0, [r4]
	b _080BEC86
	.align 2, 0
_080BEC6C: .4byte 0x0000043C
_080BEC70: .4byte 0x00000889
_080BEC74:
	adds r0, r7, #0
	bl sub_80087C8
	adds r0, r7, #0
	bl sub_80BDF40
	ldr r2, _080BECB4 @ =0x0000043C
	adds r0, r7, r2
	ldr r0, [r0]
_080BEC86:
	ldr r0, [r0]
	rsbs r2, r0, #0
	orrs r2, r0
	cmp r2, #0
	blt _080BEC74
	ldr r3, _080BECB4 @ =0x0000043C
	adds r4, r7, r3
	ldr r0, [r4]
	ldr r1, _080BECB8 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl sub_800934C
	adds r0, r7, #0
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [r4]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
	b _080BEEA6
	.align 2, 0
_080BECB4: .4byte 0x0000043C
_080BECB8: .4byte 0x00000889
_080BECBC:
	cmp r6, #5
	bgt _080BECCC
	cmp r6, #4
	blt _080BECC6
	b _080BEEA6
_080BECC6:
	cmp r6, #1
	beq _080BECE0
	b _080BECD2
_080BECCC:
	cmp r6, #6
	bne _080BECD2
	b _080BEE40
_080BECD2:
	movs r1, #0x83
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r0, [r0]
	bl sub_8050D74
	b _080BEEA6
_080BECE0:
	ldr r2, [sp, #0x10]
	cmp r2, #7
	bls _080BECE8
	b _080BEEA6
_080BECE8:
	lsls r0, r2, #2
	ldr r1, _080BECF4 @ =_080BECF8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080BECF4: .4byte _080BECF8
_080BECF8: @ jump table
	.4byte _080BED18 @ case 0
	.4byte _080BED40 @ case 1
	.4byte _080BED5C @ case 2
	.4byte _080BED78 @ case 3
	.4byte _080BED98 @ case 4
	.4byte _080BEDC8 @ case 5
	.4byte _080BEEA6 @ case 6
	.4byte _080BEE20 @ case 7
_080BED18:
	movs r3, #0x83
	lsls r3, r3, #3
	adds r0, r7, r3
	ldr r0, [r0]
	ldr r1, _080BED34 @ =gUnknown_08107DD8
	ldr r2, _080BED38 @ =gUnknown_08107DF4
	ldr r3, _080BED3C @ =gUnknown_08107DF8
	movs r4, #0
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	bl sub_8050E30
	b _080BEEA6
	.align 2, 0
_080BED34: .4byte gUnknown_08107DD8
_080BED38: .4byte gUnknown_08107DF4
_080BED3C: .4byte gUnknown_08107DF8
_080BED40:
	movs r1, #0x83
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r0, [r0]
	ldr r1, _080BED58 @ =gUnknown_08107DFC
	bl sub_8050D8C
	ldr r2, [sp, #0x10]
	adds r2, #1
	str r2, [sp, #0x10]
	b _080BEEA6
	.align 2, 0
_080BED58: .4byte gUnknown_08107DFC
_080BED5C:
	movs r3, #0x83
	lsls r3, r3, #3
	adds r0, r7, r3
	ldr r0, [r0]
	ldr r1, _080BED74 @ =gUnknown_08107E24
	bl sub_8050D8C
	ldr r0, [sp, #0x10]
	adds r0, #1
	str r0, [sp, #0x10]
	b _080BEEA6
	.align 2, 0
_080BED74: .4byte gUnknown_08107E24
_080BED78:
	movs r1, #0x83
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r0, [r0]
	ldr r1, _080BED94 @ =gUnknown_08107E58
	bl sub_8050D8C
	movs r2, #0
	str r2, [sp, #0x14]
	ldr r3, [sp, #0x10]
	adds r3, #1
	str r3, [sp, #0x10]
	b _080BEEA6
	.align 2, 0
_080BED94: .4byte gUnknown_08107E58
_080BED98:
	movs r0, #0x83
	lsls r0, r0, #3
	adds r4, r7, r0
	ldr r0, [r4]
	ldr r1, _080BEDC0 @ =gUnknown_08107EC8
	bl sub_8050D8C
	ldr r0, [r4]
	bl sub_8050DD8
	movs r1, #0
	str r1, [sp, #0x14]
	ldr r2, [sp, #0x10]
	adds r2, #1
	str r2, [sp, #0x10]
	ldr r3, _080BEDC4 @ =0x00000611
	adds r0, r7, r3
	strb r1, [r0]
	b _080BEEA6
	.align 2, 0
_080BEDC0: .4byte gUnknown_08107EC8
_080BEDC4: .4byte 0x00000611
_080BEDC8:
	movs r2, #0x83
	lsls r2, r2, #3
	adds r0, r7, r2
	ldr r0, [r0]
	ldr r1, _080BEE08 @ =gUnknown_08107F18
	ldr r2, _080BEE0C @ =gUnknown_08107F2C
	ldr r3, _080BEE10 @ =gUnknown_08107F3C
	movs r4, #0
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	bl sub_8050E30
	ldr r3, _080BEE14 @ =0x00000612
	adds r0, r7, r3
	strb r4, [r0]
	ldr r1, _080BEE18 @ =0x000005AC
	adds r0, r7, r1
	str r4, [r0]
	ldr r2, _080BEE1C @ =0x00000609
	adds r0, r7, r2
	strb r4, [r0]
	subs r3, #4
	adds r1, r7, r3
	movs r0, #1
	strb r0, [r1]
	ldr r0, [sp, #0x10]
	adds r0, #1
	str r0, [sp, #0x10]
	movs r1, #0
	str r1, [sp, #0x14]
	b _080BEEA6
	.align 2, 0
_080BEE08: .4byte gUnknown_08107F18
_080BEE0C: .4byte gUnknown_08107F2C
_080BEE10: .4byte gUnknown_08107F3C
_080BEE14: .4byte 0x00000612
_080BEE18: .4byte 0x000005AC
_080BEE1C: .4byte 0x00000609
_080BEE20:
	movs r2, #0x83
	lsls r2, r2, #3
	adds r0, r7, r2
	ldr r0, [r0]
	ldr r1, _080BEE3C @ =gUnknown_08107F4C
	bl sub_8050D8C
	ldr r3, [sp, #0x10]
	adds r3, #1
	str r3, [sp, #0x10]
	movs r0, #0
	str r0, [sp, #0x14]
	b _080BEEA6
	.align 2, 0
_080BEE3C: .4byte gUnknown_08107F4C
_080BEE40:
	movs r1, #0x83
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r0, [r0]
	bl sub_8050DF0
	cmp r0, #1
	beq _080BEE56
	cmp r0, #2
	beq _080BEE6E
	b _080BEEA6
_080BEE56:
	ldr r2, [sp, #0x10]
	cmp r2, #0
	bne _080BEE62
	movs r3, #1
	str r3, [sp, #0x10]
	b _080BEEA6
_080BEE62:
	ldr r0, [sp, #0x10]
	cmp r0, #6
	bne _080BEEA6
	movs r1, #7
	str r1, [sp, #0x10]
	b _080BEEA6
_080BEE6E:
	ldr r2, [sp, #0x10]
	cmp r2, #0
	bne _080BEE7A
	movs r3, #7
	str r3, [sp, #0x10]
	b _080BEEA6
_080BEE7A:
	ldr r0, [sp, #0x10]
	cmp r0, #6
	bne _080BEEA6
	movs r1, #1
	str r1, [sp, #0x10]
	movs r2, #0
	str r2, [sp, #0x18]
	b _080BEEA6
_080BEE8A:
	cmp r6, #5
	bne _080BEEA6
	ldr r3, [sp, #0x18]
	cmp r3, #0
	bne _080BEEA6
	ldr r0, [sp, #0x10]
	cmp r0, #4
	bne _080BEEA6
	movs r1, #0x83
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r0, [r0]
	bl sub_8050DD8
_080BEEA6:
	ldr r4, [sp, #0x10]
	subs r4, #1
	cmp r4, #3
	beq _080BEEF0
	cmp r4, #3
	bgt _080BEEB8
	cmp r4, #2
	beq _080BEEC0
	b _080BF0C6
_080BEEB8:
	cmp r4, #4
	bne _080BEEBE
	b _080BEFEC
_080BEEBE:
	b _080BF0C6
_080BEEC0:
	ldr r2, [sp, #0x14]
	cmp r2, #0
	bne _080BEED8
	ldr r3, _080BEEE8 @ =0x00000609
	adds r0, r7, r3
	movs r1, #1
	strb r1, [r0]
	ldr r2, _080BEEEC @ =0x0000060E
	adds r0, r7, r2
	strb r1, [r0]
	movs r3, #1
	str r3, [sp, #0x14]
_080BEED8:
	movs r1, #0xb0
	lsls r1, r1, #3
	adds r0, r7, r1
	movs r1, #0xbd
	bl sub_8008B88
	b _080BF0C6
	.align 2, 0
_080BEEE8: .4byte 0x00000609
_080BEEEC: .4byte 0x0000060E
_080BEEF0:
	ldr r2, _080BEF1C @ =0x00000611
	adds r5, r7, r2
	ldrb r0, [r5]
	cmp r0, #0
	bne _080BEF06
	movs r3, #0xb0
	lsls r3, r3, #3
	adds r0, r7, r3
	movs r1, #0xbd
	bl sub_8008B88
_080BEF06:
	ldr r0, [sp, #0x14]
	cmp r0, #0x1e
	bne _080BEF28
	ldr r1, _080BEF20 @ =0x000005AC
	adds r0, r7, r1
	movs r1, #1
	str r1, [r0]
	ldr r2, _080BEF24 @ =0x0000060E
	adds r0, r7, r2
	strb r1, [r0]
	b _080BEFDA
	.align 2, 0
_080BEF1C: .4byte 0x00000611
_080BEF20: .4byte 0x000005AC
_080BEF24: .4byte 0x0000060E
_080BEF28:
	ldr r3, [sp, #0x14]
	cmp r3, #0x3c
	bne _080BEF3C
	ldr r0, _080BEF38 @ =0x000005AC
	adds r1, r7, r0
	movs r0, #2
	str r0, [r1]
	b _080BEF48
	.align 2, 0
_080BEF38: .4byte 0x000005AC
_080BEF3C:
	ldr r3, [sp, #0x14]
	cmp r3, #0x5a
	bne _080BEF5C
	ldr r1, _080BEF54 @ =0x000005AC
	adds r0, r7, r1
	str r4, [r0]
_080BEF48:
	ldr r2, _080BEF58 @ =0x0000060E
	adds r1, r7, r2
	movs r0, #1
	strb r0, [r1]
	b _080BEFDA
	.align 2, 0
_080BEF54: .4byte 0x000005AC
_080BEF58: .4byte 0x0000060E
_080BEF5C:
	ldr r3, [sp, #0x14]
	cmp r3, #0x78
	bne _080BEF80
	movs r0, #1
	strb r0, [r5]
	ldr r2, _080BEF7C @ =0x0000060E
	adds r1, r7, r2
	strb r0, [r1]
	movs r3, #0xb0
	lsls r3, r3, #3
	adds r0, r7, r3
	movs r1, #0xc7
	bl sub_8008B6C
	b _080BEFDA
	.align 2, 0
_080BEF7C: .4byte 0x0000060E
_080BEF80:
	ldr r0, [sp, #0x14]
	subs r0, #0x79
	cmp r0, #0x1c
	bhi _080BEF9E
	ldr r0, [sp, #0x1c]
	adds r0, #0x20
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	str r1, [sp, #0x1c]
	lsrs r0, r0, #0x18
	movs r2, #0xc1
	lsls r2, r2, #3
	adds r1, r7, r2
	strb r0, [r1]
	b _080BEFDA
_080BEF9E:
	ldr r3, [sp, #0x14]
	cmp r3, #0x96
	bne _080BEFDA
	movs r0, #0x85
	lsls r0, r0, #8
	str r0, [sp, #0x1c]
	movs r2, #0xc1
	lsls r2, r2, #3
	adds r1, r7, r2
	movs r2, #0
	movs r0, #0x85
	strb r0, [r1]
	strb r2, [r5]
	ldr r3, _080BEFE4 @ =0x000005AC
	adds r0, r7, r3
	str r2, [r0]
	ldr r0, _080BEFE8 @ =0x0000060E
	adds r1, r7, r0
	movs r0, #1
	strb r0, [r1]
	movs r1, #0
	str r1, [sp, #0x14]
	movs r2, #1
	str r2, [sp, #0x18]
	movs r3, #0x83
	lsls r3, r3, #3
	adds r0, r7, r3
	ldr r0, [r0]
	bl sub_8050DE4
_080BEFDA:
	ldr r0, [sp, #0x14]
	adds r0, #1
	str r0, [sp, #0x14]
	b _080BF0C6
	.align 2, 0
_080BEFE4: .4byte 0x000005AC
_080BEFE8: .4byte 0x0000060E
_080BEFEC:
	ldr r1, _080BF018 @ =0x00000612
	adds r4, r7, r1
	ldrb r0, [r4]
	cmp r0, #0
	bne _080BF002
	movs r2, #0xb0
	lsls r2, r2, #3
	adds r0, r7, r2
	movs r1, #0xbd
	bl sub_8008B88
_080BF002:
	ldr r3, [sp, #0x14]
	cmp r3, #0
	bne _080BF024
	strb r3, [r4]
	ldr r1, _080BF01C @ =0x000005AC
	adds r0, r7, r1
	ldr r2, [sp, #0x14]
	str r2, [r0]
	ldr r3, _080BF020 @ =0x0000060E
	adds r1, r7, r3
	b _080BF056
	.align 2, 0
_080BF018: .4byte 0x00000612
_080BF01C: .4byte 0x000005AC
_080BF020: .4byte 0x0000060E
_080BF024:
	ldr r0, [sp, #0x14]
	cmp r0, #0x1e
	beq _080BF06A
	ldr r3, [sp, #0x14]
	cmp r3, #0x3c
	beq _080BF04A
	ldr r3, [sp, #0x14]
	cmp r3, #0x5a
	bne _080BF044
	ldr r0, _080BF040 @ =0x000005AC
	adds r1, r7, r0
	movs r0, #3
	b _080BF050
	.align 2, 0
_080BF040: .4byte 0x000005AC
_080BF044:
	ldr r3, [sp, #0x14]
	cmp r3, #0x78
	bne _080BF064
_080BF04A:
	ldr r0, _080BF05C @ =0x000005AC
	adds r1, r7, r0
	movs r0, #2
_080BF050:
	str r0, [r1]
	ldr r2, _080BF060 @ =0x0000060E
	adds r1, r7, r2
_080BF056:
	movs r0, #1
	strb r0, [r1]
	b _080BF0C0
	.align 2, 0
_080BF05C: .4byte 0x000005AC
_080BF060: .4byte 0x0000060E
_080BF064:
	ldr r3, [sp, #0x14]
	cmp r3, #0x96
	bne _080BF084
_080BF06A:
	ldr r1, _080BF07C @ =0x000005AC
	adds r0, r7, r1
	movs r1, #1
	str r1, [r0]
	ldr r2, _080BF080 @ =0x0000060E
	adds r0, r7, r2
	strb r1, [r0]
	b _080BF0C0
	.align 2, 0
_080BF07C: .4byte 0x000005AC
_080BF080: .4byte 0x0000060E
_080BF084:
	ldr r3, [sp, #0x14]
	cmp r3, #0xb4
	bne _080BF0A8
	movs r0, #1
	strb r0, [r4]
	ldr r2, _080BF0A4 @ =0x0000060E
	adds r1, r7, r2
	strb r0, [r1]
	movs r3, #0xb0
	lsls r3, r3, #3
	adds r0, r7, r3
	movs r1, #0xbc
	bl sub_8008B6C
	b _080BF0C0
	.align 2, 0
_080BF0A4: .4byte 0x0000060E
_080BF0A8:
	ldr r0, [sp, #0x14]
	cmp r0, #0xd2
	bne _080BF0C0
	movs r1, #0x83
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r0, [r0]
	bl sub_8050DE4
	movs r2, #1
	rsbs r2, r2, #0
	str r2, [sp, #0x14]
_080BF0C0:
	ldr r3, [sp, #0x14]
	adds r3, #1
	str r3, [sp, #0x14]
_080BF0C6:
	adds r0, r7, #0
	bl sub_80BDF40
_080BF0CC:
	movs r1, #0xb4
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _080BF0DA
	b _080BEB84
_080BF0DA:
	add sp, #0x24
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80BF0EC
sub_80BF0EC: @ 0x080BF0EC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x64
	adds r7, r0, #0
	movs r1, #0xc0
	lsls r1, r1, #3
	adds r0, r7, r1
	ldrb r0, [r0]
	add r1, sp, #0xc
	movs r2, #0
	bl sub_804EC84
	add r0, sp, #0x10
	ldr r4, _080BF1CC @ =gUnknown_08107F60
	adds r1, r4, #0
	movs r2, #6
	bl sub_80D3994
	add r0, sp, #0x18
	ldr r6, _080BF1D0 @ =gUnknown_08107F68
	adds r1, r6, #0
	movs r2, #0xf
	bl sub_80D3994
	add r0, sp, #0x28
	ldr r2, _080BF1D4 @ =gUnknown_08107F78
	mov r8, r2
	mov r1, r8
	movs r2, #0xa
	bl sub_80D3994
	add r5, sp, #0x34
	ldr r1, [r4]
	str r1, [sp, #0x34]
	ldrh r0, [r4, #4]
	strh r0, [r5, #4]
	str r1, [sp, #0x34]
	strh r0, [r5, #4]
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_80D3ADC
	adds r0, r5, #0
	add r1, sp, #0xc
	bl sub_80D3ADC
	adds r0, r5, #0
	mov r1, r8
	bl sub_80D3ADC
	movs r3, #1
	str r3, [sp, #0x5c]
	movs r0, #0
	str r0, [sp, #0x60]
	adds r0, r7, #0
	bl sub_8008918
	add r2, sp, #0x58
	movs r3, #0xba
	lsls r3, r3, #5
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0]
	movs r0, #0x83
	lsls r0, r0, #3
	adds r4, r7, r0
	ldr r0, [r4]
	bl sub_8050E5C
	ldr r4, [r4]
	mov sl, r4
	adds r0, r7, #0
	bl sub_80088DC
	mov sb, r0
	adds r0, r7, #0
	bl sub_8008920
	mov r8, r0
	adds r0, r7, #0
	bl sub_8008918
	adds r6, r0, #0
	adds r0, r7, #0
	bl sub_8008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl sub_800894C
	ldr r2, _080BF1D8 @ =0x0000057C
	adds r1, r7, r2
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, sl
	mov r1, sb
	mov r2, r8
	adds r3, r6, #0
	bl sub_8050D3C
	adds r0, r7, #0
	bl sub_80BDF40
	movs r3, #0xb4
	lsls r3, r3, #3
	adds r0, r7, r3
	b _080BF2D4
	.align 2, 0
_080BF1CC: .4byte gUnknown_08107F60
_080BF1D0: .4byte gUnknown_08107F68
_080BF1D4: .4byte gUnknown_08107F78
_080BF1D8: .4byte 0x0000057C
_080BF1DC:
	adds r0, r7, #0
	bl sub_80087C8
	adds r0, r7, #0
	bl sub_80088B8
	movs r0, #0x83
	lsls r0, r0, #3
	adds r4, r7, r0
	ldr r0, [r4]
	bl sub_8050D34
	mov sl, r0
	ldr r4, [r4]
	mov sb, r4
	adds r0, r7, #0
	bl sub_80088DC
	mov r8, r0
	adds r0, r7, #0
	bl sub_8008920
	adds r6, r0, #0
	adds r0, r7, #0
	bl sub_8008918
	adds r5, r0, #0
	adds r0, r7, #0
	bl sub_8008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl sub_800894C
	ldr r2, _080BF244 @ =0x0000057C
	adds r1, r7, r2
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, sb
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl sub_8050D3C
	cmp r0, #6
	bhi _080BF2A6
	lsls r0, r0, #2
	ldr r1, _080BF248 @ =_080BF24C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080BF244: .4byte 0x0000057C
_080BF248: .4byte _080BF24C
_080BF24C: @ jump table
	.4byte _080BF268 @ case 0
	.4byte _080BF2A6 @ case 1
	.4byte _080BF2A6 @ case 2
	.4byte _080BF288 @ case 3
	.4byte _080BF2A6 @ case 4
	.4byte _080BF2A6 @ case 5
	.4byte _080BF2A6 @ case 6
_080BF268:
	ldr r3, [sp, #0x5c]
	cmp r3, #0
	bne _080BF27A
	movs r0, #0xb4
	lsls r0, r0, #3
	adds r1, r7, r0
	movs r0, #2
	str r0, [r1]
	b _080BF2A6
_080BF27A:
	movs r1, #0x83
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r0, [r0]
	bl sub_8050D5C
	b _080BF2A6
_080BF288:
	mov r2, sl
	cmp r2, #1
	bne _080BF2A6
	movs r3, #0x83
	lsls r3, r3, #3
	adds r4, r7, r3
	ldr r0, [r4]
	add r1, sp, #0x34
	bl sub_8050D8C
	ldr r0, [r4]
	bl sub_8050DD8
	movs r0, #0
	str r0, [sp, #0x5c]
_080BF2A6:
	ldr r1, [sp, #0x5c]
	cmp r1, #0
	bne _080BF2C8
	ldr r2, [sp, #0x60]
	adds r2, #1
	str r2, [sp, #0x60]
	cmp r2, #0x78
	ble _080BF2C8
	movs r3, #0x83
	lsls r3, r3, #3
	adds r4, r7, r3
	ldr r0, [r4]
	bl sub_8050DE4
	ldr r0, [r4]
	bl sub_8050D74
_080BF2C8:
	adds r0, r7, #0
	bl sub_80BDF40
	movs r1, #0xb4
	lsls r1, r1, #3
	adds r0, r7, r1
_080BF2D4:
	ldr r0, [r0]
	cmp r0, #1
	bne _080BF2DC
	b _080BF1DC
_080BF2DC:
	add sp, #0x64
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80BF2EC
sub_80BF2EC: @ 0x080BF2EC
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r4, r0, #0
	movs r6, #0
	bl sub_8008918
	mov r2, sp
	movs r3, #0xb2
	lsls r3, r3, #5
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0]
	adds r0, r4, #0
	bl sub_80BDF40
	movs r1, #0xb0
	lsls r1, r1, #3
	adds r0, r4, r1
	movs r1, #0xbb
	bl sub_8008B6C
	movs r3, #0xb4
	lsls r3, r3, #3
	adds r0, r4, r3
	ldr r0, [r0]
	cmp r0, #2
	bne _080BF340
	adds r5, r4, r3
	movs r7, #3
_080BF326:
	adds r0, r4, #0
	bl sub_80087C8
	adds r0, r4, #0
	bl sub_80BDF40
	adds r6, #1
	cmp r6, #0x78
	ble _080BF33A
	str r7, [r5]
_080BF33A:
	ldr r0, [r5]
	cmp r0, #2
	beq _080BF326
_080BF340:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80BF348
sub_80BF348: @ 0x080BF348
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x44
	adds r5, r0, #0
	movs r0, #0
	str r0, [sp, #0x34]
	movs r1, #0
	str r1, [sp, #0x30]
	movs r2, #0x85
	lsls r2, r2, #8
	str r2, [sp, #0x38]
	movs r0, #0x14
	bl sub_80005D4
	movs r3, #0x84
	lsls r3, r3, #3
	adds r1, r5, r3
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r4, r0, #0
	movs r7, #0x8c
	lsls r7, r7, #3
	adds r6, r5, r7
	ldr r0, [r6]
	cmp r4, r0
	beq _080BF38E
	bl sub_8000608
_080BF38E:
	str r4, [r6]
	adds r0, r4, #0
	movs r1, #0
	bl sub_805E860
	movs r0, #0x8d
	lsls r0, r0, #3
	adds r4, r5, r0
	ldr r0, [r6]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sp
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	mov r0, sp
	mov r1, sp
	movs r2, #0x20
	bl sub_80D3994
	mov r0, sp
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r1, r6, r7}
	stm r4!, {r1, r6, r7}
	ldm r0!, {r2, r3}
	stm r4!, {r2, r3}
	adds r0, r5, #0
	bl sub_8008910
	adds r6, r0, #0
	movs r7, #0x8e
	lsls r7, r7, #3
	adds r4, r5, r7
	ldr r7, [r4]
	movs r1, #0xb7
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080BF3F6
	ldrh r3, [r4, #4]
_080BF3F6:
	str r6, [sp, #0x3c]
	lsls r2, r2, #5
	ldr r4, _080BF42C @ =0x06010000
	adds r2, r2, r4
	mov r0, sp
	adds r1, r7, #0
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BF430
	cmp r1, #0
	beq _080BF420
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r6, r7}
	stm r0!, {r2, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BF420:
	ldr r3, [sp, #0x3c]
	ldr r0, [r3, #4]
	adds r0, #0x10
	str r0, [r3, #4]
	b _080BF500
	.align 2, 0
_080BF42C: .4byte 0x06010000
_080BF430:
	str r1, [sp, #0x40]
	movs r0, #1
	str r0, [sp, #0x24]
	ldr r4, [sp, #0x3c]
	ldr r0, [r4]
	adds r6, r1, #0
	subs r0, r6, r0
	asrs r4, r0, #4
	str r4, [sp, #0x20]
	add r1, sp, #0x24
	add r0, sp, #0x20
	cmp r4, #1
	bhs _080BF44C
	adds r0, r1, #0
_080BF44C:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BF46A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080BF46E
	mov r0, sb
	bl sub_80D3BC0
	b _080BF46E
_080BF46A:
	movs r0, #0
	mov sb, r0
_080BF46E:
	adds r4, r0, #0
	mov r8, r4
	ldr r7, [sp, #0x3c]
	ldr r2, [r7]
	mov r3, r8
	b _080BF48E
_080BF47A:
	cmp r3, #0
	beq _080BF48A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BF48A:
	adds r2, #0x10
	adds r3, #0x10
_080BF48E:
	ldr r0, [sp, #0x40]
	cmp r2, r0
	bne _080BF47A
	adds r4, r3, #0
	ldr r0, [sp, #0x24]
	cmp r0, #1
	bne _080BF4B0
	cmp r4, #0
	beq _080BF4AC
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080BF4AC:
	adds r4, #0x10
	b _080BF4D8
_080BF4B0:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _080BF4D6
_080BF4B8:
	cmp r2, #0
	beq _080BF4C8
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BF4C8:
	movs r6, #1
	rsbs r6, r6, #0
	add ip, r6
	adds r2, #0x10
	mov r7, ip
	cmp r7, #0
	bne _080BF4B8
_080BF4D6:
	adds r4, r2, #0
_080BF4D8:
	ldr r0, [sp, #0x3c]
	ldr r2, [r0, #4]
	ldr r0, [r0]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BF4EA
_080BF4E4:
	adds r1, #0x10
	cmp r1, r2
	bne _080BF4E4
_080BF4EA:
	cmp r0, #0
	beq _080BF4F2
	bl sub_80D0260
_080BF4F2:
	mov r0, sb
	add r0, r8
	mov r1, r8
	ldr r2, [sp, #0x3c]
	str r1, [r2]
	str r4, [r2, #4]
	str r0, [r2, #0xc]
_080BF500:
	adds r0, r5, #0
	bl sub_8008910
	adds r4, r0, #0
	movs r3, #0x8f
	lsls r3, r3, #3
	adds r2, r5, r3
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080BF51A
	ldrh r3, [r2, #4]
_080BF51A:
	str r4, [sp, #0x3c]
	mov r0, sp
	ldr r2, _080BF548 @ =0x05000260
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _080BF54C
	cmp r1, #0
	beq _080BF53E
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BF53E:
	ldr r1, [sp, #0x3c]
	ldr r0, [r1, #4]
	adds r0, #0x10
	str r0, [r1, #4]
	b _080BF730
	.align 2, 0
_080BF548: .4byte 0x05000260
_080BF54C:
	str r1, [sp, #0x40]
	movs r0, #1
	str r0, [sp, #0x2c]
	ldr r2, [sp, #0x3c]
	ldr r0, [r2]
	adds r3, r1, #0
	subs r0, r3, r0
	asrs r4, r0, #4
	str r4, [sp, #0x28]
	add r1, sp, #0x2c
	add r0, sp, #0x28
	cmp r4, #1
	bhs _080BF568
	adds r0, r1, #0
_080BF568:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BF586
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080BF58A
	mov r0, sb
	bl sub_80D3BC0
	b _080BF58A
_080BF586:
	movs r0, #0
	mov sb, r0
_080BF58A:
	adds r4, r0, #0
	mov r8, r4
	ldr r4, [sp, #0x3c]
	ldr r2, [r4]
	mov r3, r8
	ldr r6, [sp, #0x40]
	cmp r2, r6
	beq _080BF5B4
_080BF59A:
	cmp r3, #0
	beq _080BF5AA
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BF5AA:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0x40]
	cmp r2, r7
	bne _080BF59A
_080BF5B4:
	adds r4, r3, #0
	ldr r0, [sp, #0x2c]
	cmp r0, #1
	bne _080BF5D0
	cmp r4, #0
	beq _080BF5CC
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080BF5CC:
	adds r4, #0x10
	b _080BF5F8
_080BF5D0:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _080BF5F6
_080BF5D8:
	cmp r2, #0
	beq _080BF5E8
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BF5E8:
	movs r6, #1
	rsbs r6, r6, #0
	add ip, r6
	adds r2, #0x10
	mov r7, ip
	cmp r7, #0
	bne _080BF5D8
_080BF5F6:
	adds r4, r2, #0
_080BF5F8:
	ldr r0, [sp, #0x3c]
	ldr r2, [r0, #4]
	ldr r0, [r0]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BF60A
_080BF604:
	adds r1, #0x10
	cmp r1, r2
	bne _080BF604
_080BF60A:
	cmp r0, #0
	beq _080BF612
	bl sub_80D0260
_080BF612:
	mov r0, sb
	add r0, r8
	mov r1, r8
	ldr r2, [sp, #0x3c]
	str r1, [r2]
	str r4, [r2, #4]
	str r0, [r2, #0xc]
	b _080BF730
_080BF622:
	adds r0, r5, #0
	bl sub_80087C8
	adds r0, r5, #0
	bl sub_80088B8
	ldr r4, _080BF644 @ =0x000005A4
	adds r0, r5, r4
	ldr r4, [r0]
	cmp r4, #1
	beq _080BF69C
	cmp r4, #1
	bgt _080BF648
	cmp r4, #0
	beq _080BF654
	b _080BF730
	.align 2, 0
_080BF644: .4byte 0x000005A4
_080BF648:
	cmp r4, #3
	bgt _080BF730
	adds r0, r5, #0
	bl sub_80C0CA4
	b _080BF730
_080BF654:
	adds r0, r5, #0
	bl sub_80C0B70
	ldr r6, _080BF694 @ =0x000005FB
	adds r1, r5, r6
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r7, [sp, #0x30]
	adds r7, #1
	str r7, [sp, #0x30]
	adds r0, r5, #0
	adds r1, r7, #0
	bl sub_80BE728
	cmp r7, #0x3c
	bne _080BF67A
	movs r0, #0
	str r0, [sp, #0x30]
_080BF67A:
	ldr r1, _080BF698 @ =0x00000609
	adds r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080BF730
	movs r2, #0xb0
	lsls r2, r2, #3
	adds r0, r5, r2
	movs r1, #0xbd
	bl sub_8008B88
	b _080BF730
	.align 2, 0
_080BF694: .4byte 0x000005FB
_080BF698: .4byte 0x00000609
_080BF69C:
	adds r0, r5, #0
	bl sub_80C0CA4
	adds r0, r5, #0
	bl sub_80088CC
	movs r1, #8
	ands r1, r0
	cmp r1, #0
	bne _080BF730
	ldr r3, [sp, #0x30]
	adds r3, #1
	str r3, [sp, #0x30]
	adds r0, r5, #0
	adds r1, r3, #0
	bl sub_80BE728
	ldr r6, [sp, #0x30]
	cmp r6, #0x3c
	bne _080BF6C8
	movs r7, #0
	str r7, [sp, #0x30]
_080BF6C8:
	ldr r0, _080BF754 @ =0x0000060A
	adds r2, r5, r0
	ldrb r0, [r2]
	cmp r0, #0
	bne _080BF714
	ldr r1, [sp, #0x34]
	cmp r1, #0x20
	bgt _080BF6EC
	ldr r0, [sp, #0x38]
	adds r0, #0x20
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	str r3, [sp, #0x38]
	lsrs r0, r0, #0x18
	movs r6, #0xc1
	lsls r6, r6, #3
	adds r1, r5, r6
	strb r0, [r1]
_080BF6EC:
	ldrb r0, [r2]
	cmp r0, #0
	bne _080BF714
	ldr r7, [sp, #0x34]
	cmp r7, #0x21
	bne _080BF714
	ldr r1, _080BF758 @ =0x0000060F
	adds r0, r5, r1
	strb r4, [r0]
	ldr r2, _080BF75C @ =0x0000060E
	adds r0, r5, r2
	strb r4, [r0]
	movs r3, #0x85
	lsls r3, r3, #8
	str r3, [sp, #0x38]
	movs r4, #0xc1
	lsls r4, r4, #3
	adds r1, r5, r4
	movs r0, #0x85
	strb r0, [r1]
_080BF714:
	ldr r6, [sp, #0x34]
	adds r6, #1
	str r6, [sp, #0x34]
	cmp r6, #0x3c
	bne _080BF730
	movs r7, #0
	str r7, [sp, #0x34]
	ldr r1, _080BF75C @ =0x0000060E
	adds r0, r5, r1
	movs r1, #1
	strb r1, [r0]
	ldr r2, _080BF760 @ =0x000005A4
	adds r0, r5, r2
	str r7, [r0]
_080BF730:
	adds r0, r5, #0
	bl sub_80BDF40
	movs r3, #0xb4
	lsls r3, r3, #3
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #3
	bne _080BF744
	b _080BF622
_080BF744:
	add sp, #0x44
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080BF754: .4byte 0x0000060A
_080BF758: .4byte 0x0000060F
_080BF75C: .4byte 0x0000060E
_080BF760: .4byte 0x000005A4

	thumb_func_start sub_80BF764
sub_80BF764: @ 0x080BF764
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10c
	mov sl, r0
	ldr r2, _080BF9A4 @ =0x00000604
	add r2, sl
	ldr r4, _080BF9A8 @ =0x000005FE
	add r4, sl
	ldrb r0, [r4]
	ldr r3, _080BF9AC @ =0x000005FF
	add r3, sl
	ldrb r1, [r3]
	subs r0, r0, r1
	str r0, [r2]
	cmp r0, #0
	bge _080BF78E
	movs r0, #0
	str r0, [r2]
_080BF78E:
	ldrb r0, [r4]
	str r0, [sp, #0x28]
	ldrb r0, [r3]
	str r0, [sp, #0x2c]
	ldr r0, [r2]
	str r0, [sp, #0x30]
	add r5, sp, #0x1c
	add r4, sp, #0x28
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0xc
	bl sub_80D3994
	add r0, sp, #0x10
	adds r1, r5, #0
	movs r2, #0xc
	bl sub_80D3994
	movs r0, #0
	str r0, [sp, #0xcc]
	mov r0, sl
	bl sub_8008918
	movs r2, #0xba
	lsls r2, r2, #5
	adds r1, r2, #0
	strh r1, [r4]
	strh r1, [r0]
	movs r5, #0x83
	lsls r5, r5, #3
	add r5, sl
	ldr r0, [r5]
	ldr r3, [sp, #0xcc]
	cmp r3, r0
	beq _080BF7DE
	cmp r0, #0
	beq _080BF7DE
	movs r1, #3
	bl sub_8050D0C
_080BF7DE:
	movs r0, #0
	str r0, [r5]
	movs r0, #4
	bl sub_80005D4
	adds r5, r0, #0
	add r0, sp, #0x28
	bl sub_800835C
	add r4, sp, #0x2c
	adds r0, r4, #0
	bl sub_800770C
	movs r0, #0
	str r0, [sp]
	add r6, sp, #0x28
	str r6, [sp, #4]
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #0x18
	movs r3, #0
	bl sub_8050CC0
	movs r6, #0x83
	lsls r6, r6, #3
	add r6, sl
	adds r5, r0, #0
	ldr r0, [r6]
	cmp r5, r0
	beq _080BF826
	cmp r0, #0
	beq _080BF826
	movs r1, #3
	bl sub_8050D0C
_080BF826:
	str r5, [r6]
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007714
	add r0, sp, #0x28
	movs r1, #2
	bl sub_8008364
	movs r0, #0x83
	lsls r0, r0, #3
	add r0, sl
	ldr r0, [r0]
	mov sb, r0
	mov r0, sl
	bl sub_80088DC
	mov r8, r0
	mov r0, sl
	bl sub_8008920
	adds r6, r0, #0
	mov r0, sl
	bl sub_8008918
	adds r5, r0, #0
	mov r0, sl
	bl sub_8008940
	adds r4, r0, #0
	mov r0, sl
	bl sub_800894C
	ldr r1, _080BF9B0 @ =0x0000057C
	add r1, sl
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, sb
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl sub_8050D3C
	movs r0, #0x14
	bl sub_80005D4
	ldr r1, _080BF9B4 @ =0x00000424
	add r1, sl
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r4, r0, #0
	movs r7, #0x91
	lsls r7, r7, #3
	add r7, sl
	ldr r0, [r7]
	cmp r4, r0
	beq _080BF8A6
	bl sub_8000608
_080BF8A6:
	str r4, [r7]
	ldr r1, _080BF9B8 @ =0x000001C9
	adds r0, r4, #0
	bl sub_805E860
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r4]
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	strh r0, [r4, #8]
	str r0, [r4, #0xc]
	strb r1, [r4, #0x10]
	strb r1, [r4, #0x11]
	str r0, [r4, #0x14]
	strb r1, [r4, #0x18]
	ldr r5, _080BF9BC @ =0x0000048C
	add r5, sl
	ldr r0, [r5]
	cmp r4, r0
	beq _080BF8DE
	bl sub_8000608
_080BF8DE:
	str r4, [r5]
	movs r0, #0x60
	strh r0, [r4]
	movs r0, #0x75
	strh r0, [r4, #2]
	movs r6, #0xb8
	lsls r6, r6, #3
	add r6, sl
	ldr r1, [r6, #4]
	adds r0, r6, #0
	bl sub_8007D4C
	strh r0, [r4, #6]
	ldr r1, [r5]
	movs r0, #4
	strh r0, [r1, #4]
	ldr r0, [r5]
	movs r1, #1
	mov r8, r1
	mov r2, r8
	strb r2, [r0, #0x18]
	movs r5, #0x92
	lsls r5, r5, #3
	add r5, sl
	ldr r0, [r7]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x34
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r4, sp, #0x34
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	ldm r4!, {r0, r3, r7}
	stm r5!, {r0, r3, r7}
	ldm r4!, {r1, r2, r3}
	stm r5!, {r1, r2, r3}
	ldm r4!, {r0, r7}
	stm r5!, {r0, r7}
	mov r0, sl
	bl sub_8008910
	adds r5, r0, #0
	movs r4, #0x93
	lsls r4, r4, #3
	add r4, sl
	ldr r7, [r4]
	ldr r1, [r6, #4]
	adds r0, r6, #0
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080BF962
	ldrh r3, [r4, #4]
_080BF962:
	adds r6, r5, #0
	lsls r2, r2, #5
	ldr r1, _080BF9C0 @ =0x06010000
	adds r2, r2, r1
	add r0, sp, #0x28
	adds r1, r7, #0
	bl sub_8008F0C
	add r2, sp, #0x28
	mov sb, r2
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BF9C4
	cmp r1, #0
	beq _080BF98E
	adds r0, r1, #0
	add r1, sp, #0x28
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080BF98E:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	mov r6, sp
	adds r6, #0x6c
	str r6, [sp, #0xf8]
	mov r7, sp
	adds r7, #0x30
	str r7, [sp, #0xe8]
	b _080BFA94
	.align 2, 0
_080BF9A4: .4byte 0x00000604
_080BF9A8: .4byte 0x000005FE
_080BF9AC: .4byte 0x000005FF
_080BF9B0: .4byte 0x0000057C
_080BF9B4: .4byte 0x00000424
_080BF9B8: .4byte 0x000001C9
_080BF9BC: .4byte 0x0000048C
_080BF9C0: .4byte 0x06010000
_080BF9C4:
	str r1, [sp, #0x104]
	mov r0, r8
	str r0, [sp, #0x58]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x54]
	add r1, sp, #0x58
	add r0, sp, #0x54
	cmp r4, #1
	bhs _080BF9DC
	adds r0, r1, #0
_080BF9DC:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BF9FA
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080BF9FE
	mov r0, r8
	bl sub_80D3BC0
	b _080BF9FE
_080BF9FA:
	movs r0, #0
	mov r8, r0
_080BF9FE:
	adds r5, r0, #0
	str r5, [sp, #0x108]
	ldr r2, [r6]
	adds r3, r5, #0
	mov r4, sp
	adds r4, #0x6c
	str r4, [sp, #0xf8]
	mov r5, sp
	adds r5, #0x30
	str r5, [sp, #0xe8]
	ldr r7, [sp, #0x104]
	cmp r2, r7
	beq _080BFA32
_080BFA18:
	cmp r3, #0
	beq _080BFA28
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BFA28:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x104]
	cmp r2, r0
	bne _080BFA18
_080BFA32:
	adds r5, r3, #0
	ldr r0, [sp, #0x58]
	cmp r0, #1
	bne _080BFA4E
	cmp r5, #0
	beq _080BFA4A
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BFA4A:
	adds r5, #0x10
	b _080BFA70
_080BFA4E:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080BFA6E
_080BFA56:
	cmp r2, #0
	beq _080BFA66
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BFA66:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BFA56
_080BFA6E:
	adds r5, r2, #0
_080BFA70:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BFA80
_080BFA7A:
	adds r1, #0x10
	cmp r1, r2
	bne _080BFA7A
_080BFA80:
	cmp r0, #0
	beq _080BFA88
	bl sub_80D0260
_080BFA88:
	ldr r0, [sp, #0x108]
	add r0, r8
	ldr r7, [sp, #0x108]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080BFA94:
	mov r0, sl
	bl sub_8008910
	adds r4, r0, #0
	movs r2, #0x94
	lsls r2, r2, #3
	add r2, sl
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080BFAAE
	ldrh r3, [r2, #4]
_080BFAAE:
	adds r6, r4, #0
	add r0, sp, #0x28
	ldr r2, _080BFADC @ =0x05000280
	bl sub_8008F0C
	add r0, sp, #0x28
	mov sb, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BFAE0
	cmp r1, #0
	beq _080BFAD4
	adds r0, r1, #0
	add r1, sp, #0x28
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BFAD4:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080BFBA6
	.align 2, 0
_080BFADC: .4byte 0x05000280
_080BFAE0:
	str r1, [sp, #0x104]
	movs r0, #1
	str r0, [sp, #0x60]
	ldr r0, [r6]
	adds r5, r1, #0
	subs r0, r5, r0
	asrs r4, r0, #4
	str r4, [sp, #0x5c]
	add r1, sp, #0x60
	add r0, sp, #0x5c
	cmp r4, #1
	bhs _080BFAFA
	adds r0, r1, #0
_080BFAFA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BFB18
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080BFB1C
	mov r0, r8
	bl sub_80D3BC0
	b _080BFB1C
_080BFB18:
	movs r0, #0
	mov r8, r0
_080BFB1C:
	adds r5, r0, #0
	str r5, [sp, #0x108]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x104]
	cmp r2, r7
	beq _080BFB44
_080BFB2A:
	cmp r3, #0
	beq _080BFB3A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BFB3A:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x104]
	cmp r2, r0
	bne _080BFB2A
_080BFB44:
	adds r5, r3, #0
	ldr r0, [sp, #0x60]
	cmp r0, #1
	bne _080BFB60
	cmp r5, #0
	beq _080BFB5C
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BFB5C:
	adds r5, #0x10
	b _080BFB82
_080BFB60:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080BFB80
_080BFB68:
	cmp r2, #0
	beq _080BFB78
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BFB78:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BFB68
_080BFB80:
	adds r5, r2, #0
_080BFB82:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BFB92
_080BFB8C:
	adds r1, #0x10
	cmp r1, r2
	bne _080BFB8C
_080BFB92:
	cmp r0, #0
	beq _080BFB9A
	bl sub_80D0260
_080BFB9A:
	ldr r0, [sp, #0x108]
	add r0, r8
	ldr r7, [sp, #0x108]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080BFBA6:
	ldr r4, _080BFC68 @ =0x0000052C
	add r4, sl
	ldr r1, [r4]
	movs r0, #0x58
	strh r0, [r1]
	ldr r1, [r4]
	movs r0, #0x7d
	strh r0, [r1, #2]
	ldr r5, [r4]
	movs r6, #0xbb
	lsls r6, r6, #3
	add r6, sl
	ldr r1, [r6, #4]
	adds r0, r6, #0
	bl sub_8007D4C
	strh r0, [r5, #6]
	ldr r0, [r4]
	movs r1, #1
	mov r8, r1
	mov r2, r8
	strb r2, [r0, #0x18]
	movs r4, #0xa6
	lsls r4, r4, #3
	add r4, sl
	movs r0, #0xa5
	lsls r0, r0, #3
	add r0, sl
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x28
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r0, sp, #0x28
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	add r0, sp, #0x28
	ldm r0!, {r3, r5, r7}
	stm r4!, {r3, r5, r7}
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r5, r7}
	stm r4!, {r5, r7}
	mov r0, sl
	bl sub_8008910
	adds r5, r0, #0
	movs r4, #0xa7
	lsls r4, r4, #3
	add r4, sl
	ldr r7, [r4]
	ldr r1, [r6, #4]
	adds r0, r6, #0
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080BFC32
	ldrh r3, [r4, #4]
_080BFC32:
	adds r6, r5, #0
	lsls r2, r2, #5
	ldr r0, _080BFC6C @ =0x06010000
	adds r2, r2, r0
	add r0, sp, #0x28
	adds r1, r7, #0
	bl sub_8008F0C
	add r1, sp, #0x28
	mov sb, r1
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080BFC70
	cmp r1, #0
	beq _080BFC5E
	adds r0, r1, #0
	add r1, sp, #0x28
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BFC5E:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080BFD32
	.align 2, 0
_080BFC68: .4byte 0x0000052C
_080BFC6C: .4byte 0x06010000
_080BFC70:
	str r1, [sp, #0x104]
	mov r5, r8
	str r5, [sp, #0x68]
	ldr r0, [r6]
	adds r7, r1, #0
	subs r0, r7, r0
	asrs r4, r0, #4
	str r4, [sp, #0x64]
	add r1, sp, #0x68
	add r0, sp, #0x64
	cmp r4, #1
	bhs _080BFC8A
	adds r0, r1, #0
_080BFC8A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BFCA8
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080BFCAC
	mov r0, r8
	bl sub_80D3BC0
	b _080BFCAC
_080BFCA8:
	movs r0, #0
	mov r8, r0
_080BFCAC:
	adds r5, r0, #0
	str r5, [sp, #0x108]
	ldr r2, [r6]
	adds r3, r5, #0
	b _080BFCCA
_080BFCB6:
	cmp r3, #0
	beq _080BFCC6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BFCC6:
	adds r2, #0x10
	adds r3, #0x10
_080BFCCA:
	ldr r0, [sp, #0x104]
	cmp r2, r0
	bne _080BFCB6
	adds r5, r3, #0
	ldr r0, [sp, #0x68]
	cmp r0, #1
	bne _080BFCEC
	cmp r5, #0
	beq _080BFCE8
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BFCE8:
	adds r5, #0x10
	b _080BFD0E
_080BFCEC:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080BFD0C
_080BFCF4:
	cmp r2, #0
	beq _080BFD04
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BFD04:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BFCF4
_080BFD0C:
	adds r5, r2, #0
_080BFD0E:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BFD1E
_080BFD18:
	adds r1, #0x10
	cmp r1, r2
	bne _080BFD18
_080BFD1E:
	cmp r0, #0
	beq _080BFD26
	bl sub_80D0260
_080BFD26:
	ldr r0, [sp, #0x108]
	add r0, r8
	ldr r7, [sp, #0x108]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080BFD32:
	movs r0, #0
	str r0, [sp, #0xc8]
	movs r1, #0xb9
	lsls r1, r1, #3
	add r1, sl
	str r1, [sp, #0xd0]
_080BFD3E:
	ldr r2, [sp, #0xc8]
	lsls r5, r2, #3
	movs r3, #0x89
	lsls r3, r3, #3
	adds r1, r5, r3
	add r1, sl
	movs r0, #0
	movs r2, #8
	bl sub_8008EB8
	movs r0, #0
	add r1, sp, #0x28
	movs r2, #0
	bl sub_804EC84
	ldr r6, [sp, #0xc8]
	lsls r4, r6, #6
	adds r0, r4, r6
	lsls r6, r0, #2
	mov r7, sl
	adds r1, r6, r7
	add r0, sp, #0x6c
	movs r2, #4
	strh r2, [r0]
	movs r7, #2
	ldr r3, [sp, #0xf8]
	strh r7, [r3, #2]
	ldr r0, [sp, #0x6c]
	movs r2, #0x88
	lsls r2, r2, #1
	adds r1, r1, r2
	movs r2, #0
	bl sub_804E7A0
	str r5, [sp, #0xf4]
	ldr r3, [sp, #0xc8]
	cmp r3, #1
	beq _080BFDBE
	add r0, sp, #0x28
	bl sub_80D3B78
	lsls r0, r0, #3
	movs r2, #0x20
	subs r2, r2, r0
	mov r5, sl
	adds r1, r6, r5
	movs r3, #5
	add r0, sp, #0x70
	movs r6, #4
	strh r6, [r0]
	strh r7, [r0, #2]
	ldr r0, [sp, #0x70]
	movs r5, #0x88
	lsls r5, r5, #1
	adds r1, r1, r5
	add r6, sp, #0x28
	str r6, [sp]
	movs r7, #0
	str r7, [sp, #4]
	str r3, [sp, #8]
	movs r3, #0
	bl sub_804E958
	b _080BFDEE
_080BFDBE:
	add r0, sp, #0x28
	bl sub_80D3B78
	lsls r0, r0, #3
	movs r2, #0x20
	subs r2, r2, r0
	movs r1, #7
	add r0, sp, #0x74
	movs r3, #4
	strh r3, [r0]
	movs r5, #2
	strh r5, [r0, #2]
	ldr r0, [sp, #0x74]
	add r6, sp, #0x28
	str r6, [sp]
	movs r7, #0
	str r7, [sp, #4]
	str r1, [sp, #8]
	movs r1, #0x85
	lsls r1, r1, #2
	add r1, sl
	movs r3, #0
	bl sub_804E958
_080BFDEE:
	mov r0, sl
	bl sub_8008910
	adds r5, r0, #0
	ldr r0, [sp, #0xc8]
	adds r4, r4, r0
	lsls r4, r4, #2
	add r4, sl
	movs r1, #0x88
	lsls r1, r1, #1
	adds r4, r4, r1
	ldr r2, [sp, #0xd0]
	ldr r1, [r2, #4]
	adds r0, r2, #0
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r3, [sp, #0xf4]
	adds r2, r3, r2
	lsls r2, r2, #5
	ldr r6, _080BFE50 @ =0x06010000
	adds r2, r2, r6
	add r0, sp, #0x30
	adds r1, r4, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_8008F0C
	ldr r7, [sp, #0xe8]
	mov sb, r7
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080BFE54
	cmp r1, #0
	beq _080BFE42
	adds r0, r1, #0
	adds r1, r7, #0
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BFE42:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	ldr r5, [sp, #0xc8]
	adds r5, #1
	str r5, [sp, #0xf0]
	b _080BFF1C
	.align 2, 0
_080BFE50: .4byte 0x06010000
_080BFE54:
	str r1, [sp, #0x104]
	movs r0, #1
	str r0, [sp, #0x7c]
	ldr r0, [r5]
	adds r6, r1, #0
	subs r0, r6, r0
	asrs r4, r0, #4
	str r4, [sp, #0x78]
	add r1, sp, #0x7c
	add r0, sp, #0x78
	cmp r4, #1
	bhs _080BFE6E
	adds r0, r1, #0
_080BFE6E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080BFE8C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080BFE90
	mov r0, r8
	bl sub_80D3BC0
	b _080BFE90
_080BFE8C:
	movs r0, #0
	mov r8, r0
_080BFE90:
	adds r6, r0, #0
	str r6, [sp, #0x108]
	ldr r2, [r5]
	adds r3, r6, #0
	ldr r7, [sp, #0xc8]
	adds r7, #1
	str r7, [sp, #0xf0]
	b _080BFEB4
_080BFEA0:
	cmp r3, #0
	beq _080BFEB0
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BFEB0:
	adds r2, #0x10
	adds r3, #0x10
_080BFEB4:
	ldr r0, [sp, #0x104]
	cmp r2, r0
	bne _080BFEA0
	adds r6, r3, #0
	ldr r0, [sp, #0x7c]
	cmp r0, #1
	bne _080BFED6
	cmp r6, #0
	beq _080BFED2
	adds r0, r6, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080BFED2:
	adds r6, #0x10
	b _080BFEF8
_080BFED6:
	adds r3, r0, #0
	adds r2, r6, #0
	cmp r3, #0
	beq _080BFEF6
_080BFEDE:
	cmp r2, #0
	beq _080BFEEE
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080BFEEE:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080BFEDE
_080BFEF6:
	adds r6, r2, #0
_080BFEF8:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080BFF08
_080BFF02:
	adds r1, #0x10
	cmp r1, r2
	bne _080BFF02
_080BFF08:
	cmp r0, #0
	beq _080BFF10
	bl sub_80D0260
_080BFF10:
	ldr r0, [sp, #0x108]
	add r0, r8
	ldr r7, [sp, #0x108]
	str r7, [r5]
	str r6, [r5, #4]
	str r0, [r5, #0xc]
_080BFF1C:
	ldr r0, [sp, #0xc8]
	cmp r0, #2
	beq _080BFF5E
	ldr r4, [sp, #0xf4]
	add r4, sl
	movs r1, #0x89
	lsls r1, r1, #3
	adds r4, r4, r1
	ldr r2, [sp, #0xd0]
	ldr r1, [r2, #4]
	adds r0, r2, #0
	bl sub_8007D4C
	adds r3, r0, #0
	ldr r5, [sp, #0xf4]
	adds r3, r3, r5
	ldr r6, [sp, #0xc8]
	lsls r2, r6, #4
	adds r2, #0x6d
	movs r7, #2
	str r7, [sp]
	movs r0, #0
	str r0, [sp, #4]
	str r7, [sp, #8]
	movs r0, #1
	str r0, [sp, #0xc]
	add r0, sp, #0x80
	movs r1, #0x68
	bl sub_804EA94
	ldr r0, [sp, #0x80]
	ldr r1, [sp, #0x84]
	b _080BFF8E
_080BFF5E:
	movs r4, #0x8b
	lsls r4, r4, #3
	add r4, sl
	ldr r2, [sp, #0xd0]
	ldr r1, [r2, #4]
	adds r0, r2, #0
	bl sub_8007D4C
	adds r3, r0, #0
	adds r3, #0x10
	ldr r5, [sp, #0xc8]
	str r5, [sp]
	movs r6, #0
	str r6, [sp, #4]
	str r5, [sp, #8]
	movs r0, #1
	str r0, [sp, #0xc]
	add r0, sp, #0x88
	movs r1, #0xb8
	movs r2, #0x8d
	bl sub_804EA94
	ldr r0, [sp, #0x88]
	ldr r1, [sp, #0x8c]
_080BFF8E:
	str r0, [r4]
	str r1, [r4, #4]
	ldr r7, [sp, #0xf0]
	str r7, [sp, #0xc8]
	adds r0, r7, #0
	cmp r0, #2
	bgt _080BFF9E
	b _080BFD3E
_080BFF9E:
	ldr r0, _080BFFE0 @ =0x00000604
	add r0, sl
	movs r1, #0xc0
	lsls r1, r1, #3
	add r1, sl
	ldr r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	bge _080BFFE4
	movs r0, #0x14
	bl sub_80005D4
	movs r1, #0x87
	lsls r1, r1, #3
	add r1, sl
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r5, r0, #0
	movs r4, #0xaa
	lsls r4, r4, #3
	add r4, sl
	ldr r0, [r4]
	cmp r5, r0
	beq _080BFFDA
	bl sub_8000608
_080BFFDA:
	str r5, [r4]
	b _080C0018
	.align 2, 0
_080BFFE0: .4byte 0x00000604
_080BFFE4:
	movs r0, #0x14
	bl sub_80005D4
	ldr r1, _080C0110 @ =0x00000434
	add r1, sl
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r5, r0, #0
	movs r4, #0xaa
	lsls r4, r4, #3
	add r4, sl
	ldr r0, [r4]
	cmp r5, r0
	beq _080C000C
	bl sub_8000608
_080C000C:
	str r5, [r4]
	movs r1, #0xc2
	lsls r1, r1, #3
	add r1, sl
	movs r0, #1
	strb r0, [r1]
_080C0018:
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r4]
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	strh r0, [r4, #8]
	str r0, [r4, #0xc]
	strb r1, [r4, #0x10]
	strb r1, [r4, #0x11]
	str r0, [r4, #0x14]
	strb r1, [r4, #0x18]
	ldr r7, _080C0114 @ =0x00000554
	add r7, sl
	ldr r0, [r7]
	cmp r4, r0
	beq _080C0046
	bl sub_8000608
_080C0046:
	str r4, [r7]
	movs r6, #0xaa
	lsls r6, r6, #3
	add r6, sl
	ldr r0, [r6]
	movs r1, #0
	bl sub_805E860
	ldr r0, [r7]
	movs r1, #0x40
	strh r1, [r0]
	ldr r0, [r7]
	strh r1, [r0, #2]
	ldr r4, [r7]
	movs r5, #0xbc
	lsls r5, r5, #3
	add r5, sl
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	strh r0, [r4, #6]
	ldr r1, [r7]
	movs r0, #7
	strh r0, [r1, #4]
	ldr r0, [r7]
	movs r1, #1
	mov r8, r1
	mov r2, r8
	strb r2, [r0, #0x18]
	movs r4, #0xab
	lsls r4, r4, #3
	add r4, sl
	ldr r0, [r6]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x30
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	ldr r0, [sp, #0xe8]
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	ldr r0, [sp, #0xe8]
	ldm r0!, {r3, r6, r7}
	stm r4!, {r3, r6, r7}
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r6, r7}
	stm r4!, {r6, r7}
	mov r0, sl
	bl sub_8008910
	adds r6, r0, #0
	movs r4, #0xac
	lsls r4, r4, #3
	add r4, sl
	ldr r7, [r4]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080C00DC
	ldrh r3, [r4, #4]
_080C00DC:
	lsls r2, r2, #5
	ldr r0, _080C0118 @ =0x06010000
	adds r2, r2, r0
	ldr r0, [sp, #0xe8]
	adds r1, r7, #0
	bl sub_8008F0C
	ldr r1, [sp, #0xe8]
	mov sb, r1
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C011C
	cmp r1, #0
	beq _080C0106
	adds r0, r1, #0
	ldr r1, [sp, #0xe8]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C0106:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C01E0
	.align 2, 0
_080C0110: .4byte 0x00000434
_080C0114: .4byte 0x00000554
_080C0118: .4byte 0x06010000
_080C011C:
	str r1, [sp, #0x104]
	add r1, sp, #0x94
	mov r5, r8
	str r5, [r1]
	ldr r0, [r6]
	ldr r7, [sp, #0x104]
	subs r0, r7, r0
	asrs r4, r0, #4
	add r0, sp, #0x90
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080C0138
	adds r0, r1, #0
_080C0138:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C0156
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C015A
	mov r0, r8
	bl sub_80D3BC0
	b _080C015A
_080C0156:
	movs r0, #0
	mov r8, r0
_080C015A:
	adds r5, r0, #0
	str r5, [sp, #0x108]
	ldr r2, [r6]
	adds r3, r5, #0
	b _080C0178
_080C0164:
	cmp r3, #0
	beq _080C0174
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C0174:
	adds r2, #0x10
	adds r3, #0x10
_080C0178:
	ldr r0, [sp, #0x104]
	cmp r2, r0
	bne _080C0164
	adds r5, r3, #0
	ldr r1, [sp, #0x94]
	cmp r1, #1
	bne _080C019A
	cmp r5, #0
	beq _080C0196
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C0196:
	adds r5, #0x10
	b _080C01BC
_080C019A:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C01BA
_080C01A2:
	cmp r2, #0
	beq _080C01B2
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C01B2:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C01A2
_080C01BA:
	adds r5, r2, #0
_080C01BC:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C01CC
_080C01C6:
	adds r1, #0x10
	cmp r1, r2
	bne _080C01C6
_080C01CC:
	cmp r0, #0
	beq _080C01D4
	bl sub_80D0260
_080C01D4:
	ldr r0, [sp, #0x108]
	add r0, r8
	ldr r7, [sp, #0x108]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C01E0:
	mov r0, sl
	bl sub_8008910
	adds r4, r0, #0
	movs r2, #0xad
	lsls r2, r2, #3
	add r2, sl
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080C01FA
	ldrh r3, [r2, #4]
_080C01FA:
	adds r6, r4, #0
	add r0, sp, #0x30
	ldr r2, _080C0228 @ =0x050002E0
	bl sub_8008F0C
	ldr r0, [sp, #0xe8]
	mov sb, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C022C
	cmp r1, #0
	beq _080C0220
	adds r0, r1, #0
	ldr r1, [sp, #0xe8]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C0220:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C02F4
	.align 2, 0
_080C0228: .4byte 0x050002E0
_080C022C:
	str r1, [sp, #0x104]
	movs r0, #1
	add r1, sp, #0x9c
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x104]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x98
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080C0248
	adds r0, r1, #0
_080C0248:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C0266
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C026A
	mov r0, r8
	bl sub_80D3BC0
	b _080C026A
_080C0266:
	movs r0, #0
	mov r8, r0
_080C026A:
	adds r5, r0, #0
	str r5, [sp, #0x108]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x104]
	cmp r2, r7
	beq _080C0292
_080C0278:
	cmp r3, #0
	beq _080C0288
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C0288:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x104]
	cmp r2, r0
	bne _080C0278
_080C0292:
	adds r5, r3, #0
	ldr r1, [sp, #0x9c]
	cmp r1, #1
	bne _080C02AE
	cmp r5, #0
	beq _080C02AA
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C02AA:
	adds r5, #0x10
	b _080C02D0
_080C02AE:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C02CE
_080C02B6:
	cmp r2, #0
	beq _080C02C6
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C02C6:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C02B6
_080C02CE:
	adds r5, r2, #0
_080C02D0:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C02E0
_080C02DA:
	adds r1, #0x10
	cmp r1, r2
	bne _080C02DA
_080C02E0:
	cmp r0, #0
	beq _080C02E8
	bl sub_80D0260
_080C02E8:
	ldr r0, [sp, #0x108]
	add r0, r8
	ldr r7, [sp, #0x108]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C02F4:
	movs r0, #0xaf
	lsls r0, r0, #3
	add r0, sl
	ldr r2, _080C0328 @ =0x0000FFFF
	movs r1, #0xcd
	bl sub_8008C38
	mov r0, sl
	bl sub_80BDF40
	movs r0, #0
	str r0, [sp, #0xd4]
	movs r1, #0
	str r1, [sp, #0xd8]
	ldr r1, [sp, #0xe8]
	movs r2, #0
	adds r0, r1, #0
	adds r0, #8
_080C0318:
	str r2, [r0]
	subs r0, #4
	cmp r0, r1
	bge _080C0318
	movs r2, #0
	str r2, [sp, #0xdc]
	b _080C08F0
	.align 2, 0
_080C0328: .4byte 0x0000FFFF
_080C032C:
	mov r0, sl
	bl sub_80087C8
	mov r0, sl
	bl sub_80088B8
	movs r1, #0xb5
	lsls r1, r1, #3
	add r1, sl
	ldr r0, [r1]
	cmp r0, #0
	bne _080C0358
	ldr r3, [sp, #0xd4]
	adds r3, #1
	str r3, [sp, #0xd4]
	cmp r3, #0x78
	beq _080C0350
	b _080C08EA
_080C0350:
	movs r4, #0
	str r4, [sp, #0xd4]
	movs r0, #1
	b _080C08E8
_080C0358:
	mov r0, sl
	bl sub_80088D4
	str r0, [sp, #0xe0]
	movs r4, #0x83
	lsls r4, r4, #3
	add r4, sl
	ldr r0, [r4]
	bl sub_8050D34
	adds r7, r0, #0
	ldr r4, [r4]
	mov sb, r4
	mov r0, sl
	bl sub_80088DC
	mov r8, r0
	mov r0, sl
	bl sub_8008920
	adds r6, r0, #0
	mov r0, sl
	bl sub_8008918
	adds r5, r0, #0
	mov r0, sl
	bl sub_8008940
	adds r4, r0, #0
	mov r0, sl
	bl sub_800894C
	ldr r1, _080C03BC @ =0x0000057C
	add r1, sl
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, sb
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl sub_8050D3C
	cmp r0, #6
	bhi _080C040C
	lsls r0, r0, #2
	ldr r1, _080C03C0 @ =_080C03C4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080C03BC: .4byte 0x0000057C
_080C03C0: .4byte _080C03C4
_080C03C4: @ jump table
	.4byte _080C03E0 @ case 0
	.4byte _080C040C @ case 1
	.4byte _080C040C @ case 2
	.4byte _080C03EE @ case 3
	.4byte _080C040C @ case 4
	.4byte _080C040C @ case 5
	.4byte _080C040C @ case 6
_080C03E0:
	movs r0, #0x83
	lsls r0, r0, #3
	add r0, sl
	ldr r0, [r0]
	bl sub_8050D5C
	b _080C040C
_080C03EE:
	cmp r7, #1
	bne _080C040C
	movs r4, #0x83
	lsls r4, r4, #3
	add r4, sl
	ldr r0, [r4]
	ldr r1, _080C0424 @ =gUnknown_08107F84
	bl sub_8050D8C
	ldr r0, [r4]
	bl sub_8050DD8
	ldr r0, _080C0428 @ =0x0000060B
	add r0, sl
	strb r7, [r0]
_080C040C:
	movs r0, #0xb5
	lsls r0, r0, #3
	add r0, sl
	ldr r0, [r0]
	cmp r0, #2
	bne _080C041A
	b _080C0878
_080C041A:
	cmp r0, #2
	bgt _080C042C
	cmp r0, #1
	beq _080C0434
	b _080C08EA
	.align 2, 0
_080C0424: .4byte gUnknown_08107F84
_080C0428: .4byte 0x0000060B
_080C042C:
	cmp r0, #3
	bne _080C0432
	b _080C08C8
_080C0432:
	b _080C08EA
_080C0434:
	ldr r0, _080C04D4 @ =0x0000060B
	add r0, sl
	ldrb r0, [r0]
	cmp r0, #0
	bne _080C0440
	b _080C08EA
_080C0440:
	ldr r5, [sp, #0xcc]
	adds r5, #1
	str r5, [sp, #0xcc]
	ldr r6, [sp, #0xdc]
	lsls r6, r6, #2
	str r6, [sp, #0x100]
	cmp r5, #0x14
	beq _080C0452
	b _080C0630
_080C0452:
	movs r7, #0
	str r7, [sp, #0xcc]
	ldr r0, [sp, #0xe8]
	adds r4, r0, r6
	ldr r0, [r4]
	adds r0, #1
	str r0, [r4]
	movs r0, #0xb0
	lsls r0, r0, #3
	add r0, sl
	movs r1, #0x6a
	bl sub_8008B6C
	ldr r0, [r4]
	add r1, sp, #0x28
	movs r2, #0
	bl sub_804EC84
	ldr r1, [sp, #0xdc]
	lsls r4, r1, #6
	adds r0, r4, r1
	lsls r5, r0, #2
	mov r2, sl
	adds r1, r5, r2
	add r0, sp, #0xa0
	movs r6, #4
	movs r7, #2
	strh r6, [r0]
	strh r7, [r0, #2]
	ldr r0, [r0]
	movs r3, #0x88
	lsls r3, r3, #1
	adds r1, r1, r3
	movs r2, #0
	bl sub_804E7A0
	ldr r0, [sp, #0xdc]
	cmp r0, #1
	beq _080C04D8
	add r0, sp, #0x28
	bl sub_80D3B78
	lsls r0, r0, #3
	movs r2, #0x20
	subs r2, r2, r0
	mov r3, sl
	adds r1, r5, r3
	movs r3, #5
	add r0, sp, #0xa4
	strh r6, [r0]
	strh r7, [r0, #2]
	ldr r0, [r0]
	movs r5, #0x88
	lsls r5, r5, #1
	adds r1, r1, r5
	add r6, sp, #0x28
	str r6, [sp]
	ldr r7, [sp, #0xcc]
	str r7, [sp, #4]
	str r3, [sp, #8]
	movs r3, #0
	bl sub_804E958
	b _080C0504
	.align 2, 0
_080C04D4: .4byte 0x0000060B
_080C04D8:
	add r0, sp, #0x28
	bl sub_80D3B78
	lsls r0, r0, #3
	movs r2, #0x20
	subs r2, r2, r0
	movs r3, #7
	add r0, sp, #0xa8
	strh r6, [r0]
	strh r7, [r0, #2]
	ldr r0, [r0]
	movs r1, #0x85
	lsls r1, r1, #2
	add r1, sl
	add r5, sp, #0x28
	str r5, [sp]
	ldr r6, [sp, #0xcc]
	str r6, [sp, #4]
	str r3, [sp, #8]
	movs r3, #0
	bl sub_804E958
_080C0504:
	mov r0, sl
	bl sub_8008910
	adds r5, r0, #0
	ldr r7, [sp, #0xdc]
	adds r4, r4, r7
	lsls r4, r4, #2
	add r4, sl
	movs r0, #0x88
	lsls r0, r0, #1
	adds r4, r4, r0
	movs r0, #0xb9
	lsls r0, r0, #3
	add r0, sl
	ldr r1, [r0, #4]
	bl sub_8007D4C
	lsls r2, r7, #3
	adds r2, r2, r0
	movs r3, #0x80
	lsls r3, r3, #1
	lsls r2, r2, #5
	ldr r1, _080C0564 @ =0x06010000
	adds r2, r2, r1
	add r0, sp, #0x3c
	adds r1, r4, #0
	bl sub_8008F0C
	add r2, sp, #0x3c
	mov sb, r2
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	mov r3, sb
	str r3, [sp, #0xec]
	cmp r1, r0
	beq _080C0568
	cmp r1, #0
	beq _080C055C
	adds r0, r1, #0
	adds r1, r3, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C055C:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080C0630
	.align 2, 0
_080C0564: .4byte 0x06010000
_080C0568:
	str r1, [sp, #0x104]
	movs r0, #1
	add r1, sp, #0xb0
	str r0, [r1]
	ldr r0, [r5]
	ldr r2, [sp, #0x104]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0xac
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080C0584
	adds r0, r1, #0
_080C0584:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C05A2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C05A6
	mov r0, r8
	bl sub_80D3BC0
	b _080C05A6
_080C05A2:
	movs r0, #0
	mov r8, r0
_080C05A6:
	adds r6, r0, #0
	str r6, [sp, #0x108]
	ldr r2, [r5]
	adds r3, r6, #0
	ldr r4, [sp, #0x104]
	cmp r2, r4
	beq _080C05CE
_080C05B4:
	cmp r3, #0
	beq _080C05C4
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C05C4:
	adds r2, #0x10
	adds r3, #0x10
	ldr r6, [sp, #0x104]
	cmp r2, r6
	bne _080C05B4
_080C05CE:
	adds r6, r3, #0
	ldr r1, [sp, #0xb0]
	cmp r1, #1
	bne _080C05EA
	cmp r6, #0
	beq _080C05E6
	adds r0, r6, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C05E6:
	adds r6, #0x10
	b _080C060C
_080C05EA:
	adds r3, r1, #0
	adds r2, r6, #0
	cmp r3, #0
	beq _080C060A
_080C05F2:
	cmp r2, #0
	beq _080C0602
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C0602:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C05F2
_080C060A:
	adds r6, r2, #0
_080C060C:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C061C
_080C0616:
	adds r1, #0x10
	cmp r1, r2
	bne _080C0616
_080C061C:
	cmp r0, #0
	beq _080C0624
	bl sub_80D0260
_080C0624:
	ldr r0, [sp, #0x108]
	add r0, r8
	ldr r1, [sp, #0x108]
	str r1, [r5]
	str r6, [r5, #4]
	str r0, [r5, #0xc]
_080C0630:
	ldr r2, [sp, #0xe8]
	ldr r3, [sp, #0x100]
	adds r0, r2, r3
	adds r1, r3, #0
	add r1, sp
	adds r1, #0x10
	ldr r2, [r0]
	ldr r0, [r1]
	cmp r2, r0
	bne _080C064A
	ldr r4, [sp, #0xdc]
	adds r4, #1
	str r4, [sp, #0xdc]
_080C064A:
	movs r0, #9
	ldr r5, [sp, #0xe0]
	ands r0, r5
	cmp r0, #0
	bne _080C0656
	b _080C0854
_080C0656:
	movs r6, #0
	str r6, [sp, #0xc8]
	mov r7, sp
	adds r7, #0x3c
	str r7, [sp, #0xec]
	mov r0, sp
	adds r0, #0xb4
	str r0, [sp, #0xfc]
	mov r1, sp
	adds r1, #0xb8
	str r1, [sp, #0xe4]
_080C066C:
	ldr r2, [sp, #0xc8]
	lsls r0, r2, #2
	ldr r3, [sp, #0xe8]
	adds r1, r3, r0
	add r0, sp
	adds r0, #0x10
	ldr r0, [r0]
	str r0, [r1]
	add r1, sp, #0x28
	movs r2, #0
	bl sub_804EC84
	ldr r5, [sp, #0xc8]
	lsls r4, r5, #6
	adds r0, r4, r5
	lsls r5, r0, #2
	mov r6, sl
	adds r1, r5, r6
	add r0, sp, #0xb4
	movs r7, #4
	strh r7, [r0]
	movs r3, #2
	ldr r2, [sp, #0xfc]
	strh r3, [r2, #2]
	ldr r0, [r0]
	movs r6, #0x88
	lsls r6, r6, #1
	adds r1, r1, r6
	movs r2, #0
	bl sub_804E7A0
	ldr r7, [sp, #0xc8]
	cmp r7, #1
	beq _080C06E6
	add r0, sp, #0x28
	bl sub_80D3B78
	lsls r0, r0, #3
	movs r2, #0x20
	subs r2, r2, r0
	mov r0, sl
	adds r1, r5, r0
	movs r3, #5
	movs r6, #4
	ldr r5, [sp, #0xe4]
	strh r6, [r5]
	movs r7, #2
	strh r7, [r5, #2]
	ldr r0, [r5]
	movs r5, #0x88
	lsls r5, r5, #1
	adds r1, r1, r5
	add r6, sp, #0x28
	str r6, [sp]
	movs r7, #0
	str r7, [sp, #4]
	str r3, [sp, #8]
	movs r3, #0
	bl sub_804E958
	b _080C0716
_080C06E6:
	add r0, sp, #0x28
	bl sub_80D3B78
	lsls r0, r0, #3
	movs r2, #0x20
	subs r2, r2, r0
	movs r1, #7
	add r0, sp, #0xbc
	movs r3, #4
	strh r3, [r0]
	movs r5, #2
	strh r5, [r0, #2]
	ldr r0, [r0]
	add r6, sp, #0x28
	str r6, [sp]
	movs r7, #0
	str r7, [sp, #4]
	str r1, [sp, #8]
	movs r1, #0x85
	lsls r1, r1, #2
	add r1, sl
	movs r3, #0
	bl sub_804E958
_080C0716:
	mov r0, sl
	bl sub_8008910
	adds r5, r0, #0
	ldr r0, [sp, #0xc8]
	adds r4, r4, r0
	lsls r4, r4, #2
	add r4, sl
	movs r1, #0x88
	lsls r1, r1, #1
	adds r4, r4, r1
	movs r0, #0xb9
	lsls r0, r0, #3
	add r0, sl
	ldr r1, [r0, #4]
	bl sub_8007D4C
	ldr r3, [sp, #0xc8]
	lsls r2, r3, #3
	adds r2, r2, r0
	lsls r2, r2, #5
	ldr r6, _080C077C @ =0x06010000
	adds r2, r2, r6
	add r0, sp, #0x3c
	adds r1, r4, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_8008F0C
	ldr r7, [sp, #0xec]
	mov sb, r7
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080C0780
	cmp r1, #0
	beq _080C076C
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C076C:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	ldr r5, [sp, #0xc8]
	adds r5, #1
	str r5, [sp, #0xf0]
	b _080C084A
	.align 2, 0
_080C077C: .4byte 0x06010000
_080C0780:
	str r1, [sp, #0x104]
	movs r0, #1
	add r1, sp, #0xc4
	str r0, [r1]
	ldr r0, [r5]
	ldr r6, [sp, #0x104]
	subs r0, r6, r0
	asrs r4, r0, #4
	add r0, sp, #0xc0
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080C079C
	adds r0, r1, #0
_080C079C:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C07BA
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C07BE
	mov r0, r8
	bl sub_80D3BC0
	b _080C07BE
_080C07BA:
	movs r0, #0
	mov r8, r0
_080C07BE:
	adds r6, r0, #0
	str r6, [sp, #0x108]
	ldr r2, [r5]
	adds r3, r6, #0
	ldr r7, [sp, #0xc8]
	adds r7, #1
	str r7, [sp, #0xf0]
	b _080C07E2
_080C07CE:
	cmp r3, #0
	beq _080C07DE
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C07DE:
	adds r2, #0x10
	adds r3, #0x10
_080C07E2:
	ldr r0, [sp, #0x104]
	cmp r2, r0
	bne _080C07CE
	adds r6, r3, #0
	ldr r1, [sp, #0xc4]
	cmp r1, #1
	bne _080C0804
	cmp r6, #0
	beq _080C0800
	adds r0, r6, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C0800:
	adds r6, #0x10
	b _080C0826
_080C0804:
	adds r3, r1, #0
	adds r2, r6, #0
	cmp r3, #0
	beq _080C0824
_080C080C:
	cmp r2, #0
	beq _080C081C
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C081C:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C080C
_080C0824:
	adds r6, r2, #0
_080C0826:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C0836
_080C0830:
	adds r1, #0x10
	cmp r1, r2
	bne _080C0830
_080C0836:
	cmp r0, #0
	beq _080C083E
	bl sub_80D0260
_080C083E:
	ldr r0, [sp, #0x108]
	add r0, r8
	ldr r7, [sp, #0x108]
	str r7, [r5]
	str r6, [r5, #4]
	str r0, [r5, #0xc]
_080C084A:
	ldr r0, [sp, #0xf0]
	str r0, [sp, #0xc8]
	cmp r0, #2
	bgt _080C0854
	b _080C066C
_080C0854:
	ldr r1, [sp, #0x30]
	ldr r0, [sp, #0x10]
	cmp r1, r0
	bne _080C08EA
	ldr r2, [sp, #0xe8]
	ldr r1, [r2, #4]
	ldr r0, [sp, #0x14]
	cmp r1, r0
	bne _080C08EA
	ldr r1, [r2, #8]
	ldr r0, [sp, #0x18]
	cmp r1, r0
	bne _080C08EA
	movs r1, #0xb5
	lsls r1, r1, #3
	add r1, sl
	movs r0, #2
	b _080C08E8
_080C0878:
	ldr r3, [sp, #0xd8]
	adds r3, #1
	str r3, [sp, #0xd8]
	cmp r3, #0x3c
	bne _080C08B4
	ldr r1, _080C08A4 @ =0x0000060C
	add r1, sl
	movs r0, #1
	strb r0, [r1]
	movs r0, #0xc2
	lsls r0, r0, #3
	add r0, sl
	ldrb r0, [r0]
	cmp r0, #0
	bne _080C08A8
	movs r0, #0xb0
	lsls r0, r0, #3
	add r0, sl
	movs r1, #0xb7
	bl sub_8008B6C
	b _080C08B4
	.align 2, 0
_080C08A4: .4byte 0x0000060C
_080C08A8:
	movs r0, #0xb0
	lsls r0, r0, #3
	add r0, sl
	movs r1, #0xb6
	bl sub_8008B6C
_080C08B4:
	ldr r4, [sp, #0xd8]
	cmp r4, #0xf0
	bne _080C08EA
	movs r5, #0
	str r5, [sp, #0xd8]
	movs r1, #0xb5
	lsls r1, r1, #3
	add r1, sl
	movs r0, #3
	b _080C08E8
_080C08C8:
	ldr r6, [sp, #0xd8]
	adds r6, #1
	str r6, [sp, #0xd8]
	movs r0, #9
	ldr r7, [sp, #0xe0]
	ands r0, r7
	cmp r0, #0
	bne _080C08E0
	movs r0, #0x96
	lsls r0, r0, #2
	cmp r6, r0
	bne _080C08EA
_080C08E0:
	movs r1, #0xb4
	lsls r1, r1, #3
	add r1, sl
	movs r0, #5
_080C08E8:
	str r0, [r1]
_080C08EA:
	mov r0, sl
	bl sub_80BDF40
_080C08F0:
	movs r0, #0xb4
	lsls r0, r0, #3
	add r0, sl
	ldr r0, [r0]
	cmp r0, #4
	bne _080C08FE
	b _080C032C
_080C08FE:
	add sp, #0x10c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80C0910
sub_80C0910: @ 0x080C0910
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _080C0934 @ =0x000005FA
	adds r2, r4, r0
	ldrb r0, [r2]
	cmp r0, #0x13
	bne _080C0950
	ldr r1, _080C0938 @ =0x000005AC
	adds r0, r4, r1
	ldr r0, [r0]
	cmp r0, #3
	bne _080C0940
	ldr r2, _080C093C @ =0x0000060A
	adds r1, r4, r2
	movs r0, #0
	strb r0, [r1]
	b _080C09C4
	.align 2, 0
_080C0934: .4byte 0x000005FA
_080C0938: .4byte 0x000005AC
_080C093C: .4byte 0x0000060A
_080C0940:
	ldr r3, _080C094C @ =0x0000060A
	adds r1, r4, r3
	movs r0, #1
	strb r0, [r1]
	b _080C09C4
	.align 2, 0
_080C094C: .4byte 0x0000060A
_080C0950:
	cmp r0, #0x14
	bne _080C09C4
	ldr r1, _080C098C @ =0x000005F9
	adds r0, r4, r1
	movs r1, #0
	strb r1, [r0]
	movs r3, #0xbf
	lsls r3, r3, #3
	adds r0, r4, r3
	strb r1, [r0]
	strb r1, [r2]
	ldr r2, _080C0990 @ =0x00000609
	adds r0, r4, r2
	strb r1, [r0]
	adds r3, #0x12
	adds r0, r4, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _080C0998
	ldr r1, _080C0994 @ =0x000005FF
	adds r0, r4, r1
	ldrb r1, [r0]
	adds r1, #1
	strb r1, [r0]
	subs r2, #0x89
	adds r0, r4, r2
	movs r1, #0xc7
	bl sub_8008B6C
	b _080C09AE
	.align 2, 0
_080C098C: .4byte 0x000005F9
_080C0990: .4byte 0x00000609
_080C0994: .4byte 0x000005FF
_080C0998:
	ldr r3, _080C09CC @ =0x000005FE
	adds r0, r4, r3
	ldrb r1, [r0]
	adds r1, #1
	strb r1, [r0]
	movs r1, #0xb0
	lsls r1, r1, #3
	adds r0, r4, r1
	movs r1, #0xbc
	bl sub_8008B6C
_080C09AE:
	ldr r2, _080C09D0 @ =0x000005AC
	adds r1, r4, r2
	movs r0, #0
	str r0, [r1]
	ldr r3, _080C09D4 @ =0x0000060E
	adds r0, r4, r3
	movs r1, #1
	strb r1, [r0]
	subs r2, #8
	adds r0, r4, r2
	str r1, [r0]
_080C09C4:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080C09CC: .4byte 0x000005FE
_080C09D0: .4byte 0x000005AC
_080C09D4: .4byte 0x0000060E

	thumb_func_start sub_80C09D8
sub_80C09D8: @ 0x080C09D8
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #0xb4
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _080C0A08
	cmp r0, #3
	beq _080C0A80
	ldr r2, _080C0A00 @ =gUnknown_08107FB0
	ldr r3, _080C0A04 @ =0x00000614
	adds r0, r4, r3
	ldr r1, [r0]
	movs r0, #0x54
	muls r0, r1, r0
	ldrh r2, [r2, #6]
	adds r0, r0, r2
	b _080C0B44
	.align 2, 0
_080C0A00: .4byte gUnknown_08107FB0
_080C0A04: .4byte 0x00000614
_080C0A08:
	ldr r1, _080C0A24 @ =0x00000612
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080C0A30
	ldr r2, _080C0A28 @ =gUnknown_08107FB0
	ldr r3, _080C0A2C @ =0x00000614
	adds r0, r4, r3
	ldr r1, [r0]
	movs r0, #0x54
	muls r0, r1, r0
	ldrh r2, [r2]
	adds r0, r0, r2
	b _080C0B44
	.align 2, 0
_080C0A24: .4byte 0x00000612
_080C0A28: .4byte gUnknown_08107FB0
_080C0A2C: .4byte 0x00000614
_080C0A30:
	ldr r1, _080C0A4C @ =0x00000611
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080C0A58
	ldr r2, _080C0A50 @ =gUnknown_08107FB0
	ldr r3, _080C0A54 @ =0x00000614
	adds r0, r4, r3
	ldr r1, [r0]
	movs r0, #0x54
	muls r0, r1, r0
	ldrh r2, [r2, #4]
	adds r0, r0, r2
	b _080C0B44
	.align 2, 0
_080C0A4C: .4byte 0x00000611
_080C0A50: .4byte gUnknown_08107FB0
_080C0A54: .4byte 0x00000614
_080C0A58:
	ldr r2, _080C0A74 @ =gUnknown_08107FB0
	ldr r1, _080C0A78 @ =0x00000609
	adds r0, r4, r1
	ldrb r1, [r0]
	lsls r1, r1, #2
	ldr r3, _080C0A7C @ =0x000005AC
	adds r0, r4, r3
	ldr r0, [r0]
	adds r0, #3
	adds r1, r1, r0
	lsls r1, r1, #1
	adds r1, r1, r2
	b _080C0B36
	.align 2, 0
_080C0A74: .4byte gUnknown_08107FB0
_080C0A78: .4byte 0x00000609
_080C0A7C: .4byte 0x000005AC
_080C0A80:
	ldr r3, _080C0AA0 @ =0x000005A4
	adds r0, r4, r3
	ldr r0, [r0]
	cmp r0, #0
	beq _080C0AAC
	cmp r0, #1
	beq _080C0AD0
	ldr r2, _080C0AA4 @ =gUnknown_08107FB0
	ldr r1, _080C0AA8 @ =0x00000614
	adds r0, r4, r1
	ldr r1, [r0]
	movs r0, #0x54
	muls r0, r1, r0
	ldrh r2, [r2, #6]
	adds r0, r0, r2
	b _080C0B44
	.align 2, 0
_080C0AA0: .4byte 0x000005A4
_080C0AA4: .4byte gUnknown_08107FB0
_080C0AA8: .4byte 0x00000614
_080C0AAC:
	ldr r2, _080C0AC8 @ =gUnknown_08107FB0
	ldr r3, _080C0ACC @ =0x00000609
	adds r0, r4, r3
	ldrb r1, [r0]
	lsls r1, r1, #2
	subs r3, #0x5d
	adds r0, r4, r3
	ldr r0, [r0]
	adds r0, #3
	adds r1, r1, r0
	lsls r1, r1, #1
	adds r1, r1, r2
	b _080C0B36
	.align 2, 0
_080C0AC8: .4byte gUnknown_08107FB0
_080C0ACC: .4byte 0x00000609
_080C0AD0:
	ldr r3, _080C0AF0 @ =0x0000060F
	adds r1, r4, r3
	ldrb r0, [r1]
	cmp r0, #0
	beq _080C0AFC
	movs r0, #0
	strb r0, [r1]
	ldr r2, _080C0AF4 @ =gUnknown_08107FB0
	ldr r1, _080C0AF8 @ =0x00000614
	adds r0, r4, r1
	ldr r1, [r0]
	movs r0, #0x54
	muls r0, r1, r0
	ldrh r2, [r2, #6]
	adds r0, r0, r2
	b _080C0B44
	.align 2, 0
_080C0AF0: .4byte 0x0000060F
_080C0AF4: .4byte gUnknown_08107FB0
_080C0AF8: .4byte 0x00000614
_080C0AFC:
	ldr r2, _080C0B18 @ =0x0000060A
	adds r0, r4, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _080C0B24
	ldr r2, _080C0B1C @ =gUnknown_08107FB0
	ldr r3, _080C0B20 @ =0x00000614
	adds r0, r4, r3
	ldr r1, [r0]
	movs r0, #0x54
	muls r0, r1, r0
	ldrh r2, [r2]
	adds r0, r0, r2
	b _080C0B44
	.align 2, 0
_080C0B18: .4byte 0x0000060A
_080C0B1C: .4byte gUnknown_08107FB0
_080C0B20: .4byte 0x00000614
_080C0B24:
	bl sub_80D11E4
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x1f
	ldr r0, _080C0B50 @ =gUnknown_08107FB0
	adds r1, #1
	lsls r1, r1, #1
	adds r1, r1, r0
_080C0B36:
	ldr r2, _080C0B54 @ =0x00000614
	adds r0, r4, r2
	ldr r2, [r0]
	movs r0, #0x54
	muls r0, r2, r0
	ldrh r1, [r1]
	adds r0, r0, r1
_080C0B44:
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080C0B50: .4byte gUnknown_08107FB0
_080C0B54: .4byte 0x00000614

	thumb_func_start sub_80C0B58
sub_80C0B58: @ 0x080C0B58
	ldr r1, _080C0B6C @ =gUnknown_08107FC6
	movs r2, #0xc3
	lsls r2, r2, #3
	adds r0, r0, r2
	ldr r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	bx lr
	.align 2, 0
_080C0B6C: .4byte gUnknown_08107FC6

	thumb_func_start sub_80C0B70
sub_80C0B70: @ 0x080C0B70
	push {r4, r5, lr}
	adds r5, r0, #0
	bl sub_80088CC
	adds r4, r0, #0
	adds r0, r5, #0
	bl sub_80C0CA4
	movs r0, #8
	ands r0, r4
	cmp r0, #0
	bne _080C0B8E
	adds r0, r5, #0
	bl sub_80C0B94
_080C0B8E:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80C0B94
sub_80C0B94: @ 0x080C0B94
	push {r4, r5, lr}
	adds r4, r0, #0
	bl sub_80088CC
	adds r2, r0, #0
	movs r5, #1
	ands r2, r5
	cmp r2, #0
	bne _080C0BDC
	ldr r0, _080C0BD0 @ =0x00000609
	adds r3, r4, r0
	ldrb r0, [r3]
	cmp r0, #0
	beq _080C0C8E
	ldr r0, _080C0BD4 @ =0x000005FC
	adds r1, r4, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1e
	bne _080C0C8E
	strb r2, [r3]
	ldr r3, _080C0BD8 @ =0x0000060E
	adds r0, r4, r3
	strb r5, [r0]
	strb r2, [r1]
	b _080C0C8E
	.align 2, 0
_080C0BD0: .4byte 0x00000609
_080C0BD4: .4byte 0x000005FC
_080C0BD8: .4byte 0x0000060E
_080C0BDC:
	ldr r0, _080C0C3C @ =0x00000609
	adds r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _080C0BEC
	ldr r2, _080C0C40 @ =0x0000060E
	adds r0, r4, r2
	strb r5, [r0]
_080C0BEC:
	movs r2, #0
	strb r5, [r1]
	ldr r3, _080C0C44 @ =0x000005FC
	adds r0, r4, r3
	strb r2, [r0]
	ldr r0, _080C0C48 @ =0x000005FA
	adds r1, r4, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bls _080C0C88
	cmp r0, #0x14
	bhi _080C0C88
	ldr r1, _080C0C4C @ =0x000005FB
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0xc
	bhi _080C0C54
	subs r3, #4
	adds r1, r4, r3
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	adds r3, #1
	adds r0, r4, r3
	strb r2, [r0]
	ldrb r0, [r1]
	cmp r0, #4
	bls _080C0C80
	strb r2, [r1]
	ldr r0, _080C0C50 @ =0x000005AC
	adds r1, r4, r0
	ldr r0, [r1]
	cmp r0, #2
	bgt _080C0C80
	adds r0, #1
	b _080C0C78
	.align 2, 0
_080C0C3C: .4byte 0x00000609
_080C0C40: .4byte 0x0000060E
_080C0C44: .4byte 0x000005FC
_080C0C48: .4byte 0x000005FA
_080C0C4C: .4byte 0x000005FB
_080C0C50: .4byte 0x000005AC
_080C0C54:
	ldr r3, _080C0C94 @ =0x000005F9
	adds r1, r4, r3
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	subs r3, #1
	adds r0, r4, r3
	strb r2, [r0]
	ldrb r0, [r1]
	cmp r0, #2
	bls _080C0C80
	strb r2, [r1]
	ldr r0, _080C0C98 @ =0x000005AC
	adds r1, r4, r0
	ldr r0, [r1]
	cmp r0, #0
	ble _080C0C80
	subs r0, #1
_080C0C78:
	str r0, [r1]
	ldr r1, _080C0C9C @ =0x0000060E
	adds r0, r4, r1
	strb r5, [r0]
_080C0C80:
	ldr r2, _080C0CA0 @ =0x000005FB
	adds r1, r4, r2
	movs r0, #0
	strb r0, [r1]
_080C0C88:
	adds r0, r4, #0
	bl sub_80C0910
_080C0C8E:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080C0C94: .4byte 0x000005F9
_080C0C98: .4byte 0x000005AC
_080C0C9C: .4byte 0x0000060E
_080C0CA0: .4byte 0x000005FB

	thumb_func_start sub_80C0CA4
sub_80C0CA4: @ 0x080C0CA4
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80088CC
	movs r1, #8
	ands r1, r0
	cmp r1, #0
	beq _080C0D14
	ldr r1, _080C0CD4 @ =0x00000584
	adds r0, r4, r1
	movs r1, #0xb8
	bl sub_8008B6C
	ldr r0, _080C0CD8 @ =0x000005A4
	adds r1, r4, r0
	ldr r0, [r1]
	cmp r0, #1
	beq _080C0CEA
	cmp r0, #1
	bgt _080C0CDC
	cmp r0, #0
	beq _080C0CE6
	b _080C0D14
	.align 2, 0
_080C0CD4: .4byte 0x00000584
_080C0CD8: .4byte 0x000005A4
_080C0CDC:
	cmp r0, #2
	beq _080C0D10
	cmp r0, #3
	beq _080C0CFC
	b _080C0D14
_080C0CE6:
	movs r0, #2
	b _080C0D12
_080C0CEA:
	movs r0, #3
	str r0, [r1]
	movs r1, #0x9b
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r1, [r0]
	movs r0, #0
	strh r0, [r1, #0x10]
	b _080C0D14
_080C0CFC:
	movs r0, #1
	str r0, [r1]
	movs r1, #0x9b
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1, #0x10]
	b _080C0D14
_080C0D10:
	movs r0, #0
_080C0D12:
	str r0, [r1]
_080C0D14:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80C0D1C
sub_80C0D1C: @ 0x080C0D1C
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _080C0D40 @ =gUnknown_080E8544
	str r0, [r4]
	movs r0, #0xc4
	lsls r0, r0, #3
	bl sub_80005D4
	adds r1, r5, #0
	bl sub_80BC938
	str r0, [r4, #4]
	adds r0, r4, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080C0D40: .4byte gUnknown_080E8544

	thumb_func_start sub_80C0D44
sub_80C0D44: @ 0x080C0D44
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _080C0D70 @ =gUnknown_080E8544
	str r0, [r4]
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080C0D60
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080C0D60:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_80007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080C0D70: .4byte gUnknown_080E8544

	thumb_func_start sub_80C0D74
sub_80C0D74: @ 0x080C0D74
	push {lr}
	ldr r0, [r0, #4]
	bl sub_80BCCD4
	pop {r1}
	bx r1

	thumb_func_start sub_80C0D80
sub_80C0D80: @ 0x080C0D80
	ldr r0, [r0, #4]
	ldr r1, _080C0D8C @ =0x00000604
	adds r0, r0, r1
	ldr r0, [r0]
	bx lr
	.align 2, 0
_080C0D8C: .4byte 0x00000604

	thumb_func_start sub_80C0D90
sub_80C0D90: @ 0x080C0D90
	push {r4, lr}
	sub sp, #0xc
	adds r4, r0, #0
	ldr r1, [r1, #4]
	mov r0, sp
	bl sub_80BCCE0
	ldr r2, [sp]
	mov r0, sp
	str r0, [sp, #4]
	str r2, [sp, #8]
	adds r1, r0, #0
	movs r0, #0
	str r0, [r1]
	str r2, [r4]
	ldr r1, [sp]
	cmp r1, #0
	beq _080C0DC0
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080C0DC0:
	adds r0, r4, #0
	add sp, #0xc
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80C0DCC
sub_80C0DCC: @ 0x080C0DCC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x50
	adds r6, r0, #0
	str r1, [sp, #0x14]
	bl sub_8008444
	ldr r0, _080C11C0 @ =gUnknown_080E8554
	str r0, [r6, #4]
	movs r0, #3
	add r7, sp, #0x10
	movs r1, #1
	rsbs r1, r1, #0
_080C0DEC:
	subs r0, #1
	cmp r0, r1
	bne _080C0DEC
	movs r0, #4
	bl sub_80005D4
	adds r5, r0, #0
	add r0, sp, #0xc
	bl sub_800835C
	adds r0, r7, #0
	bl sub_800770C
	movs r4, #0
	str r4, [sp]
	add r0, sp, #0xc
	str r0, [sp, #4]
	str r7, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #0x18
	movs r3, #0
	bl sub_8050CC0
	ldr r2, _080C11C4 @ =0x0000051C
	adds r1, r6, r2
	str r0, [r1]
	adds r0, r7, #0
	movs r1, #2
	bl sub_8007714
	add r0, sp, #0xc
	movs r1, #2
	bl sub_8008364
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080C11C8 @ =gUnknown_0873E5B0
	bl sub_805E6CC
	movs r2, #0xa4
	lsls r2, r2, #3
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080C11CC @ =gUnknown_0873DE44
	bl sub_805E6CC
	ldr r2, _080C11D0 @ =0x00000524
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080C11D4 @ =gUnknown_087405A0
	bl sub_805E6CC
	movs r2, #0xa5
	lsls r2, r2, #3
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080C11D8 @ =gUnknown_0858BA28
	bl sub_805E6CC
	ldr r2, _080C11DC @ =0x0000052C
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080C11E0 @ =gUnknown_0873D5FC
	bl sub_805E6CC
	movs r2, #0xa6
	lsls r2, r2, #3
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080C11E4 @ =gUnknown_08740908
	bl sub_805E6CC
	ldr r2, _080C11E8 @ =0x00000534
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080C11EC @ =gUnknown_0871D51C
	bl sub_805E6CC
	movs r2, #0xa7
	lsls r2, r2, #3
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080C11F0 @ =gUnknown_0872BE64
	bl sub_805E6CC
	ldr r2, _080C11F4 @ =0x0000053C
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x30
	bl sub_80005D4
	ldr r1, _080C11F8 @ =gUnknown_0873D6D8
	bl sub_805E6CC
	movs r2, #0xa8
	lsls r2, r2, #3
	adds r1, r6, r2
	str r0, [r1]
	movs r0, #0x10
	bl sub_80005D4
	adds r5, r0, #0
	adds r0, r6, #0
	bl sub_8008918
	adds r1, r0, #0
	str r4, [r5]
	str r4, [r5, #4]
	ldr r0, _080C11FC @ =gUnknown_080E5B80
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0xc
	bl sub_8009300
	ldr r1, _080C1200 @ =0x00000544
	adds r0, r6, r1
	str r5, [r0]
	movs r2, #0xaa
	lsls r2, r2, #3
	adds r0, r6, r2
	str r4, [r0]
	adds r1, #0x10
	adds r0, r6, r1
	str r4, [r0]
	adds r2, #8
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0x10
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	adds r2, #8
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0x10
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	adds r2, #8
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0x10
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	adds r2, #8
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0x10
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	adds r2, #8
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0xc
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	adds r1, #0x10
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	adds r2, #0x10
	adds r0, r6, r2
	str r4, [r0]
	ldr r0, _080C1204 @ =0x0000061C
	adds r3, r6, r0
	movs r1, #0x18
	adds r2, #0x70
	adds r4, r6, r2
	adds r0, #0x74
	adds r5, r6, r0
	adds r2, #0x10
	adds r7, r6, r2
	adds r0, #0x80
	adds r0, r0, r6
	mov ip, r0
	adds r2, #0x80
	adds r2, r2, r6
	mov r8, r2
	movs r0, #0xe4
	lsls r0, r0, #3
	adds r0, r0, r6
	mov sb, r0
	movs r2, #0xe7
	lsls r2, r2, #3
	adds r2, r2, r6
	mov sl, r2
	movs r0, #0xe8
	lsls r0, r0, #3
	adds r0, r6, r0
	str r0, [sp, #0x3c]
	movs r2, #0xe9
	lsls r2, r2, #3
	adds r2, r6, r2
	str r2, [sp, #0x40]
	movs r0, #0xec
	lsls r0, r0, #3
	adds r0, r6, r0
	str r0, [sp, #0x44]
	movs r2, #0xed
	lsls r2, r2, #3
	adds r2, r6, r2
	str r2, [sp, #0x48]
	movs r0, #0xee
	lsls r0, r0, #3
	adds r0, r6, r0
	str r0, [sp, #0x4c]
	movs r2, #0xf5
	lsls r2, r2, #3
	adds r2, r6, r2
	str r2, [sp, #0x18]
	movs r0, #0xf6
	lsls r0, r0, #3
	adds r0, r6, r0
	str r0, [sp, #0x1c]
	movs r2, #0xf7
	lsls r2, r2, #3
	adds r2, r6, r2
	str r2, [sp, #0x20]
	movs r0, #0xfa
	lsls r0, r0, #3
	adds r0, r6, r0
	str r0, [sp, #0x24]
	movs r2, #0xfb
	lsls r2, r2, #3
	adds r2, r6, r2
	str r2, [sp, #0x28]
	movs r0, #0xfc
	lsls r0, r0, #3
	adds r0, r6, r0
	str r0, [sp, #0x2c]
	movs r2, #0xff
	lsls r2, r2, #3
	adds r2, r6, r2
	str r2, [sp, #0x30]
	movs r0, #0x80
	lsls r0, r0, #4
	adds r0, r6, r0
	str r0, [sp, #0x34]
	ldr r2, _080C1208 @ =0x00000808
	adds r2, r6, r2
	str r2, [sp, #0x38]
	movs r2, #0
	movs r0, #1
	rsbs r0, r0, #0
_080C108A:
	stm r3!, {r2}
	subs r1, #1
	cmp r1, r0
	bne _080C108A
	movs r1, #0xd0
	lsls r1, r1, #3
	adds r0, r6, r1
	movs r1, #0
	str r1, [r0]
	strh r1, [r0, #4]
	str r1, [r4]
	strh r1, [r4, #4]
	str r1, [r5]
	strh r1, [r5, #4]
	str r1, [r7]
	strh r1, [r7, #4]
	movs r2, #0xd4
	lsls r2, r2, #3
	adds r0, r6, r2
	str r1, [r0]
	ldr r0, _080C120C @ =0x000006A4
	adds r1, r6, r0
	movs r0, #0x18
	movs r3, #0
	movs r2, #1
	rsbs r2, r2, #0
_080C10BE:
	stm r1!, {r3}
	subs r0, #1
	cmp r0, r2
	bne _080C10BE
	movs r1, #0xe1
	lsls r1, r1, #3
	adds r0, r6, r1
	movs r4, #0
	str r4, [r0]
	strh r4, [r0, #4]
	mov r2, ip
	str r4, [r2]
	strh r4, [r2, #4]
	mov r0, r8
	str r4, [r0]
	strh r4, [r0, #4]
	mov r1, sb
	str r4, [r1]
	strh r4, [r1, #4]
	movs r2, #0xe5
	lsls r2, r2, #3
	adds r0, r6, r2
	str r4, [r0]
	ldr r1, _080C1210 @ =0x0000072C
	adds r0, r6, r1
	str r4, [r0]
	adds r2, #8
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	mov r0, sl
	str r4, [r0]
	strh r4, [r0, #4]
	ldr r1, [sp, #0x3c]
	str r4, [r1]
	strh r4, [r1, #4]
	ldr r2, [sp, #0x40]
	str r4, [r2]
	strh r4, [r2, #4]
	movs r1, #0xea
	lsls r1, r1, #3
	adds r0, r6, r1
	str r4, [r0]
	ldr r2, _080C1214 @ =0x00000754
	adds r0, r6, r2
	str r4, [r0]
	adds r1, #8
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	ldr r2, [sp, #0x44]
	str r4, [r2]
	strh r4, [r2, #4]
	ldr r0, [sp, #0x48]
	str r4, [r0]
	strh r4, [r0, #4]
	ldr r1, [sp, #0x4c]
	str r4, [r1]
	strh r4, [r1, #4]
	movs r2, #0xf3
	lsls r2, r2, #3
	adds r0, r6, r2
	str r4, [r0]
	ldr r1, _080C1218 @ =0x0000079C
	adds r0, r6, r1
	str r4, [r0]
	adds r2, #8
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	ldr r0, [sp, #0x18]
	str r4, [r0]
	strh r4, [r0, #4]
	ldr r1, [sp, #0x1c]
	str r4, [r1]
	strh r4, [r1, #4]
	ldr r2, [sp, #0x20]
	str r4, [r2]
	strh r4, [r2, #4]
	movs r1, #0xf8
	lsls r1, r1, #3
	adds r0, r6, r1
	str r4, [r0]
	ldr r2, _080C121C @ =0x000007C4
	adds r0, r6, r2
	str r4, [r0]
	adds r1, #8
	adds r0, r6, r1
	str r4, [r0]
	strh r4, [r0, #4]
	ldr r2, [sp, #0x24]
	str r4, [r2]
	strh r4, [r2, #4]
	ldr r0, [sp, #0x28]
	str r4, [r0]
	strh r4, [r0, #4]
	ldr r1, [sp, #0x2c]
	str r4, [r1]
	strh r4, [r1, #4]
	movs r2, #0xfd
	lsls r2, r2, #3
	adds r0, r6, r2
	str r4, [r0]
	ldr r1, _080C1220 @ =0x000007EC
	adds r0, r6, r1
	str r4, [r0]
	adds r2, #8
	adds r0, r6, r2
	str r4, [r0]
	strh r4, [r0, #4]
	ldr r0, [sp, #0x30]
	str r4, [r0]
	strh r4, [r0, #4]
	ldr r1, [sp, #0x34]
	str r4, [r1]
	strh r4, [r1, #4]
	ldr r2, [sp, #0x38]
	str r4, [r2]
	strh r4, [r2, #4]
	movs r1, #0x81
	lsls r1, r1, #4
	adds r0, r6, r1
	movs r1, #0
	bl sub_8008B54
	ldr r2, _080C1224 @ =0x00000814
	adds r0, r6, r2
	b _080C1228
	.align 2, 0
_080C11C0: .4byte gUnknown_080E8554
_080C11C4: .4byte 0x0000051C
_080C11C8: .4byte gUnknown_0873E5B0
_080C11CC: .4byte gUnknown_0873DE44
_080C11D0: .4byte 0x00000524
_080C11D4: .4byte gUnknown_087405A0
_080C11D8: .4byte gUnknown_0858BA28
_080C11DC: .4byte 0x0000052C
_080C11E0: .4byte gUnknown_0873D5FC
_080C11E4: .4byte gUnknown_08740908
_080C11E8: .4byte 0x00000534
_080C11EC: .4byte gUnknown_0871D51C
_080C11F0: .4byte gUnknown_0872BE64
_080C11F4: .4byte 0x0000053C
_080C11F8: .4byte gUnknown_0873D6D8
_080C11FC: .4byte gUnknown_080E5B80
_080C1200: .4byte 0x00000544
_080C1204: .4byte 0x0000061C
_080C1208: .4byte 0x00000808
_080C120C: .4byte 0x000006A4
_080C1210: .4byte 0x0000072C
_080C1214: .4byte 0x00000754
_080C1218: .4byte 0x0000079C
_080C121C: .4byte 0x000007C4
_080C1220: .4byte 0x000007EC
_080C1224: .4byte 0x00000814
_080C1228:
	movs r1, #1
	bl sub_8008B54
	ldr r1, _080C129C @ =0x00000818
	adds r0, r6, r1
	movs r1, #2
	bl sub_8008B54
	ldr r2, _080C12A0 @ =0x0000081C
	adds r0, r6, r2
	movs r1, #3
	bl sub_8008B54
	movs r1, #0x82
	lsls r1, r1, #4
	adds r0, r6, r1
	movs r1, #4
	bl sub_8008B54
	ldr r2, _080C12A4 @ =0x00000824
	adds r0, r6, r2
	str r4, [r0]
	str r4, [r0, #4]
	ldr r1, _080C12A8 @ =gUnknown_080E5B70
	str r1, [r0, #8]
	movs r1, #0x83
	lsls r1, r1, #4
	adds r0, r6, r1
	str r4, [r0]
	str r4, [r0, #4]
	ldr r1, _080C12AC @ =gUnknown_080E5B60
	str r1, [r0, #8]
	adds r2, #0x18
	adds r0, r6, r2
	bl sub_80E52A0
	ldr r1, _080C12B0 @ =0x00000974
	adds r0, r6, r1
	str r4, [r0]
	movs r2, #0x98
	lsls r2, r2, #4
	adds r1, r6, r2
	ldr r2, [sp, #0x14]
	ldr r0, [r2]
	str r0, [r1]
	ldrb r1, [r2, #4]
	ldr r2, _080C12B4 @ =0x00000988
	adds r0, r6, r2
	strb r1, [r0]
	adds r0, r6, #0
	add sp, #0x50
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080C129C: .4byte 0x00000818
_080C12A0: .4byte 0x0000081C
_080C12A4: .4byte 0x00000824
_080C12A8: .4byte gUnknown_080E5B70
_080C12AC: .4byte gUnknown_080E5B60
_080C12B0: .4byte 0x00000974
_080C12B4: .4byte 0x00000988

	thumb_func_start sub_80C12B8
sub_80C12B8: @ 0x080C12B8
	ldr r1, _080C12C0 @ =0x0000096A
	adds r0, r0, r1
	ldrb r0, [r0]
	bx lr
	.align 2, 0
_080C12C0: .4byte 0x0000096A

	thumb_func_start sub_80C12C4
sub_80C12C4: @ 0x080C12C4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	str r0, [sp, #0x1c]
	adds r7, r1, #0
	adds r0, r7, #0
	bl sub_80C14BC
	adds r0, r7, #0
	bl sub_8008918
	add r1, sp, #0xc
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	ldr r0, _080C1360 @ =0x00000544
	adds r4, r7, r0
	ldr r0, [r4]
	ldr r1, _080C1364 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl sub_800934C
	adds r0, r7, #0
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [r4]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
	adds r0, r7, #0
	bl sub_80C3B18
	adds r0, r7, #0
	bl sub_80C3C18
	adds r0, r7, #0
	bl sub_80C160C
	adds r0, r7, #0
	bl sub_80C16D4
	movs r1, #0x81
	lsls r1, r1, #4
	adds r0, r7, r1
	movs r1, #0x22
	bl sub_8008B6C
	ldr r1, _080C1368 @ =0x0000089C
	adds r0, r7, r1
	ldr r0, [r0]
	mov r1, sp
	adds r1, #0x10
	str r1, [sp, #0x24]
	adds r1, #4
	str r1, [sp, #0x28]
	cmp r0, #7
	beq _080C13CC
_080C1344:
	adds r0, r7, #0
	bl sub_80087C8
	ldr r1, _080C1368 @ =0x0000089C
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #6
	bhi _080C13C2
	lsls r0, r0, #2
	ldr r1, _080C136C @ =_080C1370
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080C1360: .4byte 0x00000544
_080C1364: .4byte 0x00000889
_080C1368: .4byte 0x0000089C
_080C136C: .4byte _080C1370
_080C1370: @ jump table
	.4byte _080C138C @ case 0
	.4byte _080C1394 @ case 1
	.4byte _080C139C @ case 2
	.4byte _080C13A4 @ case 3
	.4byte _080C13AC @ case 4
	.4byte _080C13B4 @ case 5
	.4byte _080C13BC @ case 6
_080C138C:
	adds r0, r7, #0
	bl sub_80C3D04
	b _080C13C2
_080C1394:
	adds r0, r7, #0
	bl sub_80C516C
	b _080C13C2
_080C139C:
	adds r0, r7, #0
	bl sub_80C5378
	b _080C13C2
_080C13A4:
	adds r0, r7, #0
	bl sub_80C5648
	b _080C13C2
_080C13AC:
	adds r0, r7, #0
	bl sub_80C5710
	b _080C13C2
_080C13B4:
	adds r0, r7, #0
	bl sub_80C5A6C
	b _080C13C2
_080C13BC:
	adds r0, r7, #0
	bl sub_80C608C
_080C13C2:
	ldr r1, _080C14A8 @ =0x0000089C
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #7
	bne _080C1344
_080C13CC:
	ldr r0, _080C14AC @ =0x00000544
	adds r4, r7, r0
	ldr r2, [r4]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _080C13FA
	ldr r1, _080C14B0 @ =0x00000889
	adds r0, r2, #0
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl sub_8009378
	adds r0, r7, #0
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [r4]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
_080C13FA:
	ldr r0, [r4]
	ldr r0, [r0]
	rsbs r2, r0, #0
	orrs r2, r0
	cmp r2, #0
	bge _080C146E
	ldr r1, _080C14B4 @ =0x0000051C
	adds r1, r7, r1
	str r1, [sp, #0x20]
	ldr r0, _080C14B8 @ =0x00000814
	adds r0, r0, r7
	mov sl, r0
_080C1412:
	adds r0, r7, #0
	bl sub_80087C8
	ldr r1, [sp, #0x20]
	ldr r1, [r1]
	mov sb, r1
	adds r0, r7, #0
	bl sub_80088DC
	mov r8, r0
	adds r0, r7, #0
	bl sub_8008920
	adds r6, r0, #0
	adds r0, r7, #0
	bl sub_8008918
	adds r5, r0, #0
	adds r0, r7, #0
	bl sub_8008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl sub_800894C
	str r4, [sp]
	str r0, [sp, #4]
	mov r0, sl
	str r0, [sp, #8]
	mov r0, sb
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl sub_8050D3C
	adds r0, r7, #0
	bl sub_80C2D54
	ldr r1, _080C14AC @ =0x00000544
	adds r0, r7, r1
	ldr r0, [r0]
	ldr r0, [r0]
	rsbs r2, r0, #0
	orrs r2, r0
	cmp r2, #0
	blt _080C1412
_080C146E:
	movs r0, #0
	str r0, [sp, #0x10]
	ldr r1, [sp, #0x24]
	str r1, [sp, #0x14]
	ldr r1, [sp, #0x28]
	str r0, [r1, #4]
	ldr r1, [sp, #0x24]
	str r0, [r1]
	ldr r1, [sp, #0x1c]
	str r0, [r1]
	ldr r1, [sp, #0x10]
	cmp r1, #0
	beq _080C1494
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080C1494:
	ldr r0, [sp, #0x1c]
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080C14A8: .4byte 0x0000089C
_080C14AC: .4byte 0x00000544
_080C14B0: .4byte 0x00000889
_080C14B4: .4byte 0x0000051C
_080C14B8: .4byte 0x00000814

	thumb_func_start sub_80C14BC
sub_80C14BC: @ 0x080C14BC
	push {lr}
	bl sub_8008724
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80C14C8
sub_80C14C8: @ 0x080C14C8
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r0, _080C15DC @ =0x0000083C
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #3
	bl sub_8007B54
	str r0, [r4, #4]
	ldr r0, _080C15E0 @ =0x00000844
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #6
	bl sub_8007B54
	str r0, [r4, #4]
	ldr r0, _080C15E4 @ =0x0000084C
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #3
	bl sub_8007B54
	str r0, [r4, #4]
	ldr r0, _080C15E8 @ =0x00000854
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007B54
	str r0, [r4, #4]
	ldr r0, _080C15EC @ =0x0000085C
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007B54
	str r0, [r4, #4]
	ldr r0, _080C15F0 @ =0x00000864
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #5
	bl sub_8007B54
	str r0, [r4, #4]
	ldr r0, _080C15F4 @ =0x0000086C
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007B54
	str r0, [r4, #4]
	ldr r0, _080C15F8 @ =0x0000087C
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #3
	bl sub_8007B54
	str r0, [r4, #4]
	ldr r0, _080C15FC @ =0x00000884
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007B54
	str r0, [r4, #4]
	ldr r0, _080C1600 @ =0x00000874
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #6
	bl sub_8007B54
	str r0, [r4, #4]
	ldr r0, _080C1604 @ =0x0000088C
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #5
	bl sub_8007B54
	str r0, [r4, #4]
	ldr r0, _080C1608 @ =0x00000894
	adds r5, r5, r0
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007C28
	adds r0, r5, #0
	movs r1, #3
	bl sub_8007B54
	str r0, [r5, #4]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080C15DC: .4byte 0x0000083C
_080C15E0: .4byte 0x00000844
_080C15E4: .4byte 0x0000084C
_080C15E8: .4byte 0x00000854
_080C15EC: .4byte 0x0000085C
_080C15F0: .4byte 0x00000864
_080C15F4: .4byte 0x0000086C
_080C15F8: .4byte 0x0000087C
_080C15FC: .4byte 0x00000884
_080C1600: .4byte 0x00000874
_080C1604: .4byte 0x0000088C
_080C1608: .4byte 0x00000894

	thumb_func_start sub_80C160C
sub_80C160C: @ 0x080C160C
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #4
	mov sb, r0
	ldr r1, _080C16AC @ =0x06007FE0
	movs r0, #0
	movs r2, #0x20
	bl sub_8008EB8
	movs r5, #1
	rsbs r5, r5, #0
	ldr r0, _080C16B0 @ =0x0600F000
	mov r8, r0
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r5, #0
	mov r1, r8
	adds r2, r6, #0
	bl sub_8008EB8
	ldr r4, _080C16B4 @ =0x0600F800
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl sub_8008EB8
	ldr r0, _080C16B8 @ =gUnknown_0873F3C8
	adds r1, r4, #0
	bl sub_80D102C
	ldr r0, _080C16BC @ =gUnknown_0873F5D4
	mov r1, r8
	bl sub_80D102C
	ldr r0, _080C16C0 @ =gUnknown_0873F6AC
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl sub_80D102C
	ldr r0, _080C16C4 @ =gUnknown_087400E4
	ldr r1, _080C16C8 @ =0x05000020
	movs r2, #0x80
	lsls r2, r2, #2
	bl sub_8008E64
	mov r0, sb
	bl sub_8008918
	mov r2, sp
	movs r3, #0xb2
	lsls r3, r3, #5
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0]
	mov r0, sb
	bl sub_8008918
	mov r2, sp
	ldr r3, _080C16CC @ =0x00001E41
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xa]
	mov r0, sb
	bl sub_8008918
	mov r2, sp
	ldr r3, _080C16D0 @ =0x00001F42
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xc]
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080C16AC: .4byte 0x06007FE0
_080C16B0: .4byte 0x0600F000
_080C16B4: .4byte 0x0600F800
_080C16B8: .4byte gUnknown_0873F3C8
_080C16BC: .4byte gUnknown_0873F5D4
_080C16C0: .4byte gUnknown_0873F6AC
_080C16C4: .4byte gUnknown_087400E4
_080C16C8: .4byte 0x05000020
_080C16CC: .4byte 0x00001E41
_080C16D0: .4byte 0x00001F42

	thumb_func_start sub_80C16D4
sub_80C16D4: @ 0x080C16D4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xd4
	mov sb, r0
	ldr r0, _080C17EC @ =gUnknown_080F9F78
	ldr r0, [r0]
	ldr r1, _080C17F0 @ =0x05000360
	movs r2, #0x20
	bl sub_8008E64
	mov r0, sb
	bl sub_80C14C8
	ldr r1, _080C17F4 @ =0x0500024A
	ldr r0, _080C17F8 @ =0x05000362
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _080C17FC @ =0x05000364
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	movs r0, #0x1f
	strh r0, [r1]
	adds r1, #2
	ldr r2, _080C1800 @ =0x0000675E
	adds r0, r2, #0
	strh r0, [r1]
	movs r1, #0xa9
	lsls r1, r1, #3
	add r1, sb
	movs r0, #0
	movs r2, #8
	bl sub_8008EB8
	ldr r0, _080C1804 @ =0x0000097B
	add r0, sb
	ldrb r0, [r0]
	add r1, sp, #0x10
	movs r2, #0
	bl sub_804EC84
	ldr r1, _080C1808 @ =0x05000240
	movs r3, #0xf8
	lsls r3, r3, #2
	adds r0, r3, #0
	strh r0, [r1]
	adds r1, #2
	ldr r4, _080C180C @ =0x00000303
	adds r0, r4, #0
	strh r0, [r1]
	adds r1, #2
	ldr r5, _080C1810 @ =0x00004F15
	adds r0, r5, #0
	strh r0, [r1]
	adds r1, #2
	ldr r6, _080C1814 @ =0x00007FFF
	adds r0, r6, #0
	strh r0, [r1]
	adds r1, #2
	ldr r7, _080C1818 @ =0x000052F8
	adds r0, r7, #0
	strh r0, [r1]
	add r0, sp, #0x44
	movs r5, #4
	movs r6, #2
	movs r1, #0
	mov r8, r1
	strh r5, [r0]
	strh r6, [r0, #2]
	ldr r0, [sp, #0x44]
	mov r4, sb
	adds r4, #0xc
	adds r1, r4, #0
	movs r2, #0
	bl sub_804E7A0
	movs r2, #1
	mov sl, r2
	add r0, sp, #0x48
	strh r5, [r0]
	strh r6, [r0, #2]
	ldr r0, [sp, #0x48]
	add r3, sp, #0x10
	str r3, [sp]
	mov r5, r8
	str r5, [sp, #4]
	str r2, [sp, #8]
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_804E958
	mov r0, sb
	bl sub_8008910
	adds r5, r0, #0
	ldr r0, _080C181C @ =0x0000083C
	add r0, sb
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r2, r0, #0
	movs r3, #0x80
	lsls r3, r3, #1
	lsls r2, r2, #5
	ldr r6, _080C1820 @ =0x06010000
	adds r2, r2, r6
	add r0, sp, #0x14
	adds r1, r4, #0
	bl sub_8008F0C
	add r7, sp, #0x14
	mov r8, r7
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080C1824
	cmp r1, #0
	beq _080C17D6
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C17D6:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	mov r5, sp
	adds r5, #0x54
	str r5, [sp, #0xc0]
	mov r6, sp
	adds r6, #0x24
	str r6, [sp, #0xc8]
	b _080C18F4
	.align 2, 0
_080C17EC: .4byte gUnknown_080F9F78
_080C17F0: .4byte 0x05000360
_080C17F4: .4byte 0x0500024A
_080C17F8: .4byte 0x05000362
_080C17FC: .4byte 0x05000364
_080C1800: .4byte 0x0000675E
_080C1804: .4byte 0x0000097B
_080C1808: .4byte 0x05000240
_080C180C: .4byte 0x00000303
_080C1810: .4byte 0x00004F15
_080C1814: .4byte 0x00007FFF
_080C1818: .4byte 0x000052F8
_080C181C: .4byte 0x0000083C
_080C1820: .4byte 0x06010000
_080C1824:
	str r1, [sp, #0xcc]
	mov r7, sl
	str r7, [sp, #0x50]
	ldr r0, [r5]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x4c]
	add r1, sp, #0x50
	add r0, sp, #0x4c
	cmp r4, #1
	bhs _080C183C
	adds r0, r1, #0
_080C183C:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C185A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sl, r4
	cmp r0, #0
	bne _080C185E
	mov r0, sl
	bl sub_80D3BC0
	b _080C185E
_080C185A:
	movs r0, #0
	mov sl, r0
_080C185E:
	adds r6, r0, #0
	str r6, [sp, #0xd0]
	ldr r2, [r5]
	adds r3, r6, #0
	mov r4, sp
	adds r4, #0x54
	str r4, [sp, #0xc0]
	mov r6, sp
	adds r6, #0x24
	str r6, [sp, #0xc8]
	ldr r7, [sp, #0xcc]
	cmp r2, r7
	beq _080C1892
_080C1878:
	cmp r3, #0
	beq _080C1888
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C1888:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xcc]
	cmp r2, r0
	bne _080C1878
_080C1892:
	adds r6, r3, #0
	ldr r0, [sp, #0x50]
	cmp r0, #1
	bne _080C18AE
	cmp r6, #0
	beq _080C18AA
	adds r0, r6, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C18AA:
	adds r6, #0x10
	b _080C18D0
_080C18AE:
	adds r3, r0, #0
	adds r2, r6, #0
	cmp r3, #0
	beq _080C18CE
_080C18B6:
	cmp r2, #0
	beq _080C18C6
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C18C6:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C18B6
_080C18CE:
	adds r6, r2, #0
_080C18D0:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C18E0
_080C18DA:
	adds r1, #0x10
	cmp r1, r2
	bne _080C18DA
_080C18E0:
	cmp r0, #0
	beq _080C18E8
	bl sub_80D0260
_080C18E8:
	ldr r0, [sp, #0xd0]
	add r0, sl
	ldr r7, [sp, #0xd0]
	str r7, [r5]
	str r6, [r5, #4]
	str r0, [r5, #0xc]
_080C18F4:
	movs r4, #0xa9
	lsls r4, r4, #3
	add r4, sb
	ldr r0, _080C1A3C @ =0x0000083C
	add r0, sb
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r3, r0, #0
	movs r0, #2
	str r0, [sp]
	movs r5, #0
	str r5, [sp, #4]
	str r0, [sp, #8]
	movs r0, #1
	mov r8, r0
	str r0, [sp, #0xc]
	ldr r0, [sp, #0xc0]
	movs r1, #0xd0
	movs r2, #8
	bl sub_804EA94
	ldr r0, [sp, #0x54]
	ldr r1, [sp, #0x58]
	str r0, [r4]
	str r1, [r4, #4]
	movs r0, #0x14
	bl sub_80005D4
	movs r1, #0xa4
	lsls r1, r1, #3
	add r1, sb
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r4, r0, #0
	movs r7, #0xaa
	lsls r7, r7, #3
	add r7, sb
	ldr r0, [r7]
	cmp r4, r0
	beq _080C1952
	bl sub_8000608
_080C1952:
	str r4, [r7]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r0, #0
	strh r5, [r4]
	strh r5, [r4, #2]
	strh r5, [r4, #4]
	strh r5, [r4, #6]
	strh r5, [r4, #8]
	str r5, [r4, #0xc]
	strb r0, [r4, #0x10]
	strb r0, [r4, #0x11]
	str r5, [r4, #0x14]
	strb r0, [r4, #0x18]
	ldr r6, _080C1A40 @ =0x00000554
	add r6, sb
	ldr r0, [r6]
	cmp r4, r0
	beq _080C1980
	bl sub_8000608
_080C1980:
	str r4, [r6]
	ldr r0, [r7]
	movs r1, #0
	bl sub_805E860
	ldr r0, [r6]
	movs r1, #0x40
	strh r1, [r0]
	ldr r0, [r6]
	strh r1, [r0, #2]
	ldr r4, [r6]
	ldr r5, _080C1A44 @ =0x00000844
	add r5, sb
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	strh r0, [r4, #6]
	ldr r1, [r6]
	movs r0, #3
	strh r0, [r1, #4]
	ldr r0, [r6]
	mov r1, r8
	strb r1, [r0, #0x18]
	movs r4, #0xab
	lsls r4, r4, #3
	add r4, sb
	ldr r0, [r7]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x24
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	ldr r0, [sp, #0xc8]
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	ldr r0, [sp, #0xc8]
	ldm r0!, {r2, r3, r6}
	stm r4!, {r2, r3, r6}
	ldm r0!, {r1, r2, r7}
	stm r4!, {r1, r2, r7}
	ldm r0!, {r3, r6}
	stm r4!, {r3, r6}
	mov r0, sb
	bl sub_8008910
	adds r6, r0, #0
	movs r4, #0xac
	lsls r4, r4, #3
	add r4, sb
	ldr r7, [r4]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080C1A0A
	ldrh r3, [r4, #4]
_080C1A0A:
	lsls r2, r2, #5
	ldr r0, _080C1A48 @ =0x06010000
	adds r2, r2, r0
	add r0, sp, #0x14
	adds r1, r7, #0
	bl sub_8008F0C
	add r1, sp, #0x14
	mov sl, r1
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C1A4C
	cmp r1, #0
	beq _080C1A34
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C1A34:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C1B0E
	.align 2, 0
_080C1A3C: .4byte 0x0000083C
_080C1A40: .4byte 0x00000554
_080C1A44: .4byte 0x00000844
_080C1A48: .4byte 0x06010000
_080C1A4C:
	str r1, [sp, #0xcc]
	mov r5, r8
	str r5, [sp, #0x60]
	ldr r0, [r6]
	adds r7, r1, #0
	subs r0, r7, r0
	asrs r4, r0, #4
	str r4, [sp, #0x5c]
	add r1, sp, #0x60
	add r0, sp, #0x5c
	cmp r4, #1
	bhs _080C1A66
	adds r0, r1, #0
_080C1A66:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C1A84
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C1A88
	mov r0, r8
	bl sub_80D3BC0
	b _080C1A88
_080C1A84:
	movs r0, #0
	mov r8, r0
_080C1A88:
	adds r5, r0, #0
	str r5, [sp, #0xd0]
	ldr r2, [r6]
	adds r3, r5, #0
	b _080C1AA6
_080C1A92:
	cmp r3, #0
	beq _080C1AA2
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C1AA2:
	adds r2, #0x10
	adds r3, #0x10
_080C1AA6:
	ldr r0, [sp, #0xcc]
	cmp r2, r0
	bne _080C1A92
	adds r5, r3, #0
	ldr r0, [sp, #0x60]
	cmp r0, #1
	bne _080C1AC8
	cmp r5, #0
	beq _080C1AC4
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C1AC4:
	adds r5, #0x10
	b _080C1AEA
_080C1AC8:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C1AE8
_080C1AD0:
	cmp r2, #0
	beq _080C1AE0
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C1AE0:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C1AD0
_080C1AE8:
	adds r5, r2, #0
_080C1AEA:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C1AFA
_080C1AF4:
	adds r1, #0x10
	cmp r1, r2
	bne _080C1AF4
_080C1AFA:
	cmp r0, #0
	beq _080C1B02
	bl sub_80D0260
_080C1B02:
	ldr r0, [sp, #0xd0]
	add r0, r8
	ldr r7, [sp, #0xd0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C1B0E:
	mov r0, sb
	bl sub_8008910
	adds r4, r0, #0
	movs r2, #0xad
	lsls r2, r2, #3
	add r2, sb
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080C1B28
	ldrh r3, [r2, #4]
_080C1B28:
	adds r6, r4, #0
	add r0, sp, #0x14
	ldr r2, _080C1B58 @ =0x05000260
	bl sub_8008F0C
	add r0, sp, #0x14
	mov sl, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C1B5C
	cmp r1, #0
	beq _080C1B4E
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C1B4E:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C1C22
	.align 2, 0
_080C1B58: .4byte 0x05000260
_080C1B5C:
	str r1, [sp, #0xcc]
	movs r0, #1
	str r0, [sp, #0x68]
	ldr r0, [r6]
	adds r5, r1, #0
	subs r0, r5, r0
	asrs r4, r0, #4
	str r4, [sp, #0x64]
	add r1, sp, #0x68
	add r0, sp, #0x64
	cmp r4, #1
	bhs _080C1B76
	adds r0, r1, #0
_080C1B76:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C1B94
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C1B98
	mov r0, r8
	bl sub_80D3BC0
	b _080C1B98
_080C1B94:
	movs r0, #0
	mov r8, r0
_080C1B98:
	adds r5, r0, #0
	str r5, [sp, #0xd0]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0xcc]
	cmp r2, r7
	beq _080C1BC0
_080C1BA6:
	cmp r3, #0
	beq _080C1BB6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C1BB6:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xcc]
	cmp r2, r0
	bne _080C1BA6
_080C1BC0:
	adds r5, r3, #0
	ldr r0, [sp, #0x68]
	cmp r0, #1
	bne _080C1BDC
	cmp r5, #0
	beq _080C1BD8
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C1BD8:
	adds r5, #0x10
	b _080C1BFE
_080C1BDC:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C1BFC
_080C1BE4:
	cmp r2, #0
	beq _080C1BF4
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C1BF4:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C1BE4
_080C1BFC:
	adds r5, r2, #0
_080C1BFE:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C1C0E
_080C1C08:
	adds r1, #0x10
	cmp r1, r2
	bne _080C1C08
_080C1C0E:
	cmp r0, #0
	beq _080C1C16
	bl sub_80D0260
_080C1C16:
	ldr r0, [sp, #0xd0]
	add r0, r8
	ldr r7, [sp, #0xd0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C1C22:
	movs r0, #0x14
	bl sub_80005D4
	movs r1, #0xa5
	lsls r1, r1, #3
	add r1, sb
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r4, r0, #0
	movs r7, #0xaf
	lsls r7, r7, #3
	add r7, sb
	ldr r0, [r7]
	cmp r4, r0
	beq _080C1C4C
	bl sub_8000608
_080C1C4C:
	str r4, [r7]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r0, #0
	movs r5, #0
	strh r5, [r4]
	strh r5, [r4, #2]
	strh r5, [r4, #4]
	strh r5, [r4, #6]
	strh r5, [r4, #8]
	str r5, [r4, #0xc]
	strb r0, [r4, #0x10]
	strb r0, [r4, #0x11]
	str r5, [r4, #0x14]
	strb r0, [r4, #0x18]
	ldr r6, _080C1D44 @ =0x0000057C
	add r6, sb
	ldr r0, [r6]
	cmp r4, r0
	beq _080C1C7C
	bl sub_8000608
_080C1C7C:
	str r4, [r6]
	ldr r0, [r7]
	movs r1, #0
	bl sub_805E860
	ldr r1, [r6]
	movs r0, #0xc0
	strh r0, [r1]
	ldr r0, [r6]
	strh r5, [r0, #2]
	ldr r4, [r6]
	ldr r5, _080C1D48 @ =0x00000864
	add r5, sb
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	strh r0, [r4, #6]
	ldr r1, [r6]
	movs r0, #7
	strh r0, [r1, #4]
	ldr r0, [r6]
	movs r1, #1
	movs r2, #1
	mov r8, r2
	mov r3, r8
	strh r3, [r0, #8]
	ldr r0, [r6]
	strb r1, [r0, #0x18]
	movs r4, #0xb0
	lsls r4, r4, #3
	add r4, sb
	ldr r0, [r7]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x14
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r0, sp, #0x14
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	add r0, sp, #0x14
	ldm r0!, {r1, r6, r7}
	stm r4!, {r1, r6, r7}
	ldm r0!, {r2, r3, r6}
	stm r4!, {r2, r3, r6}
	ldm r0!, {r1, r7}
	stm r4!, {r1, r7}
	mov r0, sb
	bl sub_8008910
	adds r6, r0, #0
	movs r4, #0xb1
	lsls r4, r4, #3
	add r4, sb
	ldr r7, [r4]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080C1D10
	ldrh r3, [r4, #4]
_080C1D10:
	lsls r2, r2, #5
	ldr r4, _080C1D4C @ =0x06010000
	adds r2, r2, r4
	add r0, sp, #0x14
	adds r1, r7, #0
	bl sub_8008F0C
	add r5, sp, #0x14
	mov sl, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C1D50
	cmp r1, #0
	beq _080C1D3A
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C1D3A:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C1E16
	.align 2, 0
_080C1D44: .4byte 0x0000057C
_080C1D48: .4byte 0x00000864
_080C1D4C: .4byte 0x06010000
_080C1D50:
	str r1, [sp, #0xcc]
	mov r4, r8
	str r4, [sp, #0x70]
	ldr r0, [r6]
	adds r5, r1, #0
	subs r0, r5, r0
	asrs r4, r0, #4
	str r4, [sp, #0x6c]
	add r1, sp, #0x70
	add r0, sp, #0x6c
	cmp r4, #1
	bhs _080C1D6A
	adds r0, r1, #0
_080C1D6A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C1D88
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C1D8C
	mov r0, r8
	bl sub_80D3BC0
	b _080C1D8C
_080C1D88:
	movs r0, #0
	mov r8, r0
_080C1D8C:
	adds r5, r0, #0
	str r5, [sp, #0xd0]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0xcc]
	cmp r2, r7
	beq _080C1DB4
_080C1D9A:
	cmp r3, #0
	beq _080C1DAA
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C1DAA:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xcc]
	cmp r2, r0
	bne _080C1D9A
_080C1DB4:
	adds r5, r3, #0
	ldr r0, [sp, #0x70]
	cmp r0, #1
	bne _080C1DD0
	cmp r5, #0
	beq _080C1DCC
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C1DCC:
	adds r5, #0x10
	b _080C1DF2
_080C1DD0:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C1DF0
_080C1DD8:
	cmp r2, #0
	beq _080C1DE8
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C1DE8:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C1DD8
_080C1DF0:
	adds r5, r2, #0
_080C1DF2:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C1E02
_080C1DFC:
	adds r1, #0x10
	cmp r1, r2
	bne _080C1DFC
_080C1E02:
	cmp r0, #0
	beq _080C1E0A
	bl sub_80D0260
_080C1E0A:
	ldr r0, [sp, #0xd0]
	add r0, r8
	ldr r7, [sp, #0xd0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C1E16:
	mov r0, sb
	bl sub_8008910
	adds r4, r0, #0
	movs r2, #0xb2
	lsls r2, r2, #3
	add r2, sb
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080C1E30
	ldrh r3, [r2, #4]
_080C1E30:
	adds r6, r4, #0
	add r0, sp, #0x14
	ldr r2, _080C1E60 @ =0x050002E0
	bl sub_8008F0C
	add r0, sp, #0x14
	mov sl, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C1E64
	cmp r1, #0
	beq _080C1E56
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C1E56:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C1F2A
	.align 2, 0
_080C1E60: .4byte 0x050002E0
_080C1E64:
	str r1, [sp, #0xcc]
	movs r0, #1
	str r0, [sp, #0x78]
	ldr r0, [r6]
	adds r5, r1, #0
	subs r0, r5, r0
	asrs r4, r0, #4
	str r4, [sp, #0x74]
	add r1, sp, #0x78
	add r0, sp, #0x74
	cmp r4, #1
	bhs _080C1E7E
	adds r0, r1, #0
_080C1E7E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C1E9C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C1EA0
	mov r0, r8
	bl sub_80D3BC0
	b _080C1EA0
_080C1E9C:
	movs r0, #0
	mov r8, r0
_080C1EA0:
	adds r5, r0, #0
	str r5, [sp, #0xd0]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0xcc]
	cmp r2, r7
	beq _080C1EC8
_080C1EAE:
	cmp r3, #0
	beq _080C1EBE
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C1EBE:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xcc]
	cmp r2, r0
	bne _080C1EAE
_080C1EC8:
	adds r5, r3, #0
	ldr r0, [sp, #0x78]
	cmp r0, #1
	bne _080C1EE4
	cmp r5, #0
	beq _080C1EE0
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C1EE0:
	adds r5, #0x10
	b _080C1F06
_080C1EE4:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C1F04
_080C1EEC:
	cmp r2, #0
	beq _080C1EFC
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C1EFC:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C1EEC
_080C1F04:
	adds r5, r2, #0
_080C1F06:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C1F16
_080C1F10:
	adds r1, #0x10
	cmp r1, r2
	bne _080C1F10
_080C1F16:
	cmp r0, #0
	beq _080C1F1E
	bl sub_80D0260
_080C1F1E:
	ldr r0, [sp, #0xd0]
	add r0, r8
	ldr r7, [sp, #0xd0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C1F2A:
	movs r0, #0x14
	bl sub_80005D4
	movs r1, #0xa7
	lsls r1, r1, #3
	add r1, sb
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r4, r0, #0
	movs r7, #0xe5
	lsls r7, r7, #3
	add r7, sb
	ldr r0, [r7]
	cmp r4, r0
	beq _080C1F54
	bl sub_8000608
_080C1F54:
	str r4, [r7]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r4]
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	strh r0, [r4, #8]
	str r0, [r4, #0xc]
	strb r1, [r4, #0x10]
	strb r1, [r4, #0x11]
	str r0, [r4, #0x14]
	strb r1, [r4, #0x18]
	ldr r6, _080C203C @ =0x0000072C
	add r6, sb
	ldr r0, [r6]
	cmp r4, r0
	beq _080C1F84
	bl sub_8000608
_080C1F84:
	str r4, [r6]
	ldr r0, [r7]
	movs r1, #6
	bl sub_805E860
	ldr r4, [r6]
	ldr r5, _080C2040 @ =0x0000086C
	add r5, sb
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	strh r0, [r4, #6]
	ldr r1, [r6]
	movs r0, #8
	strh r0, [r1, #4]
	ldr r0, [r6]
	movs r1, #1
	mov r8, r1
	mov r2, r8
	strb r2, [r0, #0x18]
	movs r4, #0xe6
	lsls r4, r4, #3
	add r4, sb
	ldr r0, [r7]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x14
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r0, sp, #0x14
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	add r0, sp, #0x14
	ldm r0!, {r3, r6, r7}
	stm r4!, {r3, r6, r7}
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r6, r7}
	stm r4!, {r6, r7}
	mov r0, sb
	bl sub_8008910
	adds r6, r0, #0
	movs r4, #0xe7
	lsls r4, r4, #3
	add r4, sb
	ldr r7, [r4]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080C2008
	ldrh r3, [r4, #4]
_080C2008:
	lsls r2, r2, #5
	ldr r0, _080C2044 @ =0x06010000
	adds r2, r2, r0
	add r0, sp, #0x14
	adds r1, r7, #0
	bl sub_8008F0C
	add r1, sp, #0x14
	mov sl, r1
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C2048
	cmp r1, #0
	beq _080C2032
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C2032:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C210A
	.align 2, 0
_080C203C: .4byte 0x0000072C
_080C2040: .4byte 0x0000086C
_080C2044: .4byte 0x06010000
_080C2048:
	str r1, [sp, #0xcc]
	mov r5, r8
	str r5, [sp, #0x80]
	ldr r0, [r6]
	adds r7, r1, #0
	subs r0, r7, r0
	asrs r4, r0, #4
	str r4, [sp, #0x7c]
	add r1, sp, #0x80
	add r0, sp, #0x7c
	cmp r4, #1
	bhs _080C2062
	adds r0, r1, #0
_080C2062:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C2080
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C2084
	mov r0, r8
	bl sub_80D3BC0
	b _080C2084
_080C2080:
	movs r0, #0
	mov r8, r0
_080C2084:
	adds r5, r0, #0
	str r5, [sp, #0xd0]
	ldr r2, [r6]
	adds r3, r5, #0
	b _080C20A2
_080C208E:
	cmp r3, #0
	beq _080C209E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C209E:
	adds r2, #0x10
	adds r3, #0x10
_080C20A2:
	ldr r0, [sp, #0xcc]
	cmp r2, r0
	bne _080C208E
	adds r5, r3, #0
	ldr r0, [sp, #0x80]
	cmp r0, #1
	bne _080C20C4
	cmp r5, #0
	beq _080C20C0
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C20C0:
	adds r5, #0x10
	b _080C20E6
_080C20C4:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C20E4
_080C20CC:
	cmp r2, #0
	beq _080C20DC
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C20DC:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C20CC
_080C20E4:
	adds r5, r2, #0
_080C20E6:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C20F6
_080C20F0:
	adds r1, #0x10
	cmp r1, r2
	bne _080C20F0
_080C20F6:
	cmp r0, #0
	beq _080C20FE
	bl sub_80D0260
_080C20FE:
	ldr r0, [sp, #0xd0]
	add r0, r8
	ldr r7, [sp, #0xd0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C210A:
	mov r0, sb
	bl sub_8008910
	adds r4, r0, #0
	movs r2, #0xe8
	lsls r2, r2, #3
	add r2, sb
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080C2124
	ldrh r3, [r2, #4]
_080C2124:
	adds r6, r4, #0
	add r0, sp, #0x14
	ldr r2, _080C2154 @ =0x05000300
	bl sub_8008F0C
	add r0, sp, #0x14
	mov sl, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C2158
	cmp r1, #0
	beq _080C214A
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C214A:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C221E
	.align 2, 0
_080C2154: .4byte 0x05000300
_080C2158:
	str r1, [sp, #0xcc]
	movs r0, #1
	str r0, [sp, #0x88]
	ldr r0, [r6]
	adds r5, r1, #0
	subs r0, r5, r0
	asrs r4, r0, #4
	str r4, [sp, #0x84]
	add r1, sp, #0x88
	add r0, sp, #0x84
	cmp r4, #1
	bhs _080C2172
	adds r0, r1, #0
_080C2172:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C2190
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C2194
	mov r0, r8
	bl sub_80D3BC0
	b _080C2194
_080C2190:
	movs r0, #0
	mov r8, r0
_080C2194:
	adds r5, r0, #0
	str r5, [sp, #0xd0]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0xcc]
	cmp r2, r7
	beq _080C21BC
_080C21A2:
	cmp r3, #0
	beq _080C21B2
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C21B2:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xcc]
	cmp r2, r0
	bne _080C21A2
_080C21BC:
	adds r5, r3, #0
	ldr r0, [sp, #0x88]
	cmp r0, #1
	bne _080C21D8
	cmp r5, #0
	beq _080C21D4
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C21D4:
	adds r5, #0x10
	b _080C21FA
_080C21D8:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C21F8
_080C21E0:
	cmp r2, #0
	beq _080C21F0
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C21F0:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C21E0
_080C21F8:
	adds r5, r2, #0
_080C21FA:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C220A
_080C2204:
	adds r1, #0x10
	cmp r1, r2
	bne _080C2204
_080C220A:
	cmp r0, #0
	beq _080C2212
	bl sub_80D0260
_080C2212:
	ldr r0, [sp, #0xd0]
	add r0, r8
	ldr r7, [sp, #0xd0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C221E:
	movs r0, #0x14
	bl sub_80005D4
	ldr r7, _080C23B8 @ =0x0000052C
	add r7, sb
	ldr r1, [r7]
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	adds r5, r0, #0
	movs r4, #0xb4
	lsls r4, r4, #3
	add r4, sb
	ldr r0, [r4]
	cmp r5, r0
	beq _080C2246
	bl sub_8000608
_080C2246:
	str r5, [r4]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r0, #0
	mov r8, r0
	movs r6, #0
	strh r6, [r4]
	strh r6, [r4, #2]
	strh r6, [r4, #4]
	strh r6, [r4, #6]
	strh r6, [r4, #8]
	str r6, [r4, #0xc]
	mov r1, r8
	strb r1, [r4, #0x10]
	strb r1, [r4, #0x11]
	str r6, [r4, #0x14]
	strb r1, [r4, #0x18]
	ldr r5, _080C23BC @ =0x000005A4
	add r5, sb
	ldr r0, [r5]
	cmp r4, r0
	beq _080C227A
	bl sub_8000608
_080C227A:
	str r4, [r5]
	ldr r0, _080C23C0 @ =0x000008B4
	add r0, sb
	ldrb r0, [r0]
	strh r0, [r4]
	ldr r0, _080C23C4 @ =0x000008B5
	add r0, sb
	ldrb r0, [r0]
	strh r0, [r4, #2]
	ldr r0, _080C23C8 @ =0x0000087C
	add r0, sb
	ldr r1, [r0, #4]
	bl sub_8007D4C
	strh r0, [r4, #6]
	ldr r1, [r5]
	movs r0, #0xc
	strh r0, [r1, #4]
	ldr r0, [r5]
	movs r2, #1
	mov sl, r2
	strh r2, [r0, #8]
	ldr r0, [r5]
	mov r3, sl
	strb r3, [r0, #0x18]
	movs r0, #0x14
	bl sub_80005D4
	ldr r1, [r7]
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	adds r4, r0, #0
	movs r7, #0xb9
	lsls r7, r7, #3
	add r7, sb
	ldr r0, [r7]
	cmp r4, r0
	beq _080C22D0
	bl sub_8000608
_080C22D0:
	str r4, [r7]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	strh r6, [r4]
	strh r6, [r4, #2]
	strh r6, [r4, #4]
	strh r6, [r4, #6]
	strh r6, [r4, #8]
	str r6, [r4, #0xc]
	mov r5, r8
	strb r5, [r4, #0x10]
	strb r5, [r4, #0x11]
	str r6, [r4, #0x14]
	strb r5, [r4, #0x18]
	ldr r6, _080C23CC @ =0x000005CC
	add r6, sb
	ldr r0, [r6]
	cmp r4, r0
	beq _080C22FE
	bl sub_8000608
_080C22FE:
	str r4, [r6]
	ldr r0, [r7]
	ldr r1, _080C23D0 @ =0x0000091A
	bl sub_805E860
	ldr r4, [r6]
	ldr r5, _080C23D4 @ =0x00000884
	add r5, sb
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	strh r0, [r4, #6]
	ldr r1, [r6]
	movs r0, #0xa
	strh r0, [r1, #4]
	ldr r0, [r6]
	movs r1, #1
	strh r1, [r0, #8]
	ldr r0, [r6]
	mov r2, sl
	strb r2, [r0, #0x18]
	movs r4, #0xba
	lsls r4, r4, #3
	add r4, sb
	ldr r0, [r7]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x14
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r0, sp, #0x14
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	add r0, sp, #0x14
	ldm r0!, {r3, r6, r7}
	stm r4!, {r3, r6, r7}
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r6, r7}
	stm r4!, {r6, r7}
	mov r0, sb
	bl sub_8008910
	adds r6, r0, #0
	movs r4, #0xbb
	lsls r4, r4, #3
	add r4, sb
	ldr r7, [r4]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080C2384
	ldrh r3, [r4, #4]
_080C2384:
	lsls r2, r2, #5
	ldr r0, _080C23D8 @ =0x06010000
	adds r2, r2, r0
	add r0, sp, #0x14
	adds r1, r7, #0
	bl sub_8008F0C
	add r1, sp, #0x14
	mov sl, r1
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C23DC
	cmp r1, #0
	beq _080C23AE
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C23AE:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C24A0
	.align 2, 0
_080C23B8: .4byte 0x0000052C
_080C23BC: .4byte 0x000005A4
_080C23C0: .4byte 0x000008B4
_080C23C4: .4byte 0x000008B5
_080C23C8: .4byte 0x0000087C
_080C23CC: .4byte 0x000005CC
_080C23D0: .4byte 0x0000091A
_080C23D4: .4byte 0x00000884
_080C23D8: .4byte 0x06010000
_080C23DC:
	str r1, [sp, #0xcc]
	add r0, sp, #0x90
	movs r5, #1
	str r5, [r0]
	ldr r1, [r6]
	ldr r7, [sp, #0xcc]
	subs r1, r7, r1
	asrs r4, r1, #4
	str r4, [sp, #0x8c]
	ldr r1, [r0]
	add r2, sp, #0x8c
	cmp r4, r1
	bhs _080C23F8
	adds r2, r0, #0
_080C23F8:
	ldr r0, [r2]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C2416
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C241A
	mov r0, r8
	bl sub_80D3BC0
	b _080C241A
_080C2416:
	movs r0, #0
	mov r8, r0
_080C241A:
	adds r5, r0, #0
	str r5, [sp, #0xd0]
	ldr r2, [r6]
	adds r3, r5, #0
	b _080C2438
_080C2424:
	cmp r3, #0
	beq _080C2434
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C2434:
	adds r2, #0x10
	adds r3, #0x10
_080C2438:
	ldr r0, [sp, #0xcc]
	cmp r2, r0
	bne _080C2424
	adds r5, r3, #0
	ldr r0, [sp, #0x90]
	cmp r0, #1
	bne _080C245A
	cmp r5, #0
	beq _080C2456
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C2456:
	adds r5, #0x10
	b _080C247C
_080C245A:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C247A
_080C2462:
	cmp r2, #0
	beq _080C2472
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C2472:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C2462
_080C247A:
	adds r5, r2, #0
_080C247C:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C248C
_080C2486:
	adds r1, #0x10
	cmp r1, r2
	bne _080C2486
_080C248C:
	cmp r0, #0
	beq _080C2494
	bl sub_80D0260
_080C2494:
	ldr r0, [sp, #0xd0]
	add r0, r8
	ldr r7, [sp, #0xd0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C24A0:
	mov r0, sb
	bl sub_8008910
	adds r4, r0, #0
	movs r2, #0xbc
	lsls r2, r2, #3
	add r2, sb
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080C24BA
	ldrh r3, [r2, #4]
_080C24BA:
	adds r6, r4, #0
	add r0, sp, #0x14
	ldr r2, _080C24E8 @ =0x05000340
	bl sub_8008F0C
	add r0, sp, #0x14
	mov sl, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C24EC
	cmp r1, #0
	beq _080C24E0
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C24E0:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C25B4
	.align 2, 0
_080C24E8: .4byte 0x05000340
_080C24EC:
	str r1, [sp, #0xcc]
	movs r0, #1
	add r1, sp, #0x98
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0xcc]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x94
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080C2508
	adds r0, r1, #0
_080C2508:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C2526
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C252A
	mov r0, r8
	bl sub_80D3BC0
	b _080C252A
_080C2526:
	movs r0, #0
	mov r8, r0
_080C252A:
	adds r5, r0, #0
	str r5, [sp, #0xd0]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0xcc]
	cmp r2, r7
	beq _080C2552
_080C2538:
	cmp r3, #0
	beq _080C2548
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C2548:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xcc]
	cmp r2, r0
	bne _080C2538
_080C2552:
	adds r5, r3, #0
	ldr r1, [sp, #0x98]
	cmp r1, #1
	bne _080C256E
	cmp r5, #0
	beq _080C256A
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C256A:
	adds r5, #0x10
	b _080C2590
_080C256E:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C258E
_080C2576:
	cmp r2, #0
	beq _080C2586
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C2586:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C2576
_080C258E:
	adds r5, r2, #0
_080C2590:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C25A0
_080C259A:
	adds r1, #0x10
	cmp r1, r2
	bne _080C259A
_080C25A0:
	cmp r0, #0
	beq _080C25A8
	bl sub_80D0260
_080C25A8:
	ldr r0, [sp, #0xd0]
	add r0, r8
	ldr r7, [sp, #0xd0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C25B4:
	movs r0, #0x14
	bl sub_80005D4
	ldr r1, _080C27C4 @ =0x0000052C
	add r1, sb
	ldr r1, [r1]
	movs r7, #0x80
	lsls r7, r7, #1
	movs r2, #0
	adds r3, r7, #0
	bl sub_805E824
	adds r4, r0, #0
	movs r6, #0xbe
	lsls r6, r6, #3
	add r6, sb
	ldr r0, [r6]
	cmp r4, r0
	beq _080C25DE
	bl sub_8000608
_080C25DE:
	str r4, [r6]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r4]
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	strh r0, [r4, #8]
	str r0, [r4, #0xc]
	strb r1, [r4, #0x10]
	strb r1, [r4, #0x11]
	str r0, [r4, #0x14]
	strb r1, [r4, #0x18]
	ldr r5, _080C27C8 @ =0x000005F4
	add r5, sb
	ldr r0, [r5]
	cmp r4, r0
	beq _080C260E
	bl sub_8000608
_080C260E:
	str r4, [r5]
	ldr r0, [r6]
	movs r1, #0x98
	lsls r1, r1, #4
	add r1, sb
	ldr r2, [r1]
	movs r1, #0x54
	muls r1, r2, r1
	ldr r2, _080C27CC @ =0x0000042C
	adds r1, r1, r2
	bl sub_805E860
	ldr r1, [r5]
	ldr r0, _080C27D0 @ =0x000008B4
	add r0, sb
	ldrb r0, [r0]
	strh r0, [r1]
	ldr r1, [r5]
	ldr r0, _080C27D4 @ =0x000008B5
	add r0, sb
	ldrb r0, [r0]
	strh r0, [r1, #2]
	ldr r4, [r5]
	ldr r0, _080C27D8 @ =0x0000084C
	add r0, sb
	ldr r1, [r0, #4]
	bl sub_8007D4C
	strh r0, [r4, #6]
	ldr r1, [r5]
	movs r0, #4
	strh r0, [r1, #4]
	ldr r1, [r5]
	movs r2, #1
	movs r0, #1
	strh r0, [r1, #8]
	ldr r0, [r5]
	strb r2, [r0, #0x18]
	movs r0, #0x14
	bl sub_80005D4
	ldr r1, _080C27DC @ =0x00000534
	add r1, sb
	ldr r1, [r1]
	movs r2, #0
	adds r3, r7, #0
	bl sub_805E824
	adds r4, r0, #0
	movs r5, #0xd4
	lsls r5, r5, #3
	add r5, sb
	ldr r0, [r5]
	cmp r4, r0
	beq _080C2680
	bl sub_8000608
_080C2680:
	str r4, [r5]
	adds r0, r4, #0
	movs r1, #0
	bl sub_805E860
	movs r3, #0
	str r3, [sp, #0xbc]
_080C268E:
	movs r7, #0
	ldr r4, [sp, #0xbc]
	lsls r4, r4, #2
	mov sl, r4
	ldr r5, [sp, #0xbc]
	lsls r5, r5, #4
	mov r8, r5
_080C269C:
	ldr r0, [sp, #0xbc]
	add r0, sl
	adds r5, r0, r7
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r6, #0
	strh r6, [r4]
	strh r6, [r4, #2]
	strh r6, [r4, #4]
	strh r6, [r4, #6]
	strh r6, [r4, #8]
	movs r0, #0
	str r0, [r4, #0xc]
	movs r1, #0
	strb r1, [r4, #0x10]
	strb r1, [r4, #0x11]
	str r0, [r4, #0x14]
	strb r1, [r4, #0x18]
	lsls r6, r5, #2
	mov r2, sb
	adds r5, r6, r2
	ldr r3, _080C27E0 @ =0x000006A4
	adds r5, r5, r3
	ldr r0, [r5]
	cmp r4, r0
	beq _080C26D8
	bl sub_8000608
_080C26D8:
	str r4, [r5]
	mov r4, sb
	adds r0, r6, r4
	ldr r5, _080C27E0 @ =0x000006A4
	adds r0, r0, r5
	ldr r1, [r0]
	lsls r0, r7, #4
	adds r0, #0x50
	strh r0, [r1]
	adds r0, r6, r4
	adds r0, r0, r5
	ldr r1, [r0]
	mov r0, r8
	adds r0, #0x28
	strh r0, [r1, #2]
	adds r0, r6, r4
	adds r0, r0, r5
	ldr r4, [r0]
	ldr r5, _080C27E4 @ =0x00000854
	add r5, sb
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	strh r0, [r4, #6]
	mov r1, sb
	adds r0, r6, r1
	ldr r2, _080C27E0 @ =0x000006A4
	adds r0, r0, r2
	ldr r1, [r0]
	movs r0, #5
	strh r0, [r1, #4]
	mov r3, sb
	adds r0, r6, r3
	adds r0, r0, r2
	ldr r0, [r0]
	movs r4, #1
	strh r4, [r0, #8]
	adds r0, r6, r3
	adds r0, r0, r2
	ldr r0, [r0]
	movs r6, #1
	strb r6, [r0, #0x18]
	adds r7, #1
	cmp r7, #4
	ble _080C269C
	movs r0, #0xd4
	lsls r0, r0, #3
	add r0, sb
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x14
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r0, sp, #0x14
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	movs r1, #0xe1
	lsls r1, r1, #3
	add r1, sb
	add r0, sp, #0x14
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r4, r6, r7}
	stm r1!, {r4, r6, r7}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	mov r0, sb
	bl sub_8008910
	adds r6, r0, #0
	movs r4, #0xe2
	lsls r4, r4, #3
	add r4, sb
	ldr r7, [r4]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080C2794
	ldrh r3, [r4, #4]
_080C2794:
	lsls r2, r2, #5
	ldr r4, _080C27E8 @ =0x06010000
	adds r2, r2, r4
	add r0, sp, #0x14
	adds r1, r7, #0
	bl sub_8008F0C
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C27EC
	cmp r1, #0
	beq _080C27BA
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C27BA:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C28B8
	.align 2, 0
_080C27C4: .4byte 0x0000052C
_080C27C8: .4byte 0x000005F4
_080C27CC: .4byte 0x0000042C
_080C27D0: .4byte 0x000008B4
_080C27D4: .4byte 0x000008B5
_080C27D8: .4byte 0x0000084C
_080C27DC: .4byte 0x00000534
_080C27E0: .4byte 0x000006A4
_080C27E4: .4byte 0x00000854
_080C27E8: .4byte 0x06010000
_080C27EC:
	str r1, [sp, #0xcc]
	add r1, sp, #0xa0
	movs r3, #1
	str r3, [r1]
	ldr r0, [r6]
	ldr r4, [sp, #0xcc]
	subs r0, r4, r0
	asrs r4, r0, #4
	add r0, sp, #0x9c
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _080C280A
	mov r0, sl
_080C280A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C2828
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C282C
	mov r0, r8
	bl sub_80D3BC0
	b _080C282C
_080C2828:
	movs r0, #0
	mov r8, r0
_080C282C:
	adds r5, r0, #0
	str r5, [sp, #0xd0]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r5, [sp, #0xcc]
	cmp r2, r5
	beq _080C2854
_080C283A:
	cmp r3, #0
	beq _080C284A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C284A:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0xcc]
	cmp r2, r7
	bne _080C283A
_080C2854:
	adds r5, r3, #0
	mov r0, sl
	ldr r1, [r0]
	cmp r1, #1
	bne _080C2872
	cmp r5, #0
	beq _080C286E
	adds r0, r5, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C286E:
	adds r5, #0x10
	b _080C2894
_080C2872:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C2892
_080C287A:
	cmp r2, #0
	beq _080C288A
	adds r0, r2, #0
	add r1, sp, #0x14
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C288A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C287A
_080C2892:
	adds r5, r2, #0
_080C2894:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C28A4
_080C289E:
	adds r1, #0x10
	cmp r1, r2
	bne _080C289E
_080C28A4:
	cmp r0, #0
	beq _080C28AC
	bl sub_80D0260
_080C28AC:
	ldr r0, [sp, #0xd0]
	add r0, r8
	ldr r7, [sp, #0xd0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C28B8:
	mov r0, sb
	bl sub_8008910
	adds r4, r0, #0
	movs r2, #0xe3
	lsls r2, r2, #3
	add r2, sb
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080C28D2
	ldrh r3, [r2, #4]
_080C28D2:
	adds r6, r4, #0
	add r0, sp, #0x14
	ldr r2, _080C2900 @ =0x050002A0
	bl sub_8008F0C
	add r0, sp, #0x14
	mov sl, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C2904
	cmp r1, #0
	beq _080C28F8
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C28F8:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C29CC
	.align 2, 0
_080C2900: .4byte 0x050002A0
_080C2904:
	str r1, [sp, #0xcc]
	movs r0, #1
	add r1, sp, #0xa8
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0xcc]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0xa4
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080C2920
	adds r0, r1, #0
_080C2920:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C293E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C2942
	mov r0, r8
	bl sub_80D3BC0
	b _080C2942
_080C293E:
	movs r0, #0
	mov r8, r0
_080C2942:
	adds r5, r0, #0
	str r5, [sp, #0xd0]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0xcc]
	cmp r2, r7
	beq _080C296A
_080C2950:
	cmp r3, #0
	beq _080C2960
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C2960:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xcc]
	cmp r2, r0
	bne _080C2950
_080C296A:
	adds r5, r3, #0
	ldr r1, [sp, #0xa8]
	cmp r1, #1
	bne _080C2986
	cmp r5, #0
	beq _080C2982
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C2982:
	adds r5, #0x10
	b _080C29A8
_080C2986:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C29A6
_080C298E:
	cmp r2, #0
	beq _080C299E
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C299E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C298E
_080C29A6:
	adds r5, r2, #0
_080C29A8:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C29B8
_080C29B2:
	adds r1, #0x10
	cmp r1, r2
	bne _080C29B2
_080C29B8:
	cmp r0, #0
	beq _080C29C0
	bl sub_80D0260
_080C29C0:
	ldr r0, [sp, #0xd0]
	add r0, r8
	ldr r7, [sp, #0xd0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C29CC:
	ldr r0, [sp, #0xbc]
	adds r0, #1
	str r0, [sp, #0xbc]
	cmp r0, #4
	bgt _080C29D8
	b _080C268E
_080C29D8:
	movs r0, #0x14
	bl sub_80005D4
	movs r1, #0xa6
	lsls r1, r1, #3
	add r1, sb
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r4, r0, #0
	movs r5, #0xc3
	lsls r5, r5, #3
	add r5, sb
	ldr r0, [r5]
	cmp r4, r0
	beq _080C2A02
	bl sub_8000608
_080C2A02:
	str r4, [r5]
	adds r0, r4, #0
	movs r1, #0
	bl sub_805E860
	movs r1, #0
	str r1, [sp, #0xbc]
_080C2A10:
	movs r7, #0
	ldr r2, [sp, #0xbc]
	lsls r2, r2, #2
	mov sl, r2
	ldr r3, [sp, #0xbc]
	lsls r3, r3, #4
	mov r8, r3
	ldr r4, [sp, #0xbc]
	adds r4, #1
	str r4, [sp, #0xc4]
_080C2A24:
	ldr r0, [sp, #0xbc]
	add r0, sl
	adds r5, r0, r7
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r6, #0
	strh r6, [r4]
	strh r6, [r4, #2]
	strh r6, [r4, #4]
	strh r6, [r4, #6]
	strh r6, [r4, #8]
	movs r0, #0
	str r0, [r4, #0xc]
	movs r1, #0
	strb r1, [r4, #0x10]
	strb r1, [r4, #0x11]
	str r0, [r4, #0x14]
	strb r1, [r4, #0x18]
	lsls r6, r5, #2
	mov r2, sb
	adds r5, r6, r2
	ldr r3, _080C2B4C @ =0x0000061C
	adds r5, r5, r3
	ldr r0, [r5]
	cmp r4, r0
	beq _080C2A60
	bl sub_8000608
_080C2A60:
	str r4, [r5]
	mov r4, sb
	adds r0, r6, r4
	ldr r5, _080C2B4C @ =0x0000061C
	adds r0, r0, r5
	ldr r1, [r0]
	lsls r0, r7, #4
	adds r0, #0x50
	strh r0, [r1]
	adds r0, r6, r4
	adds r0, r0, r5
	ldr r1, [r0]
	mov r0, r8
	adds r0, #0x28
	strh r0, [r1, #2]
	adds r0, r6, r4
	adds r0, r0, r5
	ldr r4, [r0]
	ldr r5, _080C2B50 @ =0x0000085C
	add r5, sb
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	strh r0, [r4, #6]
	mov r1, sb
	adds r0, r6, r1
	ldr r2, _080C2B4C @ =0x0000061C
	adds r0, r0, r2
	ldr r1, [r0]
	movs r0, #6
	strh r0, [r1, #4]
	mov r3, sb
	adds r0, r6, r3
	adds r0, r0, r2
	ldr r0, [r0]
	movs r4, #1
	strh r4, [r0, #8]
	adds r0, r6, r3
	adds r0, r0, r2
	ldr r0, [r0]
	movs r6, #1
	strb r6, [r0, #0x18]
	adds r7, #1
	cmp r7, #4
	ble _080C2A24
	movs r0, #0xc3
	lsls r0, r0, #3
	add r0, sb
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x14
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r0, sp, #0x14
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	movs r1, #0xd0
	lsls r1, r1, #3
	add r1, sb
	add r0, sp, #0x14
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r4, r6, r7}
	stm r1!, {r4, r6, r7}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	mov r0, sb
	bl sub_8008910
	adds r6, r0, #0
	movs r4, #0xd1
	lsls r4, r4, #3
	add r4, sb
	ldr r7, [r4]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080C2B1C
	ldrh r3, [r4, #4]
_080C2B1C:
	lsls r2, r2, #5
	ldr r4, _080C2B54 @ =0x06010000
	adds r2, r2, r4
	add r0, sp, #0x14
	adds r1, r7, #0
	bl sub_8008F0C
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C2B58
	cmp r1, #0
	beq _080C2B42
	adds r0, r1, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C2B42:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C2C24
	.align 2, 0
_080C2B4C: .4byte 0x0000061C
_080C2B50: .4byte 0x0000085C
_080C2B54: .4byte 0x06010000
_080C2B58:
	str r1, [sp, #0xcc]
	add r1, sp, #0xb0
	movs r3, #1
	str r3, [r1]
	ldr r0, [r6]
	ldr r4, [sp, #0xcc]
	subs r0, r4, r0
	asrs r4, r0, #4
	add r0, sp, #0xac
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _080C2B76
	mov r0, sl
_080C2B76:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C2B94
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C2B98
	mov r0, r8
	bl sub_80D3BC0
	b _080C2B98
_080C2B94:
	movs r0, #0
	mov r8, r0
_080C2B98:
	adds r5, r0, #0
	str r5, [sp, #0xd0]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r5, [sp, #0xcc]
	cmp r2, r5
	beq _080C2BC0
_080C2BA6:
	cmp r3, #0
	beq _080C2BB6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C2BB6:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0xcc]
	cmp r2, r7
	bne _080C2BA6
_080C2BC0:
	adds r5, r3, #0
	mov r0, sl
	ldr r1, [r0]
	cmp r1, #1
	bne _080C2BDE
	cmp r5, #0
	beq _080C2BDA
	adds r0, r5, #0
	add r1, sp, #0x14
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C2BDA:
	adds r5, #0x10
	b _080C2C00
_080C2BDE:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C2BFE
_080C2BE6:
	cmp r2, #0
	beq _080C2BF6
	adds r0, r2, #0
	add r1, sp, #0x14
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C2BF6:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C2BE6
_080C2BFE:
	adds r5, r2, #0
_080C2C00:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C2C10
_080C2C0A:
	adds r1, #0x10
	cmp r1, r2
	bne _080C2C0A
_080C2C10:
	cmp r0, #0
	beq _080C2C18
	bl sub_80D0260
_080C2C18:
	ldr r0, [sp, #0xd0]
	add r0, r8
	ldr r7, [sp, #0xd0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C2C24:
	mov r0, sb
	bl sub_8008910
	adds r4, r0, #0
	movs r2, #0xd2
	lsls r2, r2, #3
	add r2, sb
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080C2C3E
	ldrh r3, [r2, #4]
_080C2C3E:
	adds r6, r4, #0
	add r0, sp, #0x14
	ldr r2, _080C2C6C @ =0x050002C0
	bl sub_8008F0C
	add r0, sp, #0x14
	mov sl, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C2C70
	cmp r1, #0
	beq _080C2C64
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C2C64:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C2D38
	.align 2, 0
_080C2C6C: .4byte 0x050002C0
_080C2C70:
	str r1, [sp, #0xcc]
	movs r0, #1
	add r1, sp, #0xb8
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0xcc]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0xb4
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080C2C8C
	adds r0, r1, #0
_080C2C8C:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C2CAA
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C2CAE
	mov r0, r8
	bl sub_80D3BC0
	b _080C2CAE
_080C2CAA:
	movs r0, #0
	mov r8, r0
_080C2CAE:
	adds r5, r0, #0
	str r5, [sp, #0xd0]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0xcc]
	cmp r2, r7
	beq _080C2CD6
_080C2CBC:
	cmp r3, #0
	beq _080C2CCC
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C2CCC:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xcc]
	cmp r2, r0
	bne _080C2CBC
_080C2CD6:
	adds r5, r3, #0
	ldr r1, [sp, #0xb8]
	cmp r1, #1
	bne _080C2CF2
	cmp r5, #0
	beq _080C2CEE
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C2CEE:
	adds r5, #0x10
	b _080C2D14
_080C2CF2:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C2D12
_080C2CFA:
	cmp r2, #0
	beq _080C2D0A
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C2D0A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C2CFA
_080C2D12:
	adds r5, r2, #0
_080C2D14:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C2D24
_080C2D1E:
	adds r1, #0x10
	cmp r1, r2
	bne _080C2D1E
_080C2D24:
	cmp r0, #0
	beq _080C2D2C
	bl sub_80D0260
_080C2D2C:
	ldr r0, [sp, #0xd0]
	add r0, r8
	ldr r7, [sp, #0xd0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C2D38:
	ldr r0, [sp, #0xc4]
	str r0, [sp, #0xbc]
	cmp r0, #4
	bgt _080C2D42
	b _080C2A10
_080C2D42:
	add sp, #0xd4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80C2D54
sub_80C2D54: @ 0x080C2D54
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x58
	mov r8, r0
	ldr r0, _080C2FA8 @ =0x0000096B
	add r0, r8
	ldrb r0, [r0]
	cmp r0, #0
	beq _080C2E0A
	mov r0, r8
	bl sub_8008920
	adds r4, r0, #0
	movs r3, #0xf4
	lsls r3, r3, #3
	add r3, r8
	ldr r0, [r3]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080C2D86
	ldrh r2, [r3, #4]
_080C2D86:
	ldr r0, _080C2FAC @ =0x0000079C
	add r0, r8
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
	mov r0, r8
	bl sub_8008920
	adds r4, r0, #0
	movs r0, #0xf9
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0]
	movs r2, #0
	cmp r1, #0
	beq _080C2DAA
	ldrh r2, [r0, #4]
_080C2DAA:
	ldr r0, _080C2FB0 @ =0x000007C4
	add r0, r8
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
	mov r0, r8
	bl sub_8008920
	adds r4, r0, #0
	movs r0, #0xfe
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0]
	movs r2, #0
	cmp r1, #0
	beq _080C2DCE
	ldrh r2, [r0, #4]
_080C2DCE:
	ldr r0, _080C2FB4 @ =0x000007EC
	add r0, r8
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
	movs r4, #0xef
	lsls r4, r4, #3
	add r4, r8
	movs r5, #3
_080C2DE2:
	mov r0, r8
	bl sub_8008920
	adds r3, r0, #0
	ldrb r2, [r3]
	cmp r2, #0x7f
	bhi _080C2E02
	lsls r1, r2, #3
	adds r1, #4
	adds r1, r3, r1
	ldr r0, [r4]
	str r0, [r1]
	ldrh r0, [r4, #4]
	strh r0, [r1, #4]
	adds r0, r2, #1
	strb r0, [r3]
_080C2E02:
	adds r4, #8
	subs r5, #1
	cmp r5, #0
	bge _080C2DE2
_080C2E0A:
	mov r0, r8
	bl sub_8008920
	adds r3, r0, #0
	movs r1, #0xa9
	lsls r1, r1, #3
	add r1, r8
	ldrb r2, [r3]
	cmp r2, #0x7f
	bhi _080C2E34
	lsls r0, r2, #3
	adds r0, #4
	adds r0, r3, r0
	ldr r1, [r1]
	str r1, [r0]
	ldr r1, _080C2FB8 @ =0x0000054C
	add r1, r8
	ldrh r1, [r1]
	strh r1, [r0, #4]
	adds r0, r2, #1
	strb r0, [r3]
_080C2E34:
	ldr r0, _080C2FBC @ =0x0000089C
	add r0, r8
	ldr r1, [r0]
	cmp r1, #4
	bne _080C2E48
	ldr r0, _080C2FC0 @ =0x000008A4
	add r0, r8
	ldr r0, [r0]
	cmp r0, #1
	beq _080C2E58
_080C2E48:
	cmp r1, #3
	bne _080C2E7E
	movs r0, #0x8a
	lsls r0, r0, #4
	add r0, r8
	ldr r0, [r0]
	cmp r0, #2
	beq _080C2E7E
_080C2E58:
	mov r0, r8
	bl sub_8008920
	adds r4, r0, #0
	movs r3, #0xab
	lsls r3, r3, #3
	add r3, r8
	ldr r0, [r3]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080C2E72
	ldrh r2, [r3, #4]
_080C2E72:
	ldr r0, _080C2FC4 @ =0x00000554
	add r0, r8
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
_080C2E7E:
	mov r0, r8
	bl sub_8008920
	adds r4, r0, #0
	movs r3, #0xb0
	lsls r3, r3, #3
	add r3, r8
	ldr r0, [r3]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080C2E98
	ldrh r2, [r3, #4]
_080C2E98:
	ldr r0, _080C2FC8 @ =0x0000057C
	add r0, r8
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
	ldr r0, _080C2FCC @ =0x0000096D
	add r0, r8
	ldrb r0, [r0]
	cmp r0, #0
	beq _080C2ED2
	mov r0, r8
	bl sub_8008920
	adds r4, r0, #0
	movs r0, #0xeb
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0]
	movs r2, #0
	cmp r1, #0
	beq _080C2EC6
	ldrh r2, [r0, #4]
_080C2EC6:
	ldr r0, _080C2FD0 @ =0x00000754
	add r0, r8
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
_080C2ED2:
	ldr r0, _080C2FD4 @ =0x000008BC
	add r0, r8
	ldr r0, [r0]
	cmp r0, #9
	beq _080C2EDE
	b _080C31E8
_080C2EDE:
	ldr r1, _080C2FD8 @ =0x0000072C
	add r1, r8
	ldr r2, [r1]
	ldr r0, _080C2FDC @ =0x000008B4
	add r0, r8
	ldrb r0, [r0]
	subs r0, #8
	strh r0, [r2]
	ldr r1, [r1]
	ldr r0, _080C2FE0 @ =0x000008B5
	add r0, r8
	ldrb r0, [r0]
	subs r0, #0x20
	strh r0, [r1, #2]
	movs r5, #0xe5
	lsls r5, r5, #3
	add r5, r8
	ldr r0, [r5]
	bl sub_805E8F0
	adds r1, r0, #0
	lsls r0, r1, #0x1e
	cmp r0, #0
	blt _080C2F10
	b _080C31C2
_080C2F10:
	lsls r0, r1, #0x1d
	cmp r0, #0
	bge _080C2F1C
	ldr r1, [r5]
	movs r0, #0
	strh r0, [r1, #0x10]
_080C2F1C:
	movs r4, #0xe6
	lsls r4, r4, #3
	add r4, r8
	ldr r0, [r5]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sp
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	mov r0, sp
	mov r1, sp
	movs r2, #0x20
	bl sub_80D3994
	mov r0, sp
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r1, r6, r7}
	stm r4!, {r1, r6, r7}
	ldm r0!, {r2, r3}
	stm r4!, {r2, r3}
	mov r0, r8
	bl sub_8008910
	adds r5, r0, #0
	movs r4, #0xe7
	lsls r4, r4, #3
	add r4, r8
	ldr r6, [r4]
	ldr r0, _080C2FE4 @ =0x0000086C
	add r0, r8
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080C2F78
	ldrh r3, [r4, #4]
_080C2F78:
	lsls r2, r2, #5
	ldr r4, _080C2FE8 @ =0x06010000
	adds r2, r2, r4
	mov r0, sp
	adds r1, r6, #0
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080C2FEC
	cmp r1, #0
	beq _080C2FA0
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r6, r7}
	stm r0!, {r2, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C2FA0:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080C30B2
	.align 2, 0
_080C2FA8: .4byte 0x0000096B
_080C2FAC: .4byte 0x0000079C
_080C2FB0: .4byte 0x000007C4
_080C2FB4: .4byte 0x000007EC
_080C2FB8: .4byte 0x0000054C
_080C2FBC: .4byte 0x0000089C
_080C2FC0: .4byte 0x000008A4
_080C2FC4: .4byte 0x00000554
_080C2FC8: .4byte 0x0000057C
_080C2FCC: .4byte 0x0000096D
_080C2FD0: .4byte 0x00000754
_080C2FD4: .4byte 0x000008BC
_080C2FD8: .4byte 0x0000072C
_080C2FDC: .4byte 0x000008B4
_080C2FE0: .4byte 0x000008B5
_080C2FE4: .4byte 0x0000086C
_080C2FE8: .4byte 0x06010000
_080C2FEC:
	str r1, [sp, #0x50]
	movs r0, #1
	str r0, [sp, #0x24]
	ldr r0, [r5]
	adds r3, r1, #0
	subs r0, r3, r0
	asrs r4, r0, #4
	str r4, [sp, #0x20]
	add r1, sp, #0x24
	add r0, sp, #0x20
	cmp r4, #1
	bhs _080C3006
	adds r0, r1, #0
_080C3006:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C3024
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080C3028
	mov r0, sb
	bl sub_80D3BC0
	b _080C3028
_080C3024:
	movs r0, #0
	mov sb, r0
_080C3028:
	adds r4, r0, #0
	str r4, [sp, #0x54]
	ldr r2, [r5]
	adds r3, r4, #0
	ldr r4, [sp, #0x50]
	cmp r2, r4
	beq _080C3050
_080C3036:
	cmp r3, #0
	beq _080C3046
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C3046:
	adds r2, #0x10
	adds r3, #0x10
	ldr r6, [sp, #0x50]
	cmp r2, r6
	bne _080C3036
_080C3050:
	adds r4, r3, #0
	ldr r0, [sp, #0x24]
	cmp r0, #1
	bne _080C306C
	cmp r4, #0
	beq _080C3068
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C3068:
	adds r4, #0x10
	b _080C308E
_080C306C:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080C308C
_080C3074:
	cmp r2, #0
	beq _080C3084
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C3084:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C3074
_080C308C:
	adds r4, r2, #0
_080C308E:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C309E
_080C3098:
	adds r1, #0x10
	cmp r1, r2
	bne _080C3098
_080C309E:
	cmp r0, #0
	beq _080C30A6
	bl sub_80D0260
_080C30A6:
	ldr r0, [sp, #0x54]
	add r0, sb
	ldr r1, [sp, #0x54]
	str r1, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080C30B2:
	mov r0, r8
	bl sub_8008910
	adds r4, r0, #0
	movs r2, #0xe8
	lsls r2, r2, #3
	add r2, r8
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080C30CC
	ldrh r3, [r2, #4]
_080C30CC:
	adds r5, r4, #0
	mov r0, sp
	ldr r2, _080C30F8 @ =0x05000300
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080C30FC
	cmp r1, #0
	beq _080C30F0
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C30F0:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080C31C2
	.align 2, 0
_080C30F8: .4byte 0x05000300
_080C30FC:
	str r1, [sp, #0x50]
	movs r0, #1
	str r0, [sp, #0x2c]
	ldr r0, [r5]
	adds r6, r1, #0
	subs r0, r6, r0
	asrs r4, r0, #4
	str r4, [sp, #0x28]
	add r1, sp, #0x2c
	add r0, sp, #0x28
	cmp r4, #1
	bhs _080C3116
	adds r0, r1, #0
_080C3116:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C3134
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080C3138
	mov r0, sb
	bl sub_80D3BC0
	b _080C3138
_080C3134:
	movs r0, #0
	mov sb, r0
_080C3138:
	adds r4, r0, #0
	str r4, [sp, #0x54]
	ldr r2, [r5]
	adds r3, r4, #0
	ldr r7, [sp, #0x50]
	cmp r2, r7
	beq _080C3160
_080C3146:
	cmp r3, #0
	beq _080C3156
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C3156:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x50]
	cmp r2, r0
	bne _080C3146
_080C3160:
	adds r4, r3, #0
	ldr r0, [sp, #0x2c]
	cmp r0, #1
	bne _080C317C
	cmp r4, #0
	beq _080C3178
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080C3178:
	adds r4, #0x10
	b _080C319E
_080C317C:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080C319C
_080C3184:
	cmp r2, #0
	beq _080C3194
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C3194:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C3184
_080C319C:
	adds r4, r2, #0
_080C319E:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C31AE
_080C31A8:
	adds r1, #0x10
	cmp r1, r2
	bne _080C31A8
_080C31AE:
	cmp r0, #0
	beq _080C31B6
	bl sub_80D0260
_080C31B6:
	ldr r0, [sp, #0x54]
	add r0, sb
	ldr r7, [sp, #0x54]
	str r7, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080C31C2:
	mov r0, r8
	bl sub_8008920
	adds r4, r0, #0
	movs r3, #0xe6
	lsls r3, r3, #3
	add r3, r8
	ldr r0, [r3]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080C31DC
	ldrh r2, [r3, #4]
_080C31DC:
	ldr r0, _080C321C @ =0x0000072C
	add r0, r8
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
_080C31E8:
	ldr r0, _080C3220 @ =0x000008C5
	add r0, r8
	ldrb r0, [r0]
	cmp r0, #0
	bne _080C31F4
	b _080C34FC
_080C31F4:
	ldr r0, _080C3224 @ =0x0000089C
	add r0, r8
	ldr r0, [r0]
	cmp r0, #2
	beq _080C3234
	cmp r0, #0
	beq _080C3234
	ldr r2, _080C3228 @ =0x000005F4
	add r2, r8
	ldr r1, [r2]
	ldr r0, _080C322C @ =0x000008B4
	add r0, r8
	ldrb r0, [r0]
	strh r0, [r1]
	ldr r1, [r2]
	ldr r0, _080C3230 @ =0x000008B5
	add r0, r8
	ldrb r0, [r0]
	adds r0, #0xf
	b _080C324A
	.align 2, 0
_080C321C: .4byte 0x0000072C
_080C3220: .4byte 0x000008C5
_080C3224: .4byte 0x0000089C
_080C3228: .4byte 0x000005F4
_080C322C: .4byte 0x000008B4
_080C3230: .4byte 0x000008B5
_080C3234:
	ldr r2, _080C32EC @ =0x000005F4
	add r2, r8
	ldr r1, [r2]
	ldr r0, _080C32F0 @ =0x0000097D
	add r0, r8
	ldrb r0, [r0]
	strh r0, [r1]
	ldr r1, [r2]
	ldr r0, _080C32F4 @ =0x0000097E
	add r0, r8
	ldrb r0, [r0]
_080C324A:
	strh r0, [r1, #2]
	movs r5, #0xbe
	lsls r5, r5, #3
	add r5, r8
	ldr r0, [r5]
	bl sub_805E8F0
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080C3260
	b _080C34D6
_080C3260:
	movs r4, #0xbf
	lsls r4, r4, #3
	add r4, r8
	ldr r0, [r5]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sp
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	mov r0, sp
	mov r1, sp
	movs r2, #0x20
	bl sub_80D3994
	mov r0, sp
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r1, r6, r7}
	stm r4!, {r1, r6, r7}
	ldm r0!, {r2, r3}
	stm r4!, {r2, r3}
	mov r0, r8
	bl sub_8008910
	adds r5, r0, #0
	movs r4, #0xc0
	lsls r4, r4, #3
	add r4, r8
	ldr r6, [r4]
	ldr r0, _080C32F8 @ =0x0000084C
	add r0, r8
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080C32BC
	ldrh r3, [r4, #4]
_080C32BC:
	lsls r2, r2, #5
	ldr r4, _080C32FC @ =0x06010000
	adds r2, r2, r4
	mov r0, sp
	adds r1, r6, #0
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080C3300
	cmp r1, #0
	beq _080C32E4
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r6, r7}
	stm r0!, {r2, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C32E4:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080C33C6
	.align 2, 0
_080C32EC: .4byte 0x000005F4
_080C32F0: .4byte 0x0000097D
_080C32F4: .4byte 0x0000097E
_080C32F8: .4byte 0x0000084C
_080C32FC: .4byte 0x06010000
_080C3300:
	str r1, [sp, #0x50]
	movs r0, #1
	str r0, [sp, #0x34]
	ldr r0, [r5]
	adds r3, r1, #0
	subs r0, r3, r0
	asrs r4, r0, #4
	str r4, [sp, #0x30]
	add r1, sp, #0x34
	add r0, sp, #0x30
	cmp r4, #1
	bhs _080C331A
	adds r0, r1, #0
_080C331A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C3338
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080C333C
	mov r0, sb
	bl sub_80D3BC0
	b _080C333C
_080C3338:
	movs r0, #0
	mov sb, r0
_080C333C:
	adds r4, r0, #0
	str r4, [sp, #0x54]
	ldr r2, [r5]
	adds r3, r4, #0
	ldr r4, [sp, #0x50]
	cmp r2, r4
	beq _080C3364
_080C334A:
	cmp r3, #0
	beq _080C335A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C335A:
	adds r2, #0x10
	adds r3, #0x10
	ldr r6, [sp, #0x50]
	cmp r2, r6
	bne _080C334A
_080C3364:
	adds r4, r3, #0
	ldr r0, [sp, #0x34]
	cmp r0, #1
	bne _080C3380
	cmp r4, #0
	beq _080C337C
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C337C:
	adds r4, #0x10
	b _080C33A2
_080C3380:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080C33A0
_080C3388:
	cmp r2, #0
	beq _080C3398
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C3398:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C3388
_080C33A0:
	adds r4, r2, #0
_080C33A2:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C33B2
_080C33AC:
	adds r1, #0x10
	cmp r1, r2
	bne _080C33AC
_080C33B2:
	cmp r0, #0
	beq _080C33BA
	bl sub_80D0260
_080C33BA:
	ldr r0, [sp, #0x54]
	add r0, sb
	ldr r1, [sp, #0x54]
	str r1, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080C33C6:
	mov r0, r8
	bl sub_8008910
	adds r4, r0, #0
	movs r2, #0xc1
	lsls r2, r2, #3
	add r2, r8
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080C33E0
	ldrh r3, [r2, #4]
_080C33E0:
	adds r5, r4, #0
	mov r0, sp
	ldr r2, _080C340C @ =0x05000280
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080C3410
	cmp r1, #0
	beq _080C3404
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C3404:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080C34D6
	.align 2, 0
_080C340C: .4byte 0x05000280
_080C3410:
	str r1, [sp, #0x50]
	movs r0, #1
	str r0, [sp, #0x3c]
	ldr r0, [r5]
	adds r6, r1, #0
	subs r0, r6, r0
	asrs r4, r0, #4
	str r4, [sp, #0x38]
	add r1, sp, #0x3c
	add r0, sp, #0x38
	cmp r4, #1
	bhs _080C342A
	adds r0, r1, #0
_080C342A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C3448
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080C344C
	mov r0, sb
	bl sub_80D3BC0
	b _080C344C
_080C3448:
	movs r0, #0
	mov sb, r0
_080C344C:
	adds r4, r0, #0
	str r4, [sp, #0x54]
	ldr r2, [r5]
	adds r3, r4, #0
	ldr r7, [sp, #0x50]
	cmp r2, r7
	beq _080C3474
_080C345A:
	cmp r3, #0
	beq _080C346A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C346A:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x50]
	cmp r2, r0
	bne _080C345A
_080C3474:
	adds r4, r3, #0
	ldr r0, [sp, #0x3c]
	cmp r0, #1
	bne _080C3490
	cmp r4, #0
	beq _080C348C
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080C348C:
	adds r4, #0x10
	b _080C34B2
_080C3490:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080C34B0
_080C3498:
	cmp r2, #0
	beq _080C34A8
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C34A8:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C3498
_080C34B0:
	adds r4, r2, #0
_080C34B2:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C34C2
_080C34BC:
	adds r1, #0x10
	cmp r1, r2
	bne _080C34BC
_080C34C2:
	cmp r0, #0
	beq _080C34CA
	bl sub_80D0260
_080C34CA:
	ldr r0, [sp, #0x54]
	add r0, sb
	ldr r7, [sp, #0x54]
	str r7, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080C34D6:
	mov r0, r8
	bl sub_8008920
	adds r4, r0, #0
	movs r3, #0xbf
	lsls r3, r3, #3
	add r3, r8
	ldr r0, [r3]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080C34F0
	ldrh r2, [r3, #4]
_080C34F0:
	ldr r0, _080C35DC @ =0x000005F4
	add r0, r8
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
_080C34FC:
	ldr r2, _080C35E0 @ =0x000005A4
	add r2, r8
	ldr r1, [r2]
	ldr r0, _080C35E4 @ =0x000008B4
	add r0, r8
	ldrb r0, [r0]
	strh r0, [r1]
	ldr r1, [r2]
	ldr r0, _080C35E8 @ =0x000008B5
	add r0, r8
	ldrb r0, [r0]
	strh r0, [r1, #2]
	ldr r5, _080C35EC @ =0x000008C4
	add r5, r8
	ldrb r0, [r5]
	cmp r0, #0
	beq _080C353C
	movs r0, #0xb4
	lsls r0, r0, #3
	add r0, r8
	ldr r4, [r0]
	mov r0, r8
	bl sub_80C7B38
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_805E860
	movs r0, #0
	strb r0, [r5]
_080C353C:
	movs r5, #0xb4
	lsls r5, r5, #3
	add r5, r8
	ldr r0, [r5]
	bl sub_805E8F0
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080C3550
	b _080C37CE
_080C3550:
	movs r4, #0xb5
	lsls r4, r4, #3
	add r4, r8
	ldr r0, [r5]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sp
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	mov r0, sp
	mov r1, sp
	movs r2, #0x20
	bl sub_80D3994
	mov r0, sp
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r1, r6, r7}
	stm r4!, {r1, r6, r7}
	ldm r0!, {r2, r3}
	stm r4!, {r2, r3}
	mov r0, r8
	bl sub_8008910
	adds r5, r0, #0
	movs r4, #0xb6
	lsls r4, r4, #3
	add r4, r8
	ldr r6, [r4]
	ldr r0, _080C35F0 @ =0x0000087C
	add r0, r8
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080C35AC
	ldrh r3, [r4, #4]
_080C35AC:
	lsls r2, r2, #5
	ldr r4, _080C35F4 @ =0x06010000
	adds r2, r2, r4
	mov r0, sp
	adds r1, r6, #0
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080C35F8
	cmp r1, #0
	beq _080C35D4
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r6, r7}
	stm r0!, {r2, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C35D4:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080C36BE
	.align 2, 0
_080C35DC: .4byte 0x000005F4
_080C35E0: .4byte 0x000005A4
_080C35E4: .4byte 0x000008B4
_080C35E8: .4byte 0x000008B5
_080C35EC: .4byte 0x000008C4
_080C35F0: .4byte 0x0000087C
_080C35F4: .4byte 0x06010000
_080C35F8:
	str r1, [sp, #0x50]
	movs r0, #1
	str r0, [sp, #0x44]
	ldr r0, [r5]
	adds r3, r1, #0
	subs r0, r3, r0
	asrs r4, r0, #4
	str r4, [sp, #0x40]
	add r1, sp, #0x44
	add r0, sp, #0x40
	cmp r4, #1
	bhs _080C3612
	adds r0, r1, #0
_080C3612:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C3630
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080C3634
	mov r0, sb
	bl sub_80D3BC0
	b _080C3634
_080C3630:
	movs r0, #0
	mov sb, r0
_080C3634:
	adds r4, r0, #0
	str r4, [sp, #0x54]
	ldr r2, [r5]
	adds r3, r4, #0
	ldr r4, [sp, #0x50]
	cmp r2, r4
	beq _080C365C
_080C3642:
	cmp r3, #0
	beq _080C3652
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C3652:
	adds r2, #0x10
	adds r3, #0x10
	ldr r6, [sp, #0x50]
	cmp r2, r6
	bne _080C3642
_080C365C:
	adds r4, r3, #0
	ldr r0, [sp, #0x44]
	cmp r0, #1
	bne _080C3678
	cmp r4, #0
	beq _080C3674
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C3674:
	adds r4, #0x10
	b _080C369A
_080C3678:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080C3698
_080C3680:
	cmp r2, #0
	beq _080C3690
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C3690:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C3680
_080C3698:
	adds r4, r2, #0
_080C369A:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C36AA
_080C36A4:
	adds r1, #0x10
	cmp r1, r2
	bne _080C36A4
_080C36AA:
	cmp r0, #0
	beq _080C36B2
	bl sub_80D0260
_080C36B2:
	ldr r0, [sp, #0x54]
	add r0, sb
	ldr r1, [sp, #0x54]
	str r1, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080C36BE:
	mov r0, r8
	bl sub_8008910
	adds r4, r0, #0
	movs r2, #0xb7
	lsls r2, r2, #3
	add r2, r8
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080C36D8
	ldrh r3, [r2, #4]
_080C36D8:
	adds r5, r4, #0
	mov r0, sp
	ldr r2, _080C3704 @ =0x05000380
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080C3708
	cmp r1, #0
	beq _080C36FC
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C36FC:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080C37CE
	.align 2, 0
_080C3704: .4byte 0x05000380
_080C3708:
	str r1, [sp, #0x50]
	movs r0, #1
	str r0, [sp, #0x4c]
	ldr r0, [r5]
	adds r6, r1, #0
	subs r0, r6, r0
	asrs r4, r0, #4
	str r4, [sp, #0x48]
	add r1, sp, #0x4c
	add r0, sp, #0x48
	cmp r4, #1
	bhs _080C3722
	adds r0, r1, #0
_080C3722:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C3740
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080C3744
	mov r0, sb
	bl sub_80D3BC0
	b _080C3744
_080C3740:
	movs r0, #0
	mov sb, r0
_080C3744:
	adds r4, r0, #0
	str r4, [sp, #0x54]
	ldr r2, [r5]
	adds r3, r4, #0
	ldr r7, [sp, #0x50]
	cmp r2, r7
	beq _080C376C
_080C3752:
	cmp r3, #0
	beq _080C3762
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C3762:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x50]
	cmp r2, r0
	bne _080C3752
_080C376C:
	adds r4, r3, #0
	ldr r0, [sp, #0x4c]
	cmp r0, #1
	bne _080C3788
	cmp r4, #0
	beq _080C3784
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080C3784:
	adds r4, #0x10
	b _080C37AA
_080C3788:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080C37A8
_080C3790:
	cmp r2, #0
	beq _080C37A0
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C37A0:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C3790
_080C37A8:
	adds r4, r2, #0
_080C37AA:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C37BA
_080C37B4:
	adds r1, #0x10
	cmp r1, r2
	bne _080C37B4
_080C37BA:
	cmp r0, #0
	beq _080C37C2
	bl sub_80D0260
_080C37C2:
	ldr r0, [sp, #0x54]
	add r0, sb
	ldr r7, [sp, #0x54]
	str r7, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080C37CE:
	mov r0, r8
	bl sub_8008920
	adds r4, r0, #0
	movs r3, #0xb5
	lsls r3, r3, #3
	add r3, r8
	ldr r0, [r3]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080C37E8
	ldrh r2, [r3, #4]
_080C37E8:
	ldr r0, _080C38C0 @ =0x000005A4
	add r0, r8
	ldr r3, [r0]
	adds r0, r4, #0
	bl sub_805E99C
	ldr r7, _080C38C4 @ =0x000006A4
	add r7, r8
	ldr r6, _080C38C8 @ =0x00000905
	add r6, r8
	movs r5, #0x18
_080C37FE:
	ldrb r0, [r6]
	cmp r0, #0
	beq _080C3826
	mov r0, r8
	bl sub_8008920
	adds r4, r0, #0
	movs r3, #0xe1
	lsls r3, r3, #3
	add r3, r8
	ldr r0, [r3]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080C381E
	ldrh r2, [r3, #4]
_080C381E:
	ldr r3, [r7]
	adds r0, r4, #0
	bl sub_805E99C
_080C3826:
	adds r7, #4
	adds r6, #4
	subs r5, #1
	cmp r5, #0
	bge _080C37FE
	ldr r0, _080C38CC @ =0x0000096C
	add r0, r8
	ldrb r0, [r0]
	cmp r0, #0
	beq _080C3874
	ldr r4, _080C38D0 @ =0x000005CC
	add r4, r8
	ldr r1, [r4]
	ldr r0, _080C38D4 @ =0x000008B4
	add r0, r8
	ldrb r0, [r0]
	strh r0, [r1]
	ldr r1, [r4]
	ldr r0, _080C38D8 @ =0x000008B5
	add r0, r8
	ldrb r0, [r0]
	strh r0, [r1, #2]
	mov r0, r8
	bl sub_8008920
	adds r5, r0, #0
	movs r3, #0xba
	lsls r3, r3, #3
	add r3, r8
	ldr r0, [r3]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080C386C
	ldrh r2, [r3, #4]
_080C386C:
	ldr r3, [r4]
	adds r0, r5, #0
	bl sub_805E99C
_080C3874:
	ldr r7, _080C38DC @ =0x0000061C
	add r7, r8
	ldr r6, _080C38E0 @ =0x00000904
	add r6, r8
	movs r5, #0x18
_080C387E:
	ldrb r0, [r6]
	cmp r0, #0
	beq _080C38A6
	mov r0, r8
	bl sub_8008920
	adds r4, r0, #0
	movs r3, #0xd0
	lsls r3, r3, #3
	add r3, r8
	ldr r0, [r3]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080C389E
	ldrh r2, [r3, #4]
_080C389E:
	ldr r3, [r7]
	adds r0, r4, #0
	bl sub_805E99C
_080C38A6:
	adds r7, #4
	adds r6, #4
	subs r5, #1
	cmp r5, #0
	bge _080C387E
	add sp, #0x58
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080C38C0: .4byte 0x000005A4
_080C38C4: .4byte 0x000006A4
_080C38C8: .4byte 0x00000905
_080C38CC: .4byte 0x0000096C
_080C38D0: .4byte 0x000005CC
_080C38D4: .4byte 0x000008B4
_080C38D8: .4byte 0x000008B5
_080C38DC: .4byte 0x0000061C
_080C38E0: .4byte 0x00000904

	thumb_func_start sub_80C38E4
sub_80C38E4: @ 0x080C38E4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x40
	mov sb, r0
	cmp r1, #0x3c
	beq _080C38F8
	b _080C3AF6
_080C38F8:
	ldr r5, _080C3984 @ =0x0000097B
	add r5, sb
	ldrb r0, [r5]
	subs r0, #1
	movs r1, #0
	mov sl, r1
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #9
	bne _080C391C
	movs r0, #0x81
	lsls r0, r0, #4
	add r0, sb
	movs r1, #0xc0
	lsls r1, r1, #1
	bl sub_8008C28
_080C391C:
	ldrb r0, [r5]
	add r1, sp, #0xc
	movs r2, #0
	bl sub_804EC84
	ldrb r0, [r5]
	cmp r0, #9
	bhi _080C3942
	add r0, sp, #0x10
	ldr r1, _080C3988 @ =gUnknown_08108000
	movs r2, #2
	bl sub_80D3994
	add r1, sp, #0xc
	adds r0, r1, #0
	ldrb r0, [r0]
	strb r0, [r1, #1]
	movs r0, #0x30
	strb r0, [r1]
_080C3942:
	add r0, sp, #0x24
	movs r6, #4
	movs r7, #2
	strh r6, [r0]
	strh r7, [r0, #2]
	ldr r0, [sp, #0x24]
	mov r4, sb
	adds r4, #0xc
	adds r1, r4, #0
	movs r2, #0
	bl sub_804E7A0
	ldrb r0, [r5]
	mov r8, r4
	cmp r0, #9
	bls _080C398C
	movs r1, #1
	add r0, sp, #0x28
	strh r6, [r0]
	strh r7, [r0, #2]
	ldr r0, [sp, #0x28]
	add r2, sp, #0xc
	str r2, [sp]
	mov r3, sl
	str r3, [sp, #4]
	str r1, [sp, #8]
	mov r1, r8
	movs r2, #0
	movs r3, #0
	bl sub_804E958
	b _080C39AA
	.align 2, 0
_080C3984: .4byte 0x0000097B
_080C3988: .4byte gUnknown_08108000
_080C398C:
	movs r1, #3
	add r0, sp, #0x2c
	strh r6, [r0]
	strh r7, [r0, #2]
	ldr r0, [sp, #0x2c]
	add r4, sp, #0xc
	str r4, [sp]
	mov r6, sl
	str r6, [sp, #4]
	str r1, [sp, #8]
	mov r1, r8
	movs r2, #0
	movs r3, #0
	bl sub_804E958
_080C39AA:
	mov r0, sb
	bl sub_8008910
	adds r4, r0, #0
	ldr r0, _080C39F8 @ =0x0000083C
	add r0, sb
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r2, r0, #0
	movs r3, #0x80
	lsls r3, r3, #1
	adds r5, r4, #0
	lsls r2, r2, #5
	ldr r7, _080C39FC @ =0x06010000
	adds r2, r2, r7
	add r0, sp, #0x14
	mov r1, r8
	bl sub_8008F0C
	add r0, sp, #0x14
	mov r8, r0
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080C3A00
	cmp r1, #0
	beq _080C39EE
	adds r0, r1, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C39EE:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080C3AC6
	.align 2, 0
_080C39F8: .4byte 0x0000083C
_080C39FC: .4byte 0x06010000
_080C3A00:
	str r1, [sp, #0x38]
	movs r0, #1
	str r0, [sp, #0x34]
	ldr r0, [r5]
	adds r6, r1, #0
	subs r0, r6, r0
	asrs r4, r0, #4
	str r4, [sp, #0x30]
	add r1, sp, #0x34
	add r0, sp, #0x30
	cmp r4, #1
	bhs _080C3A1A
	adds r0, r1, #0
_080C3A1A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C3A38
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sl, r4
	cmp r0, #0
	bne _080C3A3C
	mov r0, sl
	bl sub_80D3BC0
	b _080C3A3C
_080C3A38:
	movs r0, #0
	mov sl, r0
_080C3A3C:
	adds r4, r0, #0
	str r4, [sp, #0x3c]
	ldr r2, [r5]
	adds r3, r4, #0
	ldr r7, [sp, #0x38]
	cmp r2, r7
	beq _080C3A64
_080C3A4A:
	cmp r3, #0
	beq _080C3A5A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C3A5A:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x38]
	cmp r2, r0
	bne _080C3A4A
_080C3A64:
	adds r4, r3, #0
	ldr r0, [sp, #0x34]
	cmp r0, #1
	bne _080C3A80
	cmp r4, #0
	beq _080C3A7C
	adds r0, r4, #0
	mov r1, r8
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080C3A7C:
	adds r4, #0x10
	b _080C3AA2
_080C3A80:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080C3AA0
_080C3A88:
	cmp r2, #0
	beq _080C3A98
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C3A98:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C3A88
_080C3AA0:
	adds r4, r2, #0
_080C3AA2:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C3AB2
_080C3AAC:
	adds r1, #0x10
	cmp r1, r2
	bne _080C3AAC
_080C3AB2:
	cmp r0, #0
	beq _080C3ABA
	bl sub_80D0260
_080C3ABA:
	ldr r0, [sp, #0x3c]
	add r0, sl
	ldr r7, [sp, #0x3c]
	str r7, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080C3AC6:
	ldr r0, _080C3B08 @ =0x0000097B
	add r0, sb
	ldrb r1, [r0]
	cmp r1, #0
	bne _080C3AF6
	ldr r0, _080C3B0C @ =0x0000097F
	add r0, sb
	strb r1, [r0]
	ldr r1, _080C3B10 @ =0x0000089C
	add r1, sb
	movs r0, #5
	str r0, [r1]
	movs r0, #0x81
	lsls r0, r0, #4
	add r0, sb
	movs r1, #0x80
	lsls r1, r1, #1
	bl sub_8008C28
	ldr r0, _080C3B14 @ =0x00000818
	add r0, sb
	movs r1, #0xbb
	bl sub_8008B6C
_080C3AF6:
	add sp, #0x40
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080C3B08: .4byte 0x0000097B
_080C3B0C: .4byte 0x0000097F
_080C3B10: .4byte 0x0000089C
_080C3B14: .4byte 0x00000818

	thumb_func_start sub_80C3B18
sub_80C3B18: @ 0x080C3B18
	push {r4, r5, lr}
	sub sp, #0x1c
	adds r2, r0, #0
	mov r1, sp
	ldr r0, _080C3B58 @ =gUnknown_08108004
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
	ldr r0, [r0]
	str r0, [r1]
	ldr r0, _080C3B5C @ =0x00000984
	adds r1, r2, r0
	movs r3, #0x98
	lsls r3, r3, #4
	adds r0, r2, r3
	ldr r0, [r0]
	lsls r0, r0, #2
	add r0, sp
	ldr r0, [r0]
	str r0, [r1]
	ldr r4, _080C3B60 @ =0x00000988
	adds r0, r2, r4
	ldrb r1, [r0]
	cmp r1, #2
	bhi _080C3B64
	movs r5, #0x8b
	lsls r5, r5, #4
	adds r1, r2, r5
	movs r0, #0
	b _080C3BEC
	.align 2, 0
_080C3B58: .4byte gUnknown_08108004
_080C3B5C: .4byte 0x00000984
_080C3B60: .4byte 0x00000988
_080C3B64:
	subs r0, r1, #3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _080C3B78
	movs r0, #0x8b
	lsls r0, r0, #4
	adds r1, r2, r0
	movs r0, #1
	b _080C3BEC
_080C3B78:
	subs r0, r1, #6
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _080C3B8C
	movs r3, #0x8b
	lsls r3, r3, #4
	adds r1, r2, r3
	movs r0, #2
	b _080C3BEC
_080C3B8C:
	adds r0, r1, #0
	subs r0, #9
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _080C3BA2
	movs r4, #0x8b
	lsls r4, r4, #4
	adds r1, r2, r4
	movs r0, #3
	b _080C3BEC
_080C3BA2:
	adds r0, r1, #0
	subs r0, #0xb
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _080C3BB8
	movs r5, #0x8b
	lsls r5, r5, #4
	adds r1, r2, r5
	movs r0, #4
	b _080C3BEC
_080C3BB8:
	adds r0, r1, #0
	subs r0, #0xe
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _080C3BCE
	movs r0, #0x8b
	lsls r0, r0, #4
	adds r1, r2, r0
	movs r0, #5
	b _080C3BEC
_080C3BCE:
	adds r0, r1, #0
	subs r0, #0x11
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _080C3BE4
	movs r3, #0x8b
	lsls r3, r3, #4
	adds r1, r2, r3
	movs r0, #6
	b _080C3BEC
_080C3BE4:
	movs r4, #0x8b
	lsls r4, r4, #4
	adds r1, r2, r4
	movs r0, #7
_080C3BEC:
	str r0, [r1]
	ldr r1, _080C3C10 @ =gUnknown_08107FE0
	movs r5, #0x8b
	lsls r5, r5, #4
	adds r0, r2, r5
	ldr r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrb r1, [r0, #1]
	lsls r0, r1, #1
	adds r0, r0, r1
	ldr r3, _080C3C14 @ =0x0000097C
	adds r1, r2, r3
	strb r0, [r1]
	add sp, #0x1c
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080C3C10: .4byte gUnknown_08107FE0
_080C3C14: .4byte 0x0000097C

	thumb_func_start sub_80C3C18
sub_80C3C18: @ 0x080C3C18
	push {r4, lr}
	ldr r1, _080C3CE0 @ =0x000008BC
	adds r2, r0, r1
	movs r1, #2
	str r1, [r2]
	ldr r2, _080C3CE4 @ =0x000008C4
	adds r1, r0, r2
	movs r2, #0
	movs r3, #1
	strb r3, [r1]
	ldr r4, _080C3CE8 @ =0x000008C5
	adds r1, r0, r4
	strb r2, [r1]
	subs r4, #0x29
	adds r1, r0, r4
	str r2, [r1]
	adds r4, #8
	adds r1, r0, r4
	str r2, [r1]
	subs r4, #4
	adds r1, r0, r4
	str r2, [r1]
	adds r4, #8
	adds r1, r0, r4
	str r2, [r1]
	adds r4, #4
	adds r1, r0, r4
	str r2, [r1]
	adds r4, #0xbc
	adds r1, r0, r4
	strb r3, [r1]
	adds r4, #1
	adds r1, r0, r4
	strb r2, [r1]
	adds r4, #1
	adds r1, r0, r4
	strb r2, [r1]
	adds r4, #1
	adds r1, r0, r4
	strb r2, [r1]
	adds r4, #1
	adds r1, r0, r4
	strb r3, [r1]
	ldr r3, _080C3CEC @ =0x0000096D
	adds r1, r0, r3
	strb r2, [r1]
	adds r4, #4
	adds r1, r0, r4
	strb r2, [r1]
	adds r3, #2
	adds r1, r0, r3
	strb r2, [r1]
	subs r4, #2
	adds r1, r0, r4
	strb r2, [r1]
	adds r3, #9
	adds r1, r0, r3
	strb r2, [r1]
	adds r4, #0xc
	adds r1, r0, r4
	strb r2, [r1]
	adds r3, #1
	adds r1, r0, r3
	strb r2, [r1]
	subs r4, #0xc6
	adds r3, r0, r4
	movs r1, #0x78
	strb r1, [r3]
	ldr r1, _080C3CF0 @ =0x000008B5
	adds r3, r0, r1
	movs r1, #0x98
	strb r1, [r3]
	ldr r3, _080C3CF4 @ =0x000008B7
	adds r1, r0, r3
	strb r2, [r1]
	adds r4, #2
	adds r1, r0, r4
	strb r2, [r1]
	adds r3, #2
	adds r1, r0, r3
	strb r2, [r1]
	adds r4, #2
	adds r1, r0, r4
	strb r2, [r1]
	ldr r1, _080C3CF8 @ =0x0000097B
	adds r3, r0, r1
	movs r1, #0x19
	strb r1, [r3]
	ldr r3, _080C3CFC @ =0x0000097E
	adds r1, r0, r3
	strb r2, [r1]
	adds r4, #0xc5
	adds r1, r0, r4
	strb r2, [r1]
	ldr r1, _080C3D00 @ =0x0000097F
	adds r0, r0, r1
	strb r2, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080C3CE0: .4byte 0x000008BC
_080C3CE4: .4byte 0x000008C4
_080C3CE8: .4byte 0x000008C5
_080C3CEC: .4byte 0x0000096D
_080C3CF0: .4byte 0x000008B5
_080C3CF4: .4byte 0x000008B7
_080C3CF8: .4byte 0x0000097B
_080C3CFC: .4byte 0x0000097E
_080C3D00: .4byte 0x0000097F

	thumb_func_start sub_80C3D04
sub_80C3D04: @ 0x080C3D04
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xa8
	adds r7, r0, #0
	movs r0, #0
	str r0, [sp, #0x80]
	movs r1, #0
	str r1, [sp, #0x84]
	movs r2, #0
	str r2, [sp, #0x88]
	movs r3, #0
	str r3, [sp, #0x8c]
	movs r4, #0
	str r4, [sp, #0x90]
	movs r6, #0
	str r6, [sp, #0x94]
	str r0, [sp, #0x98]
	str r1, [sp, #0x9c]
	str r2, [sp, #0xa0]
	ldr r3, _080C3DB4 @ =0x00000904
	adds r0, r7, r3
	movs r1, #0x18
_080C3D36:
	strb r2, [r0]
	strb r2, [r0, #1]
	adds r0, #4
	subs r1, #1
	cmp r1, #0
	bge _080C3D36
	adds r0, r7, #0
	bl sub_8008918
	add r2, sp, #0xc
	movs r4, #0xba
	lsls r4, r4, #5
	adds r1, r4, #0
	strh r1, [r2]
	strh r1, [r0]
	ldr r6, _080C3DB8 @ =0x0000051C
	ldr r0, [r6, r7]
	mov sl, r0
	adds r0, r7, #0
	bl sub_80088DC
	mov sb, r0
	adds r0, r7, #0
	bl sub_8008920
	str r0, [sp, #0xa4]
	adds r0, r7, #0
	bl sub_8008918
	adds r5, r0, #0
	adds r0, r7, #0
	bl sub_8008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl sub_800894C
	ldr r2, _080C3DBC @ =0x00000814
	adds r1, r7, r2
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, sl
	mov r1, sb
	ldr r2, [sp, #0xa4]
	adds r3, r5, #0
	bl sub_8050D3C
	ldr r4, [r6, r7]
	adds r0, r7, #0
	bl sub_80C7B64
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_8050E50
	ldr r3, _080C3DC0 @ =0x0000089C
	adds r0, r7, r3
	bl _080C5144
	.align 2, 0
_080C3DB4: .4byte 0x00000904
_080C3DB8: .4byte 0x0000051C
_080C3DBC: .4byte 0x00000814
_080C3DC0: .4byte 0x0000089C

	thumb_func_start sub_080C3DC4
sub_080C3DC4: @ 0x080C3DC4
	adds r0, r7, #0
	bl sub_80087C8
	adds r0, r7, #0
	bl sub_80088B8
	ldr r6, _080C3E2C @ =0x0000051C
	adds r4, r7, r6
	ldr r0, [r4]
	bl sub_8050D34
	adds r6, r0, #0
	ldr r4, [r4]
	mov sb, r4
	adds r0, r7, #0
	bl sub_80088DC
	mov r8, r0
	adds r0, r7, #0
	bl sub_8008920
	mov sl, r0
	adds r0, r7, #0
	bl sub_8008918
	adds r5, r0, #0
	adds r0, r7, #0
	bl sub_8008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl sub_800894C
	ldr r2, _080C3E30 @ =0x00000814
	adds r1, r7, r2
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, sb
	mov r1, r8
	mov r2, sl
	adds r3, r5, #0
	bl sub_8050D3C
	cmp r0, #6
	bls _080C3E22
	b _080C4128
_080C3E22:
	lsls r0, r0, #2
	ldr r1, _080C3E34 @ =_080C3E38
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080C3E2C: .4byte 0x0000051C
_080C3E30: .4byte 0x00000814
_080C3E34: .4byte _080C3E38
_080C3E38: @ jump table
	.4byte _080C3E54 @ case 0
	.4byte _080C4128 @ case 1
	.4byte _080C4128 @ case 2
	.4byte _080C3FA0 @ case 3
	.4byte _080C4128 @ case 4
	.4byte _080C4128 @ case 5
	.4byte _080C4128 @ case 6
_080C3E54:
	ldr r3, [sp, #0x80]
	cmp r3, #8
	bne _080C3E68
	ldr r4, _080C3E64 @ =0x0000089C
	adds r1, r7, r4
	movs r0, #1
	str r0, [r1]
	b _080C4128
	.align 2, 0
_080C3E64: .4byte 0x0000089C
_080C3E68:
	ldr r6, [sp, #0x80]
	cmp r6, #5
	bne _080C3F2C
	movs r0, #1
	str r0, [sp, #0x9c]
	ldr r1, [sp, #0xa0]
	cmp r1, #0
	bne _080C3E7A
	b _080C4128
_080C3E7A:
	ldr r2, _080C3F1C @ =0x0000051C
	adds r0, r7, r2
	ldr r0, [r0]
	bl sub_8050D5C
	movs r3, #6
	str r3, [sp, #0x80]
	movs r4, #0
	str r4, [sp, #0x84]
	adds r0, r7, #0
	bl sub_80C3C18
	movs r2, #0
	ldr r6, _080C3F20 @ =0x00000904
	adds r0, r7, r6
	movs r1, #0x18
_080C3E9A:
	strb r2, [r0]
	strb r2, [r0, #1]
	adds r0, #4
	subs r1, #1
	cmp r1, #0
	bge _080C3E9A
	ldr r0, _080C3F24 @ =0x00000544
	adds r4, r7, r0
	ldr r2, [r4]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _080C3ED4
	ldr r1, _080C3F28 @ =0x00000889
	adds r0, r2, #0
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl sub_8009378
	adds r0, r7, #0
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [r4]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
_080C3ED4:
	ldr r0, [r4]
	ldr r0, [r0]
	rsbs r2, r0, #0
	orrs r2, r0
	cmp r2, #0
	bge _080C3EF6
	ldr r1, _080C3F24 @ =0x00000544
	adds r4, r7, r1
_080C3EE4:
	adds r0, r7, #0
	bl sub_80087C8
	ldr r0, [r4]
	ldr r0, [r0]
	rsbs r2, r0, #0
	orrs r2, r0
	cmp r2, #0
	blt _080C3EE4
_080C3EF6:
	ldr r2, _080C3F24 @ =0x00000544
	adds r4, r7, r2
	ldr r0, [r4]
	ldr r1, _080C3F28 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl sub_800934C
	adds r0, r7, #0
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [r4]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
	b _080C4128
	.align 2, 0
_080C3F1C: .4byte 0x0000051C
_080C3F20: .4byte 0x00000904
_080C3F24: .4byte 0x00000544
_080C3F28: .4byte 0x00000889
_080C3F2C:
	ldr r3, [sp, #0x80]
	cmp r3, #4
	bne _080C3F50
	movs r4, #1
	str r4, [sp, #0x94]
	ldr r6, [sp, #0x98]
	cmp r6, #0
	bne _080C3F3E
	b _080C4128
_080C3F3E:
	ldr r1, _080C3F4C @ =0x0000051C
	adds r0, r7, r1
	ldr r0, [r0]
	bl sub_8050D5C
	movs r2, #5
	b _080C3F6E
	.align 2, 0
_080C3F4C: .4byte 0x0000051C
_080C3F50:
	ldr r4, [sp, #0x80]
	cmp r4, #3
	bne _080C3F7C
	movs r6, #1
	str r6, [sp, #0x8c]
	ldr r0, [sp, #0x90]
	cmp r0, #0
	bne _080C3F62
	b _080C4128
_080C3F62:
	ldr r1, _080C3F78 @ =0x0000051C
	adds r0, r7, r1
	ldr r0, [r0]
	bl sub_8050D5C
	movs r2, #4
_080C3F6E:
	str r2, [sp, #0x80]
	movs r3, #0
	str r3, [sp, #0x84]
	b _080C4128
	.align 2, 0
_080C3F78: .4byte 0x0000051C
_080C3F7C:
	ldr r4, _080C3F9C @ =0x0000051C
	adds r0, r7, r4
	ldr r0, [r0]
	bl sub_8050D5C
	ldr r6, [sp, #0x80]
	cmp r6, #0
	bne _080C3F8E
	b _080C4128
_080C3F8E:
	cmp r6, #6
	bne _080C3F94
	b _080C4128
_080C3F94:
	adds r6, #1
	str r6, [sp, #0x80]
	b _080C4128
	.align 2, 0
_080C3F9C: .4byte 0x0000051C
_080C3FA0:
	cmp r6, #5
	bgt _080C3FB0
	cmp r6, #4
	blt _080C3FAA
	b _080C4128
_080C3FAA:
	cmp r6, #1
	beq _080C3FC8
	b _080C3FB6
_080C3FB0:
	cmp r6, #6
	bne _080C3FB6
	b _080C40C8
_080C3FB6:
	ldr r1, _080C3FC4 @ =0x0000051C
	adds r0, r7, r1
	ldr r0, [r0]
	bl sub_8050D74
	b _080C4128
	.align 2, 0
_080C3FC4: .4byte 0x0000051C
_080C3FC8:
	ldr r2, [sp, #0x80]
	cmp r2, #8
	bls _080C3FD0
	b _080C4128
_080C3FD0:
	lsls r0, r2, #2
	ldr r1, _080C3FDC @ =_080C3FE0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080C3FDC: .4byte _080C3FE0
_080C3FE0: @ jump table
	.4byte _080C4004 @ case 0
	.4byte _080C4128 @ case 1
	.4byte _080C4024 @ case 2
	.4byte _080C403C @ case 3
	.4byte _080C4054 @ case 4
	.4byte _080C406C @ case 5
	.4byte _080C4084 @ case 6
	.4byte _080C4128 @ case 7
	.4byte _080C40B0 @ case 8
_080C4004:
	ldr r3, _080C4014 @ =0x0000051C
	adds r0, r7, r3
	ldr r0, [r0]
	ldr r1, _080C4018 @ =gUnknown_08108020
	ldr r2, _080C401C @ =gUnknown_0810803C
	ldr r3, _080C4020 @ =gUnknown_08108040
	b _080C4090
	.align 2, 0
_080C4014: .4byte 0x0000051C
_080C4018: .4byte gUnknown_08108020
_080C401C: .4byte gUnknown_0810803C
_080C4020: .4byte gUnknown_08108040
_080C4024:
	ldr r4, _080C4034 @ =0x0000051C
	adds r0, r7, r4
	ldr r0, [r0]
	ldr r1, _080C4038 @ =gUnknown_08108044
	bl sub_8050D8C
	b _080C4128
	.align 2, 0
_080C4034: .4byte 0x0000051C
_080C4038: .4byte gUnknown_08108044
_080C403C:
	ldr r6, _080C404C @ =0x0000051C
	adds r0, r7, r6
	ldr r0, [r0]
	ldr r1, _080C4050 @ =gUnknown_08108070
	bl sub_8050D8C
	b _080C4128
	.align 2, 0
_080C404C: .4byte 0x0000051C
_080C4050: .4byte gUnknown_08108070
_080C4054:
	ldr r1, _080C4064 @ =0x0000051C
	adds r0, r7, r1
	ldr r0, [r0]
	ldr r1, _080C4068 @ =gUnknown_081080EC
	bl sub_8050D8C
	b _080C4128
	.align 2, 0
_080C4064: .4byte 0x0000051C
_080C4068: .4byte gUnknown_081080EC
_080C406C:
	ldr r2, _080C407C @ =0x0000051C
	adds r0, r7, r2
	ldr r0, [r0]
	ldr r1, _080C4080 @ =gUnknown_08108168
	bl sub_8050D8C
	b _080C4128
	.align 2, 0
_080C407C: .4byte 0x0000051C
_080C4080: .4byte gUnknown_08108168
_080C4084:
	ldr r3, _080C40A0 @ =0x0000051C
	adds r0, r7, r3
	ldr r0, [r0]
	ldr r1, _080C40A4 @ =gUnknown_081081D8
	ldr r2, _080C40A8 @ =gUnknown_081081E4
	ldr r3, _080C40AC @ =gUnknown_081081F4
_080C4090:
	movs r4, #0
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	bl sub_8050E30
	b _080C4128
	.align 2, 0
_080C40A0: .4byte 0x0000051C
_080C40A4: .4byte gUnknown_081081D8
_080C40A8: .4byte gUnknown_081081E4
_080C40AC: .4byte gUnknown_081081F4
_080C40B0:
	ldr r4, _080C40C0 @ =0x0000051C
	adds r0, r7, r4
	ldr r0, [r0]
	ldr r1, _080C40C4 @ =gUnknown_08108204
	bl sub_8050D8C
	b _080C4128
	.align 2, 0
_080C40C0: .4byte 0x0000051C
_080C40C4: .4byte gUnknown_08108204
_080C40C8:
	ldr r6, _080C40DC @ =0x0000051C
	adds r0, r7, r6
	ldr r0, [r0]
	bl sub_8050DF0
	cmp r0, #1
	beq _080C40E0
	cmp r0, #2
	beq _080C40F8
	b _080C4128
	.align 2, 0
_080C40DC: .4byte 0x0000051C
_080C40E0:
	ldr r0, [sp, #0x80]
	cmp r0, #0
	bne _080C40EC
	movs r1, #1
	str r1, [sp, #0x80]
	b _080C4128
_080C40EC:
	ldr r2, [sp, #0x80]
	cmp r2, #6
	bne _080C4128
	movs r3, #7
	str r3, [sp, #0x80]
	b _080C4128
_080C40F8:
	ldr r4, [sp, #0x80]
	cmp r4, #0
	bne _080C4104
	movs r6, #7
	str r6, [sp, #0x80]
	b _080C4128
_080C4104:
	ldr r0, [sp, #0x80]
	cmp r0, #6
	bne _080C4128
	movs r1, #1
	str r1, [sp, #0x80]
	movs r2, #0
	str r2, [sp, #0x84]
	movs r3, #0
	str r3, [sp, #0x8c]
	movs r4, #0
	str r4, [sp, #0x90]
	movs r6, #0
	str r6, [sp, #0x94]
	movs r0, #0
	str r0, [sp, #0x98]
	movs r1, #0
	str r1, [sp, #0x9c]
	str r2, [sp, #0xa0]
_080C4128:
	ldr r3, [sp, #0x80]
	cmp r3, #4
	bne _080C4130
	b _080C45EC
_080C4130:
	cmp r3, #4
	bgt _080C413C
	cmp r3, #3
	beq _080C414A
	bl _080C513A
_080C413C:
	ldr r4, [sp, #0x80]
	cmp r4, #5
	bne _080C4146
	bl sub_080C4AE0
_080C4146:
	bl _080C513A
_080C414A:
	ldr r6, [sp, #0x8c]
	cmp r6, #0
	bne _080C4154
	bl _080C513A
_080C4154:
	ldr r0, [sp, #0x84]
	cmp r0, #0
	bne _080C41A8
	ldr r2, _080C4198 @ =0x000008C5
	adds r1, r7, r2
	movs r0, #1
	strb r0, [r1]
	ldr r3, _080C419C @ =0x00000818
	adds r0, r7, r3
	movs r1, #0xbe
	bl sub_8008B6C
	add r0, sp, #0x10
	adds r1, r7, #0
	movs r2, #1
	bl sub_80C7B7C
	ldr r0, [sp, #0x10]
	adds r0, #8
	ldr r4, _080C41A0 @ =0x0000097D
	adds r1, r7, r4
	strb r0, [r1]
	add r0, sp, #0x14
	adds r1, r7, #0
	movs r2, #1
	bl sub_80C7B7C
	ldr r0, [sp, #0x14]
	lsrs r0, r0, #8
	adds r0, #0x18
	ldr r6, _080C41A4 @ =0x0000097E
	adds r1, r7, r6
	bl _080C4B28
	.align 2, 0
_080C4198: .4byte 0x000008C5
_080C419C: .4byte 0x00000818
_080C41A0: .4byte 0x0000097D
_080C41A4: .4byte 0x0000097E
_080C41A8:
	ldr r0, [sp, #0x84]
	cmp r0, #0x14
	bne _080C41BC
	ldr r2, _080C41B8 @ =0x00000908
	adds r1, r7, r2
	bl _080C4B4A
	.align 2, 0
_080C41B8: .4byte 0x00000908
_080C41BC:
	ldr r3, [sp, #0x84]
	cmp r3, #0x1e
	bne _080C4214
	ldr r4, _080C4204 @ =0x000008C5
	adds r1, r7, r4
	movs r0, #1
	strb r0, [r1]
	add r0, sp, #0x18
	adds r1, r7, #0
	movs r2, #0x17
	bl sub_80C7B7C
	ldr r0, [sp, #0x18]
	adds r0, #8
	ldr r6, _080C4208 @ =0x0000097D
	adds r1, r7, r6
	strb r0, [r1]
	add r0, sp, #0x1c
	adds r1, r7, #0
	movs r2, #0x17
	bl sub_80C7B7C
	ldr r0, [sp, #0x1c]
	lsrs r0, r0, #8
	adds r0, #0x18
	ldr r2, _080C420C @ =0x0000097E
	adds r1, r7, r2
	strb r0, [r1]
	ldr r3, _080C4210 @ =0x00000818
	adds r0, r7, r3
_080C41F8:
	movs r1, #0xbe
	bl sub_8008B6C
	movs r5, #0x1f
	bl _080C5138
	.align 2, 0
_080C4204: .4byte 0x000008C5
_080C4208: .4byte 0x0000097D
_080C420C: .4byte 0x0000097E
_080C4210: .4byte 0x00000818
_080C4214:
	ldr r4, [sp, #0x84]
	cmp r4, #0x32
	bne _080C4224
	movs r6, #0x96
	lsls r6, r6, #4
	adds r1, r7, r6
	bl sub_080C4BBC
_080C4224:
	ldr r0, [sp, #0x84]
	cmp r0, #0x3c
	bne _080C4314
	ldr r1, _080C42FC @ =0x000008C5
	adds r0, r7, r1
	movs r1, #0
	strb r1, [r0]
	ldr r2, _080C4300 @ =0x00000908
	adds r0, r7, r2
	strb r1, [r0]
	movs r3, #0x96
	lsls r3, r3, #4
	adds r0, r7, r3
	strb r1, [r0]
	ldr r6, _080C4304 @ =0x00000544
	adds r4, r7, r6
	ldr r2, [r4]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _080C426E
	ldr r1, _080C4308 @ =0x00000889
	adds r0, r2, #0
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl sub_8009378
	adds r0, r7, #0
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [r4]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
_080C426E:
	ldr r0, [r4]
	ldr r0, [r0]
	rsbs r2, r0, #0
	orrs r2, r0
	movs r5, #0x3d
	cmp r2, #0
	bge _080C4298
_080C427C:
	adds r0, r7, #0
	bl sub_80087C8
	adds r0, r7, #0
	bl sub_80C2D54
	ldr r1, _080C4304 @ =0x00000544
	adds r0, r7, r1
	ldr r0, [r0]
	ldr r0, [r0]
	rsbs r2, r0, #0
	orrs r2, r0
	cmp r2, #0
	blt _080C427C
_080C4298:
	ldr r2, _080C4304 @ =0x00000544
	adds r4, r7, r2
	ldr r0, [r4]
	ldr r1, _080C4308 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl sub_800934C
	adds r0, r7, #0
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [r4]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
	ldr r3, _080C430C @ =0x000008B4
	adds r1, r7, r3
	movs r0, #0x78
	strb r0, [r1]
	ldr r6, _080C4310 @ =0x000008B5
	adds r1, r7, r6
	movs r0, #0x51
	strb r0, [r1]
	ldr r0, [r4]
	ldr r0, [r0]
	rsbs r1, r0, #0
	orrs r1, r0
	cmp r1, #0
	blt _080C42DA
	bl _080C5138
_080C42DA:
	adds r0, r7, #0
	bl sub_80087C8
	adds r0, r7, #0
	bl sub_80C2D54
	ldr r1, _080C4304 @ =0x00000544
	adds r0, r7, r1
	ldr r0, [r0]
	ldr r0, [r0]
	rsbs r1, r0, #0
	orrs r1, r0
	cmp r1, #0
	blt _080C42DA
	bl _080C5138
	.align 2, 0
_080C42FC: .4byte 0x000008C5
_080C4300: .4byte 0x00000908
_080C4304: .4byte 0x00000544
_080C4308: .4byte 0x00000889
_080C430C: .4byte 0x000008B4
_080C4310: .4byte 0x000008B5
_080C4314:
	ldr r5, [sp, #0x84]
	adds r5, #1
	ldr r2, [sp, #0x84]
	cmp r2, #0x3c
	bgt _080C4322
	bl _080C5138
_080C4322:
	ldr r3, _080C433C @ =0x000008BC
	adds r0, r7, r3
	ldr r0, [r0]
	cmp r0, #8
	bls _080C4330
	bl _080C5138
_080C4330:
	lsls r0, r0, #2
	ldr r1, _080C4340 @ =_080C4344
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080C433C: .4byte 0x000008BC
_080C4340: .4byte _080C4344
_080C4344: @ jump table
	.4byte _080C4368 @ case 0
	.4byte _080C5138 @ case 1
	.4byte _080C43DC @ case 2
	.4byte _080C43F4 @ case 3
	.4byte _080C4470 @ case 4
	.4byte _080C44A8 @ case 5
	.4byte _080C44DC @ case 6
	.4byte _080C4514 @ case 7
	.4byte _080C454C @ case 8
_080C4368:
	movs r4, #0x8c
	lsls r4, r4, #4
	adds r1, r7, r4
	movs r0, #2
	str r0, [r1]
	ldr r6, _080C43C8 @ =0x000008BC
	adds r1, r7, r6
	movs r0, #8
	str r0, [r1]
	ldr r1, _080C43CC @ =0x000008C4
	adds r0, r7, r1
	movs r2, #1
	strb r2, [r0]
	ldr r3, _080C43D0 @ =0x000008B5
	adds r1, r7, r3
	ldrb r0, [r1]
	subs r0, #0xa
	strb r0, [r1]
	adds r4, #5
	adds r0, r7, r4
	strb r2, [r0]
	subs r6, #0xa4
	adds r0, r7, r6
	movs r1, #0xbe
	bl sub_8008B6C
	add r0, sp, #0x20
	adds r1, r7, #0
	movs r2, #1
	bl sub_80C7B7C
	ldr r0, [sp, #0x20]
	adds r0, #8
	ldr r2, _080C43D4 @ =0x0000097D
	adds r1, r7, r2
	strb r0, [r1]
	add r0, sp, #0x24
	adds r1, r7, #0
	movs r2, #1
	bl sub_80C7B7C
	ldr r0, [sp, #0x24]
	lsrs r0, r0, #8
	adds r0, #0x18
	ldr r3, _080C43D8 @ =0x0000097E
	adds r1, r7, r3
	bl _080C5026
	.align 2, 0
_080C43C8: .4byte 0x000008BC
_080C43CC: .4byte 0x000008C4
_080C43D0: .4byte 0x000008B5
_080C43D4: .4byte 0x0000097D
_080C43D8: .4byte 0x0000097E
_080C43DC:
	ldr r4, _080C43EC @ =0x000008BC
	adds r1, r7, r4
	movs r0, #5
	str r0, [r1]
	ldr r6, _080C43F0 @ =0x000008C4
	adds r1, r7, r6
	bl _080C5024
	.align 2, 0
_080C43EC: .4byte 0x000008BC
_080C43F0: .4byte 0x000008C4
_080C43F4:
	movs r0, #0x8c
	lsls r0, r0, #4
	adds r1, r7, r0
	movs r0, #6
	str r0, [r1]
	ldr r2, _080C4454 @ =0x000008BC
	adds r1, r7, r2
	movs r0, #8
	str r0, [r1]
	ldr r3, _080C4458 @ =0x000008C4
	adds r0, r7, r3
	movs r2, #1
	strb r2, [r0]
	ldr r4, _080C445C @ =0x000008B5
	adds r1, r7, r4
	ldrb r0, [r1]
	subs r0, #0xa
	strb r0, [r1]
	ldr r6, _080C4460 @ =0x000008C5
	adds r0, r7, r6
	strb r2, [r0]
	ldr r1, _080C4464 @ =0x00000818
	adds r0, r7, r1
	movs r1, #0xbe
	bl sub_8008B6C
	add r0, sp, #0x28
	adds r1, r7, #0
	movs r2, #0x17
	bl sub_80C7B7C
	ldr r0, [sp, #0x28]
	adds r0, #8
	ldr r2, _080C4468 @ =0x0000097D
	adds r1, r7, r2
	strb r0, [r1]
	add r0, sp, #0x2c
	adds r1, r7, #0
	movs r2, #0x17
	bl sub_80C7B7C
	ldr r0, [sp, #0x2c]
	lsrs r0, r0, #8
	adds r0, #0x18
	ldr r3, _080C446C @ =0x0000097E
	adds r1, r7, r3
	bl _080C5026
	.align 2, 0
_080C4454: .4byte 0x000008BC
_080C4458: .4byte 0x000008C4
_080C445C: .4byte 0x000008B5
_080C4460: .4byte 0x000008C5
_080C4464: .4byte 0x00000818
_080C4468: .4byte 0x0000097D
_080C446C: .4byte 0x0000097E
_080C4470:
	ldr r4, _080C449C @ =0x000008B4
	adds r1, r7, r4
	ldrb r0, [r1]
	subs r0, #1
	movs r2, #0
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r5, [sp, #0x84]
	adds r5, #1
	cmp r0, #0x68
	beq _080C448C
	bl _080C5138
_080C448C:
	ldr r6, _080C44A0 @ =0x000008BC
	adds r0, r7, r6
	str r2, [r0]
	ldr r0, _080C44A4 @ =0x000008C4
	adds r1, r7, r0
	bl _080C5044
	.align 2, 0
_080C449C: .4byte 0x000008B4
_080C44A0: .4byte 0x000008BC
_080C44A4: .4byte 0x000008C4
_080C44A8:
	ldr r2, _080C44D0 @ =0x000008B4
	adds r1, r7, r2
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r5, [sp, #0x84]
	adds r5, #1
	cmp r0, #0x88
	beq _080C44C2
	bl _080C5138
_080C44C2:
	ldr r3, _080C44D4 @ =0x000008BC
	adds r1, r7, r3
	movs r0, #7
	str r0, [r1]
	ldr r4, _080C44D8 @ =0x000008C4
	bl _080C5042
	.align 2, 0
_080C44D0: .4byte 0x000008B4
_080C44D4: .4byte 0x000008BC
_080C44D8: .4byte 0x000008C4
_080C44DC:
	ldr r6, _080C4508 @ =0x000008B5
	adds r1, r7, r6
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r5, [sp, #0x84]
	adds r5, #1
	cmp r0, #0x31
	beq _080C44F6
	bl _080C5138
_080C44F6:
	ldr r0, _080C450C @ =0x000008BC
	adds r1, r7, r0
	movs r0, #4
	str r0, [r1]
	ldr r2, _080C4510 @ =0x000008C4
	adds r1, r7, r2
	bl _080C5044
	.align 2, 0
_080C4508: .4byte 0x000008B5
_080C450C: .4byte 0x000008BC
_080C4510: .4byte 0x000008C4
_080C4514:
	ldr r3, _080C4540 @ =0x000008B5
	adds r1, r7, r3
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r5, [sp, #0x84]
	adds r5, #1
	cmp r0, #0x71
	beq _080C452E
	bl _080C5138
_080C452E:
	ldr r4, _080C4544 @ =0x000008BC
	adds r1, r7, r4
	movs r0, #3
	str r0, [r1]
	ldr r6, _080C4548 @ =0x000008C4
	adds r1, r7, r6
	bl _080C5044
	.align 2, 0
_080C4540: .4byte 0x000008B5
_080C4544: .4byte 0x000008BC
_080C4548: .4byte 0x000008C4
_080C454C:
	ldr r0, [sp, #0x88]
	adds r0, #1
	str r0, [sp, #0x88]
	cmp r0, #0x14
	bne _080C4584
	movs r1, #0x8c
	lsls r1, r1, #4
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #6
	bne _080C456C
	movs r2, #0x96
	lsls r2, r2, #4
	adds r1, r7, r2
	bl _080C5024
_080C456C:
	ldr r5, [sp, #0x84]
	adds r5, #1
	cmp r0, #2
	beq _080C4578
	bl _080C5138
_080C4578:
	ldr r3, _080C4580 @ =0x00000908
	adds r1, r7, r3
	bl _080C5044
	.align 2, 0
_080C4580: .4byte 0x00000908
_080C4584:
	ldr r5, [sp, #0x84]
	adds r5, #1
	ldr r4, [sp, #0x88]
	cmp r4, #0x3c
	beq _080C4592
	bl _080C5138
_080C4592:
	movs r6, #0
	str r6, [sp, #0x88]
	ldr r1, _080C45E0 @ =0x000008C5
	adds r0, r7, r1
	strb r6, [r0]
	ldr r3, _080C45E4 @ =0x000008BC
	adds r4, r7, r3
	movs r6, #0x8c
	lsls r6, r6, #4
	adds r1, r7, r6
	ldr r0, [r1]
	str r0, [r4]
	ldr r0, _080C45E8 @ =0x000008C4
	adds r3, r7, r0
	movs r0, #1
	strb r0, [r3]
	subs r6, #0xb
	adds r2, r7, r6
	ldrb r0, [r2]
	adds r0, #0xa
	strb r0, [r2]
	ldr r1, [r1]
	cmp r1, #2
	beq _080C45C6
	bl _080C5138
_080C45C6:
	movs r0, #1
	str r0, [sp, #0x90]
	adds r6, #0x53
	add r0, sp, #0x88
	ldrb r0, [r0]
	strb r0, [r6, r7]
	adds r6, #0x58
	add r0, sp, #0x88
	ldrb r0, [r0]
	strb r0, [r6, r7]
	str r1, [r4]
	add r1, sp, #0x90
	b _080C4AC2
	.align 2, 0
_080C45E0: .4byte 0x000008C5
_080C45E4: .4byte 0x000008BC
_080C45E8: .4byte 0x000008C4
_080C45EC:
	ldr r4, [sp, #0x94]
	cmp r4, #0
	bne _080C45F6
	bl _080C513A
_080C45F6:
	ldr r6, [sp, #0x84]
	cmp r6, #0
	bne _080C4650
	ldr r0, _080C4640 @ =0x000008C5
	adds r1, r7, r0
	movs r0, #1
	strb r0, [r1]
	add r0, sp, #0x30
	adds r1, r7, #0
	movs r2, #3
	bl sub_80C7B7C
	ldr r0, [sp, #0x30]
	adds r0, #8
	ldr r2, _080C4644 @ =0x0000097D
	adds r1, r7, r2
	strb r0, [r1]
	add r0, sp, #0x34
	adds r1, r7, #0
	movs r2, #3
	bl sub_80C7B7C
	ldr r0, [sp, #0x34]
	lsrs r0, r0, #8
	adds r0, #0x18
	ldr r3, _080C4648 @ =0x0000097E
	adds r1, r7, r3
	strb r0, [r1]
	ldr r4, _080C464C @ =0x00000818
	adds r0, r7, r4
	movs r1, #0xbe
	bl sub_8008B6C
	movs r5, #1
	bl _080C5138
	.align 2, 0
_080C4640: .4byte 0x000008C5
_080C4644: .4byte 0x0000097D
_080C4648: .4byte 0x0000097E
_080C464C: .4byte 0x00000818
_080C4650:
	ldr r6, [sp, #0x84]
	cmp r6, #0x14
	bne _080C465E
	movs r0, #0x91
	lsls r0, r0, #4
	adds r1, r7, r0
	b _080C4B4A
_080C465E:
	ldr r1, [sp, #0x84]
	cmp r1, #0x1e
	bne _080C46AC
	ldr r2, _080C469C @ =0x000008C5
	adds r1, r7, r2
	movs r0, #1
	strb r0, [r1]
	add r0, sp, #0x38
	adds r1, r7, #0
	movs r2, #0x14
	bl sub_80C7B7C
	ldr r0, [sp, #0x38]
	adds r0, #8
	ldr r3, _080C46A0 @ =0x0000097D
	adds r1, r7, r3
	strb r0, [r1]
	add r0, sp, #0x3c
	adds r1, r7, #0
	movs r2, #0x14
	bl sub_80C7B7C
	ldr r0, [sp, #0x3c]
	lsrs r0, r0, #8
	adds r0, #0x18
	ldr r4, _080C46A4 @ =0x0000097E
	adds r1, r7, r4
	strb r0, [r1]
	ldr r6, _080C46A8 @ =0x00000818
	adds r0, r7, r6
	b _080C41F8
	.align 2, 0
_080C469C: .4byte 0x000008C5
_080C46A0: .4byte 0x0000097D
_080C46A4: .4byte 0x0000097E
_080C46A8: .4byte 0x00000818
_080C46AC:
	ldr r0, [sp, #0x84]
	cmp r0, #0x32
	bne _080C46BC
	ldr r2, _080C46B8 @ =0x00000954
	b _080C4BBA
	.align 2, 0
_080C46B8: .4byte 0x00000954
_080C46BC:
	ldr r3, [sp, #0x84]
	cmp r3, #0x3c
	bne _080C47AC
	ldr r4, _080C4794 @ =0x000008C5
	adds r0, r7, r4
	movs r1, #0
	strb r1, [r0]
	movs r6, #0x91
	lsls r6, r6, #4
	adds r0, r7, r6
	strb r1, [r0]
	ldr r2, _080C4798 @ =0x00000954
	adds r0, r7, r2
	strb r1, [r0]
	ldr r3, _080C479C @ =0x00000544
	adds r4, r7, r3
	ldr r2, [r4]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _080C4706
	ldr r1, _080C47A0 @ =0x00000889
	adds r0, r2, #0
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl sub_8009378
	adds r0, r7, #0
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [r4]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
_080C4706:
	ldr r0, [r4]
	ldr r0, [r0]
	rsbs r2, r0, #0
	orrs r2, r0
	movs r5, #0x3d
	cmp r2, #0
	bge _080C4730
_080C4714:
	adds r0, r7, #0
	bl sub_80087C8
	adds r0, r7, #0
	bl sub_80C2D54
	ldr r4, _080C479C @ =0x00000544
	adds r0, r7, r4
	ldr r0, [r0]
	ldr r0, [r0]
	rsbs r2, r0, #0
	orrs r2, r0
	cmp r2, #0
	blt _080C4714
_080C4730:
	ldr r6, _080C479C @ =0x00000544
	adds r4, r7, r6
	ldr r0, [r4]
	ldr r1, _080C47A0 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl sub_800934C
	adds r0, r7, #0
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [r4]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
	ldr r0, _080C47A4 @ =0x000008B4
	adds r1, r7, r0
	movs r0, #0x78
	strb r0, [r1]
	ldr r2, _080C47A8 @ =0x000008B5
	adds r1, r7, r2
	movs r0, #0x51
	strb r0, [r1]
	ldr r0, [r4]
	ldr r0, [r0]
	rsbs r1, r0, #0
	orrs r1, r0
	cmp r1, #0
	blt _080C4772
	bl _080C5138
_080C4772:
	adds r0, r7, #0
	bl sub_80087C8
	adds r0, r7, #0
	bl sub_80C2D54
	ldr r3, _080C479C @ =0x00000544
	adds r0, r7, r3
	ldr r0, [r0]
	ldr r0, [r0]
	rsbs r1, r0, #0
	orrs r1, r0
	cmp r1, #0
	blt _080C4772
	bl _080C5138
	.align 2, 0
_080C4794: .4byte 0x000008C5
_080C4798: .4byte 0x00000954
_080C479C: .4byte 0x00000544
_080C47A0: .4byte 0x00000889
_080C47A4: .4byte 0x000008B4
_080C47A8: .4byte 0x000008B5
_080C47AC:
	ldr r5, [sp, #0x84]
	adds r5, #1
	ldr r4, [sp, #0x84]
	cmp r4, #0x3c
	bgt _080C47BA
	bl _080C5138
_080C47BA:
	ldr r6, _080C47D4 @ =0x000008BC
	adds r0, r7, r6
	ldr r0, [r0]
	cmp r0, #8
	bls _080C47C8
	bl _080C5138
_080C47C8:
	lsls r0, r0, #2
	ldr r1, _080C47D8 @ =_080C47DC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080C47D4: .4byte 0x000008BC
_080C47D8: .4byte _080C47DC
_080C47DC: @ jump table
	.4byte _080C4800 @ case 0
	.4byte _080C5138 @ case 1
	.4byte _080C4884 @ case 2
	.4byte _080C489C @ case 3
	.4byte _080C4920 @ case 4
	.4byte _080C4954 @ case 5
	.4byte _080C4988 @ case 6
	.4byte _080C49B8 @ case 7
	.4byte _080C49EC @ case 8
_080C4800:
	movs r0, #0x8c
	lsls r0, r0, #4
	adds r1, r7, r0
	movs r0, #4
	str r0, [r1]
	ldr r2, _080C486C @ =0x000008BC
	adds r1, r7, r2
	movs r0, #8
	str r0, [r1]
	ldr r3, _080C4870 @ =0x000008C4
	adds r0, r7, r3
	movs r2, #1
	strb r2, [r0]
	ldr r4, _080C4874 @ =0x000008B5
	adds r1, r7, r4
	ldrb r0, [r1]
	subs r0, #0xa
	strb r0, [r1]
	ldr r6, _080C4878 @ =0x000008C5
	adds r0, r7, r6
	strb r2, [r0]
	add r0, sp, #0x40
	adds r1, r7, #0
	movs r2, #3
	bl sub_80C7B7C
	ldr r0, [sp, #0x40]
	adds r0, #8
	ldr r2, _080C487C @ =0x0000097D
	adds r1, r7, r2
	strb r0, [r1]
	add r0, sp, #0x44
	adds r1, r7, #0
	movs r2, #3
	bl sub_80C7B7C
	ldr r0, [sp, #0x44]
	lsrs r0, r0, #8
	adds r0, #0x18
	ldr r3, _080C4880 @ =0x0000097E
	adds r1, r7, r3
	strb r0, [r1]
	subs r4, #0x95
	adds r0, r7, r4
	movs r1, #0xbc
	bl sub_8008B6C
	subs r6, #0xad
	adds r0, r7, r6
	movs r1, #0xbe
	bl sub_8008B6C
	bl _080C5028
	.align 2, 0
_080C486C: .4byte 0x000008BC
_080C4870: .4byte 0x000008C4
_080C4874: .4byte 0x000008B5
_080C4878: .4byte 0x000008C5
_080C487C: .4byte 0x0000097D
_080C4880: .4byte 0x0000097E
_080C4884:
	ldr r0, _080C4894 @ =0x000008BC
	adds r1, r7, r0
	movs r0, #5
	str r0, [r1]
	ldr r2, _080C4898 @ =0x000008C4
	adds r1, r7, r2
	b _080C5024
	.align 2, 0
_080C4894: .4byte 0x000008BC
_080C4898: .4byte 0x000008C4
_080C489C:
	movs r3, #0x8c
	lsls r3, r3, #4
	adds r1, r7, r3
	movs r0, #2
	str r0, [r1]
	ldr r4, _080C4908 @ =0x000008BC
	adds r1, r7, r4
	movs r0, #8
	str r0, [r1]
	ldr r6, _080C490C @ =0x000008C4
	adds r0, r7, r6
	movs r2, #1
	strb r2, [r0]
	ldr r0, _080C4910 @ =0x000008B5
	adds r1, r7, r0
	ldrb r0, [r1]
	subs r0, #0xa
	strb r0, [r1]
	ldr r1, _080C4914 @ =0x000008C5
	adds r0, r7, r1
	strb r2, [r0]
	add r0, sp, #0x48
	adds r1, r7, #0
	movs r2, #0x14
	bl sub_80C7B7C
	ldr r0, [sp, #0x48]
	adds r0, #8
	ldr r2, _080C4918 @ =0x0000097D
	adds r1, r7, r2
	strb r0, [r1]
	add r0, sp, #0x4c
	adds r1, r7, #0
	movs r2, #0x14
	bl sub_80C7B7C
	ldr r0, [sp, #0x4c]
	lsrs r0, r0, #8
	adds r0, #0x18
	ldr r3, _080C491C @ =0x0000097E
	adds r1, r7, r3
	strb r0, [r1]
	subs r4, #0x9c
	adds r0, r7, r4
	movs r1, #0xbc
	bl sub_8008B6C
	subs r6, #0xac
	adds r0, r7, r6
	movs r1, #0xbe
	bl sub_8008B6C
	b _080C5028
	.align 2, 0
_080C4908: .4byte 0x000008BC
_080C490C: .4byte 0x000008C4
_080C4910: .4byte 0x000008B5
_080C4914: .4byte 0x000008C5
_080C4918: .4byte 0x0000097D
_080C491C: .4byte 0x0000097E
_080C4920:
	ldr r0, _080C4948 @ =0x000008B4
	adds r1, r7, r0
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r5, [sp, #0x84]
	adds r5, #1
	cmp r0, #0x58
	beq _080C493A
	bl _080C5138
_080C493A:
	ldr r2, _080C494C @ =0x000008BC
	adds r1, r7, r2
	movs r0, #7
	str r0, [r1]
	ldr r3, _080C4950 @ =0x000008C4
	adds r1, r7, r3
	b _080C5044
	.align 2, 0
_080C4948: .4byte 0x000008B4
_080C494C: .4byte 0x000008BC
_080C4950: .4byte 0x000008C4
_080C4954:
	ldr r4, _080C497C @ =0x000008B4
	adds r1, r7, r4
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r5, [sp, #0x84]
	adds r5, #1
	cmp r0, #0x88
	beq _080C496E
	bl _080C5138
_080C496E:
	ldr r6, _080C4980 @ =0x000008BC
	adds r1, r7, r6
	movs r0, #6
	str r0, [r1]
	ldr r0, _080C4984 @ =0x000008C4
	adds r1, r7, r0
	b _080C5044
	.align 2, 0
_080C497C: .4byte 0x000008B4
_080C4980: .4byte 0x000008BC
_080C4984: .4byte 0x000008C4
_080C4988:
	ldr r2, _080C49AC @ =0x000008B5
	adds r1, r7, r2
	ldrb r0, [r1]
	subs r0, #1
	movs r2, #0
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r5, [sp, #0x84]
	adds r5, #1
	cmp r0, #0x31
	beq _080C49A2
	b _080C5138
_080C49A2:
	ldr r3, _080C49B0 @ =0x000008BC
	adds r0, r7, r3
	str r2, [r0]
	ldr r4, _080C49B4 @ =0x000008C4
	b _080C5042
	.align 2, 0
_080C49AC: .4byte 0x000008B5
_080C49B0: .4byte 0x000008BC
_080C49B4: .4byte 0x000008C4
_080C49B8:
	ldr r6, _080C49E0 @ =0x000008B5
	adds r1, r7, r6
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r5, [sp, #0x84]
	adds r5, #1
	cmp r0, #0x71
	beq _080C49D0
	b _080C5138
_080C49D0:
	ldr r0, _080C49E4 @ =0x000008BC
	adds r1, r7, r0
	movs r0, #3
	str r0, [r1]
	ldr r2, _080C49E8 @ =0x000008C4
	adds r1, r7, r2
	b _080C5044
	.align 2, 0
_080C49E0: .4byte 0x000008B5
_080C49E4: .4byte 0x000008BC
_080C49E8: .4byte 0x000008C4
_080C49EC:
	ldr r3, [sp, #0x88]
	adds r3, #1
	str r3, [sp, #0x88]
	cmp r3, #0x14
	bne _080C4A20
	movs r4, #0x8c
	lsls r4, r4, #4
	adds r0, r7, r4
	ldr r0, [r0]
	cmp r0, #4
	bne _080C4A0A
	movs r6, #0x91
	lsls r6, r6, #4
	adds r1, r7, r6
	b _080C5024
_080C4A0A:
	ldr r5, [sp, #0x84]
	adds r5, #1
	cmp r0, #2
	beq _080C4A14
	b _080C5138
_080C4A14:
	ldr r0, _080C4A1C @ =0x00000954
	adds r1, r7, r0
	b _080C5044
	.align 2, 0
_080C4A1C: .4byte 0x00000954
_080C4A20:
	ldr r1, [sp, #0x88]
	cmp r1, #0x32
	bne _080C4A5C
	movs r2, #0x82
	lsls r2, r2, #4
	adds r0, r7, r2
	movs r1, #0x6c
	bl sub_8008B6C
	movs r3, #0x8c
	lsls r3, r3, #4
	adds r0, r7, r3
	ldr r0, [r0]
	cmp r0, #4
	bne _080C4A48
	ldr r4, _080C4A44 @ =0x00000911
	adds r1, r7, r4
	b _080C5024
	.align 2, 0
_080C4A44: .4byte 0x00000911
_080C4A48:
	ldr r5, [sp, #0x84]
	adds r5, #1
	cmp r0, #2
	beq _080C4A52
	b _080C5138
_080C4A52:
	ldr r6, _080C4A58 @ =0x00000955
	adds r1, r7, r6
	b _080C5044
	.align 2, 0
_080C4A58: .4byte 0x00000955
_080C4A5C:
	ldr r5, [sp, #0x84]
	adds r5, #1
	ldr r0, [sp, #0x88]
	cmp r0, #0x3c
	beq _080C4A68
	b _080C5138
_080C4A68:
	movs r1, #0
	str r1, [sp, #0x88]
	ldr r2, _080C4AD4 @ =0x000008C5
	adds r0, r7, r2
	strb r1, [r0]
	ldr r6, _080C4AD8 @ =0x000008BC
	adds r4, r7, r6
	movs r0, #0x8c
	lsls r0, r0, #4
	adds r1, r7, r0
	ldr r0, [r1]
	str r0, [r4]
	subs r2, #1
	adds r3, r7, r2
	movs r0, #1
	strb r0, [r3]
	subs r6, #7
	adds r2, r7, r6
	ldrb r0, [r2]
	adds r0, #0xa
	strb r0, [r2]
	ldr r1, [r1]
	cmp r1, #2
	beq _080C4A9A
	b _080C5138
_080C4A9A:
	movs r0, #1
	str r0, [sp, #0x98]
	adds r6, #0x5b
	add r0, sp, #0x88
	ldrb r0, [r0]
	strb r0, [r6, r7]
	adds r6, #0x44
	add r0, sp, #0x88
	ldrb r0, [r0]
	strb r0, [r6, r7]
	subs r6, #0x43
	add r0, sp, #0x88
	ldrb r0, [r0]
	strb r0, [r6, r7]
	adds r6, #0x44
	add r0, sp, #0x88
	ldrb r0, [r0]
	strb r0, [r6, r7]
	str r1, [r4]
	add r1, sp, #0x98
_080C4AC2:
	ldrb r1, [r1]
	strb r1, [r3]
_080C4AC6:
	ldr r3, _080C4ADC @ =0x000008B4
	adds r1, r7, r3
	movs r0, #0x78
	strb r0, [r1]
	movs r0, #0x98
	strb r0, [r2]
	b _080C5138
	.align 2, 0
_080C4AD4: .4byte 0x000008C5
_080C4AD8: .4byte 0x000008BC
_080C4ADC: .4byte 0x000008B4

	thumb_func_start sub_080C4AE0
sub_080C4AE0: @ 0x080C4AE0
	ldr r4, [sp, #0x9c]
	cmp r4, #0
	bne _080C4AE8
	b _080C513A
_080C4AE8:
	ldr r6, [sp, #0x84]
	cmp r6, #0
	bne _080C4B40
	ldr r0, _080C4B30 @ =0x000008C5
	adds r1, r7, r0
	movs r0, #1
	strb r0, [r1]
	ldr r1, _080C4B34 @ =0x00000818
	adds r0, r7, r1
	movs r1, #0xbe
	bl sub_8008B6C
	add r0, sp, #0x50
	adds r1, r7, #0
	movs r2, #5
	bl sub_80C7B7C
	ldr r0, [sp, #0x50]
	adds r0, #8
	ldr r2, _080C4B38 @ =0x0000097D
	adds r1, r7, r2
	strb r0, [r1]
	add r0, sp, #0x54
	adds r1, r7, #0
	movs r2, #5
	bl sub_80C7B7C
	ldr r0, [sp, #0x54]
	lsrs r0, r0, #8
	adds r0, #0x18
	ldr r3, _080C4B3C @ =0x0000097E
	adds r1, r7, r3
_080C4B28:
	strb r0, [r1]
	movs r5, #1
	b _080C5138
	.align 2, 0
_080C4B30: .4byte 0x000008C5
_080C4B34: .4byte 0x00000818
_080C4B38: .4byte 0x0000097D
_080C4B3C: .4byte 0x0000097E
_080C4B40:
	ldr r4, [sp, #0x84]
	cmp r4, #0x14
	bne _080C4B58
	ldr r6, _080C4B54 @ =0x00000918
	adds r1, r7, r6
_080C4B4A:
	movs r0, #1
	strb r0, [r1]
	movs r5, #0x15
	b _080C5138
	.align 2, 0
_080C4B54: .4byte 0x00000918
_080C4B58:
	ldr r0, [sp, #0x84]
	cmp r0, #0x1e
	bne _080C4BB0
	ldr r2, _080C4BA0 @ =0x000008C5
	adds r1, r7, r2
	movs r0, #1
	strb r0, [r1]
	ldr r3, _080C4BA4 @ =0x00000818
	adds r0, r7, r3
	movs r1, #0xbe
	bl sub_8008B6C
	add r0, sp, #0x58
	adds r1, r7, #0
	movs r2, #0x17
	bl sub_80C7B7C
	ldr r0, [sp, #0x58]
	adds r0, #8
	ldr r4, _080C4BA8 @ =0x0000097D
	adds r1, r7, r4
	strb r0, [r1]
	add r0, sp, #0x5c
	adds r1, r7, #0
	movs r2, #0x17
	bl sub_80C7B7C
	ldr r0, [sp, #0x5c]
	lsrs r0, r0, #8
	adds r0, #0x18
	ldr r6, _080C4BAC @ =0x0000097E
	adds r1, r7, r6
	strb r0, [r1]
	movs r5, #0x1f
	b _080C5138
	.align 2, 0
_080C4BA0: .4byte 0x000008C5
_080C4BA4: .4byte 0x00000818
_080C4BA8: .4byte 0x0000097D
_080C4BAC: .4byte 0x0000097E
_080C4BB0:
	ldr r0, [sp, #0x84]
	cmp r0, #0x32
	bne _080C4BC4
	movs r2, #0x96
	lsls r2, r2, #4
_080C4BBA:
	adds r1, r7, r2

	thumb_func_start sub_080C4BBC
sub_080C4BBC: @ 0x080C4BBC
	movs r0, #1
	strb r0, [r1]
	movs r5, #0x33
	b _080C5138
_080C4BC4:
	ldr r3, [sp, #0x84]
	cmp r3, #0x3c
	bne _080C4C1C
	ldr r4, _080C4C0C @ =0x000008C5
	adds r1, r7, r4
	movs r0, #1
	strb r0, [r1]
	ldr r6, _080C4C10 @ =0x00000818
	adds r0, r7, r6
	movs r1, #0xbe
	bl sub_8008B6C
	add r0, sp, #0x60
	adds r1, r7, #0
	movs r2, #0xd
	bl sub_80C7B7C
	ldr r0, [sp, #0x60]
	adds r0, #8
	ldr r2, _080C4C14 @ =0x0000097D
	adds r1, r7, r2
	strb r0, [r1]
	add r0, sp, #0x64
	adds r1, r7, #0
	movs r2, #0xd
	bl sub_80C7B7C
	ldr r0, [sp, #0x64]
	lsrs r0, r0, #8
	adds r0, #0x18
	ldr r3, _080C4C18 @ =0x0000097E
	adds r1, r7, r3
	strb r0, [r1]
	movs r5, #0x3d
	b _080C5138
	.align 2, 0
_080C4C0C: .4byte 0x000008C5
_080C4C10: .4byte 0x00000818
_080C4C14: .4byte 0x0000097D
_080C4C18: .4byte 0x0000097E
_080C4C1C:
	ldr r4, [sp, #0x84]
	cmp r4, #0x50
	bne _080C4C34
	ldr r6, _080C4C30 @ =0x00000938
	adds r1, r7, r6
	movs r0, #1
	strb r0, [r1]
	movs r5, #0x51
	b _080C5138
	.align 2, 0
_080C4C30: .4byte 0x00000938
_080C4C34:
	ldr r0, [sp, #0x84]
	cmp r0, #0x5a
	bne _080C4D28
	ldr r1, _080C4D0C @ =0x000008C5
	adds r0, r7, r1
	movs r1, #0
	strb r1, [r0]
	ldr r2, _080C4D10 @ =0x00000918
	adds r0, r7, r2
	strb r1, [r0]
	ldr r3, _080C4D14 @ =0x00000938
	adds r0, r7, r3
	strb r1, [r0]
	movs r4, #0x96
	lsls r4, r4, #4
	adds r0, r7, r4
	strb r1, [r0]
	ldr r6, _080C4D18 @ =0x00000544
	adds r4, r7, r6
	ldr r2, [r4]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _080C4C84
	ldr r1, _080C4D1C @ =0x00000889
	adds r0, r2, #0
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl sub_8009378
	adds r0, r7, #0
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [r4]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
_080C4C84:
	ldr r0, [r4]
	ldr r0, [r0]
	rsbs r2, r0, #0
	orrs r2, r0
	movs r5, #0x5b
	cmp r2, #0
	bge _080C4CAE
_080C4C92:
	adds r0, r7, #0
	bl sub_80087C8
	adds r0, r7, #0
	bl sub_80C2D54
	ldr r1, _080C4D18 @ =0x00000544
	adds r0, r7, r1
	ldr r0, [r0]
	ldr r0, [r0]
	rsbs r2, r0, #0
	orrs r2, r0
	cmp r2, #0
	blt _080C4C92
_080C4CAE:
	ldr r2, _080C4D18 @ =0x00000544
	adds r4, r7, r2
	ldr r0, [r4]
	ldr r1, _080C4D1C @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl sub_800934C
	adds r0, r7, #0
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [r4]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
	ldr r3, _080C4D20 @ =0x000008B4
	adds r1, r7, r3
	movs r0, #0x78
	strb r0, [r1]
	ldr r6, _080C4D24 @ =0x000008B5
	adds r1, r7, r6
	movs r0, #0x51
	strb r0, [r1]
	ldr r0, [r4]
	ldr r0, [r0]
	rsbs r1, r0, #0
	orrs r1, r0
	cmp r1, #0
	blt _080C4CEE
	b _080C5138
_080C4CEE:
	adds r0, r7, #0
	bl sub_80087C8
	adds r0, r7, #0
	bl sub_80C2D54
	ldr r1, _080C4D18 @ =0x00000544
	adds r0, r7, r1
	ldr r0, [r0]
	ldr r0, [r0]
	rsbs r1, r0, #0
	orrs r1, r0
	cmp r1, #0
	blt _080C4CEE
	b _080C5138
	.align 2, 0
_080C4D0C: .4byte 0x000008C5
_080C4D10: .4byte 0x00000918
_080C4D14: .4byte 0x00000938
_080C4D18: .4byte 0x00000544
_080C4D1C: .4byte 0x00000889
_080C4D20: .4byte 0x000008B4
_080C4D24: .4byte 0x000008B5
_080C4D28:
	ldr r5, [sp, #0x84]
	adds r5, #1
	ldr r2, [sp, #0x84]
	cmp r2, #0x5a
	bgt _080C4D34
	b _080C5138
_080C4D34:
	ldr r3, _080C4D4C @ =0x000008BC
	adds r0, r7, r3
	ldr r0, [r0]
	cmp r0, #9
	bls _080C4D40
	b _080C5138
_080C4D40:
	lsls r0, r0, #2
	ldr r1, _080C4D50 @ =_080C4D54
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080C4D4C: .4byte 0x000008BC
_080C4D50: .4byte _080C4D54
_080C4D54: @ jump table
	.4byte _080C5138 @ case 0
	.4byte _080C4D7C @ case 1
	.4byte _080C4DAC @ case 2
	.4byte _080C5138 @ case 3
	.4byte _080C4DC0 @ case 4
	.4byte _080C4E54 @ case 5
	.4byte _080C4F18 @ case 6
	.4byte _080C4FC8 @ case 7
	.4byte _080C4FF8 @ case 8
	.4byte _080C50FC @ case 9
_080C4D7C:
	movs r4, #0x8c
	lsls r4, r4, #4
	adds r1, r7, r4
	movs r0, #6
	str r0, [r1]
	ldr r6, _080C4DA4 @ =0x000008BC
	adds r1, r7, r6
	movs r0, #9
	str r0, [r1]
	ldr r0, _080C4DA8 @ =0x000008C4
	adds r1, r7, r0
	movs r0, #1
	strb r0, [r1]
	movs r1, #0x82
	lsls r1, r1, #4
	adds r0, r7, r1
	movs r1, #0xc7
	bl sub_8008B6C
	b _080C5028
	.align 2, 0
_080C4DA4: .4byte 0x000008BC
_080C4DA8: .4byte 0x000008C4
_080C4DAC:
	ldr r2, _080C4DB8 @ =0x000008BC
	adds r1, r7, r2
	movs r0, #6
	str r0, [r1]
	ldr r3, _080C4DBC @ =0x000008C4
	b _080C5022
	.align 2, 0
_080C4DB8: .4byte 0x000008BC
_080C4DBC: .4byte 0x000008C4
_080C4DC0:
	ldr r4, _080C4E40 @ =0x000008B4
	adds r1, r7, r4
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r5, [sp, #0x84]
	adds r5, #1
	cmp r0, #0x58
	beq _080C4DD8
	b _080C5138
_080C4DD8:
	movs r6, #0x8c
	lsls r6, r6, #4
	adds r1, r7, r6
	movs r0, #7
	str r0, [r1]
	ldr r0, _080C4E44 @ =0x000008BC
	adds r1, r7, r0
	movs r0, #8
	str r0, [r1]
	ldr r1, _080C4E48 @ =0x000008C4
	adds r0, r7, r1
	movs r2, #1
	strb r2, [r0]
	ldr r3, _080C4E4C @ =0x000008B5
	adds r1, r7, r3
	ldrb r0, [r1]
	subs r0, #0xa
	strb r0, [r1]
	adds r4, #0x11
	adds r0, r7, r4
	strb r2, [r0]
	add r0, sp, #0x68
	adds r1, r7, #0
	movs r2, #5
	bl sub_80C7B7C
	ldr r0, [sp, #0x68]
	adds r0, #8
	adds r6, #0xbd
	adds r1, r7, r6
	strb r0, [r1]
	add r0, sp, #0x6c
	adds r1, r7, #0
	movs r2, #5
	bl sub_80C7B7C
	ldr r0, [sp, #0x6c]
	lsrs r0, r0, #8
	adds r0, #0x18
	ldr r2, _080C4E50 @ =0x0000097E
	adds r1, r7, r2
	strb r0, [r1]
	movs r3, #0x82
	lsls r3, r3, #4
	adds r0, r7, r3
	movs r1, #0xbc
	bl sub_8008B6C
	subs r4, #0xad
	adds r0, r7, r4
	b _080C4FAC
	.align 2, 0
_080C4E40: .4byte 0x000008B4
_080C4E44: .4byte 0x000008BC
_080C4E48: .4byte 0x000008C4
_080C4E4C: .4byte 0x000008B5
_080C4E50: .4byte 0x0000097E
_080C4E54:
	ldr r6, _080C4E8C @ =0x000008B4
	adds r1, r7, r6
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x68
	bne _080C4E94
	movs r0, #0x8c
	lsls r0, r0, #4
	adds r2, r7, r0
	ldr r3, _080C4E90 @ =0x000008BC
	adds r1, r7, r3
	ldr r0, [r1]
	str r0, [r2]
	movs r0, #9
	str r0, [r1]
	movs r4, #0x82
	lsls r4, r4, #4
	adds r0, r7, r4
	movs r1, #0xc7
	bl sub_8008B6C
	adds r6, #0x10
	adds r1, r7, r6
	b _080C5024
	.align 2, 0
_080C4E8C: .4byte 0x000008B4
_080C4E90: .4byte 0x000008BC
_080C4E94:
	ldr r5, [sp, #0x84]
	adds r5, #1
	cmp r0, #0x88
	beq _080C4E9E
	b _080C5138
_080C4E9E:
	movs r1, #0x8c
	lsls r1, r1, #4
	adds r0, r7, r1
	movs r2, #1
	str r2, [r0]
	ldr r3, _080C4F00 @ =0x000008BC
	adds r1, r7, r3
	movs r0, #8
	str r0, [r1]
	ldr r4, _080C4F04 @ =0x000008C4
	adds r0, r7, r4
	strb r2, [r0]
	ldr r6, _080C4F08 @ =0x000008B5
	adds r1, r7, r6
	ldrb r0, [r1]
	subs r0, #0xa
	strb r0, [r1]
	ldr r1, _080C4F0C @ =0x000008C5
	adds r0, r7, r1
	strb r2, [r0]
	add r0, sp, #0x70
	adds r1, r7, #0
	movs r2, #0x17
	bl sub_80C7B7C
	ldr r0, [sp, #0x70]
	adds r0, #8
	ldr r2, _080C4F10 @ =0x0000097D
	adds r1, r7, r2
	strb r0, [r1]
	add r0, sp, #0x74
	adds r1, r7, #0
	movs r2, #0x17
	bl sub_80C7B7C
	ldr r0, [sp, #0x74]
	lsrs r0, r0, #8
	adds r0, #0x18
	ldr r3, _080C4F14 @ =0x0000097E
	adds r1, r7, r3
	strb r0, [r1]
	subs r4, #0xa4
	adds r0, r7, r4
	movs r1, #0xbc
	bl sub_8008B6C
	subs r6, #0x9d
	adds r0, r7, r6
	b _080C4FAC
	.align 2, 0
_080C4F00: .4byte 0x000008BC
_080C4F04: .4byte 0x000008C4
_080C4F08: .4byte 0x000008B5
_080C4F0C: .4byte 0x000008C5
_080C4F10: .4byte 0x0000097D
_080C4F14: .4byte 0x0000097E
_080C4F18:
	ldr r0, _080C4F38 @ =0x000008B5
	adds r2, r7, r0
	ldrb r0, [r2]
	subs r0, #1
	strb r0, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x41
	bne _080C4F44
	ldr r2, _080C4F3C @ =0x000008BC
	adds r1, r7, r2
	movs r0, #4
	str r0, [r1]
	ldr r3, _080C4F40 @ =0x000008C4
	b _080C5022
	.align 2, 0
_080C4F38: .4byte 0x000008B5
_080C4F3C: .4byte 0x000008BC
_080C4F40: .4byte 0x000008C4
_080C4F44:
	ldr r5, [sp, #0x84]
	adds r5, #1
	cmp r0, #0x51
	beq _080C4F4E
	b _080C5138
_080C4F4E:
	movs r4, #0x8c
	lsls r4, r4, #4
	adds r1, r7, r4
	movs r0, #2
	str r0, [r1]
	ldr r6, _080C4FB4 @ =0x000008BC
	adds r1, r7, r6
	movs r0, #8
	str r0, [r1]
	ldr r1, _080C4FB8 @ =0x000008C4
	adds r0, r7, r1
	movs r1, #1
	strb r1, [r0]
	ldrb r0, [r2]
	subs r0, #0xa
	strb r0, [r2]
	ldr r2, _080C4FBC @ =0x000008C5
	adds r0, r7, r2
	strb r1, [r0]
	add r0, sp, #0x78
	adds r1, r7, #0
	movs r2, #0xd
	bl sub_80C7B7C
	ldr r0, [sp, #0x78]
	adds r0, #8
	ldr r3, _080C4FC0 @ =0x0000097D
	adds r1, r7, r3
	strb r0, [r1]
	add r0, sp, #0x7c
	adds r1, r7, #0
	movs r2, #0xd
	bl sub_80C7B7C
	ldr r0, [sp, #0x7c]
	lsrs r0, r0, #8
	adds r0, #0x18
	adds r4, #0xbe
	adds r1, r7, r4
	strb r0, [r1]
	subs r6, #0x9c
	adds r0, r7, r6
	movs r1, #0xbc
	bl sub_8008B6C
	ldr r1, _080C4FC4 @ =0x00000818
	adds r0, r7, r1
_080C4FAC:
	movs r1, #0xbe
	bl sub_8008B6C
	b _080C5138
	.align 2, 0
_080C4FB4: .4byte 0x000008BC
_080C4FB8: .4byte 0x000008C4
_080C4FBC: .4byte 0x000008C5
_080C4FC0: .4byte 0x0000097D
_080C4FC4: .4byte 0x00000818
_080C4FC8:
	ldr r2, _080C4FEC @ =0x000008B5
	adds r1, r7, r2
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r5, [sp, #0x84]
	adds r5, #1
	cmp r0, #0x71
	beq _080C4FE0
	b _080C5138
_080C4FE0:
	ldr r3, _080C4FF0 @ =0x000008BC
	adds r1, r7, r3
	movs r0, #5
	str r0, [r1]
	ldr r4, _080C4FF4 @ =0x000008C4
	b _080C5042
	.align 2, 0
_080C4FEC: .4byte 0x000008B5
_080C4FF0: .4byte 0x000008BC
_080C4FF4: .4byte 0x000008C4
_080C4FF8:
	ldr r6, [sp, #0x88]
	adds r6, #1
	str r6, [sp, #0x88]
	cmp r6, #0x14
	bne _080C504A
	ldr r1, _080C5014 @ =0x000008B5
	adds r0, r7, r1
	ldrb r0, [r0]
	adds r0, #0xa
	cmp r0, #0x41
	bne _080C501C
	ldr r2, _080C5018 @ =0x00000918
	adds r1, r7, r2
	b _080C5024
	.align 2, 0
_080C5014: .4byte 0x000008B5
_080C5018: .4byte 0x00000918
_080C501C:
	cmp r0, #0x51
	bne _080C5034
	ldr r3, _080C5030 @ =0x00000938
_080C5022:
	adds r1, r7, r3
_080C5024:
	movs r0, #1
_080C5026:
	strb r0, [r1]
_080C5028:
	ldr r5, [sp, #0x84]
	adds r5, #1
	b _080C5138
	.align 2, 0
_080C5030: .4byte 0x00000938
_080C5034:
	ldr r5, [sp, #0x84]
	adds r5, #1
	cmp r0, #0x71
	beq _080C503E
	b _080C5138
_080C503E:
	movs r4, #0x96
	lsls r4, r4, #4
_080C5042:
	adds r1, r7, r4
_080C5044:
	movs r0, #1
	strb r0, [r1]
	b _080C5138
_080C504A:
	ldr r6, [sp, #0x88]
	cmp r6, #0x32
	bne _080C507C
	ldr r1, _080C5074 @ =0x000008B5
	adds r0, r7, r1
	ldrb r0, [r0]
	ldr r5, [sp, #0x84]
	adds r5, #1
	cmp r0, #0x37
	bne _080C5138
	ldr r2, _080C5078 @ =0x00000919
	adds r0, r7, r2
	movs r1, #1
	strb r1, [r0]
	movs r3, #0x82
	lsls r3, r3, #4
	adds r0, r7, r3
	movs r1, #0x6c
	bl sub_8008B6C
	b _080C5138
	.align 2, 0
_080C5074: .4byte 0x000008B5
_080C5078: .4byte 0x00000919
_080C507C:
	ldr r5, [sp, #0x84]
	adds r5, #1
	ldr r4, [sp, #0x88]
	cmp r4, #0x3c
	bne _080C5138
	movs r6, #0
	str r6, [sp, #0x88]
	ldr r1, _080C50F0 @ =0x000008C5
	adds r0, r7, r1
	strb r6, [r0]
	ldr r4, _080C50F4 @ =0x000008BC
	adds r3, r7, r4
	movs r6, #0x8c
	lsls r6, r6, #4
	adds r0, r7, r6
	ldr r0, [r0]
	str r0, [r3]
	ldr r0, _080C50F8 @ =0x000008C4
	adds r1, r7, r0
	movs r0, #1
	strb r0, [r1]
	subs r4, #7
	adds r2, r7, r4
	ldrb r0, [r2]
	adds r0, #0xa
	strb r0, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x51
	bne _080C5138
	movs r6, #1
	str r6, [sp, #0xa0]
	adds r4, #0x63
	adds r0, r7, r4
	add r6, sp, #0x88
	ldrb r6, [r6]
	strb r6, [r0]
	adds r4, #0x20
	adds r0, r7, r4
	add r6, sp, #0x88
	ldrb r6, [r6]
	strb r6, [r0]
	adds r4, #0x28
	adds r0, r7, r4
	add r6, sp, #0x88
	ldrb r6, [r6]
	strb r6, [r0]
	subs r4, #0x27
	adds r0, r7, r4
	add r6, sp, #0x88
	ldrb r6, [r6]
	strb r6, [r0]
	movs r0, #2
	str r0, [r3]
	add r0, sp, #0xa0
	ldrb r0, [r0]
	strb r0, [r1]
	b _080C4AC6
	.align 2, 0
_080C50F0: .4byte 0x000008C5
_080C50F4: .4byte 0x000008BC
_080C50F8: .4byte 0x000008C4
_080C50FC:
	ldr r4, [sp, #0x88]
	adds r4, #1
	str r4, [sp, #0x88]
	ldr r5, [sp, #0x84]
	adds r5, #1
	cmp r4, #0x3c
	bne _080C5138
	ldr r6, _080C5160 @ =0x000008BC
	adds r1, r7, r6
	movs r2, #0x8c
	lsls r2, r2, #4
	adds r0, r7, r2
	ldr r0, [r0]
	str r0, [r1]
	ldr r3, _080C5164 @ =0x000008C4
	adds r1, r7, r3
	movs r0, #1
	strb r0, [r1]
	movs r4, #0
	str r4, [sp, #0x88]
	movs r6, #0xe5
	lsls r6, r6, #3
	adds r2, r7, r6
	ldr r1, [r2]
	adds r0, #0xff
	strh r0, [r1, #0x10]
	ldr r0, [r2]
	movs r1, #6
	bl sub_805E860
_080C5138:
	str r5, [sp, #0x84]
_080C513A:
	adds r0, r7, #0
	bl sub_80C2D54
	ldr r1, _080C5168 @ =0x0000089C
	adds r0, r7, r1
_080C5144:
	ldr r0, [r0]
	cmp r0, #0
	bne _080C514E
	bl sub_080C3DC4
_080C514E:
	add sp, #0xa8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080C5160: .4byte 0x000008BC
_080C5164: .4byte 0x000008C4
_080C5168: .4byte 0x0000089C

	thumb_func_start sub_80C516C
sub_80C516C: @ 0x080C516C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x64
	adds r7, r0, #0
	ldr r1, _080C5250 @ =0x0000097C
	adds r0, r7, r1
	ldrb r0, [r0]
	add r1, sp, #0xc
	movs r2, #0
	bl sub_804EC84
	add r0, sp, #0x10
	ldr r5, _080C5254 @ =gUnknown_08108218
	adds r1, r5, #0
	movs r2, #6
	bl sub_80D3994
	add r0, sp, #0x18
	ldr r6, _080C5258 @ =gUnknown_08108220
	adds r1, r6, #0
	movs r2, #0xf
	bl sub_80D3994
	add r0, sp, #0x28
	ldr r2, _080C525C @ =gUnknown_08108230
	mov r8, r2
	mov r1, r8
	movs r2, #0xa
	bl sub_80D3994
	add r4, sp, #0x34
	ldr r1, [r5]
	str r1, [sp, #0x34]
	ldrh r0, [r5, #4]
	strh r0, [r4, #4]
	str r1, [sp, #0x34]
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r1, r6, #0
	bl sub_80D3ADC
	adds r0, r4, #0
	add r1, sp, #0xc
	bl sub_80D3ADC
	adds r0, r4, #0
	mov r1, r8
	bl sub_80D3ADC
	movs r0, #0
	str r0, [sp, #0x5c]
	add r4, sp, #0x58
	movs r2, #0
	ldr r1, _080C5260 @ =0x00000904
	adds r0, r7, r1
	movs r1, #0x18
_080C51E2:
	strb r2, [r0]
	strb r2, [r0, #1]
	adds r0, #4
	subs r1, #1
	cmp r1, #0
	bge _080C51E2
	movs r2, #1
	str r2, [sp, #0x60]
	adds r0, r7, #0
	bl sub_8008918
	movs r2, #0xba
	lsls r2, r2, #5
	adds r1, r2, #0
	strh r1, [r4]
	strh r1, [r0]
	ldr r0, _080C5264 @ =0x0000051C
	adds r4, r7, r0
	ldr r0, [r4]
	bl sub_8050E5C
	ldr r4, [r4]
	mov sb, r4
	adds r0, r7, #0
	bl sub_80088DC
	mov r8, r0
	adds r0, r7, #0
	bl sub_8008920
	adds r6, r0, #0
	adds r0, r7, #0
	bl sub_8008918
	adds r5, r0, #0
	adds r0, r7, #0
	bl sub_8008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl sub_800894C
	ldr r2, _080C5268 @ =0x00000814
	adds r1, r7, r2
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, sb
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl sub_8050D3C
	b _080C534E
	.align 2, 0
_080C5250: .4byte 0x0000097C
_080C5254: .4byte gUnknown_08108218
_080C5258: .4byte gUnknown_08108220
_080C525C: .4byte gUnknown_08108230
_080C5260: .4byte 0x00000904
_080C5264: .4byte 0x0000051C
_080C5268: .4byte 0x00000814
_080C526C:
	adds r0, r7, #0
	bl sub_80087C8
	ldr r2, _080C52CC @ =0x0000051C
	adds r4, r7, r2
	ldr r0, [r4]
	bl sub_8050D34
	mov sl, r0
	ldr r4, [r4]
	mov sb, r4
	adds r0, r7, #0
	bl sub_80088DC
	mov r8, r0
	adds r0, r7, #0
	bl sub_8008920
	adds r6, r0, #0
	adds r0, r7, #0
	bl sub_8008918
	adds r5, r0, #0
	adds r0, r7, #0
	bl sub_8008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl sub_800894C
	ldr r2, _080C52D0 @ =0x00000814
	adds r1, r7, r2
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, sb
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl sub_8050D3C
	cmp r0, #6
	bhi _080C534E
	lsls r0, r0, #2
	ldr r1, _080C52D4 @ =_080C52D8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080C52CC: .4byte 0x0000051C
_080C52D0: .4byte 0x00000814
_080C52D4: .4byte _080C52D8
_080C52D8: @ jump table
	.4byte _080C52F4 @ case 0
	.4byte _080C5334 @ case 1
	.4byte _080C5334 @ case 2
	.4byte _080C5318 @ case 3
	.4byte _080C5334 @ case 4
	.4byte _080C5334 @ case 5
	.4byte _080C5334 @ case 6
_080C52F4:
	ldr r0, [sp, #0x60]
	cmp r0, #0
	bne _080C5308
	ldr r2, _080C5304 @ =0x0000089C
	adds r1, r7, r2
	movs r0, #2
	str r0, [r1]
	b _080C534E
	.align 2, 0
_080C5304: .4byte 0x0000089C
_080C5308:
	ldr r1, _080C5314 @ =0x0000051C
	adds r0, r7, r1
	ldr r0, [r0]
	bl sub_8050D5C
	b _080C534E
	.align 2, 0
_080C5314: .4byte 0x0000051C
_080C5318:
	mov r2, sl
	cmp r2, #1
	bne _080C5334
	ldr r0, _080C5370 @ =0x0000051C
	adds r4, r7, r0
	ldr r0, [r4]
	add r1, sp, #0x34
	bl sub_8050D8C
	ldr r0, [r4]
	bl sub_8050DD8
	movs r1, #0
	str r1, [sp, #0x60]
_080C5334:
	ldr r2, [sp, #0x5c]
	adds r2, #1
	str r2, [sp, #0x5c]
	cmp r2, #0x78
	ble _080C534E
	ldr r0, _080C5370 @ =0x0000051C
	adds r4, r7, r0
	ldr r0, [r4]
	bl sub_8050DE4
	ldr r0, [r4]
	bl sub_8050D74
_080C534E:
	adds r0, r7, #0
	bl sub_80C2D54
	ldr r1, _080C5374 @ =0x0000089C
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #1
	bne _080C5360
	b _080C526C
_080C5360:
	add sp, #0x64
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080C5370: .4byte 0x0000051C
_080C5374: .4byte 0x0000089C

	thumb_func_start sub_80C5378
sub_80C5378: @ 0x080C5378
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x38
	adds r6, r0, #0
	ldr r0, _080C54E0 @ =0x000008B4
	adds r1, r6, r0
	movs r0, #0x78
	strb r0, [r1]
	ldr r2, _080C54E4 @ =0x000008B5
	adds r1, r6, r2
	movs r0, #0x98
	strb r0, [r1]
	ldr r3, _080C54E8 @ =0x000008BC
	adds r1, r6, r3
	movs r0, #2
	str r0, [r1]
	ldr r0, _080C54EC @ =0x000008C4
	adds r1, r6, r0
	movs r0, #1
	strb r0, [r1]
	movs r1, #0
	mov sl, r1
	movs r2, #0
	str r2, [sp, #0x28]
	ldr r1, _080C54F0 @ =gUnknown_08107FE0
	subs r3, #0xc
	adds r0, r6, r3
	ldr r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrb r1, [r0]
	str r1, [sp, #0x2c]
	ldrb r2, [r0, #1]
	mov r8, r2
	ldrb r0, [r0, #2]
	str r0, [sp, #0x30]
	mov r3, sp
	adds r3, #0x1c
	str r3, [sp, #0x34]
	movs r1, #0
	ldr r2, _080C54F4 @ =0x00000904
	adds r0, r6, r2
	movs r5, #0x18
_080C53D4:
	strb r1, [r0]
	strb r1, [r0, #1]
	adds r0, #4
	subs r5, #1
	cmp r5, #0
	bge _080C53D4
	movs r3, #1
	rsbs r3, r3, #0
	add r3, r8
	mov sb, r3
	movs r1, #0
	ldr r2, _080C54F8 @ =0x000008C8
	adds r0, r6, r2
	movs r5, #0xe
_080C53F0:
	strb r1, [r0]
	strb r1, [r0, #1]
	adds r0, #4
	subs r5, #1
	cmp r5, #0
	bge _080C53F0
	movs r1, #0
	add r0, sp, #0x18
_080C5400:
	strb r1, [r0]
	subs r0, #1
	cmp r0, sp
	bge _080C5400
	movs r5, #0
	cmp r5, r8
	bge _080C5430
	ldr r3, _080C54FC @ =0x000008CA
	adds r7, r6, r3
_080C5412:
	movs r4, #0x19
	subs r4, r4, r5
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_80D11E4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	muls r0, r4, r0
	lsrs r0, r0, #0x10
	strb r0, [r7]
	adds r7, #4
	adds r5, #1
	cmp r5, r8
	blt _080C5412
_080C5430:
	ldr r2, _080C54FC @ =0x000008CA
	adds r0, r6, r2
	ldrb r0, [r0]
	mov r3, sp
	adds r1, r3, r0
	movs r0, #1
	strb r0, [r1]
	movs r5, #0
	cmp r5, sb
	bge _080C5488
	adds r7, r2, #0
_080C5446:
	adds r2, r5, #1
	lsls r0, r2, #2
	adds r4, r6, r0
	adds r1, r4, r7
	ldrb r3, [r1]
	movs r0, #0xff
	strb r0, [r1]
	cmp r3, #0
	blt _080C5472
	ldr r0, _080C54FC @ =0x000008CA
	adds r1, r4, r0
_080C545C:
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldrb r0, [r1]
	add r0, sp
	ldrb r0, [r0]
	cmp r0, #0
	bne _080C546E
	subs r3, #1
_080C546E:
	cmp r3, #0
	bge _080C545C
_080C5472:
	lsls r0, r2, #2
	adds r0, r6, r0
	adds r0, r0, r7
	ldrb r0, [r0]
	mov r3, sp
	adds r1, r3, r0
	movs r0, #1
	strb r0, [r1]
	adds r5, r2, #0
	cmp r5, sb
	blt _080C5446
_080C5488:
	mov r0, r8
	cmp r0, #0xe
	bgt _080C549A
	lsls r0, r0, #2
	adds r0, r6, r0
	ldr r1, _080C54F8 @ =0x000008C8
	adds r0, r0, r1
	movs r1, #1
	strb r1, [r0]
_080C549A:
	adds r0, r6, #0
	bl sub_8008918
	movs r2, #0xb2
	lsls r2, r2, #5
	adds r1, r2, #0
	ldr r3, [sp, #0x34]
	strh r1, [r3]
	strh r1, [r0]
	adds r0, r6, #0
	bl sub_80C2D54
	ldr r1, _080C5500 @ =0x0000089C
	adds r0, r6, r1
	ldr r0, [r0]
	cmp r0, #2
	beq _080C54BE
	b _080C562E
_080C54BE:
	movs r2, #0x8a
	lsls r2, r2, #4
	adds r7, r6, r2
	mov r8, r6
	ldr r3, _080C54F8 @ =0x000008C8
	adds r5, r6, r3
_080C54CA:
	adds r0, r6, #0
	bl sub_80087C8
	ldr r1, [r7]
	cmp r1, #1
	beq _080C55B4
	cmp r1, #1
	bgt _080C5504
	cmp r1, #0
	beq _080C550C
	b _080C561C
	.align 2, 0
_080C54E0: .4byte 0x000008B4
_080C54E4: .4byte 0x000008B5
_080C54E8: .4byte 0x000008BC
_080C54EC: .4byte 0x000008C4
_080C54F0: .4byte gUnknown_08107FE0
_080C54F4: .4byte 0x00000904
_080C54F8: .4byte 0x000008C8
_080C54FC: .4byte 0x000008CA
_080C5500: .4byte 0x0000089C
_080C5504:
	cmp r1, #2
	bne _080C550A
	b _080C5600
_080C550A:
	b _080C561C
_080C550C:
	mov r0, sl
	cmp r0, #0
	bne _080C5574
	ldrb r0, [r5]
	cmp r0, #0
	beq _080C551E
	movs r0, #1
	str r0, [r7]
	b _080C561C
_080C551E:
	ldr r2, _080C5560 @ =0x000008C5
	adds r1, r6, r2
	movs r0, #1
	strb r0, [r1]
	ldr r3, _080C5564 @ =0x00000818
	adds r0, r6, r3
	movs r1, #0xbe
	bl sub_8008B6C
	ldr r4, _080C5568 @ =0x000008CA
	add r4, r8
	ldrb r2, [r4]
	add r0, sp, #0x20
	adds r1, r6, #0
	bl sub_80C7B7C
	ldr r0, [sp, #0x20]
	adds r0, #8
	ldr r2, _080C556C @ =0x0000097D
	adds r1, r6, r2
	strb r0, [r1]
	ldrb r2, [r4]
	add r0, sp, #0x24
	adds r1, r6, #0
	bl sub_80C7B7C
	ldr r0, [sp, #0x24]
	lsrs r0, r0, #8
	adds r0, #0x18
	ldr r3, _080C5570 @ =0x0000097E
	adds r1, r6, r3
	strb r0, [r1]
	b _080C55A8
	.align 2, 0
_080C5560: .4byte 0x000008C5
_080C5564: .4byte 0x00000818
_080C5568: .4byte 0x000008CA
_080C556C: .4byte 0x0000097D
_080C5570: .4byte 0x0000097E
_080C5574:
	mov r0, sl
	cmp r0, #0x14
	bne _080C5590
	ldrb r0, [r5, #2]
	lsls r0, r0, #2
	adds r0, r6, r0
	ldr r1, _080C558C @ =0x00000904
	adds r0, r0, r1
	movs r1, #1
	strb r1, [r0]
	b _080C55A8
	.align 2, 0
_080C558C: .4byte 0x00000904
_080C5590:
	ldr r2, [sp, #0x2c]
	cmp sl, r2
	bne _080C55A8
	movs r3, #1
	rsbs r3, r3, #0
	mov sl, r3
	ldr r2, _080C55B0 @ =0x000008C5
	adds r0, r6, r2
	strb r1, [r0]
	movs r3, #4
	add r8, r3
	adds r5, #4
_080C55A8:
	movs r0, #1
	add sl, r0
	b _080C561C
	.align 2, 0
_080C55B0: .4byte 0x000008C5
_080C55B4:
	ldr r1, [sp, #0x28]
	ldr r2, [sp, #0x30]
	cmp r1, r2
	bne _080C55EE
	movs r0, #2
	str r0, [r7]
	ldr r3, _080C55F8 @ =0x00000544
	adds r4, r6, r3
	ldr r2, [r4]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _080C55EE
	adds r0, r2, #0
	adds r0, #0xc
	ldr r1, _080C55FC @ =0x00000889
	movs r2, #1
	movs r3, #1
	bl sub_8009378
	adds r0, r6, #0
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [r4]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
_080C55EE:
	ldr r0, [sp, #0x28]
	adds r0, #1
	str r0, [sp, #0x28]
	b _080C561C
	.align 2, 0
_080C55F8: .4byte 0x00000544
_080C55FC: .4byte 0x00000889
_080C5600:
	ldr r1, _080C5640 @ =0x00000544
	adds r0, r6, r1
	ldr r0, [r0]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r0, r0, #0x1f
	cmp r0, #0
	bne _080C561C
	str r0, [r7]
	ldr r2, _080C5644 @ =0x0000089C
	adds r1, r6, r2
	movs r0, #3
	str r0, [r1]
_080C561C:
	adds r0, r6, #0
	bl sub_80C2D54
	ldr r3, _080C5644 @ =0x0000089C
	adds r0, r6, r3
	ldr r0, [r0]
	cmp r0, #2
	bne _080C562E
	b _080C54CA
_080C562E:
	add sp, #0x38
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080C5640: .4byte 0x00000544
_080C5644: .4byte 0x0000089C

	thumb_func_start sub_80C5648
sub_80C5648: @ 0x080C5648
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r7, #0
	movs r2, #0
	ldr r1, _080C56F0 @ =0x00000904
	adds r0, r5, r1
	movs r1, #0x18
_080C5656:
	strb r2, [r0]
	strb r2, [r0, #1]
	adds r0, #4
	subs r1, #1
	cmp r1, #0
	bge _080C5656
	ldr r3, _080C56F4 @ =0x000008B4
	adds r1, r5, r3
	movs r2, #0
	movs r0, #0x78
	strb r0, [r1]
	ldr r0, _080C56F8 @ =0x000008B5
	adds r1, r5, r0
	movs r0, #0x51
	strb r0, [r1]
	ldr r1, _080C56FC @ =0x000008B7
	adds r0, r5, r1
	movs r1, #2
	strb r1, [r0]
	adds r3, #2
	adds r0, r5, r3
	strb r1, [r0]
	ldr r1, _080C5700 @ =0x000008B9
	adds r0, r5, r1
	strb r2, [r0]
	adds r3, #2
	adds r0, r5, r3
	strb r2, [r0]
	ldr r0, _080C5704 @ =0x00000544
	adds r4, r5, r0
	ldr r0, [r4]
	subs r1, #0x30
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl sub_800934C
	adds r0, r5, #0
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [r4]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
	adds r0, r5, #0
	bl sub_80C2D54
	ldr r1, _080C5708 @ =0x00000818
	adds r0, r5, r1
	movs r1, #0xbb
	bl sub_8008B6C
	ldr r3, _080C570C @ =0x0000089C
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #3
	bne _080C56E8
	adds r4, r5, r3
	movs r6, #4
_080C56CE:
	adds r0, r5, #0
	bl sub_80087C8
	cmp r7, #0x78
	bne _080C56DA
	str r6, [r4]
_080C56DA:
	adds r7, #1
	adds r0, r5, #0
	bl sub_80C2D54
	ldr r0, [r4]
	cmp r0, #3
	beq _080C56CE
_080C56E8:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080C56F0: .4byte 0x00000904
_080C56F4: .4byte 0x000008B4
_080C56F8: .4byte 0x000008B5
_080C56FC: .4byte 0x000008B7
_080C5700: .4byte 0x000008B9
_080C5704: .4byte 0x00000544
_080C5708: .4byte 0x00000818
_080C570C: .4byte 0x0000089C

	thumb_func_start sub_80C5710
sub_80C5710: @ 0x080C5710
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x3c
	adds r6, r0, #0
	movs r0, #0
	str r0, [sp, #0x30]
	movs r0, #0x14
	bl sub_80005D4
	ldr r2, _080C57E4 @ =0x00000524
	adds r1, r6, r2
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r4, r0, #0
	movs r3, #0xaa
	lsls r3, r3, #3
	adds r5, r6, r3
	ldr r0, [r5]
	cmp r4, r0
	beq _080C574A
	bl sub_8000608
_080C574A:
	str r4, [r5]
	adds r0, r4, #0
	movs r1, #0
	bl sub_805E860
	movs r7, #0xab
	lsls r7, r7, #3
	adds r4, r6, r7
	ldr r0, [r5]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sp
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	mov r0, sp
	mov r1, sp
	movs r2, #0x20
	bl sub_80D3994
	mov r0, sp
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r1, r5, r7}
	stm r4!, {r1, r5, r7}
	ldm r0!, {r2, r3}
	stm r4!, {r2, r3}
	adds r0, r6, #0
	bl sub_8008910
	adds r5, r0, #0
	movs r7, #0xac
	lsls r7, r7, #3
	adds r4, r6, r7
	ldr r7, [r4]
	ldr r1, _080C57E8 @ =0x00000844
	adds r0, r6, r1
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080C57B0
	ldrh r3, [r4, #4]
_080C57B0:
	str r5, [sp, #0x34]
	lsls r2, r2, #5
	ldr r4, _080C57EC @ =0x06010000
	adds r2, r2, r4
	mov r0, sp
	adds r1, r7, #0
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080C57F0
	cmp r1, #0
	beq _080C57DA
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C57DA:
	ldr r3, [sp, #0x34]
	ldr r0, [r3, #4]
	adds r0, #0x10
	str r0, [r3, #4]
	b _080C58C0
	.align 2, 0
_080C57E4: .4byte 0x00000524
_080C57E8: .4byte 0x00000844
_080C57EC: .4byte 0x06010000
_080C57F0:
	str r1, [sp, #0x38]
	movs r0, #1
	str r0, [sp, #0x24]
	ldr r4, [sp, #0x34]
	ldr r0, [r4]
	adds r5, r1, #0
	subs r0, r5, r0
	asrs r4, r0, #4
	str r4, [sp, #0x20]
	add r1, sp, #0x24
	add r0, sp, #0x20
	cmp r4, #1
	bhs _080C580C
	adds r0, r1, #0
_080C580C:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C582A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080C582E
	mov r0, sb
	bl sub_80D3BC0
	b _080C582E
_080C582A:
	movs r0, #0
	mov sb, r0
_080C582E:
	adds r4, r0, #0
	mov r8, r4
	ldr r7, [sp, #0x34]
	ldr r2, [r7]
	mov r3, r8
	b _080C584E
_080C583A:
	cmp r3, #0
	beq _080C584A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C584A:
	adds r2, #0x10
	adds r3, #0x10
_080C584E:
	ldr r0, [sp, #0x38]
	cmp r2, r0
	bne _080C583A
	adds r4, r3, #0
	ldr r0, [sp, #0x24]
	cmp r0, #1
	bne _080C5870
	cmp r4, #0
	beq _080C586C
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldr r1, [r1]
	str r1, [r0]
_080C586C:
	adds r4, #0x10
	b _080C5898
_080C5870:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _080C5896
_080C5878:
	cmp r2, #0
	beq _080C5888
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C5888:
	movs r5, #1
	rsbs r5, r5, #0
	add ip, r5
	adds r2, #0x10
	mov r7, ip
	cmp r7, #0
	bne _080C5878
_080C5896:
	adds r4, r2, #0
_080C5898:
	ldr r0, [sp, #0x34]
	ldr r2, [r0, #4]
	ldr r0, [r0]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C58AA
_080C58A4:
	adds r1, #0x10
	cmp r1, r2
	bne _080C58A4
_080C58AA:
	cmp r0, #0
	beq _080C58B2
	bl sub_80D0260
_080C58B2:
	mov r0, sb
	add r0, r8
	mov r1, r8
	ldr r2, [sp, #0x34]
	str r1, [r2]
	str r4, [r2, #4]
	str r0, [r2, #0xc]
_080C58C0:
	adds r0, r6, #0
	bl sub_8008910
	adds r4, r0, #0
	movs r3, #0xad
	lsls r3, r3, #3
	adds r2, r6, r3
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080C58DA
	ldrh r3, [r2, #4]
_080C58DA:
	str r4, [sp, #0x34]
	mov r0, sp
	ldr r2, _080C5908 @ =0x05000260
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _080C590C
	cmp r1, #0
	beq _080C58FE
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C58FE:
	ldr r1, [sp, #0x34]
	ldr r0, [r1, #4]
	adds r0, #0x10
	str r0, [r1, #4]
	b _080C59E0
	.align 2, 0
_080C5908: .4byte 0x05000260
_080C590C:
	str r1, [sp, #0x38]
	movs r0, #1
	str r0, [sp, #0x2c]
	ldr r2, [sp, #0x34]
	ldr r0, [r2]
	adds r3, r1, #0
	subs r0, r3, r0
	asrs r4, r0, #4
	str r4, [sp, #0x28]
	add r1, sp, #0x2c
	add r0, sp, #0x28
	cmp r4, #1
	bhs _080C5928
	adds r0, r1, #0
_080C5928:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C5946
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080C594A
	mov r0, sb
	bl sub_80D3BC0
	b _080C594A
_080C5946:
	movs r0, #0
	mov sb, r0
_080C594A:
	adds r4, r0, #0
	mov r8, r4
	ldr r4, [sp, #0x34]
	ldr r2, [r4]
	mov r3, r8
	ldr r5, [sp, #0x38]
	cmp r2, r5
	beq _080C5974
_080C595A:
	cmp r3, #0
	beq _080C596A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C596A:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0x38]
	cmp r2, r7
	bne _080C595A
_080C5974:
	adds r4, r3, #0
	ldr r0, [sp, #0x2c]
	cmp r0, #1
	bne _080C5990
	cmp r4, #0
	beq _080C598C
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldr r1, [r1]
	str r1, [r0]
_080C598C:
	adds r4, #0x10
	b _080C59B8
_080C5990:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _080C59B6
_080C5998:
	cmp r2, #0
	beq _080C59A8
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C59A8:
	movs r5, #1
	rsbs r5, r5, #0
	add ip, r5
	adds r2, #0x10
	mov r7, ip
	cmp r7, #0
	bne _080C5998
_080C59B6:
	adds r4, r2, #0
_080C59B8:
	ldr r0, [sp, #0x34]
	ldr r2, [r0, #4]
	ldr r0, [r0]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C59CA
_080C59C4:
	adds r1, #0x10
	cmp r1, r2
	bne _080C59C4
_080C59CA:
	cmp r0, #0
	beq _080C59D2
	bl sub_80D0260
_080C59D2:
	mov r0, sb
	add r0, r8
	mov r1, r8
	ldr r2, [sp, #0x34]
	str r1, [r2]
	str r4, [r2, #4]
	str r0, [r2, #0xc]
_080C59E0:
	adds r0, r6, #0
	bl sub_80C2D54
	ldr r3, _080C59EC @ =0x0000089C
	adds r0, r6, r3
	b _080C5A50
	.align 2, 0
_080C59EC: .4byte 0x0000089C
_080C59F0:
	adds r0, r6, #0
	bl sub_80087C8
	adds r0, r6, #0
	bl sub_80088B8
	ldr r4, _080C5A0C @ =0x000008A4
	adds r0, r6, r4
	ldr r0, [r0]
	cmp r0, #0
	beq _080C5A10
	cmp r0, #1
	beq _080C5A40
	b _080C5A46
	.align 2, 0
_080C5A0C: .4byte 0x000008A4
_080C5A10:
	adds r0, r6, #0
	bl sub_80C7BF0
	adds r0, r6, #0
	bl sub_80C7DF8
	adds r0, r6, #0
	bl sub_80C76D4
	adds r0, r6, #0
	bl sub_80C7D78
	ldr r5, [sp, #0x30]
	adds r5, #1
	str r5, [sp, #0x30]
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_80C38E4
	cmp r5, #0x3c
	bne _080C5A46
	movs r7, #0
	str r7, [sp, #0x30]
	b _080C5A46
_080C5A40:
	adds r0, r6, #0
	bl sub_80C7D78
_080C5A46:
	adds r0, r6, #0
	bl sub_80C2D54
	ldr r1, _080C5A68 @ =0x0000089C
	adds r0, r6, r1
_080C5A50:
	ldr r0, [r0]
	cmp r0, #4
	beq _080C59F0
	add sp, #0x3c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080C5A68: .4byte 0x0000089C

	thumb_func_start sub_80C5A6C
sub_80C5A6C: @ 0x080C5A6C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x68
	adds r7, r0, #0
	movs r0, #0
	str r0, [sp, #0x50]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r0, [r0]
	movs r4, #0
	add r2, sp, #0x50
	ldrh r2, [r2]
	strh r2, [r0, #0x10]
	movs r3, #0xb4
	lsls r3, r3, #3
	adds r0, r7, r3
	ldr r0, [r0]
	add r5, sp, #0x50
	ldrh r5, [r5]
	strh r5, [r0, #0x10]
	movs r6, #0xe5
	lsls r6, r6, #3
	adds r2, r7, r6
	ldr r1, [r2]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1, #0x10]
	ldr r0, [r2]
	movs r1, #6
	bl sub_805E860
	ldr r1, _080C5AD4 @ =0x000008C5
	adds r0, r7, r1
	strb r4, [r0]
	ldr r2, _080C5AD8 @ =0x000008BC
	adds r1, r7, r2
	movs r0, #3
	str r0, [r1]
	ldr r3, _080C5ADC @ =0x000008C4
	adds r1, r7, r3
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	bl sub_80C2D54
	ldr r4, _080C5AE0 @ =0x0000089C
	adds r0, r7, r4
	b _080C5E3E
	.align 2, 0
_080C5AD4: .4byte 0x000008C5
_080C5AD8: .4byte 0x000008BC
_080C5ADC: .4byte 0x000008C4
_080C5AE0: .4byte 0x0000089C
_080C5AE4:
	adds r0, r7, #0
	bl sub_80087C8
	ldr r5, _080C5BE0 @ =0x000008AC
	adds r1, r7, r5
	ldr r0, [r1]
	cmp r0, #1
	ble _080C5AF6
	b _080C5E1C
_080C5AF6:
	ldr r6, [sp, #0x50]
	adds r6, #1
	str r6, [sp, #0x58]
	ldr r2, [sp, #0x50]
	cmp r2, #0xb4
	beq _080C5B04
	b _080C5E00
_080C5B04:
	adds r0, #1
	str r0, [r1]
	ldr r3, _080C5BE4 @ =0x0000089C
	adds r1, r7, r3
	movs r0, #2
	str r0, [r1]
	ldr r4, _080C5BE8 @ =0x00000969
	adds r1, r7, r4
	movs r0, #0
	strb r0, [r1]
	movs r0, #0x14
	bl sub_80005D4
	movs r5, #0xa4
	lsls r5, r5, #3
	adds r1, r7, r5
	ldr r1, [r1]
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	adds r4, r0, #0
	movs r6, #0xaa
	lsls r6, r6, #3
	adds r5, r7, r6
	ldr r0, [r5]
	cmp r4, r0
	beq _080C5B42
	bl sub_8000608
_080C5B42:
	str r4, [r5]
	adds r0, r4, #0
	movs r1, #0
	bl sub_805E860
	ldr r0, [r5]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x10
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r4, sp, #0x10
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	movs r0, #0xab
	lsls r0, r0, #3
	adds r1, r7, r0
	adds r0, r4, #0
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r5, r6}
	stm r1!, {r5, r6}
	adds r0, r7, #0
	bl sub_8008910
	adds r6, r0, #0
	movs r0, #0xac
	lsls r0, r0, #3
	adds r5, r7, r0
	ldr r1, [r5]
	mov r8, r1
	ldr r2, _080C5BEC @ =0x00000844
	adds r0, r7, r2
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r5]
	movs r3, #0
	str r4, [sp, #0x54]
	cmp r0, #0
	beq _080C5BAE
	ldrh r3, [r5, #4]
_080C5BAE:
	lsls r2, r2, #5
	ldr r4, _080C5BF0 @ =0x06010000
	adds r2, r2, r4
	ldr r0, [sp, #0x54]
	mov r1, r8
	bl sub_8008F0C
	ldr r5, [sp, #0x54]
	mov sl, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C5BF4
	cmp r1, #0
	beq _080C5BD8
	adds r0, r1, #0
	adds r1, r5, #0
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C5BD8:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C5CC2
	.align 2, 0
_080C5BE0: .4byte 0x000008AC
_080C5BE4: .4byte 0x0000089C
_080C5BE8: .4byte 0x00000969
_080C5BEC: .4byte 0x00000844
_080C5BF0: .4byte 0x06010000
_080C5BF4:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x34]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x30]
	add r1, sp, #0x34
	add r0, sp, #0x30
	cmp r4, #1
	bhs _080C5C0C
	adds r0, r1, #0
_080C5C0C:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C5C2A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080C5C2E
	mov r0, sb
	bl sub_80D3BC0
	b _080C5C2E
_080C5C2A:
	movs r0, #0
	mov sb, r0
_080C5C2E:
	adds r5, r0, #0
	str r5, [sp, #0x60]
	ldr r2, [r6]
	mov ip, r5
	ldr r5, [sp, #0x50]
	adds r5, #1
	str r5, [sp, #0x58]
	cmp r2, r8
	beq _080C5C5A
_080C5C40:
	mov r0, ip
	cmp r0, #0
	beq _080C5C50
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080C5C50:
	adds r2, #0x10
	movs r0, #0x10
	add ip, r0
	cmp r2, r8
	bne _080C5C40
_080C5C5A:
	mov r5, ip
	ldr r0, [sp, #0x34]
	cmp r0, #1
	bne _080C5C76
	cmp r5, #0
	beq _080C5C72
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C5C72:
	adds r5, #0x10
	b _080C5C9E
_080C5C76:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _080C5C9C
_080C5C7E:
	cmp r2, #0
	beq _080C5C8E
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080C5C8E:
	movs r5, #1
	rsbs r5, r5, #0
	add r8, r5
	adds r2, #0x10
	mov r0, r8
	cmp r0, #0
	bne _080C5C7E
_080C5C9C:
	adds r5, r2, #0
_080C5C9E:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C5CAE
_080C5CA8:
	adds r1, #0x10
	cmp r1, r2
	bne _080C5CA8
_080C5CAE:
	cmp r0, #0
	beq _080C5CB6
	bl sub_80D0260
_080C5CB6:
	ldr r0, [sp, #0x60]
	add r0, sb
	ldr r1, [sp, #0x60]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C5CC2:
	adds r0, r7, #0
	bl sub_8008910
	adds r4, r0, #0
	movs r3, #0xad
	lsls r3, r3, #3
	adds r2, r7, r3
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080C5CDC
	ldrh r3, [r2, #4]
_080C5CDC:
	adds r6, r4, #0
	add r0, sp, #0x10
	ldr r2, _080C5D0C @ =0x05000260
	bl sub_8008F0C
	ldr r4, [sp, #0x54]
	mov sl, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C5D10
	cmp r1, #0
	beq _080C5D02
	adds r0, r1, #0
	adds r1, r4, #0
	ldm r1!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldr r1, [r1]
	str r1, [r0]
_080C5D02:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C5DDA
	.align 2, 0
_080C5D0C: .4byte 0x05000260
_080C5D10:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x3c]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x38]
	add r1, sp, #0x3c
	add r0, sp, #0x38
	cmp r4, #1
	bhs _080C5D28
	adds r0, r1, #0
_080C5D28:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C5D46
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080C5D4A
	mov r0, sb
	bl sub_80D3BC0
	b _080C5D4A
_080C5D46:
	movs r0, #0
	mov sb, r0
_080C5D4A:
	adds r5, r0, #0
	str r5, [sp, #0x60]
	ldr r2, [r6]
	mov ip, r5
	cmp r2, r8
	beq _080C5D72
_080C5D56:
	mov r4, ip
	cmp r4, #0
	beq _080C5D68
	mov r0, ip
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080C5D68:
	adds r2, #0x10
	movs r5, #0x10
	add ip, r5
	cmp r2, r8
	bne _080C5D56
_080C5D72:
	mov r5, ip
	ldr r0, [sp, #0x3c]
	cmp r0, #1
	bne _080C5D8E
	cmp r5, #0
	beq _080C5D8A
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C5D8A:
	adds r5, #0x10
	b _080C5DB6
_080C5D8E:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _080C5DB4
_080C5D96:
	cmp r2, #0
	beq _080C5DA6
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080C5DA6:
	movs r5, #1
	rsbs r5, r5, #0
	add r8, r5
	adds r2, #0x10
	mov r0, r8
	cmp r0, #0
	bne _080C5D96
_080C5DB4:
	adds r5, r2, #0
_080C5DB6:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C5DC6
_080C5DC0:
	adds r1, #0x10
	cmp r1, r2
	bne _080C5DC0
_080C5DC6:
	cmp r0, #0
	beq _080C5DCE
	bl sub_80D0260
_080C5DCE:
	ldr r0, [sp, #0x60]
	add r0, sb
	ldr r1, [sp, #0x60]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C5DDA:
	ldr r2, _080C5E08 @ =0x0000096E
	adds r1, r7, r2
	ldr r3, _080C5E0C @ =0x0000096F
	adds r2, r7, r3
	ldrb r0, [r2]
	ldrb r4, [r1]
	adds r0, r0, r4
	strb r0, [r1]
	movs r5, #0
	strb r5, [r2]
	ldr r6, _080C5E10 @ =0x00000979
	adds r0, r7, r6
	strb r5, [r0]
	ldr r1, _080C5E14 @ =0x0000097A
	adds r0, r7, r1
	strb r5, [r0]
	ldr r2, _080C5E18 @ =0x000008C5
	adds r0, r7, r2
	strb r5, [r0]
_080C5E00:
	ldr r3, [sp, #0x58]
	str r3, [sp, #0x50]
	b _080C5E34
	.align 2, 0
_080C5E08: .4byte 0x0000096E
_080C5E0C: .4byte 0x0000096F
_080C5E10: .4byte 0x00000979
_080C5E14: .4byte 0x0000097A
_080C5E18: .4byte 0x000008C5
_080C5E1C:
	ldr r4, _080C5F98 @ =0x0000089C
	adds r1, r7, r4
	movs r0, #6
	str r0, [r1]
	ldr r5, _080C5F9C @ =0x0000096E
	adds r1, r7, r5
	ldr r6, _080C5FA0 @ =0x0000096F
	adds r0, r7, r6
	ldrb r0, [r0]
	ldrb r2, [r1]
	adds r0, r0, r2
	strb r0, [r1]
_080C5E34:
	adds r0, r7, #0
	bl sub_80C2D54
	ldr r3, _080C5F98 @ =0x0000089C
	adds r0, r7, r3
_080C5E3E:
	ldr r0, [r0]
	cmp r0, #5
	bne _080C5E46
	b _080C5AE4
_080C5E46:
	ldr r4, _080C5F98 @ =0x0000089C
	adds r0, r7, r4
	ldr r0, [r0]
	cmp r0, #2
	beq _080C5E52
	b _080C607A
_080C5E52:
	ldr r5, _080C5FA4 @ =0x00000544
	adds r4, r7, r5
	ldr r2, [r4]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _080C5E80
	ldr r1, _080C5FA8 @ =0x00000889
	adds r0, r2, #0
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl sub_8009378
	adds r0, r7, #0
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [r4]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
_080C5E80:
	ldr r0, [r4]
	ldr r0, [r0]
	rsbs r1, r0, #0
	orrs r1, r0
	mov r6, sp
	adds r6, #0x10
	str r6, [sp, #0x54]
	add r0, sp, #0x40
	mov sl, r0
	movs r2, #0xc
	adds r2, r2, r7
	mov sb, r2
	mov r3, sp
	adds r3, #0x44
	str r3, [sp, #0x5c]
	cmp r1, #0
	bge _080C5EBE
_080C5EA2:
	adds r0, r7, #0
	bl sub_80087C8
	adds r0, r7, #0
	bl sub_80C2D54
	ldr r4, _080C5FA4 @ =0x00000544
	adds r0, r7, r4
	ldr r0, [r0]
	ldr r0, [r0]
	rsbs r1, r0, #0
	orrs r1, r0
	cmp r1, #0
	blt _080C5EA2
_080C5EBE:
	ldr r5, _080C5FA4 @ =0x00000544
	adds r4, r7, r5
	ldr r0, [r4]
	ldr r1, _080C5FA8 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl sub_800934C
	adds r0, r7, #0
	bl sub_8008940
	ldr r2, [r0, #8]
	ldr r1, [r4]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
	movs r6, #0xbe
	lsls r6, r6, #3
	adds r0, r7, r6
	ldr r0, [r0]
	movs r6, #0x80
	lsls r6, r6, #1
	movs r1, #0
	mov r8, r1
	strh r6, [r0, #0x10]
	movs r2, #0xb4
	lsls r2, r2, #3
	adds r0, r7, r2
	ldr r0, [r0]
	strh r6, [r0, #0x10]
	movs r3, #0xe5
	lsls r3, r3, #3
	adds r0, r7, r3
	ldr r0, [r0]
	strh r6, [r0, #0x10]
	ldr r4, _080C5FAC @ =0x0000097B
	adds r1, r7, r4
	movs r0, #0x19
	strb r0, [r1]
	add r1, sp, #0xc
	movs r2, #0
	bl sub_804EC84
	movs r4, #4
	movs r5, #2
	add r0, sp, #0x40
	strh r4, [r0]
	mov r0, sl
	strh r5, [r0, #2]
	ldr r0, [sp, #0x40]
	mov r1, sb
	movs r2, #0
	bl sub_804E7A0
	movs r1, #1
	mov sl, r1
	add r0, sp, #0x44
	strh r4, [r0]
	ldr r2, [sp, #0x5c]
	strh r5, [r2, #2]
	ldr r0, [sp, #0x44]
	add r3, sp, #0xc
	str r3, [sp]
	mov r4, r8
	str r4, [sp, #4]
	str r1, [sp, #8]
	mov r1, sb
	movs r2, #0
	movs r3, #0
	bl sub_804E958
	adds r0, r7, #0
	bl sub_8008910
	adds r4, r0, #0
	ldr r5, _080C5FB0 @ =0x0000083C
	adds r0, r7, r5
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r2, r0, #0
	adds r7, r4, #0
	lsls r2, r2, #5
	ldr r0, _080C5FB4 @ =0x06010000
	adds r2, r2, r0
	add r0, sp, #0x10
	mov r1, sb
	adds r3, r6, #0
	bl sub_8008F0C
	ldr r1, [sp, #0x54]
	mov r8, r1
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080C5FB8
	cmp r1, #0
	beq _080C5F90
	adds r0, r1, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C5F90:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _080C607A
	.align 2, 0
_080C5F98: .4byte 0x0000089C
_080C5F9C: .4byte 0x0000096E
_080C5FA0: .4byte 0x0000096F
_080C5FA4: .4byte 0x00000544
_080C5FA8: .4byte 0x00000889
_080C5FAC: .4byte 0x0000097B
_080C5FB0: .4byte 0x0000083C
_080C5FB4: .4byte 0x06010000
_080C5FB8:
	str r1, [sp, #0x64]
	mov r5, sl
	str r5, [sp, #0x4c]
	ldr r0, [r7]
	adds r6, r1, #0
	subs r0, r6, r0
	asrs r4, r0, #4
	str r4, [sp, #0x48]
	add r1, sp, #0x4c
	add r0, sp, #0x48
	cmp r4, #1
	bhs _080C5FD2
	adds r0, r1, #0
_080C5FD2:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C5FF0
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080C5FF4
	mov r0, sb
	bl sub_80D3BC0
	b _080C5FF4
_080C5FF0:
	movs r0, #0
	mov sb, r0
_080C5FF4:
	adds r5, r0, #0
	mov sl, r5
	ldr r2, [r7]
	mov r3, sl
	b _080C6012
_080C5FFE:
	cmp r3, #0
	beq _080C600E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080C600E:
	adds r2, #0x10
	adds r3, #0x10
_080C6012:
	ldr r0, [sp, #0x64]
	cmp r2, r0
	bne _080C5FFE
	adds r5, r3, #0
	ldr r0, [sp, #0x4c]
	cmp r0, #1
	bne _080C6034
	cmp r5, #0
	beq _080C6030
	adds r0, r5, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C6030:
	adds r5, #0x10
	b _080C6056
_080C6034:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C6054
_080C603C:
	cmp r2, #0
	beq _080C604C
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080C604C:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C603C
_080C6054:
	adds r5, r2, #0
_080C6056:
	ldr r2, [r7, #4]
	ldr r0, [r7]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C6066
_080C6060:
	adds r1, #0x10
	cmp r1, r2
	bne _080C6060
_080C6066:
	cmp r0, #0
	beq _080C606E
	bl sub_80D0260
_080C606E:
	mov r0, sb
	add r0, sl
	mov r6, sl
	str r6, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_080C607A:
	add sp, #0x68
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80C608C
sub_80C608C: @ 0x080C608C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x13c
	mov sl, r0
	ldr r0, _080C61D4 @ =0x0000096E
	add r0, sl
	ldrb r0, [r0]
	ldr r5, _080C61D8 @ =0x00000978
	add r5, sl
	ldrb r1, [r5]
	subs r0, r0, r1
	adds r4, r0, #0
	ldr r2, _080C61DC @ =0x00000974
	add r2, sl
	movs r3, #0x97
	lsls r3, r3, #4
	add r3, sl
	ldrb r0, [r3]
	adds r0, r4, r0
	subs r0, r0, r1
	str r0, [r2]
	cmp r0, #0
	bge _080C60C4
	movs r0, #0
	str r0, [r2]
_080C60C4:
	ldr r1, _080C61E0 @ =0x0000097C
	add r1, sl
	ldr r0, [r2]
	ldrb r1, [r1]
	cmp r0, r1
	blt _080C60D8
	ldr r1, _080C61E4 @ =0x0000096A
	add r1, sl
	movs r0, #1
	strb r0, [r1]
_080C60D8:
	str r4, [sp, #0x30]
	ldrb r0, [r3]
	str r0, [sp, #0x34]
	ldrb r0, [r5]
	str r0, [sp, #0x38]
	ldr r0, [r2]
	str r0, [sp, #0x3c]
	add r5, sp, #0x20
	add r4, sp, #0x30
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0x10
	bl sub_80D3994
	add r0, sp, #0x10
	adds r1, r5, #0
	movs r2, #0x10
	bl sub_80D3994
	mov r0, sl
	bl sub_8008918
	movs r2, #0xba
	lsls r2, r2, #5
	adds r1, r2, #0
	strh r1, [r4]
	strh r1, [r0]
	ldr r5, _080C61E8 @ =0x0000051C
	add r5, sl
	movs r6, #0
	ldr r0, [r5]
	cmp r6, r0
	beq _080C6124
	cmp r0, #0
	beq _080C6124
	movs r1, #3
	bl sub_8050D0C
_080C6124:
	str r6, [r5]
	movs r0, #4
	bl sub_80005D4
	adds r5, r0, #0
	add r0, sp, #0x30
	bl sub_800835C
	add r4, sp, #0x34
	adds r0, r4, #0
	bl sub_800770C
	movs r0, #0
	str r0, [sp]
	add r3, sp, #0x30
	str r3, [sp, #4]
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #0x18
	movs r3, #0
	bl sub_8050CC0
	ldr r6, _080C61E8 @ =0x0000051C
	add r6, sl
	adds r5, r0, #0
	ldr r0, [r6]
	cmp r5, r0
	beq _080C6168
	cmp r0, #0
	beq _080C6168
	movs r1, #3
	bl sub_8050D0C
_080C6168:
	str r5, [r6]
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007714
	add r0, sp, #0x30
	movs r1, #2
	bl sub_8008364
	ldr r0, _080C61E8 @ =0x0000051C
	add r0, sl
	ldr r0, [r0]
	mov sb, r0
	mov r0, sl
	bl sub_80088DC
	mov r8, r0
	mov r0, sl
	bl sub_8008920
	adds r6, r0, #0
	mov r0, sl
	bl sub_8008918
	adds r5, r0, #0
	mov r0, sl
	bl sub_8008940
	adds r4, r0, #0
	mov r0, sl
	bl sub_800894C
	ldr r1, _080C61EC @ =0x00000814
	add r1, sl
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, sb
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl sub_8050D3C
	ldr r0, _080C61E4 @ =0x0000096A
	add r0, sl
	ldrb r0, [r0]
	cmp r0, #0
	bne _080C61F0
	movs r0, #0x14
	bl sub_80005D4
	movs r1, #0xa8
	lsls r1, r1, #3
	b _080C61F8
	.align 2, 0
_080C61D4: .4byte 0x0000096E
_080C61D8: .4byte 0x00000978
_080C61DC: .4byte 0x00000974
_080C61E0: .4byte 0x0000097C
_080C61E4: .4byte 0x0000096A
_080C61E8: .4byte 0x0000051C
_080C61EC: .4byte 0x00000814
_080C61F0:
	movs r0, #0x14
	bl sub_80005D4
	ldr r1, _080C6324 @ =0x0000053C
_080C61F8:
	add r1, sl
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r5, r0, #0
	movs r4, #0xea
	lsls r4, r4, #3
	add r4, sl
	ldr r0, [r4]
	cmp r5, r0
	beq _080C6218
	bl sub_8000608
_080C6218:
	str r5, [r4]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r4]
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	strh r0, [r4, #8]
	str r0, [r4, #0xc]
	strb r1, [r4, #0x10]
	strb r1, [r4, #0x11]
	str r0, [r4, #0x14]
	strb r1, [r4, #0x18]
	ldr r5, _080C6328 @ =0x00000754
	add r5, sl
	ldr r0, [r5]
	cmp r4, r0
	beq _080C6248
	bl sub_8000608
_080C6248:
	str r4, [r5]
	movs r4, #0xea
	lsls r4, r4, #3
	add r4, sl
	mov r8, r4
	ldr r0, [r4]
	movs r1, #0
	bl sub_805E860
	ldr r0, [r5]
	movs r1, #0x40
	strh r1, [r0]
	ldr r0, [r5]
	strh r1, [r0, #2]
	ldr r4, [r5]
	ldr r6, _080C632C @ =0x00000874
	add r6, sl
	ldr r1, [r6, #4]
	adds r0, r6, #0
	bl sub_8007D4C
	strh r0, [r4, #6]
	ldr r1, [r5]
	movs r0, #9
	strh r0, [r1, #4]
	ldr r0, [r5]
	movs r5, #1
	strb r5, [r0, #0x18]
	movs r5, #0xeb
	lsls r5, r5, #3
	add r5, sl
	mov r7, r8
	ldr r0, [r7]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x40
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r4, sp, #0x40
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_80D3994
	ldm r4!, {r0, r1, r2}
	stm r5!, {r0, r1, r2}
	ldm r4!, {r0, r3, r7}
	stm r5!, {r0, r3, r7}
	ldm r4!, {r1, r2}
	stm r5!, {r1, r2}
	mov r0, sl
	bl sub_8008910
	adds r5, r0, #0
	movs r4, #0xec
	lsls r4, r4, #3
	add r4, sl
	ldr r7, [r4]
	ldr r1, [r6, #4]
	adds r0, r6, #0
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080C62DC
	ldrh r3, [r4, #4]
_080C62DC:
	adds r6, r5, #0
	lsls r2, r2, #5
	ldr r4, _080C6330 @ =0x06010000
	adds r2, r2, r4
	add r0, sp, #0x30
	adds r1, r7, #0
	bl sub_8008F0C
	add r5, sp, #0x30
	mov sb, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C6334
	cmp r1, #0
	beq _080C6308
	adds r0, r1, #0
	add r1, sp, #0x30
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C6308:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	mov r4, sp
	adds r4, #0x70
	str r4, [sp, #0x11c]
	mov r5, sp
	adds r5, #0x38
	str r5, [sp, #0x114]
	mov r6, sp
	adds r6, #0xb4
	str r6, [sp, #0x128]
	b _080C6406
	.align 2, 0
_080C6324: .4byte 0x0000053C
_080C6328: .4byte 0x00000754
_080C632C: .4byte 0x00000874
_080C6330: .4byte 0x06010000
_080C6334:
	str r1, [sp, #0x134]
	movs r7, #1
	str r7, [sp, #0x64]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x60]
	add r1, sp, #0x64
	add r0, sp, #0x60
	cmp r4, #1
	bhs _080C634C
	adds r0, r1, #0
_080C634C:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C636A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C636E
	mov r0, r8
	bl sub_80D3BC0
	b _080C636E
_080C636A:
	movs r0, #0
	mov r8, r0
_080C636E:
	adds r5, r0, #0
	str r5, [sp, #0x138]
	ldr r2, [r6]
	adds r3, r5, #0
	mov r4, sp
	adds r4, #0x70
	str r4, [sp, #0x11c]
	mov r5, sp
	adds r5, #0x38
	str r5, [sp, #0x114]
	mov r7, sp
	adds r7, #0xb4
	str r7, [sp, #0x128]
	b _080C639E
_080C638A:
	cmp r3, #0
	beq _080C639A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C639A:
	adds r2, #0x10
	adds r3, #0x10
_080C639E:
	ldr r0, [sp, #0x134]
	cmp r2, r0
	bne _080C638A
	adds r5, r3, #0
	ldr r0, [sp, #0x64]
	cmp r0, #1
	bne _080C63C0
	cmp r5, #0
	beq _080C63BC
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C63BC:
	adds r5, #0x10
	b _080C63E2
_080C63C0:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C63E0
_080C63C8:
	cmp r2, #0
	beq _080C63D8
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C63D8:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C63C8
_080C63E0:
	adds r5, r2, #0
_080C63E2:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C63F2
_080C63EC:
	adds r1, #0x10
	cmp r1, r2
	bne _080C63EC
_080C63F2:
	cmp r0, #0
	beq _080C63FA
	bl sub_80D0260
_080C63FA:
	ldr r0, [sp, #0x138]
	add r0, r8
	ldr r7, [sp, #0x138]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C6406:
	mov r0, sl
	bl sub_8008910
	adds r4, r0, #0
	movs r2, #0xed
	lsls r2, r2, #3
	add r2, sl
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080C6420
	ldrh r3, [r2, #4]
_080C6420:
	adds r6, r4, #0
	add r0, sp, #0x30
	ldr r2, _080C6450 @ =0x05000320
	bl sub_8008F0C
	add r0, sp, #0x30
	mov sb, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C6454
	cmp r1, #0
	beq _080C6446
	adds r0, r1, #0
	add r1, sp, #0x30
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C6446:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C651A
	.align 2, 0
_080C6450: .4byte 0x05000320
_080C6454:
	str r1, [sp, #0x134]
	movs r0, #1
	str r0, [sp, #0x6c]
	ldr r0, [r6]
	adds r5, r1, #0
	subs r0, r5, r0
	asrs r4, r0, #4
	str r4, [sp, #0x68]
	add r1, sp, #0x6c
	add r0, sp, #0x68
	cmp r4, #1
	bhs _080C646E
	adds r0, r1, #0
_080C646E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C648C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C6490
	mov r0, r8
	bl sub_80D3BC0
	b _080C6490
_080C648C:
	movs r0, #0
	mov r8, r0
_080C6490:
	adds r5, r0, #0
	str r5, [sp, #0x138]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x134]
	cmp r2, r7
	beq _080C64B8
_080C649E:
	cmp r3, #0
	beq _080C64AE
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C64AE:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x134]
	cmp r2, r0
	bne _080C649E
_080C64B8:
	adds r5, r3, #0
	ldr r0, [sp, #0x6c]
	cmp r0, #1
	bne _080C64D4
	cmp r5, #0
	beq _080C64D0
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C64D0:
	adds r5, #0x10
	b _080C64F6
_080C64D4:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C64F4
_080C64DC:
	cmp r2, #0
	beq _080C64EC
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C64EC:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C64DC
_080C64F4:
	adds r5, r2, #0
_080C64F6:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C6506
_080C6500:
	adds r1, #0x10
	cmp r1, r2
	bne _080C6500
_080C6506:
	cmp r0, #0
	beq _080C650E
	bl sub_80D0260
_080C650E:
	ldr r0, [sp, #0x138]
	add r0, r8
	ldr r7, [sp, #0x138]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C651A:
	movs r0, #0
	str r0, [sp, #0xf4]
	ldr r1, _080C65A4 @ =0x0000088C
	add r1, sl
	str r1, [sp, #0xf8]
_080C6524:
	ldr r2, [sp, #0xf4]
	lsls r5, r2, #3
	movs r3, #0xef
	lsls r3, r3, #3
	adds r1, r5, r3
	add r1, sl
	movs r0, #0
	movs r2, #8
	bl sub_8008EB8
	movs r0, #0
	add r1, sp, #0x30
	movs r2, #0
	bl sub_804EC84
	ldr r6, [sp, #0xf4]
	lsls r4, r6, #6
	adds r0, r4, r6
	lsls r6, r0, #2
	mov r7, sl
	adds r1, r6, r7
	add r0, sp, #0x70
	movs r2, #4
	strh r2, [r0]
	movs r7, #2
	ldr r3, [sp, #0x11c]
	strh r7, [r3, #2]
	ldr r0, [sp, #0x70]
	movs r2, #0x88
	lsls r2, r2, #1
	adds r1, r1, r2
	movs r2, #0
	bl sub_804E7A0
	str r5, [sp, #0x124]
	ldr r3, [sp, #0xf4]
	cmp r3, #2
	beq _080C65A8
	add r0, sp, #0x30
	bl sub_80D3B78
	lsls r0, r0, #3
	movs r2, #0x20
	subs r2, r2, r0
	mov r5, sl
	adds r1, r6, r5
	movs r3, #5
	add r0, sp, #0x74
	movs r6, #4
	strh r6, [r0]
	strh r7, [r0, #2]
	ldr r0, [sp, #0x74]
	movs r5, #0x88
	lsls r5, r5, #1
	adds r1, r1, r5
	add r6, sp, #0x30
	str r6, [sp]
	movs r7, #0
	str r7, [sp, #4]
	str r3, [sp, #8]
	movs r3, #0
	bl sub_804E958
	b _080C65DA
	.align 2, 0
_080C65A4: .4byte 0x0000088C
_080C65A8:
	add r0, sp, #0x30
	bl sub_80D3B78
	lsls r0, r0, #3
	movs r2, #0x20
	subs r2, r2, r0
	movs r1, #7
	add r0, sp, #0x78
	movs r3, #4
	strh r3, [r0]
	add r5, sp, #0xf4
	ldrh r5, [r5]
	strh r5, [r0, #2]
	ldr r0, [sp, #0x78]
	add r6, sp, #0x30
	str r6, [sp]
	movs r7, #0
	str r7, [sp, #4]
	str r1, [sp, #8]
	movs r1, #0xc6
	lsls r1, r1, #2
	add r1, sl
	movs r3, #0
	bl sub_804E958
_080C65DA:
	mov r0, sl
	bl sub_8008910
	adds r5, r0, #0
	ldr r0, [sp, #0xf4]
	adds r4, r4, r0
	lsls r4, r4, #2
	add r4, sl
	movs r1, #0x88
	lsls r1, r1, #1
	adds r4, r4, r1
	ldr r2, [sp, #0xf8]
	ldr r1, [r2, #4]
	adds r0, r2, #0
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r3, [sp, #0x124]
	adds r2, r3, r2
	lsls r2, r2, #5
	ldr r6, _080C663C @ =0x06010000
	adds r2, r2, r6
	add r0, sp, #0x38
	adds r1, r4, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_8008F0C
	ldr r7, [sp, #0x114]
	mov sb, r7
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080C6640
	cmp r1, #0
	beq _080C662E
	adds r0, r1, #0
	adds r1, r7, #0
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C662E:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	ldr r5, [sp, #0xf4]
	adds r5, #1
	str r5, [sp, #0x120]
	b _080C6708
	.align 2, 0
_080C663C: .4byte 0x06010000
_080C6640:
	str r1, [sp, #0x134]
	movs r0, #1
	str r0, [sp, #0x80]
	ldr r0, [r5]
	adds r6, r1, #0
	subs r0, r6, r0
	asrs r4, r0, #4
	str r4, [sp, #0x7c]
	add r1, sp, #0x80
	add r0, sp, #0x7c
	cmp r4, #1
	bhs _080C665A
	adds r0, r1, #0
_080C665A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C6678
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C667C
	mov r0, r8
	bl sub_80D3BC0
	b _080C667C
_080C6678:
	movs r0, #0
	mov r8, r0
_080C667C:
	adds r6, r0, #0
	str r6, [sp, #0x138]
	ldr r2, [r5]
	adds r3, r6, #0
	ldr r7, [sp, #0xf4]
	adds r7, #1
	str r7, [sp, #0x120]
	b _080C66A0
_080C668C:
	cmp r3, #0
	beq _080C669C
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C669C:
	adds r2, #0x10
	adds r3, #0x10
_080C66A0:
	ldr r0, [sp, #0x134]
	cmp r2, r0
	bne _080C668C
	adds r6, r3, #0
	ldr r0, [sp, #0x80]
	cmp r0, #1
	bne _080C66C2
	cmp r6, #0
	beq _080C66BE
	adds r0, r6, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C66BE:
	adds r6, #0x10
	b _080C66E4
_080C66C2:
	adds r3, r0, #0
	adds r2, r6, #0
	cmp r3, #0
	beq _080C66E2
_080C66CA:
	cmp r2, #0
	beq _080C66DA
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C66DA:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C66CA
_080C66E2:
	adds r6, r2, #0
_080C66E4:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C66F4
_080C66EE:
	adds r1, #0x10
	cmp r1, r2
	bne _080C66EE
_080C66F4:
	cmp r0, #0
	beq _080C66FC
	bl sub_80D0260
_080C66FC:
	ldr r0, [sp, #0x138]
	add r0, r8
	ldr r7, [sp, #0x138]
	str r7, [r5]
	str r6, [r5, #4]
	str r0, [r5, #0xc]
_080C6708:
	ldr r0, [sp, #0xf4]
	cmp r0, #3
	beq _080C674A
	ldr r4, [sp, #0x124]
	add r4, sl
	movs r1, #0xef
	lsls r1, r1, #3
	adds r4, r4, r1
	ldr r2, [sp, #0xf8]
	ldr r1, [r2, #4]
	adds r0, r2, #0
	bl sub_8007D4C
	adds r3, r0, #0
	ldr r5, [sp, #0x124]
	adds r3, r3, r5
	ldr r6, [sp, #0xf4]
	lsls r2, r6, #4
	adds r2, #0x6d
	movs r7, #2
	str r7, [sp]
	movs r0, #0
	str r0, [sp, #4]
	str r7, [sp, #8]
	movs r0, #1
	str r0, [sp, #0xc]
	add r0, sp, #0x84
	movs r1, #0x78
	bl sub_804EA94
	ldr r0, [sp, #0x84]
	ldr r1, [sp, #0x88]
	b _080C677C
_080C674A:
	movs r4, #0xf2
	lsls r4, r4, #3
	add r4, sl
	ldr r2, [sp, #0xf8]
	ldr r1, [r2, #4]
	adds r0, r2, #0
	bl sub_8007D4C
	adds r3, r0, #0
	adds r3, #0x18
	movs r5, #2
	str r5, [sp]
	movs r6, #0
	str r6, [sp, #4]
	str r5, [sp, #8]
	movs r0, #1
	str r0, [sp, #0xc]
	add r0, sp, #0x8c
	movs r1, #0xc8
	movs r2, #0x8d
	bl sub_804EA94
	add r0, sp, #0x8c
	ldr r1, [r0, #4]
	ldr r0, [r0]
_080C677C:
	str r0, [r4]
	str r1, [r4, #4]
	ldr r7, [sp, #0x120]
	str r7, [sp, #0xf4]
	adds r0, r7, #0
	cmp r0, #3
	bgt _080C678C
	b _080C6524
_080C678C:
	movs r0, #0x14
	bl sub_80005D4
	ldr r1, _080C68B4 @ =0x0000052C
	add r1, sl
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r4, r0, #0
	movs r7, #0xf3
	lsls r7, r7, #3
	add r7, sl
	ldr r0, [r7]
	cmp r4, r0
	beq _080C67B4
	bl sub_8000608
_080C67B4:
	str r4, [r7]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r4]
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	strh r0, [r4, #8]
	str r0, [r4, #0xc]
	strb r1, [r4, #0x10]
	strb r1, [r4, #0x11]
	str r0, [r4, #0x14]
	strb r1, [r4, #0x18]
	ldr r6, _080C68B8 @ =0x0000079C
	add r6, sl
	ldr r0, [r6]
	cmp r4, r0
	beq _080C67E4
	bl sub_8000608
_080C67E4:
	str r4, [r6]
	ldr r0, [r7]
	movs r1, #0x98
	lsls r1, r1, #4
	add r1, sl
	ldr r2, [r1]
	movs r1, #0x54
	muls r1, r2, r1
	ldr r2, _080C68BC @ =0x0000042C
	adds r1, r1, r2
	bl sub_805E860
	ldr r1, [r6]
	movs r0, #0x70
	strh r0, [r1]
	ldr r1, [r6]
	movs r0, #0x85
	strh r0, [r1, #2]
	ldr r4, [r6]
	ldr r5, _080C68C0 @ =0x00000894
	add r5, sl
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	strh r0, [r4, #6]
	ldr r1, [r6]
	movs r0, #4
	strh r0, [r1, #4]
	ldr r0, [r6]
	movs r3, #1
	mov r8, r3
	mov r4, r8
	strb r4, [r0, #0x18]
	movs r4, #0xf4
	lsls r4, r4, #3
	add r4, sl
	ldr r0, [r7]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x38
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	ldr r0, [sp, #0x114]
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	ldr r0, [sp, #0x114]
	ldm r0!, {r1, r6, r7}
	stm r4!, {r1, r6, r7}
	ldm r0!, {r2, r3, r6}
	stm r4!, {r2, r3, r6}
	ldm r0!, {r1, r7}
	stm r4!, {r1, r7}
	mov r0, sl
	bl sub_8008910
	adds r6, r0, #0
	movs r4, #0xf5
	lsls r4, r4, #3
	add r4, sl
	ldr r7, [r4]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080C6882
	ldrh r3, [r4, #4]
_080C6882:
	lsls r2, r2, #5
	ldr r4, _080C68C4 @ =0x06010000
	adds r2, r2, r4
	ldr r0, [sp, #0x114]
	adds r1, r7, #0
	bl sub_8008F0C
	ldr r5, [sp, #0x114]
	mov sb, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C68C8
	cmp r1, #0
	beq _080C68AC
	adds r0, r1, #0
	adds r1, r5, #0
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C68AC:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C6990
	.align 2, 0
_080C68B4: .4byte 0x0000052C
_080C68B8: .4byte 0x0000079C
_080C68BC: .4byte 0x0000042C
_080C68C0: .4byte 0x00000894
_080C68C4: .4byte 0x06010000
_080C68C8:
	str r1, [sp, #0x134]
	add r1, sp, #0x98
	mov r4, r8
	str r4, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x134]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x94
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080C68E4
	adds r0, r1, #0
_080C68E4:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C6902
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C6906
	mov r0, r8
	bl sub_80D3BC0
	b _080C6906
_080C6902:
	movs r0, #0
	mov r8, r0
_080C6906:
	adds r5, r0, #0
	str r5, [sp, #0x138]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x134]
	cmp r2, r7
	beq _080C692E
_080C6914:
	cmp r3, #0
	beq _080C6924
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C6924:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x134]
	cmp r2, r0
	bne _080C6914
_080C692E:
	adds r5, r3, #0
	ldr r1, [sp, #0x98]
	cmp r1, #1
	bne _080C694A
	cmp r5, #0
	beq _080C6946
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C6946:
	adds r5, #0x10
	b _080C696C
_080C694A:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C696A
_080C6952:
	cmp r2, #0
	beq _080C6962
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C6962:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C6952
_080C696A:
	adds r5, r2, #0
_080C696C:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C697C
_080C6976:
	adds r1, #0x10
	cmp r1, r2
	bne _080C6976
_080C697C:
	cmp r0, #0
	beq _080C6984
	bl sub_80D0260
_080C6984:
	ldr r0, [sp, #0x138]
	add r0, r8
	ldr r7, [sp, #0x138]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C6990:
	mov r0, sl
	bl sub_8008910
	adds r4, r0, #0
	movs r2, #0xf6
	lsls r2, r2, #3
	add r2, sl
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080C69AA
	ldrh r3, [r2, #4]
_080C69AA:
	adds r6, r4, #0
	add r0, sp, #0x38
	ldr r2, _080C69D8 @ =0x05000280
	bl sub_8008F0C
	ldr r0, [sp, #0x114]
	mov sb, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C69DC
	cmp r1, #0
	beq _080C69D0
	adds r0, r1, #0
	ldr r1, [sp, #0x114]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C69D0:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C6AA4
	.align 2, 0
_080C69D8: .4byte 0x05000280
_080C69DC:
	str r1, [sp, #0x134]
	movs r0, #1
	add r1, sp, #0xa0
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x134]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x9c
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080C69F8
	adds r0, r1, #0
_080C69F8:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C6A16
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C6A1A
	mov r0, r8
	bl sub_80D3BC0
	b _080C6A1A
_080C6A16:
	movs r0, #0
	mov r8, r0
_080C6A1A:
	adds r5, r0, #0
	str r5, [sp, #0x138]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x134]
	cmp r2, r7
	beq _080C6A42
_080C6A28:
	cmp r3, #0
	beq _080C6A38
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C6A38:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x134]
	cmp r2, r0
	bne _080C6A28
_080C6A42:
	adds r5, r3, #0
	ldr r1, [sp, #0xa0]
	cmp r1, #1
	bne _080C6A5E
	cmp r5, #0
	beq _080C6A5A
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C6A5A:
	adds r5, #0x10
	b _080C6A80
_080C6A5E:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C6A7E
_080C6A66:
	cmp r2, #0
	beq _080C6A76
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C6A76:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C6A66
_080C6A7E:
	adds r5, r2, #0
_080C6A80:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C6A90
_080C6A8A:
	adds r1, #0x10
	cmp r1, r2
	bne _080C6A8A
_080C6A90:
	cmp r0, #0
	beq _080C6A98
	bl sub_80D0260
_080C6A98:
	ldr r0, [sp, #0x138]
	add r0, r8
	ldr r7, [sp, #0x138]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C6AA4:
	movs r0, #0x14
	bl sub_80005D4
	ldr r1, _080C6BB0 @ =0x00000534
	add r1, sl
	ldr r1, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	movs r2, #0
	bl sub_805E824
	adds r4, r0, #0
	movs r7, #0xf8
	lsls r7, r7, #3
	add r7, sl
	ldr r0, [r7]
	cmp r4, r0
	beq _080C6ACC
	bl sub_8000608
_080C6ACC:
	str r4, [r7]
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r4]
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	strh r0, [r4, #8]
	str r0, [r4, #0xc]
	strb r1, [r4, #0x10]
	strb r1, [r4, #0x11]
	str r0, [r4, #0x14]
	strb r1, [r4, #0x18]
	ldr r6, _080C6BB4 @ =0x000007C4
	add r6, sl
	ldr r0, [r6]
	cmp r4, r0
	beq _080C6AFC
	bl sub_8000608
_080C6AFC:
	str r4, [r6]
	movs r0, #0x68
	strh r0, [r4]
	movs r0, #0x7d
	strh r0, [r4, #2]
	ldr r5, _080C6BB8 @ =0x00000854
	add r5, sl
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	strh r0, [r4, #6]
	ldr r1, [r6]
	movs r0, #5
	strh r0, [r1, #4]
	ldr r0, [r6]
	movs r1, #1
	mov r8, r1
	mov r2, r8
	strb r2, [r0, #0x18]
	movs r4, #0xf9
	lsls r4, r4, #3
	add r4, sl
	ldr r0, [r7]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x38
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	ldr r0, [sp, #0x114]
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	ldr r0, [sp, #0x114]
	ldm r0!, {r3, r6, r7}
	stm r4!, {r3, r6, r7}
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r6, r7}
	stm r4!, {r6, r7}
	mov r0, sl
	bl sub_8008910
	adds r6, r0, #0
	movs r4, #0xfa
	lsls r4, r4, #3
	add r4, sl
	ldr r7, [r4]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080C6B7E
	ldrh r3, [r4, #4]
_080C6B7E:
	lsls r2, r2, #5
	ldr r0, _080C6BBC @ =0x06010000
	adds r2, r2, r0
	ldr r0, [sp, #0x114]
	adds r1, r7, #0
	bl sub_8008F0C
	ldr r1, [sp, #0x114]
	mov sb, r1
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C6BC0
	cmp r1, #0
	beq _080C6BA8
	adds r0, r1, #0
	ldr r1, [sp, #0x114]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C6BA8:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C6C84
	.align 2, 0
_080C6BB0: .4byte 0x00000534
_080C6BB4: .4byte 0x000007C4
_080C6BB8: .4byte 0x00000854
_080C6BBC: .4byte 0x06010000
_080C6BC0:
	str r1, [sp, #0x134]
	add r1, sp, #0xa8
	mov r5, r8
	str r5, [r1]
	ldr r0, [r6]
	ldr r7, [sp, #0x134]
	subs r0, r7, r0
	asrs r4, r0, #4
	add r0, sp, #0xa4
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080C6BDC
	adds r0, r1, #0
_080C6BDC:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C6BFA
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C6BFE
	mov r0, r8
	bl sub_80D3BC0
	b _080C6BFE
_080C6BFA:
	movs r0, #0
	mov r8, r0
_080C6BFE:
	adds r5, r0, #0
	str r5, [sp, #0x138]
	ldr r2, [r6]
	adds r3, r5, #0
	b _080C6C1C
_080C6C08:
	cmp r3, #0
	beq _080C6C18
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C6C18:
	adds r2, #0x10
	adds r3, #0x10
_080C6C1C:
	ldr r0, [sp, #0x134]
	cmp r2, r0
	bne _080C6C08
	adds r5, r3, #0
	ldr r1, [sp, #0xa8]
	cmp r1, #1
	bne _080C6C3E
	cmp r5, #0
	beq _080C6C3A
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C6C3A:
	adds r5, #0x10
	b _080C6C60
_080C6C3E:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C6C5E
_080C6C46:
	cmp r2, #0
	beq _080C6C56
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C6C56:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C6C46
_080C6C5E:
	adds r5, r2, #0
_080C6C60:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C6C70
_080C6C6A:
	adds r1, #0x10
	cmp r1, r2
	bne _080C6C6A
_080C6C70:
	cmp r0, #0
	beq _080C6C78
	bl sub_80D0260
_080C6C78:
	ldr r0, [sp, #0x138]
	add r0, r8
	ldr r7, [sp, #0x138]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C6C84:
	mov r0, sl
	bl sub_8008910
	adds r4, r0, #0
	movs r2, #0xfb
	lsls r2, r2, #3
	add r2, sl
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080C6C9E
	ldrh r3, [r2, #4]
_080C6C9E:
	adds r6, r4, #0
	add r0, sp, #0x38
	ldr r2, _080C6CCC @ =0x050002A0
	bl sub_8008F0C
	ldr r0, [sp, #0x114]
	mov sb, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C6CD0
	cmp r1, #0
	beq _080C6CC4
	adds r0, r1, #0
	ldr r1, [sp, #0x114]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C6CC4:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C6D98
	.align 2, 0
_080C6CCC: .4byte 0x050002A0
_080C6CD0:
	str r1, [sp, #0x134]
	movs r0, #1
	add r1, sp, #0xb0
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x134]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0xac
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080C6CEC
	adds r0, r1, #0
_080C6CEC:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C6D0A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C6D0E
	mov r0, r8
	bl sub_80D3BC0
	b _080C6D0E
_080C6D0A:
	movs r0, #0
	mov r8, r0
_080C6D0E:
	adds r5, r0, #0
	str r5, [sp, #0x138]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x134]
	cmp r2, r7
	beq _080C6D36
_080C6D1C:
	cmp r3, #0
	beq _080C6D2C
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C6D2C:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x134]
	cmp r2, r0
	bne _080C6D1C
_080C6D36:
	adds r5, r3, #0
	ldr r1, [sp, #0xb0]
	cmp r1, #1
	bne _080C6D52
	cmp r5, #0
	beq _080C6D4E
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C6D4E:
	adds r5, #0x10
	b _080C6D74
_080C6D52:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C6D72
_080C6D5A:
	cmp r2, #0
	beq _080C6D6A
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C6D6A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C6D5A
_080C6D72:
	adds r5, r2, #0
_080C6D74:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C6D84
_080C6D7E:
	adds r1, #0x10
	cmp r1, r2
	bne _080C6D7E
_080C6D84:
	cmp r0, #0
	beq _080C6D8C
	bl sub_80D0260
_080C6D8C:
	ldr r0, [sp, #0x138]
	add r0, r8
	ldr r7, [sp, #0x138]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C6D98:
	movs r0, #0x1c
	bl sub_80005D4
	adds r4, r0, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r4]
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	strh r0, [r4, #8]
	str r0, [r4, #0xc]
	strb r1, [r4, #0x10]
	strb r1, [r4, #0x11]
	str r0, [r4, #0x14]
	strb r1, [r4, #0x18]
	ldr r5, _080C6E88 @ =0x000007EC
	add r5, sl
	ldr r0, [r5]
	cmp r4, r0
	beq _080C6DC6
	bl sub_8000608
_080C6DC6:
	str r4, [r5]
	movs r0, #0x68
	strh r0, [r4]
	movs r0, #0x8d
	strh r0, [r4, #2]
	ldr r0, _080C6E8C @ =0x0000086C
	add r0, sl
	mov r8, r0
	ldr r1, [r0, #4]
	bl sub_8007D4C
	strh r0, [r4, #6]
	ldr r1, [r5]
	movs r0, #8
	strh r0, [r1, #4]
	ldr r0, [r5]
	movs r1, #1
	strb r1, [r0, #0x18]
	movs r4, #0xfe
	lsls r4, r4, #3
	add r4, sl
	movs r0, #0xa7
	lsls r0, r0, #3
	add r0, sl
	ldr r5, [r0]
	ldr r6, [r5]
	ldr r0, [sp, #0x128]
	ldr r3, [r6, #0xc]
	adds r1, r5, #0
	movs r2, #6
	bl sub_80D3918
	add r0, sp, #0xb4
	ldr r0, [r0]
	ldrh r2, [r0, #0xc]
	add r0, sp, #0x38
	ldr r3, [r6, #0x10]
	adds r1, r5, #0
	bl sub_80D3918
	ldr r0, [sp, #0x114]
	adds r1, r0, #0
	movs r2, #0x20
	bl sub_80D3994
	ldr r0, [sp, #0x114]
	ldm r0!, {r2, r3, r5}
	stm r4!, {r2, r3, r5}
	ldm r0!, {r1, r6, r7}
	stm r4!, {r1, r6, r7}
	ldm r0!, {r2, r3}
	stm r4!, {r2, r3}
	mov r0, sl
	bl sub_8008910
	adds r5, r0, #0
	movs r4, #0xff
	lsls r4, r4, #3
	add r4, sl
	ldr r7, [r4]
	mov r6, r8
	ldr r1, [r6, #4]
	mov r0, r8
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _080C6E54
	ldrh r3, [r4, #4]
_080C6E54:
	adds r6, r5, #0
	lsls r2, r2, #5
	ldr r0, _080C6E90 @ =0x06010000
	adds r2, r2, r0
	ldr r0, [sp, #0x114]
	adds r1, r7, #0
	bl sub_8008F0C
	ldr r1, [sp, #0x114]
	mov sb, r1
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C6E94
	cmp r1, #0
	beq _080C6E80
	adds r0, r1, #0
	ldr r1, [sp, #0x114]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C6E80:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C6F58
	.align 2, 0
_080C6E88: .4byte 0x000007EC
_080C6E8C: .4byte 0x0000086C
_080C6E90: .4byte 0x06010000
_080C6E94:
	str r1, [sp, #0x134]
	add r1, sp, #0xc0
	movs r5, #1
	str r5, [r1]
	ldr r0, [r6]
	ldr r7, [sp, #0x134]
	subs r0, r7, r0
	asrs r4, r0, #4
	add r0, sp, #0xbc
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080C6EB0
	adds r0, r1, #0
_080C6EB0:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C6ECE
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C6ED2
	mov r0, r8
	bl sub_80D3BC0
	b _080C6ED2
_080C6ECE:
	movs r0, #0
	mov r8, r0
_080C6ED2:
	adds r5, r0, #0
	str r5, [sp, #0x138]
	ldr r2, [r6]
	adds r3, r5, #0
	b _080C6EF0
_080C6EDC:
	cmp r3, #0
	beq _080C6EEC
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C6EEC:
	adds r2, #0x10
	adds r3, #0x10
_080C6EF0:
	ldr r0, [sp, #0x134]
	cmp r2, r0
	bne _080C6EDC
	adds r5, r3, #0
	ldr r1, [sp, #0xc0]
	cmp r1, #1
	bne _080C6F12
	cmp r5, #0
	beq _080C6F0E
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C6F0E:
	adds r5, #0x10
	b _080C6F34
_080C6F12:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C6F32
_080C6F1A:
	cmp r2, #0
	beq _080C6F2A
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C6F2A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C6F1A
_080C6F32:
	adds r5, r2, #0
_080C6F34:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C6F44
_080C6F3E:
	adds r1, #0x10
	cmp r1, r2
	bne _080C6F3E
_080C6F44:
	cmp r0, #0
	beq _080C6F4C
	bl sub_80D0260
_080C6F4C:
	ldr r0, [sp, #0x138]
	add r0, r8
	ldr r7, [sp, #0x138]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C6F58:
	mov r0, sl
	bl sub_8008910
	adds r4, r0, #0
	movs r2, #0x80
	lsls r2, r2, #4
	add r2, sl
	ldr r0, [r2]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _080C6F72
	ldrh r3, [r2, #4]
_080C6F72:
	adds r6, r4, #0
	add r0, sp, #0x38
	ldr r2, _080C6FA0 @ =0x05000300
	bl sub_8008F0C
	ldr r0, [sp, #0x114]
	mov sb, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C6FA4
	cmp r1, #0
	beq _080C6F98
	adds r0, r1, #0
	ldr r1, [sp, #0x114]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C6F98:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C706C
	.align 2, 0
_080C6FA0: .4byte 0x05000300
_080C6FA4:
	str r1, [sp, #0x134]
	movs r0, #1
	add r1, sp, #0xc8
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x134]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0xc4
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080C6FC0
	adds r0, r1, #0
_080C6FC0:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C6FDE
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C6FE2
	mov r0, r8
	bl sub_80D3BC0
	b _080C6FE2
_080C6FDE:
	movs r0, #0
	mov r8, r0
_080C6FE2:
	adds r5, r0, #0
	str r5, [sp, #0x138]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x134]
	cmp r2, r7
	beq _080C700A
_080C6FF0:
	cmp r3, #0
	beq _080C7000
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C7000:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x134]
	cmp r2, r0
	bne _080C6FF0
_080C700A:
	adds r5, r3, #0
	ldr r1, [sp, #0xc8]
	cmp r1, #1
	bne _080C7026
	cmp r5, #0
	beq _080C7022
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C7022:
	adds r5, #0x10
	b _080C7048
_080C7026:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C7046
_080C702E:
	cmp r2, #0
	beq _080C703E
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C703E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C702E
_080C7046:
	adds r5, r2, #0
_080C7048:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C7058
_080C7052:
	adds r1, #0x10
	cmp r1, r2
	bne _080C7052
_080C7058:
	cmp r0, #0
	beq _080C7060
	bl sub_80D0260
_080C7060:
	ldr r0, [sp, #0x138]
	add r0, r8
	ldr r7, [sp, #0x138]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C706C:
	movs r0, #0x81
	lsls r0, r0, #4
	add r0, sl
	ldr r2, _080C70A4 @ =0x0000FFFF
	movs r1, #0xcd
	bl sub_8008C38
	mov r0, sl
	bl sub_80C2D54
	movs r0, #0
	str r0, [sp, #0xfc]
	movs r1, #0
	str r1, [sp, #0x100]
	ldr r1, [sp, #0x114]
	movs r2, #0
	adds r0, r1, #0
	adds r0, #0xc
_080C7090:
	str r2, [r0]
	subs r0, #4
	cmp r0, r1
	bge _080C7090
	movs r2, #0
	str r2, [sp, #0x104]
	movs r3, #0
	str r3, [sp, #0x108]
	b _080C76B2
	.align 2, 0
_080C70A4: .4byte 0x0000FFFF
_080C70A8:
	mov r0, sl
	bl sub_80087C8
	mov r0, sl
	bl sub_80088B8
	ldr r1, _080C70D4 @ =0x000008A8
	add r1, sl
	ldr r0, [r1]
	cmp r0, #0
	bne _080C70D8
	ldr r4, [sp, #0xfc]
	adds r4, #1
	str r4, [sp, #0xfc]
	cmp r4, #0x78
	beq _080C70CA
	b _080C76AC
_080C70CA:
	movs r5, #0
	str r5, [sp, #0xfc]
	movs r0, #1
	b _080C76AA
	.align 2, 0
_080C70D4: .4byte 0x000008A8
_080C70D8:
	mov r0, sl
	bl sub_80088D4
	str r0, [sp, #0x10c]
	ldr r4, _080C713C @ =0x0000051C
	add r4, sl
	ldr r0, [r4]
	bl sub_8050D34
	adds r7, r0, #0
	ldr r4, [r4]
	mov sb, r4
	mov r0, sl
	bl sub_80088DC
	mov r8, r0
	mov r0, sl
	bl sub_8008920
	adds r6, r0, #0
	mov r0, sl
	bl sub_8008918
	adds r5, r0, #0
	mov r0, sl
	bl sub_8008940
	adds r4, r0, #0
	mov r0, sl
	bl sub_800894C
	ldr r1, _080C7140 @ =0x00000814
	add r1, sl
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, sb
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl sub_8050D3C
	cmp r0, #6
	bhi _080C7190
	lsls r0, r0, #2
	ldr r1, _080C7144 @ =_080C7148
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080C713C: .4byte 0x0000051C
_080C7140: .4byte 0x00000814
_080C7144: .4byte _080C7148
_080C7148: @ jump table
	.4byte _080C7164 @ case 0
	.4byte _080C7190 @ case 1
	.4byte _080C7190 @ case 2
	.4byte _080C7174 @ case 3
	.4byte _080C7190 @ case 4
	.4byte _080C7190 @ case 5
	.4byte _080C7190 @ case 6
_080C7164:
	ldr r0, _080C7170 @ =0x0000051C
	add r0, sl
	ldr r0, [r0]
	bl sub_8050D5C
	b _080C7190
	.align 2, 0
_080C7170: .4byte 0x0000051C
_080C7174:
	cmp r7, #1
	bne _080C7190
	ldr r4, _080C71A8 @ =0x0000051C
	add r4, sl
	ldr r0, [r4]
	ldr r1, _080C71AC @ =gUnknown_0810823C
	bl sub_8050D8C
	ldr r0, [r4]
	bl sub_8050DD8
	ldr r0, _080C71B0 @ =0x0000096B
	add r0, sl
	strb r7, [r0]
_080C7190:
	ldr r0, _080C71B4 @ =0x000008A8
	add r0, sl
	ldr r0, [r0]
	cmp r0, #2
	bne _080C719C
	b _080C7634
_080C719C:
	cmp r0, #2
	bgt _080C71B8
	cmp r0, #1
	beq _080C71C0
	b _080C76AC
	.align 2, 0
_080C71A8: .4byte 0x0000051C
_080C71AC: .4byte gUnknown_0810823C
_080C71B0: .4byte 0x0000096B
_080C71B4: .4byte 0x000008A8
_080C71B8:
	cmp r0, #3
	bne _080C71BE
	b _080C768C
_080C71BE:
	b _080C76AC
_080C71C0:
	ldr r0, _080C7200 @ =0x0000096B
	add r0, sl
	ldrb r0, [r0]
	cmp r0, #0
	bne _080C71CC
	b _080C76AC
_080C71CC:
	ldr r6, [sp, #0x108]
	adds r6, #1
	str r6, [sp, #0x108]
	ldr r7, [sp, #0x104]
	lsls r7, r7, #2
	str r7, [sp, #0x130]
	cmp r6, #0x14
	beq _080C71DE
	b _080C73DC
_080C71DE:
	movs r0, #0
	str r0, [sp, #0x108]
	ldr r2, [sp, #0x114]
	adds r1, r2, r7
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
	ldr r3, [sp, #0x104]
	cmp r3, #2
	beq _080C7204
	movs r0, #0x82
	lsls r0, r0, #4
	add r0, sl
	movs r1, #0xbf
	bl sub_8008B6C
	b _080C7210
	.align 2, 0
_080C7200: .4byte 0x0000096B
_080C7204:
	movs r0, #0x82
	lsls r0, r0, #4
	add r0, sl
	movs r1, #0xc0
	bl sub_8008B6C
_080C7210:
	ldr r4, [sp, #0x114]
	ldr r5, [sp, #0x130]
	adds r0, r4, r5
	ldr r0, [r0]
	add r1, sp, #0x30
	movs r2, #0
	bl sub_804EC84
	ldr r6, [sp, #0x104]
	lsls r4, r6, #6
	adds r0, r4, r6
	lsls r5, r0, #2
	mov r7, sl
	adds r1, r5, r7
	add r0, sp, #0xcc
	movs r6, #4
	movs r7, #2
	movs r2, #0
	mov r8, r2
	strh r6, [r0]
	strh r7, [r0, #2]
	ldr r0, [r0]
	movs r3, #0x88
	lsls r3, r3, #1
	adds r1, r1, r3
	bl sub_804E7A0
	ldr r0, [sp, #0x104]
	cmp r0, #2
	beq _080C727E
	add r0, sp, #0x30
	bl sub_80D3B78
	lsls r0, r0, #3
	movs r2, #0x20
	subs r2, r2, r0
	mov r3, sl
	adds r1, r5, r3
	movs r3, #5
	add r0, sp, #0xd0
	strh r6, [r0]
	strh r7, [r0, #2]
	ldr r0, [r0]
	movs r5, #0x88
	lsls r5, r5, #1
	adds r1, r1, r5
	add r6, sp, #0x30
	str r6, [sp]
	mov r7, r8
	str r7, [sp, #4]
	str r3, [sp, #8]
	movs r3, #0
	bl sub_804E958
	b _080C72AE
_080C727E:
	add r0, sp, #0x30
	bl sub_80D3B78
	lsls r0, r0, #3
	movs r2, #0x20
	subs r2, r2, r0
	movs r3, #7
	add r0, sp, #0xd4
	strh r6, [r0]
	add r1, sp, #0x104
	ldrh r1, [r1]
	strh r1, [r0, #2]
	ldr r0, [r0]
	movs r1, #0xc6
	lsls r1, r1, #2
	add r1, sl
	add r5, sp, #0x30
	str r5, [sp]
	mov r6, r8
	str r6, [sp, #4]
	str r3, [sp, #8]
	movs r3, #0
	bl sub_804E958
_080C72AE:
	mov r0, sl
	bl sub_8008910
	adds r5, r0, #0
	ldr r7, [sp, #0x104]
	adds r4, r4, r7
	lsls r4, r4, #2
	add r4, sl
	movs r0, #0x88
	lsls r0, r0, #1
	adds r4, r4, r0
	ldr r0, _080C730C @ =0x0000088C
	add r0, sl
	ldr r1, [r0, #4]
	bl sub_8007D4C
	lsls r2, r7, #3
	adds r2, r2, r0
	movs r3, #0x80
	lsls r3, r3, #1
	lsls r2, r2, #5
	ldr r1, _080C7310 @ =0x06010000
	adds r2, r2, r1
	add r0, sp, #0x48
	adds r1, r4, #0
	bl sub_8008F0C
	add r2, sp, #0x48
	mov sb, r2
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	mov r3, sb
	str r3, [sp, #0x118]
	cmp r1, r0
	beq _080C7314
	cmp r1, #0
	beq _080C7304
	adds r0, r1, #0
	adds r1, r3, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C7304:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080C73DC
	.align 2, 0
_080C730C: .4byte 0x0000088C
_080C7310: .4byte 0x06010000
_080C7314:
	str r1, [sp, #0x134]
	movs r0, #1
	add r1, sp, #0xdc
	str r0, [r1]
	ldr r0, [r5]
	ldr r2, [sp, #0x134]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0xd8
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080C7330
	adds r0, r1, #0
_080C7330:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C734E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C7352
	mov r0, r8
	bl sub_80D3BC0
	b _080C7352
_080C734E:
	movs r0, #0
	mov r8, r0
_080C7352:
	adds r6, r0, #0
	str r6, [sp, #0x138]
	ldr r2, [r5]
	adds r3, r6, #0
	ldr r4, [sp, #0x134]
	cmp r2, r4
	beq _080C737A
_080C7360:
	cmp r3, #0
	beq _080C7370
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C7370:
	adds r2, #0x10
	adds r3, #0x10
	ldr r6, [sp, #0x134]
	cmp r2, r6
	bne _080C7360
_080C737A:
	adds r6, r3, #0
	ldr r1, [sp, #0xdc]
	cmp r1, #1
	bne _080C7396
	cmp r6, #0
	beq _080C7392
	adds r0, r6, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C7392:
	adds r6, #0x10
	b _080C73B8
_080C7396:
	adds r3, r1, #0
	adds r2, r6, #0
	cmp r3, #0
	beq _080C73B6
_080C739E:
	cmp r2, #0
	beq _080C73AE
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C73AE:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C739E
_080C73B6:
	adds r6, r2, #0
_080C73B8:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C73C8
_080C73C2:
	adds r1, #0x10
	cmp r1, r2
	bne _080C73C2
_080C73C8:
	cmp r0, #0
	beq _080C73D0
	bl sub_80D0260
_080C73D0:
	ldr r0, [sp, #0x138]
	add r0, r8
	ldr r1, [sp, #0x138]
	str r1, [r5]
	str r6, [r5, #4]
	str r0, [r5, #0xc]
_080C73DC:
	ldr r2, [sp, #0x114]
	ldr r3, [sp, #0x130]
	adds r0, r2, r3
	adds r1, r3, #0
	add r1, sp
	adds r1, #0x10
	ldr r2, [r0]
	ldr r0, [r1]
	cmp r2, r0
	bne _080C73F6
	ldr r4, [sp, #0x104]
	adds r4, #1
	str r4, [sp, #0x104]
_080C73F6:
	movs r0, #9
	ldr r5, [sp, #0x10c]
	ands r0, r5
	cmp r0, #0
	bne _080C7402
	b _080C7604
_080C7402:
	movs r6, #0
	str r6, [sp, #0xf4]
	mov r7, sp
	adds r7, #0x48
	str r7, [sp, #0x118]
	mov r0, sp
	adds r0, #0xe0
	str r0, [sp, #0x12c]
	mov r1, sp
	adds r1, #0xe4
	str r1, [sp, #0x110]
_080C7418:
	ldr r2, [sp, #0xf4]
	lsls r0, r2, #2
	ldr r3, [sp, #0x114]
	adds r1, r3, r0
	add r0, sp
	adds r0, #0x10
	ldr r0, [r0]
	str r0, [r1]
	add r1, sp, #0x30
	movs r2, #0
	bl sub_804EC84
	ldr r5, [sp, #0xf4]
	lsls r4, r5, #6
	adds r0, r4, r5
	lsls r5, r0, #2
	mov r6, sl
	adds r1, r5, r6
	add r0, sp, #0xe0
	movs r7, #4
	strh r7, [r0]
	movs r3, #2
	ldr r2, [sp, #0x12c]
	strh r3, [r2, #2]
	ldr r0, [r0]
	movs r6, #0x88
	lsls r6, r6, #1
	adds r1, r1, r6
	movs r2, #0
	bl sub_804E7A0
	ldr r7, [sp, #0xf4]
	cmp r7, #2
	beq _080C7492
	add r0, sp, #0x30
	bl sub_80D3B78
	lsls r0, r0, #3
	movs r2, #0x20
	subs r2, r2, r0
	mov r0, sl
	adds r1, r5, r0
	movs r3, #5
	movs r6, #4
	ldr r5, [sp, #0x110]
	strh r6, [r5]
	movs r7, #2
	strh r7, [r5, #2]
	ldr r0, [r5]
	movs r5, #0x88
	lsls r5, r5, #1
	adds r1, r1, r5
	add r6, sp, #0x30
	str r6, [sp]
	movs r7, #0
	str r7, [sp, #4]
	str r3, [sp, #8]
	movs r3, #0
	bl sub_804E958
	b _080C74C4
_080C7492:
	add r0, sp, #0x30
	bl sub_80D3B78
	lsls r0, r0, #3
	movs r2, #0x20
	subs r2, r2, r0
	movs r1, #7
	add r0, sp, #0xe8
	movs r3, #4
	strh r3, [r0]
	add r5, sp, #0xf4
	ldrh r5, [r5]
	strh r5, [r0, #2]
	ldr r0, [r0]
	add r6, sp, #0x30
	str r6, [sp]
	movs r7, #0
	str r7, [sp, #4]
	str r1, [sp, #8]
	movs r1, #0xc6
	lsls r1, r1, #2
	add r1, sl
	movs r3, #0
	bl sub_804E958
_080C74C4:
	mov r0, sl
	bl sub_8008910
	adds r5, r0, #0
	ldr r0, [sp, #0xf4]
	adds r4, r4, r0
	lsls r4, r4, #2
	add r4, sl
	movs r1, #0x88
	lsls r1, r1, #1
	adds r4, r4, r1
	ldr r0, _080C7528 @ =0x0000088C
	add r0, sl
	ldr r1, [r0, #4]
	bl sub_8007D4C
	ldr r3, [sp, #0xf4]
	lsls r2, r3, #3
	adds r2, r2, r0
	lsls r2, r2, #5
	ldr r6, _080C752C @ =0x06010000
	adds r2, r2, r6
	add r0, sp, #0x48
	adds r1, r4, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_8008F0C
	ldr r7, [sp, #0x118]
	mov sb, r7
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080C7530
	cmp r1, #0
	beq _080C7518
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C7518:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	ldr r5, [sp, #0xf4]
	adds r5, #1
	str r5, [sp, #0x120]
	b _080C75FA
	.align 2, 0
_080C7528: .4byte 0x0000088C
_080C752C: .4byte 0x06010000
_080C7530:
	str r1, [sp, #0x134]
	movs r0, #1
	add r1, sp, #0xf0
	str r0, [r1]
	ldr r0, [r5]
	ldr r6, [sp, #0x134]
	subs r0, r6, r0
	asrs r4, r0, #4
	add r0, sp, #0xec
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080C754C
	adds r0, r1, #0
_080C754C:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C756A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C756E
	mov r0, r8
	bl sub_80D3BC0
	b _080C756E
_080C756A:
	movs r0, #0
	mov r8, r0
_080C756E:
	adds r6, r0, #0
	str r6, [sp, #0x138]
	ldr r2, [r5]
	adds r3, r6, #0
	ldr r7, [sp, #0xf4]
	adds r7, #1
	str r7, [sp, #0x120]
	b _080C7592
_080C757E:
	cmp r3, #0
	beq _080C758E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C758E:
	adds r2, #0x10
	adds r3, #0x10
_080C7592:
	ldr r0, [sp, #0x134]
	cmp r2, r0
	bne _080C757E
	adds r6, r3, #0
	ldr r1, [sp, #0xf0]
	cmp r1, #1
	bne _080C75B4
	cmp r6, #0
	beq _080C75B0
	adds r0, r6, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C75B0:
	adds r6, #0x10
	b _080C75D6
_080C75B4:
	adds r3, r1, #0
	adds r2, r6, #0
	cmp r3, #0
	beq _080C75D4
_080C75BC:
	cmp r2, #0
	beq _080C75CC
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C75CC:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C75BC
_080C75D4:
	adds r6, r2, #0
_080C75D6:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C75E6
_080C75E0:
	adds r1, #0x10
	cmp r1, r2
	bne _080C75E0
_080C75E6:
	cmp r0, #0
	beq _080C75EE
	bl sub_80D0260
_080C75EE:
	ldr r0, [sp, #0x138]
	add r0, r8
	ldr r7, [sp, #0x138]
	str r7, [r5]
	str r6, [r5, #4]
	str r0, [r5, #0xc]
_080C75FA:
	ldr r0, [sp, #0x120]
	str r0, [sp, #0xf4]
	cmp r0, #3
	bgt _080C7604
	b _080C7418
_080C7604:
	ldr r1, [sp, #0x38]
	ldr r0, [sp, #0x10]
	cmp r1, r0
	bne _080C76AC
	ldr r2, [sp, #0x114]
	ldr r1, [r2, #4]
	ldr r0, [sp, #0x14]
	cmp r1, r0
	bne _080C76AC
	ldr r1, [r2, #8]
	ldr r0, [sp, #0x18]
	cmp r1, r0
	bne _080C76AC
	ldr r1, [r2, #0xc]
	ldr r0, [sp, #0x1c]
	cmp r1, r0
	bne _080C76AC
	ldr r1, _080C7630 @ =0x000008A8
	add r1, sl
	movs r0, #2
	b _080C76AA
	.align 2, 0
_080C7630: .4byte 0x000008A8
_080C7634:
	ldr r3, [sp, #0x100]
	adds r3, #1
	str r3, [sp, #0x100]
	cmp r3, #0x3c
	bne _080C7672
	ldr r1, _080C765C @ =0x0000096D
	add r1, sl
	movs r0, #1
	strb r0, [r1]
	ldr r0, _080C7660 @ =0x0000096A
	add r0, sl
	ldrb r0, [r0]
	cmp r0, #0
	bne _080C7668
	ldr r0, _080C7664 @ =0x00000818
	add r0, sl
	movs r1, #0xb7
	bl sub_8008B6C
	b _080C7672
	.align 2, 0
_080C765C: .4byte 0x0000096D
_080C7660: .4byte 0x0000096A
_080C7664: .4byte 0x00000818
_080C7668:
	ldr r0, _080C7684 @ =0x00000818
	add r0, sl
	movs r1, #0xb6
	bl sub_8008B6C
_080C7672:
	ldr r4, [sp, #0x100]
	cmp r4, #0xf0
	bne _080C76AC
	movs r5, #0
	str r5, [sp, #0x100]
	ldr r1, _080C7688 @ =0x000008A8
	add r1, sl
	movs r0, #3
	b _080C76AA
	.align 2, 0
_080C7684: .4byte 0x00000818
_080C7688: .4byte 0x000008A8
_080C768C:
	ldr r6, [sp, #0x100]
	adds r6, #1
	str r6, [sp, #0x100]
	movs r0, #9
	ldr r7, [sp, #0x10c]
	ands r0, r7
	cmp r0, #0
	bne _080C76A4
	movs r0, #0x96
	lsls r0, r0, #2
	cmp r6, r0
	bne _080C76AC
_080C76A4:
	ldr r1, _080C76D0 @ =0x0000089C
	add r1, sl
	movs r0, #7
_080C76AA:
	str r0, [r1]
_080C76AC:
	mov r0, sl
	bl sub_80C2D54
_080C76B2:
	ldr r0, _080C76D0 @ =0x0000089C
	add r0, sl
	ldr r0, [r0]
	cmp r0, #6
	bne _080C76BE
	b _080C70A8
_080C76BE:
	add sp, #0x13c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080C76D0: .4byte 0x0000089C

	thumb_func_start sub_80C76D4
sub_80C76D4: @ 0x080C76D4
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	bl sub_80088C4
	adds r6, r0, #0
	ldr r1, _080C76F8 @ =0x000008BC
	adds r0, r5, r1
	ldr r0, [r0]
	subs r0, #4
	cmp r0, #5
	bls _080C76EC
	b _080C7B12
_080C76EC:
	lsls r0, r0, #2
	ldr r1, _080C76FC @ =_080C7700
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080C76F8: .4byte 0x000008BC
_080C76FC: .4byte _080C7700
_080C7700: @ jump table
	.4byte _080C7718 @ case 0
	.4byte _080C77C4 @ case 1
	.4byte _080C7844 @ case 2
	.4byte _080C78EC @ case 3
	.4byte _080C7990 @ case 4
	.4byte _080C7AC0 @ case 5
_080C7718:
	ldr r4, _080C7768 @ =0x000008B4
	adds r2, r5, r4
	ldrb r0, [r2]
	adds r1, r0, #0
	cmp r1, #0x58
	bls _080C77A4
	subs r0, #2
	strb r0, [r2]
	ldr r0, _080C776C @ =0x000008B8
	adds r1, r5, r0
	ldrb r0, [r1]
	subs r0, #2
	strb r0, [r1]
	lsls r0, r0, #0x18
	asrs r2, r0, #0x18
	movs r0, #0x10
	rsbs r0, r0, #0
	cmp r2, r0
	bne _080C7778
	movs r0, #0
	strb r0, [r1]
	ldr r2, _080C7770 @ =0x000008B6
	adds r1, r5, r2
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	movs r0, #0x20
	ands r0, r6
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0
	beq _080C775A
	b _080C7B12
_080C775A:
	adds r4, #8
	adds r0, r5, r4
	str r1, [r0]
	ldr r0, _080C7774 @ =0x000008C4
	adds r1, r5, r0
	movs r0, #1
	b _080C7B10
	.align 2, 0
_080C7768: .4byte 0x000008B4
_080C776C: .4byte 0x000008B8
_080C7770: .4byte 0x000008B6
_080C7774: .4byte 0x000008C4
_080C7778:
	cmp r2, #0
	beq _080C777E
	b _080C7B12
_080C777E:
	movs r0, #0x20
	ands r0, r6
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0
	beq _080C778C
	b _080C7B12
_080C778C:
	ldr r2, _080C779C @ =0x000008BC
	adds r0, r5, r2
	str r1, [r0]
	ldr r4, _080C77A0 @ =0x000008C4
	adds r1, r5, r4
	movs r0, #1
	b _080C7B10
	.align 2, 0
_080C779C: .4byte 0x000008BC
_080C77A0: .4byte 0x000008C4
_080C77A4:
	cmp r1, #0x58
	beq _080C77AA
	b _080C7B12
_080C77AA:
	ldr r0, _080C77BC @ =0x000008BC
	adds r1, r5, r0
	movs r0, #0
	str r0, [r1]
	ldr r2, _080C77C0 @ =0x000008C4
	adds r1, r5, r2
	movs r0, #1
	b _080C7B10
	.align 2, 0
_080C77BC: .4byte 0x000008BC
_080C77C0: .4byte 0x000008C4
_080C77C4:
	ldr r4, _080C7808 @ =0x000008B4
	adds r2, r5, r4
	ldrb r0, [r2]
	adds r1, r0, #0
	cmp r1, #0x97
	bhi _080C7826
	adds r0, #2
	strb r0, [r2]
	ldr r0, _080C780C @ =0x000008B8
	adds r1, r5, r0
	ldrb r0, [r1]
	adds r0, #2
	strb r0, [r1]
	lsls r0, r0, #0x18
	asrs r2, r0, #0x18
	cmp r2, #0x10
	bne _080C7814
	movs r0, #0
	strb r0, [r1]
	adds r4, #2
	adds r1, r5, r4
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	adds r0, r6, #0
	ands r0, r2
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080C7800
	b _080C7B12
_080C7800:
	ldr r1, _080C7810 @ =0x000008BC
	adds r0, r5, r1
	b _080C7830
	.align 2, 0
_080C7808: .4byte 0x000008B4
_080C780C: .4byte 0x000008B8
_080C7810: .4byte 0x000008BC
_080C7814:
	cmp r2, #0
	beq _080C781A
	b _080C7B12
_080C781A:
	movs r0, #0x10
	ands r0, r6
	cmp r0, #0
	beq _080C7824
	b _080C7B12
_080C7824:
	b _080C782C
_080C7826:
	cmp r1, #0x98
	beq _080C782C
	b _080C7B12
_080C782C:
	ldr r4, _080C783C @ =0x000008BC
	adds r0, r5, r4
_080C7830:
	movs r1, #1
	str r1, [r0]
	ldr r2, _080C7840 @ =0x000008C4
	adds r0, r5, r2
	strb r1, [r0]
	b _080C7B12
	.align 2, 0
_080C783C: .4byte 0x000008BC
_080C7840: .4byte 0x000008C4
_080C7844:
	ldr r4, _080C7894 @ =0x000008B5
	adds r2, r5, r4
	ldrb r0, [r2]
	adds r1, r0, #0
	cmp r1, #0x31
	bls _080C78CC
	subs r0, #2
	strb r0, [r2]
	ldr r0, _080C7898 @ =0x000008B9
	adds r1, r5, r0
	ldrb r0, [r1]
	subs r0, #2
	strb r0, [r1]
	lsls r0, r0, #0x18
	asrs r2, r0, #0x18
	movs r0, #0x10
	rsbs r0, r0, #0
	cmp r2, r0
	bne _080C78A4
	movs r0, #0
	strb r0, [r1]
	ldr r2, _080C789C @ =0x000008B7
	adds r1, r5, r2
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	movs r0, #0x40
	ands r0, r6
	cmp r0, #0
	beq _080C7882
	b _080C7B12
_080C7882:
	adds r4, #7
	adds r1, r5, r4
	movs r0, #2
	str r0, [r1]
	ldr r0, _080C78A0 @ =0x000008C4
	adds r1, r5, r0
	movs r0, #1
	b _080C7B10
	.align 2, 0
_080C7894: .4byte 0x000008B5
_080C7898: .4byte 0x000008B9
_080C789C: .4byte 0x000008B7
_080C78A0: .4byte 0x000008C4
_080C78A4:
	cmp r2, #0
	beq _080C78AA
	b _080C7B12
_080C78AA:
	movs r0, #0x40
	ands r0, r6
	cmp r0, #0
	beq _080C78B4
	b _080C7B12
_080C78B4:
	ldr r2, _080C78C4 @ =0x000008BC
	adds r1, r5, r2
	movs r0, #2
	str r0, [r1]
	ldr r4, _080C78C8 @ =0x000008C4
	adds r1, r5, r4
	movs r0, #1
	b _080C7B10
	.align 2, 0
_080C78C4: .4byte 0x000008BC
_080C78C8: .4byte 0x000008C4
_080C78CC:
	cmp r1, #0x31
	beq _080C78D2
	b _080C7B12
_080C78D2:
	ldr r0, _080C78E4 @ =0x000008BC
	adds r1, r5, r0
	movs r0, #2
	str r0, [r1]
	ldr r2, _080C78E8 @ =0x000008C4
	adds r1, r5, r2
	movs r0, #1
	b _080C7B10
	.align 2, 0
_080C78E4: .4byte 0x000008BC
_080C78E8: .4byte 0x000008C4
_080C78EC:
	ldr r4, _080C7938 @ =0x000008B5
	adds r2, r5, r4
	ldrb r0, [r2]
	adds r1, r0, #0
	cmp r1, #0x70
	bhi _080C7970
	adds r0, #2
	strb r0, [r2]
	ldr r0, _080C793C @ =0x000008B9
	adds r1, r5, r0
	ldrb r0, [r1]
	adds r0, #2
	strb r0, [r1]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x10
	bne _080C7948
	movs r0, #0
	strb r0, [r1]
	ldr r2, _080C7940 @ =0x000008B7
	adds r1, r5, r2
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	movs r0, #0x80
	ands r0, r6
	cmp r0, #0
	beq _080C7926
	b _080C7B12
_080C7926:
	adds r4, #7
	adds r1, r5, r4
	movs r0, #3
	str r0, [r1]
	ldr r0, _080C7944 @ =0x000008C4
	adds r1, r5, r0
	movs r0, #1
	b _080C7B10
	.align 2, 0
_080C7938: .4byte 0x000008B5
_080C793C: .4byte 0x000008B9
_080C7940: .4byte 0x000008B7
_080C7944: .4byte 0x000008C4
_080C7948:
	cmp r0, #0
	beq _080C794E
	b _080C7B12
_080C794E:
	movs r0, #0x80
	ands r0, r6
	cmp r0, #0
	beq _080C7958
	b _080C7B12
_080C7958:
	ldr r2, _080C7968 @ =0x000008BC
	adds r1, r5, r2
	movs r0, #3
	str r0, [r1]
	ldr r4, _080C796C @ =0x000008C4
	adds r1, r5, r4
	movs r0, #1
	b _080C7B10
	.align 2, 0
_080C7968: .4byte 0x000008BC
_080C796C: .4byte 0x000008C4
_080C7970:
	cmp r1, #0x71
	beq _080C7976
	b _080C7B12
_080C7976:
	ldr r0, _080C7988 @ =0x000008BC
	adds r1, r5, r0
	movs r0, #3
	str r0, [r1]
	ldr r2, _080C798C @ =0x000008C4
	adds r1, r5, r2
	movs r0, #1
	b _080C7B10
	.align 2, 0
_080C7988: .4byte 0x000008BC
_080C798C: .4byte 0x000008C4
_080C7990:
	ldr r4, _080C79C0 @ =0x000008B6
	adds r2, r5, r4
	ldr r1, _080C79C4 @ =0x000008B7
	adds r0, r5, r1
	ldrb r1, [r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	ldrb r2, [r2]
	adds r1, r0, r2
	ldr r2, _080C79C8 @ =0x00000979
	adds r0, r5, r2
	ldrb r0, [r0]
	cmp r0, #0
	bne _080C79D0
	adds r4, #0xf
	adds r1, r5, r4
	movs r0, #1
	strb r0, [r1]
	ldr r0, _080C79CC @ =0x000008B5
	adds r1, r5, r0
	ldrb r0, [r1]
	subs r0, #0xa
	strb r0, [r1]
	b _080C7A0E
	.align 2, 0
_080C79C0: .4byte 0x000008B6
_080C79C4: .4byte 0x000008B7
_080C79C8: .4byte 0x00000979
_080C79CC: .4byte 0x000008B5
_080C79D0:
	cmp r0, #0x14
	bne _080C79E8
	lsls r0, r1, #2
	adds r0, r5, r0
	ldr r1, _080C79E4 @ =0x00000904
	adds r0, r0, r1
	movs r1, #1
	strb r1, [r0]
	b _080C7A0E
	.align 2, 0
_080C79E4: .4byte 0x00000904
_080C79E8:
	cmp r0, #0x32
	bne _080C7A0E
	ldr r2, _080C7A94 @ =0x00000969
	adds r0, r5, r2
	ldrb r0, [r0]
	cmp r0, #0
	bne _080C7A0E
	lsls r0, r1, #2
	adds r0, r5, r0
	ldr r4, _080C7A98 @ =0x00000905
	adds r0, r0, r4
	movs r1, #1
	strb r1, [r0]
	movs r1, #0x82
	lsls r1, r1, #4
	adds r0, r5, r1
	movs r1, #0x6c
	bl sub_8008B6C
_080C7A0E:
	ldr r4, _080C7A9C @ =0x00000979
	adds r2, r5, r4
	ldrb r0, [r2]
	adds r0, #1
	movs r3, #0
	strb r0, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x3c
	bne _080C7B12
	ldr r0, _080C7AA0 @ =0x000008B5
	adds r1, r5, r0
	ldrb r0, [r1]
	adds r0, #0xa
	strb r0, [r1]
	ldr r1, _080C7AA4 @ =0x000008C5
	adds r0, r5, r1
	strb r3, [r0]
	strb r3, [r2]
	ldr r2, _080C7AA8 @ =0x000008BC
	adds r1, r5, r2
	subs r4, #0xb9
	adds r0, r5, r4
	ldr r0, [r0]
	str r0, [r1]
	ldr r1, _080C7AAC @ =0x000008C4
	adds r0, r5, r1
	movs r1, #1
	strb r1, [r0]
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	beq _080C7A56
	adds r2, #0xac
	adds r0, r5, r2
	strb r3, [r0]
_080C7A56:
	ldr r4, _080C7AB0 @ =0x0000097F
	adds r2, r5, r4
	ldr r1, _080C7AB4 @ =gUnknown_08107FE0
	subs r4, #0xcf
	adds r0, r5, r4
	ldr r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrb r1, [r2]
	ldrb r0, [r0, #1]
	cmp r1, r0
	bne _080C7B12
	strb r3, [r2]
	ldr r0, _080C7AB8 @ =0x0000089C
	adds r1, r5, r0
	movs r0, #5
	str r0, [r1]
	movs r1, #0x81
	lsls r1, r1, #4
	adds r0, r5, r1
	movs r1, #0x80
	lsls r1, r1, #1
	bl sub_8008C28
	ldr r2, _080C7ABC @ =0x00000818
	adds r0, r5, r2
	movs r1, #0xbb
	bl sub_8008B6C
	b _080C7B12
	.align 2, 0
_080C7A94: .4byte 0x00000969
_080C7A98: .4byte 0x00000905
_080C7A9C: .4byte 0x00000979
_080C7AA0: .4byte 0x000008B5
_080C7AA4: .4byte 0x000008C5
_080C7AA8: .4byte 0x000008BC
_080C7AAC: .4byte 0x000008C4
_080C7AB0: .4byte 0x0000097F
_080C7AB4: .4byte gUnknown_08107FE0
_080C7AB8: .4byte 0x0000089C
_080C7ABC: .4byte 0x00000818
_080C7AC0:
	ldr r4, _080C7B2C @ =0x0000097A
	adds r1, r5, r4
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x3c
	bne _080C7B12
	movs r0, #0
	strb r0, [r1]
	ldr r0, _080C7B30 @ =0x000008BC
	adds r1, r5, r0
	movs r2, #0x8c
	lsls r2, r2, #4
	adds r0, r5, r2
	ldr r0, [r0]
	str r0, [r1]
	subs r4, #0xb6
	adds r0, r5, r4
	movs r4, #1
	strb r4, [r0]
	movs r0, #0xe5
	lsls r0, r0, #3
	adds r2, r5, r0
	ldr r1, [r2]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1, #0x10]
	ldr r0, [r2]
	movs r1, #6
	bl sub_805E860
	adds r0, r6, #0
	ands r0, r4
	cmp r0, #0
	beq _080C7B12
	ldr r2, _080C7B34 @ =0x00000968
	adds r1, r5, r2
	movs r0, #0
_080C7B10:
	strb r0, [r1]
_080C7B12:
	ldr r4, _080C7B34 @ =0x00000968
	adds r1, r5, r4
	ldrb r0, [r1]
	cmp r0, #0
	bne _080C7B26
	movs r0, #1
	ands r6, r0
	cmp r6, #0
	bne _080C7B26
	strb r0, [r1]
_080C7B26:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080C7B2C: .4byte 0x0000097A
_080C7B30: .4byte 0x000008BC
_080C7B34: .4byte 0x00000968

	thumb_func_start sub_80C7B38
sub_80C7B38: @ 0x080C7B38
	ldr r2, _080C7B5C @ =gUnknown_08108268
	ldr r3, _080C7B60 @ =0x000008BC
	adds r1, r0, r3
	ldr r1, [r1]
	lsls r1, r1, #1
	adds r1, r1, r2
	movs r2, #0x98
	lsls r2, r2, #4
	adds r0, r0, r2
	ldr r2, [r0]
	movs r0, #0x54
	muls r0, r2, r0
	ldrh r1, [r1]
	adds r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bx lr
	.align 2, 0
_080C7B5C: .4byte gUnknown_08108268
_080C7B60: .4byte 0x000008BC

	thumb_func_start sub_80C7B64
sub_80C7B64: @ 0x080C7B64
	ldr r1, _080C7B74 @ =gUnknown_0810827C
	ldr r2, _080C7B78 @ =0x00000984
	adds r0, r0, r2
	ldr r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	bx lr
	.align 2, 0
_080C7B74: .4byte gUnknown_0810827C
_080C7B78: .4byte 0x00000984

	thumb_func_start sub_80C7B7C
sub_80C7B7C: @ 0x080C7B7C
	push {r4, r5, lr}
	adds r5, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r4, _080C7BE8 @ =0xFFFFFF00
	ands r3, r4
	orrs r3, r2
	ldr r0, _080C7BEC @ =0xFFFF00FF
	ands r3, r0
	adds r1, r3, #0
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #4
	bls _080C7BBC
	adds r2, r4, #0
_080C7B9A:
	subs r0, r1, #5
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ands r3, r2
	orrs r3, r0
	lsrs r0, r3, #8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x10
	ldr r1, _080C7BEC @ =0xFFFF00FF
	ands r3, r1
	orrs r3, r0
	adds r1, r3, #0
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #4
	bhi _080C7B9A
_080C7BBC:
	lsls r0, r3, #0x1c
	movs r1, #0xa0
	lsls r1, r1, #0x17
	adds r0, r0, r1
	lsrs r0, r0, #0x18
	ldr r1, _080C7BE8 @ =0xFFFFFF00
	ands r3, r1
	orrs r3, r0
	lsrs r0, r3, #8
	lsls r0, r0, #0x1c
	movs r1, #0xa0
	lsls r1, r1, #0x16
	adds r0, r0, r1
	lsrs r0, r0, #0x10
	ldr r1, _080C7BEC @ =0xFFFF00FF
	ands r3, r1
	orrs r3, r0
	str r3, [r5]
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080C7BE8: .4byte 0xFFFFFF00
_080C7BEC: .4byte 0xFFFF00FF

	thumb_func_start sub_80C7BF0
sub_80C7BF0: @ 0x080C7BF0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r4, r0, #0
	bl sub_80088C4
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	bne _080C7C08
	b _080C7D60
_080C7C08:
	ldr r1, _080C7C84 @ =0x000008BC
	adds r0, r4, r1
	ldr r1, [r0]
	cmp r1, #3
	ble _080C7C14
	b _080C7D60
_080C7C14:
	ldr r2, _080C7C88 @ =0x00000968
	adds r0, r4, r2
	ldrb r0, [r0]
	cmp r0, #0
	bne _080C7C20
	b _080C7D60
_080C7C20:
	subs r2, #0xa8
	adds r0, r4, r2
	str r1, [r0]
	ldr r0, _080C7C8C @ =0x0000096F
	adds r1, r4, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r1, _080C7C90 @ =0x000008B6
	adds r2, r4, r1
	adds r1, #1
	adds r0, r4, r1
	ldrb r1, [r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	ldrb r2, [r2]
	adds r2, r2, r0
	mov sb, r2
	movs r2, #0
	mov r8, r2
	ldr r0, _080C7C94 @ =0x00000978
	adds r2, r4, r0
	ldr r1, _080C7C84 @ =0x000008BC
	adds r7, r4, r1
	subs r0, #0xb4
	adds r0, r0, r4
	mov ip, r0
	movs r6, #1
	adds r1, #0xd
	adds r5, r4, r1
	ldr r0, _080C7C98 @ =0x000008C8
	adds r1, r4, r0
	adds r0, #0xa1
	adds r3, r4, r0
_080C7C64:
	ldrb r0, [r1]
	cmp r0, #0
	beq _080C7C9C
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	movs r0, #9
	str r0, [r7]
	mov r1, ip
	strb r6, [r1]
	strb r6, [r3]
	movs r2, #0x82
	lsls r2, r2, #4
	adds r0, r4, r2
	b _080C7CBE
	.align 2, 0
_080C7C84: .4byte 0x000008BC
_080C7C88: .4byte 0x00000968
_080C7C8C: .4byte 0x0000096F
_080C7C90: .4byte 0x000008B6
_080C7C94: .4byte 0x00000978
_080C7C98: .4byte 0x000008C8
_080C7C9C:
	ldrb r0, [r1, #2]
	cmp r0, sb
	bne _080C7D20
	ldrb r0, [r1, #1]
	cmp r0, #0
	beq _080C7CC6
	movs r0, #9
	str r0, [r7]
	mov r0, ip
	strb r6, [r0]
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	strb r6, [r3]
	movs r1, #0x82
	lsls r1, r1, #4
	adds r0, r4, r1
_080C7CBE:
	movs r1, #0xc7
	bl sub_8008B6C
	b _080C7D2E
_080C7CC6:
	strb r6, [r5]
	ldr r2, _080C7CE8 @ =0x0000096F
	adds r0, r4, r2
	ldrb r0, [r0]
	subs r0, #1
	cmp r8, r0
	bne _080C7CEC
	ldrb r0, [r3]
	cmp r0, #0
	bne _080C7CEC
	movs r0, #0x97
	lsls r0, r0, #4
	adds r1, r4, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	b _080C7CEE
	.align 2, 0
_080C7CE8: .4byte 0x0000096F
_080C7CEC:
	strb r6, [r3]
_080C7CEE:
	movs r0, #8
	str r0, [r7]
	mov r1, ip
	strb r6, [r1]
	movs r2, #0x82
	lsls r2, r2, #4
	adds r0, r4, r2
	movs r1, #0xbc
	bl sub_8008B6C
	ldr r1, _080C7D18 @ =0x00000818
	adds r0, r4, r1
	movs r1, #0xbe
	bl sub_8008B6C
	ldr r2, _080C7D1C @ =0x0000097F
	adds r1, r4, r2
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	b _080C7D2E
	.align 2, 0
_080C7D18: .4byte 0x00000818
_080C7D1C: .4byte 0x0000097F
_080C7D20:
	adds r5, #4
	adds r1, #4
	movs r0, #1
	add r8, r0
	mov r0, r8
	cmp r0, #0xe
	ble _080C7C64
_080C7D2E:
	mov r1, r8
	cmp r1, #0xf
	bne _080C7D60
	ldr r2, _080C7D6C @ =0x00000978
	adds r1, r4, r2
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r0, _080C7D70 @ =0x000008BC
	adds r1, r4, r0
	movs r0, #9
	str r0, [r1]
	ldr r1, _080C7D74 @ =0x000008C4
	adds r0, r4, r1
	movs r1, #1
	strb r1, [r0]
	subs r2, #0xf
	adds r0, r4, r2
	strb r1, [r0]
	movs r1, #0x82
	lsls r1, r1, #4
	adds r0, r4, r1
	movs r1, #0xc7
	bl sub_8008B6C
_080C7D60:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080C7D6C: .4byte 0x00000978
_080C7D70: .4byte 0x000008BC
_080C7D74: .4byte 0x000008C4

	thumb_func_start sub_80C7D78
sub_80C7D78: @ 0x080C7D78
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80088CC
	movs r1, #8
	ands r1, r0
	cmp r1, #0
	beq _080C7DF2
	ldr r1, _080C7DA4 @ =0x0000081C
	adds r0, r4, r1
	movs r1, #0xb8
	bl sub_8008B6C
	ldr r2, _080C7DA8 @ =0x000008A4
	adds r1, r4, r2
	ldr r2, [r1]
	cmp r2, #0
	beq _080C7DAC
	cmp r2, #1
	beq _080C7DCE
	b _080C7DF2
	.align 2, 0
_080C7DA4: .4byte 0x0000081C
_080C7DA8: .4byte 0x000008A4
_080C7DAC:
	movs r0, #1
	str r0, [r1]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r0, [r0]
	strh r2, [r0, #0x10]
	subs r1, #0x50
	adds r0, r4, r1
	ldr r0, [r0]
	strh r2, [r0, #0x10]
	movs r1, #0xe5
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r0, [r0]
	strh r2, [r0, #0x10]
	b _080C7DF2
_080C7DCE:
	movs r0, #0
	str r0, [r1]
	movs r2, #0xbe
	lsls r2, r2, #3
	adds r0, r4, r2
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	strh r1, [r0, #0x10]
	subs r2, #0x50
	adds r0, r4, r2
	ldr r0, [r0]
	strh r1, [r0, #0x10]
	movs r2, #0xe5
	lsls r2, r2, #3
	adds r0, r4, r2
	ldr r0, [r0]
	strh r1, [r0, #0x10]
_080C7DF2:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_80C7DF8
sub_80C7DF8: @ 0x080C7DF8
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80088C4
	adds r2, r0, #0
	ldr r0, _080C7E28 @ =0x000008BC
	adds r3, r4, r0
	ldr r1, [r3]
	cmp r1, #7
	bgt _080C7E9A
	movs r0, #0x20
	ands r0, r2
	cmp r0, #0
	beq _080C7E2C
	cmp r1, #6
	beq _080C7E2C
	cmp r1, #7
	beq _080C7E2C
	cmp r1, #4
	beq _080C7E2C
	movs r0, #4
	str r0, [r3]
	b _080C7E92
	.align 2, 0
_080C7E28: .4byte 0x000008BC
_080C7E2C:
	movs r0, #0x10
	ands r0, r2
	cmp r0, #0
	beq _080C7E50
	ldr r0, _080C7E4C @ =0x000008BC
	adds r1, r4, r0
	ldr r0, [r1]
	cmp r0, #6
	beq _080C7E50
	cmp r0, #7
	beq _080C7E50
	cmp r0, #5
	beq _080C7E50
	movs r0, #5
	b _080C7E90
	.align 2, 0
_080C7E4C: .4byte 0x000008BC
_080C7E50:
	movs r0, #0x40
	ands r0, r2
	cmp r0, #0
	beq _080C7E74
	ldr r0, _080C7E70 @ =0x000008BC
	adds r1, r4, r0
	ldr r0, [r1]
	cmp r0, #4
	beq _080C7E74
	cmp r0, #5
	beq _080C7E74
	cmp r0, #6
	beq _080C7E74
	movs r0, #6
	b _080C7E90
	.align 2, 0
_080C7E70: .4byte 0x000008BC
_080C7E74:
	movs r0, #0x80
	ands r0, r2
	cmp r0, #0
	beq _080C7E9A
	ldr r0, _080C7EA0 @ =0x000008BC
	adds r1, r4, r0
	ldr r0, [r1]
	cmp r0, #4
	beq _080C7E9A
	cmp r0, #5
	beq _080C7E9A
	cmp r0, #7
	beq _080C7E9A
	movs r0, #7
_080C7E90:
	str r0, [r1]
_080C7E92:
	ldr r0, _080C7EA4 @ =0x000008C4
	adds r1, r4, r0
	movs r0, #1
	strb r0, [r1]
_080C7E9A:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080C7EA0: .4byte 0x000008BC
_080C7EA4: .4byte 0x000008C4

	thumb_func_start sub_80C7EA8
sub_80C7EA8: @ 0x080C7EA8
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _080C7EC8 @ =gUnknown_080E8560
	str r0, [r4]
	ldr r0, _080C7ECC @ =0x0000098C
	bl sub_80005D4
	adds r1, r5, #0
	bl sub_80C0DCC
	str r0, [r4, #4]
	adds r0, r4, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080C7EC8: .4byte gUnknown_080E8560
_080C7ECC: .4byte 0x0000098C

	thumb_func_start sub_80C7ED0
sub_80C7ED0: @ 0x080C7ED0
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _080C7EFC @ =gUnknown_080E8560
	str r0, [r4]
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080C7EEC
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080C7EEC:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_80007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080C7EFC: .4byte gUnknown_080E8560

	thumb_func_start sub_80C7F00
sub_80C7F00: @ 0x080C7F00
	push {lr}
	ldr r0, [r0, #4]
	bl sub_80C12B8
	pop {r1}
	bx r1

	thumb_func_start sub_80C7F0C
sub_80C7F0C: @ 0x080C7F0C
	ldr r0, [r0, #4]
	ldr r1, _080C7F18 @ =0x00000974
	adds r0, r0, r1
	ldr r0, [r0]
	bx lr
	.align 2, 0
_080C7F18: .4byte 0x00000974

	thumb_func_start sub_80C7F1C
sub_80C7F1C: @ 0x080C7F1C
	push {r4, lr}
	sub sp, #0xc
	adds r4, r0, #0
	ldr r1, [r1, #4]
	mov r0, sp
	bl sub_80C12C4
	ldr r2, [sp]
	mov r0, sp
	str r0, [sp, #4]
	str r2, [sp, #8]
	adds r1, r0, #0
	movs r0, #0
	str r0, [r1]
	str r2, [r4]
	ldr r1, [sp]
	cmp r1, #0
	beq _080C7F4C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080C7F4C:
	adds r0, r4, #0
	add sp, #0xc
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80C7F58
sub_80C7F58: @ 0x080C7F58
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x58
	adds r7, r0, #0
	adds r4, r1, #0
	bl sub_8008444
	ldr r0, _080C8310 @ =gUnknown_080E8570
	str r0, [r7, #4]
	str r4, [r7, #8]
	movs r4, #0
	strh r4, [r7, #0xc]
	str r4, [r7, #0x10]
	movs r6, #1
	rsbs r6, r6, #0
	str r6, [r7, #0x14]
	adds r0, r7, #0
	adds r0, #0x18
	movs r1, #1
	bl sub_8008B54
	str r4, [r7, #0x1c]
	str r4, [r7, #0x20]
	movs r1, #0xa9
	lsls r1, r1, #2
	adds r0, r7, r1
	str r4, [r0]
	add r0, sp, #0xc
	bl sub_800835C
	add r5, sp, #0x10
	adds r0, r5, #0
	bl sub_800770C
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r7, r1
	str r4, [sp]
	add r1, sp, #0xc
	str r1, [sp, #4]
	str r5, [sp, #8]
	movs r1, #0
	movs r2, #0x1c
	movs r3, #0
	bl sub_8050CC0
	adds r0, r5, #0
	movs r1, #2
	bl sub_8007714
	add r0, sp, #0xc
	movs r1, #2
	bl sub_8008364
	movs r0, #0xd5
	lsls r0, r0, #2
	adds r4, r7, r0
	adds r0, r4, #0
	bl sub_8007874
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007B54
	str r0, [r4, #4]
	movs r1, #0xd7
	lsls r1, r1, #2
	adds r4, r7, r1
	adds r0, r4, #0
	bl sub_8007128
	adds r0, r4, #0
	bl sub_800736C
	str r0, [r4, #4]
	movs r0, #0xd9
	lsls r0, r0, #2
	adds r4, r7, r0
	adds r0, r4, #0
	bl sub_8007874
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007B54
	str r0, [r4, #4]
	movs r1, #0xdb
	lsls r1, r1, #2
	adds r4, r7, r1
	adds r0, r4, #0
	bl sub_8007128
	adds r0, r4, #0
	bl sub_800736C
	str r0, [r4, #4]
	movs r0, #0xdd
	lsls r0, r0, #2
	adds r4, r7, r0
	adds r0, r4, #0
	bl sub_8007874
	adds r0, r4, #0
	movs r1, #1
	bl sub_8007B54
	str r0, [r4, #4]
	movs r1, #0xdf
	lsls r1, r1, #2
	adds r4, r7, r1
	adds r0, r4, #0
	bl sub_8007874
	adds r0, r4, #0
	movs r1, #1
	bl sub_8007B54
	str r0, [r4, #4]
	movs r0, #0xe1
	lsls r0, r0, #2
	adds r4, r7, r0
	adds r0, r4, #0
	bl sub_8007128
	adds r0, r4, #0
	bl sub_800736C
	str r0, [r4, #4]
	movs r1, #0xe3
	lsls r1, r1, #2
	adds r4, r7, r1
	adds r0, r4, #0
	bl sub_8007874
	adds r0, r4, #0
	movs r1, #1
	bl sub_8007B54
	str r0, [r4, #4]
	movs r0, #0xe5
	lsls r0, r0, #2
	adds r4, r7, r0
	adds r0, r4, #0
	bl sub_8007874
	adds r0, r4, #0
	movs r1, #1
	bl sub_8007B54
	str r0, [r4, #4]
	movs r1, #0xe7
	lsls r1, r1, #2
	adds r4, r7, r1
	adds r0, r4, #0
	bl sub_8007128
	adds r0, r4, #0
	bl sub_800736C
	str r0, [r4, #4]
	movs r0, #0xe9
	lsls r0, r0, #2
	adds r4, r7, r0
	movs r5, #8
	mov r1, sp
	adds r1, #0x14
	str r1, [sp, #0x50]
	movs r0, #0
	mov r8, r0
_080C80B0:
	adds r0, r4, #0
	bl sub_8007874
	mov r1, r8
	str r1, [r4, #4]
	adds r4, #8
	subs r5, #1
	cmp r5, r6
	bne _080C80B0
	movs r0, #0xfb
	lsls r0, r0, #2
	adds r4, r7, r0
	movs r5, #8
	movs r1, #0xad
	lsls r1, r1, #3
	adds r1, r7, r1
	str r1, [sp, #0x48]
	ldr r0, _080C8314 @ =0x0000057C
	adds r0, r0, r7
	mov sl, r0
	movs r1, #0xb3
	lsls r1, r1, #3
	adds r1, r7, r1
	str r1, [sp, #0x20]
	movs r0, #0xb4
	lsls r0, r0, #3
	adds r0, r7, r0
	str r0, [sp, #0x28]
	ldr r1, _080C8318 @ =0x000005B4
	adds r1, r1, r7
	mov sb, r1
	movs r0, #0xba
	lsls r0, r0, #3
	adds r0, r7, r0
	str r0, [sp, #0x34]
	movs r1, #0xbb
	lsls r1, r1, #3
	adds r1, r7, r1
	str r1, [sp, #0x38]
	ldr r0, _080C831C @ =0x000005EC
	adds r0, r7, r0
	str r0, [sp, #0x3c]
	movs r1, #0xc1
	lsls r1, r1, #3
	adds r1, r7, r1
	str r1, [sp, #0x40]
	movs r0, #0xc2
	lsls r0, r0, #3
	adds r0, r7, r0
	str r0, [sp, #0x44]
	ldr r1, _080C8320 @ =0x00000624
	adds r1, r7, r1
	str r1, [sp, #0x4c]
	movs r0, #0xc8
	lsls r0, r0, #3
	adds r0, r7, r0
	str r0, [sp, #0x54]
	movs r1, #0xc9
	lsls r1, r1, #3
	adds r1, r7, r1
	str r1, [sp, #0x1c]
	ldr r0, _080C8324 @ =0x0000064C
	adds r0, r7, r0
	str r0, [sp, #0x24]
	movs r1, #0xcc
	lsls r1, r1, #3
	adds r1, r7, r1
	str r1, [sp, #0x2c]
	ldr r0, _080C8328 @ =0x0000067C
	adds r0, r7, r0
	str r0, [sp, #0x30]
	movs r1, #0
	mov r8, r1
	movs r6, #1
	rsbs r6, r6, #0
_080C8146:
	adds r0, r4, #0
	bl sub_8007128
	mov r0, r8
	str r0, [r4, #4]
	adds r4, #8
	subs r5, #1
	cmp r5, r6
	bne _080C8146
	ldr r1, _080C832C @ =0x00000434
	adds r0, r7, r1
	movs r5, #0
	movs r4, #0
	strh r4, [r0]
	adds r1, #4
	adds r0, r7, r1
	str r7, [sp, #0x14]
	ldr r1, [sp, #0x50]
	bl sub_80E542C
	ldr r0, _080C8330 @ =0x000004D4
	adds r6, r7, r0
	ldr r1, _080C8334 @ =gUnknown_08527094
	adds r0, r6, #0
	bl sub_805E6CC
	ldr r1, _080C8338 @ =0x00000504
	adds r1, r7, r1
	str r1, [sp, #0x18]
	ldr r1, _080C833C @ =gUnknown_08728208
	ldr r0, [sp, #0x18]
	bl sub_805E6CC
	ldr r0, _080C8340 @ =0x00000534
	adds r0, r0, r7
	mov r8, r0
	ldr r1, _080C8344 @ =gUnknown_087536E4
	bl sub_805E6CC
	ldr r1, _080C8348 @ =0x00000564
	adds r0, r7, r1
	strh r4, [r0]
	strh r4, [r0, #2]
	ldr r0, [sp, #0x48]
	adds r1, r6, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	mov r0, sl
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	ldr r1, [sp, #0x20]
	strb r5, [r1]
	ldr r1, _080C834C @ =0x0000059C
	adds r0, r7, r1
	strh r4, [r0]
	strh r4, [r0, #2]
	ldr r0, [sp, #0x28]
	adds r1, r6, #0
	movs r2, #1
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	mov r0, sb
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	ldr r1, [sp, #0x34]
	strb r5, [r1]
	ldr r1, _080C8350 @ =0x000005D4
	adds r0, r7, r1
	strh r4, [r0]
	strh r4, [r0, #2]
	ldr r0, [sp, #0x38]
	mov r1, r8
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	ldr r0, [sp, #0x3c]
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	ldr r1, [sp, #0x40]
	strb r5, [r1]
	ldr r1, _080C8354 @ =0x0000060C
	adds r0, r7, r1
	strh r4, [r0]
	strh r4, [r0, #2]
	ldr r0, [sp, #0x44]
	mov r1, r8
	movs r2, #1
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	ldr r0, [sp, #0x4c]
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	ldr r1, [sp, #0x54]
	strb r5, [r1]
	ldr r0, _080C8358 @ =0x00000644
	adds r6, r7, r0
	movs r0, #0xc
	strh r0, [r6]
	movs r0, #0x28
	ldr r1, [sp, #0x1c]
	str r0, [r1]
	ldr r0, [sp, #0x24]
	ldr r1, [sp, #0x18]
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	ldr r0, [sp, #0x2c]
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	movs r0, #1
	ldr r1, [sp, #0x30]
	strb r0, [r1]
	str r4, [r6, #0x3c]
	ldr r1, _080C835C @ =0x00000684
	adds r0, r7, r1
	adds r1, r7, #0
	bl sub_80CA770
	movs r1, #0xd4
	lsls r1, r1, #3
	adds r0, r7, r1
	strb r5, [r0]
	adds r1, #1
	adds r0, r7, r1
	strb r5, [r0]
	adds r1, #1
	adds r0, r7, r1
	strb r5, [r0]
	adds r1, #1
	adds r0, r7, r1
	strb r5, [r0]
	movs r0, #0
	mov r8, r0
	movs r1, #0xea
	lsls r1, r1, #2
	adds r6, r7, r1
_080C82BC:
	mov r0, r8
	lsls r5, r0, #3
	adds r4, r5, r7
	movs r1, #0xe9
	lsls r1, r1, #2
	adds r4, r4, r1
	ldr r1, [r6]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007B54
	str r0, [r6]
	adds r5, r5, r7
	movs r0, #0xfb
	lsls r0, r0, #2
	adds r5, r5, r0
	ldr r1, [r6, #0x48]
	adds r0, r5, #0
	bl sub_80073E0
	adds r0, r5, #0
	bl sub_800736C
	str r0, [r6, #0x48]
	adds r6, #8
	movs r1, #1
	add r8, r1
	mov r0, r8
	cmp r0, #8
	ble _080C82BC
	adds r0, r7, #0
	add sp, #0x58
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080C8310: .4byte gUnknown_080E8570
_080C8314: .4byte 0x0000057C
_080C8318: .4byte 0x000005B4
_080C831C: .4byte 0x000005EC
_080C8320: .4byte 0x00000624
_080C8324: .4byte 0x0000064C
_080C8328: .4byte 0x0000067C
_080C832C: .4byte 0x00000434
_080C8330: .4byte 0x000004D4
_080C8334: .4byte gUnknown_08527094
_080C8338: .4byte 0x00000504
_080C833C: .4byte gUnknown_08728208
_080C8340: .4byte 0x00000534
_080C8344: .4byte gUnknown_087536E4
_080C8348: .4byte 0x00000564
_080C834C: .4byte 0x0000059C
_080C8350: .4byte 0x000005D4
_080C8354: .4byte 0x0000060C
_080C8358: .4byte 0x00000644
_080C835C: .4byte 0x00000684

	thumb_func_start sub_80C8360
sub_80C8360: @ 0x080C8360
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r5, r0, #0
	mov sb, r1
	ldr r0, _080C853C @ =gUnknown_080E8570
	str r0, [r5, #4]
	ldr r0, _080C8540 @ =0x00000434
	adds r4, r5, r0
	ldrh r1, [r4]
	movs r0, #0
	bl sub_8000540
	ldr r1, _080C8544 @ =0x00000534
	adds r0, r5, r1
	ldr r1, _080C8548 @ =gUnknown_080E5A28
	str r1, [r0]
	ldr r2, _080C854C @ =0x00000504
	adds r0, r5, r2
	str r1, [r0]
	subs r2, #0x30
	adds r0, r5, r2
	str r1, [r0]
	movs r1, #0x87
	lsls r1, r1, #3
	adds r0, r5, r1
	movs r1, #2
	bl sub_80E5478
	movs r2, #0xfb
	lsls r2, r2, #2
	adds r0, r5, r2
	cmp r0, #0
	beq _080C83C2
	cmp r0, r4
	beq _080C83C2
	adds r6, r0, #0
_080C83AC:
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	cmp r6, r4
	bne _080C83AC
_080C83C2:
	movs r1, #0xe9
	lsls r1, r1, #2
	adds r0, r5, r1
	adds r7, r5, #0
	adds r7, #0x20
	movs r2, #0x24
	adds r2, r2, r5
	mov r8, r2
	cmp r0, #0
	beq _080C83FA
	adds r1, #0x48
	adds r4, r5, r1
	cmp r0, r4
	beq _080C83FA
	movs r2, #0xe9
	lsls r2, r2, #2
	adds r6, r5, r2
_080C83E4:
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	cmp r6, r4
	bne _080C83E4
_080C83FA:
	movs r0, #0xe7
	lsls r0, r0, #2
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r1, #0xe5
	lsls r1, r1, #2
	adds r4, r5, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r2, #0xe3
	lsls r2, r2, #2
	adds r4, r5, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r0, #0xe1
	lsls r0, r0, #2
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r1, #0xdf
	lsls r1, r1, #2
	adds r4, r5, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r2, #0xdd
	lsls r2, r2, #2
	adds r4, r5, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r0, #0xdb
	lsls r0, r0, #2
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r1, #0xd9
	lsls r1, r1, #2
	adds r4, r5, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r2, #0xd7
	lsls r2, r2, #2
	adds r4, r5, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r0, #0xd5
	lsls r0, r0, #2
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r5, r1
	movs r1, #2
	bl sub_8050D0C
	ldr r0, [r5, #0x20]
	lsls r0, r0, #4
	adds r0, #4
	adds r1, r7, r0
	mov r0, r8
	cmp r0, r1
	beq _080C84F6
_080C84F0:
	adds r0, #0x10
	cmp r0, r1
	bne _080C84F0
_080C84F6:
	ldr r0, [r5, #0x1c]
	cmp r0, #0
	beq _080C8528
	adds r4, r0, #0
	adds r0, #0x28
	movs r1, #2
	bl sub_8075DEC
	adds r0, r4, #0
	adds r0, #0x18
	ldr r2, [r0, #4]
	ldr r1, [r4, #0x18]
	cmp r1, r2
	beq _080C8518
_080C8512:
	adds r1, #0x40
	cmp r1, r2
	bne _080C8512
_080C8518:
	ldr r0, [r0]
	cmp r0, #0
	beq _080C8522
	bl sub_80D0260
_080C8522:
	adds r0, r4, #0
	bl sub_8000608
_080C8528:
	adds r0, r5, #0
	mov r1, sb
	bl sub_80086BC
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080C853C: .4byte gUnknown_080E8570
_080C8540: .4byte 0x00000434
_080C8544: .4byte 0x00000534
_080C8548: .4byte gUnknown_080E5A28
_080C854C: .4byte 0x00000504

	thumb_func_start sub_80C8550
sub_80C8550: @ 0x080C8550
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r4, _080C858C @ =0x03FF03FF
	ldr r1, _080C8590 @ =0x0600FF8A
	adds r0, r4, #0
	movs r2, #0x28
	bl sub_8008EB8
	ldr r1, _080C8594 @ =0x0600FFCA
	adds r0, r4, #0
	movs r2, #0x28
	bl sub_8008EB8
	ldr r0, [r5, #8]
	ldr r1, _080C8598 @ =0x00001AA8
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r1, _080C859C @ =0x0600FFB2
	movs r2, #0x20
	str r2, [sp]
	movs r2, #0xa0
	movs r3, #0
	bl sub_804EDB4
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080C858C: .4byte 0x03FF03FF
_080C8590: .4byte 0x0600FF8A
_080C8594: .4byte 0x0600FFCA
_080C8598: .4byte 0x00001AA8
_080C859C: .4byte 0x0600FFB2

	thumb_func_start sub_80C85A0
sub_80C85A0: @ 0x080C85A0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x144
	adds r7, r0, #0
	bl sub_8008918
	add r2, sp, #0xc
	movs r3, #0xe2
	lsls r3, r3, #5
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #8]
	adds r0, r7, #0
	bl sub_8008918
	add r2, sp, #0xc
	ldr r4, _080C87B0 @ =0x00001D42
	adds r1, r4, #0
	strh r1, [r2]
	strh r1, [r0, #0xa]
	adds r0, r7, #0
	bl sub_8008918
	add r2, sp, #0xc
	ldr r5, _080C87B4 @ =0x00003E41
	adds r1, r5, #0
	strh r1, [r2]
	strh r1, [r0, #0xc]
	adds r0, r7, #0
	bl sub_8008918
	add r2, sp, #0xc
	movs r6, #0xfa
	lsls r6, r6, #5
	adds r1, r6, #0
	strh r1, [r2]
	strh r1, [r0, #0xe]
	movs r4, #1
	rsbs r4, r4, #0
	ldr r0, _080C87B8 @ =0x0600E800
	mov sb, r0
	movs r5, #0x80
	lsls r5, r5, #4
	adds r0, r4, #0
	mov r1, sb
	adds r2, r5, #0
	bl sub_8008EB8
	ldr r6, _080C87BC @ =0x0600F000
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl sub_8008EB8
	ldr r1, _080C87C0 @ =0x0600F800
	adds r0, r4, #0
	adds r2, r5, #0
	bl sub_8008EB8
	movs r1, #0xc0
	lsls r1, r1, #0x13
	mov r8, r1
	movs r2, #0x80
	lsls r2, r2, #8
	movs r0, #0
	bl sub_8008EB8
	adds r0, r7, #0
	bl sub_8008918
	add r1, sp, #0xc
	movs r3, #0xf2
	lsls r3, r3, #5
	adds r2, r3, #0
	strh r2, [r1]
	movs r4, #0
	strh r2, [r0]
	ldr r0, _080C87C4 @ =gUnknown_080F9F70
	ldr r0, [r0]
	ldr r1, _080C87C8 @ =gUnknown_080F9F74
	ldr r2, [r1]
	mov r1, r8
	bl sub_8008E64
	ldr r0, _080C87CC @ =0x00030003
	adds r1, r6, #0
	adds r2, r5, #0
	bl sub_8008EB8
	movs r0, #3
	str r0, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_8051320
	ldr r0, _080C87D0 @ =gUnknown_080F9F78
	ldr r0, [r0]
	movs r1, #0xa0
	lsls r1, r1, #0x13
	movs r2, #0x20
	bl sub_8008E64
	ldr r0, _080C87D4 @ =0x03FF03FF
	mov r1, sb
	adds r2, r5, #0
	bl sub_8008EB8
	adds r0, r7, #0
	bl sub_8008918
	add r2, sp, #0xc
	ldr r4, _080C87D8 @ =0x000001EB
	adds r1, r4, #0
	strh r1, [r2]
	strh r1, [r0, #0x1e]
	movs r5, #0
	mov sl, r5
	add r6, sp, #0xc4
	mov r8, r6
	mov r0, sp
	adds r0, #0x14
	str r0, [sp, #0x130]
	mov r1, sp
	adds r1, #0xc8
	str r1, [sp, #0x11c]
	adds r2, #0xc0
	str r2, [sp, #0x120]
	mov r3, sp
	adds r3, #0x54
	str r3, [sp, #0x100]
	mov r4, sp
	adds r4, #0x64
	str r4, [sp, #0x104]
	mov r5, sp
	adds r5, #0x74
	str r5, [sp, #0x108]
	mov r6, sp
	adds r6, #0x84
	str r6, [sp, #0x10c]
	adds r0, #0x80
	str r0, [sp, #0x110]
	subs r1, #0x24
	str r1, [sp, #0x114]
	subs r2, #0x18
	str r2, [sp, #0x118]
	movs r3, #1
	mov sb, r3
	ldr r5, _080C87DC @ =0x06001400
	mov r6, r8
	ldr r4, _080C87E0 @ =gUnknown_081177F6
_080C86DA:
	ldrh r1, [r4]
	mov r0, sb
	strh r0, [r6]
	movs r3, #2
	mov r2, r8
	strh r3, [r2, #2]
	ldr r0, [r6]
	str r1, [sp]
	movs r1, #0
	str r1, [sp, #4]
	mov r2, sb
	str r2, [sp, #8]
	add r1, sp, #0x14
	movs r2, #0
	movs r3, #0
	bl sub_804E5AC
	ldr r0, [sp, #0x130]
	adds r1, r5, #0
	movs r2, #0x40
	bl sub_8008E64
	adds r5, #0x40
	adds r4, #2
	movs r3, #1
	add sl, r3
	mov r0, sl
	cmp r0, #9
	ble _080C86DA
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r7, r1
	bl sub_8050D5C
	movs r4, #2
	movs r6, #0
	add r0, sp, #0xc8
	strh r4, [r0]
	ldr r2, [sp, #0x11c]
	strh r4, [r2, #2]
	ldr r0, [r0]
	ldr r3, _080C87E4 @ =0x00000454
	adds r5, r7, r3
	adds r1, r5, #0
	movs r2, #0
	bl sub_804E7A0
	ldr r1, _080C87E8 @ =gUnknown_0811780C
	movs r0, #1
	mov sb, r0
	add r0, sp, #0xcc
	strh r4, [r0]
	ldr r2, [sp, #0x120]
	strh r4, [r2, #2]
	ldr r0, [r0]
	str r1, [sp]
	str r6, [sp, #4]
	mov r3, sb
	str r3, [sp, #8]
	adds r1, r5, #0
	movs r2, #0
	movs r3, #0
	bl sub_804E958
	adds r0, r7, #0
	bl sub_8008910
	str r0, [sp, #0x138]
	add r0, sp, #0x54
	adds r1, r5, #0
	ldr r2, _080C87EC @ =0x06000400
	movs r3, #0x80
	bl sub_8008F0C
	ldr r4, [sp, #0x100]
	mov sl, r4
	ldr r5, [sp, #0x138]
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080C87F8
	cmp r1, #0
	beq _080C878C
	adds r0, r1, #0
	adds r1, r4, #0
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080C878C:
	ldr r4, [sp, #0x138]
	ldr r0, [r4, #4]
	adds r0, #0x10
	str r0, [r4, #4]
	adds r5, r7, #0
	adds r5, #0x1c
	str r5, [sp, #0x134]
	movs r6, #0xca
	lsls r6, r6, #3
	adds r6, r7, r6
	str r6, [sp, #0x12c]
	ldr r0, _080C87F0 @ =0x0000056C
	adds r0, r7, r0
	str r0, [sp, #0x124]
	ldr r1, _080C87F4 @ =0x000005DC
	adds r1, r7, r1
	str r1, [sp, #0x128]
	b _080C88EC
	.align 2, 0
_080C87B0: .4byte 0x00001D42
_080C87B4: .4byte 0x00003E41
_080C87B8: .4byte 0x0600E800
_080C87BC: .4byte 0x0600F000
_080C87C0: .4byte 0x0600F800
_080C87C4: .4byte gUnknown_080F9F70
_080C87C8: .4byte gUnknown_080F9F74
_080C87CC: .4byte 0x00030003
_080C87D0: .4byte gUnknown_080F9F78
_080C87D4: .4byte 0x03FF03FF
_080C87D8: .4byte 0x000001EB
_080C87DC: .4byte 0x06001400
_080C87E0: .4byte gUnknown_081177F6
_080C87E4: .4byte 0x00000454
_080C87E8: .4byte gUnknown_0811780C
_080C87EC: .4byte 0x06000400
_080C87F0: .4byte 0x0000056C
_080C87F4: .4byte 0x000005DC
_080C87F8:
	mov r8, r1
	add r1, sp, #0xd4
	mov r2, sb
	str r2, [r1]
	ldr r3, [sp, #0x138]
	ldr r0, [r3]
	mov r4, r8
	subs r0, r4, r0
	asrs r4, r0, #4
	add r0, sp, #0xd0
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080C8816
	adds r0, r1, #0
_080C8816:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C8834
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080C8838
	mov r0, sb
	bl sub_80D3BC0
	b _080C8838
_080C8834:
	movs r0, #0
	mov sb, r0
_080C8838:
	adds r5, r0, #0
	str r5, [sp, #0x13c]
	ldr r5, [sp, #0x138]
	ldr r2, [r5]
	ldr r3, [sp, #0x13c]
	adds r6, r7, #0
	adds r6, #0x1c
	str r6, [sp, #0x134]
	movs r0, #0xca
	lsls r0, r0, #3
	adds r0, r7, r0
	str r0, [sp, #0x12c]
	ldr r1, _080C8894 @ =0x0000056C
	adds r1, r7, r1
	str r1, [sp, #0x124]
	ldr r4, _080C8898 @ =0x000005DC
	adds r4, r7, r4
	str r4, [sp, #0x128]
	cmp r2, r8
	beq _080C8878
_080C8860:
	cmp r3, #0
	beq _080C8870
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080C8870:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _080C8860
_080C8878:
	adds r5, r3, #0
	ldr r1, [sp, #0xd4]
	cmp r1, #1
	bne _080C889C
	cmp r5, #0
	beq _080C8890
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080C8890:
	adds r5, #0x10
	b _080C88C4
	.align 2, 0
_080C8894: .4byte 0x0000056C
_080C8898: .4byte 0x000005DC
_080C889C:
	mov r8, r1
	adds r2, r5, #0
	cmp r1, #0
	beq _080C88C2
_080C88A4:
	cmp r2, #0
	beq _080C88B4
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080C88B4:
	movs r0, #1
	rsbs r0, r0, #0
	add r8, r0
	adds r2, #0x10
	mov r1, r8
	cmp r1, #0
	bne _080C88A4
_080C88C2:
	adds r5, r2, #0
_080C88C4:
	ldr r3, [sp, #0x138]
	ldr r2, [r3, #4]
	ldr r0, [r3]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C88D6
_080C88D0:
	adds r1, #0x10
	cmp r1, r2
	bne _080C88D0
_080C88D6:
	cmp r0, #0
	beq _080C88DE
	bl sub_80D0260
_080C88DE:
	ldr r0, [sp, #0x13c]
	add r0, sb
	ldr r4, [sp, #0x13c]
	ldr r6, [sp, #0x138]
	str r4, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C88EC:
	ldr r0, _080C8954 @ =0x0600FFB4
	movs r1, #0
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	movs r2, #2
	movs r3, #2
	bl sub_804E9F4
	adds r0, r7, #0
	bl sub_80C8550
	adds r0, r7, #0
	bl sub_8008910
	adds r4, r0, #0
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r2, r0, #0
	str r4, [sp, #0x138]
	ldr r1, _080C8958 @ =gUnknown_08752F8C
	lsls r2, r2, #5
	ldr r3, _080C895C @ =0x06010000
	adds r2, r2, r3
	add r0, sp, #0x54
	movs r3, #0x80
	bl sub_8008F0C
	ldr r4, [sp, #0x100]
	mov sl, r4
	ldr r5, [sp, #0x138]
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080C8960
	cmp r1, #0
	beq _080C894A
	adds r0, r1, #0
	adds r1, r4, #0
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080C894A:
	ldr r4, [sp, #0x138]
	ldr r0, [r4, #4]
	adds r0, #0x10
	str r0, [r4, #4]
	b _080C8A32
	.align 2, 0
_080C8954: .4byte 0x0600FFB4
_080C8958: .4byte gUnknown_08752F8C
_080C895C: .4byte 0x06010000
_080C8960:
	mov r8, r1
	movs r0, #1
	add r1, sp, #0xdc
	str r0, [r1]
	ldr r5, [sp, #0x138]
	ldr r0, [r5]
	mov r6, r8
	subs r0, r6, r0
	asrs r4, r0, #4
	add r0, sp, #0xd8
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080C897E
	adds r0, r1, #0
_080C897E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C899C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080C89A0
	mov r0, sb
	bl sub_80D3BC0
	b _080C89A0
_080C899C:
	movs r0, #0
	mov sb, r0
_080C89A0:
	adds r5, r0, #0
	str r5, [sp, #0x13c]
	ldr r0, [sp, #0x138]
	ldr r2, [r0]
	adds r3, r5, #0
	cmp r2, r8
	beq _080C89C6
_080C89AE:
	cmp r3, #0
	beq _080C89BE
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080C89BE:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _080C89AE
_080C89C6:
	adds r5, r3, #0
	ldr r1, [sp, #0xdc]
	cmp r1, #1
	bne _080C89E2
	cmp r5, #0
	beq _080C89DE
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C89DE:
	adds r5, #0x10
	b _080C8A0A
_080C89E2:
	mov r8, r1
	adds r2, r5, #0
	cmp r1, #0
	beq _080C8A08
_080C89EA:
	cmp r2, #0
	beq _080C89FA
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r5, r6}
	stm r0!, {r3, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080C89FA:
	movs r4, #1
	rsbs r4, r4, #0
	add r8, r4
	adds r2, #0x10
	mov r5, r8
	cmp r5, #0
	bne _080C89EA
_080C8A08:
	adds r5, r2, #0
_080C8A0A:
	ldr r6, [sp, #0x138]
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C8A1C
_080C8A16:
	adds r1, #0x10
	cmp r1, r2
	bne _080C8A16
_080C8A1C:
	cmp r0, #0
	beq _080C8A24
	bl sub_80D0260
_080C8A24:
	ldr r0, [sp, #0x13c]
	add r0, sb
	ldr r1, [sp, #0x13c]
	ldr r2, [sp, #0x138]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_080C8A32:
	adds r0, r7, #0
	bl sub_8008910
	adds r4, r0, #0
	movs r3, #0xd7
	lsls r3, r3, #2
	adds r0, r7, r3
	ldr r1, [r0, #4]
	bl sub_80074C0
	adds r2, r0, #0
	str r4, [sp, #0x138]
	ldr r1, _080C8A84 @ =gUnknown_0875300C
	lsls r2, r2, #5
	ldr r4, _080C8A88 @ =0x05000200
	adds r2, r2, r4
	add r0, sp, #0x54
	movs r3, #0x20
	bl sub_8008F0C
	ldr r5, [sp, #0x100]
	mov sl, r5
	ldr r6, [sp, #0x138]
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C8A8C
	cmp r1, #0
	beq _080C8A78
	adds r0, r1, #0
	adds r1, r5, #0
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C8A78:
	ldr r5, [sp, #0x138]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080C8B5E
	.align 2, 0
_080C8A84: .4byte gUnknown_0875300C
_080C8A88: .4byte 0x05000200
_080C8A8C:
	mov r8, r1
	movs r0, #1
	add r1, sp, #0xe4
	str r0, [r1]
	ldr r6, [sp, #0x138]
	ldr r0, [r6]
	mov r2, r8
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0xe0
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080C8AAA
	adds r0, r1, #0
_080C8AAA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C8AC8
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080C8ACC
	mov r0, sb
	bl sub_80D3BC0
	b _080C8ACC
_080C8AC8:
	movs r0, #0
	mov sb, r0
_080C8ACC:
	adds r5, r0, #0
	str r5, [sp, #0x13c]
	ldr r3, [sp, #0x138]
	ldr r2, [r3]
	adds r3, r5, #0
	cmp r2, r8
	beq _080C8AF2
_080C8ADA:
	cmp r3, #0
	beq _080C8AEA
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080C8AEA:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _080C8ADA
_080C8AF2:
	adds r5, r3, #0
	ldr r1, [sp, #0xe4]
	cmp r1, #1
	bne _080C8B0E
	cmp r5, #0
	beq _080C8B0A
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C8B0A:
	adds r5, #0x10
	b _080C8B36
_080C8B0E:
	mov r8, r1
	adds r2, r5, #0
	cmp r1, #0
	beq _080C8B34
_080C8B16:
	cmp r2, #0
	beq _080C8B26
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r5, r6}
	stm r0!, {r3, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080C8B26:
	movs r4, #1
	rsbs r4, r4, #0
	add r8, r4
	adds r2, #0x10
	mov r5, r8
	cmp r5, #0
	bne _080C8B16
_080C8B34:
	adds r5, r2, #0
_080C8B36:
	ldr r6, [sp, #0x138]
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C8B48
_080C8B42:
	adds r1, #0x10
	cmp r1, r2
	bne _080C8B42
_080C8B48:
	cmp r0, #0
	beq _080C8B50
	bl sub_80D0260
_080C8B50:
	ldr r0, [sp, #0x13c]
	add r0, sb
	ldr r1, [sp, #0x13c]
	ldr r2, [sp, #0x138]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_080C8B5E:
	movs r0, #0x4c
	bl sub_80005D4
	adds r5, r0, #0
	adds r0, r7, #0
	bl sub_800894C
	adds r4, r0, #0
	adds r0, r7, #0
	bl sub_8008918
	adds r3, r0, #0
	ldr r0, _080C8C88 @ =0x0600E800
	str r0, [sp]
	adds r0, r5, #0
	movs r1, #0x64
	adds r2, r4, #0
	bl sub_8075B00
	ldr r6, [sp, #0x134]
	adds r5, r0, #0
	ldr r4, [r7, #0x1c]
	cmp r5, r4
	beq _080C8BBE
	cmp r4, #0
	beq _080C8BBE
	adds r0, r4, #0
	adds r0, #0x28
	movs r1, #2
	bl sub_8075DEC
	adds r0, r4, #0
	adds r0, #0x18
	ldr r2, [r0, #4]
	ldr r1, [r4, #0x18]
	cmp r1, r2
	beq _080C8BAE
_080C8BA8:
	adds r1, #0x40
	cmp r1, r2
	bne _080C8BA8
_080C8BAE:
	ldr r0, [r0]
	cmp r0, #0
	beq _080C8BB8
	bl sub_80D0260
_080C8BB8:
	adds r0, r4, #0
	bl sub_8000608
_080C8BBE:
	str r5, [r6]
	adds r0, r7, #0
	bl sub_8008918
	ldrh r1, [r0, #4]
	movs r2, #0x20
	orrs r1, r2
	strh r1, [r0, #4]
	adds r0, r7, #0
	bl sub_8008918
	ldrh r1, [r0, #4]
	movs r3, #0xb8
	lsls r3, r3, #5
	adds r2, r3, #0
	orrs r1, r2
	strh r1, [r0, #4]
	movs r0, #4
	bl sub_800050C
	movs r0, #0
	movs r1, #4
	bl sub_8000540
	ldr r4, _080C8C8C @ =0x00000434
	adds r1, r7, r4
	strh r0, [r1]
	ldr r5, _080C8C90 @ =0x00000564
	adds r0, r7, r5
	movs r2, #0xe8
	strh r2, [r0]
	ldr r6, _080C8C94 @ =0x00000566
	adds r1, r7, r6
	movs r0, #0x18
	strh r0, [r1]
	ldr r1, _080C8C98 @ =0x0000059C
	adds r0, r7, r1
	strh r2, [r0]
	ldr r2, _080C8C9C @ =0x0000059E
	adds r1, r7, r2
	movs r0, #0x60
	strh r0, [r1]
	ldr r3, _080C8CA0 @ =0x0000064C
	adds r0, r7, r3
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x12c]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	ldr r0, [sp, #0x104]
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	adds r0, r7, #0
	bl sub_8008910
	adds r4, r0, #0
	ldr r5, [sp, #0x74]
	movs r6, #0xdb
	lsls r6, r6, #2
	adds r0, r7, r6
	ldr r1, [r0, #4]
	bl sub_80074C0
	adds r2, r0, #0
	ldr r0, [sp, #0x74]
	movs r3, #0
	cmp r0, #0
	beq _080C8C52
	ldr r0, [sp, #0x108]
	ldrh r3, [r0, #4]
_080C8C52:
	str r4, [sp, #0x138]
	lsls r2, r2, #5
	ldr r1, _080C8CA4 @ =0x05000200
	adds r2, r2, r1
	add r0, sp, #0x54
	adds r1, r5, #0
	bl sub_8008F0C
	ldr r2, [sp, #0x100]
	mov sl, r2
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _080C8CA8
	cmp r1, #0
	beq _080C8C7E
	adds r0, r1, #0
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080C8C7E:
	ldr r6, [sp, #0x138]
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C8D7A
	.align 2, 0
_080C8C88: .4byte 0x0600E800
_080C8C8C: .4byte 0x00000434
_080C8C90: .4byte 0x00000564
_080C8C94: .4byte 0x00000566
_080C8C98: .4byte 0x0000059C
_080C8C9C: .4byte 0x0000059E
_080C8CA0: .4byte 0x0000064C
_080C8CA4: .4byte 0x05000200
_080C8CA8:
	mov r8, r1
	movs r0, #1
	add r1, sp, #0xec
	str r0, [r1]
	ldr r2, [sp, #0x138]
	ldr r0, [r2]
	mov r3, r8
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0xe8
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080C8CC6
	adds r0, r1, #0
_080C8CC6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C8CE4
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080C8CE8
	mov r0, sb
	bl sub_80D3BC0
	b _080C8CE8
_080C8CE4:
	movs r0, #0
	mov sb, r0
_080C8CE8:
	adds r5, r0, #0
	str r5, [sp, #0x13c]
	ldr r4, [sp, #0x138]
	ldr r2, [r4]
	adds r3, r5, #0
	cmp r2, r8
	beq _080C8D0E
_080C8CF6:
	cmp r3, #0
	beq _080C8D06
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080C8D06:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _080C8CF6
_080C8D0E:
	adds r5, r3, #0
	ldr r1, [sp, #0xec]
	cmp r1, #1
	bne _080C8D2A
	cmp r5, #0
	beq _080C8D26
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080C8D26:
	adds r5, #0x10
	b _080C8D52
_080C8D2A:
	mov r8, r1
	adds r2, r5, #0
	cmp r1, #0
	beq _080C8D50
_080C8D32:
	cmp r2, #0
	beq _080C8D42
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080C8D42:
	movs r0, #1
	rsbs r0, r0, #0
	add r8, r0
	adds r2, #0x10
	mov r1, r8
	cmp r1, #0
	bne _080C8D32
_080C8D50:
	adds r5, r2, #0
_080C8D52:
	ldr r3, [sp, #0x138]
	ldr r2, [r3, #4]
	ldr r0, [r3]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C8D64
_080C8D5E:
	adds r1, #0x10
	cmp r1, r2
	bne _080C8D5E
_080C8D64:
	cmp r0, #0
	beq _080C8D6C
	bl sub_80D0260
_080C8D6C:
	ldr r0, [sp, #0x13c]
	add r0, sb
	ldr r4, [sp, #0x13c]
	ldr r6, [sp, #0x138]
	str r4, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C8D7A:
	movs r1, #0xad
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x124]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	ldr r0, [sp, #0x10c]
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	adds r0, r7, #0
	bl sub_8008910
	adds r4, r0, #0
	ldr r6, [sp, #0x110]
	ldr r5, [r6]
	movs r1, #0xe1
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl sub_80074C0
	adds r2, r0, #0
	ldr r0, [r6]
	movs r3, #0
	cmp r0, #0
	beq _080C8DBC
	ldrh r3, [r6, #4]
_080C8DBC:
	str r4, [sp, #0x138]
	lsls r2, r2, #5
	ldr r4, _080C8DF4 @ =0x05000200
	adds r2, r2, r4
	add r0, sp, #0x54
	adds r1, r5, #0
	bl sub_8008F0C
	ldr r5, [sp, #0x100]
	mov sl, r5
	ldr r6, [sp, #0x138]
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C8DF8
	cmp r1, #0
	beq _080C8DEA
	adds r0, r1, #0
	adds r1, r5, #0
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C8DEA:
	ldr r5, [sp, #0x138]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080C8ECA
	.align 2, 0
_080C8DF4: .4byte 0x05000200
_080C8DF8:
	mov r8, r1
	movs r0, #1
	add r1, sp, #0xf4
	str r0, [r1]
	ldr r6, [sp, #0x138]
	ldr r0, [r6]
	mov r2, r8
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0xf0
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080C8E16
	adds r0, r1, #0
_080C8E16:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C8E34
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080C8E38
	mov r0, sb
	bl sub_80D3BC0
	b _080C8E38
_080C8E34:
	movs r0, #0
	mov sb, r0
_080C8E38:
	adds r5, r0, #0
	str r5, [sp, #0x13c]
	ldr r3, [sp, #0x138]
	ldr r2, [r3]
	adds r3, r5, #0
	cmp r2, r8
	beq _080C8E5E
_080C8E46:
	cmp r3, #0
	beq _080C8E56
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080C8E56:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _080C8E46
_080C8E5E:
	adds r5, r3, #0
	ldr r1, [sp, #0xf4]
	cmp r1, #1
	bne _080C8E7A
	cmp r5, #0
	beq _080C8E76
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C8E76:
	adds r5, #0x10
	b _080C8EA2
_080C8E7A:
	mov r8, r1
	adds r2, r5, #0
	cmp r1, #0
	beq _080C8EA0
_080C8E82:
	cmp r2, #0
	beq _080C8E92
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r5, r6}
	stm r0!, {r3, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080C8E92:
	movs r4, #1
	rsbs r4, r4, #0
	add r8, r4
	adds r2, #0x10
	mov r5, r8
	cmp r5, #0
	bne _080C8E82
_080C8EA0:
	adds r5, r2, #0
_080C8EA2:
	ldr r6, [sp, #0x138]
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C8EB4
_080C8EAE:
	adds r1, #0x10
	cmp r1, r2
	bne _080C8EAE
_080C8EB4:
	cmp r0, #0
	beq _080C8EBC
	bl sub_80D0260
_080C8EBC:
	ldr r0, [sp, #0x13c]
	add r0, sb
	ldr r1, [sp, #0x13c]
	ldr r2, [sp, #0x138]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_080C8ECA:
	movs r3, #0xbb
	lsls r3, r3, #3
	adds r0, r7, r3
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x128]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	ldr r0, [sp, #0x114]
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	adds r0, r7, #0
	bl sub_8008910
	adds r4, r0, #0
	ldr r6, [sp, #0x118]
	ldr r5, [r6]
	movs r1, #0xe7
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl sub_80074C0
	adds r2, r0, #0
	ldr r0, [r6]
	movs r3, #0
	cmp r0, #0
	beq _080C8F0C
	ldrh r3, [r6, #4]
_080C8F0C:
	adds r6, r4, #0
	lsls r2, r2, #5
	ldr r4, _080C8F40 @ =0x05000200
	adds r2, r2, r4
	add r0, sp, #0x54
	adds r1, r5, #0
	bl sub_8008F0C
	ldr r5, [sp, #0x100]
	mov r8, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C8F44
	cmp r1, #0
	beq _080C8F38
	adds r0, r1, #0
	mov r1, r8
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C8F38:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C9010
	.align 2, 0
_080C8F40: .4byte 0x05000200
_080C8F44:
	str r1, [sp, #0x140]
	movs r0, #1
	add r1, sp, #0xfc
	str r0, [r1]
	ldr r0, [r6]
	ldr r4, [sp, #0x140]
	subs r0, r4, r0
	asrs r4, r0, #4
	add r0, sp, #0xf8
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _080C8F62
	mov r0, sl
_080C8F62:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C8F80
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080C8F84
	mov r0, sb
	bl sub_80D3BC0
	b _080C8F84
_080C8F80:
	movs r0, #0
	mov sb, r0
_080C8F84:
	adds r5, r0, #0
	str r5, [sp, #0x13c]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r5, [sp, #0x140]
	cmp r2, r5
	beq _080C8FAC
_080C8F92:
	cmp r3, #0
	beq _080C8FA2
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C8FA2:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0x140]
	cmp r2, r7
	bne _080C8F92
_080C8FAC:
	adds r5, r3, #0
	mov r0, sl
	ldr r1, [r0]
	cmp r1, #1
	bne _080C8FCA
	cmp r5, #0
	beq _080C8FC6
	adds r0, r5, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C8FC6:
	adds r5, #0x10
	b _080C8FEC
_080C8FCA:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C8FEA
_080C8FD2:
	cmp r2, #0
	beq _080C8FE2
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C8FE2:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C8FD2
_080C8FEA:
	adds r5, r2, #0
_080C8FEC:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C8FFC
_080C8FF6:
	adds r1, #0x10
	cmp r1, r2
	bne _080C8FF6
_080C8FFC:
	cmp r0, #0
	beq _080C9004
	bl sub_80D0260
_080C9004:
	ldr r0, [sp, #0x13c]
	add r0, sb
	ldr r7, [sp, #0x13c]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C9010:
	add sp, #0x144
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80C9020
sub_80C9020: @ 0x080C9020
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	movs r7, #0x28
	cmp r1, #1
	beq _080C9040
	cmp r1, #1
	blo _080C9040
	cmp r1, #2
	beq _080C903A
	cmp r1, #3
	beq _080C903E
	movs r7, #0x58
	b _080C9040
_080C903A:
	movs r7, #0x38
	b _080C9040
_080C903E:
	movs r7, #0x48
_080C9040:
	ldr r0, _080C90C0 @ =0x000006A1
	adds r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #0
	beq _080C9056
	movs r2, #0xd4
	lsls r2, r2, #3
	adds r0, r4, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _080C906C
_080C9056:
	adds r0, r4, #0
	bl sub_80088CC
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080C906E
	movs r0, #0xd4
	lsls r0, r0, #3
	adds r1, r4, r0
	movs r0, #1
_080C906C:
	strb r0, [r1]
_080C906E:
	ldr r2, _080C90C4 @ =0x000006A3
	adds r1, r4, r2
	ldrb r0, [r1]
	cmp r0, #0
	beq _080C9082
	subs r2, #1
	adds r0, r4, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _080C9096
_080C9082:
	adds r0, r4, #0
	bl sub_80088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080C9098
	ldr r0, _080C90C8 @ =0x000006A2
	adds r1, r4, r0
	movs r0, #1
_080C9096:
	strb r0, [r1]
_080C9098:
	adds r0, r4, #0
	bl sub_80088C4
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	movs r2, #0xd0
	lsls r2, r2, #3
	adds r1, r4, r2
	ldr r0, [r1]
	cmp r0, #0
	beq _080C90DA
	cmp r0, #0
	ble _080C90CC
	ldrh r0, [r4, #0xc]
	adds r0, #4
	strh r0, [r4, #0xc]
	ldr r0, [r1]
	subs r0, #1
	b _080C90D6
	.align 2, 0
_080C90C0: .4byte 0x000006A1
_080C90C4: .4byte 0x000006A3
_080C90C8: .4byte 0x000006A2
_080C90CC:
	ldrh r0, [r4, #0xc]
	subs r0, #4
	strh r0, [r4, #0xc]
	ldr r0, [r1]
	adds r0, #1
_080C90D6:
	str r0, [r1]
	b _080C9262
_080C90DA:
	movs r6, #0
	adds r0, r4, #0
	bl sub_80088D4
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080C90F4
	ldr r0, _080C9114 @ =0x000003BF
	ands r0, r5
	cmp r0, #0
	bne _080C90F4
	movs r6, #1
_080C90F4:
	cmp r6, #0
	beq _080C9198
	movs r0, #0xd4
	lsls r0, r0, #3
	adds r5, r4, r0
	ldrb r3, [r5]
	cmp r3, #0
	beq _080C911C
	ldr r1, _080C9118 @ =0x000006A1
	adds r0, r4, r1
	movs r2, #0
	movs r1, #1
	strb r1, [r0]
	strb r2, [r5]
	b _080C96B4
	.align 2, 0
_080C9114: .4byte 0x000003BF
_080C9118: .4byte 0x000006A1
_080C911C:
	ldr r2, _080C9138 @ =0x000006A1
	adds r0, r4, r2
	strb r3, [r0]
	ldr r0, _080C913C @ =0x000006A2
	adds r5, r4, r0
	ldrb r2, [r5]
	cmp r2, #0
	beq _080C9144
	ldr r2, _080C9140 @ =0x000006A3
	adds r1, r4, r2
	movs r0, #1
	strb r0, [r1]
	strb r3, [r5]
	b _080C96B4
	.align 2, 0
_080C9138: .4byte 0x000006A1
_080C913C: .4byte 0x000006A2
_080C9140: .4byte 0x000006A3
_080C9144:
	ldr r1, _080C9168 @ =0x000006A3
	adds r0, r4, r1
	strb r2, [r0]
	movs r0, #0xc9
	lsls r0, r0, #3
	adds r1, r4, r0
	ldr r0, [r1]
	cmp r0, #0x28
	ble _080C917E
	cmp r0, #0x38
	beq _080C916C
	cmp r0, #0x38
	ble _080C9178
	cmp r0, #0x48
	beq _080C9170
	cmp r0, #0x58
	beq _080C9174
	b _080C9178
	.align 2, 0
_080C9168: .4byte 0x000006A3
_080C916C:
	movs r0, #0x28
	b _080C9176
_080C9170:
	movs r0, #0x38
	b _080C9176
_080C9174:
	movs r0, #0x48
_080C9176:
	str r0, [r1]
_080C9178:
	ldr r0, [r4, #0x10]
	subs r0, #1
	b _080C922A
_080C917E:
	movs r1, #0xc
	ldrsh r0, [r4, r1]
	cmp r0, #0
	ble _080C9244
	movs r2, #0xd0
	lsls r2, r2, #3
	adds r1, r4, r2
	movs r0, #4
	rsbs r0, r0, #0
	str r0, [r1]
	ldr r0, [r4, #0x10]
	subs r0, #1
	b _080C9256
_080C9198:
	movs r6, #0
	adds r0, r4, #0
	bl sub_80088D4
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080C91B2
	ldr r0, _080C9204 @ =0x0000037F
	ands r0, r5
	cmp r0, #0
	bne _080C91B2
	movs r6, #1
_080C91B2:
	cmp r6, #0
	beq _080C926E
	movs r0, #0xd4
	lsls r0, r0, #3
	adds r3, r4, r0
	ldrb r2, [r3]
	cmp r2, #0
	beq _080C91C4
	b _080C95E4
_080C91C4:
	ldr r1, _080C9208 @ =0x000006A1
	adds r0, r4, r1
	strb r2, [r0]
	ldr r0, _080C920C @ =0x000006A2
	adds r3, r4, r0
	ldrb r1, [r3]
	cmp r1, #0
	beq _080C91D6
	b _080C960C
_080C91D6:
	ldr r2, _080C9210 @ =0x000006A3
	adds r0, r4, r2
	strb r1, [r0]
	ldr r0, [r4, #0x1c]
	movs r1, #0xe
	ldrsh r0, [r0, r1]
	subs r0, #0xa0
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	movs r0, #0xc9
	lsls r0, r0, #3
	adds r1, r4, r0
	ldr r0, [r1]
	cmp r0, r7
	bge _080C9238
	cmp r0, #0x38
	beq _080C921E
	cmp r0, #0x38
	bgt _080C9214
	cmp r0, #0x28
	beq _080C921A
	b _080C9226
	.align 2, 0
_080C9204: .4byte 0x0000037F
_080C9208: .4byte 0x000006A1
_080C920C: .4byte 0x000006A2
_080C9210: .4byte 0x000006A3
_080C9214:
	cmp r0, #0x48
	beq _080C9222
	b _080C9226
_080C921A:
	movs r0, #0x38
	b _080C9224
_080C921E:
	movs r0, #0x48
	b _080C9224
_080C9222:
	movs r0, #0x58
_080C9224:
	str r0, [r1]
_080C9226:
	ldr r0, [r4, #0x10]
	adds r0, #1
_080C922A:
	str r0, [r4, #0x10]
	adds r0, r4, #0
	adds r0, #0x18
	movs r1, #0xcb
	bl sub_8008B6C
	b _080C9262
_080C9238:
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	blt _080C9248
_080C9244:
	strh r2, [r4, #0xc]
	b _080C9262
_080C9248:
	movs r2, #0xd0
	lsls r2, r2, #3
	adds r1, r4, r2
	movs r0, #4
	str r0, [r1]
	ldr r0, [r4, #0x10]
	adds r0, #1
_080C9256:
	str r0, [r4, #0x10]
	adds r0, r4, #0
	adds r0, #0x18
	movs r1, #0xcb
	bl sub_8008B6C
_080C9262:
	ldr r0, [r4, #0x1c]
	movs r2, #0xc
	ldrsh r1, [r4, r2]
	bl sub_8075C88
	b _080C96B4
_080C926E:
	movs r6, #0
	adds r0, r4, #0
	bl sub_80088D4
	movs r1, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080C9288
	ldr r0, _080C92DC @ =0x000003EF
	ands r0, r5
	cmp r0, #0
	bne _080C9288
	movs r6, #1
_080C9288:
	cmp r6, #0
	bne _080C928E
	b _080C93F8
_080C928E:
	movs r0, #0xd4
	lsls r0, r0, #3
	adds r3, r4, r0
	ldrb r2, [r3]
	cmp r2, #0
	beq _080C929C
	b _080C95E4
_080C929C:
	ldr r1, _080C92E0 @ =0x000006A1
	adds r0, r4, r1
	strb r2, [r0]
	ldr r0, _080C92E4 @ =0x000006A2
	adds r3, r4, r0
	ldrb r1, [r3]
	cmp r1, #0
	beq _080C92AE
	b _080C960C
_080C92AE:
	ldr r2, _080C92E8 @ =0x000006A3
	adds r0, r4, r2
	strb r1, [r0]
	ldr r0, [r4, #0x1c]
	movs r1, #0xe
	ldrsh r0, [r0, r1]
	subs r0, #0xa0
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	movs r0, #0xc9
	lsls r0, r0, #3
	adds r2, r4, r0
	ldr r1, [r2]
	cmp r1, #0x47
	bgt _080C938E
	cmp r1, #0x38
	beq _080C92F6
	cmp r1, #0x38
	bgt _080C92EC
	cmp r1, #0x28
	beq _080C92F2
	b _080C92FE
	.align 2, 0
_080C92DC: .4byte 0x000003EF
_080C92E0: .4byte 0x000006A1
_080C92E4: .4byte 0x000006A2
_080C92E8: .4byte 0x000006A3
_080C92EC:
	cmp r1, #0x48
	beq _080C92FA
	b _080C92FE
_080C92F2:
	movs r0, #0x38
	b _080C92FC
_080C92F6:
	movs r0, #0x48
	b _080C92FC
_080C92FA:
	movs r0, #0x58
_080C92FC:
	str r0, [r2]
_080C92FE:
	movs r1, #0xc9
	lsls r1, r1, #3
	adds r2, r4, r1
	ldr r1, [r2]
	cmp r1, r7
	ble _080C9330
	cmp r1, #0x38
	beq _080C931E
	cmp r1, #0x38
	bgt _080C9314
	b _080C96B4
_080C9314:
	cmp r1, #0x48
	beq _080C9324
	cmp r1, #0x58
	beq _080C932A
	b _080C96B4
_080C931E:
	movs r0, #0x28
	str r0, [r2]
	b _080C96B4
_080C9324:
	movs r0, #0x38
	str r0, [r2]
	b _080C96B4
_080C932A:
	movs r0, #0x48
	str r0, [r2]
	b _080C96B4
_080C9330:
	ldr r0, [r4, #0x10]
	adds r0, #1
	str r0, [r4, #0x10]
	cmp r1, #0x38
	beq _080C934E
	cmp r1, #0x38
	bgt _080C9344
	cmp r1, #0x28
	beq _080C934A
	b _080C9356
_080C9344:
	cmp r1, #0x48
	beq _080C9352
	b _080C9356
_080C934A:
	movs r0, #0x38
	b _080C9354
_080C934E:
	movs r0, #0x48
	b _080C9354
_080C9352:
	movs r0, #0x58
_080C9354:
	str r0, [r2]
_080C9356:
	movs r2, #0xc9
	lsls r2, r2, #3
	adds r1, r4, r2
	ldr r0, [r1]
	cmp r0, r7
	ble _080C9388
	cmp r0, #0x38
	beq _080C9376
	cmp r0, #0x38
	bgt _080C936C
	b _080C94F0
_080C936C:
	cmp r0, #0x48
	beq _080C937C
	cmp r0, #0x58
	beq _080C9382
	b _080C94F0
_080C9376:
	movs r0, #0x28
	str r0, [r1]
	b _080C94F0
_080C937C:
	movs r0, #0x38
	str r0, [r1]
	b _080C94F0
_080C9382:
	movs r0, #0x48
	str r0, [r1]
	b _080C94F0
_080C9388:
	ldr r0, [r4, #0x10]
	adds r0, #1
	b _080C94EE
_080C938E:
	cmp r1, #0x48
	bne _080C93C2
	movs r0, #0x58
	str r0, [r2]
	cmp r0, r7
	ble _080C939E
	str r1, [r2]
	b _080C94F0
_080C939E:
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	blt _080C93B2
	strh r3, [r4, #0xc]
	ldr r0, [r4, #0x10]
	adds r0, #1
	b _080C94EE
_080C93B2:
	movs r2, #0xd0
	lsls r2, r2, #3
	adds r1, r4, r2
	movs r0, #4
	str r0, [r1]
	ldr r0, [r4, #0x10]
	adds r0, #2
	b _080C94EE
_080C93C2:
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	bge _080C94C4
	movs r2, #0xc
	ldrsh r1, [r4, r2]
	subs r0, #0x10
	cmp r1, r0
	blt _080C93E8
	movs r0, #0xd0
	lsls r0, r0, #3
	adds r1, r4, r0
	movs r0, #4
	str r0, [r1]
	ldr r0, [r4, #0x10]
	adds r0, #1
	b _080C94EE
_080C93E8:
	movs r2, #0xd0
	lsls r2, r2, #3
	adds r1, r4, r2
	movs r0, #8
	str r0, [r1]
	ldr r0, [r4, #0x10]
	adds r0, #2
	b _080C94EE
_080C93F8:
	movs r6, #0
	adds r0, r4, #0
	bl sub_80088D4
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _080C9412
	ldr r0, _080C9440 @ =0x000003DF
	ands r0, r5
	cmp r0, #0
	bne _080C9412
	movs r6, #1
_080C9412:
	cmp r6, #0
	beq _080C94FC
	movs r0, #0xd4
	lsls r0, r0, #3
	adds r3, r4, r0
	ldrb r2, [r3]
	cmp r2, #0
	beq _080C9424
	b _080C95E4
_080C9424:
	ldr r1, _080C9444 @ =0x000006A1
	adds r0, r4, r1
	strb r2, [r0]
	ldr r0, _080C9448 @ =0x000006A2
	adds r5, r4, r0
	ldrb r3, [r5]
	cmp r3, #0
	beq _080C944C
	adds r0, #1
	adds r1, r4, r0
	movs r0, #1
	strb r0, [r1]
	strb r2, [r5]
	b _080C96B4
	.align 2, 0
_080C9440: .4byte 0x000003DF
_080C9444: .4byte 0x000006A1
_080C9448: .4byte 0x000006A2
_080C944C:
	ldr r1, _080C9468 @ =0x000006A3
	adds r0, r4, r1
	strb r3, [r0]
	movs r2, #0xc9
	lsls r2, r2, #3
	adds r1, r4, r2
	ldr r0, [r1]
	cmp r0, #0x38
	ble _080C949A
	cmp r0, #0x48
	beq _080C946C
	cmp r0, #0x58
	beq _080C9470
	b _080C9474
	.align 2, 0
_080C9468: .4byte 0x000006A3
_080C946C:
	movs r0, #0x38
	b _080C9472
_080C9470:
	movs r0, #0x48
_080C9472:
	str r0, [r1]
_080C9474:
	movs r0, #0xc9
	lsls r0, r0, #3
	adds r1, r4, r0
	ldr r0, [r1]
	cmp r0, #0x38
	beq _080C948E
	cmp r0, #0x38
	ble _080C94EA
	cmp r0, #0x48
	beq _080C9492
	cmp r0, #0x58
	beq _080C9496
	b _080C94EA
_080C948E:
	movs r0, #0x28
	b _080C94E8
_080C9492:
	movs r0, #0x38
	b _080C94E8
_080C9496:
	movs r0, #0x48
	b _080C94E8
_080C949A:
	cmp r0, #0x38
	bne _080C94BC
	movs r0, #0x28
	str r0, [r1]
	movs r1, #0xc
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bgt _080C94B0
	ldr r0, [r4, #0x10]
	subs r0, #1
	b _080C94EE
_080C94B0:
	movs r2, #0xd0
	lsls r2, r2, #3
	adds r1, r4, r2
	movs r0, #4
	rsbs r0, r0, #0
	b _080C94E8
_080C94BC:
	movs r1, #0xc
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bgt _080C94C8
_080C94C4:
	strh r3, [r4, #0xc]
	b _080C96B4
_080C94C8:
	cmp r0, #0x10
	bgt _080C94DE
	movs r2, #0xd0
	lsls r2, r2, #3
	adds r1, r4, r2
	movs r0, #4
	rsbs r0, r0, #0
	str r0, [r1]
	ldr r0, [r4, #0x10]
	subs r0, #1
	b _080C94EE
_080C94DE:
	movs r0, #0xd0
	lsls r0, r0, #3
	adds r1, r4, r0
	movs r0, #8
	rsbs r0, r0, #0
_080C94E8:
	str r0, [r1]
_080C94EA:
	ldr r0, [r4, #0x10]
	subs r0, #2
_080C94EE:
	str r0, [r4, #0x10]
_080C94F0:
	adds r0, r4, #0
	adds r0, #0x18
	movs r1, #0xcb
	bl sub_8008B6C
	b _080C96B4
_080C94FC:
	movs r6, #0
	adds r0, r4, #0
	bl sub_80088D4
	lsrs r0, r0, #8
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	beq _080C9518
	ldr r0, _080C9530 @ =0x000002FF
	ands r0, r5
	cmp r0, #0
	bne _080C9518
	movs r6, #1
_080C9518:
	cmp r6, #0
	beq _080C95B6
	movs r1, #0xd4
	lsls r1, r1, #3
	adds r3, r4, r1
	ldrb r2, [r3]
	cmp r2, #0
	beq _080C9538
	ldr r2, _080C9534 @ =0x000006A1
	adds r0, r4, r2
	b _080C95E8
	.align 2, 0
_080C9530: .4byte 0x000002FF
_080C9534: .4byte 0x000006A1
_080C9538:
	ldr r1, _080C9568 @ =0x000006A1
	adds r0, r4, r1
	strb r2, [r0]
	ldr r0, _080C956C @ =0x000006A2
	adds r3, r4, r0
	ldrb r1, [r3]
	cmp r1, #0
	bne _080C960C
	ldr r2, _080C9570 @ =0x000006A3
	adds r0, r4, r2
	strb r1, [r0]
	ldr r0, [r4, #0x1c]
	movs r1, #0xe
	ldrsh r0, [r0, r1]
	subs r0, #0xa0
	lsls r0, r0, #0x10
	movs r2, #0xc
	ldrsh r1, [r4, r2]
	lsrs r2, r0, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	blt _080C9574
	strh r2, [r4, #0xc]
	b _080C96B4
	.align 2, 0
_080C9568: .4byte 0x000006A1
_080C956C: .4byte 0x000006A2
_080C9570: .4byte 0x000006A3
_080C9574:
	movs r1, #0xd0
	lsls r1, r1, #3
	adds r0, r4, r1
	movs r1, #4
	str r1, [r0]
	adds r0, r4, #0
	adds r0, #0x18
	movs r1, #0xcb
	bl sub_8008B6C
	movs r2, #0xc9
	lsls r2, r2, #3
	adds r1, r4, r2
	ldr r0, [r1]
	cmp r0, #0x28
	ble _080C95AE
	cmp r0, #0x38
	beq _080C95A8
	cmp r0, #0x38
	bgt _080C959E
	b _080C96B4
_080C959E:
	cmp r0, #0x48
	beq _080C966E
	cmp r0, #0x58
	beq _080C9674
	b _080C96B4
_080C95A8:
	movs r0, #0x28
	str r0, [r1]
	b _080C96B4
_080C95AE:
	ldr r0, [r4, #0x10]
	adds r0, #1
	str r0, [r4, #0x10]
	b _080C96B4
_080C95B6:
	movs r6, #0
	adds r0, r4, #0
	bl sub_80088D4
	lsrs r0, r0, #8
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	beq _080C95D2
	ldr r0, _080C95F4 @ =0x000001FF
	ands r0, r5
	cmp r0, #0
	bne _080C95D2
	movs r6, #1
_080C95D2:
	adds r3, r6, #0
	cmp r3, #0
	beq _080C9688
	movs r0, #0xd4
	lsls r0, r0, #3
	adds r3, r4, r0
	ldrb r2, [r3]
	cmp r2, #0
	beq _080C95FC
_080C95E4:
	ldr r1, _080C95F8 @ =0x000006A1
	adds r0, r4, r1
_080C95E8:
	movs r2, #0
	movs r1, #1
	strb r1, [r0]
	strb r2, [r3]
	b _080C96B4
	.align 2, 0
_080C95F4: .4byte 0x000001FF
_080C95F8: .4byte 0x000006A1
_080C95FC:
	ldr r1, _080C9618 @ =0x000006A1
	adds r0, r4, r1
	strb r2, [r0]
	ldr r0, _080C961C @ =0x000006A2
	adds r3, r4, r0
	ldrb r1, [r3]
	cmp r1, #0
	beq _080C9620
_080C960C:
	adds r0, #1
	adds r1, r4, r0
	movs r0, #1
	strb r0, [r1]
	strb r2, [r3]
	b _080C96B4
	.align 2, 0
_080C9618: .4byte 0x000006A1
_080C961C: .4byte 0x000006A2
_080C9620:
	ldr r2, _080C9634 @ =0x000006A3
	adds r0, r4, r2
	strb r1, [r0]
	movs r2, #0xc
	ldrsh r0, [r4, r2]
	cmp r0, #0
	bgt _080C9638
	strh r1, [r4, #0xc]
	b _080C96B4
	.align 2, 0
_080C9634: .4byte 0x000006A3
_080C9638:
	movs r1, #0xd0
	lsls r1, r1, #3
	adds r0, r4, r1
	movs r1, #4
	rsbs r1, r1, #0
	str r1, [r0]
	adds r0, r4, #0
	adds r0, #0x18
	movs r1, #0xcb
	bl sub_8008B6C
	movs r2, #0xc9
	lsls r2, r2, #3
	adds r1, r4, r2
	ldr r0, [r1]
	cmp r0, #0x57
	bgt _080C9680
	cmp r0, #0x38
	beq _080C9674
	cmp r0, #0x38
	bgt _080C9668
	cmp r0, #0x28
	beq _080C966E
	b _080C96B4
_080C9668:
	cmp r0, #0x48
	beq _080C967A
	b _080C96B4
_080C966E:
	movs r0, #0x38
	str r0, [r1]
	b _080C96B4
_080C9674:
	movs r0, #0x48
	str r0, [r1]
	b _080C96B4
_080C967A:
	movs r0, #0x58
	str r0, [r1]
	b _080C96B4
_080C9680:
	ldr r0, [r4, #0x10]
	subs r0, #1
	str r0, [r4, #0x10]
	b _080C96B4
_080C9688:
	movs r0, #0xd4
	lsls r0, r0, #3
	adds r2, r4, r0
	ldrb r5, [r2]
	cmp r5, #0
	beq _080C96A0
	adds r0, #1
	adds r1, r4, r0
	movs r0, #1
	strb r0, [r1]
	strb r3, [r2]
	b _080C96B4
_080C96A0:
	ldr r1, _080C96BC @ =0x000006A2
	adds r2, r4, r1
	ldrb r0, [r2]
	cmp r0, #0
	beq _080C96B4
	ldr r0, _080C96C0 @ =0x000006A3
	adds r1, r4, r0
	movs r0, #1
	strb r0, [r1]
	strb r5, [r2]
_080C96B4:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080C96BC: .4byte 0x000006A2
_080C96C0: .4byte 0x000006A3

	thumb_func_start sub_80C96C4
sub_80C96C4: @ 0x080C96C4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xf8
	mov sl, r0
	movs r0, #1
	str r0, [sp, #0xb8]
	mov r0, sl
	bl sub_8008920
	adds r5, r0, #0
	movs r0, #0xd5
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r4, r0, #0
	movs r0, #0xd7
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [r0, #4]
	bl sub_80074C0
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	ldr r1, [sp, #0xb8]
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	add r6, sp, #0x68
	adds r0, r6, #0
	movs r1, #0x10
	movs r2, #4
	adds r3, r4, #0
	bl sub_804EA94
	ldrb r2, [r5]
	cmp r2, #0x7f
	bhi _080C972A
	lsls r0, r2, #3
	adds r0, #4
	adds r0, r5, r0
	ldr r1, [sp, #0x68]
	str r1, [r0]
	ldrh r1, [r6, #4]
	strh r1, [r0, #4]
	adds r0, r2, #1
	strb r0, [r5]
_080C972A:
	movs r2, #0xd2
	lsls r2, r2, #2
	add r2, sl
	mov r8, r2
	mov r0, r8
	bl sub_8050D34
	movs r1, #0xd3
	lsls r1, r1, #2
	add r1, sl
	str r0, [r1]
	mov r0, sl
	bl sub_80088DC
	mov sb, r0
	mov r0, sl
	bl sub_8008920
	adds r6, r0, #0
	mov r0, sl
	bl sub_8008918
	adds r5, r0, #0
	mov r0, sl
	bl sub_8008940
	adds r4, r0, #0
	mov r0, sl
	bl sub_800894C
	mov r1, sl
	adds r1, #0x18
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, r8
	mov r1, sb
	adds r2, r6, #0
	adds r3, r5, #0
	bl sub_8050D3C
	movs r1, #0xd4
	lsls r1, r1, #2
	add r1, sl
	str r0, [r1]
	movs r3, #0
	str r3, [sp, #0xb8]
	cmp r0, #3
	bne _080C979A
	ldr r0, _080C98A4 @ =0x00000684
	add r0, sl
	ldrb r0, [r0, #8]
	cmp r0, #0
	bne _080C979A
	movs r4, #1
	str r4, [sp, #0xb8]
_080C979A:
	mov r5, sl
	ldr r0, [r5, #0x20]
	cmp r0, #0
	bne _080C97A4
	b _080C9CD8
_080C97A4:
	movs r4, #0
	str r0, [sp, #0xbc]
	movs r7, #0xc
	ldrsh r0, [r5, r7]
	adds r2, r0, #0
	subs r2, #8
	mov r0, sp
	adds r0, #0x28
	str r0, [sp, #0xdc]
	ldr r1, [sp, #0xbc]
	cmp r4, r1
	bhs _080C97DA
	movs r3, #0x24
	ldrsh r0, [r5, r3]
	cmp r0, r2
	bge _080C97DA
	mov r1, sl
	adds r1, #0x24
_080C97C8:
	adds r1, #0x10
	adds r4, #1
	ldr r5, [sp, #0xbc]
	cmp r4, r5
	bhs _080C97DA
	movs r7, #0
	ldrsh r0, [r1, r7]
	cmp r0, r2
	blt _080C97C8
_080C97DA:
	movs r0, #0
	str r0, [sp, #0xd0]
	str r0, [sp, #0x14]
	movs r0, #0x18
	bl sub_80D01F8
	cmp r0, #0
	bne _080C97F0
	movs r0, #0x18
	bl sub_80D3BC0
_080C97F0:
	str r0, [sp, #0x14]
	ldr r1, [sp, #0xd0]
	str r1, [sp, #0x18]
	str r1, [sp, #0x1c]
	strb r1, [r0]
	ldr r3, [sp, #0xd0]
	str r3, [r0, #4]
	ldr r0, [sp, #0x14]
	str r0, [r0, #8]
	ldr r0, [sp, #0x14]
	str r0, [r0, #0xc]
	movs r5, #0
	str r5, [sp, #0xd4]
	str r5, [sp, #0x2c]
	movs r0, #0x18
	bl sub_80D01F8
	cmp r0, #0
	bne _080C981C
	movs r0, #0x18
	bl sub_80D3BC0
_080C981C:
	str r0, [sp, #0x2c]
	ldr r7, [sp, #0xd4]
	ldr r1, [sp, #0xdc]
	str r7, [r1, #8]
	str r7, [sp, #0x34]
	strb r7, [r0]
	ldr r3, [sp, #0xd4]
	str r3, [r0, #4]
	ldr r0, [sp, #0x2c]
	str r0, [r0, #8]
	ldr r0, [sp, #0x2c]
	str r0, [r0, #0xc]
	mov r5, sl
	movs r7, #0xc
	ldrsh r0, [r5, r7]
	adds r0, #0x68
	str r0, [sp, #0xc0]
	ldr r0, [sp, #0xbc]
	cmp r4, r0
	blo _080C9846
	b _080C9C82
_080C9846:
	mov r1, sl
	adds r1, #0x20
	lsls r2, r4, #4
	adds r0, r2, #4
	adds r0, r1, r0
	movs r3, #0
	ldrsh r0, [r0, r3]
	str r1, [sp, #0xe0]
	str r2, [sp, #0xec]
	ldr r5, [sp, #0xc0]
	cmp r0, r5
	ble _080C9860
	b _080C9C82
_080C9860:
	mov r7, sp
	adds r7, #0x20
	str r7, [sp, #0xcc]
	mov r0, sp
	adds r0, #0x24
	str r0, [sp, #0xd8]
	mov r1, sp
	adds r1, #0x7c
	str r1, [sp, #0xe8]
_080C9872:
	ldr r0, [sp, #0xec]
	adds r0, #4
	ldr r2, [sp, #0xe0]
	adds r0, r2, r0
	str r0, [sp, #0xc4]
	ldr r0, [r0, #8]
	str r0, [sp, #0x70]
	ldr r3, [sp, #0x14]
	ldr r1, [r3, #4]
	adds r4, #1
	str r4, [sp, #0xe4]
	adds r5, r3, #0
	cmp r1, #0
	beq _080C98AE
	adds r4, r0, #0
_080C9890:
	movs r2, #0
	ldr r0, [r1, #0x10]
	cmp r0, r4
	bhs _080C989A
	movs r2, #1
_080C989A:
	cmp r2, #0
	bne _080C98A8
	adds r3, r1, #0
	ldr r1, [r3, #8]
	b _080C98AA
	.align 2, 0
_080C98A4: .4byte 0x00000684
_080C98A8:
	ldr r1, [r1, #0xc]
_080C98AA:
	cmp r1, #0
	bne _080C9890
_080C98AE:
	ldr r4, [sp, #0xcc]
	str r3, [r4]
	movs r2, #0
	str r5, [sp, #0x24]
	movs r1, #0
	ldr r0, [sp, #0x20]
	cmp r0, r5
	bne _080C98C0
	movs r1, #1
_080C98C0:
	cmp r1, #0
	bne _080C98CC
	ldr r1, [sp, #0x70]
	ldr r0, [r0, #0x10]
	cmp r1, r0
	bhs _080C98D4
_080C98CC:
	ldr r5, [sp, #0xd0]
	cmp r5, #8
	bgt _080C98D4
	movs r2, #1
_080C98D4:
	cmp r2, #0
	bne _080C98DA
	b _080C9A2E
_080C98DA:
	ldr r0, [sp, #0x20]
	str r0, [sp, #0x3c]
	add r1, sp, #0x48
	ldr r0, [sp, #0x70]
	str r0, [sp, #0x48]
	ldr r7, [sp, #0xd0]
	str r7, [sp, #0x4c]
	adds r0, r1, #0
	movs r2, #8
	bl sub_80D3994
	ldr r0, [sp, #0x48]
	str r0, [sp, #0x40]
	ldr r0, [sp, #0x4c]
	str r0, [sp, #0x44]
	ldr r0, [sp, #0x3c]
	str r0, [sp, #0x50]
	add r0, sp, #0x38
	add r1, sp, #0x10
	add r2, sp, #0x50
	add r3, sp, #0x40
	bl sub_80E5664
	add r4, sp, #0x38
	lsls r0, r7, #3
	add r0, sl
	movs r1, #0xe9
	lsls r1, r1, #2
	adds r0, r0, r1
	ldr r1, [r0, #4]
	bl sub_8007D4C
	str r0, [sp, #0xc8]
	mov r0, sl
	bl sub_8008910
	adds r6, r0, #0
	ldr r1, [sp, #0x70]
	ldr r3, [sp, #0xc8]
	lsls r2, r3, #5
	ldr r5, _080C9958 @ =0x06010000
	adds r2, r2, r5
	adds r0, r4, #0
	movs r3, #0x80
	bl sub_8008F0C
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C995C
	cmp r1, #0
	beq _080C9950
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C9950:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C9A26
	.align 2, 0
_080C9958: .4byte 0x06010000
_080C995C:
	str r1, [sp, #0xf0]
	movs r0, #1
	str r0, [sp, #0x78]
	ldr r1, [r6]
	ldr r4, [sp, #0xf0]
	subs r0, r4, r1
	asrs r4, r0, #4
	str r4, [sp, #0x74]
	add r2, sp, #0x78
	add r0, sp, #0x74
	cmp r4, #1
	bhs _080C9976
	adds r0, r2, #0
_080C9976:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C9996
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C9992
	mov r0, r8
	bl sub_80D3BC0
_080C9992:
	ldr r1, [r6]
	b _080C999A
_080C9996:
	movs r0, #0
	mov r8, r0
_080C999A:
	adds r5, r0, #0
	str r5, [sp, #0xf4]
	adds r2, r1, #0
	adds r3, r5, #0
	ldr r5, [sp, #0xf0]
	cmp r2, r5
	beq _080C99C2
_080C99A8:
	cmp r3, #0
	beq _080C99B8
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C99B8:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0xf0]
	cmp r2, r7
	bne _080C99A8
_080C99C2:
	adds r5, r3, #0
	ldr r0, [sp, #0x78]
	cmp r0, #1
	bne _080C99DE
	cmp r5, #0
	beq _080C99DA
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C99DA:
	adds r5, #0x10
	b _080C9A00
_080C99DE:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C99FE
_080C99E6:
	cmp r2, #0
	beq _080C99F6
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C99F6:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C99E6
_080C99FE:
	adds r5, r2, #0
_080C9A00:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _080C9A10
_080C9A0A:
	adds r0, #0x10
	cmp r0, r2
	bne _080C9A0A
_080C9A10:
	cmp r1, #0
	beq _080C9A1A
	adds r0, r1, #0
	bl sub_80D0260
_080C9A1A:
	ldr r0, [sp, #0xf4]
	add r0, r8
	ldr r7, [sp, #0xf4]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C9A26:
	ldr r0, [sp, #0xd0]
	adds r0, #1
	str r0, [sp, #0xd0]
	b _080C9A44
_080C9A2E:
	ldr r0, [sp, #0x20]
	ldr r0, [r0, #0x14]
	lsls r0, r0, #3
	add r0, sl
	movs r1, #0xe9
	lsls r1, r1, #2
	adds r0, r0, r1
	ldr r1, [r0, #4]
	bl sub_8007D4C
	str r0, [sp, #0xc8]
_080C9A44:
	ldr r2, [sp, #0xc4]
	ldr r0, [r2, #0xc]
	str r0, [sp, #0x7c]
	ldr r6, [sp, #0xd8]
	ldr r3, [sp, #0x2c]
	ldr r1, [r3, #4]
	adds r5, r3, #0
	cmp r1, #0
	beq _080C9A74
	ldr r7, [sp, #0xe8]
	ldr r4, [r7]
_080C9A5A:
	movs r2, #0
	ldr r0, [r1, #0x10]
	cmp r0, r4
	bhs _080C9A64
	movs r2, #1
_080C9A64:
	cmp r2, #0
	bne _080C9A6E
	adds r3, r1, #0
	ldr r1, [r3, #8]
	b _080C9A70
_080C9A6E:
	ldr r1, [r1, #0xc]
_080C9A70:
	cmp r1, #0
	bne _080C9A5A
_080C9A74:
	str r3, [r6]
	movs r2, #0
	str r5, [sp, #0x38]
	movs r1, #0
	ldr r0, [sp, #0x24]
	cmp r0, r5
	bne _080C9A84
	movs r1, #1
_080C9A84:
	cmp r1, #0
	bne _080C9A90
	ldr r1, [sp, #0x7c]
	ldr r0, [r0, #0x10]
	cmp r1, r0
	bhs _080C9A98
_080C9A90:
	ldr r0, [sp, #0xd4]
	cmp r0, #8
	bgt _080C9A98
	movs r2, #1
_080C9A98:
	cmp r2, #0
	bne _080C9A9E
	b _080C9BF2
_080C9A9E:
	ldr r0, [sp, #0x24]
	str r0, [sp, #0x40]
	add r1, sp, #0x4c
	ldr r0, [sp, #0x7c]
	str r0, [sp, #0x4c]
	ldr r2, [sp, #0xd4]
	str r2, [sp, #0x50]
	adds r0, r1, #0
	movs r2, #8
	bl sub_80D3994
	ldr r0, [sp, #0x4c]
	str r0, [sp, #0x44]
	ldr r0, [sp, #0x50]
	str r0, [sp, #0x48]
	ldr r0, [sp, #0x40]
	str r0, [sp, #0x54]
	add r0, sp, #0x3c
	add r1, sp, #0x28
	add r2, sp, #0x54
	add r3, sp, #0x44
	bl sub_80E5664
	add r4, sp, #0x3c
	ldr r3, [sp, #0xd4]
	lsls r0, r3, #3
	add r0, sl
	movs r5, #0xfb
	lsls r5, r5, #2
	adds r0, r0, r5
	ldr r1, [r0, #4]
	bl sub_80074C0
	mov sb, r0
	mov r0, sl
	bl sub_8008910
	adds r6, r0, #0
	ldr r1, [sp, #0x7c]
	mov r7, sb
	lsls r2, r7, #5
	ldr r0, _080C9B1C @ =0x05000200
	adds r2, r2, r0
	adds r0, r4, #0
	movs r3, #0x20
	bl sub_8008F0C
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C9B20
	cmp r1, #0
	beq _080C9B14
	adds r0, r1, #0
	add r1, sp, #0x3c
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C9B14:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C9BEA
	.align 2, 0
_080C9B1C: .4byte 0x05000200
_080C9B20:
	str r1, [sp, #0xf0]
	movs r0, #1
	str r0, [sp, #0x84]
	ldr r1, [r6]
	ldr r5, [sp, #0xf0]
	subs r0, r5, r1
	asrs r4, r0, #4
	str r4, [sp, #0x80]
	add r2, sp, #0x84
	add r0, sp, #0x80
	cmp r4, #1
	bhs _080C9B3A
	adds r0, r2, #0
_080C9B3A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C9B5A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080C9B56
	mov r0, r8
	bl sub_80D3BC0
_080C9B56:
	ldr r1, [r6]
	b _080C9B5E
_080C9B5A:
	movs r0, #0
	mov r8, r0
_080C9B5E:
	adds r5, r0, #0
	str r5, [sp, #0xf4]
	adds r2, r1, #0
	adds r3, r5, #0
	ldr r7, [sp, #0xf0]
	cmp r2, r7
	beq _080C9B86
_080C9B6C:
	cmp r3, #0
	beq _080C9B7C
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C9B7C:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xf0]
	cmp r2, r0
	bne _080C9B6C
_080C9B86:
	adds r5, r3, #0
	ldr r0, [sp, #0x84]
	cmp r0, #1
	bne _080C9BA2
	cmp r5, #0
	beq _080C9B9E
	adds r0, r5, #0
	add r1, sp, #0x3c
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C9B9E:
	adds r5, #0x10
	b _080C9BC4
_080C9BA2:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C9BC2
_080C9BAA:
	cmp r2, #0
	beq _080C9BBA
	adds r0, r2, #0
	add r1, sp, #0x3c
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C9BBA:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C9BAA
_080C9BC2:
	adds r5, r2, #0
_080C9BC4:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _080C9BD4
_080C9BCE:
	adds r0, #0x10
	cmp r0, r2
	bne _080C9BCE
_080C9BD4:
	cmp r1, #0
	beq _080C9BDE
	adds r0, r1, #0
	bl sub_80D0260
_080C9BDE:
	ldr r0, [sp, #0xf4]
	add r0, r8
	ldr r7, [sp, #0xf4]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C9BEA:
	ldr r0, [sp, #0xd4]
	adds r0, #1
	str r0, [sp, #0xd4]
	b _080C9C08
_080C9BF2:
	ldr r0, [sp, #0x24]
	ldr r0, [r0, #0x14]
	lsls r0, r0, #3
	add r0, sl
	movs r1, #0xfb
	lsls r1, r1, #2
	adds r0, r0, r1
	ldr r1, [r0, #4]
	bl sub_80074C0
	mov sb, r0
_080C9C08:
	ldr r2, [sp, #0xc8]
	cmp r2, #0
	blt _080C9C64
	mov r3, sb
	cmp r3, #0
	blt _080C9C64
	mov r0, sl
	bl sub_8008920
	adds r5, r0, #0
	ldr r1, [sp, #0xec]
	adds r1, #4
	ldr r4, [sp, #0xe0]
	adds r1, r4, r1
	movs r7, #0
	ldrsh r2, [r1, r7]
	mov r3, sl
	movs r4, #0xc
	ldrsh r0, [r3, r4]
	subs r2, r2, r0
	ldr r1, [r1, #4]
	mov r7, sb
	str r7, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	movs r0, #0
	str r0, [sp, #0xc]
	add r4, sp, #0x88
	adds r0, r4, #0
	ldr r3, [sp, #0xc8]
	bl sub_804EA94
	ldrb r2, [r5]
	cmp r2, #0x7f
	bhi _080C9C64
	lsls r1, r2, #3
	adds r1, #4
	adds r1, r5, r1
	ldr r0, [sp, #0x88]
	str r0, [r1]
	ldrh r0, [r4, #4]
	strh r0, [r1, #4]
	adds r0, r2, #1
	strb r0, [r5]
_080C9C64:
	ldr r4, [sp, #0xe4]
	ldr r0, [sp, #0xbc]
	cmp r4, r0
	bhs _080C9C82
	lsls r0, r4, #4
	adds r1, r0, #4
	ldr r2, [sp, #0xe0]
	adds r1, r2, r1
	movs r3, #0
	ldrsh r1, [r1, r3]
	str r0, [sp, #0xec]
	ldr r5, [sp, #0xc0]
	cmp r1, r5
	bgt _080C9C82
	b _080C9872
_080C9C82:
	ldr r0, [sp, #0x30]
	cmp r0, #0
	beq _080C9CA4
	ldr r0, [sp, #0x2c]
	ldr r1, [r0, #4]
	ldr r0, [sp, #0xdc]
	bl sub_80E54C4
	ldr r0, [sp, #0x2c]
	str r0, [r0, #8]
	ldr r0, [sp, #0x2c]
	movs r1, #0
	str r1, [r0, #4]
	ldr r0, [sp, #0x2c]
	str r0, [r0, #0xc]
	ldr r7, [sp, #0xdc]
	str r1, [r7, #8]
_080C9CA4:
	ldr r0, [sp, #0x2c]
	cmp r0, #0
	beq _080C9CAE
	bl sub_80D0260
_080C9CAE:
	ldr r0, [sp, #0x18]
	cmp r0, #0
	beq _080C9CCE
	ldr r0, [sp, #0x14]
	ldr r1, [r0, #4]
	add r0, sp, #0x10
	bl sub_80E54C4
	ldr r0, [sp, #0x14]
	str r0, [r0, #8]
	ldr r0, [sp, #0x14]
	movs r1, #0
	str r1, [r0, #4]
	ldr r0, [sp, #0x14]
	str r0, [r0, #0xc]
	str r1, [sp, #0x18]
_080C9CCE:
	ldr r0, [sp, #0x14]
	cmp r0, #0
	beq _080C9CD8
	bl sub_80D0260
_080C9CD8:
	add r1, sp, #0x10
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	strh r0, [r1, #2]
	strh r0, [r1, #4]
	strh r0, [r1, #6]
	strh r0, [r1, #8]
	str r0, [sp, #0x1c]
	strb r2, [r1, #0x10]
	strb r2, [r1, #0x11]
	str r0, [sp, #0x24]
	strb r2, [r1, #0x18]
	mov r0, sl
	movs r3, #0xc
	ldrsh r1, [r0, r3]
	ldr r0, [r0, #0x1c]
	movs r4, #0xe
	ldrsh r0, [r0, r4]
	subs r0, #0xa0
	cmp r1, r0
	blt _080C9D0E
	movs r0, #0xba
	lsls r0, r0, #3
	add r0, sl
	strb r2, [r0]
	b _080C9D18
_080C9D0E:
	movs r1, #0xba
	lsls r1, r1, #3
	add r1, sl
	movs r0, #1
	strb r0, [r1]
_080C9D18:
	mov r5, sl
	movs r7, #0xc
	ldrsh r1, [r5, r7]
	cmp r1, #0
	bne _080C9D2C
	movs r0, #0xb3
	lsls r0, r0, #3
	add r0, sl
	strb r1, [r0]
	b _080C9D36
_080C9D2C:
	movs r1, #0xb3
	lsls r1, r1, #3
	add r1, sl
	movs r0, #1
	strb r0, [r1]
_080C9D36:
	ldr r3, _080C9D88 @ =0x00000684
	add r3, sl
	ldrb r1, [r3, #8]
	cmp r1, #0
	beq _080C9D9C
	movs r0, #0xc1
	lsls r0, r0, #3
	add r0, sl
	movs r1, #1
	strb r1, [r0]
	movs r0, #0xc8
	lsls r0, r0, #3
	add r0, sl
	strb r1, [r0]
	ldr r0, [r3, #0x10]
	adds r0, #2
	lsls r0, r0, #3
	ldr r1, _080C9D8C @ =0x000005D4
	add r1, sl
	strh r0, [r1]
	movs r2, #0xc9
	lsls r2, r2, #3
	add r2, sl
	ldr r0, [r2]
	subs r0, #8
	ldr r1, _080C9D90 @ =0x000005D6
	add r1, sl
	strh r0, [r1]
	ldr r0, [r3, #0x10]
	adds r0, #2
	lsls r0, r0, #3
	ldr r1, _080C9D94 @ =0x0000060C
	add r1, sl
	strh r0, [r1]
	ldr r0, [r2]
	adds r0, #8
	ldr r1, _080C9D98 @ =0x0000060E
	add r1, sl
	strh r0, [r1]
	b _080C9DAC
	.align 2, 0
_080C9D88: .4byte 0x00000684
_080C9D8C: .4byte 0x000005D4
_080C9D90: .4byte 0x000005D6
_080C9D94: .4byte 0x0000060C
_080C9D98: .4byte 0x0000060E
_080C9D9C:
	movs r0, #0xc1
	lsls r0, r0, #3
	add r0, sl
	strb r1, [r0]
	movs r0, #0xc8
	lsls r0, r0, #3
	add r0, sl
	strb r1, [r0]
_080C9DAC:
	ldr r0, _080C9EAC @ =0x0000067C
	add r0, sl
	ldrb r0, [r0]
	cmp r0, #0
	bne _080C9DB8
	b _080C9F80
_080C9DB8:
	ldr r0, [sp, #0xb8]
	cmp r0, #0
	beq _080C9DC6
	ldr r0, _080C9EB0 @ =0x0000064C
	add r0, sl
	bl sub_805E8F0
_080C9DC6:
	add r6, sp, #0x2c
	ldr r0, _080C9EB0 @ =0x0000064C
	add r0, sl
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	movs r0, #0xca
	lsls r0, r0, #3
	add r0, sl
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	adds r0, r6, #0
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r1, sp, #0x10
	movs r0, #0xcc
	lsls r0, r0, #3
	add r0, sl
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r5, r7}
	stm r1!, {r2, r5, r7}
	ldr r0, [r0]
	str r0, [r1]
	add r1, sp, #0x10
	ldr r0, _080C9EB4 @ =0x00000644
	add r0, sl
	ldrh r0, [r0]
	strh r0, [r1]
	movs r0, #0xc9
	lsls r0, r0, #3
	add r0, sl
	ldr r1, [r0]
	add r0, sp, #0x10
	strh r1, [r0, #2]
	movs r4, #1
	movs r3, #1
	mov sb, r3
	mov r5, sb
	strh r5, [r0, #8]
	movs r0, #0xdb
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [r0, #4]
	bl sub_80074C0
	add r1, sp, #0x10
	strh r0, [r1, #4]
	movs r5, #0xd9
	lsls r5, r5, #2
	add r5, sl
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	add r1, sp, #0x10
	strh r0, [r1, #6]
	adds r0, r1, #0
	strb r4, [r0, #0x18]
	mov r0, sl
	bl sub_8008920
	ldr r1, [sp, #0x2c]
	movs r2, #0
	cmp r1, #0
	beq _080C9E52
	ldrh r2, [r6, #4]
_080C9E52:
	add r3, sp, #0x10
	bl sub_805E99C
	mov r0, sl
	bl sub_8008910
	adds r4, r0, #0
	ldr r7, [sp, #0x34]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	adds r2, r0, #0
	add r1, sp, #0x34
	ldr r0, [sp, #0x34]
	movs r3, #0
	cmp r0, #0
	beq _080C9E78
	ldrh r3, [r1, #4]
_080C9E78:
	adds r6, r4, #0
	lsls r2, r2, #5
	ldr r0, _080C9EB8 @ =0x06010000
	adds r2, r2, r0
	add r0, sp, #0x58
	adds r1, r7, #0
	bl sub_8008F0C
	add r1, sp, #0x58
	mov r8, r1
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080C9EBC
	cmp r1, #0
	beq _080C9EA4
	adds r0, r1, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C9EA4:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080C9F80
	.align 2, 0
_080C9EAC: .4byte 0x0000067C
_080C9EB0: .4byte 0x0000064C
_080C9EB4: .4byte 0x00000644
_080C9EB8: .4byte 0x06010000
_080C9EBC:
	str r1, [sp, #0xf0]
	add r1, sp, #0x94
	mov r5, sb
	str r5, [r1]
	ldr r0, [r6]
	ldr r7, [sp, #0xf0]
	subs r0, r7, r0
	asrs r4, r0, #4
	add r0, sp, #0x90
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080C9ED8
	adds r0, r1, #0
_080C9ED8:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080C9EF6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080C9EFA
	mov r0, sb
	bl sub_80D3BC0
	b _080C9EFA
_080C9EF6:
	movs r0, #0
	mov sb, r0
_080C9EFA:
	adds r5, r0, #0
	str r5, [sp, #0xf4]
	ldr r2, [r6]
	adds r3, r5, #0
	b _080C9F18
_080C9F04:
	cmp r3, #0
	beq _080C9F14
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C9F14:
	adds r2, #0x10
	adds r3, #0x10
_080C9F18:
	ldr r0, [sp, #0xf0]
	cmp r2, r0
	bne _080C9F04
	adds r5, r3, #0
	ldr r1, [sp, #0x94]
	cmp r1, #1
	bne _080C9F3A
	cmp r5, #0
	beq _080C9F36
	adds r0, r5, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080C9F36:
	adds r5, #0x10
	b _080C9F5C
_080C9F3A:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080C9F5A
_080C9F42:
	cmp r2, #0
	beq _080C9F52
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080C9F52:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080C9F42
_080C9F5A:
	adds r5, r2, #0
_080C9F5C:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080C9F6C
_080C9F66:
	adds r1, #0x10
	cmp r1, r2
	bne _080C9F66
_080C9F6C:
	cmp r0, #0
	beq _080C9F74
	bl sub_80D0260
_080C9F74:
	ldr r0, [sp, #0xf4]
	add r0, sb
	ldr r7, [sp, #0xf4]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080C9F80:
	movs r0, #0xb3
	lsls r0, r0, #3
	add r0, sl
	ldrb r0, [r0]
	cmp r0, #0
	bne _080C9F8E
	b _080CA158
_080C9F8E:
	ldr r0, [sp, #0xb8]
	cmp r0, #0
	beq _080C9F9E
	movs r0, #0xad
	lsls r0, r0, #3
	add r0, sl
	bl sub_805E8F0
_080C9F9E:
	add r6, sp, #0x2c
	movs r0, #0xad
	lsls r0, r0, #3
	add r0, sl
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	ldr r0, _080CA080 @ =0x0000056C
	add r0, sl
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	adds r0, r6, #0
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r1, sp, #0x10
	ldr r0, _080CA084 @ =0x0000057C
	add r0, sl
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r5, r7}
	stm r1!, {r2, r5, r7}
	ldr r0, [r0]
	str r0, [r1]
	add r1, sp, #0x10
	ldr r0, _080CA088 @ =0x00000564
	add r0, sl
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r0, _080CA08C @ =0x00000566
	add r0, sl
	ldrh r0, [r0]
	strh r0, [r1, #2]
	adds r0, r1, #0
	movs r4, #1
	movs r3, #1
	mov sb, r3
	mov r5, sb
	strh r5, [r0, #8]
	movs r0, #0xe1
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [r0, #4]
	bl sub_80074C0
	add r1, sp, #0x10
	strh r0, [r1, #4]
	movs r5, #0xdd
	lsls r5, r5, #2
	add r5, sl
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	add r1, sp, #0x10
	strh r0, [r1, #6]
	adds r0, r1, #0
	strb r4, [r0, #0x18]
	mov r0, sl
	bl sub_8008920
	ldr r1, [sp, #0x2c]
	movs r2, #0
	cmp r1, #0
	beq _080CA026
	ldrh r2, [r6, #4]
_080CA026:
	add r3, sp, #0x10
	bl sub_805E99C
	mov r0, sl
	bl sub_8008910
	adds r4, r0, #0
	ldr r7, [sp, #0x34]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	adds r2, r0, #0
	add r1, sp, #0x34
	ldr r0, [sp, #0x34]
	movs r3, #0
	cmp r0, #0
	beq _080CA04C
	ldrh r3, [r1, #4]
_080CA04C:
	adds r6, r4, #0
	lsls r2, r2, #5
	ldr r0, _080CA090 @ =0x06010000
	adds r2, r2, r0
	add r0, sp, #0x4c
	adds r1, r7, #0
	bl sub_8008F0C
	add r1, sp, #0x4c
	mov r8, r1
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080CA094
	cmp r1, #0
	beq _080CA078
	adds r0, r1, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CA078:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080CA158
	.align 2, 0
_080CA080: .4byte 0x0000056C
_080CA084: .4byte 0x0000057C
_080CA088: .4byte 0x00000564
_080CA08C: .4byte 0x00000566
_080CA090: .4byte 0x06010000
_080CA094:
	str r1, [sp, #0xf0]
	add r1, sp, #0x9c
	mov r5, sb
	str r5, [r1]
	ldr r0, [r6]
	ldr r7, [sp, #0xf0]
	subs r0, r7, r0
	asrs r4, r0, #4
	add r0, sp, #0x98
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080CA0B0
	adds r0, r1, #0
_080CA0B0:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CA0CE
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080CA0D2
	mov r0, sb
	bl sub_80D3BC0
	b _080CA0D2
_080CA0CE:
	movs r0, #0
	mov sb, r0
_080CA0D2:
	adds r5, r0, #0
	str r5, [sp, #0xf4]
	ldr r2, [r6]
	adds r3, r5, #0
	b _080CA0F0
_080CA0DC:
	cmp r3, #0
	beq _080CA0EC
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CA0EC:
	adds r2, #0x10
	adds r3, #0x10
_080CA0F0:
	ldr r0, [sp, #0xf0]
	cmp r2, r0
	bne _080CA0DC
	adds r5, r3, #0
	ldr r1, [sp, #0x9c]
	cmp r1, #1
	bne _080CA112
	cmp r5, #0
	beq _080CA10E
	adds r0, r5, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CA10E:
	adds r5, #0x10
	b _080CA134
_080CA112:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080CA132
_080CA11A:
	cmp r2, #0
	beq _080CA12A
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CA12A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CA11A
_080CA132:
	adds r5, r2, #0
_080CA134:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080CA144
_080CA13E:
	adds r1, #0x10
	cmp r1, r2
	bne _080CA13E
_080CA144:
	cmp r0, #0
	beq _080CA14C
	bl sub_80D0260
_080CA14C:
	ldr r0, [sp, #0xf4]
	add r0, sb
	ldr r7, [sp, #0xf4]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080CA158:
	movs r0, #0xba
	lsls r0, r0, #3
	add r0, sl
	ldrb r0, [r0]
	cmp r0, #0
	bne _080CA166
	b _080CA330
_080CA166:
	ldr r0, [sp, #0xb8]
	cmp r0, #0
	beq _080CA176
	movs r0, #0xb4
	lsls r0, r0, #3
	add r0, sl
	bl sub_805E8F0
_080CA176:
	add r6, sp, #0x2c
	movs r0, #0xb4
	lsls r0, r0, #3
	add r0, sl
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	ldr r0, _080CA258 @ =0x000005A4
	add r0, sl
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	adds r0, r6, #0
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r1, sp, #0x10
	ldr r0, _080CA25C @ =0x000005B4
	add r0, sl
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r5, r7}
	stm r1!, {r2, r5, r7}
	ldr r0, [r0]
	str r0, [r1]
	add r1, sp, #0x10
	ldr r0, _080CA260 @ =0x0000059C
	add r0, sl
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r0, _080CA264 @ =0x0000059E
	add r0, sl
	ldrh r0, [r0]
	strh r0, [r1, #2]
	adds r0, r1, #0
	movs r4, #1
	movs r3, #1
	mov sb, r3
	mov r5, sb
	strh r5, [r0, #8]
	movs r0, #0xe1
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [r0, #4]
	bl sub_80074C0
	add r1, sp, #0x10
	strh r0, [r1, #4]
	movs r5, #0xdf
	lsls r5, r5, #2
	add r5, sl
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	add r1, sp, #0x10
	strh r0, [r1, #6]
	adds r0, r1, #0
	strb r4, [r0, #0x18]
	mov r0, sl
	bl sub_8008920
	ldr r1, [sp, #0x2c]
	movs r2, #0
	cmp r1, #0
	beq _080CA1FE
	ldrh r2, [r6, #4]
_080CA1FE:
	add r3, sp, #0x10
	bl sub_805E99C
	mov r0, sl
	bl sub_8008910
	adds r4, r0, #0
	ldr r7, [sp, #0x34]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	adds r2, r0, #0
	add r1, sp, #0x34
	ldr r0, [sp, #0x34]
	movs r3, #0
	cmp r0, #0
	beq _080CA224
	ldrh r3, [r1, #4]
_080CA224:
	adds r6, r4, #0
	lsls r2, r2, #5
	ldr r0, _080CA268 @ =0x06010000
	adds r2, r2, r0
	add r0, sp, #0x4c
	adds r1, r7, #0
	bl sub_8008F0C
	add r1, sp, #0x4c
	mov r8, r1
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080CA26C
	cmp r1, #0
	beq _080CA250
	adds r0, r1, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CA250:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080CA330
	.align 2, 0
_080CA258: .4byte 0x000005A4
_080CA25C: .4byte 0x000005B4
_080CA260: .4byte 0x0000059C
_080CA264: .4byte 0x0000059E
_080CA268: .4byte 0x06010000
_080CA26C:
	str r1, [sp, #0xf0]
	add r1, sp, #0xa4
	mov r5, sb
	str r5, [r1]
	ldr r0, [r6]
	ldr r7, [sp, #0xf0]
	subs r0, r7, r0
	asrs r4, r0, #4
	add r0, sp, #0xa0
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080CA288
	adds r0, r1, #0
_080CA288:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CA2A6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080CA2AA
	mov r0, sb
	bl sub_80D3BC0
	b _080CA2AA
_080CA2A6:
	movs r0, #0
	mov sb, r0
_080CA2AA:
	adds r5, r0, #0
	str r5, [sp, #0xf4]
	ldr r2, [r6]
	adds r3, r5, #0
	b _080CA2C8
_080CA2B4:
	cmp r3, #0
	beq _080CA2C4
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CA2C4:
	adds r2, #0x10
	adds r3, #0x10
_080CA2C8:
	ldr r0, [sp, #0xf0]
	cmp r2, r0
	bne _080CA2B4
	adds r5, r3, #0
	ldr r1, [sp, #0xa4]
	cmp r1, #1
	bne _080CA2EA
	cmp r5, #0
	beq _080CA2E6
	adds r0, r5, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CA2E6:
	adds r5, #0x10
	b _080CA30C
_080CA2EA:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080CA30A
_080CA2F2:
	cmp r2, #0
	beq _080CA302
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CA302:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CA2F2
_080CA30A:
	adds r5, r2, #0
_080CA30C:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080CA31C
_080CA316:
	adds r1, #0x10
	cmp r1, r2
	bne _080CA316
_080CA31C:
	cmp r0, #0
	beq _080CA324
	bl sub_80D0260
_080CA324:
	ldr r0, [sp, #0xf4]
	add r0, sb
	ldr r7, [sp, #0xf4]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080CA330:
	movs r0, #0xc8
	lsls r0, r0, #3
	add r0, sl
	ldrb r0, [r0]
	cmp r0, #0
	bne _080CA33E
	b _080CA508
_080CA33E:
	movs r4, #0xc2
	lsls r4, r4, #3
	add r4, sl
	adds r0, r4, #0
	bl sub_805E8F0
	add r5, sp, #0x2c
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	ldr r0, _080CA42C @ =0x00000614
	add r0, sl
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	adds r0, r5, #0
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r1, sp, #0x10
	ldr r0, _080CA430 @ =0x00000624
	add r0, sl
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldr r0, [r0]
	str r0, [r1]
	add r1, sp, #0x10
	ldr r0, _080CA434 @ =0x0000060C
	add r0, sl
	ldrh r0, [r0]
	movs r2, #0
	strh r0, [r1]
	ldr r0, _080CA438 @ =0x0000060E
	add r0, sl
	ldrh r0, [r0]
	strh r0, [r1, #2]
	adds r0, r1, #0
	strh r2, [r0, #8]
	movs r0, #0xe7
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [r0, #4]
	bl sub_80074C0
	add r1, sp, #0x10
	strh r0, [r1, #4]
	movs r4, #0xe5
	lsls r4, r4, #2
	add r4, sl
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007D4C
	add r1, sp, #0x10
	strh r0, [r1, #6]
	adds r0, r1, #0
	movs r7, #1
	mov sb, r7
	mov r1, sb
	strb r1, [r0, #0x18]
	mov r0, sl
	bl sub_8008920
	adds r3, r0, #0
	ldr r0, [sp, #0x2c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080CA3D0
	ldrh r2, [r5, #4]
_080CA3D0:
	adds r0, r3, #0
	add r3, sp, #0x10
	bl sub_805E99C
	mov r0, sl
	bl sub_8008910
	adds r5, r0, #0
	ldr r7, [sp, #0x34]
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007D4C
	adds r2, r0, #0
	add r1, sp, #0x34
	ldr r0, [sp, #0x34]
	movs r3, #0
	cmp r0, #0
	beq _080CA3F8
	ldrh r3, [r1, #4]
_080CA3F8:
	adds r6, r5, #0
	lsls r2, r2, #5
	ldr r4, _080CA43C @ =0x06010000
	adds r2, r2, r4
	add r0, sp, #0x4c
	adds r1, r7, #0
	bl sub_8008F0C
	add r5, sp, #0x4c
	mov r8, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080CA440
	cmp r1, #0
	beq _080CA424
	adds r0, r1, #0
	mov r1, r8
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CA424:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080CA508
	.align 2, 0
_080CA42C: .4byte 0x00000614
_080CA430: .4byte 0x00000624
_080CA434: .4byte 0x0000060C
_080CA438: .4byte 0x0000060E
_080CA43C: .4byte 0x06010000
_080CA440:
	str r1, [sp, #0xf0]
	add r1, sp, #0xac
	mov r4, sb
	str r4, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0xf0]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0xa8
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080CA45C
	adds r0, r1, #0
_080CA45C:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CA47A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080CA47E
	mov r0, sb
	bl sub_80D3BC0
	b _080CA47E
_080CA47A:
	movs r0, #0
	mov sb, r0
_080CA47E:
	adds r5, r0, #0
	str r5, [sp, #0xf4]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0xf0]
	cmp r2, r7
	beq _080CA4A6
_080CA48C:
	cmp r3, #0
	beq _080CA49C
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CA49C:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xf0]
	cmp r2, r0
	bne _080CA48C
_080CA4A6:
	adds r5, r3, #0
	ldr r1, [sp, #0xac]
	cmp r1, #1
	bne _080CA4C2
	cmp r5, #0
	beq _080CA4BE
	adds r0, r5, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CA4BE:
	adds r5, #0x10
	b _080CA4E4
_080CA4C2:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080CA4E2
_080CA4CA:
	cmp r2, #0
	beq _080CA4DA
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CA4DA:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CA4CA
_080CA4E2:
	adds r5, r2, #0
_080CA4E4:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080CA4F4
_080CA4EE:
	adds r1, #0x10
	cmp r1, r2
	bne _080CA4EE
_080CA4F4:
	cmp r0, #0
	beq _080CA4FC
	bl sub_80D0260
_080CA4FC:
	ldr r0, [sp, #0xf4]
	add r0, sb
	ldr r7, [sp, #0xf4]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080CA508:
	movs r0, #0xc1
	lsls r0, r0, #3
	add r0, sl
	ldrb r0, [r0]
	cmp r0, #0
	bne _080CA516
	b _080CA6E4
_080CA516:
	movs r4, #0xbb
	lsls r4, r4, #3
	add r4, sl
	adds r0, r4, #0
	bl sub_805E8F0
	add r5, sp, #0x2c
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	ldr r0, _080CA604 @ =0x000005DC
	add r0, sl
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	adds r0, r5, #0
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r1, sp, #0x10
	ldr r0, _080CA608 @ =0x000005EC
	add r0, sl
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldr r0, [r0]
	str r0, [r1]
	add r1, sp, #0x10
	ldr r0, _080CA60C @ =0x000005D4
	add r0, sl
	ldrh r0, [r0]
	movs r2, #0
	strh r0, [r1]
	ldr r0, _080CA610 @ =0x000005D6
	add r0, sl
	ldrh r0, [r0]
	strh r0, [r1, #2]
	adds r0, r1, #0
	strh r2, [r0, #8]
	movs r0, #0xe7
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [r0, #4]
	bl sub_80074C0
	add r1, sp, #0x10
	strh r0, [r1, #4]
	movs r4, #0xe3
	lsls r4, r4, #2
	add r4, sl
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007D4C
	add r1, sp, #0x10
	strh r0, [r1, #6]
	adds r0, r1, #0
	movs r7, #1
	mov sb, r7
	mov r1, sb
	strb r1, [r0, #0x18]
	mov r0, sl
	bl sub_8008920
	adds r3, r0, #0
	ldr r0, [sp, #0x2c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080CA5A8
	ldrh r2, [r5, #4]
_080CA5A8:
	adds r0, r3, #0
	add r3, sp, #0x10
	bl sub_805E99C
	mov r0, sl
	bl sub_8008910
	adds r5, r0, #0
	ldr r7, [sp, #0x34]
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007D4C
	adds r2, r0, #0
	add r1, sp, #0x34
	ldr r0, [sp, #0x34]
	movs r3, #0
	cmp r0, #0
	beq _080CA5D0
	ldrh r3, [r1, #4]
_080CA5D0:
	adds r6, r5, #0
	lsls r2, r2, #5
	ldr r4, _080CA614 @ =0x06010000
	adds r2, r2, r4
	add r0, sp, #0x4c
	adds r1, r7, #0
	bl sub_8008F0C
	add r5, sp, #0x4c
	mov r8, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080CA618
	cmp r1, #0
	beq _080CA5FC
	adds r0, r1, #0
	mov r1, r8
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CA5FC:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080CA6E4
	.align 2, 0
_080CA604: .4byte 0x000005DC
_080CA608: .4byte 0x000005EC
_080CA60C: .4byte 0x000005D4
_080CA610: .4byte 0x000005D6
_080CA614: .4byte 0x06010000
_080CA618:
	str r1, [sp, #0xf0]
	add r1, sp, #0xb4
	mov r4, sb
	str r4, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0xf0]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0xb0
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _080CA636
	mov r0, sl
_080CA636:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CA654
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080CA658
	mov r0, sb
	bl sub_80D3BC0
	b _080CA658
_080CA654:
	movs r0, #0
	mov sb, r0
_080CA658:
	adds r5, r0, #0
	str r5, [sp, #0xf4]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0xf0]
	cmp r2, r7
	beq _080CA680
_080CA666:
	cmp r3, #0
	beq _080CA676
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CA676:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xf0]
	cmp r2, r0
	bne _080CA666
_080CA680:
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _080CA69E
	cmp r5, #0
	beq _080CA69A
	adds r0, r5, #0
	mov r1, r8
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CA69A:
	adds r5, #0x10
	b _080CA6C0
_080CA69E:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080CA6BE
_080CA6A6:
	cmp r2, #0
	beq _080CA6B6
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CA6B6:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CA6A6
_080CA6BE:
	adds r5, r2, #0
_080CA6C0:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080CA6D0
_080CA6CA:
	adds r1, #0x10
	cmp r1, r2
	bne _080CA6CA
_080CA6D0:
	cmp r0, #0
	beq _080CA6D8
	bl sub_80D0260
_080CA6D8:
	ldr r0, [sp, #0xf4]
	add r0, sb
	ldr r1, [sp, #0xf4]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080CA6E4:
	add sp, #0xf8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80CA6F4
sub_80CA6F4: @ 0x080CA6F4
	push {lr}
	ldr r0, _080CA704 @ =0x04000006
	ldrb r0, [r0]
	cmp r0, #0x17
	beq _080CA708
	cmp r0, #0x9f
	beq _080CA744
	b _080CA760
	.align 2, 0
_080CA704: .4byte 0x04000006
_080CA708:
	ldr r2, _080CA738 @ =0x04000004
	ldrh r1, [r2]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _080CA720
	movs r3, #2
_080CA716:
	ldrh r1, [r2]
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _080CA716
_080CA720:
	ldr r1, _080CA73C @ =0x0400000C
	ldr r2, _080CA740 @ =0x00003E43
	adds r0, r2, #0
	strh r0, [r1]
	ldr r2, _080CA738 @ =0x04000004
	ldrh r1, [r2]
	movs r0, #0xff
	ands r0, r1
	strh r0, [r2]
	movs r0, #0x9f
	lsls r0, r0, #8
	b _080CA75A
	.align 2, 0
_080CA738: .4byte 0x04000004
_080CA73C: .4byte 0x0400000C
_080CA740: .4byte 0x00003E43
_080CA744:
	ldr r1, _080CA764 @ =0x0400000C
	ldr r2, _080CA768 @ =0x00003E41
	adds r0, r2, #0
	strh r0, [r1]
	ldr r2, _080CA76C @ =0x04000004
	ldrh r1, [r2]
	movs r0, #0xff
	ands r0, r1
	strh r0, [r2]
	movs r0, #0xb8
	lsls r0, r0, #5
_080CA75A:
	ldrh r1, [r2]
	orrs r0, r1
	strh r0, [r2]
_080CA760:
	pop {r0}
	bx r0
	.align 2, 0
_080CA764: .4byte 0x0400000C
_080CA768: .4byte 0x00003E41
_080CA76C: .4byte 0x04000004

	thumb_func_start sub_80CA770
sub_80CA770: @ 0x080CA770
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	str r0, [sp, #0x18]
	adds r0, r1, #0
	movs r2, #0
	ldr r1, [sp, #0x18]
	str r2, [r1]
	movs r1, #0x63
	ldr r3, [sp, #0x18]
	str r1, [r3, #4]
	strb r2, [r3, #8]
	str r2, [r3, #0xc]
	str r2, [r3, #0x10]
	movs r4, #1
	str r4, [r3, #0x14]
	str r0, [r3, #0x18]
	bl sub_8008910
	adds r5, r0, #0
	ldr r1, _080CA7D0 @ =gUnknown_08750C8C
	mov r0, sp
	ldr r2, _080CA7D4 @ =0x06000480
	movs r3, #0xe0
	lsls r3, r3, #1
	bl sub_8008F0C
	mov sl, sp
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080CA7D8
	cmp r1, #0
	beq _080CA7C6
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CA7C6:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080CA8A0
	.align 2, 0
_080CA7D0: .4byte gUnknown_08750C8C
_080CA7D4: .4byte 0x06000480
_080CA7D8:
	str r1, [sp, #0x1c]
	str r4, [sp, #0x14]
	ldr r1, [r5]
	ldr r2, [sp, #0x1c]
	subs r0, r2, r1
	asrs r4, r0, #4
	str r4, [sp, #0x10]
	add r2, sp, #0x14
	add r0, sp, #0x10
	cmp r4, #1
	bhs _080CA7F0
	adds r0, r2, #0
_080CA7F0:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CA810
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080CA80C
	mov r0, sb
	bl sub_80D3BC0
_080CA80C:
	ldr r1, [r5]
	b _080CA814
_080CA810:
	movs r0, #0
	mov sb, r0
_080CA814:
	adds r4, r0, #0
	mov r8, r4
	adds r2, r1, #0
	mov r3, r8
	ldr r4, [sp, #0x1c]
	cmp r2, r4
	beq _080CA83C
_080CA822:
	cmp r3, #0
	beq _080CA832
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CA832:
	adds r2, #0x10
	adds r3, #0x10
	ldr r6, [sp, #0x1c]
	cmp r2, r6
	bne _080CA822
_080CA83C:
	adds r4, r3, #0
	ldr r0, [sp, #0x14]
	cmp r0, #1
	bne _080CA858
	cmp r4, #0
	beq _080CA854
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CA854:
	adds r4, #0x10
	b _080CA87A
_080CA858:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080CA878
_080CA860:
	cmp r2, #0
	beq _080CA870
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CA870:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CA860
_080CA878:
	adds r4, r2, #0
_080CA87A:
	ldr r2, [r5, #4]
	ldr r1, [r5]
	adds r0, r1, #0
	cmp r1, r2
	beq _080CA88A
_080CA884:
	adds r0, #0x10
	cmp r0, r2
	bne _080CA884
_080CA88A:
	cmp r1, #0
	beq _080CA894
	adds r0, r1, #0
	bl sub_80D0260
_080CA894:
	mov r0, sb
	add r0, r8
	mov r1, r8
	str r1, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080CA8A0:
	ldr r0, [sp, #0x18]
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80CA8B4
sub_80CA8B4: @ 0x080CA8B4
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r0, #0
	adds r7, r3, #0
	ldr r0, [r6, #0x18]
	ldr r0, [r0, #0x10]
	lsls r0, r0, #1
	adds r0, #4
	str r0, [r6, #0xc]
	str r7, [r6, #0x10]
	str r1, [r6]
	cmp r2, #0x63
	bls _080CA8D4
	movs r0, #0x63
	str r0, [r6, #4]
	b _080CA8D6
_080CA8D4:
	str r2, [r6, #4]
_080CA8D6:
	ldr r4, [r6, #0x18]
	ldr r0, [r4, #8]
	ldr r1, _080CA988 @ =0x00001AA8
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r1, [r6]
	bl sub_80D0EDA
	adds r1, r0, #0
	ldr r0, [r6, #4]
	cmp r1, r0
	bhs _080CA8F0
	str r1, [r6, #4]
_080CA8F0:
	ldr r0, [r4, #0x1c]
	ldr r1, [r6, #0xc]
	adds r1, #1
	ldr r0, [r0, #0x18]
	lsls r1, r1, #6
	adds r0, r0, r1
	lsls r1, r7, #1
	adds r0, r0, r1
	movs r5, #0
	str r5, [sp]
	movs r4, #0x20
	str r4, [sp, #4]
	movs r1, #0x2e
	movs r2, #1
	movs r3, #1
	bl sub_804E9F4
	ldr r0, [r6, #0x18]
	ldr r1, [r0, #0x1c]
	ldr r0, [r6, #0xc]
	adds r0, #1
	ldr r1, [r1, #0x18]
	lsls r0, r0, #6
	adds r1, r1, r0
	adds r0, r7, #2
	lsls r0, r0, #1
	adds r1, r1, r0
	ldr r0, [r6, #0x14]
	str r4, [sp]
	movs r2, #0x24
	movs r3, #0
	bl sub_804EE30
	ldr r0, [r6, #0x18]
	ldr r0, [r0, #0x1c]
	ldr r1, [r6, #0xc]
	adds r1, #1
	ldr r0, [r0, #0x18]
	lsls r1, r1, #6
	adds r0, r0, r1
	adds r1, r7, #4
	lsls r1, r1, #1
	adds r0, r0, r1
	str r5, [sp]
	str r4, [sp, #4]
	movs r1, #0x2f
	movs r2, #1
	movs r3, #1
	bl sub_804E9F4
	ldr r0, [r6, #0x18]
	ldr r0, [r0, #0x1c]
	movs r4, #0xc
	ldrsh r3, [r0, r4]
	adds r1, r3, #0
	cmp r3, #0
	bge _080CA964
	adds r1, r3, #7
_080CA964:
	asrs r1, r1, #3
	movs r4, #0x80
	lsls r4, r4, #1
	adds r2, r3, r4
	cmp r2, #0
	bge _080CA974
	adds r4, #7
	adds r2, r3, r4
_080CA974:
	asrs r2, r2, #3
	bl sub_8075BC8
	movs r0, #1
	strb r0, [r6, #8]
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080CA988: .4byte 0x00001AA8

	thumb_func_start sub_80CA98C
sub_80CA98C: @ 0x080CA98C
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	movs r6, #0
	ldr r4, [r5, #0x14]
	ldr r0, [r5, #0x18]
	bl sub_80088D4
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080CA9B4
	ldr r0, [r5, #0x14]
	adds r0, #1
	str r0, [r5, #0x14]
	ldr r1, [r5, #4]
	cmp r0, r1
	bls _080CAA1A
	movs r0, #1
	b _080CAA18
_080CA9B4:
	ldr r0, [r5, #0x18]
	bl sub_80088D4
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080CA9D0
	ldr r0, [r5, #0x14]
	subs r0, #1
	str r0, [r5, #0x14]
	cmp r0, #0
	bne _080CAA1A
	ldr r0, [r5, #4]
	b _080CAA18
_080CA9D0:
	ldr r0, [r5, #0x18]
	bl sub_80088D4
	movs r1, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080CA9F6
	ldr r0, [r5, #0x14]
	ldr r1, [r5, #4]
	cmp r0, r1
	bne _080CA9EA
	movs r0, #1
	b _080CAA18
_080CA9EA:
	adds r0, #0xa
	str r0, [r5, #0x14]
	cmp r0, r1
	blo _080CAA1A
	str r1, [r5, #0x14]
	b _080CAA1A
_080CA9F6:
	ldr r0, [r5, #0x18]
	bl sub_80088D4
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _080CAA1A
	ldr r0, [r5, #0x14]
	cmp r0, #1
	bne _080CAA0E
	ldr r0, [r5, #4]
	b _080CAA18
_080CAA0E:
	cmp r0, #0xb
	bhi _080CAA16
	movs r0, #1
	b _080CAA18
_080CAA16:
	subs r0, #0xa
_080CAA18:
	str r0, [r5, #0x14]
_080CAA1A:
	ldr r0, [r5, #0x14]
	cmp r4, r0
	beq _080CAA22
	movs r6, #1
_080CAA22:
	cmp r6, #0
	beq _080CAAE6
	ldr r4, _080CAAF0 @ =0x03FF03FF
	ldr r0, [r5, #0x18]
	ldr r1, [r0, #0x1c]
	ldr r0, [r5, #0xc]
	adds r0, #1
	ldr r1, [r1, #0x18]
	lsls r0, r0, #6
	adds r1, r1, r0
	ldr r0, [r5, #0x10]
	adds r0, #1
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r0, r4, #0
	movs r2, #4
	bl sub_8008EB8
	ldr r0, [r5, #0x18]
	ldr r1, [r0, #0x1c]
	ldr r0, [r5, #0xc]
	ldr r1, [r1, #0x18]
	lsls r0, r0, #6
	adds r1, r1, r0
	adds r1, #0x18
	adds r0, r4, #0
	movs r2, #0x1c
	bl sub_8008EB8
	ldr r0, [r5, #0x18]
	ldr r1, [r0, #0x1c]
	ldr r0, [r5, #0xc]
	adds r0, #1
	ldr r1, [r1, #0x18]
	lsls r0, r0, #6
	adds r1, r1, r0
	adds r1, #0x18
	adds r0, r4, #0
	movs r2, #0x1c
	bl sub_8008EB8
	ldr r0, [r5, #0x18]
	ldr r1, [r0, #0x1c]
	ldr r0, [r5, #0xc]
	adds r0, #1
	ldr r1, [r1, #0x18]
	lsls r0, r0, #6
	adds r1, r1, r0
	ldr r0, [r5, #0x10]
	adds r0, #2
	lsls r0, r0, #1
	adds r1, r1, r0
	ldr r0, [r5, #0x14]
	movs r4, #0x20
	str r4, [sp]
	movs r2, #0x24
	movs r3, #0
	bl sub_804EE30
	ldr r0, [r5, #0x18]
	ldr r1, [r0, #0x1c]
	ldr r0, [r5, #0xc]
	ldr r1, [r1, #0x18]
	lsls r0, r0, #6
	adds r1, r1, r0
	adds r1, #0x32
	ldr r2, [r5, #0x14]
	ldr r0, [r5]
	muls r0, r2, r0
	str r4, [sp]
	movs r2, #0xa0
	movs r3, #0
	bl sub_804EDB4
	ldr r0, [r5, #0x18]
	ldr r0, [r0, #0x1c]
	movs r1, #0xc
	ldrsh r3, [r0, r1]
	adds r1, r3, #0
	cmp r3, #0
	bge _080CAAC6
	adds r1, r3, #7
_080CAAC6:
	asrs r1, r1, #3
	movs r4, #0x80
	lsls r4, r4, #1
	adds r2, r3, r4
	cmp r2, #0
	bge _080CAAD6
	adds r4, #7
	adds r2, r3, r4
_080CAAD6:
	asrs r2, r2, #3
	bl sub_8075BC8
	ldr r0, [r5, #0x18]
	adds r0, #0x18
	movs r1, #0xcb
	bl sub_8008B6C
_080CAAE6:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080CAAF0: .4byte 0x03FF03FF

	thumb_func_start sub_80CAAF4
sub_80CAAF4: @ 0x080CAAF4
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r4, _080CAB9C @ =0x03FF03FF
	ldr r0, [r5, #0x18]
	ldr r1, [r0, #0x1c]
	ldr r0, [r5, #0xc]
	adds r0, #1
	ldr r1, [r1, #0x18]
	lsls r0, r0, #6
	adds r1, r1, r0
	ldr r0, [r5, #0x10]
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r0, r4, #0
	movs r2, #0x10
	bl sub_8008EB8
	ldr r0, [r5, #0x18]
	ldr r1, [r0, #0x1c]
	ldr r0, [r5, #0xc]
	ldr r1, [r1, #0x18]
	lsls r0, r0, #6
	adds r1, r1, r0
	adds r1, #0x18
	adds r0, r4, #0
	movs r2, #0x1c
	bl sub_8008EB8
	ldr r0, [r5, #0x18]
	ldr r1, [r0, #0x1c]
	ldr r0, [r5, #0xc]
	adds r0, #1
	ldr r1, [r1, #0x18]
	lsls r0, r0, #6
	adds r1, r1, r0
	adds r1, #0x18
	adds r0, r4, #0
	movs r2, #0x1c
	bl sub_8008EB8
	ldr r0, [r5, #0x18]
	ldr r1, [r0, #0x1c]
	ldr r0, [r5, #0xc]
	ldr r1, [r1, #0x18]
	lsls r0, r0, #6
	adds r1, r1, r0
	adds r1, #0x32
	ldr r0, [r5]
	movs r2, #0x20
	str r2, [sp]
	movs r2, #0xa0
	movs r3, #0
	bl sub_804EDB4
	ldr r0, [r5, #0x18]
	ldr r0, [r0, #0x1c]
	movs r1, #0xc
	ldrsh r3, [r0, r1]
	adds r1, r3, #0
	cmp r3, #0
	bge _080CAB72
	adds r1, r3, #7
_080CAB72:
	asrs r1, r1, #3
	movs r4, #0x80
	lsls r4, r4, #1
	adds r2, r3, r4
	cmp r2, #0
	bge _080CAB82
	adds r4, #7
	adds r2, r3, r4
_080CAB82:
	asrs r2, r2, #3
	bl sub_8075BC8
	movs r0, #0
	strb r0, [r5, #8]
	str r0, [r5, #0xc]
	movs r0, #1
	str r0, [r5, #0x14]
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080CAB9C: .4byte 0x03FF03FF

	thumb_func_start sub_80CABA0
sub_80CABA0: @ 0x080CABA0
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	movs r0, #0xd2
	lsls r0, r0, #2
	adds r4, r4, r0
	adds r0, r4, #0
	movs r1, #4
	bl sub_8050EBC
	adds r0, r4, #0
	movs r1, #8
	bl sub_8050EBC
	adds r0, r4, #0
	movs r1, #1
	bl sub_8050EBC
	adds r0, r4, #0
	movs r1, #2
	bl sub_8050EBC
	adds r0, r4, #0
	movs r1, #0x10
	bl sub_8050EBC
	adds r0, r4, #0
	movs r1, #0x20
	bl sub_8050EBC
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_8050D8C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80CABEC
sub_80CABEC: @ 0x080CABEC
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	movs r0, #0xd2
	lsls r0, r0, #2
	adds r4, r4, r0
	adds r0, r4, #0
	movs r1, #4
	bl sub_8050E98
	adds r0, r4, #0
	movs r1, #8
	bl sub_8050E98
	adds r0, r4, #0
	movs r1, #1
	bl sub_8050E98
	adds r0, r4, #0
	movs r1, #2
	bl sub_8050E98
	adds r0, r4, #0
	movs r1, #0x10
	bl sub_8050E98
	adds r0, r4, #0
	movs r1, #0x20
	bl sub_8050E98
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #0
	movs r3, #0
	bl sub_8050DC8
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080CAC3C:
	.byte 0x01, 0x49, 0x40, 0x18
	.byte 0x00, 0x78, 0x70, 0x47, 0xA3, 0x06, 0x00, 0x00, 0x01, 0x49, 0x40, 0x18, 0x00, 0x78, 0x70, 0x47
	.byte 0xA1, 0x06, 0x00, 0x00, 0x09, 0x04, 0x05, 0x4A, 0x13, 0x88, 0xFF, 0x20, 0x18, 0x40, 0x10, 0x80
	.byte 0x09, 0x0A, 0x10, 0x88, 0x01, 0x43, 0x11, 0x80, 0x70, 0x47, 0x00, 0x00, 0x04, 0x00, 0x00, 0x04

	thumb_func_start sub_80CAC70
sub_80CAC70: @ 0x080CAC70
	movs r1, #0
	str r1, [r0]
	str r1, [r0, #4]
	str r1, [r0, #8]
	bx lr
	.align 2, 0

	thumb_func_start sub_80CAC7C
sub_80CAC7C: @ 0x080CAC7C
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #0x88
	mov r8, r0
	adds r5, r2, #0
	mov sb, r3
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	mov r0, sp
	bl sub_805E6CC
	add r0, sp, #0x30
	movs r6, #0
	movs r4, #0
	strh r4, [r0]
	strh r4, [r0, #2]
	add r0, sp, #0x34
	mov r1, sp
	adds r2, r5, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	add r0, sp, #0x48
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r6, [r0, #0x10]
	strb r6, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r6, [r0, #0x18]
	add r0, sp, #0x64
	strb r6, [r0]
	add r0, sp, #0x68
	add r2, sp, #0x34
	ldr r1, [sp, #0x34]
	ldr r4, [r1]
	ldrh r3, [r2, #0xc]
	lsls r3, r3, #2
	ldr r2, [sp, #0x38]
	adds r2, r2, r3
	ldrh r2, [r2]
	ldr r3, [r4, #0x10]
	bl sub_80D3918
	ldr r0, [sp, #0x70]
	mov r1, r8
	str r0, [r1, #4]
	ldr r0, [sp, #0x78]
	str r0, [r1, #8]
	mov r0, sb
	str r0, [r1]
	ldr r0, _080CAD04 @ =gUnknown_080E5A28
	str r0, [sp]
	mov r0, r8
	add sp, #0x88
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080CAD04: .4byte gUnknown_080E5A28
_080CAD08:
	.byte 0x41, 0x60, 0x82, 0x60, 0x03, 0x60, 0x70, 0x47

	thumb_func_start sub_80CAD10
sub_80CAD10: @ 0x080CAD10
	str r1, [r0]
	bx lr

	thumb_func_start sub_80CAD14
sub_80CAD14: @ 0x080CAD14
	ldr r0, [r0]
	bx lr

	thumb_func_start sub_80CAD18
sub_80CAD18: @ 0x080CAD18
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #0x88
	mov r8, r0
	adds r5, r2, #0
	mov sb, r3
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	mov r0, sp
	bl sub_805E6CC
	add r0, sp, #0x30
	movs r6, #0
	movs r4, #0
	strh r4, [r0]
	strh r4, [r0, #2]
	add r0, sp, #0x34
	mov r1, sp
	adds r2, r5, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	add r0, sp, #0x48
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r6, [r0, #0x10]
	strb r6, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r6, [r0, #0x18]
	add r0, sp, #0x64
	strb r6, [r0]
	add r0, sp, #0x68
	add r2, sp, #0x34
	ldr r1, [sp, #0x34]
	ldr r4, [r1]
	ldrh r3, [r2, #0xc]
	lsls r3, r3, #2
	ldr r2, [sp, #0x38]
	adds r2, r2, r3
	ldrh r2, [r2]
	ldr r3, [r4, #0x10]
	bl sub_80D3918
	ldr r0, [sp, #0x70]
	mov r1, r8
	str r0, [r1, #4]
	ldr r0, [sp, #0x78]
	str r0, [r1, #8]
	mov r0, sb
	str r0, [r1]
	ldr r0, _080CAD9C @ =gUnknown_080E5A28
	str r0, [sp]
	add sp, #0x88
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080CAD9C: .4byte gUnknown_080E5A28

	thumb_func_start sub_80CADA0
sub_80CADA0: @ 0x080CADA0
	str r1, [r0, #4]
	str r2, [r0, #8]
	str r3, [r0]
	bx lr

	thumb_func_start sub_80CADA8
sub_80CADA8: @ 0x080CADA8
	movs r1, #0
	str r1, [r0]
	str r1, [r0, #4]
	str r1, [r0, #8]
	bx lr
	.align 2, 0

	thumb_func_start sub_80CADB4
sub_80CADB4: @ 0x080CADB4
	push {r4, r5, lr}
	sub sp, #8
	adds r5, r0, #0
	movs r0, #0x84
	lsls r0, r0, #2
	adds r2, r5, r0
	ldr r0, _080CADEC @ =gUnknown_080E85CC
	str r0, [r2]
	adds r4, r5, #0
	stm r4!, {r1}
	movs r0, #0
	str r0, [r4, #4]
	movs r0, #0xc
	bl sub_80D01F8
	cmp r0, #0
	bne _080CADDC
	movs r0, #0xc
	bl sub_80D3BC0
_080CADDC:
	str r0, [r0]
	str r0, [r0, #4]
	str r0, [r4, #4]
	adds r0, r5, #0
	add sp, #8
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080CADEC: .4byte gUnknown_080E85CC

	thumb_func_start sub_80CADF0
sub_80CADF0: @ 0x080CADF0
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r6, r1, #0
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r5, r0
	ldr r0, _080CAE0C @ =gUnknown_080E85CC
	str r0, [r1]
	ldr r0, [r5, #8]
	ldr r1, [r0]
	str r1, [sp]
	str r0, [sp, #4]
	b _080CAE2C
	.align 2, 0
_080CAE0C: .4byte gUnknown_080E85CC
_080CAE10:
	ldr r0, [sp]
	ldr r1, [r0, #8]
	cmp r1, #0
	beq _080CAE24
	ldr r0, [r1, #8]
	ldr r2, [r0, #0xc]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080CAE24:
	ldr r0, [sp]
	ldr r0, [r0]
	str r0, [sp]
	ldr r1, [sp, #4]
_080CAE2C:
	eors r1, r0
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _080CAE10
	adds r4, r5, #4
	adds r0, r4, #0
	bl sub_80E586C
	ldr r0, [r4, #4]
	cmp r0, #0
	beq _080CAE48
	bl sub_80D0260
_080CAE48:
	movs r0, #1
	ands r0, r6
	cmp r0, #0
	beq _080CAE56
	adds r0, r5, #0
	bl sub_8000608
_080CAE56:
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80CAE60
sub_80CAE60: @ 0x080CAE60
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	mov sl, r0
	mov r8, r1
	adds r5, r2, #0
	mov sb, r3
	ldr r6, [sp, #0x34]
	ldr r4, [sp, #0x38]
	ldr r7, [sp, #0x3c]
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x20
	bl sub_80005D4
	str r6, [sp]
	str r4, [sp, #4]
	str r7, [sp, #8]
	mov r1, r8
	adds r2, r5, #0
	mov r3, sb
	bl sub_804EA58
	adds r4, r0, #0
	mov r1, sl
	ldr r0, [r1, #8]
	str r0, [sp, #0x10]
	movs r0, #0xc
	bl sub_80D01F8
	adds r2, r0, #0
	cmp r2, #0
	bne _080CAEB4
	movs r0, #0xc
	bl sub_80D3BC0
	adds r2, r0, #0
_080CAEB4:
	adds r0, r2, #0
	adds r0, #8
	cmp r0, #0
	beq _080CAEBE
	str r4, [r2, #8]
_080CAEBE:
	ldr r0, [sp, #0x10]
	ldr r1, [r0, #4]
	str r0, [r2]
	str r1, [r2, #4]
	str r2, [r1]
	str r2, [r0, #4]
	str r2, [sp, #0xc]
	mov r1, sl
	ldr r0, [r1]
	ldr r1, [r0, #8]
	ldr r2, [r1, #0x10]
	adds r1, r4, #0
	bl sub_80D3914
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80CAEEC
sub_80CAEEC: @ 0x080CAEEC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x10
	adds r7, r0, #0
	mov r8, r1
	mov sb, r2
	adds r5, r3, #0
	ldr r4, [sp, #0x2c]
	ldr r6, [sp, #0x30]
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x1c
	bl sub_80005D4
	str r4, [sp]
	str r6, [sp, #4]
	mov r1, r8
	mov r2, sb
	adds r3, r5, #0
	bl sub_804EE64
	adds r4, r0, #0
	ldr r0, [r7, #8]
	str r0, [sp, #0xc]
	movs r0, #0xc
	bl sub_80D01F8
	adds r2, r0, #0
	cmp r2, #0
	bne _080CAF38
	movs r0, #0xc
	bl sub_80D3BC0
	adds r2, r0, #0
_080CAF38:
	adds r0, r2, #0
	adds r0, #8
	cmp r0, #0
	beq _080CAF42
	str r4, [r2, #8]
_080CAF42:
	ldr r0, [sp, #0xc]
	ldr r1, [r0, #4]
	str r0, [r2]
	str r1, [r2, #4]
	str r2, [r1]
	str r2, [r0, #4]
	str r2, [sp, #8]
	ldr r0, [r7]
	ldr r1, [r0, #8]
	ldr r2, [r1, #0x10]
	adds r1, r4, #0
	bl sub_80D3914
	add sp, #0x10
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80CAF6C
sub_80CAF6C: @ 0x080CAF6C
	push {r4, lr}
	sub sp, #0x10
	ldr r0, [r0, #8]
	ldr r1, [r0]
	str r1, [sp]
	str r0, [sp, #4]
	b _080CAFB2
_080CAF7A:
	ldr r2, [sp]
	ldr r3, [r2, #8]
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _080CAFAA
	ldr r0, [r3, #8]
	ldr r2, [r0, #0xc]
	adds r0, r3, #0
	movs r1, #3
	bl sub_80D3914
	ldr r0, [sp]
	str r0, [sp, #0xc]
	ldr r4, [r0]
	ldr r1, [r0, #4]
	str r4, [r1]
	str r1, [r4, #4]
	bl sub_80D0260
	str r4, [sp, #8]
	str r4, [sp]
	b _080CAFAE
_080CAFAA:
	ldr r0, [r2]
	str r0, [sp]
_080CAFAE:
	ldr r1, [sp]
	ldr r0, [sp, #4]
_080CAFB2:
	eors r1, r0
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _080CAF7A
	add sp, #0x10
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_80CAFC4
sub_80CAFC4: @ 0x080CAFC4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	adds r5, r0, #0
	mov sb, r1
	adds r1, r2, #0
	mov sl, r3
	add r0, sp, #0x38
	ldrb r0, [r0]
	mov r8, r0
	adds r0, r5, #0
	bl sub_80CADB4
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r5, r0
	ldr r0, _080CB08C @ =gUnknown_080E85BC
	str r0, [r1]
	mov r0, sp
	bl sub_80CAC70
	movs r1, #0x85
	lsls r1, r1, #2
	adds r1, r5, r1
	str r1, [sp, #0xc]
	mov ip, sl
	mov r4, sp
	str r4, [sp, #0x10]
	movs r0, #0
	str r0, [r1]
	mov r6, sl
	cmp r6, #8
	bhi _080CB032
	mov r3, sl
	movs r7, #0x86
	lsls r7, r7, #2
	adds r2, r5, r7
	cmp r6, #0
	beq _080CB02C
_080CB018:
	cmp r2, #0
	beq _080CB024
	adds r1, r2, #0
	ldr r0, [sp, #0x10]
	ldm r0!, {r4, r6, r7}
	stm r1!, {r4, r6, r7}
_080CB024:
	subs r3, #1
	adds r2, #0xc
	cmp r3, #0
	bne _080CB018
_080CB02C:
	mov r0, ip
	ldr r1, [sp, #0xc]
	str r0, [r1]
_080CB032:
	movs r4, #0x9e
	lsls r4, r4, #2
	adds r0, r5, r4
	mov r6, sb
	str r6, [r0]
	movs r7, #0x9f
	lsls r7, r7, #2
	adds r0, r5, r7
	mov r1, r8
	strb r1, [r0]
	adds r4, #8
	adds r0, r5, r4
	bl sub_80CAC70
	adds r7, #0x10
	adds r6, r5, r7
	ldr r0, [sp, #0x34]
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, #8
	bls _080CB060
	movs r4, #8
_080CB060:
	adds r0, r6, #0
	ldr r1, [sp, #0x34]
	adds r2, r4, #0
	bl sub_80D3994
	adds r0, r6, r4
	movs r1, #0
	strb r1, [r0]
	movs r1, #0xa6
	lsls r1, r1, #2
	adds r0, r5, r1
	mov r4, sl
	str r4, [r0]
	adds r0, r5, #0
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080CB08C: .4byte gUnknown_080E85BC

	thumb_func_start sub_80CB090
sub_80CB090: @ 0x080CB090
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x38
	mov r8, r0
	ldr r6, _080CB1D8 @ =0x0600F000
	ldr r5, _080CB1DC @ =0x0600F800
	movs r4, #0x13
_080CB0A4:
	ldr r0, _080CB1E0 @ =0x00030003
	adds r1, r5, #0
	movs r2, #0x1c
	bl sub_8008EB8
	ldr r0, _080CB1E4 @ =0x03FF03FF
	adds r1, r6, #0
	movs r2, #0x20
	bl sub_8008EB8
	adds r6, #0x40
	adds r5, #0x40
	subs r4, #1
	cmp r4, #0
	bge _080CB0A4
	ldr r0, _080CB1E8 @ =gUnknown_0811785C
	ldr r0, [r0]
	str r0, [sp, #0x1c]
	movs r0, #0x9f
	lsls r0, r0, #2
	add r0, r8
	ldrb r0, [r0]
	cmp r0, #0
	beq _080CB0FA
	add r0, sp, #0x1c
	ldrb r1, [r0, #1]
	lsls r1, r1, #6
	ldrb r0, [r0]
	lsls r0, r0, #1
	ldr r2, _080CB1DC @ =0x0600F800
	adds r0, r0, r2
	adds r1, r1, r0
	movs r0, #2
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	movs r0, #0x20
	str r0, [sp, #8]
	mov r0, r8
	movs r2, #0x1c
	movs r3, #2
	bl sub_80CAE60
_080CB0FA:
	movs r4, #0
	movs r0, #0x85
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	cmp r4, r0
	bhs _080CB146
	add r5, sp, #0x1c
_080CB10A:
	lsls r0, r4, #2
	ldr r1, _080CB1EC @ =gUnknown_08117860
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [sp, #0x1c]
	ldrb r1, [r5, #1]
	lsls r1, r1, #6
	ldrb r0, [r5]
	lsls r0, r0, #1
	ldr r2, _080CB1DC @ =0x0600F800
	adds r0, r0, r2
	adds r1, r1, r0
	movs r0, #2
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	movs r0, #0x20
	str r0, [sp, #8]
	mov r0, r8
	movs r2, #0x1c
	movs r3, #2
	bl sub_80CAE60
	adds r4, #1
	movs r0, #0x85
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	cmp r4, r0
	blo _080CB10A
_080CB146:
	movs r7, #0xa3
	lsls r7, r7, #2
	add r7, r8
	movs r1, #0
	ldrb r0, [r7]
	cmp r0, #0
	bne _080CB156
	movs r1, #1
_080CB156:
	mov sb, r1
	cmp r1, #0
	beq _080CB15E
	b _080CB2D2
_080CB15E:
	add r0, sp, #0x20
	movs r5, #8
	movs r6, #2
	strh r5, [r0]
	strh r6, [r0, #2]
	ldr r0, [sp, #0x20]
	mov r4, r8
	adds r4, #0x10
	adds r1, r4, #0
	movs r2, #0
	bl sub_804E7A0
	adds r0, r7, #0
	bl sub_80D3B78
	lsls r0, r0, #3
	movs r2, #0x40
	subs r2, r2, r0
	add r0, sp, #0x24
	strh r5, [r0]
	strh r6, [r0, #2]
	ldr r0, [sp, #0x24]
	str r7, [sp]
	mov r3, sb
	str r3, [sp, #4]
	movs r5, #1
	str r5, [sp, #8]
	adds r1, r4, #0
	movs r3, #0
	bl sub_804E958
	movs r3, #0x80
	lsls r3, r3, #2
	movs r0, #0x9e
	lsls r0, r0, #2
	add r0, r8
	ldr r6, [r0]
	add r0, sp, #0xc
	adds r1, r4, #0
	ldr r2, _080CB1F0 @ =0x06000B00
	bl sub_8008F0C
	add r7, sp, #0xc
	mov sl, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080CB1F4
	cmp r1, #0
	beq _080CB1CE
	adds r0, r1, #0
	add r1, sp, #0xc
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CB1CE:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080CB2BA
	.align 2, 0
_080CB1D8: .4byte 0x0600F000
_080CB1DC: .4byte 0x0600F800
_080CB1E0: .4byte 0x00030003
_080CB1E4: .4byte 0x03FF03FF
_080CB1E8: .4byte gUnknown_0811785C
_080CB1EC: .4byte gUnknown_08117860
_080CB1F0: .4byte 0x06000B00
_080CB1F4:
	str r1, [sp, #0x30]
	movs r5, #1
	str r5, [sp, #0x2c]
	ldr r1, [r6]
	ldr r7, [sp, #0x30]
	subs r0, r7, r1
	asrs r4, r0, #4
	str r4, [sp, #0x28]
	add r2, sp, #0x2c
	add r0, sp, #0x28
	cmp r4, #1
	bhs _080CB20E
	adds r0, r2, #0
_080CB20E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CB22E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080CB22A
	mov r0, sb
	bl sub_80D3BC0
_080CB22A:
	ldr r1, [r6]
	b _080CB232
_080CB22E:
	movs r0, #0
	mov sb, r0
_080CB232:
	adds r5, r0, #0
	str r5, [sp, #0x34]
	adds r2, r1, #0
	adds r3, r5, #0
	b _080CB250
_080CB23C:
	cmp r3, #0
	beq _080CB24C
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CB24C:
	adds r2, #0x10
	adds r3, #0x10
_080CB250:
	ldr r0, [sp, #0x30]
	cmp r2, r0
	bne _080CB23C
	adds r5, r3, #0
	ldr r0, [sp, #0x2c]
	cmp r0, #1
	bne _080CB272
	cmp r5, #0
	beq _080CB26E
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CB26E:
	adds r5, #0x10
	b _080CB294
_080CB272:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080CB292
_080CB27A:
	cmp r2, #0
	beq _080CB28A
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CB28A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CB27A
_080CB292:
	adds r5, r2, #0
_080CB294:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _080CB2A4
_080CB29E:
	adds r0, #0x10
	cmp r0, r2
	bne _080CB29E
_080CB2A4:
	cmp r1, #0
	beq _080CB2AE
	adds r0, r1, #0
	bl sub_80D0260
_080CB2AE:
	ldr r0, [sp, #0x34]
	add r0, sb
	ldr r7, [sp, #0x34]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080CB2BA:
	ldr r1, _080CB2E4 @ =0x0600F00C
	movs r0, #2
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	movs r0, #0x20
	str r0, [sp, #8]
	mov r0, r8
	movs r2, #0x58
	movs r3, #8
	bl sub_80CAE60
_080CB2D2:
	add sp, #0x38
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080CB2E4: .4byte 0x0600F00C

	thumb_func_start sub_80CB2E8
sub_80CB2E8: @ 0x080CB2E8
	adds r2, r0, #0
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #0x86
	lsls r1, r1, #2
	adds r0, r0, r1
	bx lr
	.align 2, 0

	thumb_func_start sub_80CB2FC
sub_80CB2FC: @ 0x080CB2FC
	movs r1, #0xa0
	lsls r1, r1, #2
	adds r0, r0, r1
	bx lr

	thumb_func_start sub_80CB304
sub_80CB304: @ 0x080CB304
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x50
	str r0, [sp, #0x30]
	str r1, [sp, #0x48]
	adds r1, r2, #0
	adds r2, r3, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	ldr r0, [sp, #0x48]
	lsls r7, r0, #1
	adds r4, r7, r0
	lsls r4, r4, #2
	ldr r3, [sp, #0x30]
	adds r4, r4, r3
	movs r6, #0x86
	lsls r6, r6, #2
	adds r4, r4, r6
	adds r0, r4, #0
	ldr r3, [sp, #0x70]
	bl sub_80CAD18
	ldr r1, [r4, #4]
	ldr r2, [sp, #0x30]
	movs r3, #0x9e
	lsls r3, r3, #2
	adds r0, r2, r3
	ldr r5, [r0]
	ldr r4, [sp, #0x48]
	lsls r2, r4, #7
	ldr r6, _080CB390 @ =0x06000680
	adds r2, r2, r6
	add r0, sp, #0xc
	movs r3, #0x80
	bl sub_8008F0C
	add r0, sp, #0xc
	mov sl, r0
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080CB394
	cmp r1, #0
	beq _080CB36E
	adds r0, r1, #0
	add r1, sp, #0xc
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CB36E:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	str r7, [sp, #0x38]
	ldr r6, [sp, #0x48]
	lsls r6, r6, #5
	str r6, [sp, #0x44]
	ldr r7, [sp, #0x48]
	lsls r7, r7, #2
	str r7, [sp, #0x3c]
	mov r0, sp
	adds r0, #0x2c
	str r0, [sp, #0x40]
	ldr r1, [sp, #0x48]
	adds r1, #3
	str r1, [sp, #0x34]
	b _080CB482
	.align 2, 0
_080CB390: .4byte 0x06000680
_080CB394:
	str r1, [sp, #0x4c]
	movs r0, #1
	str r0, [sp, #0x20]
	ldr r1, [r5]
	ldr r2, [sp, #0x4c]
	subs r0, r2, r1
	asrs r4, r0, #4
	str r4, [sp, #0x1c]
	add r2, sp, #0x20
	add r0, sp, #0x1c
	cmp r4, #1
	bhs _080CB3AE
	adds r0, r2, #0
_080CB3AE:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CB3CE
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080CB3CA
	mov r0, sb
	bl sub_80D3BC0
_080CB3CA:
	ldr r1, [r5]
	b _080CB3D2
_080CB3CE:
	movs r0, #0
	mov sb, r0
_080CB3D2:
	adds r4, r0, #0
	mov r8, r4
	adds r2, r1, #0
	mov r3, r8
	ldr r4, [sp, #0x48]
	lsls r4, r4, #1
	str r4, [sp, #0x38]
	ldr r6, [sp, #0x48]
	lsls r6, r6, #5
	str r6, [sp, #0x44]
	ldr r7, [sp, #0x48]
	lsls r7, r7, #2
	str r7, [sp, #0x3c]
	mov r0, sp
	adds r0, #0x2c
	str r0, [sp, #0x40]
	ldr r1, [sp, #0x48]
	adds r1, #3
	str r1, [sp, #0x34]
	ldr r4, [sp, #0x4c]
	cmp r2, r4
	beq _080CB418
_080CB3FE:
	cmp r3, #0
	beq _080CB40E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CB40E:
	adds r2, #0x10
	adds r3, #0x10
	ldr r6, [sp, #0x4c]
	cmp r2, r6
	bne _080CB3FE
_080CB418:
	adds r4, r3, #0
	ldr r0, [sp, #0x20]
	cmp r0, #1
	bne _080CB434
	cmp r4, #0
	beq _080CB430
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CB430:
	adds r4, #0x10
	b _080CB45C
_080CB434:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _080CB45A
_080CB43C:
	cmp r2, #0
	beq _080CB44C
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CB44C:
	movs r0, #1
	rsbs r0, r0, #0
	add ip, r0
	adds r2, #0x10
	mov r1, ip
	cmp r1, #0
	bne _080CB43C
_080CB45A:
	adds r4, r2, #0
_080CB45C:
	ldr r2, [r5, #4]
	ldr r1, [r5]
	adds r0, r1, #0
	cmp r1, r2
	beq _080CB46C
_080CB466:
	adds r0, #0x10
	cmp r0, r2
	bne _080CB466
_080CB46C:
	cmp r1, #0
	beq _080CB476
	adds r0, r1, #0
	bl sub_80D0260
_080CB476:
	mov r0, sb
	add r0, r8
	mov r2, r8
	str r2, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080CB482:
	ldr r3, [sp, #0x38]
	ldr r4, [sp, #0x48]
	adds r0, r3, r4
	lsls r0, r0, #2
	ldr r6, [sp, #0x30]
	adds r0, r0, r6
	movs r7, #0x86
	lsls r7, r7, #2
	adds r0, r0, r7
	ldr r1, [r0, #8]
	movs r2, #0x9e
	lsls r2, r2, #2
	adds r0, r6, r2
	ldr r5, [r0]
	ldr r3, [sp, #0x44]
	ldr r4, _080CB4D0 @ =0x05000060
	adds r2, r3, r4
	add r0, sp, #0xc
	movs r3, #0x20
	bl sub_8008F0C
	add r6, sp, #0xc
	mov sb, r6
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080CB4D4
	cmp r1, #0
	beq _080CB4C8
	adds r0, r1, #0
	add r1, sp, #0xc
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CB4C8:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080CB59A
	.align 2, 0
_080CB4D0: .4byte 0x05000060
_080CB4D4:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x28]
	ldr r1, [r5]
	mov r4, sl
	subs r0, r4, r1
	asrs r4, r0, #4
	str r4, [sp, #0x24]
	add r2, sp, #0x28
	add r0, sp, #0x24
	cmp r4, #1
	bhs _080CB4EE
	adds r0, r2, #0
_080CB4EE:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CB50E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080CB50A
	mov r0, r8
	bl sub_80D3BC0
_080CB50A:
	ldr r1, [r5]
	b _080CB512
_080CB50E:
	movs r0, #0
	mov r8, r0
_080CB512:
	adds r4, r0, #0
	str r4, [sp, #0x4c]
	adds r2, r1, #0
	adds r3, r4, #0
	cmp r2, sl
	beq _080CB536
_080CB51E:
	cmp r3, #0
	beq _080CB52E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CB52E:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080CB51E
_080CB536:
	adds r4, r3, #0
	ldr r0, [sp, #0x28]
	cmp r0, #1
	bne _080CB552
	cmp r4, #0
	beq _080CB54E
	adds r0, r4, #0
	mov r1, sb
	ldm r1!, {r2, r6, r7}
	stm r0!, {r2, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CB54E:
	adds r4, #0x10
	b _080CB574
_080CB552:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080CB572
_080CB55A:
	cmp r2, #0
	beq _080CB56A
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CB56A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CB55A
_080CB572:
	adds r4, r2, #0
_080CB574:
	ldr r2, [r5, #4]
	ldr r1, [r5]
	adds r0, r1, #0
	cmp r1, r2
	beq _080CB584
_080CB57E:
	adds r0, #0x10
	cmp r0, r2
	bne _080CB57E
_080CB584:
	cmp r1, #0
	beq _080CB58E
	adds r0, r1, #0
	bl sub_80D0260
_080CB58E:
	ldr r0, [sp, #0x4c]
	add r0, r8
	ldr r1, [sp, #0x4c]
	str r1, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080CB59A:
	ldr r0, _080CB62C @ =gUnknown_08117860
	ldr r2, [sp, #0x3c]
	adds r0, r2, r0
	ldr r0, [r0]
	str r0, [sp, #0x2c]
	ldr r3, [sp, #0x40]
	ldrb r1, [r3, #1]
	lsls r1, r1, #6
	add r4, sp, #0x2c
	ldrb r0, [r4]
	lsls r0, r0, #1
	ldr r2, _080CB630 @ =0x0600F000
	adds r0, r0, r2
	adds r1, r1, r0
	ldr r2, [sp, #0x3c]
	adds r2, #0x34
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	movs r0, #2
	str r0, [sp]
	ldr r6, [sp, #0x34]
	lsls r0, r6, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
	movs r5, #0x20
	str r5, [sp, #8]
	ldr r0, [sp, #0x30]
	movs r3, #2
	bl sub_80CAE60
	ldr r7, [sp, #0x40]
	ldrb r1, [r7, #1]
	lsls r1, r1, #6
	ldrb r0, [r4]
	lsls r0, r0, #1
	ldr r2, _080CB634 @ =0x0600F080
	adds r0, r0, r2
	adds r1, r1, r0
	movs r0, #1
	str r0, [sp]
	movs r4, #0
	str r4, [sp, #4]
	str r5, [sp, #8]
	ldr r0, [sp, #0x30]
	movs r2, #0x54
	movs r3, #2
	bl sub_80CAE60
	ldr r3, [sp, #0x70]
	cmp r3, #1
	bls _080CB61C
	ldrb r2, [r7, #1]
	lsls r2, r2, #6
	ldrb r0, [r7]
	lsls r0, r0, #1
	ldr r6, _080CB638 @ =0x0600F082
	adds r0, r0, r6
	adds r2, r2, r0
	str r4, [sp]
	str r5, [sp, #4]
	ldr r0, [sp, #0x30]
	adds r1, r3, #0
	movs r3, #0x20
	bl sub_80CAEEC
_080CB61C:
	add sp, #0x50
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080CB62C: .4byte gUnknown_08117860
_080CB630: .4byte 0x0600F000
_080CB634: .4byte 0x0600F080
_080CB638: .4byte 0x0600F082

	thumb_func_start sub_80CB63C
sub_80CB63C: @ 0x080CB63C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x4c
	str r0, [sp, #0x30]
	adds r5, r1, #0
	adds r4, r2, #0
	str r3, [sp, #0x34]
	lsls r0, r5, #1
	adds r0, r0, r5
	lsls r0, r0, #2
	ldr r1, [sp, #0x30]
	adds r0, r0, r1
	movs r2, #0x86
	lsls r2, r2, #2
	adds r0, r0, r2
	adds r1, r4, #0
	adds r2, r3, #0
	ldr r3, [sp, #0x6c]
	bl sub_80CADA0
	ldr r3, [sp, #0x30]
	movs r6, #0x9e
	lsls r6, r6, #2
	adds r0, r3, r6
	ldr r6, [r0]
	lsls r2, r5, #7
	ldr r7, _080CB6BC @ =0x06000680
	adds r2, r2, r7
	add r0, sp, #0xc
	adds r1, r4, #0
	movs r3, #0x80
	bl sub_8008F0C
	add r0, sp, #0xc
	mov sl, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080CB6C0
	cmp r1, #0
	beq _080CB6A0
	adds r0, r1, #0
	add r1, sp, #0xc
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CB6A0:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	lsls r6, r5, #5
	str r6, [sp, #0x44]
	lsls r7, r5, #2
	str r7, [sp, #0x3c]
	mov r0, sp
	adds r0, #0x2c
	str r0, [sp, #0x40]
	adds r5, #3
	str r5, [sp, #0x38]
	b _080CB79C
	.align 2, 0
_080CB6BC: .4byte 0x06000680
_080CB6C0:
	str r1, [sp, #0x48]
	movs r0, #1
	str r0, [sp, #0x20]
	ldr r1, [r6]
	ldr r2, [sp, #0x48]
	subs r0, r2, r1
	asrs r4, r0, #4
	str r4, [sp, #0x1c]
	add r2, sp, #0x20
	add r0, sp, #0x1c
	cmp r4, #1
	bhs _080CB6DA
	adds r0, r2, #0
_080CB6DA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CB6FA
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080CB6F6
	mov r0, sb
	bl sub_80D3BC0
_080CB6F6:
	ldr r1, [r6]
	b _080CB6FE
_080CB6FA:
	movs r0, #0
	mov sb, r0
_080CB6FE:
	adds r4, r0, #0
	mov r8, r4
	adds r2, r1, #0
	mov r3, r8
	lsls r4, r5, #5
	str r4, [sp, #0x44]
	lsls r7, r5, #2
	str r7, [sp, #0x3c]
	mov r0, sp
	adds r0, #0x2c
	str r0, [sp, #0x40]
	adds r5, #3
	str r5, [sp, #0x38]
	ldr r1, [sp, #0x48]
	cmp r2, r1
	beq _080CB738
_080CB71E:
	cmp r3, #0
	beq _080CB72E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CB72E:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x48]
	cmp r2, r0
	bne _080CB71E
_080CB738:
	adds r4, r3, #0
	ldr r0, [sp, #0x20]
	cmp r0, #1
	bne _080CB754
	cmp r4, #0
	beq _080CB750
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldr r1, [r1]
	str r1, [r0]
_080CB750:
	adds r4, #0x10
	b _080CB776
_080CB754:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080CB774
_080CB75C:
	cmp r2, #0
	beq _080CB76C
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CB76C:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CB75C
_080CB774:
	adds r4, r2, #0
_080CB776:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _080CB786
_080CB780:
	adds r0, #0x10
	cmp r0, r2
	bne _080CB780
_080CB786:
	cmp r1, #0
	beq _080CB790
	adds r0, r1, #0
	bl sub_80D0260
_080CB790:
	mov r0, sb
	add r0, r8
	mov r7, r8
	str r7, [r6]
	str r4, [r6, #4]
	str r0, [r6, #0xc]
_080CB79C:
	ldr r1, [sp, #0x30]
	movs r2, #0x9e
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r5, [r0]
	ldr r3, [sp, #0x44]
	ldr r4, _080CB7DC @ =0x05000060
	adds r2, r3, r4
	add r0, sp, #0xc
	ldr r1, [sp, #0x34]
	movs r3, #0x20
	bl sub_8008F0C
	add r6, sp, #0xc
	mov sb, r6
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080CB7E0
	cmp r1, #0
	beq _080CB7D2
	adds r0, r1, #0
	add r1, sp, #0xc
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CB7D2:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080CB8A6
	.align 2, 0
_080CB7DC: .4byte 0x05000060
_080CB7E0:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x28]
	ldr r1, [r5]
	mov r4, sl
	subs r0, r4, r1
	asrs r4, r0, #4
	str r4, [sp, #0x24]
	add r2, sp, #0x28
	add r0, sp, #0x24
	cmp r4, #1
	bhs _080CB7FA
	adds r0, r2, #0
_080CB7FA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CB81A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080CB816
	mov r0, r8
	bl sub_80D3BC0
_080CB816:
	ldr r1, [r5]
	b _080CB81E
_080CB81A:
	movs r0, #0
	mov r8, r0
_080CB81E:
	adds r4, r0, #0
	str r4, [sp, #0x48]
	adds r2, r1, #0
	adds r3, r4, #0
	cmp r2, sl
	beq _080CB842
_080CB82A:
	cmp r3, #0
	beq _080CB83A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CB83A:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080CB82A
_080CB842:
	adds r4, r3, #0
	ldr r0, [sp, #0x28]
	cmp r0, #1
	bne _080CB85E
	cmp r4, #0
	beq _080CB85A
	adds r0, r4, #0
	mov r1, sb
	ldm r1!, {r2, r6, r7}
	stm r0!, {r2, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CB85A:
	adds r4, #0x10
	b _080CB880
_080CB85E:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080CB87E
_080CB866:
	cmp r2, #0
	beq _080CB876
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CB876:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CB866
_080CB87E:
	adds r4, r2, #0
_080CB880:
	ldr r2, [r5, #4]
	ldr r1, [r5]
	adds r0, r1, #0
	cmp r1, r2
	beq _080CB890
_080CB88A:
	adds r0, #0x10
	cmp r0, r2
	bne _080CB88A
_080CB890:
	cmp r1, #0
	beq _080CB89A
	adds r0, r1, #0
	bl sub_80D0260
_080CB89A:
	ldr r0, [sp, #0x48]
	add r0, r8
	ldr r1, [sp, #0x48]
	str r1, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080CB8A6:
	ldr r0, _080CB938 @ =gUnknown_08117860
	ldr r2, [sp, #0x3c]
	adds r0, r2, r0
	ldr r0, [r0]
	str r0, [sp, #0x2c]
	ldr r3, [sp, #0x40]
	ldrb r1, [r3, #1]
	lsls r1, r1, #6
	add r4, sp, #0x2c
	ldrb r0, [r4]
	lsls r0, r0, #1
	ldr r2, _080CB93C @ =0x0600F000
	adds r0, r0, r2
	adds r1, r1, r0
	ldr r2, [sp, #0x3c]
	adds r2, #0x34
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	movs r0, #2
	str r0, [sp]
	ldr r5, [sp, #0x38]
	lsls r0, r5, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
	movs r5, #0x20
	str r5, [sp, #8]
	ldr r0, [sp, #0x30]
	movs r3, #2
	bl sub_80CAE60
	ldr r6, [sp, #0x40]
	ldrb r1, [r6, #1]
	lsls r1, r1, #6
	ldrb r0, [r4]
	lsls r0, r0, #1
	ldr r7, _080CB940 @ =0x0600F080
	adds r0, r0, r7
	adds r1, r1, r0
	movs r0, #1
	str r0, [sp]
	movs r4, #0
	str r4, [sp, #4]
	str r5, [sp, #8]
	ldr r0, [sp, #0x30]
	movs r2, #0x54
	movs r3, #2
	bl sub_80CAE60
	ldr r0, [sp, #0x6c]
	cmp r0, #1
	bls _080CB928
	ldrb r2, [r6, #1]
	lsls r2, r2, #6
	ldrb r0, [r6]
	lsls r0, r0, #1
	ldr r1, _080CB944 @ =0x0600F082
	adds r0, r0, r1
	adds r2, r2, r0
	str r4, [sp]
	str r5, [sp, #4]
	ldr r0, [sp, #0x30]
	ldr r1, [sp, #0x6c]
	movs r3, #0x20
	bl sub_80CAEEC
_080CB928:
	add sp, #0x4c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080CB938: .4byte gUnknown_08117860
_080CB93C: .4byte 0x0600F000
_080CB940: .4byte 0x0600F080
_080CB944: .4byte 0x0600F082

	thumb_func_start sub_80CB948
sub_80CB948: @ 0x080CB948
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	adds r5, r2, #0
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #2
	adds r0, r0, r6
	movs r1, #0x86
	lsls r1, r1, #2
	adds r0, r0, r1
	adds r1, r5, #0
	bl sub_80CAD10
	lsls r4, r4, #2
	ldr r0, _080CB9D0 @ =gUnknown_08117860
	adds r4, r4, r0
	ldr r0, [r4]
	str r0, [sp, #0xc]
	add r4, sp, #0xc
	ldrb r1, [r4, #1]
	lsls r1, r1, #6
	adds r0, r4, #0
	ldrb r0, [r0]
	lsls r0, r0, #1
	ldr r2, _080CB9D4 @ =0x0600F080
	adds r0, r0, r2
	adds r1, r1, r0
	movs r0, #1
	str r0, [sp]
	movs r0, #0
	mov r8, r0
	str r0, [sp, #4]
	movs r7, #0x20
	str r7, [sp, #8]
	adds r0, r6, #0
	movs r2, #0x54
	movs r3, #2
	bl sub_80CAE60
	cmp r5, #1
	bls _080CB9C2
	ldrb r2, [r4, #1]
	lsls r2, r2, #6
	add r0, sp, #0xc
	ldrb r0, [r0]
	lsls r0, r0, #1
	ldr r1, _080CB9D8 @ =0x0600F082
	adds r0, r0, r1
	adds r2, r2, r0
	mov r0, r8
	str r0, [sp]
	str r7, [sp, #4]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r3, #0x20
	bl sub_80CAEEC
_080CB9C2:
	add sp, #0x10
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080CB9D0: .4byte gUnknown_08117860
_080CB9D4: .4byte 0x0600F080
_080CB9D8: .4byte 0x0600F082

	thumb_func_start sub_80CB9DC
sub_80CB9DC: @ 0x080CB9DC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x10
	adds r4, r0, #0
	adds r5, r1, #0
	movs r1, #0xa0
	lsls r1, r1, #2
	adds r0, r4, r1
	adds r1, r5, #0
	bl sub_80CAD10
	ldr r0, _080CBA54 @ =gUnknown_0811785C
	ldr r0, [r0]
	str r0, [sp, #0xc]
	add r6, sp, #0xc
	ldrb r1, [r6, #1]
	lsls r1, r1, #6
	adds r0, r6, #0
	ldrb r0, [r0]
	lsls r0, r0, #1
	ldr r2, _080CBA58 @ =0x0600F080
	adds r0, r0, r2
	adds r1, r1, r0
	movs r0, #1
	str r0, [sp]
	movs r0, #0
	mov r8, r0
	str r0, [sp, #4]
	movs r7, #0x20
	str r7, [sp, #8]
	adds r0, r4, #0
	movs r2, #0x54
	movs r3, #2
	bl sub_80CAE60
	cmp r5, #1
	bls _080CBA48
	ldrb r2, [r6, #1]
	lsls r2, r2, #6
	add r0, sp, #0xc
	ldrb r0, [r0]
	lsls r0, r0, #1
	ldr r1, _080CBA5C @ =0x0600F082
	adds r0, r0, r1
	adds r2, r2, r0
	mov r0, r8
	str r0, [sp]
	str r7, [sp, #4]
	adds r0, r4, #0
	adds r1, r5, #0
	movs r3, #0x20
	bl sub_80CAEEC
_080CBA48:
	add sp, #0x10
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080CBA54: .4byte gUnknown_0811785C
_080CBA58: .4byte 0x0600F080
_080CBA5C: .4byte 0x0600F082

	thumb_func_start sub_80CBA60
sub_80CBA60: @ 0x080CBA60
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #0x10
	adds r5, r0, #0
	adds r4, r1, #0
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #2
	adds r0, r0, r5
	movs r1, #0x86
	lsls r1, r1, #2
	adds r0, r0, r1
	bl sub_80CADA8
	lsls r4, r4, #2
	ldr r0, _080CBAE4 @ =gUnknown_08117860
	adds r4, r4, r0
	ldr r0, [r4]
	str r0, [sp, #0xc]
	add r2, sp, #0xc
	mov r8, r2
	ldrb r1, [r2, #1]
	lsls r1, r1, #6
	add r0, sp, #0xc
	ldrb r0, [r0]
	lsls r0, r0, #1
	ldr r2, _080CBAE8 @ =0x0600F000
	adds r0, r0, r2
	adds r1, r1, r0
	movs r0, #2
	str r0, [sp]
	movs r6, #0
	str r6, [sp, #4]
	movs r4, #0x20
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r2, #0x54
	movs r3, #2
	bl sub_80CAE60
	mov r0, r8
	ldrb r1, [r0, #1]
	lsls r1, r1, #6
	add r0, sp, #0xc
	ldrb r0, [r0]
	lsls r0, r0, #1
	ldr r2, _080CBAEC @ =0x0600F080
	adds r0, r0, r2
	adds r1, r1, r0
	movs r0, #1
	str r0, [sp]
	str r6, [sp, #4]
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r2, #0x54
	movs r3, #2
	bl sub_80CAE60
	add sp, #0x10
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080CBAE4: .4byte gUnknown_08117860
_080CBAE8: .4byte 0x0600F000
_080CBAEC: .4byte 0x0600F080

	thumb_func_start sub_80CBAF0
sub_80CBAF0: @ 0x080CBAF0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x3c
	mov sl, r0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	movs r4, #0xa0
	lsls r4, r4, #2
	add r4, sl
	adds r0, r4, #0
	bl sub_80CAD18
	ldr r1, [r4, #4]
	movs r0, #0x9e
	lsls r0, r0, #2
	add r0, sl
	ldr r5, [r0]
	add r0, sp, #0xc
	ldr r2, _080CBB4C @ =0x06000600
	movs r3, #0x80
	bl sub_8008F0C
	add r0, sp, #0xc
	mov sb, r0
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080CBB50
	cmp r1, #0
	beq _080CBB3E
	adds r0, r1, #0
	add r1, sp, #0xc
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CBB3E:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	mov r6, sp
	adds r6, #0x2c
	str r6, [sp, #0x30]
	b _080CBC20
	.align 2, 0
_080CBB4C: .4byte 0x06000600
_080CBB50:
	str r1, [sp, #0x34]
	movs r0, #1
	str r0, [sp, #0x20]
	ldr r1, [r5]
	ldr r7, [sp, #0x34]
	subs r0, r7, r1
	asrs r4, r0, #4
	str r4, [sp, #0x1c]
	add r2, sp, #0x20
	add r0, sp, #0x1c
	cmp r4, #1
	bhs _080CBB6A
	adds r0, r2, #0
_080CBB6A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CBB8A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080CBB86
	mov r0, r8
	bl sub_80D3BC0
_080CBB86:
	ldr r1, [r5]
	b _080CBB8E
_080CBB8A:
	movs r0, #0
	mov r8, r0
_080CBB8E:
	adds r4, r0, #0
	str r4, [sp, #0x38]
	adds r2, r1, #0
	adds r3, r4, #0
	mov r0, sp
	adds r0, #0x2c
	str r0, [sp, #0x30]
	ldr r1, [sp, #0x34]
	cmp r2, r1
	beq _080CBBBC
_080CBBA2:
	cmp r3, #0
	beq _080CBBB2
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CBBB2:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x34]
	cmp r2, r0
	bne _080CBBA2
_080CBBBC:
	adds r4, r3, #0
	ldr r0, [sp, #0x20]
	cmp r0, #1
	bne _080CBBD8
	cmp r4, #0
	beq _080CBBD4
	adds r0, r4, #0
	mov r1, sb
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080CBBD4:
	adds r4, #0x10
	b _080CBBFA
_080CBBD8:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080CBBF8
_080CBBE0:
	cmp r2, #0
	beq _080CBBF0
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CBBF0:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CBBE0
_080CBBF8:
	adds r4, r2, #0
_080CBBFA:
	ldr r2, [r5, #4]
	ldr r1, [r5]
	adds r0, r1, #0
	cmp r1, r2
	beq _080CBC0A
_080CBC04:
	adds r0, #0x10
	cmp r0, r2
	bne _080CBC04
_080CBC0A:
	cmp r1, #0
	beq _080CBC14
	adds r0, r1, #0
	bl sub_80D0260
_080CBC14:
	ldr r0, [sp, #0x38]
	add r0, r8
	ldr r7, [sp, #0x38]
	str r7, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080CBC20:
	movs r0, #0xa0
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [r0, #8]
	movs r0, #0x9e
	lsls r0, r0, #2
	add r0, sl
	ldr r5, [r0]
	add r0, sp, #0xc
	ldr r2, _080CBC60 @ =0x05000040
	movs r3, #0x20
	bl sub_8008F0C
	add r0, sp, #0xc
	mov sb, r0
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080CBC64
	cmp r1, #0
	beq _080CBC56
	adds r0, r1, #0
	add r1, sp, #0xc
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CBC56:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080CBD2E
	.align 2, 0
_080CBC60: .4byte 0x05000040
_080CBC64:
	str r1, [sp, #0x34]
	movs r0, #1
	str r0, [sp, #0x28]
	ldr r1, [r5]
	ldr r6, [sp, #0x34]
	subs r0, r6, r1
	asrs r4, r0, #4
	str r4, [sp, #0x24]
	add r2, sp, #0x28
	add r0, sp, #0x24
	cmp r4, #1
	bhs _080CBC7E
	adds r0, r2, #0
_080CBC7E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CBC9E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080CBC9A
	mov r0, r8
	bl sub_80D3BC0
_080CBC9A:
	ldr r1, [r5]
	b _080CBCA2
_080CBC9E:
	movs r0, #0
	mov r8, r0
_080CBCA2:
	adds r4, r0, #0
	str r4, [sp, #0x38]
	adds r2, r1, #0
	adds r3, r4, #0
	ldr r7, [sp, #0x34]
	cmp r2, r7
	beq _080CBCCA
_080CBCB0:
	cmp r3, #0
	beq _080CBCC0
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CBCC0:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x34]
	cmp r2, r0
	bne _080CBCB0
_080CBCCA:
	adds r4, r3, #0
	ldr r0, [sp, #0x28]
	cmp r0, #1
	bne _080CBCE6
	cmp r4, #0
	beq _080CBCE2
	adds r0, r4, #0
	mov r1, sb
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080CBCE2:
	adds r4, #0x10
	b _080CBD08
_080CBCE6:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080CBD06
_080CBCEE:
	cmp r2, #0
	beq _080CBCFE
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CBCFE:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CBCEE
_080CBD06:
	adds r4, r2, #0
_080CBD08:
	ldr r2, [r5, #4]
	ldr r1, [r5]
	adds r0, r1, #0
	cmp r1, r2
	beq _080CBD18
_080CBD12:
	adds r0, #0x10
	cmp r0, r2
	bne _080CBD12
_080CBD18:
	cmp r1, #0
	beq _080CBD22
	adds r0, r1, #0
	bl sub_80D0260
_080CBD22:
	ldr r0, [sp, #0x38]
	add r0, r8
	ldr r7, [sp, #0x38]
	str r7, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080CBD2E:
	ldr r0, _080CBDC4 @ =gUnknown_0811785C
	ldr r0, [r0]
	str r0, [sp, #0x2c]
	ldr r0, [sp, #0x30]
	ldrb r1, [r0, #1]
	lsls r1, r1, #6
	add r4, sp, #0x2c
	ldrb r0, [r4]
	lsls r0, r0, #1
	ldr r2, _080CBDC8 @ =0x0600F000
	adds r0, r0, r2
	adds r1, r1, r0
	movs r0, #2
	str r0, [sp]
	str r0, [sp, #4]
	movs r5, #0x20
	str r5, [sp, #8]
	mov r0, sl
	movs r2, #0x30
	movs r3, #2
	bl sub_80CAE60
	ldr r2, [sp, #0x30]
	ldrb r1, [r2, #1]
	lsls r1, r1, #6
	ldrb r0, [r4]
	lsls r0, r0, #1
	ldr r3, _080CBDCC @ =0x0600F080
	adds r0, r0, r3
	adds r1, r1, r0
	movs r0, #1
	str r0, [sp]
	movs r6, #0
	str r6, [sp, #4]
	str r5, [sp, #8]
	mov r0, sl
	movs r2, #0x54
	movs r3, #2
	bl sub_80CAE60
	movs r4, #0xa0
	lsls r4, r4, #2
	add r4, sl
	adds r0, r4, #0
	bl sub_80CAD14
	cmp r0, #1
	bls _080CBDB2
	adds r0, r4, #0
	bl sub_80CAD14
	adds r1, r0, #0
	ldr r4, [sp, #0x30]
	ldrb r2, [r4, #1]
	lsls r2, r2, #6
	ldrb r0, [r4]
	lsls r0, r0, #1
	ldr r7, _080CBDD0 @ =0x0600F082
	adds r0, r0, r7
	adds r2, r2, r0
	str r6, [sp]
	str r5, [sp, #4]
	mov r0, sl
	movs r3, #0x20
	bl sub_80CAEEC
_080CBDB2:
	add sp, #0x3c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080CBDC4: .4byte gUnknown_0811785C
_080CBDC8: .4byte 0x0600F000
_080CBDCC: .4byte 0x0600F080
_080CBDD0: .4byte 0x0600F082

	thumb_func_start sub_80CBDD4
sub_80CBDD4: @ 0x080CBDD4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x3c
	mov sl, r0
	movs r4, #0xa0
	lsls r4, r4, #2
	add r4, sl
	adds r0, r4, #0
	bl sub_80CADA0
	ldr r1, [r4, #4]
	movs r0, #0x9e
	lsls r0, r0, #2
	add r0, sl
	ldr r5, [r0]
	add r0, sp, #0xc
	ldr r2, _080CBE2C @ =0x06000600
	movs r3, #0x80
	bl sub_8008F0C
	add r0, sp, #0xc
	mov sb, r0
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080CBE30
	cmp r1, #0
	beq _080CBE1E
	adds r0, r1, #0
	add r1, sp, #0xc
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CBE1E:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	mov r6, sp
	adds r6, #0x2c
	str r6, [sp, #0x30]
	b _080CBF00
	.align 2, 0
_080CBE2C: .4byte 0x06000600
_080CBE30:
	str r1, [sp, #0x34]
	movs r0, #1
	str r0, [sp, #0x20]
	ldr r1, [r5]
	ldr r7, [sp, #0x34]
	subs r0, r7, r1
	asrs r4, r0, #4
	str r4, [sp, #0x1c]
	add r2, sp, #0x20
	add r0, sp, #0x1c
	cmp r4, #1
	bhs _080CBE4A
	adds r0, r2, #0
_080CBE4A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CBE6A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080CBE66
	mov r0, r8
	bl sub_80D3BC0
_080CBE66:
	ldr r1, [r5]
	b _080CBE6E
_080CBE6A:
	movs r0, #0
	mov r8, r0
_080CBE6E:
	adds r4, r0, #0
	str r4, [sp, #0x38]
	adds r2, r1, #0
	adds r3, r4, #0
	mov r0, sp
	adds r0, #0x2c
	str r0, [sp, #0x30]
	ldr r1, [sp, #0x34]
	cmp r2, r1
	beq _080CBE9C
_080CBE82:
	cmp r3, #0
	beq _080CBE92
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CBE92:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x34]
	cmp r2, r0
	bne _080CBE82
_080CBE9C:
	adds r4, r3, #0
	ldr r0, [sp, #0x20]
	cmp r0, #1
	bne _080CBEB8
	cmp r4, #0
	beq _080CBEB4
	adds r0, r4, #0
	mov r1, sb
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080CBEB4:
	adds r4, #0x10
	b _080CBEDA
_080CBEB8:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080CBED8
_080CBEC0:
	cmp r2, #0
	beq _080CBED0
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CBED0:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CBEC0
_080CBED8:
	adds r4, r2, #0
_080CBEDA:
	ldr r2, [r5, #4]
	ldr r1, [r5]
	adds r0, r1, #0
	cmp r1, r2
	beq _080CBEEA
_080CBEE4:
	adds r0, #0x10
	cmp r0, r2
	bne _080CBEE4
_080CBEEA:
	cmp r1, #0
	beq _080CBEF4
	adds r0, r1, #0
	bl sub_80D0260
_080CBEF4:
	ldr r0, [sp, #0x38]
	add r0, r8
	ldr r7, [sp, #0x38]
	str r7, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080CBF00:
	movs r0, #0xa0
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [r0, #8]
	movs r0, #0x9e
	lsls r0, r0, #2
	add r0, sl
	ldr r5, [r0]
	add r0, sp, #0xc
	ldr r2, _080CBF40 @ =0x05000040
	movs r3, #0x20
	bl sub_8008F0C
	add r0, sp, #0xc
	mov sb, r0
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080CBF44
	cmp r1, #0
	beq _080CBF36
	adds r0, r1, #0
	add r1, sp, #0xc
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CBF36:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080CC00E
	.align 2, 0
_080CBF40: .4byte 0x05000040
_080CBF44:
	str r1, [sp, #0x34]
	movs r0, #1
	str r0, [sp, #0x28]
	ldr r1, [r5]
	ldr r6, [sp, #0x34]
	subs r0, r6, r1
	asrs r4, r0, #4
	str r4, [sp, #0x24]
	add r2, sp, #0x28
	add r0, sp, #0x24
	cmp r4, #1
	bhs _080CBF5E
	adds r0, r2, #0
_080CBF5E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CBF7E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080CBF7A
	mov r0, r8
	bl sub_80D3BC0
_080CBF7A:
	ldr r1, [r5]
	b _080CBF82
_080CBF7E:
	movs r0, #0
	mov r8, r0
_080CBF82:
	adds r4, r0, #0
	str r4, [sp, #0x38]
	adds r2, r1, #0
	adds r3, r4, #0
	ldr r7, [sp, #0x34]
	cmp r2, r7
	beq _080CBFAA
_080CBF90:
	cmp r3, #0
	beq _080CBFA0
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CBFA0:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x34]
	cmp r2, r0
	bne _080CBF90
_080CBFAA:
	adds r4, r3, #0
	ldr r0, [sp, #0x28]
	cmp r0, #1
	bne _080CBFC6
	cmp r4, #0
	beq _080CBFC2
	adds r0, r4, #0
	mov r1, sb
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080CBFC2:
	adds r4, #0x10
	b _080CBFE8
_080CBFC6:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080CBFE6
_080CBFCE:
	cmp r2, #0
	beq _080CBFDE
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CBFDE:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CBFCE
_080CBFE6:
	adds r4, r2, #0
_080CBFE8:
	ldr r2, [r5, #4]
	ldr r1, [r5]
	adds r0, r1, #0
	cmp r1, r2
	beq _080CBFF8
_080CBFF2:
	adds r0, #0x10
	cmp r0, r2
	bne _080CBFF2
_080CBFF8:
	cmp r1, #0
	beq _080CC002
	adds r0, r1, #0
	bl sub_80D0260
_080CC002:
	ldr r0, [sp, #0x38]
	add r0, r8
	ldr r7, [sp, #0x38]
	str r7, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080CC00E:
	ldr r0, _080CC0A4 @ =gUnknown_0811785C
	ldr r0, [r0]
	str r0, [sp, #0x2c]
	ldr r0, [sp, #0x30]
	ldrb r1, [r0, #1]
	lsls r1, r1, #6
	add r4, sp, #0x2c
	ldrb r0, [r4]
	lsls r0, r0, #1
	ldr r2, _080CC0A8 @ =0x0600F000
	adds r0, r0, r2
	adds r1, r1, r0
	movs r0, #2
	str r0, [sp]
	str r0, [sp, #4]
	movs r5, #0x20
	str r5, [sp, #8]
	mov r0, sl
	movs r2, #0x30
	movs r3, #2
	bl sub_80CAE60
	ldr r2, [sp, #0x30]
	ldrb r1, [r2, #1]
	lsls r1, r1, #6
	ldrb r0, [r4]
	lsls r0, r0, #1
	ldr r3, _080CC0AC @ =0x0600F080
	adds r0, r0, r3
	adds r1, r1, r0
	movs r0, #1
	str r0, [sp]
	movs r6, #0
	str r6, [sp, #4]
	str r5, [sp, #8]
	mov r0, sl
	movs r2, #0x54
	movs r3, #2
	bl sub_80CAE60
	movs r4, #0xa0
	lsls r4, r4, #2
	add r4, sl
	adds r0, r4, #0
	bl sub_80CAD14
	cmp r0, #1
	bls _080CC092
	adds r0, r4, #0
	bl sub_80CAD14
	adds r1, r0, #0
	ldr r4, [sp, #0x30]
	ldrb r2, [r4, #1]
	lsls r2, r2, #6
	ldrb r0, [r4]
	lsls r0, r0, #1
	ldr r7, _080CC0B0 @ =0x0600F082
	adds r0, r0, r7
	adds r2, r2, r0
	str r6, [sp]
	str r5, [sp, #4]
	mov r0, sl
	movs r3, #0x20
	bl sub_80CAEEC
_080CC092:
	add sp, #0x3c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080CC0A4: .4byte gUnknown_0811785C
_080CC0A8: .4byte 0x0600F000
_080CC0AC: .4byte 0x0600F080
_080CC0B0: .4byte 0x0600F082

	thumb_func_start sub_80CC0B4
sub_80CC0B4: @ 0x080CC0B4
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #0x10
	adds r4, r0, #0
	movs r1, #0xa0
	lsls r1, r1, #2
	adds r0, r4, r1
	bl sub_80CADA8
	ldr r0, _080CC128 @ =gUnknown_0811785C
	ldr r0, [r0]
	str r0, [sp, #0xc]
	add r2, sp, #0xc
	mov r8, r2
	ldrb r1, [r2, #1]
	lsls r1, r1, #6
	add r0, sp, #0xc
	ldrb r0, [r0]
	lsls r0, r0, #1
	ldr r2, _080CC12C @ =0x0600F000
	adds r0, r0, r2
	adds r1, r1, r0
	movs r0, #2
	str r0, [sp]
	movs r6, #0
	str r6, [sp, #4]
	movs r5, #0x20
	str r5, [sp, #8]
	adds r0, r4, #0
	movs r2, #0x54
	movs r3, #2
	bl sub_80CAE60
	mov r0, r8
	ldrb r1, [r0, #1]
	lsls r1, r1, #6
	add r0, sp, #0xc
	ldrb r0, [r0]
	lsls r0, r0, #1
	ldr r2, _080CC130 @ =0x0600F080
	adds r0, r0, r2
	adds r1, r1, r0
	movs r0, #1
	str r0, [sp]
	str r6, [sp, #4]
	str r5, [sp, #8]
	adds r0, r4, #0
	movs r2, #0x54
	movs r3, #2
	bl sub_80CAE60
	add sp, #0x10
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080CC128: .4byte gUnknown_0811785C
_080CC12C: .4byte 0x0600F000
_080CC130: .4byte 0x0600F080

	thumb_func_start sub_80CC134
sub_80CC134: @ 0x080CC134
	lsls r2, r2, #2
	ldr r1, _080CC140 @ =gUnknown_0811783C
	adds r2, r2, r1
	ldr r1, [r2]
	str r1, [r0]
	bx lr
	.align 2, 0
_080CC140: .4byte gUnknown_0811783C

	thumb_func_start sub_80CC144
sub_80CC144: @ 0x080CC144
	ldr r1, _080CC14C @ =gUnknown_08117838
	ldr r1, [r1]
	str r1, [r0]
	bx lr
	.align 2, 0
_080CC14C: .4byte gUnknown_08117838

	thumb_func_start sub_80CC150
sub_80CC150: @ 0x080CC150
	push {lr}
	bl sub_80CAF6C
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80CC15C
sub_80CC15C: @ 0x080CC15C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	adds r7, r0, #0
	mov sb, r1
	adds r1, r2, #0
	str r3, [sp, #0xc]
	add r0, sp, #0x38
	ldrb r0, [r0]
	mov sl, r0
	adds r0, r7, #0
	bl sub_80CADB4
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r0, _080CC30C @ =gUnknown_080E85AC
	str r0, [r1]
	mov r0, sp
	bl sub_80CAC70
	movs r1, #0x85
	lsls r1, r1, #2
	adds r1, r1, r7
	mov ip, r1
	ldr r4, [sp, #0xc]
	mov r8, r4
	mov r5, sp
	str r5, [sp, #0x10]
	movs r0, #0
	str r0, [r1]
	cmp r4, #8
	bhi _080CC1CA
	ldr r3, [sp, #0xc]
	movs r6, #0x86
	lsls r6, r6, #2
	adds r2, r7, r6
	cmp r4, #0
	beq _080CC1C4
_080CC1B0:
	cmp r2, #0
	beq _080CC1BC
	adds r1, r2, #0
	ldr r0, [sp, #0x10]
	ldm r0!, {r4, r5, r6}
	stm r1!, {r4, r5, r6}
_080CC1BC:
	subs r3, #1
	adds r2, #0xc
	cmp r3, #0
	bne _080CC1B0
_080CC1C4:
	mov r0, r8
	mov r1, ip
	str r0, [r1]
_080CC1CA:
	movs r4, #0x9e
	lsls r4, r4, #2
	adds r0, r7, r4
	mov r5, sb
	str r5, [r0]
	movs r6, #0x9f
	lsls r6, r6, #2
	adds r0, r7, r6
	movs r1, #0
	mov r8, r1
	mov r4, sl
	strb r4, [r0]
	movs r5, #0xa0
	lsls r5, r5, #2
	adds r0, r7, r5
	bl sub_80CAC70
	adds r6, #0x10
	adds r5, r7, r6
	ldr r0, [sp, #0x34]
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, #8
	bls _080CC1FE
	movs r4, #8
_080CC1FE:
	adds r0, r5, #0
	ldr r1, [sp, #0x34]
	adds r2, r4, #0
	bl sub_80D3994
	adds r0, r5, r4
	mov r1, r8
	strb r1, [r0]
	movs r4, #0xa6
	lsls r4, r4, #2
	adds r0, r7, r4
	ldr r5, [sp, #0xc]
	str r5, [r0]
	movs r6, #0xa7
	lsls r6, r6, #2
	adds r4, r7, r6
	adds r0, r4, #0
	bl sub_8007874
	mov r0, r8
	str r0, [r4, #4]
	movs r1, #0xa9
	lsls r1, r1, #2
	adds r4, r7, r1
	adds r0, r4, #0
	bl sub_8007128
	mov r5, r8
	str r5, [r4, #4]
	adds r6, #0x10
	adds r4, r7, r6
	movs r5, #7
	movs r0, #0
	mov r8, r0
	movs r6, #1
	rsbs r6, r6, #0
_080CC246:
	adds r0, r4, #0
	bl sub_8007874
	mov r1, r8
	str r1, [r4, #4]
	adds r4, #8
	subs r5, #1
	cmp r5, r6
	bne _080CC246
	movs r5, #0xbb
	lsls r5, r5, #2
	adds r4, r7, r5
	movs r5, #7
	movs r6, #0
	mov r8, r6
	subs r6, #1
_080CC266:
	adds r0, r4, #0
	bl sub_8007128
	mov r0, r8
	str r0, [r4, #4]
	adds r4, #8
	subs r5, #1
	cmp r5, r6
	bne _080CC266
	movs r1, #0
	mov r8, r1
	movs r4, #0xac
	lsls r4, r4, #2
	adds r6, r7, r4
_080CC282:
	mov r0, r8
	lsls r5, r0, #3
	adds r4, r5, r7
	movs r1, #0xab
	lsls r1, r1, #2
	adds r4, r4, r1
	ldr r1, [r6]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007B54
	str r0, [r6]
	adds r5, r5, r7
	movs r4, #0xbb
	lsls r4, r4, #2
	adds r5, r5, r4
	ldr r1, [r6, #0x40]
	adds r0, r5, #0
	bl sub_80073E0
	adds r0, r5, #0
	bl sub_800736C
	str r0, [r6, #0x40]
	adds r6, #8
	movs r5, #1
	add r8, r5
	mov r0, r8
	cmp r0, #7
	bls _080CC282
	mov r1, sl
	cmp r1, #0
	beq _080CC2F8
	movs r5, #0xa7
	lsls r5, r5, #2
	adds r4, r7, r5
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007B54
	str r0, [r4, #4]
	movs r6, #0xa9
	lsls r6, r6, #2
	adds r4, r7, r6
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	bl sub_800736C
	str r0, [r4, #4]
_080CC2F8:
	adds r0, r7, #0
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080CC30C: .4byte gUnknown_080E85AC

	thumb_func_start sub_80CC310
sub_80CC310: @ 0x080CC310
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x38
	mov r8, r0
	ldr r6, _080CC474 @ =0x0600F01E
	ldr r5, _080CC478 @ =0x0600F822
	movs r4, #0x13
_080CC324:
	ldr r0, _080CC47C @ =0x00030003
	adds r1, r5, #0
	movs r2, #0x1c
	bl sub_8008EB8
	ldr r0, _080CC480 @ =0x03FF03FF
	adds r1, r6, #0
	movs r2, #0x20
	bl sub_8008EB8
	adds r6, #0x40
	adds r5, #0x40
	subs r4, #1
	cmp r4, #0
	bge _080CC324
	ldr r0, _080CC484 @ =gUnknown_0811785C
	ldr r1, [r0]
	adds r0, r1, #0
	adds r0, #0xf
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _080CC488 @ =0xFFFFFF00
	ands r1, r2
	orrs r1, r0
	str r1, [sp, #0x1c]
	movs r0, #0x9f
	lsls r0, r0, #2
	add r0, r8
	ldrb r0, [r0]
	cmp r0, #0
	beq _080CC388
	add r0, sp, #0x1c
	ldrb r1, [r0, #1]
	lsls r1, r1, #6
	ldrb r0, [r0]
	lsls r0, r0, #1
	ldr r2, _080CC48C @ =0x0600F800
	adds r0, r0, r2
	adds r1, r1, r0
	movs r0, #2
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	movs r0, #0x20
	str r0, [sp, #8]
	mov r0, r8
	movs r2, #0x1c
	movs r3, #2
	bl sub_80CAE60
_080CC388:
	movs r4, #0
	movs r0, #0x85
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	cmp r4, r0
	bhs _080CC3E2
	add r5, sp, #0x1c
_080CC398:
	lsls r0, r4, #2
	ldr r1, _080CC490 @ =gUnknown_08117860
	adds r0, r0, r1
	ldr r2, [r0]
	adds r1, r2, #0
	adds r1, #0xf
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r0, _080CC488 @ =0xFFFFFF00
	ands r2, r0
	orrs r2, r1
	str r2, [sp, #0x1c]
	ldrb r1, [r5, #1]
	lsls r1, r1, #6
	ldrb r0, [r5]
	lsls r0, r0, #1
	ldr r2, _080CC48C @ =0x0600F800
	adds r0, r0, r2
	adds r1, r1, r0
	movs r0, #2
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	movs r0, #0x20
	str r0, [sp, #8]
	mov r0, r8
	movs r2, #0x1c
	movs r3, #2
	bl sub_80CAE60
	adds r4, #1
	movs r0, #0x85
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	cmp r4, r0
	blo _080CC398
_080CC3E2:
	movs r7, #0xa3
	lsls r7, r7, #2
	add r7, r8
	movs r1, #0
	ldrb r0, [r7]
	cmp r0, #0
	bne _080CC3F2
	movs r1, #1
_080CC3F2:
	mov sb, r1
	cmp r1, #0
	beq _080CC3FA
	b _080CC576
_080CC3FA:
	add r0, sp, #0x20
	movs r5, #8
	movs r6, #2
	strh r5, [r0]
	strh r6, [r0, #2]
	ldr r0, [sp, #0x20]
	mov r4, r8
	adds r4, #0x10
	adds r1, r4, #0
	movs r2, #0
	bl sub_804E7A0
	adds r0, r7, #0
	bl sub_80D3B78
	lsls r0, r0, #3
	movs r2, #0x40
	subs r2, r2, r0
	add r0, sp, #0x24
	strh r5, [r0]
	strh r6, [r0, #2]
	ldr r0, [sp, #0x24]
	str r7, [sp]
	mov r3, sb
	str r3, [sp, #4]
	movs r5, #1
	str r5, [sp, #8]
	adds r1, r4, #0
	movs r3, #0
	bl sub_804E958
	movs r3, #0x80
	lsls r3, r3, #2
	movs r0, #0x9e
	lsls r0, r0, #2
	add r0, r8
	ldr r6, [r0]
	add r0, sp, #0xc
	adds r1, r4, #0
	ldr r2, _080CC494 @ =0x06000D00
	bl sub_8008F0C
	add r7, sp, #0xc
	mov sl, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080CC498
	cmp r1, #0
	beq _080CC46A
	adds r0, r1, #0
	add r1, sp, #0xc
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CC46A:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080CC55E
	.align 2, 0
_080CC474: .4byte 0x0600F01E
_080CC478: .4byte 0x0600F822
_080CC47C: .4byte 0x00030003
_080CC480: .4byte 0x03FF03FF
_080CC484: .4byte gUnknown_0811785C
_080CC488: .4byte 0xFFFFFF00
_080CC48C: .4byte 0x0600F800
_080CC490: .4byte gUnknown_08117860
_080CC494: .4byte 0x06000D00
_080CC498:
	str r1, [sp, #0x30]
	movs r5, #1
	str r5, [sp, #0x2c]
	ldr r1, [r6]
	ldr r7, [sp, #0x30]
	subs r0, r7, r1
	asrs r4, r0, #4
	str r4, [sp, #0x28]
	add r2, sp, #0x2c
	add r0, sp, #0x28
	cmp r4, #1
	bhs _080CC4B2
	adds r0, r2, #0
_080CC4B2:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CC4D2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080CC4CE
	mov r0, sb
	bl sub_80D3BC0
_080CC4CE:
	ldr r1, [r6]
	b _080CC4D6
_080CC4D2:
	movs r0, #0
	mov sb, r0
_080CC4D6:
	adds r5, r0, #0
	str r5, [sp, #0x34]
	adds r2, r1, #0
	adds r3, r5, #0
	b _080CC4F4
_080CC4E0:
	cmp r3, #0
	beq _080CC4F0
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CC4F0:
	adds r2, #0x10
	adds r3, #0x10
_080CC4F4:
	ldr r0, [sp, #0x30]
	cmp r2, r0
	bne _080CC4E0
	adds r5, r3, #0
	ldr r0, [sp, #0x2c]
	cmp r0, #1
	bne _080CC516
	cmp r5, #0
	beq _080CC512
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CC512:
	adds r5, #0x10
	b _080CC538
_080CC516:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080CC536
_080CC51E:
	cmp r2, #0
	beq _080CC52E
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CC52E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CC51E
_080CC536:
	adds r5, r2, #0
_080CC538:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _080CC548
_080CC542:
	adds r0, #0x10
	cmp r0, r2
	bne _080CC542
_080CC548:
	cmp r1, #0
	beq _080CC552
	adds r0, r1, #0
	bl sub_80D0260
_080CC552:
	ldr r0, [sp, #0x34]
	add r0, sb
	ldr r7, [sp, #0x34]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080CC55E:
	ldr r1, _080CC588 @ =0x0600F02A
	movs r0, #2
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	movs r0, #0x20
	str r0, [sp, #8]
	mov r0, r8
	movs r2, #0x68
	movs r3, #8
	bl sub_80CAE60
_080CC576:
	add sp, #0x38
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080CC588: .4byte 0x0600F02A

	thumb_func_start sub_80CC58C
sub_80CC58C: @ 0x080CC58C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x30
	mov sl, r0
	str r1, [sp, #0x20]
	bl sub_80CAF6C
	movs r0, #0
	str r0, [sp, #0x24]
	movs r0, #0x85
	lsls r0, r0, #2
	add r0, sl
	ldr r0, [r0]
	ldr r1, [sp, #0x24]
	cmp r1, r0
	bhs _080CC670
	movs r2, #0x85
	lsls r2, r2, #2
	add r2, sl
	str r2, [sp, #0x28]
	movs r0, #0xac
	lsls r0, r0, #2
	add r0, sl
	mov sb, r0
	movs r7, #0x87
	lsls r7, r7, #2
	add r7, sl
_080CC5C8:
	movs r1, #0
	ldr r0, [r7]
	cmp r0, #0
	beq _080CC5D6
	ldr r0, [r7, #4]
	cmp r0, #0
	bne _080CC5D8
_080CC5D6:
	movs r1, #1
_080CC5D8:
	str r1, [sp, #0x2c]
	cmp r1, #0
	bne _080CC65A
	ldr r1, [sp, #0x24]
	lsls r0, r1, #2
	ldr r1, _080CC700 @ =gUnknown_08117860
	adds r0, r0, r1
	ldr r5, [r0]
	adds r6, r5, #0
	adds r6, #0xf
	lsls r6, r6, #0x18
	ldr r2, _080CC704 @ =0xFFFFFF00
	ands r5, r2
	lsrs r6, r6, #0x15
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x15
	ldr r0, [sp, #0x24]
	lsls r4, r0, #3
	mov r1, sl
	adds r0, r4, r1
	movs r2, #0xab
	lsls r2, r2, #2
	adds r0, r0, r2
	mov r2, sb
	ldr r1, [r2]
	bl sub_8007D4C
	mov r8, r0
	add r4, sl
	movs r0, #0xbb
	lsls r0, r0, #2
	adds r4, r4, r0
	mov r2, sb
	ldr r1, [r2, #0x40]
	adds r0, r4, #0
	bl sub_80074C0
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r0, [sp, #0x2c]
	str r0, [sp, #0xc]
	add r4, sp, #0x10
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	mov r3, r8
	bl sub_804EA94
	ldr r1, [sp, #0x20]
	ldrb r2, [r1]
	cmp r2, #0x7f
	bhi _080CC65A
	lsls r1, r2, #3
	adds r1, #4
	ldr r0, [sp, #0x20]
	adds r1, r0, r1
	ldr r0, [sp, #0x10]
	str r0, [r1]
	ldrh r0, [r4, #4]
	strh r0, [r1, #4]
	adds r0, r2, #1
	ldr r1, [sp, #0x20]
	strb r0, [r1]
_080CC65A:
	movs r2, #8
	add sb, r2
	adds r7, #0xc
	ldr r0, [sp, #0x24]
	adds r0, #1
	str r0, [sp, #0x24]
	ldr r1, [sp, #0x28]
	ldr r0, [r1]
	ldr r2, [sp, #0x24]
	cmp r2, r0
	blo _080CC5C8
_080CC670:
	movs r1, #0xa0
	lsls r1, r1, #2
	add r1, sl
	movs r2, #0
	ldr r0, [r1, #4]
	cmp r0, #0
	beq _080CC684
	ldr r0, [r1, #8]
	cmp r0, #0
	bne _080CC686
_080CC684:
	movs r2, #1
_080CC686:
	adds r7, r2, #0
	cmp r7, #0
	bne _080CC6EE
	ldr r0, _080CC708 @ =gUnknown_0811785C
	ldr r4, [r0]
	adds r5, r4, #0
	adds r5, #0xf
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x15
	lsrs r4, r4, #8
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x15
	movs r0, #0xa7
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r6, r0, #0
	movs r0, #0xa9
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [r0, #4]
	bl sub_80074C0
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r7, [sp, #0xc]
	add r7, sp, #0x18
	adds r0, r7, #0
	adds r1, r5, #0
	adds r2, r4, #0
	adds r3, r6, #0
	bl sub_804EA94
	ldr r0, [sp, #0x20]
	ldrb r2, [r0]
	cmp r2, #0x7f
	bhi _080CC6EE
	lsls r0, r2, #3
	adds r0, #4
	ldr r1, [sp, #0x20]
	adds r0, r1, r0
	ldr r1, [sp, #0x18]
	str r1, [r0]
	ldrh r1, [r7, #4]
	strh r1, [r0, #4]
	adds r0, r2, #1
	ldr r2, [sp, #0x20]
	strb r0, [r2]
_080CC6EE:
	add sp, #0x30
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080CC700: .4byte gUnknown_08117860
_080CC704: .4byte 0xFFFFFF00
_080CC708: .4byte gUnknown_0811785C

	thumb_func_start sub_80CC70C
sub_80CC70C: @ 0x080CC70C
	adds r2, r0, #0
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #0x86
	lsls r1, r1, #2
	adds r0, r0, r1
	bx lr
	.align 2, 0

	thumb_func_start sub_80CC720
sub_80CC720: @ 0x080CC720
	movs r1, #0xa0
	lsls r1, r1, #2
	adds r0, r0, r1
	bx lr

	thumb_func_start sub_80CC728
sub_80CC728: @ 0x080CC728
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x54
	mov sl, r0
	adds r5, r1, #0
	adds r6, r2, #0
	adds r4, r3, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	add r0, sp, #0xc
	adds r1, r6, #0
	adds r2, r4, #0
	ldr r3, [sp, #0x74]
	bl sub_80CAC7C
	lsls r0, r5, #1
	adds r0, r0, r5
	lsls r0, r0, #2
	add r0, sl
	movs r1, #0x86
	lsls r1, r1, #2
	adds r0, r0, r1
	adds r1, r6, #0
	adds r2, r4, #0
	ldr r3, [sp, #0x74]
	bl sub_80CAD18
	lsls r4, r5, #3
	mov r2, sl
	adds r0, r4, r2
	movs r3, #0xab
	lsls r3, r3, #2
	adds r0, r0, r3
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r6, r0, #0
	add r4, sl
	movs r7, #0xbb
	lsls r7, r7, #2
	adds r4, r4, r7
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80074C0
	str r0, [sp, #0x3c]
	lsls r5, r5, #2
	ldr r0, _080CC7EC @ =gUnknown_08117860
	adds r5, r5, r0
	ldr r1, [r5]
	adds r0, r1, #0
	adds r0, #0xf
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _080CC7F0 @ =0xFFFFFF00
	ands r1, r2
	orrs r1, r0
	str r1, [sp, #0x38]
	ldr r1, [sp, #0x10]
	movs r0, #0x9e
	lsls r0, r0, #2
	add r0, sl
	ldr r7, [r0]
	lsls r6, r6, #5
	ldr r0, _080CC7F4 @ =0x06010000
	adds r6, r6, r0
	add r0, sp, #0x18
	adds r2, r6, #0
	movs r3, #0x80
	bl sub_8008F0C
	add r1, sp, #0x18
	mov r8, r1
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080CC7F8
	cmp r1, #0
	beq _080CC7D8
	adds r0, r1, #0
	add r1, sp, #0x18
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CC7D8:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	ldr r5, [sp, #0x3c]
	lsls r5, r5, #5
	str r5, [sp, #0x44]
	mov r6, sp
	adds r6, #0x38
	str r6, [sp, #0x40]
	b _080CC8CE
	.align 2, 0
_080CC7EC: .4byte gUnknown_08117860
_080CC7F0: .4byte 0xFFFFFF00
_080CC7F4: .4byte 0x06010000
_080CC7F8:
	str r1, [sp, #0x48]
	movs r0, #1
	str r0, [sp, #0x2c]
	ldr r1, [r7]
	ldr r2, [sp, #0x48]
	subs r0, r2, r1
	asrs r4, r0, #4
	str r4, [sp, #0x28]
	add r2, sp, #0x2c
	add r0, sp, #0x28
	cmp r4, #1
	bhs _080CC812
	adds r0, r2, #0
_080CC812:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CC832
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080CC82E
	mov r0, sb
	bl sub_80D3BC0
_080CC82E:
	ldr r1, [r7]
	b _080CC836
_080CC832:
	movs r0, #0
	mov sb, r0
_080CC836:
	adds r5, r0, #0
	str r5, [sp, #0x4c]
	adds r2, r1, #0
	adds r3, r5, #0
	ldr r4, [sp, #0x3c]
	lsls r4, r4, #5
	str r4, [sp, #0x44]
	mov r5, sp
	adds r5, #0x38
	str r5, [sp, #0x40]
	ldr r6, [sp, #0x48]
	cmp r2, r6
	beq _080CC86A
_080CC850:
	cmp r3, #0
	beq _080CC860
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080CC860:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x48]
	cmp r2, r0
	bne _080CC850
_080CC86A:
	adds r5, r3, #0
	ldr r0, [sp, #0x2c]
	cmp r0, #1
	bne _080CC886
	cmp r5, #0
	beq _080CC882
	adds r0, r5, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CC882:
	adds r5, #0x10
	b _080CC8A8
_080CC886:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080CC8A6
_080CC88E:
	cmp r2, #0
	beq _080CC89E
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080CC89E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CC88E
_080CC8A6:
	adds r5, r2, #0
_080CC8A8:
	ldr r2, [r7, #4]
	ldr r1, [r7]
	adds r0, r1, #0
	cmp r1, r2
	beq _080CC8B8
_080CC8B2:
	adds r0, #0x10
	cmp r0, r2
	bne _080CC8B2
_080CC8B8:
	cmp r1, #0
	beq _080CC8C2
	adds r0, r1, #0
	bl sub_80D0260
_080CC8C2:
	ldr r0, [sp, #0x4c]
	add r0, sb
	ldr r6, [sp, #0x4c]
	str r6, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_080CC8CE:
	ldr r1, [sp, #0x14]
	movs r0, #0x9e
	lsls r0, r0, #2
	add r0, sl
	ldr r6, [r0]
	ldr r7, [sp, #0x44]
	ldr r0, _080CC90C @ =0x05000200
	adds r2, r7, r0
	add r0, sp, #0x18
	movs r3, #0x20
	bl sub_8008F0C
	add r1, sp, #0x18
	mov r8, r1
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080CC910
	cmp r1, #0
	beq _080CC902
	adds r0, r1, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CC902:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080CC9DA
	.align 2, 0
_080CC90C: .4byte 0x05000200
_080CC910:
	str r1, [sp, #0x50]
	movs r0, #1
	str r0, [sp, #0x34]
	ldr r1, [r6]
	ldr r5, [sp, #0x50]
	subs r0, r5, r1
	asrs r4, r0, #4
	str r4, [sp, #0x30]
	add r2, sp, #0x34
	add r0, sp, #0x30
	cmp r4, #1
	bhs _080CC92A
	adds r0, r2, #0
_080CC92A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CC94A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080CC946
	mov r0, sb
	bl sub_80D3BC0
_080CC946:
	ldr r1, [r6]
	b _080CC94E
_080CC94A:
	movs r0, #0
	mov sb, r0
_080CC94E:
	adds r5, r0, #0
	str r5, [sp, #0x4c]
	adds r2, r1, #0
	adds r3, r5, #0
	ldr r7, [sp, #0x50]
	cmp r2, r7
	beq _080CC976
_080CC95C:
	cmp r3, #0
	beq _080CC96C
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CC96C:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x50]
	cmp r2, r0
	bne _080CC95C
_080CC976:
	adds r5, r3, #0
	ldr r0, [sp, #0x34]
	cmp r0, #1
	bne _080CC992
	cmp r5, #0
	beq _080CC98E
	adds r0, r5, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CC98E:
	adds r5, #0x10
	b _080CC9B4
_080CC992:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080CC9B2
_080CC99A:
	cmp r2, #0
	beq _080CC9AA
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CC9AA:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CC99A
_080CC9B2:
	adds r5, r2, #0
_080CC9B4:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _080CC9C4
_080CC9BE:
	adds r0, #0x10
	cmp r0, r2
	bne _080CC9BE
_080CC9C4:
	cmp r1, #0
	beq _080CC9CE
	adds r0, r1, #0
	bl sub_80D0260
_080CC9CE:
	ldr r0, [sp, #0x4c]
	add r0, sb
	ldr r7, [sp, #0x4c]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080CC9DA:
	ldr r0, [sp, #0x40]
	ldrb r1, [r0, #1]
	lsls r1, r1, #6
	add r0, sp, #0x38
	ldrb r0, [r0]
	lsls r0, r0, #1
	ldr r2, _080CCA38 @ =0x0600F080
	adds r0, r0, r2
	adds r1, r1, r0
	movs r0, #1
	str r0, [sp]
	movs r5, #0
	str r5, [sp, #4]
	movs r4, #0x20
	str r4, [sp, #8]
	mov r0, sl
	movs r2, #0x54
	movs r3, #2
	bl sub_80CAE60
	ldr r3, [sp, #0x74]
	cmp r3, #1
	bls _080CCA26
	ldr r6, [sp, #0x40]
	ldrb r2, [r6, #1]
	lsls r2, r2, #6
	ldrb r0, [r6]
	lsls r0, r0, #1
	ldr r7, _080CCA3C @ =0x0600F082
	adds r0, r0, r7
	adds r2, r2, r0
	str r5, [sp]
	str r4, [sp, #4]
	mov r0, sl
	adds r1, r3, #0
	movs r3, #0x20
	bl sub_80CAEEC
_080CCA26:
	add sp, #0x54
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080CCA38: .4byte 0x0600F080
_080CCA3C: .4byte 0x0600F082

	thumb_func_start sub_80CCA40
sub_80CCA40: @ 0x080CCA40
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x4c
	mov sl, r0
	adds r5, r1, #0
	mov r8, r2
	str r3, [sp, #0x30]
	lsls r0, r5, #1
	adds r0, r0, r5
	lsls r0, r0, #2
	add r0, sl
	movs r1, #0x86
	lsls r1, r1, #2
	adds r0, r0, r1
	mov r1, r8
	adds r2, r3, #0
	ldr r3, [sp, #0x6c]
	bl sub_80CADA0
	lsls r4, r5, #3
	mov r2, sl
	adds r0, r4, r2
	movs r3, #0xab
	lsls r3, r3, #2
	adds r0, r0, r3
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r6, r0, #0
	add r4, sl
	movs r7, #0xbb
	lsls r7, r7, #2
	adds r4, r4, r7
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80074C0
	str r0, [sp, #0x34]
	lsls r5, r5, #2
	ldr r0, _080CCAF4 @ =gUnknown_08117860
	adds r5, r5, r0
	ldr r1, [r5]
	adds r0, r1, #0
	adds r0, #0xf
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _080CCAF8 @ =0xFFFFFF00
	ands r1, r2
	orrs r1, r0
	str r1, [sp, #0x2c]
	movs r0, #0x9e
	lsls r0, r0, #2
	add r0, sl
	ldr r7, [r0]
	lsls r6, r6, #5
	ldr r0, _080CCAFC @ =0x06010000
	adds r6, r6, r0
	add r0, sp, #0xc
	mov r1, r8
	adds r2, r6, #0
	movs r3, #0x80
	bl sub_8008F0C
	add r1, sp, #0xc
	mov sb, r1
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080CCB00
	cmp r1, #0
	beq _080CCAE0
	adds r0, r1, #0
	add r1, sp, #0xc
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CCAE0:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	ldr r5, [sp, #0x34]
	lsls r5, r5, #5
	str r5, [sp, #0x3c]
	mov r6, sp
	adds r6, #0x2c
	str r6, [sp, #0x38]
	b _080CCBD6
	.align 2, 0
_080CCAF4: .4byte gUnknown_08117860
_080CCAF8: .4byte 0xFFFFFF00
_080CCAFC: .4byte 0x06010000
_080CCB00:
	str r1, [sp, #0x40]
	movs r0, #1
	str r0, [sp, #0x20]
	ldr r1, [r7]
	ldr r2, [sp, #0x40]
	subs r0, r2, r1
	asrs r4, r0, #4
	str r4, [sp, #0x1c]
	add r2, sp, #0x20
	add r0, sp, #0x1c
	cmp r4, #1
	bhs _080CCB1A
	adds r0, r2, #0
_080CCB1A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CCB3A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080CCB36
	mov r0, r8
	bl sub_80D3BC0
_080CCB36:
	ldr r1, [r7]
	b _080CCB3E
_080CCB3A:
	movs r0, #0
	mov r8, r0
_080CCB3E:
	adds r5, r0, #0
	str r5, [sp, #0x44]
	adds r2, r1, #0
	adds r3, r5, #0
	ldr r4, [sp, #0x34]
	lsls r4, r4, #5
	str r4, [sp, #0x3c]
	mov r5, sp
	adds r5, #0x2c
	str r5, [sp, #0x38]
	ldr r6, [sp, #0x40]
	cmp r2, r6
	beq _080CCB72
_080CCB58:
	cmp r3, #0
	beq _080CCB68
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080CCB68:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x40]
	cmp r2, r0
	bne _080CCB58
_080CCB72:
	adds r5, r3, #0
	ldr r0, [sp, #0x20]
	cmp r0, #1
	bne _080CCB8E
	cmp r5, #0
	beq _080CCB8A
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CCB8A:
	adds r5, #0x10
	b _080CCBB0
_080CCB8E:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080CCBAE
_080CCB96:
	cmp r2, #0
	beq _080CCBA6
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080CCBA6:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CCB96
_080CCBAE:
	adds r5, r2, #0
_080CCBB0:
	ldr r2, [r7, #4]
	ldr r1, [r7]
	adds r0, r1, #0
	cmp r1, r2
	beq _080CCBC0
_080CCBBA:
	adds r0, #0x10
	cmp r0, r2
	bne _080CCBBA
_080CCBC0:
	cmp r1, #0
	beq _080CCBCA
	adds r0, r1, #0
	bl sub_80D0260
_080CCBCA:
	ldr r0, [sp, #0x44]
	add r0, r8
	ldr r6, [sp, #0x44]
	str r6, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_080CCBD6:
	movs r0, #0x9e
	lsls r0, r0, #2
	add r0, sl
	ldr r6, [r0]
	ldr r7, [sp, #0x3c]
	ldr r0, _080CCC14 @ =0x05000200
	adds r2, r7, r0
	add r0, sp, #0xc
	ldr r1, [sp, #0x30]
	movs r3, #0x20
	bl sub_8008F0C
	add r1, sp, #0xc
	mov sb, r1
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080CCC18
	cmp r1, #0
	beq _080CCC0A
	adds r0, r1, #0
	add r1, sp, #0xc
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CCC0A:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080CCCE2
	.align 2, 0
_080CCC14: .4byte 0x05000200
_080CCC18:
	str r1, [sp, #0x48]
	movs r0, #1
	str r0, [sp, #0x28]
	ldr r1, [r6]
	ldr r5, [sp, #0x48]
	subs r0, r5, r1
	asrs r4, r0, #4
	str r4, [sp, #0x24]
	add r2, sp, #0x28
	add r0, sp, #0x24
	cmp r4, #1
	bhs _080CCC32
	adds r0, r2, #0
_080CCC32:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CCC52
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080CCC4E
	mov r0, r8
	bl sub_80D3BC0
_080CCC4E:
	ldr r1, [r6]
	b _080CCC56
_080CCC52:
	movs r0, #0
	mov r8, r0
_080CCC56:
	adds r5, r0, #0
	str r5, [sp, #0x44]
	adds r2, r1, #0
	adds r3, r5, #0
	ldr r7, [sp, #0x48]
	cmp r2, r7
	beq _080CCC7E
_080CCC64:
	cmp r3, #0
	beq _080CCC74
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CCC74:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x48]
	cmp r2, r0
	bne _080CCC64
_080CCC7E:
	adds r5, r3, #0
	ldr r0, [sp, #0x28]
	cmp r0, #1
	bne _080CCC9A
	cmp r5, #0
	beq _080CCC96
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CCC96:
	adds r5, #0x10
	b _080CCCBC
_080CCC9A:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080CCCBA
_080CCCA2:
	cmp r2, #0
	beq _080CCCB2
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CCCB2:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CCCA2
_080CCCBA:
	adds r5, r2, #0
_080CCCBC:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _080CCCCC
_080CCCC6:
	adds r0, #0x10
	cmp r0, r2
	bne _080CCCC6
_080CCCCC:
	cmp r1, #0
	beq _080CCCD6
	adds r0, r1, #0
	bl sub_80D0260
_080CCCD6:
	ldr r0, [sp, #0x44]
	add r0, r8
	ldr r7, [sp, #0x44]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080CCCE2:
	ldr r0, [sp, #0x38]
	ldrb r1, [r0, #1]
	lsls r1, r1, #6
	add r0, sp, #0x2c
	ldrb r0, [r0]
	lsls r0, r0, #1
	ldr r2, _080CCD40 @ =0x0600F080
	adds r0, r0, r2
	adds r1, r1, r0
	movs r0, #1
	str r0, [sp]
	movs r5, #0
	str r5, [sp, #4]
	movs r4, #0x20
	str r4, [sp, #8]
	mov r0, sl
	movs r2, #0x54
	movs r3, #2
	bl sub_80CAE60
	ldr r3, [sp, #0x6c]
	cmp r3, #1
	bls _080CCD2E
	ldr r6, [sp, #0x38]
	ldrb r2, [r6, #1]
	lsls r2, r2, #6
	ldrb r0, [r6]
	lsls r0, r0, #1
	ldr r7, _080CCD44 @ =0x0600F082
	adds r0, r0, r7
	adds r2, r2, r0
	str r5, [sp]
	str r4, [sp, #4]
	mov r0, sl
	adds r1, r3, #0
	movs r3, #0x20
	bl sub_80CAEEC
_080CCD2E:
	add sp, #0x4c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080CCD40: .4byte 0x0600F080
_080CCD44: .4byte 0x0600F082

	thumb_func_start sub_80CCD48
sub_80CCD48: @ 0x080CCD48
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	adds r5, r2, #0
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #2
	adds r0, r0, r6
	movs r1, #0x86
	lsls r1, r1, #2
	adds r0, r0, r1
	adds r1, r5, #0
	bl sub_80CAD10
	lsls r4, r4, #2
	ldr r0, _080CCDDC @ =gUnknown_08117860
	adds r4, r4, r0
	ldr r1, [r4]
	adds r0, r1, #0
	adds r0, #0xf
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _080CCDE0 @ =0xFFFFFF00
	ands r1, r2
	orrs r1, r0
	str r1, [sp, #0xc]
	add r4, sp, #0xc
	ldrb r1, [r4, #1]
	lsls r1, r1, #6
	adds r0, r4, #0
	ldrb r0, [r0]
	lsls r0, r0, #1
	ldr r2, _080CCDE4 @ =0x0600F080
	adds r0, r0, r2
	adds r1, r1, r0
	movs r0, #1
	str r0, [sp]
	movs r0, #0
	mov r8, r0
	str r0, [sp, #4]
	movs r7, #0x20
	str r7, [sp, #8]
	adds r0, r6, #0
	movs r2, #0x54
	movs r3, #2
	bl sub_80CAE60
	cmp r5, #1
	bls _080CCDD0
	ldrb r2, [r4, #1]
	lsls r2, r2, #6
	add r0, sp, #0xc
	ldrb r0, [r0]
	lsls r0, r0, #1
	ldr r1, _080CCDE8 @ =0x0600F082
	adds r0, r0, r1
	adds r2, r2, r0
	mov r0, r8
	str r0, [sp]
	str r7, [sp, #4]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r3, #0x20
	bl sub_80CAEEC
_080CCDD0:
	add sp, #0x10
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080CCDDC: .4byte gUnknown_08117860
_080CCDE0: .4byte 0xFFFFFF00
_080CCDE4: .4byte 0x0600F080
_080CCDE8: .4byte 0x0600F082

	thumb_func_start sub_80CCDEC
sub_80CCDEC: @ 0x080CCDEC
	push {r4, r5, lr}
	sub sp, #0x10
	adds r5, r0, #0
	adds r4, r1, #0
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #2
	adds r0, r0, r5
	movs r1, #0x86
	lsls r1, r1, #2
	adds r0, r0, r1
	bl sub_80CADA8
	lsls r4, r4, #2
	ldr r0, _080CCE4C @ =gUnknown_08117860
	adds r4, r4, r0
	ldr r1, [r4]
	adds r0, r1, #0
	adds r0, #0xf
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _080CCE50 @ =0xFFFFFF00
	ands r1, r2
	orrs r1, r0
	str r1, [sp, #0xc]
	add r0, sp, #0xc
	ldrb r1, [r0, #1]
	lsls r1, r1, #6
	ldrb r0, [r0]
	lsls r0, r0, #1
	ldr r2, _080CCE54 @ =0x0600F080
	adds r0, r0, r2
	adds r1, r1, r0
	movs r0, #1
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	movs r0, #0x20
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r2, #0x54
	movs r3, #2
	bl sub_80CAE60
	add sp, #0x10
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080CCE4C: .4byte gUnknown_08117860
_080CCE50: .4byte 0xFFFFFF00
_080CCE54: .4byte 0x0600F080

	thumb_func_start sub_80CCE58
sub_80CCE58: @ 0x080CCE58
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x48
	mov sl, r0
	str r3, [sp, #0x30]
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	movs r5, #0xa0
	lsls r5, r5, #2
	add r5, sl
	adds r0, r5, #0
	bl sub_80CAD18
	movs r0, #0xa7
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r4, r0, #0
	movs r0, #0xa9
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [r0, #4]
	bl sub_80074C0
	str r0, [sp, #0x34]
	ldr r1, [r5, #4]
	movs r0, #0x9e
	lsls r0, r0, #2
	add r0, sl
	ldr r6, [r0]
	lsls r4, r4, #5
	ldr r0, _080CCEE0 @ =0x06010000
	adds r4, r4, r0
	add r0, sp, #0xc
	adds r2, r4, #0
	movs r3, #0x80
	bl sub_8008F0C
	add r1, sp, #0xc
	mov sb, r1
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080CCEE4
	cmp r1, #0
	beq _080CCECA
	adds r0, r1, #0
	add r1, sp, #0xc
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CCECA:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	ldr r5, [sp, #0x34]
	lsls r5, r5, #5
	str r5, [sp, #0x38]
	mov r7, sp
	adds r7, #0x2c
	str r7, [sp, #0x3c]
	b _080CCFBA
	.align 2, 0
_080CCEE0: .4byte 0x06010000
_080CCEE4:
	str r1, [sp, #0x40]
	movs r0, #1
	str r0, [sp, #0x20]
	ldr r1, [r6]
	ldr r2, [sp, #0x40]
	subs r0, r2, r1
	asrs r4, r0, #4
	str r4, [sp, #0x1c]
	add r2, sp, #0x20
	add r0, sp, #0x1c
	cmp r4, #1
	bhs _080CCEFE
	adds r0, r2, #0
_080CCEFE:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CCF1E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080CCF1A
	mov r0, r8
	bl sub_80D3BC0
_080CCF1A:
	ldr r1, [r6]
	b _080CCF22
_080CCF1E:
	movs r0, #0
	mov r8, r0
_080CCF22:
	adds r5, r0, #0
	str r5, [sp, #0x44]
	adds r2, r1, #0
	adds r3, r5, #0
	ldr r4, [sp, #0x34]
	lsls r4, r4, #5
	str r4, [sp, #0x38]
	mov r5, sp
	adds r5, #0x2c
	str r5, [sp, #0x3c]
	ldr r7, [sp, #0x40]
	cmp r2, r7
	beq _080CCF56
_080CCF3C:
	cmp r3, #0
	beq _080CCF4C
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CCF4C:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x40]
	cmp r2, r0
	bne _080CCF3C
_080CCF56:
	adds r5, r3, #0
	ldr r0, [sp, #0x20]
	cmp r0, #1
	bne _080CCF72
	cmp r5, #0
	beq _080CCF6E
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CCF6E:
	adds r5, #0x10
	b _080CCF94
_080CCF72:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080CCF92
_080CCF7A:
	cmp r2, #0
	beq _080CCF8A
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CCF8A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CCF7A
_080CCF92:
	adds r5, r2, #0
_080CCF94:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _080CCFA4
_080CCF9E:
	adds r0, #0x10
	cmp r0, r2
	bne _080CCF9E
_080CCFA4:
	cmp r1, #0
	beq _080CCFAE
	adds r0, r1, #0
	bl sub_80D0260
_080CCFAE:
	ldr r0, [sp, #0x44]
	add r0, r8
	ldr r7, [sp, #0x44]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080CCFBA:
	movs r0, #0xa0
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [r0, #8]
	movs r0, #0x9e
	lsls r0, r0, #2
	add r0, sl
	ldr r6, [r0]
	ldr r0, [sp, #0x38]
	ldr r3, _080CCFFC @ =0x05000200
	adds r2, r0, r3
	add r0, sp, #0xc
	movs r3, #0x20
	bl sub_8008F0C
	add r4, sp, #0xc
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080CD000
	cmp r1, #0
	beq _080CCFF4
	adds r0, r1, #0
	add r1, sp, #0xc
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CCFF4:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080CD0CA
	.align 2, 0
_080CCFFC: .4byte 0x05000200
_080CD000:
	str r1, [sp, #0x40]
	movs r0, #1
	str r0, [sp, #0x28]
	ldr r1, [r6]
	ldr r3, [sp, #0x40]
	subs r0, r3, r1
	asrs r4, r0, #4
	str r4, [sp, #0x24]
	add r2, sp, #0x28
	add r0, sp, #0x24
	cmp r4, #1
	bhs _080CD01A
	adds r0, r2, #0
_080CD01A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CD03A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080CD036
	mov r0, r8
	bl sub_80D3BC0
_080CD036:
	ldr r1, [r6]
	b _080CD03E
_080CD03A:
	movs r0, #0
	mov r8, r0
_080CD03E:
	adds r5, r0, #0
	str r5, [sp, #0x44]
	adds r2, r1, #0
	adds r3, r5, #0
	ldr r4, [sp, #0x40]
	cmp r2, r4
	beq _080CD066
_080CD04C:
	cmp r3, #0
	beq _080CD05C
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CD05C:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x40]
	cmp r2, r5
	bne _080CD04C
_080CD066:
	adds r5, r3, #0
	ldr r0, [sp, #0x28]
	cmp r0, #1
	bne _080CD082
	cmp r5, #0
	beq _080CD07E
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CD07E:
	adds r5, #0x10
	b _080CD0A4
_080CD082:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080CD0A2
_080CD08A:
	cmp r2, #0
	beq _080CD09A
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CD09A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CD08A
_080CD0A2:
	adds r5, r2, #0
_080CD0A4:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _080CD0B4
_080CD0AE:
	adds r0, #0x10
	cmp r0, r2
	bne _080CD0AE
_080CD0B4:
	cmp r1, #0
	beq _080CD0BE
	adds r0, r1, #0
	bl sub_80D0260
_080CD0BE:
	ldr r0, [sp, #0x44]
	add r0, r8
	ldr r1, [sp, #0x44]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080CD0CA:
	ldr r0, _080CD13C @ =gUnknown_0811785C
	ldr r1, [r0]
	adds r0, r1, #0
	adds r0, #0xf
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _080CD140 @ =0xFFFFFF00
	ands r1, r2
	orrs r1, r0
	str r1, [sp, #0x2c]
	ldr r2, [sp, #0x3c]
	ldrb r1, [r2, #1]
	lsls r1, r1, #6
	add r0, sp, #0x2c
	ldrb r0, [r0]
	lsls r0, r0, #1
	ldr r3, _080CD144 @ =0x0600F080
	adds r0, r0, r3
	adds r1, r1, r0
	movs r0, #1
	str r0, [sp]
	movs r5, #0
	str r5, [sp, #4]
	movs r4, #0x20
	str r4, [sp, #8]
	mov r0, sl
	movs r2, #0x54
	movs r3, #2
	bl sub_80CAE60
	ldr r7, [sp, #0x30]
	cmp r7, #1
	bls _080CD12A
	ldr r0, [sp, #0x3c]
	ldrb r2, [r0, #1]
	lsls r2, r2, #6
	ldrb r0, [r0]
	lsls r0, r0, #1
	ldr r1, _080CD148 @ =0x0600F082
	adds r0, r0, r1
	adds r2, r2, r0
	str r5, [sp]
	str r4, [sp, #4]
	mov r0, sl
	adds r1, r7, #0
	movs r3, #0x20
	bl sub_80CAEEC
_080CD12A:
	add sp, #0x48
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080CD13C: .4byte gUnknown_0811785C
_080CD140: .4byte 0xFFFFFF00
_080CD144: .4byte 0x0600F080
_080CD148: .4byte 0x0600F082

	thumb_func_start sub_80CD14C
sub_80CD14C: @ 0x080CD14C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x48
	mov sl, r0
	str r3, [sp, #0x30]
	movs r5, #0xa0
	lsls r5, r5, #2
	add r5, sl
	adds r0, r5, #0
	bl sub_80CADA0
	movs r0, #0xa7
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [r0, #4]
	bl sub_8007D4C
	adds r4, r0, #0
	movs r0, #0xa9
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [r0, #4]
	bl sub_80074C0
	str r0, [sp, #0x34]
	ldr r1, [r5, #4]
	movs r0, #0x9e
	lsls r0, r0, #2
	add r0, sl
	ldr r6, [r0]
	lsls r4, r4, #5
	ldr r0, _080CD1D0 @ =0x06010000
	adds r4, r4, r0
	add r0, sp, #0xc
	adds r2, r4, #0
	movs r3, #0x80
	bl sub_8008F0C
	add r1, sp, #0xc
	mov sb, r1
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080CD1D4
	cmp r1, #0
	beq _080CD1BA
	adds r0, r1, #0
	add r1, sp, #0xc
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CD1BA:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	ldr r5, [sp, #0x34]
	lsls r5, r5, #5
	str r5, [sp, #0x3c]
	mov r7, sp
	adds r7, #0x2c
	str r7, [sp, #0x38]
	b _080CD2AA
	.align 2, 0
_080CD1D0: .4byte 0x06010000
_080CD1D4:
	str r1, [sp, #0x40]
	movs r0, #1
	str r0, [sp, #0x20]
	ldr r1, [r6]
	ldr r2, [sp, #0x40]
	subs r0, r2, r1
	asrs r4, r0, #4
	str r4, [sp, #0x1c]
	add r2, sp, #0x20
	add r0, sp, #0x1c
	cmp r4, #1
	bhs _080CD1EE
	adds r0, r2, #0
_080CD1EE:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CD20E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080CD20A
	mov r0, r8
	bl sub_80D3BC0
_080CD20A:
	ldr r1, [r6]
	b _080CD212
_080CD20E:
	movs r0, #0
	mov r8, r0
_080CD212:
	adds r5, r0, #0
	str r5, [sp, #0x44]
	adds r2, r1, #0
	adds r3, r5, #0
	ldr r4, [sp, #0x34]
	lsls r4, r4, #5
	str r4, [sp, #0x3c]
	mov r5, sp
	adds r5, #0x2c
	str r5, [sp, #0x38]
	ldr r7, [sp, #0x40]
	cmp r2, r7
	beq _080CD246
_080CD22C:
	cmp r3, #0
	beq _080CD23C
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CD23C:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x40]
	cmp r2, r0
	bne _080CD22C
_080CD246:
	adds r5, r3, #0
	ldr r0, [sp, #0x20]
	cmp r0, #1
	bne _080CD262
	cmp r5, #0
	beq _080CD25E
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CD25E:
	adds r5, #0x10
	b _080CD284
_080CD262:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080CD282
_080CD26A:
	cmp r2, #0
	beq _080CD27A
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CD27A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CD26A
_080CD282:
	adds r5, r2, #0
_080CD284:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _080CD294
_080CD28E:
	adds r0, #0x10
	cmp r0, r2
	bne _080CD28E
_080CD294:
	cmp r1, #0
	beq _080CD29E
	adds r0, r1, #0
	bl sub_80D0260
_080CD29E:
	ldr r0, [sp, #0x44]
	add r0, r8
	ldr r7, [sp, #0x44]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080CD2AA:
	movs r0, #0xa0
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [r0, #8]
	movs r0, #0x9e
	lsls r0, r0, #2
	add r0, sl
	ldr r6, [r0]
	ldr r0, [sp, #0x3c]
	ldr r3, _080CD2EC @ =0x05000200
	adds r2, r0, r3
	add r0, sp, #0xc
	movs r3, #0x20
	bl sub_8008F0C
	add r4, sp, #0xc
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080CD2F0
	cmp r1, #0
	beq _080CD2E4
	adds r0, r1, #0
	add r1, sp, #0xc
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CD2E4:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080CD3BA
	.align 2, 0
_080CD2EC: .4byte 0x05000200
_080CD2F0:
	str r1, [sp, #0x40]
	movs r0, #1
	str r0, [sp, #0x28]
	ldr r1, [r6]
	ldr r3, [sp, #0x40]
	subs r0, r3, r1
	asrs r4, r0, #4
	str r4, [sp, #0x24]
	add r2, sp, #0x28
	add r0, sp, #0x24
	cmp r4, #1
	bhs _080CD30A
	adds r0, r2, #0
_080CD30A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CD32A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080CD326
	mov r0, r8
	bl sub_80D3BC0
_080CD326:
	ldr r1, [r6]
	b _080CD32E
_080CD32A:
	movs r0, #0
	mov r8, r0
_080CD32E:
	adds r5, r0, #0
	str r5, [sp, #0x44]
	adds r2, r1, #0
	adds r3, r5, #0
	ldr r4, [sp, #0x40]
	cmp r2, r4
	beq _080CD356
_080CD33C:
	cmp r3, #0
	beq _080CD34C
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CD34C:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x40]
	cmp r2, r5
	bne _080CD33C
_080CD356:
	adds r5, r3, #0
	ldr r0, [sp, #0x28]
	cmp r0, #1
	bne _080CD372
	cmp r5, #0
	beq _080CD36E
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CD36E:
	adds r5, #0x10
	b _080CD394
_080CD372:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080CD392
_080CD37A:
	cmp r2, #0
	beq _080CD38A
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CD38A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CD37A
_080CD392:
	adds r5, r2, #0
_080CD394:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _080CD3A4
_080CD39E:
	adds r0, #0x10
	cmp r0, r2
	bne _080CD39E
_080CD3A4:
	cmp r1, #0
	beq _080CD3AE
	adds r0, r1, #0
	bl sub_80D0260
_080CD3AE:
	ldr r0, [sp, #0x44]
	add r0, r8
	ldr r1, [sp, #0x44]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080CD3BA:
	ldr r0, _080CD42C @ =gUnknown_0811785C
	ldr r1, [r0]
	adds r0, r1, #0
	adds r0, #0xf
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _080CD430 @ =0xFFFFFF00
	ands r1, r2
	orrs r1, r0
	str r1, [sp, #0x2c]
	ldr r2, [sp, #0x38]
	ldrb r1, [r2, #1]
	lsls r1, r1, #6
	add r0, sp, #0x2c
	ldrb r0, [r0]
	lsls r0, r0, #1
	ldr r3, _080CD434 @ =0x0600F080
	adds r0, r0, r3
	adds r1, r1, r0
	movs r0, #1
	str r0, [sp]
	movs r5, #0
	str r5, [sp, #4]
	movs r4, #0x20
	str r4, [sp, #8]
	mov r0, sl
	movs r2, #0x54
	movs r3, #2
	bl sub_80CAE60
	ldr r7, [sp, #0x30]
	cmp r7, #1
	bls _080CD41A
	ldr r0, [sp, #0x38]
	ldrb r2, [r0, #1]
	lsls r2, r2, #6
	ldrb r0, [r0]
	lsls r0, r0, #1
	ldr r1, _080CD438 @ =0x0600F082
	adds r0, r0, r1
	adds r2, r2, r0
	str r5, [sp]
	str r4, [sp, #4]
	mov r0, sl
	adds r1, r7, #0
	movs r3, #0x20
	bl sub_80CAEEC
_080CD41A:
	add sp, #0x48
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080CD42C: .4byte gUnknown_0811785C
_080CD430: .4byte 0xFFFFFF00
_080CD434: .4byte 0x0600F080
_080CD438: .4byte 0x0600F082
_080CD43C:
	.byte 0xF0, 0xB5, 0x47, 0x46
	.byte 0x80, 0xB4, 0x84, 0xB0, 0x04, 0x1C, 0x0D, 0x1C, 0xA0, 0x21, 0x89, 0x00, 0x60, 0x18, 0x29, 0x1C
	.byte 0xFD, 0xF7, 0x5E, 0xFC, 0x1B, 0x48, 0x01, 0x68, 0x08, 0x1C, 0x0F, 0x30, 0x00, 0x06, 0x00, 0x0E
	.byte 0x19, 0x4A, 0x11, 0x40, 0x01, 0x43, 0x03, 0x91, 0x03, 0xAE, 0x71, 0x78, 0x89, 0x01, 0x30, 0x1C
	.byte 0x00, 0x78, 0x40, 0x00, 0x15, 0x4A, 0x80, 0x18, 0x09, 0x18, 0x01, 0x20, 0x00, 0x90, 0x00, 0x20
	.byte 0x80, 0x46, 0x01, 0x90, 0x20, 0x27, 0x02, 0x97, 0x20, 0x1C, 0x54, 0x22, 0x02, 0x23, 0xFD, 0xF7
	.byte 0xE7, 0xFC, 0x01, 0x2D, 0x0F, 0xD9, 0x72, 0x78, 0x92, 0x01, 0x03, 0xA8, 0x00, 0x78, 0x40, 0x00
	.byte 0x0B, 0x49, 0x40, 0x18, 0x12, 0x18, 0x40, 0x46, 0x00, 0x90, 0x01, 0x97, 0x20, 0x1C, 0x29, 0x1C
	.byte 0x20, 0x23, 0xFD, 0xF7, 0x1B, 0xFD, 0x04, 0xB0, 0x08, 0xBC, 0x98, 0x46, 0xF0, 0xBC, 0x01, 0xBC
	.byte 0x00, 0x47, 0x00, 0x00, 0x5C, 0x78, 0x11, 0x08, 0x00, 0xFF, 0xFF, 0xFF, 0x80, 0xF0, 0x00, 0x06
	.byte 0x82, 0xF0, 0x00, 0x06

	thumb_func_start sub_80CD4D4
sub_80CD4D4: @ 0x080CD4D4
	push {r4, lr}
	sub sp, #0x10
	adds r4, r0, #0
	movs r1, #0xa0
	lsls r1, r1, #2
	adds r0, r4, r1
	bl sub_80CADA8
	ldr r0, _080CD528 @ =gUnknown_0811785C
	ldr r1, [r0]
	adds r0, r1, #0
	adds r0, #0xf
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _080CD52C @ =0xFFFFFF00
	ands r1, r2
	orrs r1, r0
	str r1, [sp, #0xc]
	add r0, sp, #0xc
	ldrb r1, [r0, #1]
	lsls r1, r1, #6
	ldrb r0, [r0]
	lsls r0, r0, #1
	ldr r2, _080CD530 @ =0x0600F080
	adds r0, r0, r2
	adds r1, r1, r0
	movs r0, #1
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	movs r0, #0x20
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r2, #0x54
	movs r3, #2
	bl sub_80CAE60
	add sp, #0x10
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080CD528: .4byte gUnknown_0811785C
_080CD52C: .4byte 0xFFFFFF00
_080CD530: .4byte 0x0600F080

	thumb_func_start sub_80CD534
sub_80CD534: @ 0x080CD534
	lsls r2, r2, #2
	ldr r1, _080CD550 @ =gUnknown_0811783C
	adds r2, r2, r1
	ldr r2, [r2]
	adds r1, r2, #0
	adds r1, #0x78
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r3, _080CD554 @ =0xFFFFFF00
	ands r2, r3
	orrs r2, r1
	str r2, [r0]
	bx lr
	.align 2, 0
_080CD550: .4byte gUnknown_0811783C
_080CD554: .4byte 0xFFFFFF00

	thumb_func_start sub_80CD558
sub_80CD558: @ 0x080CD558
	ldr r1, _080CD570 @ =gUnknown_08117838
	ldr r2, [r1]
	adds r1, r2, #0
	adds r1, #0x78
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r3, _080CD574 @ =0xFFFFFF00
	ands r2, r3
	orrs r2, r1
	str r2, [r0]
	bx lr
	.align 2, 0
_080CD570: .4byte gUnknown_08117838
_080CD574: .4byte 0xFFFFFF00

	thumb_func_start sub_80CD578
sub_80CD578: @ 0x080CD578
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r7, r0, #0
	adds r4, r1, #0
	bl sub_8008444
	ldr r0, _080CD618 @ =gUnknown_080E85A0
	str r0, [r7, #4]
	str r4, [r7, #8]
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #1
	bl sub_8008B54
	adds r6, r7, #0
	adds r6, #0x10
	ldr r1, _080CD61C @ =gUnknown_08754C0C
	adds r0, r6, #0
	bl sub_805E6CC
	adds r0, r7, #0
	adds r0, #0x40
	movs r5, #0
	movs r4, #0
	strh r4, [r0]
	strh r4, [r0, #2]
	adds r0, #4
	adds r1, r6, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	adds r0, r7, #0
	adds r0, #0x58
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	adds r0, #0x1c
	strb r5, [r0]
	str r4, [r7, #0x78]
	str r4, [r7, #0x7c]
	add r0, sp, #0xc
	bl sub_800835C
	add r5, sp, #0x10
	adds r0, r5, #0
	bl sub_800770C
	adds r0, r7, #0
	adds r0, #0x80
	str r4, [sp]
	add r1, sp, #0xc
	str r1, [sp, #4]
	str r5, [sp, #8]
	movs r1, #0
	movs r2, #0x1d
	movs r3, #0
	bl sub_8050CC0
	adds r0, r5, #0
	movs r1, #2
	bl sub_8007714
	add r0, sp, #0xc
	movs r1, #2
	bl sub_8008364
	adds r0, r7, #0
	add sp, #0x14
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080CD618: .4byte gUnknown_080E85A0
_080CD61C: .4byte gUnknown_08754C0C

	thumb_func_start sub_80CD620
sub_80CD620: @ 0x080CD620
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x58
	mov r8, r0
	bl sub_8008918
	mov r2, sp
	movs r3, #0xea
	lsls r3, r3, #5
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #8]
	mov r0, r8
	bl sub_8008918
	mov r2, sp
	ldr r4, _080CD73C @ =0x00001E41
	adds r1, r4, #0
	strh r1, [r2]
	strh r1, [r0, #0xa]
	mov r0, r8
	bl sub_8008918
	mov r2, sp
	ldr r5, _080CD740 @ =0x00003F42
	adds r1, r5, #0
	strh r1, [r2]
	strh r1, [r0, #0xc]
	movs r4, #1
	rsbs r4, r4, #0
	ldr r1, _080CD744 @ =0x0600F000
	movs r5, #0x80
	lsls r5, r5, #4
	adds r0, r4, #0
	adds r2, r5, #0
	bl sub_8008EB8
	ldr r6, _080CD748 @ =0x0600F800
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl sub_8008EB8
	movs r4, #0xc0
	lsls r4, r4, #0x13
	movs r2, #0x80
	lsls r2, r2, #8
	movs r0, #0
	adds r1, r4, #0
	bl sub_8008EB8
	mov r0, r8
	bl sub_8008918
	mov r2, sp
	movs r7, #0xb2
	lsls r7, r7, #5
	adds r1, r7, #0
	strh r1, [r2]
	strh r1, [r0]
	ldr r0, _080CD74C @ =gUnknown_080F9F78
	ldr r0, [r0]
	movs r1, #0xa0
	lsls r1, r1, #0x13
	movs r2, #0x20
	bl sub_8008E64
	ldr r0, _080CD750 @ =gUnknown_080F9F70
	ldr r0, [r0]
	ldr r1, _080CD754 @ =gUnknown_080F9F74
	ldr r2, [r1]
	adds r1, r4, #0
	bl sub_8008E64
	ldr r0, _080CD758 @ =0x00030003
	adds r1, r6, #0
	adds r2, r5, #0
	bl sub_8008EB8
	add r4, sp, #4
	mov r0, sp
	adds r0, #0x14
	str r0, [sp, #0x4c]
	mov r1, sp
	adds r1, #0x1c
	str r1, [sp, #0x3c]
	mov r2, sp
	adds r2, #0x24
	str r2, [sp, #0x40]
	movs r3, #8
	movs r2, #2
	ldr r0, _080CD75C @ =0x0600F81C
	movs r1, #0x13
_080CD6E0:
	strh r3, [r0]
	strh r2, [r0, #2]
	adds r0, #0x40
	subs r1, #1
	cmp r1, #0
	bge _080CD6E0
	ldr r0, _080CD760 @ =0x03FF03FF
	ldr r1, _080CD744 @ =0x0600F000
	movs r2, #0x80
	lsls r2, r2, #4
	bl sub_8008EB8
	mov r0, r8
	bl sub_8008910
	adds r6, r0, #0
	ldr r1, _080CD764 @ =gUnknown_08750C8C
	add r0, sp, #4
	ldr r2, _080CD768 @ =0x06000400
	movs r3, #0xe0
	lsls r3, r3, #1
	bl sub_8008F0C
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080CD76C
	cmp r1, #0
	beq _080CD728
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080CD728:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	mov r7, r8
	adds r7, #0x44
	str r7, [sp, #0x44]
	mov r0, r8
	adds r0, #0x80
	str r0, [sp, #0x48]
	b _080CD842
	.align 2, 0
_080CD73C: .4byte 0x00001E41
_080CD740: .4byte 0x00003F42
_080CD744: .4byte 0x0600F000
_080CD748: .4byte 0x0600F800
_080CD74C: .4byte gUnknown_080F9F78
_080CD750: .4byte gUnknown_080F9F70
_080CD754: .4byte gUnknown_080F9F74
_080CD758: .4byte 0x00030003
_080CD75C: .4byte 0x0600F81C
_080CD760: .4byte 0x03FF03FF
_080CD764: .4byte gUnknown_08750C8C
_080CD768: .4byte 0x06000400
_080CD76C:
	str r1, [sp, #0x50]
	movs r0, #1
	str r0, [sp, #0x38]
	ldr r1, [r6]
	ldr r2, [sp, #0x50]
	subs r0, r2, r1
	asrs r4, r0, #4
	str r4, [sp, #0x34]
	add r2, sp, #0x38
	add r0, sp, #0x34
	cmp r4, #1
	bhs _080CD786
	adds r0, r2, #0
_080CD786:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CD7A6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sl, r4
	cmp r0, #0
	bne _080CD7A2
	mov r0, sl
	bl sub_80D3BC0
_080CD7A2:
	ldr r1, [r6]
	b _080CD7AA
_080CD7A6:
	movs r0, #0
	mov sl, r0
_080CD7AA:
	adds r5, r0, #0
	str r5, [sp, #0x54]
	adds r2, r1, #0
	adds r3, r5, #0
	mov r4, r8
	adds r4, #0x44
	str r4, [sp, #0x44]
	mov r5, r8
	adds r5, #0x80
	str r5, [sp, #0x48]
	ldr r7, [sp, #0x50]
	cmp r2, r7
	beq _080CD7DE
_080CD7C4:
	cmp r3, #0
	beq _080CD7D4
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CD7D4:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x50]
	cmp r2, r0
	bne _080CD7C4
_080CD7DE:
	adds r5, r3, #0
	ldr r0, [sp, #0x38]
	cmp r0, #1
	bne _080CD7FA
	cmp r5, #0
	beq _080CD7F6
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CD7F6:
	adds r5, #0x10
	b _080CD81C
_080CD7FA:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080CD81A
_080CD802:
	cmp r2, #0
	beq _080CD812
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CD812:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CD802
_080CD81A:
	adds r5, r2, #0
_080CD81C:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _080CD82C
_080CD826:
	adds r0, #0x10
	cmp r0, r2
	bne _080CD826
_080CD82C:
	cmp r1, #0
	beq _080CD836
	adds r0, r1, #0
	bl sub_80D0260
_080CD836:
	ldr r0, [sp, #0x54]
	add r0, sl
	ldr r7, [sp, #0x54]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080CD842:
	mov r0, r8
	ldr r1, [r0, #0x44]
	ldr r3, [r1]
	ldr r4, [sp, #0x44]
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r0, [r0, #0x48]
	adds r0, r0, r2
	ldrh r2, [r0]
	ldr r0, [sp, #0x4c]
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	ldr r0, [sp, #0x1c]
	movs r2, #0
	cmp r0, #0
	beq _080CD868
	ldr r5, [sp, #0x3c]
	ldrh r2, [r5, #4]
_080CD868:
	ldr r1, _080CD898 @ =0x06000380
	bl sub_8008E64
	ldr r0, [sp, #0x24]
	movs r2, #0
	cmp r0, #0
	beq _080CD87A
	ldr r7, [sp, #0x40]
	ldrh r2, [r7, #4]
_080CD87A:
	ldr r1, _080CD89C @ =0x05000020
	bl sub_8008E64
	ldr r0, [sp, #0x48]
	bl sub_8050D5C
	add sp, #0x58
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080CD898: .4byte 0x06000380
_080CD89C: .4byte 0x05000020

	thumb_func_start sub_80CD8A0
sub_80CD8A0: @ 0x080CD8A0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0xc
	adds r7, r0, #0
	movs r0, #0x80
	adds r0, r0, r7
	mov r8, r0
	bl sub_8050D34
	adds r1, r7, #0
	adds r1, #0x84
	str r0, [r1]
	adds r0, r7, #0
	bl sub_80088DC
	mov sb, r0
	adds r0, r7, #0
	bl sub_8008920
	adds r6, r0, #0
	adds r0, r7, #0
	bl sub_8008918
	adds r5, r0, #0
	adds r0, r7, #0
	bl sub_8008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl sub_800894C
	adds r1, r7, #0
	adds r1, #0xc
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, r8
	mov r1, sb
	adds r2, r6, #0
	adds r3, r5, #0
	bl sub_8050D3C
	adds r1, r7, #0
	adds r1, #0x88
	str r0, [r1]
	ldr r2, [r7, #0x78]
	cmp r2, #0
	beq _080CD914
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r1, [r0, #0xc]
	adds r0, r2, #0
	bl sub_80D3910
_080CD914:
	ldr r4, [r7, #0x7c]
	cmp r4, #0
	beq _080CD928
	adds r0, r7, #0
	bl sub_8008920
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_80CC58C
_080CD928:
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080CD938:
	.byte 0xA6, 0x21, 0x89, 0x00, 0x40, 0x18, 0x00, 0x68
	.byte 0x70, 0x47, 0x00, 0x00, 0x9F, 0x21, 0x89, 0x00, 0x40, 0x18, 0x00, 0x78, 0x70, 0x47, 0x00, 0x00

	thumb_func_start sub_80CD950
sub_80CD950: @ 0x080CD950
	push {r4, lr}
	adds r3, r0, #0
	adds r4, r1, #0
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r3, r0
	ldr r0, _080CD990 @ =gUnknown_080E85BC
	str r0, [r1]
	movs r1, #0x85
	lsls r1, r1, #2
	adds r2, r3, r1
	ldr r1, [r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r2, r0
	movs r1, #0x86
	lsls r1, r1, #2
	adds r0, r3, r1
	cmp r0, r2
	beq _080CD982
_080CD97C:
	adds r0, #0xc
	cmp r0, r2
	bne _080CD97C
_080CD982:
	adds r0, r3, #0
	adds r1, r4, #0
	bl sub_80CADF0
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080CD990: .4byte gUnknown_080E85BC
_080CD994:
	.byte 0x01, 0x49, 0x09, 0x68, 0x01, 0x60, 0x70, 0x47, 0x5C, 0x78, 0x11, 0x08
	.byte 0x92, 0x00, 0x02, 0x49, 0x52, 0x18, 0x11, 0x68, 0x01, 0x60, 0x70, 0x47, 0x60, 0x78, 0x11, 0x08

	thumb_func_start sub_80CD9B0
sub_80CD9B0: @ 0x080CD9B0
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	str r1, [r7]
	str r2, [r7, #4]
	str r2, [r7, #8]
	adds r4, r7, #0
	adds r4, #0x14
	adds r0, r4, #0
	bl sub_8007874
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007B54
	str r0, [r4, #4]
	adds r4, #8
	adds r0, r4, #0
	bl sub_8007128
	adds r0, r4, #0
	bl sub_800736C
	str r0, [r4, #4]
	adds r6, r7, #0
	adds r6, #0x24
	ldr r1, _080CDA40 @ =gUnknown_08728208
	adds r0, r6, #0
	bl sub_805E6CC
	adds r0, r7, #0
	adds r0, #0x54
	movs r5, #0
	movs r4, #0
	strh r4, [r0]
	strh r4, [r0, #2]
	adds r0, #4
	adds r1, r6, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	adds r0, r7, #0
	adds r0, #0x6c
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	adds r0, #0x1c
	strb r5, [r0]
	ldr r1, [r7]
	ldr r0, [r1, #0x78]
	movs r2, #0xa6
	lsls r2, r2, #2
	adds r0, r0, r2
	ldr r0, [r0]
	str r0, [r7, #0xc]
	ldr r0, [r1, #0x7c]
	adds r0, r0, r2
	ldr r0, [r0]
	adds r0, #9
	str r0, [r7, #0x10]
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080CDA40: .4byte gUnknown_08728208

	thumb_func_start sub_80CDA44
sub_80CDA44: @ 0x080CDA44
	push {r4, r5, lr}
	adds r3, r0, #0
	ldr r1, [r3]
	ldr r0, [r1, #0x78]
	movs r2, #0xa6
	lsls r2, r2, #2
	adds r0, r0, r2
	ldr r0, [r0]
	str r0, [r3, #0xc]
	ldr r0, [r1, #0x7c]
	adds r0, r0, r2
	ldr r0, [r0]
	adds r0, #9
	str r0, [r3, #0x10]
	ldr r1, _080CDA78 @ =gUnknown_0811788C
	ldr r2, [r3, #4]
	lsls r0, r2, #4
	adds r0, r0, r1
	ldr r1, [r0]
	cmp r2, #0
	bne _080CDA7C
	ldr r2, [r3, #8]
	cmp r2, #9
	beq _080CDA92
	subs r0, r2, #5
	b _080CDA8A
	.align 2, 0
_080CDA78: .4byte gUnknown_0811788C
_080CDA7C:
	cmp r2, #9
	bne _080CDA92
	ldr r2, [r3, #8]
	cmp r2, #0
	beq _080CDA92
	adds r0, r2, #0
	subs r0, #0xe
_080CDA8A:
	adds r1, r2, #4
	cmp r0, #3
	bhi _080CDA92
	adds r1, r2, #0
_080CDA92:
	cmp r1, #8
	bgt _080CDAC8
	ldr r4, [r3, #4]
	cmp r1, #0
	bne _080CDAAE
	ldr r0, [r3]
	ldr r0, [r0, #0x78]
	movs r2, #0x9f
	lsls r2, r2, #2
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #0
	bne _080CDAAE
	adds r1, r4, #4
_080CDAAE:
	ldr r2, [r3, #0xc]
	cmp r1, r2
	ble _080CDAF2
	ldr r5, _080CDAC4 @ =gUnknown_0811788C
_080CDAB6:
	lsls r0, r1, #4
	adds r0, r0, r5
	ldr r1, [r0]
	cmp r1, r2
	bgt _080CDAB6
	b _080CDAF2
	.align 2, 0
_080CDAC4: .4byte gUnknown_0811788C
_080CDAC8:
	ldr r4, [r3, #4]
	cmp r1, #9
	bne _080CDAE0
	ldr r0, [r3]
	ldr r0, [r0, #0x7c]
	movs r2, #0x9f
	lsls r2, r2, #2
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #0
	bne _080CDAE0
	adds r1, r4, #4
_080CDAE0:
	ldr r2, [r3, #0x10]
	cmp r1, r2
	ble _080CDAF2
	ldr r5, _080CDB04 @ =gUnknown_0811788C
_080CDAE8:
	lsls r0, r1, #4
	adds r0, r0, r5
	ldr r1, [r0]
	cmp r1, r2
	bgt _080CDAE8
_080CDAF2:
	cmp r1, r4
	beq _080CDAFA
	str r4, [r3, #8]
	str r1, [r3, #4]
_080CDAFA:
	adds r0, r1, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080CDB04: .4byte gUnknown_0811788C

	thumb_func_start sub_80CDB08
sub_80CDB08: @ 0x080CDB08
	push {r4, r5, r6, lr}
	adds r3, r0, #0
	ldr r1, [r3]
	ldr r0, [r1, #0x78]
	movs r2, #0xa6
	lsls r2, r2, #2
	adds r0, r0, r2
	ldr r0, [r0]
	str r0, [r3, #0xc]
	ldr r0, [r1, #0x7c]
	adds r0, r0, r2
	ldr r0, [r0]
	adds r0, #9
	str r0, [r3, #0x10]
	ldr r1, _080CDB40 @ =gUnknown_0811788C
	ldr r2, [r3, #4]
	lsls r0, r2, #4
	adds r1, #4
	adds r0, r0, r1
	ldr r1, [r0]
	cmp r2, #0
	bne _080CDB44
	ldr r2, [r3, #8]
	cmp r2, #9
	beq _080CDB5A
	subs r0, r2, #1
	b _080CDB52
	.align 2, 0
_080CDB40: .4byte gUnknown_0811788C
_080CDB44:
	cmp r2, #9
	bne _080CDB5A
	ldr r2, [r3, #8]
	cmp r2, #0
	beq _080CDB5A
	adds r0, r2, #0
	subs r0, #0xa
_080CDB52:
	subs r1, r2, #4
	cmp r0, #3
	bhi _080CDB5A
	adds r1, r2, #0
_080CDB5A:
	cmp r1, #8
	bgt _080CDBA8
	ldr r2, [r3, #4]
	cmp r1, #0
	bne _080CDB76
	ldr r0, [r3]
	ldr r0, [r0, #0x78]
	movs r4, #0x9f
	lsls r4, r4, #2
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r0, #0
	bne _080CDB76
	subs r1, r2, #4
_080CDB76:
	ldr r0, [r3, #0xc]
	cmp r1, r0
	ble _080CDBEA
	ldr r5, _080CDBA4 @ =gUnknown_08117890
	adds r4, r0, #0
_080CDB80:
	lsls r0, r1, #4
	adds r0, r0, r5
	ldr r1, [r0]
	cmp r1, #0
	bne _080CDB9C
	ldr r0, [r3]
	ldr r0, [r0, #0x78]
	movs r6, #0x9f
	lsls r6, r6, #2
	adds r0, r0, r6
	ldrb r0, [r0]
	cmp r0, #0
	bne _080CDB9C
	adds r1, r2, #0
_080CDB9C:
	cmp r1, r4
	bgt _080CDB80
	b _080CDBEA
	.align 2, 0
_080CDBA4: .4byte gUnknown_08117890
_080CDBA8:
	ldr r2, [r3, #4]
	cmp r1, #9
	bne _080CDBC0
	ldr r0, [r3]
	ldr r0, [r0, #0x7c]
	movs r4, #0x9f
	lsls r4, r4, #2
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r0, #0
	bne _080CDBC0
	subs r1, r2, #4
_080CDBC0:
	ldr r0, [r3, #0x10]
	cmp r1, r0
	ble _080CDBEA
	ldr r5, _080CDBFC @ =gUnknown_08117890
	adds r4, r0, #0
_080CDBCA:
	lsls r0, r1, #4
	adds r0, r0, r5
	ldr r1, [r0]
	cmp r1, #9
	bne _080CDBE6
	ldr r0, [r3]
	ldr r0, [r0, #0x7c]
	movs r6, #0x9f
	lsls r6, r6, #2
	adds r0, r0, r6
	ldrb r0, [r0]
	cmp r0, #0
	bne _080CDBE6
	adds r1, r2, #0
_080CDBE6:
	cmp r1, r4
	bgt _080CDBCA
_080CDBEA:
	cmp r1, r2
	beq _080CDBF2
	str r2, [r3, #8]
	str r1, [r3, #4]
_080CDBF2:
	adds r0, r1, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080CDBFC: .4byte gUnknown_08117890

	thumb_func_start sub_80CDC00
sub_80CDC00: @ 0x080CDC00
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	ldr r1, [r7]
	ldr r0, [r1, #0x78]
	mov ip, r0
	movs r0, #0xa6
	lsls r0, r0, #2
	add r0, ip
	ldr r6, [r0]
	str r6, [r7, #0xc]
	ldr r5, [r1, #0x7c]
	movs r1, #0xa6
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	adds r4, r0, #0
	adds r4, #9
	str r4, [r7, #0x10]
	ldr r1, _080CDC4C @ =gUnknown_0811788C
	ldr r3, [r7, #4]
	lsls r0, r3, #4
	adds r1, #8
	adds r0, r0, r1
	ldr r2, [r0]
	cmp r2, #8
	bgt _080CDC7C
	cmp r2, #0
	bne _080CDC50
	movs r0, #0x9f
	lsls r0, r0, #2
	add r0, ip
	ldrb r0, [r0]
	adds r5, r3, #0
	cmp r0, #0
	bne _080CDC6A
	adds r2, r5, #0
	b _080CDC6A
	.align 2, 0
_080CDC4C: .4byte gUnknown_0811788C
_080CDC50:
	adds r5, r3, #0
	cmp r2, r6
	ble _080CDC6A
	adds r3, r6, #0
_080CDC58:
	cmp r3, #4
	bgt _080CDC60
	adds r2, r3, #0
	b _080CDC66
_080CDC60:
	lsls r0, r2, #4
	adds r0, r0, r1
	ldr r2, [r0]
_080CDC66:
	cmp r2, r3
	bgt _080CDC58
_080CDC6A:
	cmp r2, #4
	bne _080CDCBE
	ldr r1, [r7, #8]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	bne _080CDCBE
	cmp r1, #4
	ble _080CDCBE
	b _080CDCBC
_080CDC7C:
	cmp r2, #9
	bne _080CDC92
	movs r1, #0x9f
	lsls r1, r1, #2
	adds r0, r5, r1
	ldrb r0, [r0]
	adds r5, r3, #0
	cmp r0, #0
	bne _080CDCAC
	movs r2, #0
	b _080CDCAC
_080CDC92:
	adds r5, r3, #0
	cmp r2, r4
	ble _080CDCAC
	adds r3, r4, #0
_080CDC9A:
	cmp r3, #0xd
	bgt _080CDCA2
	adds r2, r3, #0
	b _080CDCA8
_080CDCA2:
	lsls r0, r2, #4
	adds r0, r0, r1
	ldr r2, [r0]
_080CDCA8:
	cmp r2, r3
	bgt _080CDC9A
_080CDCAC:
	cmp r2, #0xd
	bne _080CDCBE
	ldr r1, [r7, #8]
	ldr r0, [r7, #0x10]
	cmp r1, r0
	bne _080CDCBE
	cmp r1, #0xd
	ble _080CDCBE
_080CDCBC:
	adds r2, r1, #0
_080CDCBE:
	cmp r2, r5
	beq _080CDCC6
	str r5, [r7, #8]
	str r2, [r7, #4]
_080CDCC6:
	adds r0, r2, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80CDCD0
sub_80CDCD0: @ 0x080CDCD0
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r1, [r5]
	ldr r7, [r1, #0x78]
	movs r2, #0xa6
	lsls r2, r2, #2
	adds r0, r7, r2
	ldr r6, [r0]
	str r6, [r5, #0xc]
	ldr r1, [r1, #0x7c]
	mov ip, r1
	adds r0, r2, #0
	add r0, ip
	ldr r0, [r0]
	adds r4, r0, #0
	adds r4, #9
	str r4, [r5, #0x10]
	ldr r1, _080CDD18 @ =gUnknown_0811788C
	ldr r3, [r5, #4]
	lsls r0, r3, #4
	adds r1, #0xc
	adds r0, r0, r1
	ldr r2, [r0]
	cmp r2, #8
	bgt _080CDD34
	cmp r2, #0
	bne _080CDD1C
	movs r1, #0x9f
	lsls r1, r1, #2
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080CDD5E
	movs r2, #9
	b _080CDD5E
	.align 2, 0
_080CDD18: .4byte gUnknown_0811788C
_080CDD1C:
	cmp r2, r6
	ble _080CDD5E
	cmp r3, #0x11
	bne _080CDD2E
	movs r2, #1
	b _080CDD5E
_080CDD28:
	lsls r0, r2, #4
	adds r0, r0, r1
	ldr r2, [r0]
_080CDD2E:
	cmp r2, #8
	ble _080CDD28
	b _080CDD5E
_080CDD34:
	cmp r2, #9
	bne _080CDD48
	movs r0, #0x9f
	lsls r0, r0, #2
	add r0, ip
	ldrb r0, [r0]
	cmp r0, #0
	bne _080CDD5E
	movs r2, #0
	b _080CDD5E
_080CDD48:
	cmp r2, r4
	ble _080CDD5E
	cmp r4, #0xd
	bgt _080CDD5A
	movs r2, #1
	b _080CDD5E
_080CDD54:
	lsls r0, r2, #4
	adds r0, r0, r1
	ldr r2, [r0]
_080CDD5A:
	cmp r2, #8
	bgt _080CDD54
_080CDD5E:
	cmp r2, #0xa
	bne _080CDD6A
	ldr r0, [r5, #8]
	cmp r0, #0xe
	bne _080CDD6A
	movs r2, #0xe
_080CDD6A:
	cmp r2, r3
	beq _080CDD72
	str r3, [r5, #8]
	str r2, [r5, #4]
_080CDD72:
	adds r0, r2, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80CDD7C
sub_80CDD7C: @ 0x080CDD7C
	push {lr}
	adds r1, r0, #0
	movs r3, #0xa
	ldr r2, [r1, #4]
	cmp r2, #8
	bgt _080CDD8E
	ldr r0, [r1]
	ldr r0, [r0, #0x7c]
	b _080CDD94
_080CDD8E:
	ldr r0, [r1]
	ldr r0, [r0, #0x78]
	movs r3, #1
_080CDD94:
	cmp r0, #0
	bne _080CDD9A
	adds r3, r2, #0
_080CDD9A:
	ldr r0, [r1, #4]
	cmp r3, r0
	beq _080CDDA4
	str r0, [r1, #8]
	str r3, [r1, #4]
_080CDDA4:
	adds r0, r3, #0
	pop {r1}
	bx r1
	.align 2, 0
_080CDDAC:
	.byte 0x10, 0xB5, 0x03, 0x68
	.byte 0x9A, 0x6F, 0xA6, 0x24, 0xA4, 0x00, 0x12, 0x19, 0x12, 0x68, 0xC2, 0x60, 0xDA, 0x6F, 0x12, 0x19
	.byte 0x12, 0x68, 0x09, 0x32, 0x02, 0x61, 0x42, 0x68, 0x82, 0x60, 0x41, 0x60, 0x10, 0xBC, 0x01, 0xBC
	.byte 0x00, 0x47, 0x00, 0x00

	thumb_func_start sub_80CDDD4
sub_80CDDD4: @ 0x080CDDD4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x70
	adds r7, r0, #0
	adds r6, r7, #0
	adds r6, #0x88
	movs r4, #0
	movs r0, #1
	mov sl, r0
	mov r1, sl
	strb r1, [r6]
	ldr r1, [r7]
	ldr r2, [r7, #4]
	add r5, sp, #0x4c
	adds r0, r5, #0
	bl sub_80CE120
	ldrb r0, [r5]
	movs r2, #0x54
	adds r2, r2, r7
	mov r8, r2
	movs r1, #0
	strh r0, [r2]
	ldrb r0, [r5, #1]
	adds r5, r7, #0
	adds r5, #0x56
	strh r0, [r5]
	mov r0, sp
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [sp, #0xc]
	strb r1, [r0, #0x10]
	strb r1, [r0, #0x11]
	str r4, [sp, #0x14]
	strb r1, [r0, #0x18]
	ldrb r0, [r6]
	cmp r0, #0
	bne _080CDE2E
	b _080CE110
_080CDE2E:
	ldr r0, [r7]
	adds r0, #0x88
	ldr r0, [r0]
	adds r4, r7, #0
	adds r4, #0x58
	cmp r0, #3
	bne _080CDE42
	adds r0, r4, #0
	bl sub_805E8F0
_080CDE42:
	add r3, sp, #0x1c
	mov sb, r3
	ldr r1, [r7, #0x58]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r0, [r7, #0x5c]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sb
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	mov r1, sp
	adds r0, r7, #0
	adds r0, #0x6c
	ldm r0!, {r2, r4, r6}
	stm r1!, {r2, r4, r6}
	ldm r0!, {r3, r4, r6}
	stm r1!, {r3, r4, r6}
	ldr r0, [r0]
	str r0, [r1]
	mov r1, sp
	mov r2, r8
	ldrh r0, [r2]
	strh r0, [r1]
	ldrh r0, [r5]
	strh r0, [r1, #2]
	mov r0, sp
	movs r5, #1
	mov r3, sl
	strh r3, [r0, #8]
	adds r4, r7, #0
	adds r4, #0x1c
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80074C0
	mov r1, sp
	strh r0, [r1, #4]
	adds r6, r7, #0
	adds r6, #0x14
	ldr r1, [r6, #4]
	adds r0, r6, #0
	bl sub_8007D4C
	mov r1, sp
	strh r0, [r1, #6]
	mov r0, sp
	strb r5, [r0, #0x18]
	ldr r0, [r7]
	bl sub_8008920
	ldr r1, [sp, #0x1c]
	movs r2, #0
	str r4, [sp, #0x60]
	cmp r1, #0
	beq _080CDEBA
	mov r4, sb
	ldrh r2, [r4, #4]
_080CDEBA:
	mov r3, sp
	bl sub_805E99C
	ldr r0, [r7]
	bl sub_8008910
	adds r4, r0, #0
	ldr r5, [sp, #0x24]
	ldr r1, [r6, #4]
	adds r0, r6, #0
	bl sub_8007D4C
	adds r2, r0, #0
	add r1, sp, #0x24
	ldr r0, [sp, #0x24]
	movs r3, #0
	cmp r0, #0
	beq _080CDEE0
	ldrh r3, [r1, #4]
_080CDEE0:
	str r4, [sp, #0x68]
	lsls r2, r2, #5
	ldr r6, _080CDF1C @ =0x06010000
	adds r2, r2, r6
	add r0, sp, #0x3c
	adds r1, r5, #0
	bl sub_8008F0C
	add r0, sp, #0x3c
	mov sb, r0
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _080CDF20
	cmp r1, #0
	beq _080CDF0C
	adds r0, r1, #0
	add r1, sp, #0x3c
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CDF0C:
	ldr r5, [sp, #0x68]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	mov r6, sp
	adds r6, #0x2c
	str r6, [sp, #0x64]
	b _080CDFF6
	.align 2, 0
_080CDF1C: .4byte 0x06010000
_080CDF20:
	mov r8, r1
	mov r0, sl
	str r0, [sp, #0x54]
	ldr r1, [sp, #0x68]
	ldr r0, [r1]
	mov r2, r8
	subs r0, r2, r0
	asrs r4, r0, #4
	str r4, [sp, #0x50]
	add r1, sp, #0x54
	add r0, sp, #0x50
	cmp r4, #1
	bhs _080CDF3C
	adds r0, r1, #0
_080CDF3C:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CDF5A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sl, r4
	cmp r0, #0
	bne _080CDF5E
	mov r0, sl
	bl sub_80D3BC0
	b _080CDF5E
_080CDF5A:
	movs r0, #0
	mov sl, r0
_080CDF5E:
	adds r5, r0, #0
	str r5, [sp, #0x6c]
	ldr r3, [sp, #0x68]
	ldr r2, [r3]
	adds r3, r5, #0
	mov r4, sp
	adds r4, #0x2c
	str r4, [sp, #0x64]
	cmp r2, r8
	beq _080CDF8A
_080CDF72:
	cmp r3, #0
	beq _080CDF82
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080CDF82:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _080CDF72
_080CDF8A:
	adds r5, r3, #0
	ldr r0, [sp, #0x54]
	cmp r0, #1
	bne _080CDFA6
	cmp r5, #0
	beq _080CDFA2
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080CDFA2:
	adds r5, #0x10
	b _080CDFCE
_080CDFA6:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _080CDFCC
_080CDFAE:
	cmp r2, #0
	beq _080CDFBE
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080CDFBE:
	movs r0, #1
	rsbs r0, r0, #0
	add r8, r0
	adds r2, #0x10
	mov r1, r8
	cmp r1, #0
	bne _080CDFAE
_080CDFCC:
	adds r5, r2, #0
_080CDFCE:
	ldr r3, [sp, #0x68]
	ldr r2, [r3, #4]
	ldr r0, [r3]
	adds r1, r0, #0
	cmp r0, r2
	beq _080CDFE0
_080CDFDA:
	adds r1, #0x10
	cmp r1, r2
	bne _080CDFDA
_080CDFE0:
	cmp r0, #0
	beq _080CDFE8
	bl sub_80D0260
_080CDFE8:
	ldr r0, [sp, #0x6c]
	add r0, sl
	ldr r4, [sp, #0x6c]
	ldr r6, [sp, #0x68]
	str r4, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080CDFF6:
	ldr r0, [r7]
	bl sub_8008910
	adds r4, r0, #0
	ldr r5, [sp, #0x2c]
	ldr r7, [sp, #0x60]
	ldr r1, [r7, #4]
	adds r0, r7, #0
	bl sub_80074C0
	adds r2, r0, #0
	ldr r0, [sp, #0x2c]
	movs r3, #0
	cmp r0, #0
	beq _080CE018
	ldr r0, [sp, #0x64]
	ldrh r3, [r0, #4]
_080CE018:
	adds r6, r4, #0
	lsls r2, r2, #5
	ldr r1, _080CE04C @ =0x05000200
	adds r2, r2, r1
	add r0, sp, #0x3c
	adds r1, r5, #0
	bl sub_8008F0C
	add r2, sp, #0x3c
	mov r8, r2
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080CE050
	cmp r1, #0
	beq _080CE044
	adds r0, r1, #0
	mov r1, r8
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080CE044:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080CE110
	.align 2, 0
_080CE04C: .4byte 0x05000200
_080CE050:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x5c]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x58]
	add r1, sp, #0x5c
	add r0, sp, #0x58
	cmp r4, #1
	bhs _080CE068
	adds r0, r1, #0
_080CE068:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CE086
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080CE08A
	mov r0, sb
	bl sub_80D3BC0
	b _080CE08A
_080CE086:
	movs r0, #0
	mov sb, r0
_080CE08A:
	adds r5, r0, #0
	str r5, [sp, #0x6c]
	ldr r2, [r6]
	adds r3, r5, #0
	cmp r2, sl
	beq _080CE0AE
_080CE096:
	cmp r3, #0
	beq _080CE0A6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CE0A6:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080CE096
_080CE0AE:
	adds r5, r3, #0
	ldr r0, [sp, #0x5c]
	cmp r0, #1
	bne _080CE0CA
	cmp r5, #0
	beq _080CE0C6
	adds r0, r5, #0
	mov r1, r8
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CE0C6:
	adds r5, #0x10
	b _080CE0EC
_080CE0CA:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080CE0EA
_080CE0D2:
	cmp r2, #0
	beq _080CE0E2
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CE0E2:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CE0D2
_080CE0EA:
	adds r5, r2, #0
_080CE0EC:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080CE0FC
_080CE0F6:
	adds r1, #0x10
	cmp r1, r2
	bne _080CE0F6
_080CE0FC:
	cmp r0, #0
	beq _080CE104
	bl sub_80D0260
_080CE104:
	ldr r0, [sp, #0x6c]
	add r0, sb
	ldr r1, [sp, #0x6c]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080CE110:
	add sp, #0x70
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80CE120
sub_80CE120: @ 0x080CE120
	push {r4, lr}
	sub sp, #0x10
	adds r4, r0, #0
	cmp r2, #0
	beq _080CE13A
	cmp r2, #9
	beq _080CE14A
	cmp r2, #8
	bgt _080CE166
	ldr r1, [r1, #0x78]
	cmp r1, #0
	beq _080CE176
	b _080CE15A
_080CE13A:
	ldr r1, [r1, #0x78]
	cmp r1, #0
	beq _080CE176
	mov r0, sp
	bl sub_80CC144
	ldr r3, [sp]
	b _080CE176
_080CE14A:
	ldr r1, [r1, #0x7c]
	cmp r1, #0
	beq _080CE176
	add r0, sp, #4
	bl sub_80CD558
	ldr r3, [sp, #4]
	b _080CE176
_080CE15A:
	subs r2, #1
	add r0, sp, #8
	bl sub_80CC134
	ldr r3, [sp, #8]
	b _080CE176
_080CE166:
	ldr r1, [r1, #0x7c]
	cmp r1, #0
	beq _080CE176
	subs r2, #0xa
	add r0, sp, #0xc
	bl sub_80CD534
	ldr r3, [sp, #0xc]
_080CE176:
	str r3, [r4]
	adds r0, r4, #0
	add sp, #0x10
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80CE184
sub_80CE184: @ 0x080CE184
	push {lr}
	cmp r1, #8
	bgt _080CE190
	lsls r0, r2, #3
	subs r0, #1
	b _080CE194
_080CE190:
	lsls r0, r2, #3
	subs r0, #0xa
_080CE194:
	adds r0, r1, r0
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80CE19C
sub_80CE19C: @ 0x080CE19C
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80CD578
	ldr r0, _080CE1C0 @ =gUnknown_080E85DC
	str r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x8c
	movs r1, #0
	str r1, [r0]
	adds r0, #4
	str r1, [r0]
	adds r0, #4
	str r1, [r0]
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080CE1C0: .4byte gUnknown_080E85DC

	thumb_func_start sub_80CE1C4
sub_80CE1C4: @ 0x080CE1C4
	push {lr}
	sub sp, #4
	mov r0, sp
	strb r1, [r0]
	bl sub_800DB30
	subs r0, #5
	cmp r0, #0x28
	bhi _080CE28C
	lsls r0, r0, #2
	ldr r1, _080CE1E0 @ =_080CE1E4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080CE1E0: .4byte _080CE1E4
_080CE1E4: @ jump table
	.4byte _080CE288 @ case 0
	.4byte _080CE28C @ case 1
	.4byte _080CE28C @ case 2
	.4byte _080CE28C @ case 3
	.4byte _080CE28C @ case 4
	.4byte _080CE28C @ case 5
	.4byte _080CE28C @ case 6
	.4byte _080CE28C @ case 7
	.4byte _080CE288 @ case 8
	.4byte _080CE28C @ case 9
	.4byte _080CE28C @ case 10
	.4byte _080CE28C @ case 11
	.4byte _080CE28C @ case 12
	.4byte _080CE28C @ case 13
	.4byte _080CE28C @ case 14
	.4byte _080CE28C @ case 15
	.4byte _080CE288 @ case 16
	.4byte _080CE28C @ case 17
	.4byte _080CE28C @ case 18
	.4byte _080CE28C @ case 19
	.4byte _080CE28C @ case 20
	.4byte _080CE28C @ case 21
	.4byte _080CE28C @ case 22
	.4byte _080CE28C @ case 23
	.4byte _080CE288 @ case 24
	.4byte _080CE28C @ case 25
	.4byte _080CE28C @ case 26
	.4byte _080CE28C @ case 27
	.4byte _080CE28C @ case 28
	.4byte _080CE28C @ case 29
	.4byte _080CE28C @ case 30
	.4byte _080CE28C @ case 31
	.4byte _080CE288 @ case 32
	.4byte _080CE28C @ case 33
	.4byte _080CE28C @ case 34
	.4byte _080CE28C @ case 35
	.4byte _080CE28C @ case 36
	.4byte _080CE28C @ case 37
	.4byte _080CE28C @ case 38
	.4byte _080CE28C @ case 39
	.4byte _080CE288 @ case 40
_080CE288:
	movs r0, #1
	b _080CE28E
_080CE28C:
	movs r0, #0
_080CE28E:
	add sp, #4
	pop {r1}
	bx r1

	thumb_func_start sub_80CE294
sub_80CE294: @ 0x080CE294
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80CD620
	adds r4, #0x80
	adds r0, r4, #0
	movs r1, #1
	bl sub_8050E98
	adds r0, r4, #0
	movs r1, #2
	bl sub_8050E98
	adds r0, r4, #0
	movs r1, #4
	bl sub_8050E98
	adds r0, r4, #0
	movs r1, #8
	bl sub_8050E98
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_80CE2C4
sub_80CE2C4: @ 0x080CE2C4
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x8c
	ldr r0, [r0]
	cmp r0, #0
	beq _080CE2D4
	bl sub_80CDDD4
_080CE2D4:
	adds r0, r4, #0
	adds r0, #0x90
	ldr r0, [r0]
	cmp r0, #0
	beq _080CE2E2
	bl sub_80CECE8
_080CE2E2:
	adds r0, r4, #0
	adds r0, #0x94
	ldr r0, [r0]
	cmp r0, #0
	beq _080CE2F0
	bl sub_80CE790
_080CE2F0:
	adds r0, r4, #0
	bl sub_80CD8A0
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_80CE2FC
sub_80CE2FC: @ 0x080CE2FC
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r7, r0, #0
	adds r4, r7, #0
	stm r4!, {r1}
	adds r0, r4, #0
	bl sub_8007874
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007B54
	str r0, [r4, #4]
	adds r4, r7, #0
	adds r4, #0xc
	adds r0, r4, #0
	bl sub_8007874
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007B54
	str r0, [r4, #4]
	adds r4, #8
	adds r0, r4, #0
	bl sub_8007128
	adds r0, r4, #0
	bl sub_800736C
	str r0, [r4, #4]
	adds r6, r7, #0
	adds r6, #0x1c
	ldr r1, _080CE3D8 @ =gUnknown_08527094
	adds r0, r6, #0
	bl sub_805E6CC
	adds r0, r7, #0
	adds r0, #0x4c
	movs r5, #0
	movs r4, #0
	strh r4, [r0]
	strh r4, [r0, #2]
	adds r0, #4
	adds r1, r6, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	adds r0, r7, #0
	adds r0, #0x64
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	adds r0, #0x1c
	strb r5, [r0]
	adds r0, #4
	strh r4, [r0]
	strh r4, [r0, #2]
	adds r0, #4
	adds r1, r6, #0
	movs r2, #1
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	adds r0, r7, #0
	adds r0, #0x9c
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	adds r0, #0x1c
	strb r5, [r0]
	adds r0, #4
	str r4, [r0]
	adds r5, r7, #0
	adds r5, #0xc0
	str r4, [r5, #4]
	movs r0, #0xc
	bl sub_80D01F8
	cmp r0, #0
	bne _080CE3C6
	movs r0, #0xc
	bl sub_80D3BC0
_080CE3C6:
	str r0, [r0]
	str r0, [r0, #4]
	str r0, [r5, #4]
	adds r0, r7, #0
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080CE3D8: .4byte gUnknown_08527094

	thumb_func_start sub_80CE3DC
sub_80CE3DC: @ 0x080CE3DC
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r6, r1, #0
	adds r0, #0xc0
	ldr r0, [r0, #4]
	ldr r1, [r0]
	str r1, [sp]
	str r0, [sp, #4]
	b _080CE40C
_080CE3F0:
	ldr r0, [sp]
	ldr r1, [r0, #8]
	cmp r1, #0
	beq _080CE404
	ldr r0, [r1, #8]
	ldr r2, [r0, #0xc]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080CE404:
	ldr r0, [sp]
	ldr r0, [r0]
	str r0, [sp]
	ldr r1, [sp, #4]
_080CE40C:
	eors r1, r0
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _080CE3F0
	adds r4, r5, #0
	adds r4, #0xc0
	adds r0, r4, #0
	bl sub_80E586C
	ldr r0, [r4, #4]
	cmp r0, #0
	beq _080CE42A
	bl sub_80D0260
_080CE42A:
	ldr r0, _080CE47C @ =gUnknown_080E5A28
	str r0, [r5, #0x1c]
	adds r4, r5, #0
	adds r4, #0x14
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	adds r4, r5, #4
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r0, #1
	ands r0, r6
	cmp r0, #0
	beq _080CE474
	adds r0, r5, #0
	bl sub_8000608
_080CE474:
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080CE47C: .4byte gUnknown_080E5A28

	thumb_func_start sub_80CE480
sub_80CE480: @ 0x080CE480
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	mov sl, r0
	mov r8, r1
	adds r5, r2, #0
	mov sb, r3
	ldr r6, [sp, #0x34]
	ldr r4, [sp, #0x38]
	ldr r7, [sp, #0x3c]
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x20
	bl sub_80005D4
	str r6, [sp]
	str r4, [sp, #4]
	str r7, [sp, #8]
	mov r1, r8
	adds r2, r5, #0
	mov r3, sb
	bl sub_804EA58
	adds r4, r0, #0
	mov r0, sl
	adds r0, #0xc0
	ldr r0, [r0, #4]
	str r0, [sp, #0x10]
	movs r0, #0xc
	bl sub_80D01F8
	adds r2, r0, #0
	cmp r2, #0
	bne _080CE4D6
	movs r0, #0xc
	bl sub_80D3BC0
	adds r2, r0, #0
_080CE4D6:
	adds r0, r2, #0
	adds r0, #8
	cmp r0, #0
	beq _080CE4E0
	str r4, [r2, #8]
_080CE4E0:
	ldr r0, [sp, #0x10]
	ldr r1, [r0, #4]
	str r0, [r2]
	str r1, [r2, #4]
	str r2, [r1]
	str r2, [r0, #4]
	str r2, [sp, #0xc]
	mov r1, sl
	ldr r0, [r1]
	bl sub_8008940
	ldr r1, [r0, #8]
	ldr r2, [r1, #0x10]
	adds r1, r4, #0
	bl sub_80D3914
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80CE510
sub_80CE510: @ 0x080CE510
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x10
	adds r7, r0, #0
	mov r8, r1
	mov sb, r2
	adds r5, r3, #0
	ldr r4, [sp, #0x2c]
	ldr r6, [sp, #0x30]
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x1c
	bl sub_80005D4
	str r4, [sp]
	str r6, [sp, #4]
	mov r1, r8
	mov r2, sb
	adds r3, r5, #0
	bl sub_804EE64
	adds r4, r0, #0
	adds r0, r7, #0
	adds r0, #0xc0
	ldr r0, [r0, #4]
	str r0, [sp, #0xc]
	movs r0, #0xc
	bl sub_80D01F8
	adds r2, r0, #0
	cmp r2, #0
	bne _080CE560
	movs r0, #0xc
	bl sub_80D3BC0
	adds r2, r0, #0
_080CE560:
	adds r0, r2, #0
	adds r0, #8
	cmp r0, #0
	beq _080CE56A
	str r4, [r2, #8]
_080CE56A:
	ldr r0, [sp, #0xc]
	ldr r1, [r0, #4]
	str r0, [r2]
	str r1, [r2, #4]
	str r2, [r1]
	str r2, [r0, #4]
	str r2, [sp, #8]
	ldr r0, [r7]
	bl sub_8008940
	ldr r1, [r0, #8]
	ldr r2, [r1, #0x10]
	adds r1, r4, #0
	bl sub_80D3914
	add sp, #0x10
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80CE598
sub_80CE598: @ 0x080CE598
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x60
	adds r6, r0, #0
	adds r0, #0x50
	ldr r1, [r6, #0x50]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r6, #0x54]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0xc
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	ldr r0, [r6]
	bl sub_8008910
	adds r5, r0, #0
	add r4, sp, #0x1c
	ldr r0, [sp, #0x1c]
	mov r8, r0
	adds r0, r6, #0
	adds r0, #0x14
	ldr r1, [r0, #4]
	bl sub_80074C0
	adds r2, r0, #0
	ldr r0, [sp, #0x1c]
	movs r3, #0
	cmp r0, #0
	beq _080CE5E2
	ldrh r3, [r4, #4]
_080CE5E2:
	str r5, [sp, #0x58]
	lsls r2, r2, #5
	ldr r1, _080CE638 @ =0x05000200
	adds r2, r2, r1
	add r0, sp, #0x2c
	mov r1, r8
	bl sub_8008F0C
	add r2, sp, #0x2c
	mov sb, r2
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080CE63C
	cmp r1, #0
	beq _080CE60E
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080CE60E:
	ldr r7, [sp, #0x58]
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	adds r0, r6, #0
	adds r0, #0x4c
	str r0, [sp, #0x4c]
	adds r1, r6, #0
	adds r1, #0x4e
	str r1, [sp, #0x50]
	adds r2, r6, #0
	adds r2, #0x84
	str r2, [sp, #0x44]
	adds r3, r6, #0
	adds r3, #0x86
	str r3, [sp, #0x48]
	adds r4, r6, #0
	adds r4, #0xbc
	str r4, [sp, #0x54]
	b _080CE722
	.align 2, 0
_080CE638: .4byte 0x05000200
_080CE63C:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x40]
	ldr r5, [sp, #0x58]
	ldr r0, [r5]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x3c]
	add r1, sp, #0x40
	add r0, sp, #0x3c
	cmp r4, #1
	bhs _080CE656
	adds r0, r1, #0
_080CE656:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CE674
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sl, r4
	cmp r0, #0
	bne _080CE678
	mov r0, sl
	bl sub_80D3BC0
	b _080CE678
_080CE674:
	movs r0, #0
	mov sl, r0
_080CE678:
	adds r5, r0, #0
	str r5, [sp, #0x5c]
	ldr r7, [sp, #0x58]
	ldr r2, [r7]
	adds r3, r5, #0
	adds r0, r6, #0
	adds r0, #0x4c
	str r0, [sp, #0x4c]
	adds r1, r6, #0
	adds r1, #0x4e
	str r1, [sp, #0x50]
	adds r4, r6, #0
	adds r4, #0x84
	str r4, [sp, #0x44]
	adds r5, r6, #0
	adds r5, #0x86
	str r5, [sp, #0x48]
	adds r7, r6, #0
	adds r7, #0xbc
	str r7, [sp, #0x54]
	cmp r2, r8
	beq _080CE6BC
_080CE6A4:
	cmp r3, #0
	beq _080CE6B4
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CE6B4:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _080CE6A4
_080CE6BC:
	adds r5, r3, #0
	ldr r0, [sp, #0x40]
	cmp r0, #1
	bne _080CE6D8
	cmp r5, #0
	beq _080CE6D4
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CE6D4:
	adds r5, #0x10
	b _080CE6FA
_080CE6D8:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080CE6F8
_080CE6E0:
	cmp r2, #0
	beq _080CE6F0
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CE6F0:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CE6E0
_080CE6F8:
	adds r5, r2, #0
_080CE6FA:
	ldr r7, [sp, #0x58]
	ldr r2, [r7, #4]
	ldr r0, [r7]
	adds r1, r0, #0
	cmp r0, r2
	beq _080CE70C
_080CE706:
	adds r1, #0x10
	cmp r1, r2
	bne _080CE706
_080CE70C:
	cmp r0, #0
	beq _080CE714
	bl sub_80D0260
_080CE714:
	ldr r0, [sp, #0x5c]
	add r0, sl
	ldr r1, [sp, #0x5c]
	ldr r2, [sp, #0x58]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_080CE722:
	movs r5, #0
	movs r1, #0xe8
	ldr r3, [sp, #0x4c]
	strh r1, [r3]
	movs r0, #0x28
	ldr r4, [sp, #0x50]
	strh r0, [r4]
	ldr r7, [sp, #0x44]
	strh r1, [r7]
	movs r0, #0x50
	ldr r1, [sp, #0x48]
	strh r0, [r1]
	ldr r2, [sp, #0x54]
	ldr r1, [r2]
	adds r1, #1
	ldr r2, _080CE784 @ =0x0600F0F6
	str r5, [sp]
	movs r4, #0x20
	str r4, [sp, #4]
	adds r0, r6, #0
	movs r3, #0x20
	bl sub_80CE510
	ldr r1, _080CE788 @ =0x0600F0F8
	movs r0, #1
	str r0, [sp]
	str r5, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r2, #0x2d
	movs r3, #1
	bl sub_80CE480
	ldr r2, _080CE78C @ =0x0600F0FA
	str r5, [sp]
	str r4, [sp, #4]
	adds r0, r6, #0
	movs r1, #8
	movs r3, #0x20
	bl sub_80CE510
	add sp, #0x60
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080CE784: .4byte 0x0600F0F6
_080CE788: .4byte 0x0600F0F8
_080CE78C: .4byte 0x0600F0FA

	thumb_func_start sub_80CE790
sub_80CE790: @ 0x080CE790
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x64
	adds r6, r0, #0
	adds r3, r6, #0
	adds r3, #0x80
	movs r1, #0
	movs r0, #1
	mov r8, r0
	mov r2, r8
	strb r2, [r3]
	adds r0, r6, #0
	adds r0, #0xb8
	strb r2, [r0]
	mov r0, sp
	movs r2, #0
	strh r1, [r0]
	strh r1, [r0, #2]
	strh r1, [r0, #4]
	strh r1, [r0, #6]
	strh r1, [r0, #8]
	str r1, [sp, #0xc]
	strb r2, [r0, #0x10]
	strb r2, [r0, #0x11]
	str r1, [sp, #0x14]
	strb r2, [r0, #0x18]
	ldrb r0, [r3]
	cmp r0, #0
	bne _080CE7D2
	b _080CE990
_080CE7D2:
	ldr r0, [r6]
	adds r0, #0x88
	ldr r0, [r0]
	adds r4, r6, #0
	adds r4, #0x50
	cmp r0, #3
	bne _080CE7E6
	adds r0, r4, #0
	bl sub_805E8F0
_080CE7E6:
	add r7, sp, #0x1c
	ldr r1, [r6, #0x50]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r0, [r6, #0x54]
	adds r0, r0, r2
	ldrh r2, [r0]
	adds r0, r7, #0
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	mov r1, sp
	adds r0, r6, #0
	adds r0, #0x64
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldr r0, [r0]
	str r0, [r1]
	mov r1, sp
	adds r0, r6, #0
	adds r0, #0x4c
	ldrh r0, [r0]
	strh r0, [r1]
	adds r0, r6, #0
	adds r0, #0x4e
	ldrh r0, [r0]
	strh r0, [r1, #2]
	mov r0, sp
	movs r4, #1
	mov r5, r8
	strh r5, [r0, #8]
	adds r0, r6, #0
	adds r0, #0x14
	ldr r1, [r0, #4]
	bl sub_80074C0
	mov r1, sp
	strh r0, [r1, #4]
	adds r5, r6, #4
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	mov r1, sp
	strh r0, [r1, #6]
	mov r0, sp
	strb r4, [r0, #0x18]
	ldr r0, [r6]
	bl sub_8008920
	ldr r1, [sp, #0x1c]
	movs r2, #0
	cmp r1, #0
	beq _080CE85A
	ldrh r2, [r7, #4]
_080CE85A:
	mov r3, sp
	bl sub_805E99C
	ldr r0, [r6]
	bl sub_8008910
	adds r4, r0, #0
	ldr r7, [sp, #0x24]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	adds r2, r0, #0
	add r1, sp, #0x24
	ldr r0, [sp, #0x24]
	movs r3, #0
	cmp r0, #0
	beq _080CE880
	ldrh r3, [r1, #4]
_080CE880:
	str r4, [sp, #0x5c]
	lsls r2, r2, #5
	ldr r0, _080CE8B8 @ =0x06010000
	adds r2, r2, r0
	add r0, sp, #0x3c
	adds r1, r7, #0
	bl sub_8008F0C
	add r1, sp, #0x3c
	mov sb, r1
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _080CE8BC
	cmp r1, #0
	beq _080CE8AC
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CE8AC:
	ldr r5, [sp, #0x5c]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080CE990
	.align 2, 0
_080CE8B8: .4byte 0x06010000
_080CE8BC:
	str r1, [sp, #0x60]
	mov r7, r8
	str r7, [sp, #0x50]
	ldr r1, [sp, #0x5c]
	ldr r0, [r1]
	ldr r2, [sp, #0x60]
	subs r0, r2, r0
	asrs r4, r0, #4
	str r4, [sp, #0x4c]
	add r1, sp, #0x50
	add r0, sp, #0x4c
	cmp r4, #1
	bhs _080CE8D8
	adds r0, r1, #0
_080CE8D8:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CE8F6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sl, r4
	cmp r0, #0
	bne _080CE8FA
	mov r0, sl
	bl sub_80D3BC0
	b _080CE8FA
_080CE8F6:
	movs r0, #0
	mov sl, r0
_080CE8FA:
	adds r4, r0, #0
	mov r8, r4
	ldr r3, [sp, #0x5c]
	ldr r2, [r3]
	mov r3, r8
	ldr r4, [sp, #0x60]
	cmp r2, r4
	beq _080CE924
_080CE90A:
	cmp r3, #0
	beq _080CE91A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CE91A:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x60]
	cmp r2, r5
	bne _080CE90A
_080CE924:
	adds r4, r3, #0
	ldr r0, [sp, #0x50]
	cmp r0, #1
	bne _080CE940
	cmp r4, #0
	beq _080CE93C
	adds r0, r4, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CE93C:
	adds r4, #0x10
	b _080CE968
_080CE940:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _080CE966
_080CE948:
	cmp r2, #0
	beq _080CE958
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CE958:
	movs r0, #1
	rsbs r0, r0, #0
	add ip, r0
	adds r2, #0x10
	mov r1, ip
	cmp r1, #0
	bne _080CE948
_080CE966:
	adds r4, r2, #0
_080CE968:
	ldr r3, [sp, #0x5c]
	ldr r2, [r3, #4]
	ldr r0, [r3]
	adds r1, r0, #0
	cmp r0, r2
	beq _080CE97A
_080CE974:
	adds r1, #0x10
	cmp r1, r2
	bne _080CE974
_080CE97A:
	cmp r0, #0
	beq _080CE982
	bl sub_80D0260
_080CE982:
	mov r0, sl
	add r0, r8
	mov r5, r8
	ldr r7, [sp, #0x5c]
	str r5, [r7]
	str r4, [r7, #4]
	str r0, [r7, #0xc]
_080CE990:
	adds r0, r6, #0
	adds r0, #0xb8
	ldrb r0, [r0]
	cmp r0, #0
	bne _080CE99C
	b _080CEB4C
_080CE99C:
	ldr r0, [r6]
	adds r0, #0x88
	ldr r0, [r0]
	adds r4, r6, #0
	adds r4, #0x88
	cmp r0, #3
	bne _080CE9B0
	adds r0, r4, #0
	bl sub_805E8F0
_080CE9B0:
	add r7, sp, #0x1c
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	adds r0, r6, #0
	adds r0, #0x8c
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	adds r0, r7, #0
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	mov r1, sp
	adds r0, r6, #0
	adds r0, #0x9c
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldr r0, [r0]
	str r0, [r1]
	mov r1, sp
	adds r0, r6, #0
	adds r0, #0x84
	ldrh r0, [r0]
	strh r0, [r1]
	adds r0, r6, #0
	adds r0, #0x86
	ldrh r0, [r0]
	strh r0, [r1, #2]
	mov r0, sp
	movs r4, #1
	movs r5, #1
	mov sb, r5
	mov r1, sb
	strh r1, [r0, #8]
	adds r0, r6, #0
	adds r0, #0x14
	ldr r1, [r0, #4]
	bl sub_80074C0
	mov r1, sp
	strh r0, [r1, #4]
	adds r5, r6, #0
	adds r5, #0xc
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	mov r1, sp
	strh r0, [r1, #6]
	mov r0, sp
	strb r4, [r0, #0x18]
	ldr r0, [r6]
	bl sub_8008920
	ldr r1, [sp, #0x1c]
	movs r2, #0
	cmp r1, #0
	beq _080CEA2E
	ldrh r2, [r7, #4]
_080CEA2E:
	mov r3, sp
	bl sub_805E99C
	ldr r0, [r6]
	bl sub_8008910
	adds r4, r0, #0
	ldr r6, [sp, #0x24]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007D4C
	adds r2, r0, #0
	add r1, sp, #0x24
	ldr r0, [sp, #0x24]
	movs r3, #0
	cmp r0, #0
	beq _080CEA54
	ldrh r3, [r1, #4]
_080CEA54:
	adds r5, r4, #0
	lsls r2, r2, #5
	ldr r4, _080CEA88 @ =0x06010000
	adds r2, r2, r4
	add r0, sp, #0x3c
	adds r1, r6, #0
	bl sub_8008F0C
	add r6, sp, #0x3c
	mov r8, r6
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080CEA8C
	cmp r1, #0
	beq _080CEA80
	adds r0, r1, #0
	mov r1, r8
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CEA80:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080CEB4C
	.align 2, 0
_080CEA88: .4byte 0x06010000
_080CEA8C:
	mov sl, r1
	mov r4, sb
	str r4, [sp, #0x58]
	ldr r0, [r5]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x54]
	add r1, sp, #0x58
	add r0, sp, #0x54
	cmp r4, #1
	bhs _080CEAA4
	adds r0, r1, #0
_080CEAA4:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CEAC2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080CEAC6
	mov r0, sb
	bl sub_80D3BC0
	b _080CEAC6
_080CEAC2:
	movs r0, #0
	mov sb, r0
_080CEAC6:
	adds r4, r0, #0
	str r4, [sp, #0x60]
	ldr r2, [r5]
	adds r3, r4, #0
	cmp r2, sl
	beq _080CEAEA
_080CEAD2:
	cmp r3, #0
	beq _080CEAE2
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CEAE2:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080CEAD2
_080CEAEA:
	adds r4, r3, #0
	ldr r0, [sp, #0x58]
	cmp r0, #1
	bne _080CEB06
	cmp r4, #0
	beq _080CEB02
	adds r0, r4, #0
	mov r1, r8
	ldm r1!, {r2, r6, r7}
	stm r0!, {r2, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CEB02:
	adds r4, #0x10
	b _080CEB28
_080CEB06:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080CEB26
_080CEB0E:
	cmp r2, #0
	beq _080CEB1E
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CEB1E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CEB0E
_080CEB26:
	adds r4, r2, #0
_080CEB28:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080CEB38
_080CEB32:
	adds r1, #0x10
	cmp r1, r2
	bne _080CEB32
_080CEB38:
	cmp r0, #0
	beq _080CEB40
	bl sub_80D0260
_080CEB40:
	ldr r0, [sp, #0x60]
	add r0, sb
	ldr r1, [sp, #0x60]
	str r1, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080CEB4C:
	add sp, #0x64
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
_080CEB5C:
	.byte 0x00, 0xB5, 0x82, 0xB0
	.byte 0x02, 0x1C, 0xBC, 0x32, 0x11, 0x60, 0x01, 0x31, 0x04, 0x4A, 0x00, 0x23, 0x00, 0x93, 0x20, 0x23
	.byte 0x01, 0x93, 0xFF, 0xF7, 0xCD, 0xFC, 0x02, 0xB0, 0x01, 0xBC, 0x00, 0x47, 0xF6, 0xF0, 0x00, 0x06

	thumb_func_start sub_80CEB80
sub_80CEB80: @ 0x080CEB80
	push {r4, lr}
	sub sp, #8
	adds r3, r0, #0
	adds r1, r3, #0
	adds r1, #0xbc
	ldr r0, [r1]
	cmp r0, #6
	bhi _080CEB94
	adds r0, #1
	b _080CEB96
_080CEB94:
	movs r0, #0
_080CEB96:
	str r0, [r1]
	adds r4, r3, #0
	adds r4, #0xbc
	ldr r1, [r4]
	adds r1, #1
	ldr r2, _080CEBBC @ =0x0600F0F6
	movs r0, #0
	str r0, [sp]
	movs r0, #0x20
	str r0, [sp, #4]
	adds r0, r3, #0
	movs r3, #0x20
	bl sub_80CE510
	ldr r0, [r4]
	add sp, #8
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080CEBBC: .4byte 0x0600F0F6

	thumb_func_start sub_80CEBC0
sub_80CEBC0: @ 0x080CEBC0
	push {r4, lr}
	sub sp, #8
	adds r3, r0, #0
	adds r1, r3, #0
	adds r1, #0xbc
	ldr r0, [r1]
	cmp r0, #0
	beq _080CEBD4
	subs r0, #1
	b _080CEBD6
_080CEBD4:
	movs r0, #7
_080CEBD6:
	str r0, [r1]
	adds r4, r3, #0
	adds r4, #0xbc
	ldr r1, [r4]
	adds r1, #1
	ldr r2, _080CEBFC @ =0x0600F0F6
	movs r0, #0
	str r0, [sp]
	movs r0, #0x20
	str r0, [sp, #4]
	adds r0, r3, #0
	movs r3, #0x20
	bl sub_80CE510
	ldr r0, [r4]
	add sp, #8
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080CEBFC: .4byte 0x0600F0F6

	thumb_func_start sub_80CEC00
sub_80CEC00: @ 0x080CEC00
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r4, r7, #0
	stm r4!, {r1}
	ldr r1, _080CEC80 @ =gUnknown_08754C0C
	adds r0, r4, #0
	bl sub_805E6CC
	movs r6, #0
	movs r5, #0
	strh r5, [r7, #0x34]
	strh r5, [r7, #0x36]
	adds r0, r7, #0
	adds r0, #0x38
	adds r1, r4, #0
	movs r2, #1
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	adds r0, r7, #0
	adds r0, #0x4c
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #4]
	strh r5, [r0, #6]
	strh r5, [r0, #8]
	str r5, [r0, #0xc]
	strb r6, [r0, #0x10]
	strb r6, [r0, #0x11]
	str r5, [r0, #0x14]
	strb r6, [r0, #0x18]
	adds r0, #0x1c
	strb r6, [r0]
	adds r4, r7, #0
	adds r4, #0x6c
	adds r0, r4, #0
	bl sub_8007874
	adds r0, r4, #0
	movs r1, #4
	bl sub_8007B54
	str r0, [r4, #4]
	adds r4, #8
	adds r0, r4, #0
	bl sub_8007128
	adds r0, r4, #0
	bl sub_800736C
	str r0, [r4, #4]
	movs r0, #0x12
	str r0, [r7, #0x7c]
	adds r0, r7, #0
	adds r0, #0x80
	str r5, [r0]
	adds r0, #4
	strb r6, [r0]
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080CEC80: .4byte gUnknown_08754C0C

	thumb_func_start sub_80CEC84
sub_80CEC84: @ 0x080CEC84
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r5, r0, #0
	adds r6, r1, #0
	adds r7, r2, #0
	adds r0, #0x84
	movs r1, #1
	strb r1, [r0]
	subs r0, #0x1c
	strb r1, [r0]
_080CEC98:
	adds r0, r5, #0
	adds r0, #0x38
	bl sub_805E8F0
	lsls r0, r0, #0x1d
	cmp r0, #0
	bge _080CEC98
	ldr r1, [r5]
	mov r4, sp
	mov r0, sp
	adds r2, r6, #0
	bl sub_80CE120
	mov r0, sp
	ldrb r0, [r0]
	adds r0, #8
	strh r0, [r5, #0x34]
	ldrb r0, [r4, #1]
	strh r0, [r5, #0x36]
	str r6, [r5, #0x7c]
	adds r0, r5, #0
	adds r0, #0x80
	str r7, [r0]
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80CECD0
sub_80CECD0: @ 0x080CECD0
	adds r2, r0, #0
	adds r0, #0x84
	movs r1, #0
	strb r1, [r0]
	subs r0, #0x1c
	strb r1, [r0]
	movs r0, #0x12
	str r0, [r2, #0x7c]
	adds r0, r2, #0
	adds r0, #0x80
	str r1, [r0]
	bx lr

	thumb_func_start sub_80CECE8
sub_80CECE8: @ 0x080CECE8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x6c
	mov r8, r0
	adds r0, #0x84
	ldrb r0, [r0]
	cmp r0, #0
	beq _080CED30
	mov r1, r8
	ldr r0, [r1]
	adds r0, #0x94
	ldr r0, [r0]
	cmp r0, #0
	beq _080CED30
	mov r2, r8
	adds r2, #0x80
	adds r0, #0xbc
	ldr r1, [r0]
	ldr r0, [r2]
	cmp r0, r1
	beq _080CED28
	mov r2, r8
	ldr r0, [r2, #0x7c]
	cmp r0, #9
	ble _080CED28
	mov r1, r8
	adds r1, #0x68
	movs r0, #0
	b _080CED2E
_080CED28:
	mov r1, r8
	adds r1, #0x68
	movs r0, #1
_080CED2E:
	strb r0, [r1]
_080CED30:
	mov r0, r8
	adds r0, #0x68
	ldrb r0, [r0]
	cmp r0, #0
	bne _080CED3C
	b _080CF040
_080CED3C:
	mov r3, r8
	ldr r0, [r3]
	adds r0, #0x88
	ldr r0, [r0]
	mov r4, r8
	adds r4, #0x38
	cmp r0, #3
	bne _080CED52
	adds r0, r4, #0
	bl sub_805E8F0
_080CED52:
	mov r5, r8
	ldr r1, [r5, #0x38]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r0, [r5, #0x3c]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sp
	ldr r3, [r3, #0x10]
	bl sub_80D3918
	add r6, sp, #0x20
	movs r1, #0
	movs r0, #0
	strh r0, [r6]
	strh r0, [r6, #2]
	strh r0, [r6, #4]
	strh r0, [r6, #6]
	strh r0, [r6, #8]
	str r0, [r6, #0xc]
	strb r1, [r6, #0x10]
	strb r1, [r6, #0x11]
	str r0, [r6, #0x14]
	strb r1, [r6, #0x18]
	mov r1, sp
	ldr r0, [sp]
	movs r2, #0
	cmp r0, #0
	beq _080CED90
	ldrh r2, [r1, #4]
_080CED90:
	cmp r2, #0
	bne _080CED96
	b _080CF040
_080CED96:
	adds r1, r6, #0
	mov r0, r8
	adds r0, #0x4c
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r4, r5, r7}
	stm r1!, {r4, r5, r7}
	ldr r0, [r0]
	str r0, [r1]
	mov r1, r8
	ldrh r0, [r1, #0x34]
	strh r0, [r6]
	ldrh r0, [r1, #0x36]
	strh r0, [r6, #2]
	movs r5, #1
	movs r2, #1
	mov sl, r2
	mov r3, sl
	strh r3, [r6, #8]
	mov r4, r8
	adds r4, #0x74
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80074C0
	strh r0, [r6, #4]
	mov r7, r8
	adds r7, #0x6c
	ldr r1, [r7, #4]
	adds r0, r7, #0
	bl sub_8007D4C
	strh r0, [r6, #6]
	strb r5, [r6, #0x18]
	mov r5, r8
	ldr r0, [r5]
	bl sub_8008920
	ldr r1, [sp]
	mov r3, sp
	movs r2, #0
	str r4, [sp, #0x5c]
	cmp r1, #0
	beq _080CEDF0
	ldrh r2, [r3, #4]
_080CEDF0:
	adds r3, r6, #0
	bl sub_805E99C
	mov r1, r8
	ldr r0, [r1]
	bl sub_8008910
	adds r5, r0, #0
	add r4, sp, #8
	ldr r2, [sp, #8]
	mov sb, r2
	ldr r1, [r7, #4]
	adds r0, r7, #0
	bl sub_8007D4C
	adds r2, r0, #0
	ldr r0, [sp, #8]
	movs r3, #0
	cmp r0, #0
	beq _080CEE1A
	ldrh r3, [r4, #4]
_080CEE1A:
	adds r6, r5, #0
	lsls r2, r2, #5
	ldr r4, _080CEE54 @ =0x06010000
	adds r2, r2, r4
	add r0, sp, #0x3c
	mov r1, sb
	bl sub_8008F0C
	add r5, sp, #0x3c
	mov sb, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080CEE58
	cmp r1, #0
	beq _080CEE46
	adds r0, r1, #0
	add r1, sp, #0x3c
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CEE46:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	mov r4, sp
	adds r4, #0x10
	str r4, [sp, #0x60]
	b _080CEF24
	.align 2, 0
_080CEE54: .4byte 0x06010000
_080CEE58:
	str r1, [sp, #0x64]
	mov r5, sl
	str r5, [sp, #0x50]
	ldr r0, [r6]
	adds r7, r1, #0
	subs r0, r7, r0
	asrs r4, r0, #4
	str r4, [sp, #0x4c]
	add r1, sp, #0x50
	add r0, sp, #0x4c
	cmp r4, #1
	bhs _080CEE72
	adds r0, r1, #0
_080CEE72:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CEE90
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sl, r4
	cmp r0, #0
	bne _080CEE94
	mov r0, sl
	bl sub_80D3BC0
	b _080CEE94
_080CEE90:
	movs r0, #0
	mov sl, r0
_080CEE94:
	adds r5, r0, #0
	str r5, [sp, #0x68]
	ldr r2, [r6]
	adds r3, r5, #0
	mov r0, sp
	adds r0, #0x10
	str r0, [sp, #0x60]
	ldr r1, [sp, #0x64]
	cmp r2, r1
	beq _080CEEC2
_080CEEA8:
	cmp r3, #0
	beq _080CEEB8
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CEEB8:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x64]
	cmp r2, r0
	bne _080CEEA8
_080CEEC2:
	adds r5, r3, #0
	ldr r0, [sp, #0x50]
	cmp r0, #1
	bne _080CEEDE
	cmp r5, #0
	beq _080CEEDA
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CEEDA:
	adds r5, #0x10
	b _080CEF00
_080CEEDE:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080CEEFE
_080CEEE6:
	cmp r2, #0
	beq _080CEEF6
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CEEF6:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CEEE6
_080CEEFE:
	adds r5, r2, #0
_080CEF00:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080CEF10
_080CEF0A:
	adds r1, #0x10
	cmp r1, r2
	bne _080CEF0A
_080CEF10:
	cmp r0, #0
	beq _080CEF18
	bl sub_80D0260
_080CEF18:
	ldr r0, [sp, #0x68]
	add r0, sl
	ldr r7, [sp, #0x68]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080CEF24:
	mov r1, r8
	ldr r0, [r1]
	bl sub_8008910
	adds r4, r0, #0
	ldr r5, [sp, #0x10]
	ldr r2, [sp, #0x5c]
	ldr r1, [r2, #4]
	adds r0, r2, #0
	bl sub_80074C0
	adds r2, r0, #0
	ldr r0, [sp, #0x10]
	movs r3, #0
	cmp r0, #0
	beq _080CEF48
	ldr r7, [sp, #0x60]
	ldrh r3, [r7, #4]
_080CEF48:
	adds r6, r4, #0
	lsls r2, r2, #5
	ldr r0, _080CEF7C @ =0x05000200
	adds r2, r2, r0
	add r0, sp, #0x3c
	adds r1, r5, #0
	bl sub_8008F0C
	add r1, sp, #0x3c
	mov r8, r1
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080CEF80
	cmp r1, #0
	beq _080CEF74
	adds r0, r1, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CEF74:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080CF040
	.align 2, 0
_080CEF7C: .4byte 0x05000200
_080CEF80:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x58]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x54]
	add r1, sp, #0x58
	add r0, sp, #0x54
	cmp r4, #1
	bhs _080CEF98
	adds r0, r1, #0
_080CEF98:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CEFB6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080CEFBA
	mov r0, sb
	bl sub_80D3BC0
	b _080CEFBA
_080CEFB6:
	movs r0, #0
	mov sb, r0
_080CEFBA:
	adds r5, r0, #0
	str r5, [sp, #0x68]
	ldr r2, [r6]
	adds r3, r5, #0
	cmp r2, sl
	beq _080CEFDE
_080CEFC6:
	cmp r3, #0
	beq _080CEFD6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CEFD6:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080CEFC6
_080CEFDE:
	adds r5, r3, #0
	ldr r0, [sp, #0x58]
	cmp r0, #1
	bne _080CEFFA
	cmp r5, #0
	beq _080CEFF6
	adds r0, r5, #0
	mov r1, r8
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CEFF6:
	adds r5, #0x10
	b _080CF01C
_080CEFFA:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080CF01A
_080CF002:
	cmp r2, #0
	beq _080CF012
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CF012:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CF002
_080CF01A:
	adds r5, r2, #0
_080CF01C:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080CF02C
_080CF026:
	adds r1, #0x10
	cmp r1, r2
	bne _080CF026
_080CF02C:
	cmp r0, #0
	beq _080CF034
	bl sub_80D0260
_080CF034:
	ldr r0, [sp, #0x68]
	add r0, sb
	ldr r1, [sp, #0x68]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080CF040:
	add sp, #0x6c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80CF050
sub_80CF050: @ 0x080CF050
	ldr r0, [r0, #0x7c]
	bx lr

	thumb_func_start sub_80CF054
sub_80CF054: @ 0x080CF054
	adds r0, #0x80
	ldr r0, [r0]
	bx lr
	.align 2, 0

	thumb_func_start sub_80CF05C
sub_80CF05C: @ 0x080CF05C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	mov sb, r0
	adds r7, r1, #0
	adds r4, r2, #0
	lsls r3, r3, #0x18
	lsrs r5, r3, #0x18
	adds r0, r4, #0
	bl sub_800DB30
	adds r1, r0, #0
	movs r0, #0
	mov sl, r0
	mov r0, sl
	strb r0, [r7]
	cmp r1, #0x50
	beq _080CF088
	b _080CF2B8
_080CF088:
	cmp r5, #0
	bne _080CF08E
	b _080CF660
_080CF08E:
	mov r1, sb
	ldr r0, [r1, #8]
	ldr r4, _080CF29C @ =0x00001BD8
	adds r0, r0, r4
	bl sub_800E4F0
	adds r5, r0, #0
	mov r1, sb
	ldr r0, [r1, #8]
	adds r0, r0, r4
	bl sub_800E4FC
	adds r6, r0, #0
	mov r1, sb
	ldr r0, [r1, #8]
	adds r0, r0, r4
	bl sub_800E51C
	adds r4, r0, #0
	adds r0, r5, #0
	mov r1, sp
	movs r2, #3
	bl sub_804EC84
	add r1, sp, #8
	adds r0, r6, #0
	movs r2, #3
	bl sub_804EC84
	add r1, sp, #0x10
	adds r0, r4, #0
	movs r2, #3
	bl sub_804EC84
	ldr r0, _080CF2A0 @ =gUnknown_081179AC
	mov r8, r0
	adds r0, r7, #0
	bl sub_80D3B78
	adds r6, r7, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080CF104
	mov r0, r8
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF0F4
	adds r4, r5, #0
_080CF0F4:
	adds r0, r6, #0
	mov r1, r8
	adds r2, r4, #0
	bl sub_80D3994
	adds r0, r6, r4
	mov r1, sl
	strb r1, [r0]
_080CF104:
	mov sb, r7
	ldr r0, _080CF2A4 @ =gUnknown_081179BC
	mov r8, r0
	adds r0, r7, #0
	bl sub_80D3B78
	adds r6, r7, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080CF138
	mov r0, r8
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF128
	adds r4, r5, #0
_080CF128:
	adds r0, r6, #0
	mov r1, r8
	adds r2, r4, #0
	bl sub_80D3994
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_080CF138:
	mov r6, sb
	adds r0, r6, #0
	bl sub_80D3B78
	adds r1, r6, r0
	mov r8, r1
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080CF16C
	mov r0, sp
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF15A
	adds r4, r5, #0
_080CF15A:
	mov r0, r8
	mov r1, sp
	adds r2, r4, #0
	bl sub_80D3994
	mov r0, r8
	adds r1, r0, r4
	movs r0, #0
	strb r0, [r1]
_080CF16C:
	ldr r1, _080CF2A8 @ =gUnknown_081179C4
	mov sb, r1
	adds r0, r6, #0
	bl sub_80D3B78
	adds r1, r6, r0
	mov r8, r1
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080CF1A2
	mov r0, sb
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF190
	adds r4, r5, #0
_080CF190:
	mov r0, r8
	mov r1, sb
	adds r2, r4, #0
	bl sub_80D3994
	mov r0, r8
	adds r1, r0, r4
	movs r0, #0
	strb r0, [r1]
_080CF1A2:
	adds r0, r6, #0
	bl sub_80D3B78
	adds r1, r6, r0
	mov r8, r1
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080CF1D4
	add r0, sp, #0x10
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF1C2
	adds r4, r5, #0
_080CF1C2:
	mov r0, r8
	add r1, sp, #0x10
	adds r2, r4, #0
	bl sub_80D3994
	mov r0, r8
	adds r1, r0, r4
	movs r0, #0
	strb r0, [r1]
_080CF1D4:
	ldr r1, _080CF2AC @ =gUnknown_081179C8
	mov sb, r1
	adds r0, r6, #0
	bl sub_80D3B78
	adds r1, r6, r0
	mov r8, r1
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080CF20A
	mov r0, sb
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF1F8
	adds r4, r5, #0
_080CF1F8:
	mov r0, r8
	mov r1, sb
	adds r2, r4, #0
	bl sub_80D3994
	mov r0, r8
	adds r1, r0, r4
	movs r0, #0
	strb r0, [r1]
_080CF20A:
	ldr r1, _080CF2B0 @ =gUnknown_081179CC
	mov sb, r1
	adds r0, r6, #0
	bl sub_80D3B78
	adds r1, r6, r0
	mov r8, r1
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080CF240
	mov r0, sb
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF22E
	adds r4, r5, #0
_080CF22E:
	mov r0, r8
	mov r1, sb
	adds r2, r4, #0
	bl sub_80D3994
	mov r0, r8
	adds r1, r0, r4
	movs r0, #0
	strb r0, [r1]
_080CF240:
	adds r0, r6, #0
	bl sub_80D3B78
	adds r1, r6, r0
	mov r8, r1
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080CF272
	add r0, sp, #8
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF260
	adds r4, r5, #0
_080CF260:
	mov r0, r8
	add r1, sp, #8
	adds r2, r4, #0
	bl sub_80D3994
	mov r0, r8
	adds r1, r0, r4
	movs r0, #0
	strb r0, [r1]
_080CF272:
	ldr r1, _080CF2B4 @ =gUnknown_081179D8
	mov r8, r1
	adds r0, r6, #0
	bl sub_80D3B78
	adds r6, r6, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	bne _080CF288
	b _080CF654
_080CF288:
	mov r0, r8
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF296
	adds r4, r5, #0
_080CF296:
	adds r0, r6, #0
	mov r1, r8
	b _080CF648
	.align 2, 0
_080CF29C: .4byte 0x00001BD8
_080CF2A0: .4byte gUnknown_081179AC
_080CF2A4: .4byte gUnknown_081179BC
_080CF2A8: .4byte gUnknown_081179C4
_080CF2AC: .4byte gUnknown_081179C8
_080CF2B0: .4byte gUnknown_081179CC
_080CF2B4: .4byte gUnknown_081179D8
_080CF2B8:
	cmp r1, #0x4c
	bne _080CF344
	mov r1, sb
	ldr r0, [r1, #8]
	ldr r1, _080CF338 @ =0x00001BD8
	adds r0, r0, r1
	bl sub_800E958
	mov r1, sp
	movs r2, #0xa
	bl sub_804EC84
	ldr r0, _080CF33C @ =gUnknown_081179E0
	mov r8, r0
	adds r0, r7, #0
	bl sub_80D3B78
	adds r6, r7, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080CF302
	mov r0, r8
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF2F2
	adds r4, r5, #0
_080CF2F2:
	adds r0, r6, #0
	mov r1, r8
	adds r2, r4, #0
	bl sub_80D3994
	adds r0, r6, r4
	mov r1, sl
	strb r1, [r0]
_080CF302:
	mov r8, r7
	adds r0, r7, #0
	bl sub_80D3B78
	adds r6, r7, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080CF332
	mov r0, sp
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF322
	adds r4, r5, #0
_080CF322:
	adds r0, r6, #0
	mov r1, sp
	adds r2, r4, #0
	bl sub_80D3994
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_080CF332:
	ldr r0, _080CF340 @ =gUnknown_081179F0
	b _080CF622
	.align 2, 0
_080CF338: .4byte 0x00001BD8
_080CF33C: .4byte gUnknown_081179E0
_080CF340: .4byte gUnknown_081179F0
_080CF344:
	cmp r1, #0
	beq _080CF358
	cmp r1, #8
	beq _080CF358
	cmp r1, #0x10
	beq _080CF358
	cmp r1, #0x18
	beq _080CF358
	cmp r1, #0x28
	bne _080CF440
_080CF358:
	mov r1, sb
	ldr r0, [r1, #8]
	ldr r1, _080CF438 @ =0x00001BD8
	adds r0, r0, r1
	ldrb r1, [r4]
	bl sub_800E550
	adds r1, r0, #0
	add r0, sp, #0x18
	strb r1, [r0]
	bl sub_800DB8C
	adds r6, r0, #0
	ldr r0, _080CF43C @ =gUnknown_081179F8
	mov sb, r0
	adds r0, r7, #0
	bl sub_80D3B78
	adds r1, r7, r0
	mov r8, r1
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080CF3A8
	mov r0, sb
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF396
	adds r4, r5, #0
_080CF396:
	mov r0, r8
	mov r1, sb
	adds r2, r4, #0
	bl sub_80D3994
	mov r0, r8
	adds r1, r0, r4
	movs r0, #0
	strb r0, [r1]
_080CF3A8:
	ldrb r0, [r6]
	cmp r0, #0xd
	beq _080CF3D2
	movs r5, #0
_080CF3B0:
	ldrb r4, [r6]
	adds r6, #1
	cmp r4, #0
	beq _080CF3CC
	adds r0, r7, #0
	bl sub_80D3B78
	adds r1, r0, #1
	cmp r1, #0x63
	bhi _080CF3CC
	adds r0, r7, r0
	strb r4, [r0]
	adds r0, r7, r1
	strb r5, [r0]
_080CF3CC:
	ldrb r0, [r6]
	cmp r0, #0xd
	bne _080CF3B0
_080CF3D2:
	ldr r1, _080CF43C @ =gUnknown_081179F8
	mov sb, r1
	adds r0, r7, #0
	bl sub_80D3B78
	adds r1, r7, r0
	mov r8, r1
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080CF408
	mov r0, sb
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF3F6
	adds r4, r5, #0
_080CF3F6:
	mov r0, r8
	mov r1, sb
	adds r2, r4, #0
	bl sub_80D3994
	mov r0, r8
	adds r1, r0, r4
	movs r0, #0
	strb r0, [r1]
_080CF408:
	ldrb r0, [r6]
	cmp r0, #0
	bne _080CF410
	b _080CF654
_080CF410:
	movs r5, #0
_080CF412:
	ldrb r4, [r6]
	adds r6, #1
	cmp r4, #0
	beq _080CF42E
	adds r0, r7, #0
	bl sub_80D3B78
	adds r1, r0, #1
	cmp r1, #0x63
	bhi _080CF42E
	adds r0, r7, r0
	strb r4, [r0]
	adds r0, r7, r1
	strb r5, [r0]
_080CF42E:
	ldrb r0, [r6]
	cmp r0, #0
	bne _080CF412
	b _080CF654
	.align 2, 0
_080CF438: .4byte 0x00001BD8
_080CF43C: .4byte gUnknown_081179F8
_080CF440:
	cmp r1, #0x20
	beq _080CF446
	b _080CF594
_080CF446:
	mov r1, sb
	ldr r0, [r1, #8]
	ldr r1, _080CF588 @ =0x00001BD8
	adds r0, r0, r1
	ldrb r1, [r4]
	bl sub_800E550
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x19
	strb r1, [r0]
	bl sub_800DB8C
	adds r6, r0, #0
	adds r0, r7, #0
	bl sub_80D3B78
	adds r1, r7, r0
	mov r8, r1
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080CF494
	ldr r0, _080CF58C @ =gUnknown_081179F8
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF482
	adds r4, r5, #0
_080CF482:
	mov r0, r8
	ldr r1, _080CF58C @ =gUnknown_081179F8
	adds r2, r4, #0
	bl sub_80D3994
	mov r1, r8
	adds r0, r1, r4
	mov r1, sl
	strb r1, [r0]
_080CF494:
	ldrb r0, [r6]
	cmp r0, #0xd
	beq _080CF4BE
	movs r5, #0
_080CF49C:
	ldrb r4, [r6]
	adds r6, #1
	cmp r4, #0
	beq _080CF4B8
	adds r0, r7, #0
	bl sub_80D3B78
	adds r1, r0, #1
	cmp r1, #0x63
	bhi _080CF4B8
	adds r0, r7, r0
	strb r4, [r0]
	adds r0, r7, r1
	strb r5, [r0]
_080CF4B8:
	ldrb r0, [r6]
	cmp r0, #0xd
	bne _080CF49C
_080CF4BE:
	ldr r0, _080CF58C @ =gUnknown_081179F8
	mov sl, r0
	adds r0, r7, #0
	bl sub_80D3B78
	adds r1, r7, r0
	mov r8, r1
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080CF4F4
	mov r0, sl
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF4E2
	adds r4, r5, #0
_080CF4E2:
	mov r0, r8
	mov r1, sl
	adds r2, r4, #0
	bl sub_80D3994
	mov r0, r8
	adds r1, r0, r4
	movs r0, #0
	strb r0, [r1]
_080CF4F4:
	ldrb r0, [r6]
	cmp r0, #0
	beq _080CF51E
	movs r5, #0
_080CF4FC:
	ldrb r4, [r6]
	adds r6, #1
	cmp r4, #0
	beq _080CF518
	adds r0, r7, #0
	bl sub_80D3B78
	adds r1, r0, #1
	cmp r1, #0x63
	bhi _080CF518
	adds r0, r7, r0
	strb r4, [r0]
	adds r0, r7, r1
	strb r5, [r0]
_080CF518:
	ldrb r0, [r6]
	cmp r0, #0
	bne _080CF4FC
_080CF51E:
	mov r1, sb
	ldr r0, [r1, #8]
	ldr r1, _080CF588 @ =0x00001BD8
	adds r0, r0, r1
	bl sub_800E94C
	mov r1, sp
	movs r2, #3
	bl sub_804EC84
	adds r0, r7, #0
	bl sub_80D3B78
	adds r6, r7, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080CF560
	mov r0, sp
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF550
	adds r4, r5, #0
_080CF550:
	adds r0, r6, #0
	mov r1, sp
	adds r2, r4, #0
	bl sub_80D3994
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_080CF560:
	ldr r0, _080CF590 @ =gUnknown_081179FC
	mov r8, r0
	adds r0, r7, #0
	bl sub_80D3B78
	adds r6, r7, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080CF654
	mov r0, r8
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF582
	adds r4, r5, #0
_080CF582:
	adds r0, r6, #0
	mov r1, r8
	b _080CF648
	.align 2, 0
_080CF588: .4byte 0x00001BD8
_080CF58C: .4byte gUnknown_081179F8
_080CF590: .4byte gUnknown_081179FC
_080CF594:
	adds r0, r1, #0
	subs r0, #0x21
	cmp r0, #3
	bls _080CF5A4
	cmp r1, #0x26
	beq _080CF5A4
	cmp r1, #0x27
	bne _080CF660
_080CF5A4:
	mov r1, sb
	ldr r0, [r1, #8]
	ldr r1, _080CF658 @ =0x00001BD8
	adds r0, r0, r1
	bl sub_800E94C
	mov r1, sp
	movs r2, #3
	bl sub_804EC84
	adds r0, r4, #0
	bl sub_800DB8C
	mov r8, r0
	mov r4, r8
	adds r0, r7, #0
	bl sub_80D3B78
	adds r6, r7, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080CF5F0
	adds r0, r4, #0
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF5E0
	adds r4, r5, #0
_080CF5E0:
	adds r0, r6, #0
	mov r1, r8
	adds r2, r4, #0
	bl sub_80D3994
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_080CF5F0:
	mov r8, r7
	adds r0, r7, #0
	bl sub_80D3B78
	adds r6, r7, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080CF620
	mov r0, sp
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF610
	adds r4, r5, #0
_080CF610:
	adds r0, r6, #0
	mov r1, sp
	adds r2, r4, #0
	bl sub_80D3994
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_080CF620:
	ldr r0, _080CF65C @ =gUnknown_081179FC
_080CF622:
	mov sb, r0
	mov r0, r8
	bl sub_80D3B78
	mov r1, r8
	adds r6, r1, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080CF654
	mov r0, sb
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF644
	adds r4, r5, #0
_080CF644:
	adds r0, r6, #0
	mov r1, sb
_080CF648:
	adds r2, r4, #0
	bl sub_80D3994
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_080CF654:
	mov sl, r7
	b _080CF668
	.align 2, 0
_080CF658: .4byte 0x00001BD8
_080CF65C: .4byte gUnknown_081179FC
_080CF660:
	adds r0, r4, #0
	bl sub_800DB8C
	mov sl, r0
_080CF668:
	mov r0, sl
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80CF67C
sub_80CF67C: @ 0x080CF67C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	adds r7, r0, #0
	adds r6, r1, #0
	adds r5, r2, #0
	movs r4, #0
	strb r4, [r6]
	adds r0, r5, #0
	bl sub_800F204
	cmp r0, #5
	bls _080CF69E
	b _080CFA14
_080CF69E:
	lsls r0, r0, #2
	ldr r1, _080CF6A8 @ =_080CF6AC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080CF6A8: .4byte _080CF6AC
_080CF6AC: @ jump table
	.4byte _080CF6C4 @ case 0
	.4byte _080CF6F2 @ case 1
	.4byte _080CF782 @ case 2
	.4byte _080CF7E8 @ case 3
	.4byte _080CF910 @ case 4
	.4byte _080CFA14 @ case 5
_080CF6C4:
	adds r0, r5, #0
	bl sub_800F388
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080CF6E0
	mov r0, sp
	adds r1, r5, #0
	bl sub_800F20C
	mov r0, sp
	bl sub_800DCB8
	b _080CF70E
_080CF6E0:
	mov r0, sp
	adds r1, r5, #0
	bl sub_800F20C
	mov r0, sp
	bl sub_800DDD4
	adds r4, r0, #0
	b _080CFA14
_080CF6F2:
	adds r0, r5, #0
	bl sub_800F388
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080CF76C
	adds r0, r5, #0
	bl sub_800F258
	adds r1, r0, #0
	add r0, sp, #0x10
	strb r1, [r0]
	bl sub_800DF58
_080CF70E:
	adds r5, r0, #0
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, #0x63
	bls _080CF71C
	movs r4, #0x63
_080CF71C:
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_80D3994
	adds r0, r6, r4
	movs r1, #0
	mov sb, r1
	strb r1, [r0]
	ldr r0, _080CF768 @ =gUnknown_08117AA4
	ldr r0, [r0]
	mov r8, r0
	adds r0, r6, #0
	bl sub_80D3B78
	adds r7, r6, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	bne _080CF746
	b _080CFA12
_080CF746:
	mov r0, r8
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF754
	adds r4, r5, #0
_080CF754:
	adds r0, r7, #0
	mov r1, r8
	adds r2, r4, #0
	bl sub_80D3994
	adds r0, r7, r4
	mov r1, sb
_080CF762:
	strb r1, [r0]
	b _080CFA12
	.align 2, 0
_080CF768: .4byte gUnknown_08117AA4
_080CF76C:
	adds r0, r5, #0
	bl sub_800F258
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x11
	strb r1, [r0]
	bl sub_800DFD4
	adds r4, r0, #0
	b _080CFA14
_080CF782:
	ldr r0, [r7, #8]
	ldr r1, _080CF794 @ =0x00001C70
	adds r0, r0, r1
	bl sub_809BB34
	cmp r0, #1
	bne _080CF79C
	ldr r5, _080CF798 @ =gUnknown_08117A0C
	b _080CF79E
	.align 2, 0
_080CF794: .4byte 0x00001C70
_080CF798: .4byte gUnknown_08117A0C
_080CF79C:
	ldr r5, _080CF7E0 @ =gUnknown_08117A14
_080CF79E:
	adds r0, r5, #0
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, #0x63
	bls _080CF7AC
	movs r4, #0x63
_080CF7AC:
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_80D3994
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
	ldr r0, [r7, #8]
	ldr r1, _080CF7E4 @ =0x00001C70
	adds r0, r0, r1
	bl sub_809B1F4
	mov r8, r0
	mov r4, r8
	adds r0, r6, #0
	bl sub_80D3B78
	adds r7, r6, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	bne _080CF7DC
	b _080CFA12
_080CF7DC:
	adds r0, r4, #0
	b _080CF9F6
	.align 2, 0
_080CF7E0: .4byte gUnknown_08117A14
_080CF7E4: .4byte 0x00001C70
_080CF7E8:
	ldr r4, [r7, #8]
	movs r0, #0x82
	lsls r0, r0, #3
	adds r4, r4, r0
	adds r0, r5, #0
	bl sub_800F344
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_800C894
	mov sb, r0
	bl sub_809BCAC
	cmp r0, #1
	bne _080CF810
	ldr r5, _080CF80C @ =gUnknown_08117A1C
	b _080CF812
	.align 2, 0
_080CF80C: .4byte gUnknown_08117A1C
_080CF810:
	ldr r5, _080CF888 @ =gUnknown_08117A28
_080CF812:
	adds r0, r5, #0
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, #0x63
	bls _080CF820
	movs r4, #0x63
_080CF820:
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_80D3994
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
	mov r0, sb
	bl sub_809B1F4
	mov r8, r0
	mov r4, r8
	adds r0, r6, #0
	bl sub_80D3B78
	adds r7, r6, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080CF868
	adds r0, r4, #0
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF858
	adds r4, r5, #0
_080CF858:
	adds r0, r7, #0
	mov r1, r8
	adds r2, r4, #0
	bl sub_80D3994
	adds r1, r7, r4
	movs r0, #0
	strb r0, [r1]
_080CF868:
	mov r0, sb
	bl sub_809B50C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sl, r0
	cmp r0, #0
	beq _080CF890
	ldr r1, _080CF88C @ =gUnknown_08117A30
	mov r8, r1
	adds r0, r6, #0
	bl sub_80D3B78
	adds r7, r6, r0
	b _080CF9EC
	.align 2, 0
_080CF888: .4byte gUnknown_08117A28
_080CF88C: .4byte gUnknown_08117A30
_080CF890:
	mov r0, sb
	bl sub_809B504
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #0
	beq _080CF8D8
	ldr r0, _080CF8D4 @ =gUnknown_08117A38
	mov r8, r0
	adds r0, r6, #0
	bl sub_80D3B78
	adds r7, r6, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	bne _080CF8B6
	b _080CFA12
_080CF8B6:
	mov r0, r8
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF8C4
	adds r4, r5, #0
_080CF8C4:
	adds r0, r7, #0
	mov r1, r8
	adds r2, r4, #0
	bl sub_80D3994
	adds r0, r7, r4
	mov r1, sl
	b _080CF762
	.align 2, 0
_080CF8D4: .4byte gUnknown_08117A38
_080CF8D8:
	ldr r0, _080CF90C @ =gUnknown_08117A44
	mov sb, r0
	adds r0, r6, #0
	bl sub_80D3B78
	adds r7, r6, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	bne _080CF8EE
	b _080CFA12
_080CF8EE:
	mov r0, sb
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF8FC
	adds r4, r5, #0
_080CF8FC:
	adds r0, r7, #0
	mov r1, sb
	adds r2, r4, #0
	bl sub_80D3994
	adds r0, r7, r4
	mov r1, r8
	b _080CF762
	.align 2, 0
_080CF90C: .4byte gUnknown_08117A44
_080CF910:
	ldr r5, _080CFA28 @ =gUnknown_08117A50
	adds r0, r5, #0
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, #0x63
	bls _080CF920
	movs r4, #0x63
_080CF920:
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_80D3994
	adds r0, r6, r4
	movs r1, #0
	mov sb, r1
	strb r1, [r0]
	ldr r0, [r7, #8]
	movs r1, #0xe5
	lsls r1, r1, #5
	adds r0, r0, r1
	bl sub_800FFD0
	add r1, sp, #4
	movs r2, #0
	bl sub_804EC84
	ldr r0, _080CFA2C @ =gUnknown_08117A5C
	mov r8, r0
	adds r0, r6, #0
	bl sub_80D3B78
	adds r7, r6, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080CF978
	mov r0, r8
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF968
	adds r4, r5, #0
_080CF968:
	adds r0, r7, #0
	mov r1, r8
	adds r2, r4, #0
	bl sub_80D3994
	adds r0, r7, r4
	mov r1, sb
	strb r1, [r0]
_080CF978:
	mov sb, r6
	ldr r0, _080CFA30 @ =gUnknown_08117A78
	mov r8, r0
	adds r0, r6, #0
	bl sub_80D3B78
	adds r7, r6, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080CF9AC
	mov r0, r8
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF99C
	adds r4, r5, #0
_080CF99C:
	adds r0, r7, #0
	mov r1, r8
	adds r2, r4, #0
	bl sub_80D3994
	adds r1, r7, r4
	movs r0, #0
	strb r0, [r1]
_080CF9AC:
	mov r7, sb
	adds r0, r7, #0
	bl sub_80D3B78
	adds r1, r7, r0
	mov r8, r1
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080CF9E0
	add r0, sp, #4
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CF9CE
	adds r4, r5, #0
_080CF9CE:
	mov r0, r8
	add r1, sp, #4
	adds r2, r4, #0
	bl sub_80D3994
	mov r0, r8
	adds r1, r0, r4
	movs r0, #0
	strb r0, [r1]
_080CF9E0:
	ldr r1, _080CFA34 @ =gUnknown_08117A84
	mov r8, r1
	adds r0, r7, #0
	bl sub_80D3B78
	adds r7, r7, r0
_080CF9EC:
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080CFA12
	mov r0, r8
_080CF9F6:
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CFA02
	adds r4, r5, #0
_080CFA02:
	adds r0, r7, #0
	mov r1, r8
	adds r2, r4, #0
	bl sub_80D3994
	adds r1, r7, r4
	movs r0, #0
	strb r0, [r1]
_080CFA12:
	adds r4, r6, #0
_080CFA14:
	adds r0, r4, #0
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080CFA28: .4byte gUnknown_08117A50
_080CFA2C: .4byte gUnknown_08117A5C
_080CFA30: .4byte gUnknown_08117A78
_080CFA34: .4byte gUnknown_08117A84

	thumb_func_start sub_80CFA38
sub_80CFA38: @ 0x080CFA38
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0xc
	adds r6, r1, #0
	str r2, [sp]
	movs r0, #0
	mov sb, r0
	mov r1, sb
	strb r1, [r6]
	mov r0, sp
	bl sub_800F09C
	cmp r0, #0
	beq _080CFA5E
	cmp r0, #1
	beq _080CFA8E
	b _080CFB18
_080CFA5E:
	mov r0, sp
	bl sub_800F11C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080CFA7C
	add r4, sp, #4
	adds r0, r4, #0
	mov r1, sp
	bl sub_800F0A4
	adds r0, r4, #0
	bl sub_800DCB8
	b _080CFAAA
_080CFA7C:
	add r4, sp, #4
	adds r0, r4, #0
	mov r1, sp
	bl sub_800F0A4
	adds r0, r4, #0
	bl sub_800DDD4
	b _080CFB16
_080CFA8E:
	mov r0, sp
	bl sub_800F11C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080CFB04
	mov r0, sp
	bl sub_800F0E8
	adds r1, r0, #0
	add r0, sp, #8
	strb r1, [r0]
	bl sub_800DF58
_080CFAAA:
	adds r5, r0, #0
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, #0x63
	bls _080CFAB8
	movs r4, #0x63
_080CFAB8:
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_80D3994
	adds r0, r6, r4
	mov r1, sb
	strb r1, [r0]
	ldr r0, _080CFB00 @ =gUnknown_08117AA4
	ldr r0, [r0]
	mov r8, r0
	adds r0, r6, #0
	bl sub_80D3B78
	adds r7, r6, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080CFAFC
	mov r0, r8
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, r5
	bls _080CFAEC
	adds r4, r5, #0
_080CFAEC:
	adds r0, r7, #0
	mov r1, r8
	adds r2, r4, #0
	bl sub_80D3994
	adds r0, r7, r4
	mov r1, sb
	strb r1, [r0]
_080CFAFC:
	mov sb, r6
	b _080CFB18
	.align 2, 0
_080CFB00: .4byte gUnknown_08117AA4
_080CFB04:
	mov r0, sp
	bl sub_800F0E8
	adds r1, r0, #0
	mov r0, sp
	adds r0, #9
	strb r1, [r0]
	bl sub_800DFD4
_080CFB16:
	mov sb, r0
_080CFB18:
	mov r0, sb
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_80CFB28
sub_80CFB28: @ 0x080CFB28
	push {r4, r5, r6, r7, lr}
	adds r6, r0, #0
	bl sub_80A4A94
	adds r1, r6, #0
	adds r1, #0x90
	ldr r0, _080CFB58 @ =gUnknown_080E85E8
	str r0, [r1]
	adds r4, r6, #0
	adds r4, #0x94
	movs r5, #0x53
	movs r7, #1
	rsbs r7, r7, #0
_080CFB42:
	adds r0, r4, #0
	bl sub_8009F8C
	adds r4, #4
	subs r5, #1
	cmp r5, r7
	bne _080CFB42
	adds r0, r6, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080CFB58: .4byte gUnknown_080E85E8

	thumb_func_start sub_80CFB5C
sub_80CFB5C: @ 0x080CFB5C
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r2, #0
	ldr r0, [r5, #4]
	bl sub_80A4698
	ldr r0, [r0, #4]
	lsls r4, r4, #2
	adds r1, r5, #0
	adds r1, #0x1c
	adds r4, r1, r4
	ldr r1, [r4]
	bl sub_80D102C
	ldr r0, [r5, #4]
	cmp r0, #0x3e
	bne _080CFB9E
	ldr r0, _080CFBA4 @ =gUnknown_086D6368
	ldr r1, [r4]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r1, r1, r2
	movs r2, #0x60
	bl sub_8008E64
	ldr r0, _080CFBA8 @ =gUnknown_08699FF4
	ldr r1, [r4]
	movs r2, #0xb0
	lsls r2, r2, #1
	adds r1, r1, r2
	movs r2, #0x80
	bl sub_8008E64
_080CFB9E:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080CFBA4: .4byte gUnknown_086D6368
_080CFBA8: .4byte gUnknown_08699FF4

	thumb_func_start sub_80CFBAC
sub_80CFBAC: @ 0x080CFBAC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	str r0, [sp, #4]
	bl sub_80A5CC0
	ldr r1, [sp, #4]
	ldr r0, [r1, #4]
	cmp r0, #0x3e
	bne _080CFC6A
	movs r0, #0
	mov sl, r0
	adds r7, r1, #0
	adds r7, #0x94
_080CFBCE:
	movs r4, #0
	mov r1, sl
	lsls r1, r1, #1
	mov sb, r1
	movs r0, #1
	add r0, sl
	mov r8, r0
	mov r1, sl
	subs r1, #1
	str r1, [sp, #8]
	mov r5, r8
_080CFBE4:
	mov r0, sb
	add r0, sl
	lsls r0, r0, #2
	adds r0, r4, r0
	lsls r0, r0, #2
	adds r6, r7, r0
	adds r3, r6, #0
	movs r0, #0
	cmp r4, #0
	blt _080CFC08
	mov r1, r8
	cmp r1, #0
	blt _080CFC08
	cmp r4, #0xb
	bgt _080CFC08
	cmp r5, #6
	bgt _080CFC08
	movs r0, #1
_080CFC08:
	cmp r0, #0
	beq _080CFC1A
	lsls r0, r5, #1
	adds r0, r0, r5
	lsls r0, r0, #2
	adds r0, r4, r0
	lsls r0, r0, #2
	adds r1, r7, r0
	b _080CFC1C
_080CFC1A:
	movs r1, #0
_080CFC1C:
	ldr r2, [sp, #8]
	movs r0, #0
	cmp r4, #0
	blt _080CFC32
	cmp r2, #0
	blt _080CFC32
	cmp r4, #0xb
	bgt _080CFC32
	cmp r2, #6
	bgt _080CFC32
	movs r0, #1
_080CFC32:
	cmp r0, #0
	beq _080CFC44
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r4, r0
	lsls r0, r0, #2
	adds r2, r7, r0
	b _080CFC46
_080CFC44:
	movs r2, #0
_080CFC46:
	adds r0, r3, #0
	bl sub_800AF5C
	lsls r1, r4, #1
	str r0, [sp]
	ldr r0, [sp, #4]
	mov r2, sb
	adds r2, #7
	adds r3, r6, #0
	bl sub_80CFEA8
	adds r4, #1
	cmp r4, #0xb
	bls _080CFBE4
	mov sl, r8
	mov r0, sl
	cmp r0, #6
	bls _080CFBCE
_080CFC6A:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80CFC7C
sub_80CFC7C: @ 0x080CFC7C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x24
	adds r4, r0, #0
	adds r5, r1, #0
	bl sub_80A5EA0
	ldr r0, [r4, #4]
	cmp r0, #0x3e
	beq _080CFC98
	b _080CFE96
_080CFC98:
	ldr r1, _080CFCC8 @ =gUnknown_086D5508
	mov r0, sp
	ldr r2, _080CFCCC @ =0x06005FC0
	movs r3, #0xe6
	lsls r3, r3, #4
	bl sub_8008F0C
	mov sb, sp
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080CFCD0
	cmp r1, #0
	beq _080CFCC0
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CFCC0:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080CFD96
	.align 2, 0
_080CFCC8: .4byte gUnknown_086D5508
_080CFCCC: .4byte 0x06005FC0
_080CFCD0:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x14]
	ldr r1, [r5]
	mov r6, sl
	subs r0, r6, r1
	asrs r4, r0, #4
	str r4, [sp, #0x10]
	add r2, sp, #0x14
	add r0, sp, #0x10
	cmp r4, #1
	bhs _080CFCEA
	adds r0, r2, #0
_080CFCEA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CFD0A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080CFD06
	mov r0, r8
	bl sub_80D3BC0
_080CFD06:
	ldr r1, [r5]
	b _080CFD0E
_080CFD0A:
	movs r0, #0
	mov r8, r0
_080CFD0E:
	adds r4, r0, #0
	str r4, [sp, #0x20]
	adds r2, r1, #0
	adds r3, r4, #0
	cmp r2, sl
	beq _080CFD32
_080CFD1A:
	cmp r3, #0
	beq _080CFD2A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CFD2A:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080CFD1A
_080CFD32:
	adds r4, r3, #0
	ldr r0, [sp, #0x14]
	cmp r0, #1
	bne _080CFD4E
	cmp r4, #0
	beq _080CFD4A
	adds r0, r4, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CFD4A:
	adds r4, #0x10
	b _080CFD70
_080CFD4E:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080CFD6E
_080CFD56:
	cmp r2, #0
	beq _080CFD66
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CFD66:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CFD56
_080CFD6E:
	adds r4, r2, #0
_080CFD70:
	ldr r2, [r5, #4]
	ldr r1, [r5]
	adds r0, r1, #0
	cmp r1, r2
	beq _080CFD80
_080CFD7A:
	adds r0, #0x10
	cmp r0, r2
	bne _080CFD7A
_080CFD80:
	cmp r1, #0
	beq _080CFD8A
	adds r0, r1, #0
	bl sub_80D0260
_080CFD8A:
	ldr r0, [sp, #0x20]
	add r0, r8
	ldr r1, [sp, #0x20]
	str r1, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080CFD96:
	ldr r1, _080CFDC8 @ =gUnknown_08698E14
	mov r0, sp
	ldr r2, _080CFDCC @ =0x06006E20
	movs r3, #0x8f
	lsls r3, r3, #5
	bl sub_8008F0C
	mov sb, sp
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080CFDD0
	cmp r1, #0
	beq _080CFDBE
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080CFDBE:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080CFE96
	.align 2, 0
_080CFDC8: .4byte gUnknown_08698E14
_080CFDCC: .4byte 0x06006E20
_080CFDD0:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x1c]
	ldr r1, [r5]
	mov r6, sl
	subs r0, r6, r1
	asrs r4, r0, #4
	str r4, [sp, #0x18]
	add r2, sp, #0x1c
	add r0, sp, #0x18
	cmp r4, #1
	bhs _080CFDEA
	adds r0, r2, #0
_080CFDEA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080CFE0A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080CFE06
	mov r0, r8
	bl sub_80D3BC0
_080CFE06:
	ldr r1, [r5]
	b _080CFE0E
_080CFE0A:
	movs r0, #0
	mov r8, r0
_080CFE0E:
	adds r4, r0, #0
	str r4, [sp, #0x20]
	adds r2, r1, #0
	adds r3, r4, #0
	cmp r2, sl
	beq _080CFE32
_080CFE1A:
	cmp r3, #0
	beq _080CFE2A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CFE2A:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080CFE1A
_080CFE32:
	adds r4, r3, #0
	ldr r0, [sp, #0x1c]
	cmp r0, #1
	bne _080CFE4E
	cmp r4, #0
	beq _080CFE4A
	adds r0, r4, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CFE4A:
	adds r4, #0x10
	b _080CFE70
_080CFE4E:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080CFE6E
_080CFE56:
	cmp r2, #0
	beq _080CFE66
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080CFE66:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080CFE56
_080CFE6E:
	adds r4, r2, #0
_080CFE70:
	ldr r2, [r5, #4]
	ldr r1, [r5]
	adds r0, r1, #0
	cmp r1, r2
	beq _080CFE80
_080CFE7A:
	adds r0, #0x10
	cmp r0, r2
	bne _080CFE7A
_080CFE80:
	cmp r1, #0
	beq _080CFE8A
	adds r0, r1, #0
	bl sub_80D0260
_080CFE8A:
	ldr r0, [sp, #0x20]
	add r0, r8
	ldr r1, [sp, #0x20]
	str r1, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080CFE96:
	add sp, #0x24
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80CFEA8
sub_80CFEA8: @ 0x080CFEA8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r6, r0, #0
	mov sb, r1
	adds r7, r2, #0
	str r3, [sp]
	ldr r0, [r6, #4]
	bl sub_80A4698
	ldrh r0, [r0, #0x20]
	mov r8, r0
	ldr r0, [sp]
	bl sub_800AF20
	adds r5, r0, #0
	cmp r5, #0
	beq _080CFF0A
	mov r0, r8
	muls r0, r7, r0
	ldr r1, [r6, #0x10]
	lsls r0, r0, #1
	mov r2, sb
	lsls r4, r2, #1
	adds r1, r4, r1
	adds r0, r0, r1
	adds r1, r5, #0
	movs r2, #4
	bl sub_80D3994
	adds r0, r7, #1
	mov r3, r8
	muls r3, r0, r3
	adds r0, r3, #0
	ldr r1, [r6, #0x10]
	lsls r0, r0, #1
	adds r4, r4, r1
	adds r0, r0, r4
	adds r1, r5, #4
	movs r2, #4
	bl sub_80D3994
	adds r1, r6, #0
	adds r1, #0x29
	movs r0, #1
	strb r0, [r1]
_080CFF0A:
	mov r5, r8
	muls r5, r7, r5
	adds r0, r7, #1
	mov sl, r0
	ldr r1, [sp, #0x24]
	cmp r1, #0
	beq _080CFF66
	subs r0, r7, #1
	mov r2, r8
	muls r2, r0, r2
	adds r0, r2, #0
	ldr r1, [r6, #0x18]
	lsls r0, r0, #1
	mov r3, sb
	lsls r4, r3, #1
	adds r1, r4, r1
	adds r0, r0, r1
	ldr r1, [sp, #0x24]
	movs r2, #4
	bl sub_80D3994
	ldr r1, [r6, #0x14]
	lsls r0, r5, #1
	adds r1, r4, r1
	adds r0, r0, r1
	ldr r1, [sp, #0x24]
	adds r1, #4
	movs r2, #4
	bl sub_80D3994
	mov r1, r8
	mov r0, sl
	muls r0, r1, r0
	ldr r1, [r6, #0x14]
	lsls r0, r0, #1
	adds r4, r4, r1
	adds r0, r0, r4
	ldr r1, [sp, #0x24]
	adds r1, #8
	movs r2, #4
	bl sub_80D3994
	adds r1, r6, #0
	adds r1, #0x29
	movs r0, #1
	strb r0, [r1]
_080CFF66:
	ldr r0, [sp]
	bl sub_800A07C
	mov r2, sb
	adds r4, r2, r5
	ldr r2, [r6, #0x2c]
	lsls r4, r4, #2
	adds r4, r4, r2
	mov r3, r8
	mov r1, sl
	muls r1, r3, r1
	add r1, sb
	lsls r1, r1, #2
	adds r1, r1, r2
	movs r5, #1
	ands r5, r0
	ldrb r3, [r1, #4]
	movs r2, #2
	rsbs r2, r2, #0
	adds r0, r2, #0
	ands r0, r3
	orrs r0, r5
	strb r0, [r1, #4]
	ldrb r3, [r1]
	adds r0, r2, #0
	ands r0, r3
	orrs r0, r5
	strb r0, [r1]
	ldrb r1, [r4, #4]
	adds r0, r2, #0
	ands r0, r1
	orrs r0, r5
	strb r0, [r4, #4]
	ldrb r0, [r4]
	ands r2, r0
	orrs r2, r5
	strb r2, [r4]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80CFFC0
sub_80CFFC0: @ 0x080CFFC0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	mov sl, r0
	adds r5, r1, #0
	adds r6, r2, #0
	mov r2, sl
	adds r2, #0x94
	lsls r0, r6, #1
	adds r0, r0, r6
	lsls r0, r0, #2
	adds r0, r5, r0
	lsls r0, r0, #2
	adds r0, r2, r0
	ldr r1, [r3]
	str r1, [r0]
	subs r1, r6, #1
	movs r0, #0
	cmp r5, #0
	blt _080CFFFC
	cmp r1, #0
	blt _080CFFFC
	cmp r5, #0xb
	bgt _080CFFFC
	cmp r1, #6
	bgt _080CFFFC
	movs r0, #1
_080CFFFC:
	cmp r0, #0
	beq _080D000E
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r5, r0
	lsls r0, r0, #2
	adds r0, r2, r0
	b _080D0010
_080D000E:
	movs r0, #0
_080D0010:
	mov r7, sl
	adds r7, #0x94
	subs r1, r6, #1
	mov r8, r1
	lsls r4, r5, #1
	cmp r0, #0
	beq _080D00A0
	lsls r0, r1, #1
	add r0, r8
	lsls r0, r0, #2
	adds r0, r5, r0
	lsls r0, r0, #2
	adds r0, r0, r7
	mov sb, r0
	adds r2, r7, #0
	mov r3, r8
	mov r4, sb
	adds r1, r6, #0
	movs r0, #0
	cmp r5, #0
	blt _080D0048
	cmp r6, #0
	blt _080D0048
	cmp r5, #0xb
	bgt _080D0048
	cmp r6, #6
	bgt _080D0048
	movs r0, #1
_080D0048:
	cmp r0, #0
	beq _080D005A
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r5, r0
	lsls r0, r0, #2
	adds r1, r2, r0
	b _080D005C
_080D005A:
	movs r1, #0
_080D005C:
	subs r3, #1
	movs r0, #0
	cmp r5, #0
	blt _080D0072
	cmp r3, #0
	blt _080D0072
	cmp r5, #0xb
	bgt _080D0072
	cmp r3, #6
	bgt _080D0072
	movs r0, #1
_080D0072:
	cmp r0, #0
	beq _080D0084
	lsls r0, r3, #1
	adds r0, r0, r3
	lsls r0, r0, #2
	adds r0, r5, r0
	lsls r0, r0, #2
	adds r2, r2, r0
	b _080D0086
_080D0084:
	movs r2, #0
_080D0086:
	adds r0, r4, #0
	bl sub_800AF5C
	lsls r4, r5, #1
	mov r1, r8
	lsls r2, r1, #1
	adds r2, #7
	str r0, [sp]
	mov r0, sl
	adds r1, r4, #0
	mov r3, sb
	bl sub_80CFEA8
_080D00A0:
	lsls r1, r6, #1
	adds r0, r1, r6
	lsls r0, r0, #2
	adds r0, r5, r0
	lsls r0, r0, #2
	adds r0, r0, r7
	mov sb, r0
	adds r3, r7, #0
	mov ip, sb
	adds r2, r6, #1
	movs r0, #0
	str r1, [sp, #4]
	adds r6, r2, #0
	cmp r5, #0
	blt _080D00CC
	cmp r6, #0
	blt _080D00CC
	cmp r5, #0xb
	bgt _080D00CC
	cmp r6, #6
	bgt _080D00CC
	movs r0, #1
_080D00CC:
	cmp r0, #0
	beq _080D00DE
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r5, r0
	lsls r0, r0, #2
	adds r1, r3, r0
	b _080D00E0
_080D00DE:
	movs r1, #0
_080D00E0:
	mov r2, r8
	movs r0, #0
	cmp r5, #0
	blt _080D00F6
	cmp r2, #0
	blt _080D00F6
	cmp r5, #0xb
	bgt _080D00F6
	cmp r2, #6
	bgt _080D00F6
	movs r0, #1
_080D00F6:
	cmp r0, #0
	beq _080D0108
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r5, r0
	lsls r0, r0, #2
	adds r2, r3, r0
	b _080D010A
_080D0108:
	movs r2, #0
_080D010A:
	mov r0, ip
	bl sub_800AF5C
	ldr r2, [sp, #4]
	adds r2, #7
	str r0, [sp]
	mov r0, sl
	adds r1, r4, #0
	mov r3, sb
	bl sub_80CFEA8
	adds r2, r7, #0
	adds r1, r6, #0
	movs r0, #0
	cmp r5, #0
	blt _080D0138
	cmp r6, #0
	blt _080D0138
	cmp r5, #0xb
	bgt _080D0138
	cmp r6, #6
	bgt _080D0138
	movs r0, #1
_080D0138:
	cmp r0, #0
	beq _080D014A
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r5, r0
	lsls r0, r0, #2
	adds r0, r2, r0
	b _080D014C
_080D014A:
	movs r0, #0
_080D014C:
	cmp r0, #0
	beq _080D01CE
	lsls r0, r6, #1
	adds r0, r0, r6
	lsls r0, r0, #2
	adds r0, r5, r0
	lsls r0, r0, #2
	adds r0, r0, r7
	mov r8, r0
	adds r2, r7, #0
	adds r3, r6, #0
	mov r7, r8
	adds r1, r6, #1
	movs r0, #0
	cmp r5, #0
	blt _080D017A
	cmp r1, #0
	blt _080D017A
	cmp r5, #0xb
	bgt _080D017A
	cmp r1, #6
	bgt _080D017A
	movs r0, #1
_080D017A:
	cmp r0, #0
	beq _080D018C
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r5, r0
	lsls r0, r0, #2
	adds r1, r2, r0
	b _080D018E
_080D018C:
	movs r1, #0
_080D018E:
	subs r3, #1
	movs r0, #0
	cmp r5, #0
	blt _080D01A4
	cmp r3, #0
	blt _080D01A4
	cmp r5, #0xb
	bgt _080D01A4
	cmp r3, #6
	bgt _080D01A4
	movs r0, #1
_080D01A4:
	cmp r0, #0
	beq _080D01B6
	lsls r0, r3, #1
	adds r0, r0, r3
	lsls r0, r0, #2
	adds r0, r5, r0
	lsls r0, r0, #2
	adds r2, r2, r0
	b _080D01B8
_080D01B6:
	movs r2, #0
_080D01B8:
	adds r0, r7, #0
	bl sub_800AF5C
	lsls r2, r6, #1
	adds r2, #7
	str r0, [sp]
	mov r0, sl
	adds r1, r4, #0
	mov r3, r8
	bl sub_80CFEA8
_080D01CE:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D01E0
sub_80D01E0: @ 0x080D01E0
	ldr r2, _080D01F4 @ =gUnknown_03000418
	str r0, [r2]
	subs r1, #0x10
	str r1, [r0]
	movs r1, #0
	str r1, [r0, #4]
	str r1, [r0, #8]
	str r1, [r0, #0xc]
	bx lr
	.align 2, 0
_080D01F4: .4byte gUnknown_03000418

	thumb_func_start sub_80D01F8
sub_80D01F8: @ 0x080D01F8
	push {r4, r5, lr}
	adds r0, #3
	lsrs r0, r0, #2
	lsls r4, r0, #2
	ldr r0, _080D0244 @ =gUnknown_03000418
	ldr r2, [r0]
	cmp r2, #0
	beq _080D0252
_080D0208:
	ldr r5, [r2, #4]
	cmp r5, #0
	bne _080D0248
	ldr r1, [r2]
	cmp r1, r4
	blo _080D0248
	adds r0, r4, #0
	adds r0, #0x20
	cmp r1, r0
	blo _080D023C
	adds r0, r2, r4
	adds r3, r0, #0
	adds r3, #0x10
	subs r1, #0x10
	subs r1, r1, r4
	str r1, [r0, #0x10]
	str r5, [r3, #4]
	str r2, [r3, #8]
	ldr r0, [r2, #0xc]
	str r0, [r3, #0xc]
	ldr r0, [r2, #0xc]
	cmp r0, #0
	beq _080D0238
	str r3, [r0, #8]
_080D0238:
	str r4, [r2]
	str r3, [r2, #0xc]
_080D023C:
	movs r0, #1
	str r0, [r2, #4]
	b _080D024E
	.align 2, 0
_080D0244: .4byte gUnknown_03000418
_080D0248:
	ldr r2, [r2, #0xc]
	cmp r2, #0
	bne _080D0208
_080D024E:
	cmp r2, #0
	bne _080D0256
_080D0252:
	movs r0, #0
	b _080D025A
_080D0256:
	adds r0, r2, #0
	adds r0, #0x10
_080D025A:
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_80D0260
sub_80D0260: @ 0x080D0260
	push {lr}
	cmp r0, #0
	beq _080D02B4
	adds r3, r0, #0
	subs r3, #0x10
	ldr r2, [r3, #8]
	cmp r2, #0
	beq _080D028E
	ldr r0, [r2, #4]
	cmp r0, #0
	bne _080D028E
	ldr r0, [r2]
	adds r0, #0x10
	ldr r1, [r3]
	adds r0, r0, r1
	str r0, [r2]
	ldr r0, [r3, #0xc]
	str r0, [r2, #0xc]
	ldr r0, [r3, #0xc]
	cmp r0, #0
	beq _080D028C
	str r2, [r0, #8]
_080D028C:
	adds r3, r2, #0
_080D028E:
	ldr r2, [r3, #0xc]
	cmp r2, #0
	beq _080D02B0
	ldr r0, [r2, #4]
	cmp r0, #0
	bne _080D02B0
	ldr r0, [r3]
	adds r0, #0x10
	ldr r1, [r2]
	adds r0, r0, r1
	str r0, [r3]
	ldr r0, [r2, #0xc]
	str r0, [r3, #0xc]
	ldr r1, [r2, #0xc]
	cmp r1, #0
	beq _080D02B0
	str r3, [r1, #8]
_080D02B0:
	movs r0, #0
	str r0, [r3, #4]
_080D02B4:
	pop {r0}
	bx r0
_080D02B8:
	.byte 0x00, 0xB5, 0x00, 0x28, 0x02, 0xD0, 0x10, 0x38
	.byte 0x00, 0x68, 0x00, 0xE0, 0x00, 0x20, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00

	thumb_func_start sub_80D02CC
sub_80D02CC: @ 0x080D02CC
	push {r4, r5, lr}
	ldr r5, _080D02E8 @ =gUnknown_03000420
	str r0, [r5]
	movs r4, #0
	str r4, [r0]
	bl sub_80D0B88
	ldr r0, [r5]
	str r4, [r0, #4]
	str r4, [r0, #8]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080D02E8: .4byte gUnknown_03000420

	thumb_func_start sub_80D02EC
sub_80D02EC: @ 0x080D02EC
	bx lr
	.align 2, 0

	thumb_func_start sub_80D02F0
sub_80D02F0: @ 0x080D02F0
	push {lr}
	sub sp, #0x20
	ldr r0, _080D033C @ =gUnknown_03000420
	ldr r1, [r0]
	ldr r2, [r1]
	cmp r2, #0
	bne _080D0336
	movs r0, #1
	str r0, [r1]
	str r2, [r1, #0x14]
	str r2, [r1, #0x18]
	str r2, [r1, #0x1c]
	str r0, [r1, #0x20]
	movs r3, #0xc0
	lsls r3, r3, #1
	adds r0, r1, r3
	str r2, [r0]
	adds r3, #4
	adds r0, r1, r3
	str r2, [r0]
	subs r3, #8
	adds r0, r1, r3
	str r2, [r0]
	str r2, [r1, #0xc]
	str r2, [r1, #0x10]
	str r2, [sp]
	mov r0, sp
	bl sub_80D0BA8
	movs r0, #0
	movs r1, #0
	bl sub_80D0B14
	bl sub_80D0ABC
_080D0336:
	add sp, #0x20
	pop {r0}
	bx r0
	.align 2, 0
_080D033C: .4byte gUnknown_03000420

	thumb_func_start sub_80D0340
sub_80D0340: @ 0x080D0340
	push {lr}
	ldr r0, _080D0358 @ =gUnknown_03000420
	ldr r1, [r0]
	ldr r0, [r1]
	cmp r0, #0
	beq _080D0354
	movs r0, #0
	str r0, [r1]
	bl sub_80D0AE0
_080D0354:
	pop {r0}
	bx r0
	.align 2, 0
_080D0358: .4byte gUnknown_03000420

	thumb_func_start sub_80D035C
sub_80D035C: @ 0x080D035C
	push {r4, r5, lr}
	ldr r5, _080D039C @ =gUnknown_03000420
	ldr r1, [r5]
	ldr r0, [r1]
	cmp r0, #0
	beq _080D0436
	movs r2, #0xc2
	lsls r2, r2, #1
	adds r0, r1, r2
	ldr r0, [r0]
	str r0, [r1, #0x1c]
	ldr r0, _080D03A0 @ =gUnknown_0300041C
	ldr r0, [r0]
	ldr r0, [r0]
	cmp r0, #0
	bne _080D03C2
	bl sub_80D0C10
	cmp r0, #0
	bne _080D03A4
	ldr r0, [r5]
	movs r1, #0xc0
	lsls r1, r1, #1
	adds r0, r0, r1
	ldr r4, [r0]
	cmp r4, #0
	bne _080D03A4
	bl sub_80D0BE0
	ldr r0, [r5]
	str r4, [r0, #0x10]
	b _080D03C2
	.align 2, 0
_080D039C: .4byte gUnknown_03000420
_080D03A0: .4byte gUnknown_0300041C
_080D03A4:
	ldr r0, _080D03F0 @ =gUnknown_03000420
	ldr r3, [r0]
	ldr r0, [r3, #0x14]
	cmp r0, #0
	beq _080D03C2
	movs r2, #0
	str r2, [r3, #0x14]
	movs r0, #0xc0
	lsls r0, r0, #1
	adds r1, r3, r0
	ldr r0, [r1]
	str r0, [r3, #0x18]
	str r2, [r1]
	bl sub_80D0C2C
_080D03C2:
	ldr r0, _080D03F0 @ =gUnknown_03000420
	ldr r1, [r0]
	ldr r0, [r1, #0xc]
	adds r0, #1
	str r0, [r1, #0xc]
	ldr r0, [r1, #0xc]
	cmp r0, #0xa
	bls _080D0400
	movs r0, #0
	str r0, [r1, #0xc]
	ldr r0, _080D03F4 @ =gUnknown_0300041C
	ldr r0, [r0]
	ldr r0, [r0]
	cmp r0, #0
	beq _080D0400
	cmp r0, #1
	bne _080D03F8
	movs r0, #1
	movs r1, #0
	bl sub_80D0B14
	b _080D0400
	.align 2, 0
_080D03F0: .4byte gUnknown_03000420
_080D03F4: .4byte gUnknown_0300041C
_080D03F8:
	movs r0, #1
	movs r1, #1
	bl sub_80D0B14
_080D0400:
	ldr r4, _080D043C @ =gUnknown_03000420
	ldr r1, [r4]
	ldr r0, [r1, #0x10]
	adds r0, #1
	str r0, [r1, #0x10]
	ldr r0, _080D0440 @ =gUnknown_0300041C
	ldr r0, [r0]
	ldr r0, [r0]
	cmp r0, #1
	bls _080D0436
	ldr r0, [r1, #0x10]
	cmp r0, #0xb4
	bls _080D0436
	movs r0, #0xb
	bl sub_80D0A94
	ldr r0, [r4]
	movs r2, #0
	str r2, [r0, #0x14]
	movs r1, #0xa
	str r1, [r0, #0x18]
	movs r1, #0xc0
	lsls r1, r1, #1
	adds r0, r0, r1
	str r2, [r0]
	bl sub_80D0C2C
_080D0436:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080D043C: .4byte gUnknown_03000420
_080D0440: .4byte gUnknown_0300041C

	thumb_func_start sub_80D0444
sub_80D0444: @ 0x080D0444
	ldr r2, _080D0450 @ =gUnknown_03000420
	ldr r2, [r2]
	str r0, [r2, #4]
	str r1, [r2, #8]
	bx lr
	.align 2, 0
_080D0450: .4byte gUnknown_03000420

	thumb_func_start sub_80D0454
sub_80D0454: @ 0x080D0454
	push {r4, lr}
	sub sp, #0x20
	ldr r4, _080D048C @ =gUnknown_03000420
	ldr r1, [r4]
	movs r0, #1
	str r0, [r1, #0x14]
	str r0, [sp]
	mov r0, sp
	bl sub_80D0BA8
	movs r0, #3
	str r0, [sp]
	ldr r0, [r4]
	adds r0, #0x24
	str r0, [sp, #0x10]
	movs r0, #2
	str r0, [sp, #0x18]
	mov r1, sp
	movs r0, #0
	strh r0, [r1, #0x1c]
	mov r0, sp
	bl sub_80D0BA8
	add sp, #0x20
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D048C: .4byte gUnknown_03000420
_080D0490:
	.byte 0x70, 0xB5, 0x4E, 0x46, 0x45, 0x46, 0x60, 0xB4, 0x88, 0xB0, 0x81, 0x46, 0x0E, 0x1C, 0x14, 0x48
	.byte 0x80, 0x46, 0x01, 0x68, 0x02, 0x24, 0x4C, 0x61, 0x04, 0x20, 0x00, 0x90, 0x24, 0x31, 0x04, 0x91
	.byte 0x06, 0x94, 0x68, 0x46, 0x00, 0x25, 0x85, 0x83, 0x00, 0xF0, 0x76, 0xFB, 0x00, 0x94, 0x49, 0x46
	.byte 0x04, 0x91, 0x01, 0x36, 0x76, 0x08, 0x06, 0x96, 0x68, 0x46, 0x85, 0x83, 0x00, 0xF0, 0x6C, 0xFB
	.byte 0x41, 0x46, 0x08, 0x68, 0xC5, 0x61, 0x06, 0x62, 0xC2, 0x21, 0x49, 0x00, 0x40, 0x18, 0x05, 0x60
	.byte 0x08, 0xB0, 0x18, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0x70, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
	.byte 0x20, 0x04, 0x00, 0x03, 0x70, 0xB5, 0x4E, 0x46, 0x45, 0x46, 0x60, 0xB4, 0x88, 0xB0, 0x81, 0x46
	.byte 0x0D, 0x1C, 0x14, 0x48, 0x80, 0x46, 0x01, 0x68, 0x03, 0x26, 0x4E, 0x61, 0x04, 0x20, 0x00, 0x90
	.byte 0x24, 0x31, 0x04, 0x91, 0x02, 0x20, 0x06, 0x90, 0x68, 0x46, 0x00, 0x24, 0x84, 0x83, 0x00, 0xF0
	.byte 0x43, 0xFB, 0x00, 0x96, 0x49, 0x46, 0x04, 0x91, 0x01, 0x35, 0x6D, 0x08, 0x06, 0x95, 0x68, 0x46
	.byte 0x84, 0x83, 0x00, 0xF0, 0x39, 0xFB, 0x41, 0x46, 0x08, 0x68, 0xC4, 0x61, 0x05, 0x62, 0xC2, 0x21
	.byte 0x49, 0x00, 0x40, 0x18, 0x04, 0x60, 0x08, 0xB0, 0x18, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0x70, 0xBC
	.byte 0x01, 0xBC, 0x00, 0x47, 0x20, 0x04, 0x00, 0x03

	thumb_func_start sub_80D0558
sub_80D0558: @ 0x080D0558
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	adds r7, r0, #0
	adds r4, r1, #0
	mov sb, r2
	adds r6, r3, #0
	ldr r0, _080D05D8 @ =gUnknown_03000420
	mov sl, r0
	ldr r0, [r0]
	movs r1, #4
	str r1, [r0, #0x14]
	str r1, [sp]
	adds r0, #0x24
	str r0, [sp, #0x10]
	movs r1, #2
	mov r8, r1
	str r1, [sp, #0x18]
	mov r0, sp
	movs r5, #0
	strh r5, [r0, #0x1c]
	bl sub_80D0BA8
	movs r0, #3
	str r0, [sp]
	mov r0, sb
	str r0, [sp, #0x10]
	adds r6, #1
	lsrs r6, r6, #1
	str r6, [sp, #0x18]
	mov r0, sp
	strh r5, [r0, #0x1c]
	bl sub_80D0BA8
	mov r1, r8
	str r1, [sp]
	str r7, [sp, #0x10]
	adds r4, #1
	lsrs r4, r4, #1
	str r4, [sp, #0x18]
	mov r0, sp
	strh r5, [r0, #0x1c]
	bl sub_80D0BA8
	mov r1, sl
	ldr r0, [r1]
	str r5, [r0, #0x1c]
	adds r4, r4, r6
	str r4, [r0, #0x20]
	movs r1, #0xc2
	lsls r1, r1, #1
	adds r0, r0, r1
	str r5, [r0]
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080D05D8: .4byte gUnknown_03000420

	thumb_func_start sub_80D05DC
sub_80D05DC: @ 0x080D05DC
	push {r4, r5, r6, lr}
	sub sp, #0x20
	ldr r6, _080D0640 @ =gUnknown_03000420
	ldr r0, [r6]
	movs r1, #5
	str r1, [r0, #0x14]
	ldr r0, [r0, #0x30]
	cmp r0, #0
	beq _080D05F8
	movs r0, #1
	str r0, [sp]
	mov r0, sp
	bl sub_80D0BA8
_080D05F8:
	movs r0, #4
	str r0, [sp]
	ldr r0, [r6]
	adds r0, #0x24
	str r0, [sp, #0x10]
	movs r4, #2
	str r4, [sp, #0x18]
	mov r0, sp
	movs r5, #0
	strh r5, [r0, #0x1c]
	bl sub_80D0BA8
	movs r0, #3
	str r0, [sp]
	ldr r0, [r6]
	adds r0, #0x2c
	str r0, [sp, #0x10]
	str r4, [sp, #0x18]
	mov r0, sp
	strh r5, [r0, #0x1c]
	bl sub_80D0BA8
	str r4, [sp]
	ldr r0, [r6]
	adds r0, #0x28
	str r0, [sp, #0x10]
	str r4, [sp, #0x18]
	mov r0, sp
	strh r5, [r0, #0x1c]
	bl sub_80D0BA8
	add sp, #0x20
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080D0640: .4byte gUnknown_03000420

	thumb_func_start sub_80D0644
sub_80D0644: @ 0x080D0644
	push {r4, lr}
	ldr r4, _080D0674 @ =gUnknown_03000420
	ldr r2, [r4]
	adds r2, #0x28
	strb r0, [r2]
	ldr r2, [r4]
	lsrs r3, r0, #8
	adds r2, #0x29
	strb r3, [r2]
	ldr r2, [r4]
	lsrs r3, r0, #0x10
	adds r2, #0x2a
	strb r3, [r2]
	ldr r2, [r4]
	lsrs r0, r0, #0x18
	adds r2, #0x2b
	strb r0, [r2]
	ldr r0, [r4]
	str r1, [r0, #0x30]
	bl sub_80D05DC
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D0674: .4byte gUnknown_03000420

	thumb_func_start sub_80D0678
sub_80D0678: @ 0x080D0678
	ldr r0, _080D06A4 @ =gUnknown_03000420
	ldr r2, [r0]
	adds r0, r2, #0
	adds r0, #0x2c
	ldrb r0, [r0]
	adds r1, r2, #0
	adds r1, #0x2d
	ldrb r1, [r1]
	lsls r1, r1, #8
	orrs r0, r1
	adds r1, r2, #0
	adds r1, #0x2e
	ldrb r1, [r1]
	lsls r1, r1, #0x10
	orrs r0, r1
	adds r1, r2, #0
	adds r1, #0x2f
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	orrs r0, r1
	bx lr
	.align 2, 0
_080D06A4: .4byte gUnknown_03000420

	thumb_func_start sub_80D06A8
sub_80D06A8: @ 0x080D06A8
	push {lr}
	movs r0, #0xb
	bl sub_80D0A94
	pop {r0}
	bx r0

	thumb_func_start sub_80D06B4
sub_80D06B4: @ 0x080D06B4
	push {lr}
	movs r1, #0
	ldr r0, _080D06CC @ =gUnknown_03000420
	ldr r0, [r0]
	ldr r0, [r0, #0x14]
	cmp r0, #0
	bne _080D06C4
	movs r1, #1
_080D06C4:
	adds r0, r1, #0
	pop {r1}
	bx r1
	.align 2, 0
_080D06CC: .4byte gUnknown_03000420

	thumb_func_start sub_80D06D0
sub_80D06D0: @ 0x080D06D0
	ldr r0, _080D06D8 @ =gUnknown_03000420
	ldr r0, [r0]
	ldr r0, [r0, #0x18]
	bx lr
	.align 2, 0
_080D06D8: .4byte gUnknown_03000420
_080D06DC:
	.byte 0x00, 0xB5, 0x06, 0x48
	.byte 0x00, 0x68, 0x02, 0x6A, 0x00, 0x2A, 0x09, 0xD0, 0xC1, 0x69, 0x64, 0x20, 0x48, 0x43, 0x11, 0x1C
	.byte 0x00, 0xF0, 0xF3, 0xFB, 0x03, 0xE0, 0x00, 0x00, 0x20, 0x04, 0x00, 0x03, 0x00, 0x20, 0x02, 0xBC
	.byte 0x08, 0x47, 0x00, 0x00

	thumb_func_start sub_80D0704
sub_80D0704: @ 0x080D0704
	push {r4, r5, lr}
	sub sp, #4
	movs r5, #0
	ldr r0, _080D077C @ =0x04000140
	ldrh r0, [r0]
	adds r4, r0, #0
	ldr r0, _080D0780 @ =gUnknown_03000420
	ldr r0, [r0]
	movs r1, #0xbe
	lsls r1, r1, #1
	adds r0, r0, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _080D0754
	movs r0, #2
	ands r0, r4
	cmp r0, #0
	beq _080D0736
	ldr r0, _080D0784 @ =0x04000150
	ldr r0, [r0]
	str r0, [sp]
	mov r0, sp
	bl sub_80D078C
	adds r5, r0, #0
_080D0736:
	cmp r5, #0
	bne _080D0748
	movs r0, #4
	ands r0, r4
	cmp r0, #0
	beq _080D0748
	bl sub_80D091C
	adds r5, r0, #0
_080D0748:
	movs r0, #1
	ands r0, r4
	cmp r0, #0
	beq _080D0754
	bl sub_80D0A14
_080D0754:
	cmp r5, #0
	beq _080D0764
	ldr r1, _080D0788 @ =0x04000158
	movs r0, #0
	strh r0, [r1]
	adds r0, r5, #0
	bl sub_80D0A54
_080D0764:
	ldr r0, _080D077C @ =0x04000140
	strh r4, [r0]
	ldr r0, _080D0780 @ =gUnknown_03000420
	ldr r1, [r0]
	movs r0, #0
	str r0, [r1, #0xc]
	str r0, [r1, #0x10]
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080D077C: .4byte 0x04000140
_080D0780: .4byte gUnknown_03000420
_080D0784: .4byte 0x04000150
_080D0788: .4byte 0x04000158

	thumb_func_start sub_80D078C
sub_80D078C: @ 0x080D078C
	push {r4, r5, lr}
	sub sp, #8
	adds r3, r0, #0
	ldr r0, _080D07AC @ =gUnknown_0300041C
	ldr r2, [r0]
	ldr r1, [r2]
	adds r5, r0, #0
	cmp r1, #4
	bls _080D07A0
	b _080D090C
_080D07A0:
	ldr r0, [r2]
	lsls r0, r0, #2
	ldr r1, _080D07B0 @ =_080D07B4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080D07AC: .4byte gUnknown_0300041C
_080D07B0: .4byte _080D07B4
_080D07B4: @ jump table
	.4byte _080D0910 @ case 0
	.4byte _080D07C8 @ case 1
	.4byte _080D07FC @ case 2
	.4byte _080D083A @ case 3
	.4byte _080D07FC @ case 4
_080D07C8:
	ldr r0, [r5]
	ldr r0, [r0, #4]
	cmp r0, #1
	bhi _080D07D2
	b _080D0910
_080D07D2:
	cmp r0, #2
	beq _080D07D8
	b _080D0910
_080D07D8:
	ldr r0, _080D07E8 @ =gUnknown_03000420
	ldr r0, [r0]
	ldr r1, [r3]
	ldr r0, [r0, #8]
	cmp r1, r0
	beq _080D07EC
	movs r0, #1
	b _080D0912
	.align 2, 0
_080D07E8: .4byte gUnknown_03000420
_080D07EC:
	ldr r1, _080D07F8 @ =0x04000158
	movs r0, #0x30
	strh r0, [r1]
_080D07F2:
	bl sub_80D0A74
	b _080D0910
	.align 2, 0
_080D07F8: .4byte 0x04000158
_080D07FC:
	ldr r4, [r5]
	ldr r0, [r4, #4]
	cmp r0, #1
	beq _080D0836
	cmp r0, #1
	blo _080D080E
	cmp r0, #2
	beq _080D0830
	b _080D0910
_080D080E:
	ldrb r0, [r3]
	cmp r0, #0x42
	bne _080D0828
	ldrb r0, [r3, #2]
	ldrb r1, [r3, #3]
	lsls r1, r1, #8
	orrs r0, r1
	ldr r1, [r4, #0x18]
	cmp r0, r1
	bne _080D0860
	mov r1, sp
	movs r2, #0x43
	b _080D08EC
_080D0828:
	cmp r0, #0x41
	bne _080D0910
	movs r0, #5
	b _080D0912
_080D0830:
	ldrb r0, [r3]
	cmp r0, #0x46
	beq _080D07F2
_080D0836:
	movs r0, #7
	b _080D0912
_080D083A:
	ldr r4, [r5]
	ldr r0, [r4, #4]
	cmp r0, #1
	beq _080D0872
	cmp r0, #1
	blo _080D084C
	cmp r0, #2
	beq _080D0908
	b _080D0910
_080D084C:
	ldrb r0, [r3]
	cmp r0, #0x41
	bne _080D086A
	ldrb r0, [r3, #2]
	ldrb r1, [r3, #3]
	lsls r1, r1, #8
	orrs r0, r1
	ldr r1, [r4, #0x18]
	cmp r0, r1
	beq _080D0864
_080D0860:
	movs r0, #4
	b _080D0912
_080D0864:
	mov r1, sp
	movs r2, #0x43
	b _080D08EC
_080D086A:
	cmp r0, #0x42
	bne _080D0910
	movs r0, #6
	b _080D0912
_080D0872:
	ldr r1, [r4, #8]
	ldr r0, [r4, #0x18]
	cmp r1, r0
	bhs _080D08D0
	ldrb r0, [r3]
	cmp r0, #0x44
	bne _080D0908
	ldrb r0, [r3, #1]
	ldr r1, [r4, #8]
	movs r2, #0xff
	ands r1, r2
	cmp r0, r1
	bne _080D0908
	ldr r0, [r4, #8]
	lsls r0, r0, #1
	ldr r1, [r4, #0x10]
	adds r0, r0, r1
	ldrb r1, [r3, #2]
	strb r1, [r0]
	ldrb r1, [r3, #3]
	strb r1, [r0, #1]
	ldr r2, [r5]
	ldr r0, [r2, #8]
	lsls r0, r0, #1
	ldr r1, [r2, #0x10]
	adds r0, r0, r1
	ldrb r1, [r0]
	ldrb r0, [r0, #1]
	lsls r0, r0, #8
	orrs r1, r0
	ldrh r0, [r2, #0x1c]
	adds r1, r1, r0
	strh r1, [r2, #0x1c]
	ldr r0, [r2, #8]
	adds r0, #1
	str r0, [r2, #8]
	ldr r0, _080D08CC @ =gUnknown_03000420
	ldr r1, [r0]
	movs r0, #0xc2
	lsls r0, r0, #1
	adds r1, r1, r0
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
	b _080D0910
	.align 2, 0
_080D08CC: .4byte gUnknown_03000420
_080D08D0:
	ldrb r0, [r3]
	cmp r0, #0x45
	bne _080D0908
	ldrb r0, [r3, #2]
	ldrb r1, [r3, #3]
	lsls r1, r1, #8
	orrs r0, r1
	ldrh r1, [r4, #0x1c]
	cmp r1, r0
	beq _080D08E8
	movs r0, #3
	b _080D0912
_080D08E8:
	mov r1, sp
	movs r2, #0x46
_080D08EC:
	movs r0, #0
	strb r2, [r1]
	strb r0, [r1, #1]
	strb r0, [r1, #2]
	strb r0, [r1, #3]
	ldr r1, _080D0904 @ =0x04000154
	ldr r0, [sp]
	str r0, [r1]
	ldr r0, [r4, #4]
	adds r0, #1
	str r0, [r4, #4]
	b _080D0910
	.align 2, 0
_080D0904: .4byte 0x04000154
_080D0908:
	movs r0, #8
	b _080D0912
_080D090C:
	movs r0, #9
	b _080D0912
_080D0910:
	movs r0, #0
_080D0912:
	add sp, #8
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80D091C
sub_80D091C: @ 0x080D091C
	push {r4, r5, lr}
	sub sp, #4
	ldr r0, _080D0938 @ =gUnknown_0300041C
	ldr r2, [r0]
	ldr r1, [r2]
	adds r3, r0, #0
	cmp r1, #4
	bhi _080D0A06
	ldr r0, [r2]
	lsls r0, r0, #2
	ldr r1, _080D093C @ =_080D0940
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080D0938: .4byte gUnknown_0300041C
_080D093C: .4byte _080D0940
_080D0940: @ jump table
	.4byte _080D0A0A @ case 0
	.4byte _080D0954 @ case 1
	.4byte _080D0964 @ case 2
	.4byte _080D09F4 @ case 3
	.4byte _080D0964 @ case 4
_080D0954:
	ldr r1, [r3]
	ldr r0, [r1, #4]
	cmp r0, #1
	bne _080D0A0A
	ldr r0, [r1, #4]
	adds r0, #1
	str r0, [r1, #4]
	b _080D0A0A
_080D0964:
	ldr r5, [r3]
	ldr r0, [r5, #4]
	cmp r0, #1
	bne _080D0A0A
	ldr r1, [r5, #8]
	ldr r0, [r5, #0x18]
	cmp r1, r0
	bhs _080D09D0
	ldr r1, [r5, #8]
	mov r2, sp
	movs r3, #0x44
	ldr r4, [r5, #8]
	lsls r1, r1, #1
	ldr r0, [r5, #0x10]
	adds r1, r1, r0
	strb r3, [r2]
	strb r4, [r2, #1]
	ldrb r0, [r1]
	strb r0, [r2, #2]
	ldrb r0, [r1, #1]
	strb r0, [r2, #3]
	ldr r0, [r5, #8]
	lsls r0, r0, #1
	ldr r1, [r5, #0x10]
	adds r0, r0, r1
	ldrb r1, [r0]
	ldrb r0, [r0, #1]
	lsls r0, r0, #8
	orrs r1, r0
	ldrh r0, [r5, #0x1c]
	adds r1, r1, r0
	strh r1, [r5, #0x1c]
	ldr r1, _080D09C8 @ =0x04000154
	ldr r0, [sp]
	str r0, [r1]
	ldr r0, [r5, #8]
	adds r0, #1
	str r0, [r5, #8]
	ldr r0, [r5]
	cmp r0, #4
	beq _080D0A0A
	ldr r0, _080D09CC @ =gUnknown_03000420
	ldr r1, [r0]
	movs r0, #0xc2
	lsls r0, r0, #1
	adds r1, r1, r0
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
	b _080D0A0A
	.align 2, 0
_080D09C8: .4byte 0x04000154
_080D09CC: .4byte gUnknown_03000420
_080D09D0:
	ldrh r2, [r5, #0x1c]
	mov r1, sp
	movs r0, #0x45
	strb r0, [r1]
	movs r0, #0
	strb r0, [r1, #1]
	strb r2, [r1, #2]
	lsrs r2, r2, #8
	strb r2, [r1, #3]
	ldr r1, _080D09F0 @ =0x04000154
	ldr r0, [sp]
	str r0, [r1]
	ldr r0, [r5, #4]
	adds r0, #1
	str r0, [r5, #4]
	b _080D0A0A
	.align 2, 0
_080D09F0: .4byte 0x04000154
_080D09F4:
	ldr r0, [r3]
	ldr r0, [r0, #4]
	cmp r0, #1
	bls _080D0A0A
	cmp r0, #2
	bne _080D0A0A
	bl sub_80D0A74
	b _080D0A0A
_080D0A06:
	movs r0, #9
	b _080D0A0C
_080D0A0A:
	movs r0, #0
_080D0A0C:
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_80D0A14
sub_80D0A14: @ 0x080D0A14
	push {lr}
	ldr r0, _080D0A44 @ =gUnknown_0300041C
	ldr r2, [r0]
	ldr r0, [r2]
	cmp r0, #1
	bne _080D0A40
	ldr r0, [r2, #4]
	cmp r0, #2
	bhi _080D0A40
	ldr r0, _080D0A48 @ =0x04000150
	ldr r0, [r0]
	ldr r1, _080D0A4C @ =0x04000154
	ldr r0, _080D0A50 @ =gUnknown_03000420
	ldr r0, [r0]
	ldr r0, [r0, #4]
	str r0, [r1]
	adds r1, #4
	movs r0, #0x20
	strh r0, [r1]
	ldr r0, [r2, #4]
	adds r0, #1
	str r0, [r2, #4]
_080D0A40:
	pop {r0}
	bx r0
	.align 2, 0
_080D0A44: .4byte gUnknown_0300041C
_080D0A48: .4byte 0x04000150
_080D0A4C: .4byte 0x04000154
_080D0A50: .4byte gUnknown_03000420

	thumb_func_start sub_80D0A54
sub_80D0A54: @ 0x080D0A54
	ldr r1, _080D0A6C @ =gUnknown_0300041C
	ldr r2, [r1]
	movs r1, #0
	str r1, [r2]
	ldr r1, _080D0A70 @ =gUnknown_03000420
	ldr r1, [r1]
	movs r2, #0xc0
	lsls r2, r2, #1
	adds r1, r1, r2
	str r0, [r1]
	bx lr
	.align 2, 0
_080D0A6C: .4byte gUnknown_0300041C
_080D0A70: .4byte gUnknown_03000420

	thumb_func_start sub_80D0A74
sub_80D0A74: @ 0x080D0A74
	ldr r0, _080D0A8C @ =gUnknown_0300041C
	ldr r0, [r0]
	movs r1, #0
	str r1, [r0]
	ldr r0, _080D0A90 @ =gUnknown_03000420
	ldr r0, [r0]
	movs r2, #0xc0
	lsls r2, r2, #1
	adds r0, r0, r2
	str r1, [r0]
	bx lr
	.align 2, 0
_080D0A8C: .4byte gUnknown_0300041C
_080D0A90: .4byte gUnknown_03000420

	thumb_func_start sub_80D0A94
sub_80D0A94: @ 0x080D0A94
	push {r4, r5, lr}
	ldr r5, _080D0AB8 @ =gUnknown_03000420
	ldr r1, [r5]
	movs r4, #0xbe
	lsls r4, r4, #1
	adds r1, r1, r4
	movs r2, #1
	str r2, [r1]
	bl sub_80D0A54
	ldr r0, [r5]
	adds r0, r0, r4
	movs r1, #0
	str r1, [r0]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080D0AB8: .4byte gUnknown_03000420

	thumb_func_start sub_80D0ABC
sub_80D0ABC: @ 0x080D0ABC
	push {r4, lr}
	ldr r3, _080D0AD8 @ =0x04000208
	ldrh r2, [r3]
	movs r0, #0
	strh r0, [r3]
	ldr r4, _080D0ADC @ =0x04000200
	ldrh r0, [r4]
	movs r1, #0x80
	orrs r0, r1
	strh r0, [r4]
	strh r2, [r3]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D0AD8: .4byte 0x04000208
_080D0ADC: .4byte 0x04000200

	thumb_func_start sub_80D0AE0
sub_80D0AE0: @ 0x080D0AE0
	push {r4, lr}
	ldr r4, _080D0B04 @ =0x04000208
	ldrh r3, [r4]
	movs r0, #0
	strh r0, [r4]
	ldr r2, _080D0B08 @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _080D0B0C @ =0x0000FF7F
	ands r0, r1
	strh r0, [r2]
	ldr r1, _080D0B10 @ =0x04000202
	movs r0, #0x80
	strh r0, [r1]
	strh r3, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D0B04: .4byte 0x04000208
_080D0B08: .4byte 0x04000200
_080D0B0C: .4byte 0x0000FF7F
_080D0B10: .4byte 0x04000202

	thumb_func_start sub_80D0B14
sub_80D0B14: @ 0x080D0B14
	push {r4, lr}
	adds r3, r1, #0
	ldr r2, _080D0B44 @ =0x04000208
	ldrh r1, [r2]
	adds r4, r1, #0
	movs r1, #0
	strh r1, [r2]
	cmp r0, #0
	beq _080D0B30
	ldr r1, _080D0B48 @ =0x04000134
	movs r2, #0x80
	lsls r2, r2, #8
	adds r0, r2, #0
	strh r0, [r1]
_080D0B30:
	ldr r1, _080D0B48 @ =0x04000134
	movs r2, #0xc0
	lsls r2, r2, #8
	adds r0, r2, #0
	strh r0, [r1]
	cmp r3, #0
	bne _080D0B50
	ldr r0, _080D0B4C @ =0x04000158
	strh r3, [r0]
	b _080D0B56
	.align 2, 0
_080D0B44: .4byte 0x04000208
_080D0B48: .4byte 0x04000134
_080D0B4C: .4byte 0x04000158
_080D0B50:
	ldr r1, _080D0B78 @ =0x04000158
	movs r0, #0x30
	strh r0, [r1]
_080D0B56:
	ldr r0, _080D0B7C @ =0x04000150
	ldr r0, [r0]
	ldr r1, _080D0B80 @ =0x04000154
	movs r0, #0
	str r0, [r1]
	subs r1, #0x14
	movs r0, #0x47
	strh r0, [r1]
	adds r1, #0xc2
	movs r0, #0x80
	strh r0, [r1]
	ldr r0, _080D0B84 @ =0x04000208
	strh r4, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D0B78: .4byte 0x04000158
_080D0B7C: .4byte 0x04000150
_080D0B80: .4byte 0x04000154
_080D0B84: .4byte 0x04000208

	thumb_func_start sub_80D0B88
sub_80D0B88: @ 0x080D0B88
	ldr r0, _080D0BA0 @ =gUnknown_03000420
	ldr r1, [r0]
	movs r2, #0
	str r2, [r1, #0x34]
	str r2, [r1, #0x38]
	ldr r3, _080D0BA4 @ =gUnknown_0300041C
	adds r0, r1, #0
	adds r0, #0x3c
	str r0, [r3]
	str r2, [r1, #0x3c]
	bx lr
	.align 2, 0
_080D0BA0: .4byte gUnknown_03000420
_080D0BA4: .4byte gUnknown_0300041C

	thumb_func_start sub_80D0BA8
sub_80D0BA8: @ 0x080D0BA8
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r0, _080D0BDC @ =gUnknown_03000420
	ldr r4, [r0]
	ldr r0, [r4, #0x38]
	adds r0, #1
	movs r1, #0xa
	bl sub_80D0F4E
	str r0, [r4, #0x38]
	movs r0, #0
	str r0, [r5, #4]
	str r0, [r5, #8]
	ldr r0, [r4, #0x38]
	lsls r0, r0, #5
	adds r4, r4, r0
	adds r4, #0x3c
	ldm r5!, {r0, r1, r2}
	stm r4!, {r0, r1, r2}
	ldm r5!, {r0, r1, r2}
	stm r4!, {r0, r1, r2}
	ldm r5!, {r0, r1}
	stm r4!, {r0, r1}
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080D0BDC: .4byte gUnknown_03000420

	thumb_func_start sub_80D0BE0
sub_80D0BE0: @ 0x080D0BE0
	push {r4, lr}
	ldr r0, _080D0C08 @ =gUnknown_03000420
	ldr r4, [r0]
	ldr r1, [r4, #0x34]
	ldr r0, [r4, #0x38]
	cmp r1, r0
	beq _080D0C02
	adds r0, r1, #1
	movs r1, #0xa
	bl sub_80D0F4E
	str r0, [r4, #0x34]
	ldr r1, _080D0C0C @ =gUnknown_0300041C
	lsls r0, r0, #5
	adds r0, #0x3c
	adds r0, r4, r0
	str r0, [r1]
_080D0C02:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D0C08: .4byte gUnknown_03000420
_080D0C0C: .4byte gUnknown_0300041C

	thumb_func_start sub_80D0C10
sub_80D0C10: @ 0x080D0C10
	push {lr}
	movs r2, #0
	ldr r0, _080D0C28 @ =gUnknown_03000420
	ldr r0, [r0]
	ldr r1, [r0, #0x34]
	ldr r0, [r0, #0x38]
	cmp r1, r0
	bne _080D0C22
	movs r2, #1
_080D0C22:
	adds r0, r2, #0
	pop {r1}
	bx r1
	.align 2, 0
_080D0C28: .4byte gUnknown_03000420

	thumb_func_start sub_80D0C2C
sub_80D0C2C: @ 0x080D0C2C
	push {r4, lr}
	ldr r0, _080D0C60 @ =gUnknown_03000420
	ldr r4, [r0]
	ldr r0, [r4, #0x34]
	adds r0, #1
	movs r1, #0xa
	bl sub_80D0F4E
	str r0, [r4, #0x38]
	lsls r0, r0, #5
	adds r1, r4, #0
	adds r1, #0x3c
	adds r1, r1, r0
	movs r0, #0
	str r0, [r1]
	ldr r0, [r4, #0x38]
	str r0, [r4, #0x34]
	ldr r1, _080D0C64 @ =gUnknown_0300041C
	lsls r0, r0, #5
	adds r0, #0x3c
	adds r4, r4, r0
	str r4, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D0C60: .4byte gUnknown_03000420
_080D0C64: .4byte gUnknown_0300041C
_080D0C68:
	.byte 0x01, 0x70, 0x00, 0x21, 0x41, 0x70, 0x82, 0x70
	.byte 0x12, 0x0A, 0xC2, 0x70, 0x70, 0x47, 0x00, 0x00, 0x01, 0x70, 0x42, 0x70, 0x19, 0x78, 0x81, 0x70
	.byte 0x59, 0x78, 0xC1, 0x70, 0x70, 0x47, 0x00, 0x00, 0x00, 0x78, 0x70, 0x47, 0x01, 0x1C, 0x88, 0x78
	.byte 0xC9, 0x78, 0x09, 0x02, 0x08, 0x43, 0x70, 0x47, 0x40, 0x78, 0x70, 0x47, 0x82, 0x78, 0x0A, 0x70
	.byte 0xC0, 0x78, 0x48, 0x70, 0x70, 0x47, 0x00, 0x00, 0x01, 0x1C, 0x08, 0x78, 0x49, 0x78, 0x09, 0x02
	.byte 0x08, 0x43, 0x70, 0x47, 0x10, 0xB5, 0x02, 0x1C, 0x00, 0x23, 0x08, 0x78, 0x94, 0x78, 0xA0, 0x42
	.byte 0x04, 0xD1, 0x48, 0x78, 0xD2, 0x78, 0x90, 0x42, 0x00, 0xD1, 0x01, 0x23, 0x18, 0x1C, 0x10, 0xBC
	.byte 0x02, 0xBC, 0x08, 0x47

	thumb_func_start sub_80D0CD4
sub_80D0CD4: @ 0x080D0CD4
	push {lr}
	adds r1, r0, #0
	ldr r0, _080D0D08 @ =0x0000FFFF
	cmp r1, r0
	bhi _080D0D02
	movs r3, #0xff
	ands r3, r1
	movs r0, #0xff
	lsls r0, r0, #8
	ands r0, r1
	asrs r2, r0, #8
	adds r0, r3, #0
	subs r0, #0x40
	cmp r0, #0xbc
	bhi _080D0D02
	cmp r2, #0x80
	bls _080D0D02
	cmp r2, #0xea
	bhi _080D0D02
	adds r0, r2, #0
	subs r0, #0xa0
	cmp r0, #0x3f
	bhi _080D0D0C
_080D0D02:
	movs r0, #1
	rsbs r0, r0, #0
	b _080D0D22
	.align 2, 0
_080D0D08: .4byte 0x0000FFFF
_080D0D0C:
	cmp r2, #0x9f
	bhi _080D0D14
	subs r2, #0x81
	b _080D0D16
_080D0D14:
	subs r2, #0xc1
_080D0D16:
	subs r3, #0x40
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r0, r1, #6
	subs r0, r0, r1
	adds r0, r0, r3
_080D0D22:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80D0D28
sub_80D0D28: @ 0x080D0D28
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r2, r1, #0
	movs r6, #0
	movs r5, #1
	rsbs r5, r5, #0
	adds r0, r2, #0
	subs r0, #0xb1
	cmp r0, #0x12
	bls _080D0D3E
	b _080D0E20
_080D0D3E:
	lsls r0, r0, #2
	ldr r1, _080D0D48 @ =_080D0D4C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080D0D48: .4byte _080D0D4C
_080D0D4C: @ jump table
	.4byte _080D0DB0 @ case 0
	.4byte _080D0DB8 @ case 1
	.4byte _080D0DC0 @ case 2
	.4byte _080D0D98 @ case 3
	.4byte _080D0E20 @ case 4
	.4byte _080D0DA0 @ case 5
	.4byte _080D0DA8 @ case 6
	.4byte _080D0E20 @ case 7
	.4byte _080D0E20 @ case 8
	.4byte _080D0E20 @ case 9
	.4byte _080D0DC8 @ case 10
	.4byte _080D0DD0 @ case 11
	.4byte _080D0DD8 @ case 12
	.4byte _080D0DE0 @ case 13
	.4byte _080D0DE8 @ case 14
	.4byte _080D0DF0 @ case 15
	.4byte _080D0DF8 @ case 16
	.4byte _080D0E00 @ case 17
	.4byte _080D0E08 @ case 18
_080D0D98:
	ldr r0, _080D0D9C @ =gUnknown_08117B20
	b _080D0E0A
	.align 2, 0
_080D0D9C: .4byte gUnknown_08117B20
_080D0DA0:
	ldr r0, _080D0DA4 @ =gUnknown_08117B2C
	b _080D0E0A
	.align 2, 0
_080D0DA4: .4byte gUnknown_08117B2C
_080D0DA8:
	ldr r0, _080D0DAC @ =gUnknown_08117B38
	b _080D0E0A
	.align 2, 0
_080D0DAC: .4byte gUnknown_08117B38
_080D0DB0:
	ldr r0, _080D0DB4 @ =gUnknown_08117B44
	b _080D0E0A
	.align 2, 0
_080D0DB4: .4byte gUnknown_08117B44
_080D0DB8:
	ldr r0, _080D0DBC @ =gUnknown_08117B50
	b _080D0E0A
	.align 2, 0
_080D0DBC: .4byte gUnknown_08117B50
_080D0DC0:
	ldr r0, _080D0DC4 @ =gUnknown_08117B5C
	b _080D0E0A
	.align 2, 0
_080D0DC4: .4byte gUnknown_08117B5C
_080D0DC8:
	ldr r0, _080D0DCC @ =gUnknown_08117B68
	b _080D0E0A
	.align 2, 0
_080D0DCC: .4byte gUnknown_08117B68
_080D0DD0:
	ldr r0, _080D0DD4 @ =gUnknown_08117B74
	b _080D0E0A
	.align 2, 0
_080D0DD4: .4byte gUnknown_08117B74
_080D0DD8:
	ldr r0, _080D0DDC @ =gUnknown_08117B80
	b _080D0E0A
	.align 2, 0
_080D0DDC: .4byte gUnknown_08117B80
_080D0DE0:
	ldr r0, _080D0DE4 @ =gUnknown_08117B8C
	b _080D0E0A
	.align 2, 0
_080D0DE4: .4byte gUnknown_08117B8C
_080D0DE8:
	ldr r0, _080D0DEC @ =gUnknown_08117B98
	b _080D0E0A
	.align 2, 0
_080D0DEC: .4byte gUnknown_08117B98
_080D0DF0:
	ldr r0, _080D0DF4 @ =gUnknown_08117BA4
	b _080D0E0A
	.align 2, 0
_080D0DF4: .4byte gUnknown_08117BA4
_080D0DF8:
	ldr r0, _080D0DFC @ =gUnknown_08117BB0
	b _080D0E0A
	.align 2, 0
_080D0DFC: .4byte gUnknown_08117BB0
_080D0E00:
	ldr r0, _080D0E04 @ =gUnknown_08117BBC
	b _080D0E0A
	.align 2, 0
_080D0E04: .4byte gUnknown_08117BBC
_080D0E08:
	ldr r0, _080D0E18 @ =gUnknown_08117BC8
_080D0E0A:
	adds r1, r4, #0
	ldr r2, _080D0E1C @ =gUnknown_0300085C
	bl sub_80D3914
	movs r0, #1
	b _080D0EB6
	.align 2, 0
_080D0E18: .4byte gUnknown_08117BC8
_080D0E1C: .4byte gUnknown_0300085C
_080D0E20:
	cmp r2, #0
	ble _080D0E58
	cmp r2, #0xff
	bgt _080D0E3C
	ldr r1, _080D0E38 @ =gUnknown_084FA7A0
	lsls r0, r2, #1
	adds r0, r0, r1
	movs r1, #0
	ldrsh r5, [r0, r1]
	movs r6, #1
	b _080D0E58
	.align 2, 0
_080D0E38: .4byte gUnknown_084FA7A0
_080D0E3C:
	ldr r0, _080D0E78 @ =0x0000FFFF
	cmp r2, r0
	bgt _080D0E58
	adds r0, r2, #0
	bl sub_80D0CD4
	cmp r0, #0
	blt _080D0E58
	ldr r1, _080D0E7C @ =gUnknown_08523290
	lsls r0, r0, #1
	adds r0, r0, r1
	movs r1, #0
	ldrsh r5, [r0, r1]
	movs r6, #2
_080D0E58:
	cmp r4, #0
	beq _080D0EAE
	cmp r5, #0
	blt _080D0EA4
	cmp r6, #1
	beq _080D0E88
	lsls r0, r5, #1
	adds r0, r0, r5
	lsls r0, r0, #3
	ldr r1, _080D0E80 @ =gUnknown_084FA9A0
	adds r0, r0, r1
	adds r1, r4, #0
	ldr r2, _080D0E84 @ =gUnknown_03000714
	bl sub_80D3914
	b _080D0EAE
	.align 2, 0
_080D0E78: .4byte 0x0000FFFF
_080D0E7C: .4byte gUnknown_08523290
_080D0E80: .4byte gUnknown_084FA9A0
_080D0E84: .4byte gUnknown_03000714
_080D0E88:
	lsls r0, r5, #1
	adds r0, r0, r5
	lsls r0, r0, #2
	ldr r1, _080D0E9C @ =gUnknown_084F90CC
	adds r0, r0, r1
	adds r1, r4, #0
	ldr r2, _080D0EA0 @ =gUnknown_0300085C
	bl sub_80D3914
	b _080D0EAE
	.align 2, 0
_080D0E9C: .4byte gUnknown_084F90CC
_080D0EA0: .4byte gUnknown_0300085C
_080D0EA4:
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x80
	bl sub_80D3A84
_080D0EAE:
	movs r0, #0
	cmp r5, #0
	blt _080D0EB6
	adds r0, r6, #0
_080D0EB6:
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_80D0EBC
sub_80D0EBC: @ 0x080D0EBC
	stm r3!, {r0, r1, r2}
	bx lr
    
    .global sub_80D0EC0
sub_80D0EC0:
	push {lr}
	movs r0, #0
	pop {r1}
	bx r1

    .global sub_80D0EC8
sub_80D0EC8:
	cmp r1, #0
	beq sub_80D0EC0
	svc #6
	bx lr
    
    .global sub_80D0ED0
sub_80D0ED0:
	cmp r1, #0
	beq sub_80D0EC0
	svc #6
	adds r0, r1, #0
	bx lr

	non_word_aligned_thumb_func_start sub_80D0EDA
sub_80D0EDA: @ 0x080D0EDA
	adds r3, r0, #0
	orrs r3, r1
	bpl sub_80D0EC8
	cmp r1, #0
	beq sub_80D0EC0
	movs r3, #1
	movs r2, #0
	push {r4}
	cmp r0, r1
	blo _080D0F48
	movs r4, #1
	lsls r4, r4, #0x1c
_080D0EF2:
	cmp r1, r4
	bhs _080D0F00
	cmp r1, r0
	bhs _080D0F00
	lsls r1, r1, #4
	lsls r3, r3, #4
	b _080D0EF2
_080D0F00:
	lsls r4, r4, #3
_080D0F02:
	cmp r1, r4
	bhs _080D0F10
	cmp r1, r0
	bhs _080D0F10
	lsls r1, r1, #1
	lsls r3, r3, #1
	b _080D0F02
_080D0F10:
	cmp r0, r1
	blo _080D0F18
	subs r0, r0, r1
	orrs r2, r3
_080D0F18:
	lsrs r4, r1, #1
	cmp r0, r4
	blo _080D0F24
	subs r0, r0, r4
	lsrs r4, r3, #1
	orrs r2, r4
_080D0F24:
	lsrs r4, r1, #2
	cmp r0, r4
	blo _080D0F30
	subs r0, r0, r4
	lsrs r4, r3, #2
	orrs r2, r4
_080D0F30:
	lsrs r4, r1, #3
	cmp r0, r4
	blo _080D0F3C
	subs r0, r0, r4
	lsrs r4, r3, #3
	orrs r2, r4
_080D0F3C:
	cmp r0, #0
	beq _080D0F48
	lsrs r3, r3, #4
	beq _080D0F48
	lsrs r1, r1, #4
	b _080D0F10
_080D0F48:
	adds r0, r2, #0
	pop {r4}
	bx lr

	non_word_aligned_thumb_func_start sub_80D0F4E
sub_80D0F4E: @ 0x080D0F4E
	adds r3, r0, #0
	orrs r3, r1
	bpl sub_80D0ED0
	cmp r1, #0
	beq sub_80D0EC0
	movs r3, #1
	cmp r0, r1
	bhs sub_080D0F60
	bx lr

	thumb_func_start sub_080D0F60
sub_080D0F60: @ 0x080D0F60
	push {r4}
	movs r4, #1
	lsls r4, r4, #0x1c
_080D0F66:
	cmp r1, r4
	bhs _080D0F74
	cmp r1, r0
	bhs _080D0F74
	lsls r1, r1, #4
	lsls r3, r3, #4
	b _080D0F66
_080D0F74:
	lsls r4, r4, #3
_080D0F76:
	cmp r1, r4
	bhs _080D0F84
	cmp r1, r0
	bhs _080D0F84
	lsls r1, r1, #1
	lsls r3, r3, #1
	b _080D0F76
_080D0F84:
	movs r2, #0
	cmp r0, r1
	blo _080D0F8C
	subs r0, r0, r1
_080D0F8C:
	lsrs r4, r1, #1
	cmp r0, r4
	blo _080D0F9E
	subs r0, r0, r4
	mov ip, r3
	movs r4, #1
	rors r3, r4
	orrs r2, r3
	mov r3, ip
_080D0F9E:
	lsrs r4, r1, #2
	cmp r0, r4
	blo _080D0FB0
	subs r0, r0, r4
	mov ip, r3
	movs r4, #2
	rors r3, r4
	orrs r2, r3
	mov r3, ip
_080D0FB0:
	lsrs r4, r1, #3
	cmp r0, r4
	blo _080D0FC2
	subs r0, r0, r4
	mov ip, r3
	movs r4, #3
	rors r3, r4
	orrs r2, r3
	mov r3, ip
_080D0FC2:
	mov ip, r3
	cmp r0, #0
	beq _080D0FD0
	lsrs r3, r3, #4
	beq _080D0FD0
	lsrs r1, r1, #4
	b _080D0F84
_080D0FD0:
	movs r4, #0xe
	lsls r4, r4, #0x1c
	ands r2, r4
	bne sub_080D0FDC
	pop {r4}
	bx lr

	thumb_func_start sub_080D0FDC
sub_080D0FDC: @ 0x080D0FDC
	mov r3, ip
	movs r4, #3
	rors r3, r4
	tst r2, r3
	beq _080D0FEA
	lsrs r4, r1, #3
	adds r0, r0, r4
_080D0FEA:
	mov r3, ip
	movs r4, #2
	rors r3, r4
	tst r2, r3
	beq _080D0FF8
	lsrs r4, r1, #2
	adds r0, r0, r4
_080D0FF8:
	mov r3, ip
	movs r4, #1
	rors r3, r4
	tst r2, r3
	beq _080D1006
	lsrs r4, r1, #1
	adds r0, r0, r4
_080D1006:
	pop {r4}
	bx lr
	.align 2, 0

	thumb_func_start sub_80D100C
sub_80D100C: @ 0x080D100C
	ldr r2, _080D1018 @ =gUnknown_03000450
	lsls r0, r0, #2
	adds r2, r2, r0
	ldr r0, [r2]
	str r1, [r2]
	bx lr
	.align 2, 0
_080D1018: .4byte gUnknown_03000450

	thumb_func_start sub_80D101C
sub_80D101C: @ 0x080D101C
	ldr r2, _080D1028 @ =gUnknown_03000430
	lsls r0, r0, #1
	adds r2, r2, r0
	ldrh r0, [r2]
	strh r1, [r2]
	bx lr
	.align 2, 0
_080D1028: .4byte gUnknown_03000430

	thumb_func_start sub_80D102C
sub_80D102C: @ 0x080D102C
	push {r4, r5, r6, r7, lr}
	mov r4, r8
	mov r5, sb
	mov r6, sl
	mov r7, fp
	push {r4, r5, r6, r7}
	ldr r2, _080D11C8 @ =0xFFFFFBE0
	add sp, r2
	mov r7, sp
	ldm r0!, {r4}
	lsrs r4, r4, #8
	push {r4}
	mov r8, r4
	subs r1, #2
	add r8, r1
	movs r2, #0
	adds r3, r2, #0
	movs r4, #8
	bl sub_80D11A4
	str r4, [r7]
	adds r6, r4, #0
	lsls r4, r4, #0x1b
	lsrs r4, r4, #0x1e
	subs r4, #1
	beq _080D1068
	subs r4, #1
	beq _080D106E
	ldr r5, _080D11CC @ =sub_80D116A
	b _080D1076
_080D1068:
	movs r4, #4
	ldr r5, _080D11D0 @ =sub_80D116E
	b _080D1072
_080D106E:
	movs r4, #8
	ldr r5, _080D11D4 @ =sub_80D117E
_080D1072:
	bl sub_80D10F0
_080D1076:
	mov sb, r5
	push {r1}
	lsls r6, r6, #0x1d
	lsrs r6, r6, #0x1d
	subs r6, #1
	beq _080D1094
	subs r6, #1
	beq _080D109A
	subs r6, #1
	beq _080D10A0
	subs r6, #1
	beq _080D10A6
	bl sub_080D1224
	b _080D10AA
_080D1094:
	bl sub_080D129A
	b _080D10AA
_080D109A:
	bl sub_080D12EC
	b _080D10AA
_080D10A0:
	bl sub_080D139C
	b _080D10AA
_080D10A6:
	bl sub_080D1204
_080D10AA:
	pop {r0}
	ldr r4, [r7]
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x1d
	subs r4, #1
	beq _080D10C4
	subs r4, #1
	beq _080D10CA
	subs r4, #1
	beq _080D10D0
	subs r4, #1
	beq _080D10D6
	b _080D10DA
_080D10C4:
	bl sub_80D1518
	b _080D10DA
_080D10CA:
	bl sub_80D1548
	b _080D10DA
_080D10D0:
	bl sub_80D1564
	b _080D10DA
_080D10D6:
	bl sub_80D1574
_080D10DA:
	pop {r0}
	ldr r2, _080D11D8 @ =0x00000420
	add sp, r2
	pop {r4, r5, r6, r7}
	mov r8, r4
	mov sb, r5
	mov sl, r6
	mov fp, r7
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_80D10F0
sub_80D10F0: @ 0x080D10F0
	push {r1, r5, r6, lr}
	mov sl, r4
	movs r6, #1
	subs r5, r6, #2
	lsls r6, r4
	adds r4, r5, #0
	adds r1, r7, #0
	adds r1, #0x20
_080D1100:
	stm r1!, {r4, r5}
	subs r6, #2
	bgt _080D1100
	movs r4, #0x20
	mov fp, r4
	movs r5, #0
	mov ip, r5
	mov r6, sl
	lsls r6, r6, #1
_080D1112:
	lsls r5, r5, #1
	mov r4, sl
	bl sub_80D11A4
	tst r4, r4
	beq _080D1160
	push {r6}
_080D1120:
	mov sb, r4
	movs r1, #0x20
	mov r6, ip
	tst r6, r6
	beq _080D1146
_080D112A:
	adds r4, r5, #0
	lsrs r4, r6
	lsls r4, r4, #0x1f
	lsrs r4, r4, #0x1e
	adds r4, r4, r1
	ldrsh r1, [r7, r4]
	tst r1, r1
	bpl _080D1142
	mov r1, fp
	adds r1, #4
	mov fp, r1
	strh r1, [r7, r4]
_080D1142:
	subs r6, #1
	bne _080D112A
_080D1146:
	lsls r6, r5, #0x1f
	lsrs r6, r6, #0x1e
	adds r6, r6, r1
	mov r4, sl
	bl sub_80D11A4
	mvns r4, r4
	strh r4, [r7, r6]
	adds r5, #1
	mov r4, sb
	subs r4, #1
	bne _080D1120
	pop {r6}
_080D1160:
	movs r1, #1
	add ip, r1
	subs r6, #1
	bne _080D1112
	pop {r1, r5, r6, pc}

	non_word_aligned_thumb_func_start sub_80D116A
sub_80D116A: @ 0x080D116A
	movs r4, #8
	b sub_80D11A4

	non_word_aligned_thumb_func_start sub_80D116E
sub_80D116E: @ 0x080D116E
	push {r5, r6, lr}
	bl sub_80D1186
	lsls r6, r4, #4
	bl sub_80D1186
	orrs r4, r6
	pop {r5, r6, pc}

	non_word_aligned_thumb_func_start sub_80D117E
sub_80D117E: @ 0x080D117E
	push {r5, lr}
	bl sub_80D1186
	pop {r5, pc}

	non_word_aligned_thumb_func_start sub_80D1186
sub_80D1186: @ 0x080D1186
	movs r4, #0x20
_080D1188:
	subs r3, #1
	bmi sub_080D119E
_080D118C:
	lsrs r5, r2, #0x1f
	lsls r2, r2, #1
	lsls r5, r5, #1
	adds r5, r5, r4
	ldrsh r4, [r7, r5]
	tst r4, r4
	bpl _080D1188
	mvns r4, r4
	bx lr

	non_word_aligned_thumb_func_start sub_080D119E
sub_080D119E: @ 0x080D119E
	ldm r0!, {r2}
	adds r3, #0x20
	b _080D118C
sub_80D11A4:
	push {r5, r6, lr}
	movs r5, #0x20
	subs r5, r5, r4
	adds r6, r2, #0
	lsrs r6, r5
	subs r3, r3, r4
	bmi sub_080D11B8
	lsls r2, r4
	adds r4, r6, #0
	pop {r5, r6, pc}

	thumb_func_start sub_080D11B8
sub_080D11B8: @ 0x080D11B8
	ldm r0!, {r2}
	rsbs r5, r3, #0
	adds r4, r2, #0
	lsls r2, r5
	adds r3, #0x20
	lsrs r4, r3
	orrs r4, r6
	pop {r5, r6, pc}
	.align 2, 0
_080D11C8: .4byte 0xFFFFFBE0
_080D11CC: .4byte sub_80D116A
_080D11D0: .4byte sub_80D116E
_080D11D4: .4byte sub_80D117E
_080D11D8: .4byte 0x00000420
_080D11DC:
	.byte 0x06, 0x49, 0x08, 0x60
	.byte 0x70, 0x47, 0x00, 0x00

	thumb_func_start sub_80D11E4
sub_80D11E4: @ 0x080D11E4
	add r0, pc, #0x10
	ldm r0!, {r1, r2, r3}
	ldr r0, [r1]
	muls r0, r2, r0
	adds r0, r0, r3
	str r0, [r1]
	lsls r0, r0, #1
	lsrs r0, r0, #1
	bx lr
	.align 2, 0
_080D11F8:
	.byte 0x50, 0x0A, 0x00, 0x03, 0x6D, 0x4E, 0xC6, 0x41
	.byte 0x39, 0x30, 0x00, 0x00

	thumb_func_start sub_080D1204
sub_080D1204: @ 0x080D1204
	push {lr}
	mov r6, r8
	subs r6, r6, r1
	mov lr, pc
	bx sb
_080D120E:
	.byte 0x01, 0x31
	.byte 0xCD, 0x07, 0x02, 0xD4, 0x24, 0x02, 0x54, 0x44, 0x0C, 0x80, 0xA2, 0x46, 0x01, 0x3E, 0xF4, 0xD1
	.byte 0x10, 0xBC, 0x20, 0x47

	thumb_func_start sub_080D1224
sub_080D1224: @ 0x080D1224
	push {lr}
	movs r5, #2
	bl sub_80D14EC
	ldr r4, _080D150C @ =0x080D1292
	mov ip, r4
	movs r4, #2
	bl sub_80D11A4
	cmp r4, #2
	blo _080D125C
	beq _080D1274
	movs r4, #6
	bl sub_80D11A4
	adds r6, r4, #1
	movs r4, #8
	bl sub_80D11A4
	adds r1, #1
	lsls r5, r1, #0x1f
	bmi _080D1256
	lsls r4, r4, #8
	add r4, sl
	strh r4, [r1]
_080D1256:
	mov sl, r4
	movs r5, #1
	b _080D145C
_080D125C:
	lsls r5, r4, #2
	adds r5, r5, r7
	ldrb r4, [r5, #6]
	bl sub_80D11A4
	ldrh r5, [r5, #4]
	adds r5, r5, r4
	movs r4, #6
	bl sub_80D11A4
	adds r6, r4, #3
	b _080D145C
_080D1274:
	movs r4, #6
	bl sub_80D11A4
	adds r6, r4, #1
	mov lr, pc
	bx sb
_080D1280:
	.byte 0x01, 0x31, 0xCD, 0x07, 0x02, 0xD4, 0x24, 0x02, 0x54, 0x44, 0x0C, 0x80, 0xA2, 0x46, 0x01, 0x3E
	.byte 0xF4, 0xD1, 0x41, 0x45, 0xCC, 0xD3, 0x10, 0xBC, 0x20, 0x47

	non_word_aligned_thumb_func_start sub_080D129A
sub_080D129A: @ 0x080D129A
	push {lr}
	movs r5, #4
	bl sub_80D14EC
	ldr r4, _080D1510 @ =0x080D12DE
	mov ip, r4
	subs r3, #1
	bmi _080D12E6
_080D12AA:
	lsls r2, r2, #1
	blo _080D12CC
	movs r4, #2
	bl sub_80D11A4
	lsls r5, r4, #2
	adds r5, r5, r7
	ldrb r4, [r5, #6]
	bl sub_80D11A4
	ldrh r5, [r5, #4]
	adds r5, r5, r4
	movs r4, #4
	bl sub_80D11A4
	adds r6, r4, #3
	b _080D145C
_080D12CC:
	mov lr, pc
	bx sb
_080D12D0:
	.byte 0x01, 0x31, 0xCE, 0x07, 0x02, 0xD4, 0x24, 0x02, 0x54, 0x44, 0x0C, 0x80, 0xA2, 0x46, 0x41, 0x45
	.byte 0xE1, 0xD3, 0x10, 0xBC, 0x20, 0x47
_080D12E6:
	ldm r0!, {r2}
	adds r3, #0x20
	b _080D12AA

	thumb_func_start sub_080D12EC
sub_080D12EC: @ 0x080D12EC
	push {lr}
	movs r5, #7
	bl sub_80D14EC
	ldr r4, _080D1514 @ =0x080D1388
	mov ip, r4
	subs r3, #1
	bmi _080D1390
_080D12FC:
	lsls r2, r2, #1
	blo _080D1376
	movs r4, #3
	bl sub_80D11A4
	cmp r4, #7
	beq _080D1322
	lsls r5, r4, #2
	adds r5, r5, r7
	ldrb r4, [r5, #6]
	bl sub_80D11A4
	ldrh r5, [r5, #4]
	adds r5, r5, r4
	movs r4, #4
	bl sub_80D11A4
	adds r6, r4, #3
	b _080D145C
_080D1322:
	movs r6, #0
_080D1324:
	movs r4, #4
	bl sub_80D11A4
	lsls r6, r6, #4
	adds r6, r6, r4
	lsrs r6, r6, #1
	bhs _080D1324
	subs r3, #1
	bmi _080D1396
_080D1336:
	lsls r2, r2, #1
	blo _080D135C
	movs r4, #3
	bl sub_80D11A4
	lsls r5, r4, #2
	adds r5, r5, r7
	ldrb r4, [r5, #6]
	bl sub_80D11A4
	ldrh r5, [r5, #4]
	adds r5, r5, r4
	movs r4, #4
	bl sub_80D11A4
	lsls r6, r6, #4
	adds r6, r6, r4
	adds r6, #3
	b _080D145C
_080D135C:
	adds r6, #1
	mov lr, pc
	bx sb
_080D1362:
	.byte 0x01, 0x31, 0xCD, 0x07, 0x02, 0xD4, 0x24, 0x02, 0x54, 0x44, 0x0C, 0x80, 0xA2, 0x46
	.byte 0x01, 0x3E, 0xF4, 0xD1, 0x08, 0xE0
_080D1376:
	mov lr, pc
	bx sb
_080D137A:
	.byte 0x01, 0x31, 0xCD, 0x07, 0x02, 0xD4
	.byte 0x24, 0x02, 0x54, 0x44, 0x0C, 0x80, 0xA2, 0x46, 0x41, 0x45, 0xB5, 0xD3, 0x10, 0xBC, 0x20, 0x47
_080D1390:
	ldm r0!, {r2}
	adds r3, #0x20
	b _080D12FC
_080D1396:
	ldm r0!, {r2}
	adds r3, #0x20
	b _080D1336

	thumb_func_start sub_080D139C
sub_080D139C: @ 0x080D139C
	push {lr}
	movs r5, #3
	bl sub_80D14EC
_080D13A4:
	subs r3, #1
	bmi _080D1450
_080D13A8:
	lsls r2, r2, #1
	bhs _080D13C0
	mov lr, pc
	bx sb
_080D13B0:
	.byte 0x25, 0x1C, 0xFE, 0x46, 0x48, 0x47, 0x24, 0x02, 0x2C, 0x43, 0x02, 0x31, 0x0C, 0x80, 0x43, 0xE0
_080D13C0:
	movs r4, #2
	bl sub_80D11A4
	cmp r4, #3
	beq _080D13E4
	lsls r5, r4, #2
	adds r5, r5, r7
	ldrb r4, [r5, #6]
	bl sub_80D11A4
	ldrh r5, [r5, #4]
	adds r5, r5, r4
	lsls r5, r5, #1
	movs r4, #3
	bl sub_80D11A4
	adds r6, r4, #2
	b _080D143A
_080D13E4:
	movs r6, #0
_080D13E6:
	movs r4, #3
	bl sub_80D11A4
	lsls r6, r6, #3
	adds r6, r6, r4
	lsrs r6, r6, #1
	bhs _080D13E6
	subs r3, #1
	bmi _080D1456
_080D13F8:
	lsls r2, r2, #1
	blo _080D1420
	movs r4, #2
	bl sub_80D11A4
	lsls r5, r4, #2
	adds r5, r5, r7
	ldrb r4, [r5, #6]
	bl sub_80D11A4
	ldrh r5, [r5, #4]
	adds r5, r5, r4
	lsls r5, r5, #1
	movs r4, #3
	bl sub_80D11A4
	lsls r6, r6, #3
	adds r6, r6, r4
	adds r6, #2
	b _080D143A
_080D1420:
	adds r6, #1
	mov lr, pc
	bx sb
_080D1426:
	.byte 0x25, 0x1C, 0xFE, 0x46, 0x48, 0x47, 0x24, 0x02, 0x64, 0x19
	.byte 0x02, 0x31, 0x0C, 0x80, 0x01, 0x3E, 0xF4, 0xD1, 0x06, 0xE0
_080D143A:
	subs r5, r1, r5
_080D143C:
	adds r5, #2
	ldrh r4, [r5]
	adds r1, #2
	strh r4, [r1]
	subs r6, #1
	bne _080D143C
	cmp r1, r8
	blo _080D13A4
	pop {r4}
	bx r4
_080D1450:
	ldm r0!, {r2}
	adds r3, #0x20
	b _080D13A8
_080D1456:
	ldm r0!, {r2}
	adds r3, #0x20
	b _080D13F8
_080D145C:
	mov lr, ip
	push {r2, lr}
	mov r2, sl
	cmp r5, #1
	beq sub_080D14C6
	lsls r4, r5, #0x1f
	bne sub_080D1498
	subs r5, r1, r5
	lsls r4, r5, #0x1f
	beq _080D1482
	adds r5, #1
	ldrh r4, [r5]
	lsrs r4, r4, #8
	lsls r4, r4, #8
	orrs r4, r2
	adds r1, #1
	strh r4, [r1]
	subs r6, #1
	beq _080D1494
_080D1482:
	adds r5, #2
	ldrh r4, [r5]
	adds r1, #2
	strh r4, [r1]
	subs r6, #2
	bgt _080D1482
	lsls r4, r4, #0x18
	lsrs r2, r4, #0x18
	adds r1, r1, r6
_080D1494:
	mov sl, r2
	pop {r2, pc}

	thumb_func_start sub_080D1498
sub_080D1498: @ 0x080D1498
	subs r5, r1, r5
	lsls r4, r5, #0x1f
	beq _080D14AA
	adds r5, #1
	ldrh r2, [r5]
	lsrs r2, r2, #8
	adds r1, #1
	subs r6, #1
	beq _080D14C2
_080D14AA:
	subs r1, #1
_080D14AC:
	adds r5, #2
	ldrh r4, [r5]
	lsls r4, r4, #8
	orrs r4, r2
	adds r1, #2
	strh r4, [r1]
	lsrs r2, r4, #0x10
	subs r6, #2
	bgt _080D14AC
	adds r6, #1
	adds r1, r1, r6
_080D14C2:
	mov sl, r2
	pop {r2, pc}

	non_word_aligned_thumb_func_start sub_080D14C6
sub_080D14C6: @ 0x080D14C6
	lsls r4, r1, #0x1f
	bpl _080D14D4
	lsls r4, r2, #8
	orrs r4, r2
	adds r1, #1
	adds r6, #1
	b _080D14DE
_080D14D4:
	ldrh r4, [r1]
	lsrs r4, r4, #8
	lsls r2, r4, #8
	orrs r4, r2
_080D14DC:
	adds r1, #2
_080D14DE:
	strh r4, [r1]
	subs r6, #2
	bgt _080D14DC
	lsrs r2, r4, #8
	adds r1, r1, r6
	mov sl, r2
	pop {r2, pc}

	thumb_func_start sub_80D14EC
sub_80D14EC: @ 0x080D14EC
	push {r1, r7, lr}
	movs r6, #1
_080D14F0:
	movs r4, #4
	bl sub_80D11A4
	adds r4, #1
	strb r4, [r7, #6]
	strh r6, [r7, #4]
	adds r7, #4
	movs r1, #1
	lsls r1, r4
	adds r6, r6, r1
	subs r5, #1
	bne _080D14F0
	pop {r1, r7, pc}
	.align 2, 0
_080D150C: .4byte 0x080D1292
_080D1510: .4byte 0x080D12DE
_080D1514: .4byte 0x080D1388

	thumb_func_start sub_80D1518
sub_80D1518: @ 0x080D1518
	movs r6, #0xf
	movs r5, #0
_080D151C:
	ldrh r2, [r0, #2]
	lsrs r1, r2, #4
	lsrs r3, r2, #0xc
	lsrs r4, r2, #8
	adds r1, r1, r5
	adds r2, r2, r1
	adds r3, r3, r2
	adds r5, r4, r3
	ands r1, r6
	ands r2, r6
	ands r5, r6
	lsls r1, r1, #4
	lsls r3, r3, #0xc
	lsls r4, r5, #8
	orrs r1, r2
	orrs r1, r3
	orrs r1, r4
	strh r1, [r0, #2]
	adds r0, #2
	cmp r0, r8
	blo _080D151C
	bx lr

	thumb_func_start sub_80D1548
sub_80D1548: @ 0x080D1548
	movs r5, #0xff
	movs r4, #0
_080D154C:
	ldrh r2, [r0, #2]
	lsrs r3, r2, #8
	adds r2, r2, r4
	ands r2, r5
	adds r4, r3, r2
	lsls r1, r4, #8
	orrs r1, r2
	strh r1, [r0, #2]
	adds r0, #2
	cmp r0, r8
	blo _080D154C
	bx lr

	thumb_func_start sub_80D1564
sub_80D1564: @ 0x080D1564
	movs r4, #0
_080D1566:
	ldrh r2, [r0, #2]
	adds r4, r4, r2
	strh r4, [r0, #2]
	adds r0, #2
	cmp r0, r8
	blo _080D1566
	bx lr

	thumb_func_start sub_80D1574
sub_80D1574: @ 0x080D1574
	movs r3, #0xff
	lsls r6, r3, #8
	movs r4, #0
	movs r5, #0
_080D157C:
	ldrh r2, [r0, #2]
	adds r4, r4, r2
	ands r4, r3
	adds r5, r5, r2
	ands r5, r6
	adds r1, r5, #0
	orrs r1, r4
	strh r1, [r0, #2]
	adds r0, #2
	cmp r0, r8
	blo _080D157C
	bx lr

	thumb_func_start sub_80D1594
sub_80D1594: @ 0x080D1594
	add r2, pc, #0x0 @ =sub_080D1598
	bx r2

	arm_func_start sub_080D1598
sub_080D1598: @ 0x080D1598
	umull r2, r3, r0, r1
	add r0, r3, #0
	bx lr

	thumb_func_start sub_80D15A4
sub_80D15A4: @ 0x080D15A4
	ldr r0, _080D1610 @ =gUnknown_03007FF0
	ldr r0, [r0]
	ldr r2, _080D1614 @ =0x68736D53
	ldr r3, [r0]
	cmp r2, r3
	beq sub_080D15B2
	bx lr

	non_word_aligned_thumb_func_start sub_080D15B2
sub_080D15B2: @ 0x080D15B2
	adds r3, #1
	str r3, [r0]
	push {r4, r5, r6, r7, lr}
	mov r1, r8
	mov r2, sb
	mov r3, sl
	mov r4, fp
	push {r0, r1, r2, r3, r4}
	sub sp, #0x18
	ldrb r1, [r0, #0xc]
	cmp r1, #0
	beq _080D15D6
	ldr r2, _080D161C @ =0x04000006
	ldrb r2, [r2]
	cmp r2, #0xa0
	bhs _080D15D4
	adds r2, #0xe4
_080D15D4:
	adds r1, r1, r2
_080D15D6:
	str r1, [sp, #0x14]
	ldr r3, [r0, #0x20]
	cmp r3, #0
	beq _080D15E6
	ldr r0, [r0, #0x24]
	bl sub_80D19C6
	ldr r0, [sp, #0x18]
_080D15E6:
	ldr r3, [r0, #0x28]
	bl sub_80D19C6
	ldr r0, [sp, #0x18]
	ldr r3, [r0, #0x10]
	mov r8, r3
	ldr r5, _080D1620 @ =0x00000350
	adds r5, r5, r0
	ldrb r4, [r0, #4]
	subs r7, r4, #1
	bls _080D1606
	ldrb r1, [r0, #0xb]
	subs r1, r1, r7
	mov r2, r8
	muls r2, r1, r2
	adds r5, r5, r2
_080D1606:
	str r5, [sp, #8]
	ldr r6, _080D1624 @ =0x00000630
	ldr r3, _080D1618 @ =gUnknown_03000001
	bx r3
	.align 2, 0
_080D1610: .4byte gUnknown_03007FF0
_080D1614: .4byte 0x68736D53
_080D1618: .4byte gUnknown_03000001
_080D161C: .4byte 0x04000006
_080D1620: .4byte 0x00000350
_080D1624: .4byte 0x00000630
_080D1628:
	.byte 0x43, 0x79, 0x00, 0x2B, 0x2C, 0xD0, 0x01, 0xA1
	.byte 0x08, 0x47, 0x00, 0x00, 0x02, 0x00, 0x54, 0xE3, 0x35, 0x7E, 0x80, 0x02, 0x08, 0x70, 0x85, 0x10
	.byte 0x08, 0x40, 0xA0, 0xE1, 0xD6, 0x00, 0x95, 0xE1, 0xD0, 0x10, 0xD5, 0xE1, 0x01, 0x00, 0x80, 0xE0
	.byte 0xD6, 0x10, 0x97, 0xE1, 0x01, 0x00, 0x80, 0xE0, 0xD1, 0x10, 0xD7, 0xE0, 0x01, 0x00, 0x80, 0xE0
	.byte 0x90, 0x03, 0x01, 0xE0, 0xC1, 0x04, 0xA0, 0xE1, 0x80, 0x00, 0x10, 0xE3, 0x01, 0x00, 0x80, 0x12
	.byte 0x06, 0x00, 0xC5, 0xE7, 0x01, 0x00, 0xC5, 0xE4, 0x01, 0x40, 0x54, 0xE2, 0xF0, 0xFF, 0xFF, 0xCA
	.byte 0x2F, 0x00, 0x8F, 0xE2, 0x10, 0xFF, 0x2F, 0xE1, 0x00, 0x20, 0x41, 0x46, 0x76, 0x19, 0xC9, 0x08
	.byte 0x01, 0xD3, 0x01, 0xC5, 0x01, 0xC6, 0x49, 0x08, 0x03, 0xD3, 0x01, 0xC5, 0x01, 0xC6, 0x01, 0xC5
	.byte 0x01, 0xC6, 0x01, 0xC5, 0x01, 0xC6, 0x01, 0xC5, 0x01, 0xC6, 0x01, 0xC5, 0x01, 0xC6, 0x01, 0xC5
	.byte 0x01, 0xC6, 0x01, 0x39, 0xF5, 0xDC, 0x06, 0x9C, 0xA0, 0x69, 0x84, 0x46, 0xA0, 0x79, 0x50, 0x34
	.byte 0x01, 0x90, 0x63, 0x6A, 0x05, 0x98, 0x00, 0x28, 0x0A, 0xD0, 0x04, 0x49, 0x09, 0x78, 0xA0, 0x29
	.byte 0x00, 0xD2, 0xE4, 0x31, 0x81, 0x42, 0x03, 0xD3, 0x6B, 0xE1, 0x00, 0x00, 0x06, 0x00, 0x00, 0x04
	.byte 0x26, 0x78, 0xC7, 0x20, 0x30, 0x42, 0x00, 0xD1, 0x5E, 0xE1, 0x80, 0x20, 0x30, 0x42, 0x14, 0xD0
	.byte 0x40, 0x20, 0x30, 0x42, 0x19, 0xD1, 0x03, 0x26, 0x26, 0x70, 0x18, 0x1C, 0x10, 0x30, 0xA0, 0x62
	.byte 0xD8, 0x68, 0xA0, 0x61, 0x00, 0x25, 0x65, 0x72, 0xE5, 0x61, 0xDA, 0x78, 0xC0, 0x20, 0x10, 0x42
	.byte 0x2F, 0xD0, 0x10, 0x20, 0x06, 0x43, 0x26, 0x70, 0x2B, 0xE0, 0x65, 0x7A, 0x04, 0x20, 0x30, 0x42
	.byte 0x06, 0xD0, 0x60, 0x7B, 0x01, 0x38, 0x60, 0x73, 0x2A, 0xD8, 0x00, 0x20, 0x20, 0x70, 0x3B, 0xE1
	.byte 0x40, 0x20, 0x30, 0x42, 0x0C, 0xD0, 0xE0, 0x79, 0x45, 0x43, 0x2D, 0x0A, 0x20, 0x7B, 0x85, 0x42
	.byte 0x1E, 0xD8, 0x25, 0x7B, 0x00, 0x2D, 0xF0, 0xD0, 0x04, 0x20, 0x06, 0x43, 0x26, 0x70, 0x17, 0xE0
	.byte 0x03, 0x22, 0x32, 0x40, 0x02, 0x2A, 0x0A, 0xD1, 0x60, 0x79, 0x45, 0x43, 0x2D, 0x0A, 0xA0, 0x79
	.byte 0x85, 0x42, 0x0D, 0xD8, 0x05, 0x1C, 0xEC, 0xD0, 0x01, 0x3E, 0x26, 0x70, 0x08, 0xE0, 0x03, 0x2A
	.byte 0x06, 0xD1, 0x20, 0x79, 0x2D, 0x18, 0xFF, 0x2D, 0x02, 0xD3, 0xFF, 0x25, 0x01, 0x3E, 0x26, 0x70
	.byte 0x65, 0x72, 0x06, 0x98, 0xC0, 0x79, 0x01, 0x30, 0x68, 0x43, 0x05, 0x09, 0xA0, 0x78, 0x68, 0x43
	.byte 0x00, 0x0A, 0xA0, 0x72, 0xE0, 0x78, 0x68, 0x43, 0x00, 0x0A, 0xE0, 0x72, 0x10, 0x20, 0x30, 0x40
	.byte 0x04, 0x90, 0x07, 0xD0, 0x18, 0x1C, 0x10, 0x30, 0x99, 0x68, 0x40, 0x18, 0x03, 0x90, 0xD8, 0x68
	.byte 0x40, 0x1A, 0x04, 0x90, 0x02, 0x9D, 0xA2, 0x69, 0xA3, 0x6A, 0x01, 0xA0, 0x00, 0x47, 0x00, 0x00
	.byte 0x00, 0x80, 0x8D, 0xE5, 0x0A, 0xA0, 0xD4, 0xE5, 0x0B, 0xB0, 0xD4, 0xE5, 0x0A, 0xA8, 0xA0, 0xE1
	.byte 0x0B, 0xB8, 0xA0, 0xE1, 0x01, 0x00, 0xD4, 0xE5, 0x08, 0x00, 0x10, 0xE3, 0x47, 0x00, 0x00, 0x0A
	.byte 0x04, 0x00, 0x52, 0xE3, 0x19, 0x00, 0x00, 0xDA, 0x08, 0x20, 0x52, 0xE0, 0x00, 0xE0, 0xA0, 0xC3
	.byte 0x05, 0x00, 0x00, 0xCA, 0x08, 0xE0, 0xA0, 0xE1, 0x08, 0x20, 0x82, 0xE0, 0x04, 0x80, 0x42, 0xE2
	.byte 0x08, 0xE0, 0x4E, 0xE0, 0x03, 0x20, 0x12, 0xE2, 0x04, 0x20, 0xA0, 0x03, 0x00, 0x60, 0x95, 0xE5
	.byte 0x30, 0x76, 0x95, 0xE5, 0xD1, 0x00, 0xD3, 0xE0, 0x9A, 0x00, 0x01, 0xE0, 0xFF, 0x18, 0xC1, 0xE3
	.byte 0x66, 0x64, 0x81, 0xE0, 0x9B, 0x00, 0x01, 0xE0, 0xFF, 0x18, 0xC1, 0xE3, 0x67, 0x74, 0x81, 0xE0
	.byte 0x01, 0x51, 0x95, 0xE2, 0xF6, 0xFF, 0xFF, 0x3A, 0x30, 0x76, 0x85, 0xE5, 0x04, 0x60, 0x85, 0xE4
	.byte 0x04, 0x80, 0x58, 0xE2, 0xF0, 0xFF, 0xFF, 0xCA, 0x0E, 0x80, 0x98, 0xE0, 0x50, 0x00, 0x00, 0x0A
	.byte 0x00, 0x60, 0x95, 0xE5, 0x30, 0x76, 0x95, 0xE5, 0xD1, 0x00, 0xD3, 0xE0, 0x9A, 0x00, 0x01, 0xE0
	.byte 0xFF, 0x18, 0xC1, 0xE3, 0x66, 0x64, 0x81, 0xE0, 0x9B, 0x00, 0x01, 0xE0, 0xFF, 0x18, 0xC1, 0xE3
	.byte 0x67, 0x74, 0x81, 0xE0, 0x01, 0x20, 0x52, 0xE2, 0x12, 0x00, 0x00, 0x0A, 0x01, 0x51, 0x95, 0xE2
	.byte 0xF4, 0xFF, 0xFF, 0x3A, 0x30, 0x76, 0x85, 0xE5, 0x04, 0x60, 0x85, 0xE4, 0x04, 0x80, 0x58, 0xE2
	.byte 0xD2, 0xFF, 0xFF, 0xCA, 0x3E, 0x00, 0x00, 0xEA, 0x18, 0x00, 0x9D, 0xE5, 0x00, 0x00, 0x50, 0xE3
	.byte 0x05, 0x00, 0x00, 0x0A, 0x14, 0x30, 0x9D, 0xE5, 0x00, 0x90, 0x62, 0xE2, 0x02, 0x20, 0x90, 0xE0
	.byte 0x2B, 0x00, 0x00, 0xCA, 0x00, 0x90, 0x49, 0xE0, 0xFB, 0xFF, 0xFF, 0xEA, 0x10, 0x10, 0xBD, 0xE8
	.byte 0x00, 0x20, 0xA0, 0xE3, 0x03, 0x00, 0x00, 0xEA, 0x10, 0x20, 0x9D, 0xE5, 0x00, 0x00, 0x52, 0xE3
	.byte 0x0C, 0x30, 0x9D, 0x15, 0xE8, 0xFF, 0xFF, 0x1A, 0x00, 0x20, 0xC4, 0xE5, 0x25, 0x0F, 0xA0, 0xE1
	.byte 0x03, 0x51, 0xC5, 0xE3, 0x03, 0x00, 0x60, 0xE2, 0x80, 0x01, 0xA0, 0xE1, 0x76, 0x60, 0xA0, 0xE1
	.byte 0x77, 0x70, 0xA0, 0xE1, 0x30, 0x76, 0x85, 0xE5, 0x04, 0x60, 0x85, 0xE4, 0x26, 0x00, 0x00, 0xEA
	.byte 0x10, 0x10, 0x2D, 0xE9, 0x1C, 0xE0, 0x94, 0xE5, 0x20, 0x10, 0x94, 0xE5, 0x9C, 0x01, 0x04, 0xE0
	.byte 0xD0, 0x00, 0xD3, 0xE1, 0xD1, 0x10, 0xF3, 0xE1, 0x00, 0x10, 0x41, 0xE0, 0x00, 0x60, 0x95, 0xE5
	.byte 0x30, 0x76, 0x95, 0xE5, 0x9E, 0x01, 0x09, 0xE0, 0xC9, 0x9B, 0x80, 0xE0, 0x9A, 0x09, 0x0C, 0xE0
	.byte 0xFF, 0xC8, 0xCC, 0xE3, 0x66, 0x64, 0x8C, 0xE0, 0x9B, 0x09, 0x0C, 0xE0, 0xFF, 0xC8, 0xCC, 0xE3
	.byte 0x67, 0x74, 0x8C, 0xE0, 0x04, 0xE0, 0x8E, 0xE0, 0xAE, 0x9B, 0xB0, 0xE1, 0x07, 0x00, 0x00, 0x0A
	.byte 0xFE, 0xE5, 0xCE, 0xE3, 0x09, 0x20, 0x52, 0xE0, 0xCE, 0xFF, 0xFF, 0xDA, 0x01, 0x90, 0x59, 0xE2
	.byte 0x01, 0x00, 0x80, 0x00, 0xD9, 0x00, 0xB3, 0x11, 0xD1, 0x10, 0xF3, 0xE1, 0x00, 0x10, 0x41, 0xE0
	.byte 0x01, 0x51, 0x95, 0xE2, 0xEA, 0xFF, 0xFF, 0x3A, 0x30, 0x76, 0x85, 0xE5, 0x04, 0x60, 0x85, 0xE4
	.byte 0x04, 0x80, 0x58, 0xE2, 0xE4, 0xFF, 0xFF, 0xCA, 0x01, 0x30, 0x43, 0xE2, 0x10, 0x10, 0xBD, 0xE8
	.byte 0x1C, 0xE0, 0x84, 0xE5, 0x18, 0x20, 0x84, 0xE5, 0x28, 0x30, 0x84, 0xE5, 0x00, 0x80, 0x9D, 0xE5
	.byte 0x01, 0x00, 0x8F, 0xE2, 0x10, 0xFF, 0x2F, 0xE1, 0x01, 0x98, 0x01, 0x38, 0x01, 0xDD, 0x40, 0x34
	.byte 0x86, 0xE6, 0x06, 0x98, 0x04, 0x4B, 0x03, 0x60, 0x07, 0xB0, 0xFF, 0xBC, 0x80, 0x46, 0x89, 0x46
	.byte 0x92, 0x46, 0x9B, 0x46, 0x08, 0xBC

	non_word_aligned_thumb_func_start sub_80D19C6
sub_80D19C6: @ 0x080D19C6
	bx r3
_080D19C8:
	.byte 0x53, 0x6D, 0x73, 0x68, 0xA4, 0x46, 0x00, 0x21
	.byte 0x00, 0x22, 0x00, 0x23, 0x00, 0x24, 0x1E, 0xC0, 0x1E, 0xC0, 0x1E, 0xC0, 0x1E, 0xC0, 0x64, 0x46
	.byte 0x70, 0x47, 0x00, 0x00

	thumb_func_start sub_80D19E4
sub_80D19E4: @ 0x080D19E4
	ldr r3, [r0, #0x2c]
	cmp r3, #0
	beq _080D1A02
	ldr r1, [r0, #0x34]
	ldr r2, [r0, #0x30]
	cmp r2, #0
	beq _080D19F6
	str r1, [r2, #0x34]
	b _080D19F8
_080D19F6:
	str r1, [r3, #0x20]
_080D19F8:
	cmp r1, #0
	beq _080D19FE
	str r2, [r1, #0x30]
_080D19FE:
	movs r1, #0
	str r1, [r0, #0x2c]
_080D1A02:
	bx lr

	thumb_func_start sub_80D1A04
sub_80D1A04: @ 0x080D1A04
	push {r4, r5, lr}
	adds r5, r1, #0
	ldr r4, [r5, #0x20]
	cmp r4, #0
	beq _080D1A28
_080D1A0E:
	ldrb r1, [r4]
	movs r0, #0xc7
	tst r0, r1
	beq _080D1A1C
	movs r0, #0x40
	orrs r1, r0
	strb r1, [r4]
_080D1A1C:
	adds r0, r4, #0
	bl sub_80D19E4
	ldr r4, [r4, #0x34]
	cmp r4, #0
	bne _080D1A0E
_080D1A28:
	movs r0, #0
	strb r0, [r5]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D1A34
sub_80D1A34: @ 0x080D1A34
	mov ip, lr
	movs r1, #0x24
	ldr r2, _080D1A64 @ =gUnknown_08139A88
_080D1A3A:
	ldr r3, [r2]
	bl sub_80D1A4E
	stm r0!, {r3}
	adds r2, #4
	subs r1, #1
	bgt _080D1A3A
	bx ip
	.align 2, 0

	thumb_func_start sub_80D1A4C
sub_80D1A4C: @ 0x080D1A4C
	ldrb r3, [r2]
sub_80D1A4E:
	push {r0}
	lsrs r0, r2, #0x19
	bne _080D1A60
	ldr r0, _080D1A64 @ =gUnknown_08139A88
	cmp r2, r0
	blo _080D1A5E
	lsrs r0, r2, #0xe
	beq _080D1A60
_080D1A5E:
	movs r3, #0
_080D1A60:
	pop {r0}
	bx lr
	.align 2, 0
_080D1A64: .4byte gUnknown_08139A88

	thumb_func_start sub_80D1A68
sub_80D1A68: @ 0x080D1A68
	ldr r2, [r1, #0x40]

	non_word_aligned_thumb_func_start sub_080D1A6A
sub_080D1A6A: @ 0x080D1A6A
	adds r3, r2, #1
	str r3, [r1, #0x40]
	ldrb r3, [r2]
	b sub_80D1A4E
	.align 2, 0
sub_80D1A74:
	push {lr}
_080D1A76:
	ldr r2, [r1, #0x40]
	ldrb r0, [r2, #3]
	lsls r0, r0, #8
	ldrb r3, [r2, #2]
	orrs r0, r3
	lsls r0, r0, #8
	ldrb r3, [r2, #1]
	orrs r0, r3
	lsls r0, r0, #8
	bl sub_80D1A4C
	orrs r0, r3
	str r0, [r1, #0x40]
	pop {r0}
	bx r0

	thumb_func_start sub_80D1A94
sub_80D1A94: @ 0x080D1A94
	ldrb r2, [r1, #2]
	cmp r2, #3
	bhs _080D1AAC
	lsls r2, r2, #2
	adds r3, r1, r2
	ldr r2, [r1, #0x40]
	adds r2, #4
	str r2, [r3, #0x44]
	ldrb r2, [r1, #2]
	adds r2, #1
	strb r2, [r1, #2]
	b sub_80D1A74
_080D1AAC:
	b sub_80D1A04
	.align 2, 0

	thumb_func_start sub_80D1AB0
sub_80D1AB0: @ 0x080D1AB0
	ldrb r2, [r1, #2]
	cmp r2, #0
	beq _080D1AC2
	subs r2, #1
	strb r2, [r1, #2]
	lsls r2, r2, #2
	adds r3, r1, r2
	ldr r2, [r3, #0x44]
	str r2, [r1, #0x40]
_080D1AC2:
	bx lr

	thumb_func_start sub_80D1AC4
sub_80D1AC4: @ 0x080D1AC4
	push {lr}
	ldr r2, [r1, #0x40]
	ldrb r3, [r2]
	cmp r3, #0
	bne _080D1AD4
	adds r2, #1
	str r2, [r1, #0x40]
	b _080D1A76
_080D1AD4:
	ldrb r3, [r1, #3]
	adds r3, #1
	strb r3, [r1, #3]
	mov ip, r3
	bl sub_80D1A68
	cmp ip, r3
	bhs _080D1AE6
	b _080D1A76
_080D1AE6:
	movs r3, #0
	strb r3, [r1, #3]
	adds r2, #5
	str r2, [r1, #0x40]
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D1AF4
sub_80D1AF4: @ 0x080D1AF4
	mov ip, lr
	bl sub_80D1A68
	strb r3, [r1, #0x1d]
	bx ip
	.align 2, 0

	thumb_func_start sub_80D1B00
sub_80D1B00: @ 0x080D1B00
	mov ip, lr
	bl sub_80D1A68
	lsls r3, r3, #1
	strh r3, [r0, #0x1c]
	ldrh r2, [r0, #0x1e]
	muls r3, r2, r3
	lsrs r3, r3, #8
	strh r3, [r0, #0x20]
	bx ip

	thumb_func_start sub_80D1B14
sub_80D1B14: @ 0x080D1B14
	mov ip, lr
	bl sub_80D1A68
	strb r3, [r1, #0xa]
	ldrb r3, [r1]
	movs r2, #0xc
	orrs r3, r2
	strb r3, [r1]
	bx ip
	.align 2, 0

	thumb_func_start sub_80D1B28
sub_80D1B28: @ 0x080D1B28
	mov ip, lr
	ldr r2, [r1, #0x40]
	ldrb r3, [r2]
	adds r2, #1
	str r2, [r1, #0x40]
	lsls r2, r3, #1
	adds r2, r2, r3
	lsls r2, r2, #2
	ldr r3, [r0, #0x30]
	adds r2, r2, r3
	ldr r3, [r2]
	bl sub_80D1A4E
	str r3, [r1, #0x24]
	ldr r3, [r2, #4]
	bl sub_80D1A4E
	str r3, [r1, #0x28]
	ldr r3, [r2, #8]
	bl sub_80D1A4E
	str r3, [r1, #0x2c]
	bx ip
	.align 2, 0

	thumb_func_start sub_80D1B58
sub_80D1B58: @ 0x080D1B58
	mov ip, lr
	bl sub_80D1A68
	strb r3, [r1, #0x12]
	ldrb r3, [r1]
	movs r2, #3
	orrs r3, r2
	strb r3, [r1]
	bx ip
	.align 2, 0

	thumb_func_start sub_80D1B6C
sub_80D1B6C: @ 0x080D1B6C
	mov ip, lr
	bl sub_80D1A68
	subs r3, #0x40
	strb r3, [r1, #0x14]
	ldrb r3, [r1]
	movs r2, #3
	orrs r3, r2
	strb r3, [r1]
	bx ip

	thumb_func_start sub_80D1B80
sub_80D1B80: @ 0x080D1B80
	mov ip, lr
	bl sub_80D1A68
	subs r3, #0x40
	strb r3, [r1, #0xe]
	ldrb r3, [r1]
	movs r2, #0xc
	orrs r3, r2
	strb r3, [r1]
	bx ip

	thumb_func_start sub_80D1B94
sub_80D1B94: @ 0x080D1B94
	mov ip, lr
	bl sub_80D1A68
	strb r3, [r1, #0xf]
	ldrb r3, [r1]
	movs r2, #0xc
	orrs r3, r2
	strb r3, [r1]
	bx ip
	.align 2, 0

	thumb_func_start sub_80D1BA8
sub_80D1BA8: @ 0x080D1BA8
	mov ip, lr
	bl sub_80D1A68
	strb r3, [r1, #0x1b]
	bx ip
	.align 2, 0

	thumb_func_start sub_80D1BB4
sub_80D1BB4: @ 0x080D1BB4
	mov ip, lr
	bl sub_80D1A68
	ldrb r0, [r1, #0x18]
	cmp r0, r3
	beq _080D1BCA
	strb r3, [r1, #0x18]
	ldrb r3, [r1]
	movs r2, #0xf
	orrs r3, r2
	strb r3, [r1]
_080D1BCA:
	bx ip

	thumb_func_start sub_80D1BCC
sub_80D1BCC: @ 0x080D1BCC
	mov ip, lr
	bl sub_80D1A68
	subs r3, #0x40
	strb r3, [r1, #0xc]
	ldrb r3, [r1]
	movs r2, #0xc
	orrs r3, r2
	strb r3, [r1]
	bx ip

	thumb_func_start sub_80D1BE0
sub_80D1BE0: @ 0x080D1BE0
	mov ip, lr
	ldr r2, [r1, #0x40]
	ldrb r3, [r2]
	adds r2, #1
	ldr r0, _080D1BF4 @ =0x04000060
	adds r0, r0, r3
	bl sub_080D1A6A
	strb r3, [r0]
	bx ip
	.align 2, 0
_080D1BF4: .4byte 0x04000060

	thumb_func_start sub_80D1BF8
sub_80D1BF8: @ 0x080D1BF8
	ldr r0, _080D1EA4 @ =gUnknown_03007FF0
	ldr r0, [r0]
	ldr r2, _080D1EA8 @ =0x68736D53
	ldr r3, [r0]
	subs r3, r3, r2
	cmp r3, #1
	bhi _080D1C38
	ldrb r1, [r0, #4]
	subs r1, #1
	strb r1, [r0, #4]
	bgt _080D1C38
	ldrb r1, [r0, #0xb]
	strb r1, [r0, #4]
	ldr r2, _080D1C3C @ =0x040000BC
	ldr r1, [r2, #8]
	lsls r1, r1, #7
	blo _080D1C1E
	ldr r1, _080D1C40 @ =0x84400004
	str r1, [r2, #8]
_080D1C1E:
	ldr r1, [r2, #0x14]
	lsls r1, r1, #7
	blo _080D1C28
	ldr r1, _080D1C40 @ =0x84400004
	str r1, [r2, #0x14]
_080D1C28:
	movs r1, #4
	lsls r1, r1, #8
	strh r1, [r2, #0xa]
	strh r1, [r2, #0x16]
	movs r1, #0xb6
	lsls r1, r1, #8
	strh r1, [r2, #0xa]
	strh r1, [r2, #0x16]
_080D1C38:
	bx lr
	.align 2, 0
_080D1C3C: .4byte 0x040000BC
_080D1C40: .4byte 0x84400004
_080D1C44:
	.byte 0x98, 0x4A, 0x43, 0x6B, 0x9A, 0x42, 0x00, 0xD0, 0x70, 0x47, 0x01, 0x33
	.byte 0x43, 0x63, 0x01, 0xB5, 0x83, 0x6B, 0x00, 0x2B, 0x02, 0xD0, 0xC0, 0x6B, 0x00, 0xF0, 0x1E, 0xF9
	.byte 0x01, 0xBC, 0xF0, 0xB4, 0x44, 0x46, 0x4D, 0x46, 0x56, 0x46, 0x5F, 0x46, 0xF0, 0xB4, 0x07, 0x1C
	.byte 0x78, 0x68, 0x00, 0x28, 0x00, 0xDA, 0x09, 0xE1, 0x8A, 0x48, 0x00, 0x68, 0x80, 0x46, 0x38, 0x1C
	.byte 0x00, 0xF0, 0x56, 0xFF, 0x78, 0x68, 0x00, 0x28, 0x00, 0xDA, 0xFF, 0xE0, 0x78, 0x8C, 0x39, 0x8C
	.byte 0x40, 0x18, 0xA3, 0xE0, 0x3E, 0x7A, 0xFD, 0x6A, 0x01, 0x23, 0x00, 0x24, 0x28, 0x78, 0x80, 0x21
	.byte 0x01, 0x42, 0x00, 0xD1, 0x88, 0xE0, 0x9A, 0x46, 0x1C, 0x43, 0xA3, 0x46, 0x2C, 0x6A, 0x00, 0x2C
	.byte 0x13, 0xD0, 0x21, 0x78, 0xC7, 0x20, 0x08, 0x42, 0x09, 0xD0, 0x20, 0x7C, 0x00, 0x28, 0x09, 0xD0
	.byte 0x01, 0x38, 0x20, 0x74, 0x06, 0xD1, 0x40, 0x20, 0x01, 0x43, 0x21, 0x70, 0x02, 0xE0, 0x20, 0x1C
	.byte 0x00, 0xF0, 0xAC, 0xFC, 0x64, 0x6B, 0x00, 0x2C, 0xEB, 0xD1, 0x2B, 0x78, 0x40, 0x20, 0x18, 0x42
	.byte 0x3A, 0xD0, 0x28, 0x1C, 0x00, 0xF0, 0xAC, 0xFC, 0x80, 0x20, 0x28, 0x70, 0x02, 0x20, 0xE8, 0x73
	.byte 0x40, 0x20, 0xE8, 0x74, 0x16, 0x20, 0x68, 0x76, 0x01, 0x20, 0xA9, 0x1D, 0x88, 0x77, 0x2B, 0xE0
	.byte 0x2A, 0x6C, 0x11, 0x78, 0x80, 0x29, 0x01, 0xD2, 0xE9, 0x79, 0x04, 0xE0, 0x01, 0x32, 0x2A, 0x64
	.byte 0xBD, 0x29, 0x00, 0xD3, 0xE9, 0x71, 0xCF, 0x29, 0x08, 0xD3, 0x40, 0x46, 0x83, 0x6B, 0x08, 0x1C
	.byte 0xCF, 0x38, 0x39, 0x1C, 0x2A, 0x1C, 0x00, 0xF0, 0xB9, 0xF8, 0x15, 0xE0, 0xB0, 0x29, 0x0E, 0xD9
	.byte 0x08, 0x1C, 0xB1, 0x38, 0xB8, 0x72, 0x43, 0x46, 0x5B, 0x6B, 0x80, 0x00, 0x1B, 0x58, 0x38, 0x1C
	.byte 0x29, 0x1C, 0x00, 0xF0, 0xAB, 0xF8, 0x28, 0x78, 0x00, 0x28, 0x33, 0xD0, 0x04, 0xE0, 0x54, 0x48
	.byte 0x80, 0x39, 0x09, 0x18, 0x08, 0x78, 0x68, 0x70, 0x68, 0x78, 0x00, 0x28, 0xD0, 0xD0, 0x01, 0x38
	.byte 0x68, 0x70, 0x69, 0x7E, 0x00, 0x29, 0x25, 0xD0, 0xE8, 0x7D, 0x00, 0x28, 0x22, 0xD0, 0x28, 0x7F
	.byte 0x00, 0x28, 0x02, 0xD0, 0x01, 0x38, 0x28, 0x77, 0x1C, 0xE0, 0xA8, 0x7E, 0x40, 0x18, 0xA8, 0x76
	.byte 0x01, 0x1C, 0x40, 0x38, 0x00, 0x06, 0x02, 0xD5, 0x0A, 0x06, 0x12, 0x16, 0x01, 0xE0, 0x80, 0x20
	.byte 0x42, 0x1A, 0xE8, 0x7D, 0x50, 0x43, 0x82, 0x11, 0xA8, 0x7D, 0x50, 0x40, 0x00, 0x06, 0x09, 0xD0
	.byte 0xAA, 0x75, 0x28, 0x78, 0x29, 0x7E, 0x00, 0x29, 0x01, 0xD1, 0x0C, 0x21, 0x00, 0xE0, 0x03, 0x21
	.byte 0x08, 0x43, 0x28, 0x70, 0x53, 0x46, 0x5C, 0x46, 0x01, 0x3E, 0x03, 0xDD, 0x50, 0x20, 0x2D, 0x18
	.byte 0x5B, 0x00, 0x6B, 0xE7, 0xF8, 0x68, 0x01, 0x30, 0xF8, 0x60, 0x00, 0x2C, 0x03, 0xD1, 0x80, 0x20
	.byte 0x00, 0x06, 0x78, 0x60, 0x5A, 0xE0, 0x7C, 0x60, 0x78, 0x8C, 0x96, 0x38, 0x78, 0x84, 0x96, 0x28
	.byte 0x00, 0xD3, 0x57, 0xE7, 0x3A, 0x7A, 0xFD, 0x6A, 0x28, 0x78, 0x80, 0x21, 0x01, 0x42, 0x48, 0xD0
	.byte 0x0F, 0x21, 0x01, 0x42, 0x45, 0xD0, 0x91, 0x46, 0x38, 0x1C, 0x29, 0x1C, 0x00, 0xF0, 0xFC, 0xFE
	.byte 0x2C, 0x6A, 0x00, 0x2C, 0x38, 0xD0, 0x21, 0x78, 0xC7, 0x20, 0x08, 0x42, 0x03, 0xD1, 0x20, 0x1C
	.byte 0x00, 0xF0, 0x0C, 0xFC, 0x2D, 0xE0, 0x60, 0x78, 0x07, 0x26, 0x06, 0x40, 0x2B, 0x78, 0x03, 0x20
	.byte 0x18, 0x42, 0x07, 0xD0, 0x00, 0xF0, 0x64, 0xF8, 0x00, 0x2E, 0x03, 0xD0, 0x60, 0x7F, 0x01, 0x21
	.byte 0x08, 0x43, 0x60, 0x77, 0x2B, 0x78, 0x0C, 0x20, 0x18, 0x42, 0x1A, 0xD0, 0x21, 0x7A, 0x08, 0x20
	.byte 0x28, 0x56, 0x0A, 0x18, 0x00, 0xD5, 0x00, 0x22, 0x00, 0x2E, 0x0C, 0xD0, 0x40, 0x46, 0x03, 0x6B
	.byte 0x11, 0x1C, 0x6A, 0x7A, 0x30, 0x1C, 0x00, 0xF0, 0x21, 0xF8, 0x20, 0x62, 0x60, 0x7F, 0x02, 0x21
	.byte 0x08, 0x43, 0x60, 0x77, 0x05, 0xE0, 0x11, 0x1C, 0x6A, 0x7A, 0x60, 0x6A, 0x00, 0xF0, 0xA0, 0xF9
	.byte 0x20, 0x62, 0x64, 0x6B, 0x00, 0x2C, 0xC6, 0xD1, 0x28, 0x78, 0xF0, 0x21, 0x08, 0x40, 0x28, 0x70
	.byte 0x4A, 0x46, 0x01, 0x3A, 0x02, 0xDD, 0x50, 0x20, 0x2D, 0x18, 0xAD, 0xDC, 0x06, 0x48, 0x78, 0x63
	.byte 0xFF, 0xBC, 0x80, 0x46, 0x89, 0x46, 0x92, 0x46, 0x9B, 0x46, 0x08, 0xBC

	thumb_func_start sub_80D1E9C
sub_80D1E9C: @ 0x080D1E9C
	bx r3
	.align 2, 0
_080D1EA0:
	.byte 0xFC, 0x9C, 0x13, 0x08
_080D1EA4: .4byte gUnknown_03007FF0
_080D1EA8: .4byte 0x68736D53

	thumb_func_start sub_80D1EAC
sub_80D1EAC: @ 0x080D1EAC
	push {r4, r5, r6, lr}
	adds r5, r1, #0
	ldrb r1, [r5]
	movs r0, #0x80
	tst r0, r1
	beq _080D1EE4
	ldr r4, [r5, #0x20]
	cmp r4, #0
	beq _080D1EE2
	movs r6, #0
_080D1EC0:
	ldrb r0, [r4]
	cmp r0, #0
	beq _080D1EDA
	ldrb r0, [r4, #1]
	movs r3, #7
	ands r0, r3
	beq _080D1ED8
	ldr r3, _080D1EEC @ =gUnknown_03007FF0
	ldr r3, [r3]
	ldr r3, [r3, #0x2c]
	bl sub_80D1E9C
_080D1ED8:
	strb r6, [r4]
_080D1EDA:
	str r6, [r4, #0x2c]
	ldr r4, [r4, #0x34]
	cmp r4, #0
	bne _080D1EC0
_080D1EE2:
	str r4, [r5, #0x20]
_080D1EE4:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080D1EEC: .4byte gUnknown_03007FF0

	thumb_func_start sub_80D1EF0
sub_80D1EF0: @ 0x080D1EF0
	ldrb r1, [r4, #0x12]
	movs r0, #0x14
	ldrsb r2, [r4, r0]
	movs r3, #0x80
	adds r3, r3, r2
	muls r3, r1, r3
	ldrb r0, [r5, #0x10]
	muls r0, r3, r0
	asrs r0, r0, #0xe
	cmp r0, #0xff
	bls _080D1F08
	movs r0, #0xff
_080D1F08:
	strb r0, [r4, #2]
	movs r3, #0x7f
	subs r3, r3, r2
	muls r3, r1, r3
	ldrb r0, [r5, #0x11]
	muls r0, r3, r0
	asrs r0, r0, #0xe
	cmp r0, #0xff
	bls _080D1F1C
	movs r0, #0xff
_080D1F1C:
	strb r0, [r4, #3]
	bx lr

	thumb_func_start sub_80D1F20
sub_80D1F20: @ 0x080D1F20
	push {r4, r5, r6, r7, lr}
	mov r4, r8
	mov r5, sb
	mov r6, sl
	mov r7, fp
	push {r4, r5, r6, r7}
	sub sp, #0x18
	str r1, [sp]
	adds r5, r2, #0
	ldr r1, _080D2118 @ =gUnknown_03007FF0
	ldr r1, [r1]
	str r1, [sp, #4]
	ldr r1, _080D211C @ =gUnknown_08139CFC
	adds r0, r0, r1
	ldrb r0, [r0]
	strb r0, [r5, #4]
	ldr r3, [r5, #0x40]
	ldrb r0, [r3]
	cmp r0, #0x80
	bhs _080D1F66
	strb r0, [r5, #5]
	adds r3, #1
	ldrb r0, [r3]
	cmp r0, #0x80
	bhs _080D1F64
	strb r0, [r5, #6]
	adds r3, #1
	ldrb r0, [r3]
	cmp r0, #0x80
	bhs _080D1F64
	ldrb r1, [r5, #4]
	adds r1, r1, r0
	strb r1, [r5, #4]
	adds r3, #1
_080D1F64:
	str r3, [r5, #0x40]
_080D1F66:
	movs r0, #0
	str r0, [sp, #0x14]
	adds r4, r5, #0
	adds r4, #0x24
	ldrb r2, [r4]
	movs r0, #0xc0
	tst r0, r2
	beq _080D1FB8
	ldrb r3, [r5, #5]
	movs r0, #0x40
	tst r0, r2
	beq _080D1F86
	ldr r1, [r5, #0x2c]
	adds r1, r1, r3
	ldrb r0, [r1]
	b _080D1F88
_080D1F86:
	adds r0, r3, #0
_080D1F88:
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	ldr r0, [r5, #0x28]
	adds r1, r1, r0
	mov sb, r1
	mov r6, sb
	ldrb r1, [r6]
	movs r0, #0xc0
	tst r0, r1
	beq _080D1FA0
	b _080D2106
_080D1FA0:
	movs r0, #0x80
	tst r0, r2
	beq _080D1FBC
	ldrb r1, [r6, #3]
	movs r0, #0x80
	tst r0, r1
	beq _080D1FB4
	subs r1, #0xc0
	lsls r1, r1, #1
	str r1, [sp, #0x14]
_080D1FB4:
	ldrb r3, [r6, #1]
	b _080D1FBC
_080D1FB8:
	mov sb, r4
	ldrb r3, [r5, #5]
_080D1FBC:
	str r3, [sp, #8]
	ldr r6, [sp]
	ldrb r1, [r6, #9]
	ldrb r0, [r5, #0x1d]
	adds r0, r0, r1
	cmp r0, #0xff
	bls _080D1FCC
	movs r0, #0xff
_080D1FCC:
	str r0, [sp, #0x10]
	mov r6, sb
	ldrb r0, [r6]
	movs r6, #7
	ands r6, r0
	str r6, [sp, #0xc]
	beq _080D200C
	ldr r0, [sp, #4]
	ldr r4, [r0, #0x1c]
	cmp r4, #0
	bne _080D1FE4
	b _080D2106
_080D1FE4:
	subs r6, #1
	lsls r0, r6, #6
	adds r4, r4, r0
	ldrb r1, [r4]
	movs r0, #0xc7
	tst r0, r1
	beq _080D2060
	movs r0, #0x40
	tst r0, r1
	bne _080D2060
	ldrb r1, [r4, #0x13]
	ldr r0, [sp, #0x10]
	cmp r1, r0
	blo _080D2060
	beq _080D2004
	b _080D2106
_080D2004:
	ldr r0, [r4, #0x2c]
	cmp r0, r5
	bhs _080D2060
	b _080D2106
_080D200C:
	ldr r6, [sp, #0x10]
	adds r7, r5, #0
	movs r2, #0
	mov r8, r2
	ldr r4, [sp, #4]
	ldrb r3, [r4, #6]
	adds r4, #0x50
_080D201A:
	ldrb r1, [r4]
	movs r0, #0xc7
	tst r0, r1
	beq _080D2060
	movs r0, #0x40
	tst r0, r1
	beq _080D2034
	cmp r2, #0
	bne _080D2038
	adds r2, #1
	ldrb r6, [r4, #0x13]
	ldr r7, [r4, #0x2c]
	b _080D2052
_080D2034:
	cmp r2, #0
	bne _080D2054
_080D2038:
	ldrb r0, [r4, #0x13]
	cmp r0, r6
	bhs _080D2044
	adds r6, r0, #0
	ldr r7, [r4, #0x2c]
	b _080D2052
_080D2044:
	bhi _080D2054
	ldr r0, [r4, #0x2c]
	cmp r0, r7
	bls _080D2050
	adds r7, r0, #0
	b _080D2052
_080D2050:
	blo _080D2054
_080D2052:
	mov r8, r4
_080D2054:
	adds r4, #0x40
	subs r3, #1
	bgt _080D201A
	mov r4, r8
	cmp r4, #0
	beq _080D2106
_080D2060:
	adds r0, r4, #0
	bl sub_80D262C
	movs r1, #0
	str r1, [r4, #0x30]
	ldr r3, [r5, #0x20]
	str r3, [r4, #0x34]
	cmp r3, #0
	beq _080D2074
	str r4, [r3, #0x30]
_080D2074:
	str r4, [r5, #0x20]
	str r5, [r4, #0x2c]
	ldrb r0, [r5, #0x1b]
	strb r0, [r5, #0x1c]
	cmp r0, r1
	beq _080D2086
	adds r1, r5, #0
	bl sub_80D2160
_080D2086:
	ldr r0, [sp]
	adds r1, r5, #0
	bl sub_80D2BF8
	ldr r0, [r5, #4]
	str r0, [r4, #0x10]
	ldr r0, [sp, #0x10]
	strb r0, [r4, #0x13]
	ldr r0, [sp, #8]
	strb r0, [r4, #8]
	ldr r0, [sp, #0x14]
	strb r0, [r4, #0x14]
	mov r6, sb
	ldrb r0, [r6]
	strb r0, [r4, #1]
	ldr r7, [r6, #4]
	str r7, [r4, #0x24]
	ldr r0, [r6, #8]
	str r0, [r4, #4]
	ldrh r0, [r5, #0x1e]
	strh r0, [r4, #0xc]
	bl sub_80D1EF0
	ldrb r1, [r4, #8]
	movs r0, #8
	ldrsb r0, [r5, r0]
	adds r3, r1, r0
	bpl _080D20C0
	movs r3, #0
_080D20C0:
	ldr r6, [sp, #0xc]
	cmp r6, #0
	beq _080D20EE
	mov r6, sb
	ldrb r0, [r6, #2]
	strb r0, [r4, #0x1e]
	ldrb r1, [r6, #3]
	movs r0, #0x80
	tst r0, r1
	bne _080D20DA
	movs r0, #0x70
	tst r0, r1
	bne _080D20DC
_080D20DA:
	movs r1, #8
_080D20DC:
	strb r1, [r4, #0x1f]
	ldrb r2, [r5, #9]
	adds r1, r3, #0
	ldr r0, [sp, #0xc]
	ldr r3, [sp, #4]
	ldr r3, [r3, #0x30]
	bl sub_80D1E9C
	b _080D20F8
_080D20EE:
	ldrb r2, [r5, #9]
	adds r1, r3, #0
	adds r0, r7, #0
	bl sub_80D21B0
_080D20F8:
	str r0, [r4, #0x20]
	movs r0, #0x80
	strb r0, [r4]
	ldrb r1, [r5]
	movs r0, #0xf0
	ands r0, r1
	strb r0, [r5]
_080D2106:
	add sp, #0x18
	pop {r0, r1, r2, r3, r4, r5, r6, r7}
	mov r8, r0
	mov sb, r1
	mov sl, r2
	mov fp, r3
	pop {r0}
	bx r0
	.align 2, 0
_080D2118: .4byte gUnknown_03007FF0
_080D211C: .4byte gUnknown_08139CFC

	thumb_func_start sub_80D2120
sub_80D2120: @ 0x080D2120
	push {r4, r5}
	ldr r2, [r1, #0x40]
	ldrb r3, [r2]
	cmp r3, #0x80
	bhs _080D2132
	strb r3, [r1, #5]
	adds r2, #1
	str r2, [r1, #0x40]
	b _080D2134
_080D2132:
	ldrb r3, [r1, #5]
_080D2134:
	ldr r1, [r1, #0x20]
	cmp r1, #0
	beq _080D215C
	movs r4, #0x83
	movs r5, #0x40
_080D213E:
	ldrb r2, [r1]
	tst r2, r4
	beq _080D2156
	tst r2, r5
	bne _080D2156
	ldrb r0, [r1, #0x11]
	cmp r0, r3
	bne _080D2156
	movs r0, #0x40
	orrs r2, r0
	strb r2, [r1]
	b _080D215C
_080D2156:
	ldr r1, [r1, #0x34]
	cmp r1, #0
	bne _080D213E
_080D215C:
	pop {r4, r5}
	bx lr

	thumb_func_start sub_80D2160
sub_80D2160: @ 0x080D2160
	movs r2, #0
	strb r2, [r1, #0x16]
	strb r2, [r1, #0x1a]
	ldrb r2, [r1, #0x18]
	cmp r2, #0
	bne _080D2170
	movs r2, #0xc
	b _080D2172
_080D2170:
	movs r2, #3
_080D2172:
	ldrb r3, [r1]
	orrs r3, r2
	strb r3, [r1]
	bx lr
	.align 2, 0

	thumb_func_start sub_80D217C
sub_80D217C: @ 0x080D217C
	ldr r2, [r1, #0x40]
	adds r3, r2, #1
	str r3, [r1, #0x40]
	ldrb r3, [r2]
	bx lr
	.align 2, 0

	thumb_func_start sub_80D2188
sub_80D2188: @ 0x080D2188
	mov ip, lr
	bl sub_80D217C
	strb r3, [r1, #0x19]
	cmp r3, #0
	bne _080D2198
	bl sub_80D2160
_080D2198:
	bx ip
	.align 2, 0

	thumb_func_start sub_80D219C
sub_80D219C: @ 0x080D219C
	mov ip, lr
	bl sub_80D217C
	strb r3, [r1, #0x17]
	cmp r3, #0
	bne _080D21AC
	bl sub_80D2160
_080D21AC:
	bx ip
	.align 2, 0

	thumb_func_start sub_80D21B0
sub_80D21B0: @ 0x080D21B0
	push {r4, r5, r6, r7, lr}
	mov ip, r0
	lsls r1, r1, #0x18
	lsrs r6, r1, #0x18
	lsls r7, r2, #0x18
	cmp r6, #0xb2
	bls _080D21C4
	movs r6, #0xb2
	movs r7, #0xff
	lsls r7, r7, #0x18
_080D21C4:
	ldr r3, _080D220C @ =gUnknown_08139B18
	adds r0, r6, r3
	ldrb r5, [r0]
	ldr r4, _080D2210 @ =gUnknown_08139BCC
	movs r2, #0xf
	adds r0, r5, #0
	ands r0, r2
	lsls r0, r0, #2
	adds r0, r0, r4
	lsrs r1, r5, #4
	ldr r5, [r0]
	lsrs r5, r1
	adds r0, r6, #1
	adds r0, r0, r3
	ldrb r1, [r0]
	adds r0, r1, #0
	ands r0, r2
	lsls r0, r0, #2
	adds r0, r0, r4
	lsrs r1, r1, #4
	ldr r0, [r0]
	lsrs r0, r1
	mov r1, ip
	ldr r4, [r1, #4]
	subs r0, r0, r5
	adds r1, r7, #0
	bl sub_80D1594
	adds r1, r0, #0
	adds r1, r5, r1
	adds r0, r4, #0
	bl sub_80D1594
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080D220C: .4byte gUnknown_08139B18
_080D2210: .4byte gUnknown_08139BCC
_080D2214:
	.byte 0x70, 0x47, 0x00, 0x00

	thumb_func_start sub_80D2218
sub_80D2218: @ 0x080D2218
	adds r2, r0, #0
	ldr r3, [r2, #0x34]
	ldr r0, _080D222C @ =0x68736D53
	cmp r3, r0
	bne _080D222A
	ldr r0, [r2, #4]
	ldr r1, _080D2230 @ =0x7FFFFFFF
	ands r0, r1
	str r0, [r2, #4]
_080D222A:
	bx lr
	.align 2, 0
_080D222C: .4byte 0x68736D53
_080D2230: .4byte 0x7FFFFFFF

	thumb_func_start sub_80D2234
sub_80D2234: @ 0x080D2234
	adds r2, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldr r3, [r2, #0x34]
	ldr r0, _080D2250 @ =0x68736D53
	cmp r3, r0
	bne _080D224C
	strh r1, [r2, #0x26]
	strh r1, [r2, #0x24]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r2, #0x28]
_080D224C:
	bx lr
	.align 2, 0
_080D2250: .4byte 0x68736D53

	thumb_func_start sub_80D2254
sub_80D2254: @ 0x080D2254
	push {r4, r5, r6, lr}
	ldr r0, _080D22A8 @ =0x080D1629
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	ldr r1, _080D22AC @ =gUnknown_03000000
	ldr r2, _080D22B0 @ =0x04000100
	bl sub_80D3750
	ldr r0, _080D22B4 @ =gUnknown_02000C80
	bl sub_80D2654
	ldr r0, _080D22B8 @ =gUnknown_02001CC0
	bl sub_80D2510
	ldr r0, _080D22BC @ =0x0094BA00
	bl sub_80D27F0
	ldr r0, _080D22C0 @ =0x00000005
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	beq _080D22A2
	ldr r5, _080D22C4 @ =gUnknown_0813ABB4
	adds r6, r0, #0
_080D2286:
	ldr r4, [r5]
	ldr r1, [r5, #4]
	ldrb r2, [r5, #8]
	adds r0, r4, #0
	bl sub_80D2994
	ldrh r0, [r5, #0xa]
	strb r0, [r4, #0xb]
	ldr r0, _080D22C8 @ =gUnknown_02001EC0
	str r0, [r4, #0x18]
	adds r5, #0xc
	subs r6, #1
	cmp r6, #0
	bne _080D2286
_080D22A2:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080D22A8: .4byte 0x080D1629
_080D22AC: .4byte gUnknown_03000000
_080D22B0: .4byte 0x04000100
_080D22B4: .4byte gUnknown_02000C80
_080D22B8: .4byte gUnknown_02001CC0
_080D22BC: .4byte 0x0094BA00
_080D22C0: .4byte 0x00000005
_080D22C4: .4byte gUnknown_0813ABB4
_080D22C8: .4byte gUnknown_02001EC0

	thumb_func_start sub_80D22CC
sub_80D22CC: @ 0x080D22CC
	push {lr}
	bl sub_80D15A4
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D22D8
sub_80D22D8: @ 0x080D22D8
	push {lr}
	lsls r0, r0, #0x10
	ldr r2, _080D22FC @ =gUnknown_0813ABB4
	ldr r1, _080D2300 @ =gUnknown_0813ABF0
	lsrs r0, r0, #0xd
	adds r0, r0, r1
	ldrh r3, [r0, #4]
	lsls r1, r3, #1
	adds r1, r1, r3
	lsls r1, r1, #2
	adds r1, r1, r2
	ldr r2, [r1]
	ldr r1, [r0]
	adds r0, r2, #0
	bl sub_80D2A0C
	pop {r0}
	bx r0
	.align 2, 0
_080D22FC: .4byte gUnknown_0813ABB4
_080D2300: .4byte gUnknown_0813ABF0

	thumb_func_start sub_80D2304
sub_80D2304: @ 0x080D2304
	push {lr}
	lsls r0, r0, #0x10
	ldr r2, _080D2330 @ =gUnknown_0813ABB4
	ldr r1, _080D2334 @ =gUnknown_0813ABF0
	lsrs r0, r0, #0xd
	adds r0, r0, r1
	ldrh r3, [r0, #4]
	lsls r1, r3, #1
	adds r1, r1, r3
	lsls r1, r1, #2
	adds r1, r1, r2
	ldr r1, [r1]
	ldr r3, [r1]
	ldr r2, [r0]
	cmp r3, r2
	beq _080D2338
	adds r0, r1, #0
	adds r1, r2, #0
	bl sub_80D2A0C
	b _080D234C
	.align 2, 0
_080D2330: .4byte gUnknown_0813ABB4
_080D2334: .4byte gUnknown_0813ABF0
_080D2338:
	ldr r2, [r1, #4]
	ldrh r0, [r1, #4]
	cmp r0, #0
	beq _080D2344
	cmp r2, #0
	bge _080D234C
_080D2344:
	adds r0, r1, #0
	adds r1, r3, #0
	bl sub_80D2A0C
_080D234C:
	pop {r0}
	bx r0

	thumb_func_start sub_80D2350
sub_80D2350: @ 0x080D2350
	push {lr}
	lsls r0, r0, #0x10
	ldr r2, _080D237C @ =gUnknown_0813ABB4
	ldr r1, _080D2380 @ =gUnknown_0813ABF0
	lsrs r0, r0, #0xd
	adds r0, r0, r1
	ldrh r3, [r0, #4]
	lsls r1, r3, #1
	adds r1, r1, r3
	lsls r1, r1, #2
	adds r1, r1, r2
	ldr r1, [r1]
	ldr r3, [r1]
	ldr r2, [r0]
	cmp r3, r2
	beq _080D2384
	adds r0, r1, #0
	adds r1, r2, #0
	bl sub_80D2A0C
	b _080D23A0
	.align 2, 0
_080D237C: .4byte gUnknown_0813ABB4
_080D2380: .4byte gUnknown_0813ABF0
_080D2384:
	ldr r2, [r1, #4]
	ldrh r0, [r1, #4]
	cmp r0, #0
	bne _080D2396
	adds r0, r1, #0
	adds r1, r3, #0
	bl sub_80D2A0C
	b _080D23A0
_080D2396:
	cmp r2, #0
	bge _080D23A0
	adds r0, r1, #0
	bl sub_80D2218
_080D23A0:
	pop {r0}
	bx r0

	thumb_func_start sub_80D23A4
sub_80D23A4: @ 0x080D23A4
	push {lr}
	lsls r0, r0, #0x10
	ldr r2, _080D23D0 @ =gUnknown_0813ABB4
	ldr r1, _080D23D4 @ =gUnknown_0813ABF0
	lsrs r0, r0, #0xd
	adds r0, r0, r1
	ldrh r3, [r0, #4]
	lsls r1, r3, #1
	adds r1, r1, r3
	lsls r1, r1, #2
	adds r1, r1, r2
	ldr r2, [r1]
	ldr r1, [r2]
	ldr r0, [r0]
	cmp r1, r0
	bne _080D23CA
	adds r0, r2, #0
	bl sub_80D2AF0
_080D23CA:
	pop {r0}
	bx r0
	.align 2, 0
_080D23D0: .4byte gUnknown_0813ABB4
_080D23D4: .4byte gUnknown_0813ABF0

	thumb_func_start sub_80D23D8
sub_80D23D8: @ 0x080D23D8
	push {lr}
	lsls r0, r0, #0x10
	ldr r2, _080D2404 @ =gUnknown_0813ABB4
	ldr r1, _080D2408 @ =gUnknown_0813ABF0
	lsrs r0, r0, #0xd
	adds r0, r0, r1
	ldrh r3, [r0, #4]
	lsls r1, r3, #1
	adds r1, r1, r3
	lsls r1, r1, #2
	adds r1, r1, r2
	ldr r2, [r1]
	ldr r1, [r2]
	ldr r0, [r0]
	cmp r1, r0
	bne _080D23FE
	adds r0, r2, #0
	bl sub_80D2218
_080D23FE:
	pop {r0}
	bx r0
	.align 2, 0
_080D2404: .4byte gUnknown_0813ABB4
_080D2408: .4byte gUnknown_0813ABF0

	thumb_func_start sub_80D240C
sub_80D240C: @ 0x080D240C
	push {r4, r5, lr}
	ldr r0, _080D2430 @ =0x00000005
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	beq _080D242A
	ldr r5, _080D2434 @ =gUnknown_0813ABB4
	adds r4, r0, #0
_080D241C:
	ldr r0, [r5]
	bl sub_80D2AF0
	adds r5, #0xc
	subs r4, #1
	cmp r4, #0
	bne _080D241C
_080D242A:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080D2430: .4byte 0x00000005
_080D2434: .4byte gUnknown_0813ABB4

	thumb_func_start sub_80D2438
sub_80D2438: @ 0x080D2438
	push {lr}
	bl sub_80D2218
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D2444
sub_80D2444: @ 0x080D2444
	push {r4, r5, lr}
	ldr r0, _080D2468 @ =0x00000005
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	beq _080D2462
	ldr r5, _080D246C @ =gUnknown_0813ABB4
	adds r4, r0, #0
_080D2454:
	ldr r0, [r5]
	bl sub_80D2218
	adds r5, #0xc
	subs r4, #1
	cmp r4, #0
	bne _080D2454
_080D2462:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080D2468: .4byte 0x00000005
_080D246C: .4byte gUnknown_0813ABB4

	thumb_func_start sub_80D2470
sub_80D2470: @ 0x080D2470
	push {lr}
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl sub_80D2234
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D2480
sub_80D2480: @ 0x080D2480
	adds r2, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldr r3, [r2, #0x34]
	ldr r0, _080D2498 @ =0x68736D53
	cmp r3, r0
	bne _080D2496
	strh r1, [r2, #0x26]
	strh r1, [r2, #0x24]
	ldr r0, _080D249C @ =0x00000101
	strh r0, [r2, #0x28]
_080D2496:
	bx lr
	.align 2, 0
_080D2498: .4byte 0x68736D53
_080D249C: .4byte 0x00000101

	thumb_func_start sub_80D24A0
sub_80D24A0: @ 0x080D24A0
	adds r2, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldr r3, [r2, #0x34]
	ldr r0, _080D24C0 @ =0x68736D53
	cmp r3, r0
	bne _080D24BE
	strh r1, [r2, #0x26]
	strh r1, [r2, #0x24]
	movs r0, #2
	strh r0, [r2, #0x28]
	ldr r0, [r2, #4]
	ldr r1, _080D24C4 @ =0x7FFFFFFF
	ands r0, r1
	str r0, [r2, #4]
_080D24BE:
	bx lr
	.align 2, 0
_080D24C0: .4byte 0x68736D53
_080D24C4: .4byte 0x7FFFFFFF

	thumb_func_start sub_80D24C8
sub_80D24C8: @ 0x080D24C8
	push {r4, r5, r6, r7, lr}
	ldrb r5, [r0, #8]
	ldr r4, [r0, #0x2c]
	cmp r5, #0
	ble _080D250A
	movs r7, #0x80
_080D24D4:
	ldrb r1, [r4]
	adds r0, r7, #0
	ands r0, r1
	cmp r0, #0
	beq _080D2502
	movs r6, #0x40
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	beq _080D2502
	adds r0, r4, #0
	bl sub_80D2640
	strb r7, [r4]
	movs r0, #2
	strb r0, [r4, #0xf]
	strb r6, [r4, #0x13]
	movs r0, #0x16
	strb r0, [r4, #0x19]
	adds r1, r4, #0
	adds r1, #0x24
	movs r0, #1
	strb r0, [r1]
_080D2502:
	subs r5, #1
	adds r4, #0x50
	cmp r5, #0
	bgt _080D24D4
_080D250A:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80D2510
sub_80D2510: @ 0x080D2510
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r1, _080D25D8 @ =0x04000084
	movs r0, #0x8f
	strh r0, [r1]
	ldr r3, _080D25DC @ =0x04000080
	movs r2, #0
	strh r2, [r3]
	ldr r0, _080D25E0 @ =0x04000063
	movs r1, #8
	strb r1, [r0]
	adds r0, #6
	strb r1, [r0]
	adds r0, #0x10
	strb r1, [r0]
	subs r0, #0x14
	movs r1, #0x80
	strb r1, [r0]
	adds r0, #8
	strb r1, [r0]
	adds r0, #0x10
	strb r1, [r0]
	subs r0, #0xd
	strb r2, [r0]
	movs r0, #0x77
	strb r0, [r3]
	ldr r0, _080D25E4 @ =gUnknown_03007FF0
	ldr r4, [r0]
	ldr r6, [r4]
	ldr r0, _080D25E8 @ =0x68736D53
	cmp r6, r0
	bne _080D25D0
	adds r0, r6, #1
	str r0, [r4]
	ldr r1, _080D25EC @ =gUnknown_02001C30
	ldr r0, _080D25F0 @ =sub_80D34CC
	str r0, [r1, #0x20]
	ldr r0, _080D25F4 @ =sub_80D2188
	str r0, [r1, #0x44]
	ldr r0, _080D25F8 @ =sub_80D219C
	str r0, [r1, #0x4c]
	ldr r0, _080D25FC @ =sub_80D3624
	str r0, [r1, #0x70]
	ldr r0, _080D2600 @ =sub_80D2120
	str r0, [r1, #0x74]
	ldr r0, _080D2604 @ =sub_80D274C
	str r0, [r1, #0x78]
	ldr r0, _080D2608 @ =sub_80D1EAC
	str r0, [r1, #0x7c]
	adds r2, r1, #0
	adds r2, #0x80
	ldr r0, _080D260C @ =sub_80D2B30
	str r0, [r2]
	adds r1, #0x84
	ldr r0, _080D2610 @ =sub_80D2BF8
	str r0, [r1]
	str r5, [r4, #0x1c]
	ldr r0, _080D2614 @ =sub_80D2E0C
	str r0, [r4, #0x28]
	ldr r0, _080D2618 @ =sub_80D2D54
	str r0, [r4, #0x2c]
	ldr r0, _080D261C @ =sub_80D2CAC
	str r0, [r4, #0x30]
	ldr r0, _080D2620 @ =0x00000050
	movs r1, #0
	strb r0, [r4, #0xc]
	str r1, [sp]
	ldr r2, _080D2624 @ =0x05000040
	mov r0, sp
	adds r1, r5, #0
	bl sub_80D3750
	movs r0, #1
	strb r0, [r5, #1]
	movs r0, #0x11
	strb r0, [r5, #0x1c]
	adds r1, r5, #0
	adds r1, #0x41
	movs r0, #2
	strb r0, [r1]
	adds r1, #0x1b
	movs r0, #0x22
	strb r0, [r1]
	adds r1, #0x25
	movs r0, #3
	strb r0, [r1]
	adds r1, #0x1b
	movs r0, #0x44
	strb r0, [r1]
	adds r1, #0x24
	movs r0, #4
	strb r0, [r1, #1]
	movs r0, #0x88
	strb r0, [r1, #0x1c]
	str r6, [r4]
_080D25D0:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080D25D8: .4byte 0x04000084
_080D25DC: .4byte 0x04000080
_080D25E0: .4byte 0x04000063
_080D25E4: .4byte gUnknown_03007FF0
_080D25E8: .4byte 0x68736D53
_080D25EC: .4byte gUnknown_02001C30
_080D25F0: .4byte sub_80D34CC
_080D25F4: .4byte sub_80D2188
_080D25F8: .4byte sub_80D219C
_080D25FC: .4byte sub_80D3624
_080D2600: .4byte sub_80D2120
_080D2604: .4byte sub_80D274C
_080D2608: .4byte sub_80D1EAC
_080D260C: .4byte sub_80D2B30
_080D2610: .4byte sub_80D2BF8
_080D2614: .4byte sub_80D2E0C
_080D2618: .4byte sub_80D2D54
_080D261C: .4byte sub_80D2CAC
_080D2620: .4byte 0x00000050
_080D2624: .4byte 0x05000040
_080D2628:
	.byte 0x2A, 0xDF, 0x70, 0x47

	thumb_func_start sub_80D262C
sub_80D262C: @ 0x080D262C
	push {lr}
	ldr r1, _080D263C @ =gUnknown_02001CB8
	ldr r1, [r1]
	bl sub_80D3910
	pop {r0}
	bx r0
	.align 2, 0
_080D263C: .4byte gUnknown_02001CB8

	thumb_func_start sub_80D2640
sub_80D2640: @ 0x080D2640
	push {lr}
	ldr r1, _080D2650 @ =gUnknown_02001CBC
	ldr r1, [r1]
	bl sub_80D3910
	pop {r0}
	bx r0
	.align 2, 0
_080D2650: .4byte gUnknown_02001CBC

	thumb_func_start sub_80D2654
sub_80D2654: @ 0x080D2654
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	movs r3, #0
	str r3, [r5]
	ldr r1, _080D270C @ =0x040000C4
	ldr r0, [r1]
	movs r2, #0x80
	lsls r2, r2, #0x12
	ands r0, r2
	cmp r0, #0
	beq _080D2670
	ldr r0, _080D2710 @ =0x84400004
	str r0, [r1]
_080D2670:
	ldr r1, _080D2714 @ =0x040000D0
	ldr r0, [r1]
	ands r0, r2
	cmp r0, #0
	beq _080D267E
	ldr r0, _080D2710 @ =0x84400004
	str r0, [r1]
_080D267E:
	ldr r0, _080D2718 @ =0x040000C6
	movs r2, #0x80
	lsls r2, r2, #3
	adds r1, r2, #0
	strh r1, [r0]
	adds r0, #0xc
	strh r1, [r0]
	ldr r1, _080D271C @ =0x04000084
	movs r0, #0x8f
	strh r0, [r1]
	subs r1, #2
	ldr r2, _080D2720 @ =0x0000A90E
	adds r0, r2, #0
	strh r0, [r1]
	ldr r2, _080D2724 @ =0x04000089
	ldrb r1, [r2]
	movs r0, #0x3f
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	ldr r1, _080D2728 @ =0x040000BC
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	str r0, [r1]
	adds r1, #4
	ldr r0, _080D272C @ =0x040000A0
	str r0, [r1]
	adds r1, #8
	movs r2, #0x98
	lsls r2, r2, #4
	adds r0, r5, r2
	str r0, [r1]
	adds r1, #4
	ldr r0, _080D2730 @ =0x040000A4
	str r0, [r1]
	ldr r0, _080D2734 @ =gUnknown_03007FF0
	str r5, [r0]
	str r3, [sp]
	ldr r2, _080D2738 @ =0x050003EC
	mov r0, sp
	adds r1, r5, #0
	bl sub_80D3750
	movs r0, #8
	strb r0, [r5, #6]
	movs r0, #0xf
	strb r0, [r5, #7]
	ldr r0, _080D273C @ =sub_80D1F20
	str r0, [r5, #0x38]
	ldr r0, _080D2740 @ =0x080D3745
	str r0, [r5, #0x28]
	str r0, [r5, #0x2c]
	str r0, [r5, #0x30]
	str r0, [r5, #0x3c]
	ldr r4, _080D2744 @ =gUnknown_02001C30
	adds r0, r4, #0
	bl sub_80D1A34
	str r4, [r5, #0x34]
	movs r0, #0x80
	lsls r0, r0, #0xb
	bl sub_80D274C
	ldr r0, _080D2748 @ =0x68736D53
	str r0, [r5]
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080D270C: .4byte 0x040000C4
_080D2710: .4byte 0x84400004
_080D2714: .4byte 0x040000D0
_080D2718: .4byte 0x040000C6
_080D271C: .4byte 0x04000084
_080D2720: .4byte 0x0000A90E
_080D2724: .4byte 0x04000089
_080D2728: .4byte 0x040000BC
_080D272C: .4byte 0x040000A0
_080D2730: .4byte 0x040000A4
_080D2734: .4byte gUnknown_03007FF0
_080D2738: .4byte 0x050003EC
_080D273C: .4byte sub_80D1F20
_080D2740: .4byte 0x080D3745
_080D2744: .4byte gUnknown_02001C30
_080D2748: .4byte 0x68736D53

	thumb_func_start sub_80D274C
sub_80D274C: @ 0x080D274C
	push {r4, r5, r6, lr}
	adds r2, r0, #0
	ldr r0, _080D27CC @ =gUnknown_03007FF0
	ldr r4, [r0]
	movs r0, #0xf0
	lsls r0, r0, #0xc
	ands r0, r2
	lsrs r2, r0, #0x10
	movs r6, #0
	strb r2, [r4, #8]
	ldr r1, _080D27D0 @ =gUnknown_08139BFC
	subs r0, r2, #1
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r5, [r0]
	str r5, [r4, #0x10]
	movs r0, #0xc6
	lsls r0, r0, #3
	adds r1, r5, #0
	bl sub_80D0EC8
	strb r0, [r4, #0xb]
	ldr r0, _080D27D4 @ =0x00091D1B
	muls r0, r5, r0
	ldr r1, _080D27D8 @ =0x00001388
	adds r0, r0, r1
	ldr r1, _080D27DC @ =0x00002710
	bl sub_80D0EC8
	adds r1, r0, #0
	str r1, [r4, #0x14]
	movs r0, #0x80
	lsls r0, r0, #0x11
	bl sub_80D0EC8
	adds r0, #1
	asrs r0, r0, #1
	str r0, [r4, #0x18]
	ldr r0, _080D27E0 @ =0x04000102
	strh r6, [r0]
	ldr r4, _080D27E4 @ =0x04000100
	ldr r0, _080D27E8 @ =0x00044940
	adds r1, r5, #0
	bl sub_80D0EC8
	rsbs r0, r0, #0
	strh r0, [r4]
	bl sub_80D2958
	ldr r1, _080D27EC @ =0x04000006
_080D27B0:
	ldrb r0, [r1]
	cmp r0, #0x9f
	beq _080D27B0
	ldr r1, _080D27EC @ =0x04000006
_080D27B8:
	ldrb r0, [r1]
	cmp r0, #0x9f
	bne _080D27B8
	ldr r1, _080D27E0 @ =0x04000102
	movs r0, #0x80
	strh r0, [r1]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080D27CC: .4byte gUnknown_03007FF0
_080D27D0: .4byte gUnknown_08139BFC
_080D27D4: .4byte 0x00091D1B
_080D27D8: .4byte 0x00001388
_080D27DC: .4byte 0x00002710
_080D27E0: .4byte 0x04000102
_080D27E4: .4byte 0x04000100
_080D27E8: .4byte 0x00044940
_080D27EC: .4byte 0x04000006

	thumb_func_start sub_80D27F0
sub_80D27F0: @ 0x080D27F0
	push {r4, r5, lr}
	adds r3, r0, #0
	ldr r0, _080D287C @ =gUnknown_03007FF0
	ldr r5, [r0]
	ldr r1, [r5]
	ldr r0, _080D2880 @ =0x68736D53
	cmp r1, r0
	bne _080D2876
	adds r0, r1, #1
	str r0, [r5]
	movs r4, #0xff
	ands r4, r3
	cmp r4, #0
	beq _080D2812
	movs r0, #0x7f
	ands r4, r0
	strb r4, [r5, #5]
_080D2812:
	movs r4, #0xf0
	lsls r4, r4, #4
	ands r4, r3
	cmp r4, #0
	beq _080D2832
	lsrs r0, r4, #8
	strb r0, [r5, #6]
	movs r4, #0xc
	adds r0, r5, #0
	adds r0, #0x50
	movs r1, #0
_080D2828:
	strb r1, [r0]
	subs r4, #1
	adds r0, #0x40
	cmp r4, #0
	bne _080D2828
_080D2832:
	movs r4, #0xf0
	lsls r4, r4, #8
	ands r4, r3
	cmp r4, #0
	beq _080D2840
	lsrs r0, r4, #0xc
	strb r0, [r5, #7]
_080D2840:
	movs r4, #0xb0
	lsls r4, r4, #0x10
	ands r4, r3
	cmp r4, #0
	beq _080D285E
	movs r0, #0xc0
	lsls r0, r0, #0xe
	ands r0, r4
	lsrs r4, r0, #0xe
	ldr r2, _080D2884 @ =0x04000089
	ldrb r1, [r2]
	movs r0, #0x3f
	ands r0, r1
	orrs r0, r4
	strb r0, [r2]
_080D285E:
	movs r4, #0xf0
	lsls r4, r4, #0xc
	ands r4, r3
	cmp r4, #0
	beq _080D2872
	bl sub_80D28DC
	adds r0, r4, #0
	bl sub_80D274C
_080D2872:
	ldr r0, _080D2880 @ =0x68736D53
	str r0, [r5]
_080D2876:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080D287C: .4byte gUnknown_03007FF0
_080D2880: .4byte 0x68736D53
_080D2884: .4byte 0x04000089
_080D2888:
	.byte 0xF0, 0xB5, 0x12, 0x48, 0x06, 0x68, 0x31, 0x68
	.byte 0x11, 0x48, 0x81, 0x42, 0x1B, 0xD1, 0x48, 0x1C, 0x30, 0x60, 0x0C, 0x25, 0x34, 0x1C, 0x50, 0x34
	.byte 0x00, 0x20, 0x20, 0x70, 0x01, 0x3D, 0x40, 0x34, 0x00, 0x2D, 0xFA, 0xDC, 0xF4, 0x69, 0x00, 0x2C
	.byte 0x0B, 0xD0, 0x01, 0x25, 0x00, 0x27, 0x28, 0x06, 0x00, 0x0E, 0xF1, 0x6A, 0x01, 0xF0, 0x28, 0xF8
	.byte 0x27, 0x70, 0x01, 0x35, 0x40, 0x34, 0x04, 0x2D, 0xF5, 0xDD, 0x03, 0x48, 0x30, 0x60, 0xF0, 0xBC
	.byte 0x01, 0xBC, 0x00, 0x47, 0xF0, 0x7F, 0x00, 0x03, 0x53, 0x6D, 0x73, 0x68

	thumb_func_start sub_80D28DC
sub_80D28DC: @ 0x080D28DC
	push {lr}
	sub sp, #4
	ldr r0, _080D293C @ =gUnknown_03007FF0
	ldr r2, [r0]
	ldr r1, [r2]
	ldr r3, _080D2940 @ =0x978C92AD
	adds r0, r1, r3
	cmp r0, #1
	bhi _080D2934
	adds r0, r1, #0
	adds r0, #0xa
	str r0, [r2]
	ldr r1, _080D2944 @ =0x040000C4
	ldr r0, [r1]
	movs r3, #0x80
	lsls r3, r3, #0x12
	ands r0, r3
	cmp r0, #0
	beq _080D2906
	ldr r0, _080D2948 @ =0x84400004
	str r0, [r1]
_080D2906:
	ldr r1, _080D294C @ =0x040000D0
	ldr r0, [r1]
	ands r0, r3
	cmp r0, #0
	beq _080D2914
	ldr r0, _080D2948 @ =0x84400004
	str r0, [r1]
_080D2914:
	ldr r0, _080D2950 @ =0x040000C6
	movs r3, #0x80
	lsls r3, r3, #3
	adds r1, r3, #0
	strh r1, [r0]
	adds r0, #0xc
	strh r1, [r0]
	movs r0, #0
	str r0, [sp]
	movs r0, #0xd4
	lsls r0, r0, #2
	adds r1, r2, r0
	ldr r2, _080D2954 @ =0x05000318
	mov r0, sp
	bl sub_80D3750
_080D2934:
	add sp, #4
	pop {r0}
	bx r0
	.align 2, 0
_080D293C: .4byte gUnknown_03007FF0
_080D2940: .4byte 0x978C92AD
_080D2944: .4byte 0x040000C4
_080D2948: .4byte 0x84400004
_080D294C: .4byte 0x040000D0
_080D2950: .4byte 0x040000C6
_080D2954: .4byte 0x05000318

	thumb_func_start sub_80D2958
sub_80D2958: @ 0x080D2958
	push {r4, lr}
	ldr r0, _080D2988 @ =gUnknown_03007FF0
	ldr r2, [r0]
	ldr r3, [r2]
	ldr r0, _080D298C @ =0x68736D53
	cmp r3, r0
	beq _080D2980
	ldr r0, _080D2990 @ =0x040000C6
	movs r4, #0xb6
	lsls r4, r4, #8
	adds r1, r4, #0
	strh r1, [r0]
	adds r0, #0xc
	strh r1, [r0]
	ldrb r0, [r2, #4]
	movs r0, #0
	strb r0, [r2, #4]
	adds r0, r3, #0
	subs r0, #0xa
	str r0, [r2]
_080D2980:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D2988: .4byte gUnknown_03007FF0
_080D298C: .4byte 0x68736D53
_080D2990: .4byte 0x040000C6

	thumb_func_start sub_80D2994
sub_80D2994: @ 0x080D2994
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r6, r1, #0
	lsls r2, r2, #0x18
	lsrs r4, r2, #0x18
	cmp r4, #0
	beq _080D29F8
	cmp r4, #0x10
	bls _080D29A8
	movs r4, #0x10
_080D29A8:
	ldr r0, _080D2A00 @ =gUnknown_03007FF0
	ldr r5, [r0]
	ldr r1, [r5]
	ldr r0, _080D2A04 @ =0x68736D53
	cmp r1, r0
	bne _080D29F8
	adds r0, r1, #1
	str r0, [r5]
	adds r0, r7, #0
	bl sub_80D2640
	str r6, [r7, #0x2c]
	strb r4, [r7, #8]
	movs r0, #0x80
	lsls r0, r0, #0x18
	str r0, [r7, #4]
	cmp r4, #0
	beq _080D29DC
	movs r1, #0
_080D29CE:
	strb r1, [r6]
	subs r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r6, #0x50
	cmp r4, #0
	bne _080D29CE
_080D29DC:
	ldr r0, [r5, #0x20]
	cmp r0, #0
	beq _080D29EC
	str r0, [r7, #0x38]
	ldr r0, [r5, #0x24]
	str r0, [r7, #0x3c]
	movs r0, #0
	str r0, [r5, #0x20]
_080D29EC:
	str r7, [r5, #0x24]
	ldr r0, _080D2A08 @ =0x080D1C45
	str r0, [r5, #0x20]
	ldr r0, _080D2A04 @ =0x68736D53
	str r0, [r5]
	str r0, [r7, #0x34]
_080D29F8:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080D2A00: .4byte gUnknown_03007FF0
_080D2A04: .4byte 0x68736D53
_080D2A08: .4byte 0x080D1C45

	thumb_func_start sub_80D2A0C
sub_80D2A0C: @ 0x080D2A0C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	adds r7, r1, #0
	ldr r1, [r5, #0x34]
	ldr r0, _080D2AEC @ =0x68736D53
	cmp r1, r0
	bne _080D2AE2
	ldrb r0, [r5, #0xb]
	ldrb r2, [r7, #2]
	cmp r0, #0
	beq _080D2A4E
	ldr r0, [r5]
	cmp r0, #0
	beq _080D2A38
	ldr r1, [r5, #0x2c]
	movs r0, #0x40
	ldrb r1, [r1]
	ands r0, r1
	cmp r0, #0
	bne _080D2A44
_080D2A38:
	ldr r1, [r5, #4]
	ldrh r0, [r5, #4]
	cmp r0, #0
	beq _080D2A4E
	cmp r1, #0
	blt _080D2A4E
_080D2A44:
	ldrb r0, [r7, #2]
	adds r2, r0, #0
	ldrb r0, [r5, #9]
	cmp r0, r2
	bhi _080D2AE2
_080D2A4E:
	ldr r0, [r5, #0x34]
	adds r0, #1
	str r0, [r5, #0x34]
	movs r1, #0
	str r1, [r5, #4]
	str r7, [r5]
	ldr r0, [r7, #4]
	str r0, [r5, #0x30]
	strb r2, [r5, #9]
	str r1, [r5, #0xc]
	movs r0, #0x96
	strh r0, [r5, #0x1c]
	strh r0, [r5, #0x20]
	adds r0, #0x6a
	strh r0, [r5, #0x1e]
	strh r1, [r5, #0x22]
	strh r1, [r5, #0x24]
	movs r6, #0
	ldr r4, [r5, #0x2c]
	ldrb r1, [r7]
	cmp r6, r1
	bge _080D2AAE
	ldrb r0, [r5, #8]
	cmp r6, r0
	bge _080D2ACE
	mov r8, r6
_080D2A82:
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_80D1EAC
	movs r0, #0xc0
	strb r0, [r4]
	mov r1, r8
	str r1, [r4, #0x20]
	lsls r1, r6, #2
	adds r0, r7, #0
	adds r0, #8
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [r4, #0x40]
	adds r6, #1
	adds r4, #0x50
	ldrb r0, [r7]
	cmp r6, r0
	bge _080D2AAE
	ldrb r1, [r5, #8]
	cmp r6, r1
	blt _080D2A82
_080D2AAE:
	ldrb r0, [r5, #8]
	cmp r6, r0
	bge _080D2ACE
	movs r1, #0
	mov r8, r1
_080D2AB8:
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_80D1EAC
	mov r0, r8
	strb r0, [r4]
	adds r6, #1
	adds r4, #0x50
	ldrb r1, [r5, #8]
	cmp r6, r1
	blt _080D2AB8
_080D2ACE:
	movs r0, #0x80
	ldrb r1, [r7, #3]
	ands r0, r1
	cmp r0, #0
	beq _080D2ADE
	ldrb r0, [r7, #3]
	bl sub_80D27F0
_080D2ADE:
	ldr r0, _080D2AEC @ =0x68736D53
	str r0, [r5, #0x34]
_080D2AE2:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080D2AEC: .4byte 0x68736D53

	thumb_func_start sub_80D2AF0
sub_80D2AF0: @ 0x080D2AF0
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	ldr r1, [r6, #0x34]
	ldr r0, _080D2B2C @ =0x68736D53
	cmp r1, r0
	bne _080D2B26
	adds r0, r1, #1
	str r0, [r6, #0x34]
	ldr r0, [r6, #4]
	movs r1, #0x80
	lsls r1, r1, #0x18
	orrs r0, r1
	str r0, [r6, #4]
	ldrb r4, [r6, #8]
	ldr r5, [r6, #0x2c]
	cmp r4, #0
	ble _080D2B22
_080D2B12:
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_80D1EAC
	subs r4, #1
	adds r5, #0x50
	cmp r4, #0
	bgt _080D2B12
_080D2B22:
	ldr r0, _080D2B2C @ =0x68736D53
	str r0, [r6, #0x34]
_080D2B26:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080D2B2C: .4byte 0x68736D53

	thumb_func_start sub_80D2B30
sub_80D2B30: @ 0x080D2B30
	push {r4, r5, r6, r7, lr}
	adds r6, r0, #0
	ldrh r1, [r6, #0x24]
	cmp r1, #0
	beq _080D2BF2
	ldrh r0, [r6, #0x26]
	subs r0, #1
	strh r0, [r6, #0x26]
	ldr r3, _080D2B70 @ =0x0000FFFF
	adds r2, r3, #0
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #0
	bne _080D2BF2
	strh r1, [r6, #0x26]
	ldrh r1, [r6, #0x28]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080D2B74
	adds r0, r1, #0
	adds r0, #0x10
	strh r0, [r6, #0x28]
	ands r0, r2
	cmp r0, #0xff
	bls _080D2BC6
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r6, #0x28]
	strh r3, [r6, #0x24]
	b _080D2BC6
	.align 2, 0
_080D2B70: .4byte 0x0000FFFF
_080D2B74:
	adds r0, r1, #0
	subs r0, #0x10
	strh r0, [r6, #0x28]
	ands r0, r2
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _080D2BC6
	ldrb r5, [r6, #8]
	ldr r4, [r6, #0x2c]
	cmp r5, #0
	ble _080D2BA6
_080D2B8A:
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_80D1EAC
	movs r0, #1
	ldrh r7, [r6, #0x28]
	ands r0, r7
	cmp r0, #0
	bne _080D2B9E
	strb r0, [r4]
_080D2B9E:
	subs r5, #1
	adds r4, #0x50
	cmp r5, #0
	bgt _080D2B8A
_080D2BA6:
	movs r0, #1
	ldrh r1, [r6, #0x28]
	ands r0, r1
	cmp r0, #0
	beq _080D2BBA
	ldr r0, [r6, #4]
	movs r1, #0x80
	lsls r1, r1, #0x18
	orrs r0, r1
	b _080D2BBE
_080D2BBA:
	movs r0, #0x80
	lsls r0, r0, #0x18
_080D2BBE:
	str r0, [r6, #4]
	movs r0, #0
	strh r0, [r6, #0x24]
	b _080D2BF2
_080D2BC6:
	ldrb r5, [r6, #8]
	ldr r4, [r6, #0x2c]
	cmp r5, #0
	ble _080D2BF2
	movs r3, #0x80
	movs r7, #0
	movs r2, #3
_080D2BD4:
	ldrb r1, [r4]
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _080D2BEA
	ldrh r7, [r6, #0x28]
	lsrs r0, r7, #2
	strb r0, [r4, #0x13]
	adds r0, r1, #0
	orrs r0, r2
	strb r0, [r4]
_080D2BEA:
	subs r5, #1
	adds r4, #0x50
	cmp r5, #0
	bgt _080D2BD4
_080D2BF2:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80D2BF8
sub_80D2BF8: @ 0x080D2BF8
	push {r4, lr}
	adds r2, r1, #0
	movs r0, #1
	ldrb r1, [r2]
	ands r0, r1
	cmp r0, #0
	beq _080D2C5C
	ldrb r3, [r2, #0x13]
	ldrb r1, [r2, #0x12]
	adds r0, r3, #0
	muls r0, r1, r0
	lsrs r3, r0, #5
	ldrb r4, [r2, #0x18]
	cmp r4, #1
	bne _080D2C20
	movs r0, #0x16
	ldrsb r0, [r2, r0]
	adds r0, #0x80
	muls r0, r3, r0
	lsrs r3, r0, #7
_080D2C20:
	movs r0, #0x14
	ldrsb r0, [r2, r0]
	lsls r0, r0, #1
	movs r1, #0x15
	ldrsb r1, [r2, r1]
	adds r1, r0, r1
	cmp r4, #2
	bne _080D2C36
	movs r0, #0x16
	ldrsb r0, [r2, r0]
	adds r1, r1, r0
_080D2C36:
	movs r0, #0x80
	rsbs r0, r0, #0
	cmp r1, r0
	bge _080D2C42
	adds r1, r0, #0
	b _080D2C48
_080D2C42:
	cmp r1, #0x7f
	ble _080D2C48
	movs r1, #0x7f
_080D2C48:
	adds r0, r1, #0
	adds r0, #0x80
	muls r0, r3, r0
	lsrs r0, r0, #8
	strb r0, [r2, #0x10]
	movs r0, #0x7f
	subs r0, r0, r1
	muls r0, r3, r0
	lsrs r0, r0, #8
	strb r0, [r2, #0x11]
_080D2C5C:
	ldrb r1, [r2]
	movs r0, #4
	ands r0, r1
	adds r3, r1, #0
	cmp r0, #0
	beq _080D2CA0
	movs r0, #0xe
	ldrsb r0, [r2, r0]
	ldrb r1, [r2, #0xf]
	muls r0, r1, r0
	movs r1, #0xc
	ldrsb r1, [r2, r1]
	adds r1, r1, r0
	lsls r1, r1, #2
	movs r0, #0xa
	ldrsb r0, [r2, r0]
	lsls r0, r0, #8
	adds r1, r1, r0
	movs r0, #0xb
	ldrsb r0, [r2, r0]
	lsls r0, r0, #8
	adds r1, r1, r0
	ldrb r0, [r2, #0xd]
	adds r1, r0, r1
	ldrb r0, [r2, #0x18]
	cmp r0, #0
	bne _080D2C9A
	movs r0, #0x16
	ldrsb r0, [r2, r0]
	lsls r0, r0, #4
	adds r1, r1, r0
_080D2C9A:
	asrs r0, r1, #8
	strb r0, [r2, #8]
	strb r1, [r2, #9]
_080D2CA0:
	movs r0, #0xfa
	ands r0, r3
	strb r0, [r2]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_80D2CAC
sub_80D2CAC: @ 0x080D2CAC
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	mov ip, r2
	cmp r0, #4
	bne _080D2CE4
	cmp r5, #0x14
	bhi _080D2CC8
	movs r5, #0
	b _080D2CD6
_080D2CC8:
	adds r0, r5, #0
	subs r0, #0x15
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0x3b
	bls _080D2CD6
	movs r5, #0x3b
_080D2CD6:
	ldr r0, _080D2CE0 @ =gUnknown_08139CB0
	adds r0, r5, r0
	ldrb r0, [r0]
	b _080D2D46
	.align 2, 0
_080D2CE0: .4byte gUnknown_08139CB0
_080D2CE4:
	cmp r5, #0x23
	bhi _080D2CF0
	movs r0, #0
	mov ip, r0
	movs r5, #0
	b _080D2D02
_080D2CF0:
	adds r0, r5, #0
	subs r0, #0x24
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0x82
	bls _080D2D02
	movs r5, #0x82
	movs r1, #0xff
	mov ip, r1
_080D2D02:
	ldr r3, _080D2D4C @ =gUnknown_08139C14
	adds r0, r5, r3
	ldrb r6, [r0]
	ldr r4, _080D2D50 @ =gUnknown_08139C98
	movs r2, #0xf
	adds r0, r6, #0
	ands r0, r2
	lsls r0, r0, #1
	adds r0, r0, r4
	movs r7, #0
	ldrsh r1, [r0, r7]
	asrs r0, r6, #4
	adds r6, r1, #0
	asrs r6, r0
	adds r0, r5, #1
	adds r0, r0, r3
	ldrb r1, [r0]
	adds r0, r1, #0
	ands r0, r2
	lsls r0, r0, #1
	adds r0, r0, r4
	movs r2, #0
	ldrsh r0, [r0, r2]
	asrs r1, r1, #4
	asrs r0, r1
	subs r0, r0, r6
	mov r7, ip
	muls r7, r0, r7
	adds r0, r7, #0
	asrs r0, r0, #8
	adds r0, r6, r0
	movs r1, #0x80
	lsls r1, r1, #4
	adds r0, r0, r1
_080D2D46:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080D2D4C: .4byte gUnknown_08139C14
_080D2D50: .4byte gUnknown_08139C98

	thumb_func_start sub_80D2D54
sub_80D2D54: @ 0x080D2D54
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r1, r0, #0
	cmp r0, #2
	beq _080D2D7C
	cmp r0, #2
	bgt _080D2D68
	cmp r0, #1
	beq _080D2D6E
	b _080D2D90
_080D2D68:
	cmp r1, #3
	beq _080D2D84
	b _080D2D90
_080D2D6E:
	ldr r1, _080D2D78 @ =0x04000063
	movs r0, #8
	strb r0, [r1]
	adds r1, #2
	b _080D2D98
	.align 2, 0
_080D2D78: .4byte 0x04000063
_080D2D7C:
	ldr r1, _080D2D80 @ =0x04000069
	b _080D2D92
	.align 2, 0
_080D2D80: .4byte 0x04000069
_080D2D84:
	ldr r1, _080D2D8C @ =0x04000070
	movs r0, #0
	b _080D2D9A
	.align 2, 0
_080D2D8C: .4byte 0x04000070
_080D2D90:
	ldr r1, _080D2DA0 @ =0x04000079
_080D2D92:
	movs r0, #8
	strb r0, [r1]
	adds r1, #4
_080D2D98:
	movs r0, #0x80
_080D2D9A:
	strb r0, [r1]
	bx lr
	.align 2, 0
_080D2DA0: .4byte 0x04000079

	thumb_func_start sub_80D2DA4
sub_80D2DA4: @ 0x080D2DA4
	push {r4, lr}
	adds r1, r0, #0
	ldrb r0, [r1, #2]
	lsls r2, r0, #0x18
	lsrs r4, r2, #0x18
	ldrb r3, [r1, #3]
	lsls r0, r3, #0x18
	lsrs r3, r0, #0x18
	cmp r4, r3
	blo _080D2DC4
	lsrs r0, r2, #0x19
	cmp r0, r3
	blo _080D2DD0
	movs r0, #0xf
	strb r0, [r1, #0x1b]
	b _080D2DDE
_080D2DC4:
	lsrs r0, r0, #0x19
	cmp r0, r4
	blo _080D2DD0
	movs r0, #0xf0
	strb r0, [r1, #0x1b]
	b _080D2DDE
_080D2DD0:
	movs r0, #0xff
	strb r0, [r1, #0x1b]
	ldrb r2, [r1, #3]
	ldrb r3, [r1, #2]
	adds r0, r2, r3
	lsrs r0, r0, #4
	b _080D2DEE
_080D2DDE:
	ldrb r2, [r1, #3]
	ldrb r3, [r1, #2]
	adds r0, r2, r3
	lsrs r0, r0, #4
	strb r0, [r1, #0xa]
	cmp r0, #0xf
	bls _080D2DF0
	movs r0, #0xf
_080D2DEE:
	strb r0, [r1, #0xa]
_080D2DF0:
	ldrb r2, [r1, #6]
	ldrb r3, [r1, #0xa]
	adds r0, r2, #0
	muls r0, r3, r0
	adds r0, #0xf
	asrs r0, r0, #4
	strb r0, [r1, #0x19]
	ldrb r0, [r1, #0x1c]
	ldrb r2, [r1, #0x1b]
	ands r0, r2
	strb r0, [r1, #0x1b]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_80D2E0C
sub_80D2E0C: @ 0x080D2E0C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	ldr r0, _080D2E2C @ =gUnknown_03007FF0
	ldr r0, [r0]
	str r0, [sp, #4]
	ldrb r0, [r0, #0xa]
	cmp r0, #0
	beq _080D2E30
	subs r0, #1
	ldr r1, [sp, #4]
	strb r0, [r1, #0xa]
	b _080D2E36
	.align 2, 0
_080D2E2C: .4byte gUnknown_03007FF0
_080D2E30:
	movs r0, #0xe
	ldr r2, [sp, #4]
	strb r0, [r2, #0xa]
_080D2E36:
	movs r6, #1
	ldr r0, [sp, #4]
	ldr r4, [r0, #0x1c]
_080D2E3C:
	ldrb r1, [r4]
	movs r0, #0xc7
	ands r0, r1
	adds r2, r6, #1
	mov sl, r2
	movs r2, #0x40
	adds r2, r2, r4
	mov sb, r2
	cmp r0, #0
	bne _080D2E52
	b _080D323C
_080D2E52:
	cmp r6, #2
	beq _080D2E84
	cmp r6, #2
	bgt _080D2E60
	cmp r6, #1
	beq _080D2E66
	b _080D2EBC
_080D2E60:
	cmp r6, #3
	beq _080D2E9C
	b _080D2EBC
_080D2E66:
	ldr r0, _080D2E78 @ =0x04000060
	str r0, [sp, #8]
	ldr r7, _080D2E7C @ =0x04000062
	ldr r2, _080D2E80 @ =0x04000063
	str r2, [sp, #0xc]
	adds r0, #4
	str r0, [sp, #0x10]
	adds r2, #2
	b _080D2ECC
	.align 2, 0
_080D2E78: .4byte 0x04000060
_080D2E7C: .4byte 0x04000062
_080D2E80: .4byte 0x04000063
_080D2E84:
	ldr r0, _080D2E90 @ =0x04000061
	str r0, [sp, #8]
	ldr r7, _080D2E94 @ =0x04000068
	ldr r2, _080D2E98 @ =0x04000069
	b _080D2EC4
	.align 2, 0
_080D2E90: .4byte 0x04000061
_080D2E94: .4byte 0x04000068
_080D2E98: .4byte 0x04000069
_080D2E9C:
	ldr r0, _080D2EB0 @ =0x04000070
	str r0, [sp, #8]
	ldr r7, _080D2EB4 @ =0x04000072
	ldr r2, _080D2EB8 @ =0x04000073
	str r2, [sp, #0xc]
	adds r0, #4
	str r0, [sp, #0x10]
	adds r2, #2
	b _080D2ECC
	.align 2, 0
_080D2EB0: .4byte 0x04000070
_080D2EB4: .4byte 0x04000072
_080D2EB8: .4byte 0x04000073
_080D2EBC:
	ldr r0, _080D2F1C @ =0x04000071
	str r0, [sp, #8]
	ldr r7, _080D2F20 @ =0x04000078
	ldr r2, _080D2F24 @ =0x04000079
_080D2EC4:
	str r2, [sp, #0xc]
	adds r0, #0xb
	str r0, [sp, #0x10]
	adds r2, #4
_080D2ECC:
	str r2, [sp, #0x14]
	ldr r0, [sp, #4]
	ldrb r0, [r0, #0xa]
	str r0, [sp]
	ldr r2, [sp, #0xc]
	ldrb r0, [r2]
	mov r8, r0
	adds r2, r1, #0
	movs r0, #0x80
	ands r0, r2
	cmp r0, #0
	beq _080D2FC2
	movs r3, #0x40
	adds r0, r3, #0
	ands r0, r2
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r6, #1
	mov sl, r0
	movs r1, #0x40
	adds r1, r1, r4
	mov sb, r1
	cmp r5, #0
	bne _080D2FE6
	movs r0, #3
	strb r0, [r4]
	strb r0, [r4, #0x1d]
	adds r0, r4, #0
	str r3, [sp, #0x18]
	bl sub_80D2DA4
	ldr r3, [sp, #0x18]
	cmp r6, #2
	beq _080D2F34
	cmp r6, #2
	bgt _080D2F28
	cmp r6, #1
	beq _080D2F2E
	b _080D2F88
	.align 2, 0
_080D2F1C: .4byte 0x04000071
_080D2F20: .4byte 0x04000078
_080D2F24: .4byte 0x04000079
_080D2F28:
	cmp r6, #3
	beq _080D2F40
	b _080D2F88
_080D2F2E:
	ldrb r0, [r4, #0x1f]
	ldr r2, [sp, #8]
	strb r0, [r2]
_080D2F34:
	ldr r0, [r4, #0x24]
	lsls r0, r0, #6
	ldrb r1, [r4, #0x1e]
	adds r0, r1, r0
	strb r0, [r7]
	b _080D2F94
_080D2F40:
	ldr r1, [r4, #0x24]
	ldr r0, [r4, #0x28]
	cmp r1, r0
	beq _080D2F68
	ldr r2, [sp, #8]
	strb r3, [r2]
	ldr r1, _080D2F7C @ =0x04000090
	ldr r2, [r4, #0x24]
	ldr r0, [r2]
	str r0, [r1]
	adds r1, #4
	ldr r0, [r2, #4]
	str r0, [r1]
	adds r1, #4
	ldr r0, [r2, #8]
	str r0, [r1]
	adds r1, #4
	ldr r0, [r2, #0xc]
	str r0, [r1]
	str r2, [r4, #0x28]
_080D2F68:
	ldr r0, [sp, #8]
	strb r5, [r0]
	ldrb r0, [r4, #0x1e]
	strb r0, [r7]
	ldrb r0, [r4, #0x1e]
	cmp r0, #0
	beq _080D2F80
	movs r0, #0xc0
	b _080D2FA2
	.align 2, 0
_080D2F7C: .4byte 0x04000090
_080D2F80:
	movs r1, #0x80
	rsbs r1, r1, #0
	strb r1, [r4, #0x1a]
	b _080D2FA4
_080D2F88:
	ldrb r0, [r4, #0x1e]
	strb r0, [r7]
	ldr r0, [r4, #0x24]
	lsls r0, r0, #3
	ldr r2, [sp, #0x10]
	strb r0, [r2]
_080D2F94:
	ldrb r0, [r4, #4]
	adds r0, #8
	mov r8, r0
	ldrb r0, [r4, #0x1e]
	cmp r0, #0
	beq _080D2FA2
	movs r0, #0x40
_080D2FA2:
	strb r0, [r4, #0x1a]
_080D2FA4:
	ldrb r1, [r4, #4]
	movs r2, #0
	strb r1, [r4, #0xb]
	movs r0, #0xff
	ands r0, r1
	adds r1, r6, #1
	mov sl, r1
	movs r1, #0x40
	adds r1, r1, r4
	mov sb, r1
	cmp r0, #0
	bne _080D2FBE
	b _080D30FA
_080D2FBE:
	strb r2, [r4, #9]
	b _080D3128
_080D2FC2:
	movs r0, #4
	ands r0, r2
	cmp r0, #0
	beq _080D2FF4
	ldrb r0, [r4, #0xd]
	subs r0, #1
	strb r0, [r4, #0xd]
	movs r2, #0xff
	ands r0, r2
	lsls r0, r0, #0x18
	adds r1, r6, #1
	mov sl, r1
	movs r2, #0x40
	adds r2, r2, r4
	mov sb, r2
	cmp r0, #0
	ble _080D2FE6
	b _080D313A
_080D2FE6:
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	bl sub_80D2D54
	movs r0, #0
	strb r0, [r4]
	b _080D3238
_080D2FF4:
	movs r0, #0x40
	ands r0, r1
	adds r2, r6, #1
	mov sl, r2
	movs r2, #0x40
	adds r2, r2, r4
	mov sb, r2
	cmp r0, #0
	beq _080D3034
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	beq _080D3034
	movs r0, #0xfc
	ands r0, r1
	movs r2, #0
	strb r0, [r4]
	ldrb r1, [r4, #7]
	strb r1, [r4, #0xb]
	movs r0, #0xff
	ands r0, r1
	cmp r0, #0
	beq _080D3066
	movs r0, #1
	ldrb r1, [r4, #0x1d]
	orrs r0, r1
	strb r0, [r4, #0x1d]
	cmp r6, #3
	beq _080D3128
	ldrb r2, [r4, #7]
	mov r8, r2
	b _080D3128
_080D3034:
	ldrb r0, [r4, #0xb]
	cmp r0, #0
	bne _080D3128
	cmp r6, #3
	bne _080D3046
	movs r0, #1
	ldrb r1, [r4, #0x1d]
	orrs r0, r1
	strb r0, [r4, #0x1d]
_080D3046:
	adds r0, r4, #0
	bl sub_80D2DA4
	movs r0, #3
	ldrb r2, [r4]
	ands r0, r2
	cmp r0, #0
	bne _080D309A
	ldrb r0, [r4, #9]
	subs r0, #1
	strb r0, [r4, #9]
	movs r1, #0xff
	ands r0, r1
	lsls r0, r0, #0x18
	cmp r0, #0
	bgt _080D3096
_080D3066:
	ldrb r2, [r4, #0xc]
	ldrb r1, [r4, #0xa]
	adds r0, r2, #0
	muls r0, r1, r0
	adds r0, #0xff
	asrs r0, r0, #8
	movs r1, #0
	strb r0, [r4, #9]
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080D2FE6
	movs r0, #4
	ldrb r2, [r4]
	orrs r0, r2
	strb r0, [r4]
	movs r0, #1
	ldrb r1, [r4, #0x1d]
	orrs r0, r1
	strb r0, [r4, #0x1d]
	cmp r6, #3
	beq _080D313A
	movs r2, #8
	mov r8, r2
	b _080D313A
_080D3096:
	ldrb r0, [r4, #7]
	b _080D3126
_080D309A:
	cmp r0, #1
	bne _080D30A6
_080D309E:
	ldrb r0, [r4, #0x19]
	strb r0, [r4, #9]
	movs r0, #7
	b _080D3126
_080D30A6:
	cmp r0, #2
	bne _080D30EA
	ldrb r0, [r4, #9]
	subs r0, #1
	strb r0, [r4, #9]
	movs r1, #0xff
	ands r0, r1
	lsls r0, r0, #0x18
	ldrb r2, [r4, #0x19]
	lsls r1, r2, #0x18
	cmp r0, r1
	bgt _080D30E6
_080D30BE:
	ldrb r0, [r4, #6]
	cmp r0, #0
	bne _080D30CE
	movs r0, #0xfc
	ldrb r1, [r4]
	ands r0, r1
	strb r0, [r4]
	b _080D3066
_080D30CE:
	ldrb r0, [r4]
	subs r0, #1
	strb r0, [r4]
	movs r0, #1
	ldrb r2, [r4, #0x1d]
	orrs r0, r2
	strb r0, [r4, #0x1d]
	cmp r6, #3
	beq _080D309E
	movs r0, #8
	mov r8, r0
	b _080D309E
_080D30E6:
	ldrb r0, [r4, #5]
	b _080D3126
_080D30EA:
	ldrb r0, [r4, #9]
	adds r0, #1
	strb r0, [r4, #9]
	movs r1, #0xff
	ands r0, r1
	ldrb r2, [r4, #0xa]
	cmp r0, r2
	blo _080D3124
_080D30FA:
	ldrb r0, [r4]
	subs r0, #1
	movs r2, #0
	strb r0, [r4]
	ldrb r1, [r4, #5]
	strb r1, [r4, #0xb]
	movs r0, #0xff
	ands r0, r1
	cmp r0, #0
	beq _080D30BE
	movs r0, #1
	ldrb r1, [r4, #0x1d]
	orrs r0, r1
	strb r0, [r4, #0x1d]
	ldrb r0, [r4, #0xa]
	strb r0, [r4, #9]
	cmp r6, #3
	beq _080D3128
	ldrb r2, [r4, #5]
	mov r8, r2
	b _080D3128
_080D3124:
	ldrb r0, [r4, #4]
_080D3126:
	strb r0, [r4, #0xb]
_080D3128:
	ldrb r0, [r4, #0xb]
	subs r0, #1
	strb r0, [r4, #0xb]
	ldr r0, [sp]
	cmp r0, #0
	bne _080D313A
	subs r0, #1
	str r0, [sp]
	b _080D3034
_080D313A:
	movs r0, #2
	ldrb r1, [r4, #0x1d]
	ands r0, r1
	cmp r0, #0
	beq _080D31B2
	cmp r6, #3
	bgt _080D317A
	movs r0, #8
	ldrb r2, [r4, #1]
	ands r0, r2
	cmp r0, #0
	beq _080D317A
	ldr r0, _080D3164 @ =0x04000089
	ldrb r0, [r0]
	cmp r0, #0x3f
	bgt _080D316C
	ldr r0, [r4, #0x20]
	adds r0, #2
	ldr r1, _080D3168 @ =0x000007FC
	b _080D3176
	.align 2, 0
_080D3164: .4byte 0x04000089
_080D3168: .4byte 0x000007FC
_080D316C:
	cmp r0, #0x7f
	bgt _080D317A
	ldr r0, [r4, #0x20]
	adds r0, #1
	ldr r1, _080D3188 @ =0x000007FE
_080D3176:
	ands r0, r1
	str r0, [r4, #0x20]
_080D317A:
	cmp r6, #4
	beq _080D318C
	ldr r0, [r4, #0x20]
	ldr r1, [sp, #0x10]
	strb r0, [r1]
	b _080D319A
	.align 2, 0
_080D3188: .4byte 0x000007FE
_080D318C:
	ldr r2, [sp, #0x10]
	ldrb r0, [r2]
	movs r1, #8
	ands r1, r0
	ldr r0, [r4, #0x20]
	orrs r0, r1
	strb r0, [r2]
_080D319A:
	movs r0, #0xc0
	ldrb r1, [r4, #0x1a]
	ands r0, r1
	adds r1, r4, #0
	adds r1, #0x21
	ldrb r1, [r1]
	adds r0, r1, r0
	strb r0, [r4, #0x1a]
	movs r2, #0xff
	ands r0, r2
	ldr r1, [sp, #0x14]
	strb r0, [r1]
_080D31B2:
	movs r0, #1
	ldrb r2, [r4, #0x1d]
	ands r0, r2
	cmp r0, #0
	beq _080D3238
	ldr r1, _080D31FC @ =0x04000081
	ldrb r0, [r1]
	ldrb r2, [r4, #0x1c]
	bics r0, r2
	ldrb r2, [r4, #0x1b]
	orrs r0, r2
	strb r0, [r1]
	cmp r6, #3
	bne _080D3204
	ldr r0, _080D3200 @ =gUnknown_08139CEC
	ldrb r1, [r4, #9]
	adds r0, r1, r0
	ldrb r0, [r0]
	ldr r2, [sp, #0xc]
	strb r0, [r2]
	movs r1, #0x80
	adds r0, r1, #0
	ldrb r2, [r4, #0x1a]
	ands r0, r2
	cmp r0, #0
	beq _080D3238
	ldr r0, [sp, #8]
	strb r1, [r0]
	ldrb r0, [r4, #0x1a]
	ldr r1, [sp, #0x14]
	strb r0, [r1]
	movs r0, #0x7f
	ldrb r2, [r4, #0x1a]
	ands r0, r2
	strb r0, [r4, #0x1a]
	b _080D3238
	.align 2, 0
_080D31FC: .4byte 0x04000081
_080D3200: .4byte gUnknown_08139CEC
_080D3204:
	movs r0, #0xf
	mov r1, r8
	ands r1, r0
	mov r8, r1
	ldrb r2, [r4, #9]
	lsls r0, r2, #4
	add r0, r8
	ldr r1, [sp, #0xc]
	strb r0, [r1]
	movs r2, #0x80
	ldrb r0, [r4, #0x1a]
	orrs r0, r2
	ldr r1, [sp, #0x14]
	strb r0, [r1]
	cmp r6, #1
	bne _080D3238
	ldr r0, [sp, #8]
	ldrb r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	bne _080D3238
	ldrb r0, [r4, #0x1a]
	orrs r0, r2
	ldr r1, [sp, #0x14]
	strb r0, [r1]
_080D3238:
	movs r0, #0
	strb r0, [r4, #0x1d]
_080D323C:
	mov r6, sl
	mov r4, sb
	cmp r6, #4
	bgt _080D3246
	b _080D2E3C
_080D3246:
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D3258
sub_80D3258: @ 0x080D3258
	push {r4, lr}
	adds r2, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldr r3, [r2, #0x34]
	ldr r0, _080D327C @ =0x68736D53
	cmp r3, r0
	bne _080D3274
	strh r1, [r2, #0x1e]
	ldrh r4, [r2, #0x1c]
	adds r0, r1, #0
	muls r0, r4, r0
	asrs r0, r0, #8
	strh r0, [r2, #0x20]
_080D3274:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D327C: .4byte 0x68736D53

	thumb_func_start sub_80D3280
sub_80D3280: @ 0x080D3280
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r4, r0, #0
	lsls r1, r1, #0x10
	lsrs r7, r1, #0x10
	lsls r6, r2, #0x10
	ldr r3, [r4, #0x34]
	ldr r0, _080D32E4 @ =0x68736D53
	cmp r3, r0
	bne _080D32D8
	adds r0, r3, #1
	str r0, [r4, #0x34]
	ldrb r2, [r4, #8]
	ldr r1, [r4, #0x2c]
	movs r5, #1
	cmp r2, #0
	ble _080D32D4
	movs r0, #0x80
	mov r8, r0
	lsrs r6, r6, #0x12
	movs r0, #3
	mov ip, r0
_080D32B0:
	adds r0, r7, #0
	ands r0, r5
	cmp r0, #0
	beq _080D32CA
	ldrb r3, [r1]
	mov r0, r8
	ands r0, r3
	cmp r0, #0
	beq _080D32CA
	strb r6, [r1, #0x13]
	mov r0, ip
	orrs r0, r3
	strb r0, [r1]
_080D32CA:
	subs r2, #1
	adds r1, #0x50
	lsls r5, r5, #1
	cmp r2, #0
	bgt _080D32B0
_080D32D4:
	ldr r0, _080D32E4 @ =0x68736D53
	str r0, [r4, #0x34]
_080D32D8:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080D32E4: .4byte 0x68736D53

	thumb_func_start sub_80D32E8
sub_80D32E8: @ 0x080D32E8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r4, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov ip, r1
	lsls r2, r2, #0x10
	lsrs r6, r2, #0x10
	ldr r3, [r4, #0x34]
	ldr r0, _080D3358 @ =0x68736D53
	cmp r3, r0
	bne _080D334A
	adds r0, r3, #1
	str r0, [r4, #0x34]
	ldrb r2, [r4, #8]
	ldr r3, [r4, #0x2c]
	movs r5, #1
	cmp r2, #0
	ble _080D3346
	movs r0, #0x80
	mov sb, r0
	lsls r0, r6, #0x10
	asrs r7, r0, #0x18
	movs r0, #0xc
	mov r8, r0
_080D3320:
	mov r0, ip
	ands r0, r5
	cmp r0, #0
	beq _080D333C
	ldrb r1, [r3]
	mov r0, sb
	ands r0, r1
	cmp r0, #0
	beq _080D333C
	strb r7, [r3, #0xb]
	strb r6, [r3, #0xd]
	mov r0, r8
	orrs r0, r1
	strb r0, [r3]
_080D333C:
	subs r2, #1
	adds r3, #0x50
	lsls r5, r5, #1
	cmp r2, #0
	bgt _080D3320
_080D3346:
	ldr r0, _080D3358 @ =0x68736D53
	str r0, [r4, #0x34]
_080D334A:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080D3358: .4byte 0x68736D53

	thumb_func_start sub_80D335C
sub_80D335C: @ 0x080D335C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r4, r0, #0
	lsls r1, r1, #0x10
	lsrs r7, r1, #0x10
	lsls r2, r2, #0x18
	lsrs r6, r2, #0x18
	ldr r3, [r4, #0x34]
	ldr r0, _080D33C0 @ =0x68736D53
	cmp r3, r0
	bne _080D33B4
	adds r0, r3, #1
	str r0, [r4, #0x34]
	ldrb r2, [r4, #8]
	ldr r1, [r4, #0x2c]
	movs r5, #1
	cmp r2, #0
	ble _080D33B0
	movs r0, #0x80
	mov r8, r0
	movs r0, #3
	mov ip, r0
_080D338C:
	adds r0, r7, #0
	ands r0, r5
	cmp r0, #0
	beq _080D33A6
	ldrb r3, [r1]
	mov r0, r8
	ands r0, r3
	cmp r0, #0
	beq _080D33A6
	strb r6, [r1, #0x15]
	mov r0, ip
	orrs r0, r3
	strb r0, [r1]
_080D33A6:
	subs r2, #1
	adds r1, #0x50
	lsls r5, r5, #1
	cmp r2, #0
	bgt _080D338C
_080D33B0:
	ldr r0, _080D33C0 @ =0x68736D53
	str r0, [r4, #0x34]
_080D33B4:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080D33C0: .4byte 0x68736D53

	thumb_func_start sub_80D33C4
sub_80D33C4: @ 0x080D33C4
	adds r1, r0, #0
	movs r2, #0
	movs r0, #0
	strb r0, [r1, #0x1a]
	strb r0, [r1, #0x16]
	ldrb r0, [r1, #0x18]
	cmp r0, #0
	bne _080D33D8
	movs r0, #0xc
	b _080D33DA
_080D33D8:
	movs r0, #3
_080D33DA:
	ldrb r2, [r1]
	orrs r0, r2
	strb r0, [r1]
	bx lr
	.align 2, 0

	thumb_func_start sub_80D33E4
sub_80D33E4: @ 0x080D33E4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r6, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sl, r1
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	mov r8, r2
	ldr r1, [r6, #0x34]
	ldr r0, _080D3454 @ =0x68736D53
	cmp r1, r0
	bne _080D3444
	adds r0, r1, #1
	str r0, [r6, #0x34]
	ldrb r5, [r6, #8]
	ldr r4, [r6, #0x2c]
	movs r7, #1
	cmp r5, #0
	ble _080D3440
	mov sb, r8
_080D3414:
	mov r0, sl
	ands r0, r7
	cmp r0, #0
	beq _080D3436
	movs r0, #0x80
	ldrb r1, [r4]
	ands r0, r1
	cmp r0, #0
	beq _080D3436
	mov r0, r8
	strb r0, [r4, #0x17]
	mov r1, sb
	cmp r1, #0
	bne _080D3436
	adds r0, r4, #0
	bl sub_80D33C4
_080D3436:
	subs r5, #1
	adds r4, #0x50
	lsls r7, r7, #1
	cmp r5, #0
	bgt _080D3414
_080D3440:
	ldr r0, _080D3454 @ =0x68736D53
	str r0, [r6, #0x34]
_080D3444:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080D3454: .4byte 0x68736D53

	thumb_func_start sub_80D3458
sub_80D3458: @ 0x080D3458
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r6, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sl, r1
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	mov r8, r2
	ldr r1, [r6, #0x34]
	ldr r0, _080D34C8 @ =0x68736D53
	cmp r1, r0
	bne _080D34B8
	adds r0, r1, #1
	str r0, [r6, #0x34]
	ldrb r5, [r6, #8]
	ldr r4, [r6, #0x2c]
	movs r7, #1
	cmp r5, #0
	ble _080D34B4
	mov sb, r8
_080D3488:
	mov r0, sl
	ands r0, r7
	cmp r0, #0
	beq _080D34AA
	movs r0, #0x80
	ldrb r1, [r4]
	ands r0, r1
	cmp r0, #0
	beq _080D34AA
	mov r0, r8
	strb r0, [r4, #0x19]
	mov r1, sb
	cmp r1, #0
	bne _080D34AA
	adds r0, r4, #0
	bl sub_80D33C4
_080D34AA:
	subs r5, #1
	adds r4, #0x50
	lsls r7, r7, #1
	cmp r5, #0
	bgt _080D3488
_080D34B4:
	ldr r0, _080D34C8 @ =0x68736D53
	str r0, [r6, #0x34]
_080D34B8:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080D34C8: .4byte 0x68736D53

	thumb_func_start sub_80D34CC
sub_80D34CC: @ 0x080D34CC
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r1, #0
	ldr r1, [r6, #0x40]
	ldrb r5, [r1]
	adds r2, r1, #1
	str r2, [r6, #0x40]
	ldr r0, [r4, #0x18]
	ldrb r1, [r1, #1]
	adds r3, r1, r0
	adds r0, r2, #1
	str r0, [r6, #0x40]
	ldrb r2, [r2, #1]
	adds r0, #1
	str r0, [r6, #0x40]
	cmp r5, #0x11
	bls _080D34F0
	b _080D361E
_080D34F0:
	lsls r0, r5, #2
	ldr r1, _080D34FC @ =_080D3500
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080D34FC: .4byte _080D3500
_080D3500: @ jump table
	.4byte _080D3548 @ case 0
	.4byte _080D354C @ case 1
	.4byte _080D3554 @ case 2
	.4byte _080D355C @ case 3
	.4byte _080D3566 @ case 4
	.4byte _080D3574 @ case 5
	.4byte _080D3582 @ case 6
	.4byte _080D358A @ case 7
	.4byte _080D3592 @ case 8
	.4byte _080D359A @ case 9
	.4byte _080D35A2 @ case 10
	.4byte _080D35AA @ case 11
	.4byte _080D35B2 @ case 12
	.4byte _080D35C0 @ case 13
	.4byte _080D35CE @ case 14
	.4byte _080D35DC @ case 15
	.4byte _080D35EA @ case 16
	.4byte _080D35F8 @ case 17
_080D3548:
	strb r2, [r3]
	b _080D361E
_080D354C:
	ldrb r1, [r3]
	adds r0, r1, r2
	strb r0, [r3]
	b _080D361E
_080D3554:
	ldrb r1, [r3]
	subs r0, r1, r2
	strb r0, [r3]
	b _080D361E
_080D355C:
	ldr r0, [r4, #0x18]
	adds r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r3]
	b _080D361E
_080D3566:
	ldr r0, [r4, #0x18]
	adds r0, r0, r2
	ldrb r1, [r3]
	ldrb r0, [r0]
	adds r0, r1, r0
	strb r0, [r3]
	b _080D361E
_080D3574:
	ldr r0, [r4, #0x18]
	adds r0, r0, r2
	ldrb r1, [r3]
	ldrb r0, [r0]
	subs r0, r1, r0
	strb r0, [r3]
	b _080D361E
_080D3582:
	ldrb r3, [r3]
	cmp r3, r2
	beq _080D3604
	b _080D3618
_080D358A:
	ldrb r3, [r3]
	cmp r3, r2
	bne _080D3604
	b _080D3618
_080D3592:
	ldrb r3, [r3]
	cmp r3, r2
	bhi _080D3604
	b _080D3618
_080D359A:
	ldrb r3, [r3]
	cmp r3, r2
	bhs _080D3604
	b _080D3618
_080D35A2:
	ldrb r3, [r3]
	cmp r3, r2
	bls _080D3604
	b _080D3618
_080D35AA:
	ldrb r3, [r3]
	cmp r3, r2
	blo _080D3604
	b _080D3618
_080D35B2:
	ldr r0, [r4, #0x18]
	adds r0, r0, r2
	ldrb r3, [r3]
	ldrb r0, [r0]
	cmp r3, r0
	beq _080D3604
	b _080D3618
_080D35C0:
	ldr r0, [r4, #0x18]
	adds r0, r0, r2
	ldrb r3, [r3]
	ldrb r0, [r0]
	cmp r3, r0
	bne _080D3604
	b _080D3618
_080D35CE:
	ldr r0, [r4, #0x18]
	adds r0, r0, r2
	ldrb r3, [r3]
	ldrb r0, [r0]
	cmp r3, r0
	bhi _080D3604
	b _080D3618
_080D35DC:
	ldr r0, [r4, #0x18]
	adds r0, r0, r2
	ldrb r3, [r3]
	ldrb r0, [r0]
	cmp r3, r0
	bhs _080D3604
	b _080D3618
_080D35EA:
	ldr r0, [r4, #0x18]
	adds r0, r0, r2
	ldrb r3, [r3]
	ldrb r0, [r0]
	cmp r3, r0
	bls _080D3604
	b _080D3618
_080D35F8:
	ldr r0, [r4, #0x18]
	adds r0, r0, r2
	ldrb r3, [r3]
	ldrb r0, [r0]
	cmp r3, r0
	bhs _080D3618
_080D3604:
	ldr r0, _080D3614 @ =gUnknown_02001C34
	ldr r2, [r0]
	adds r0, r4, #0
	adds r1, r6, #0
	bl sub_80D3914
	b _080D361E
	.align 2, 0
_080D3614: .4byte gUnknown_02001C34
_080D3618:
	ldr r0, [r6, #0x40]
	adds r0, #4
	str r0, [r6, #0x40]
_080D361E:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_80D3624
sub_80D3624: @ 0x080D3624
	push {lr}
	ldr r2, [r1, #0x40]
	ldrb r3, [r2]
	adds r2, #1
	str r2, [r1, #0x40]
	ldr r2, _080D3640 @ =gUnknown_08139D30
	lsls r3, r3, #2
	adds r3, r3, r2
	ldr r2, [r3]
	bl sub_80D3914
	pop {r0}
	bx r0
	.align 2, 0
_080D3640: .4byte gUnknown_08139D30

	thumb_func_start sub_80D3644
sub_80D3644: @ 0x080D3644
	push {lr}
	ldr r2, _080D3654 @ =gUnknown_02001C30
	ldr r2, [r2]
	bl sub_80D3914
	pop {r0}
	bx r0
	.align 2, 0
_080D3654: .4byte gUnknown_02001C30

	thumb_func_start sub_80D3658
sub_80D3658: @ 0x080D3658
	push {r4, lr}
	ldr r2, [r1, #0x40]
	ldr r0, _080D3690 @ =0xFFFFFF00
	ands r4, r0
	ldrb r0, [r2]
	orrs r4, r0
	ldrb r0, [r2, #1]
	lsls r3, r0, #8
	ldr r0, _080D3694 @ =0xFFFF00FF
	ands r4, r0
	orrs r4, r3
	ldrb r0, [r2, #2]
	lsls r3, r0, #0x10
	ldr r0, _080D3698 @ =0xFF00FFFF
	ands r4, r0
	orrs r4, r3
	ldrb r0, [r2, #3]
	lsls r3, r0, #0x18
	ldr r0, _080D369C @ =0x00FFFFFF
	ands r4, r0
	orrs r4, r3
	str r4, [r1, #0x28]
	adds r2, #4
	str r2, [r1, #0x40]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D3690: .4byte 0xFFFFFF00
_080D3694: .4byte 0xFFFF00FF
_080D3698: .4byte 0xFF00FFFF
_080D369C: .4byte 0x00FFFFFF
_080D36A0:
	.byte 0x08, 0x6C, 0x02, 0x78, 0x08, 0x1C, 0x24, 0x30, 0x02, 0x70, 0x08, 0x6C, 0x01, 0x30, 0x08, 0x64
	.byte 0x70, 0x47, 0x00, 0x00, 0x08, 0x6C, 0x02, 0x78, 0x08, 0x1C, 0x2C, 0x30, 0x02, 0x70, 0x08, 0x6C
	.byte 0x01, 0x30, 0x08, 0x64, 0x70, 0x47, 0x00, 0x00, 0x08, 0x6C, 0x00, 0x78, 0x0A, 0x1C, 0x2D, 0x32
	.byte 0x10, 0x70, 0x08, 0x6C, 0x01, 0x30, 0x08, 0x64, 0x70, 0x47, 0x00, 0x00, 0x08, 0x6C, 0x00, 0x78
	.byte 0x0A, 0x1C, 0x2E, 0x32, 0x10, 0x70, 0x08, 0x6C, 0x01, 0x30, 0x08, 0x64, 0x70, 0x47, 0x00, 0x00
	.byte 0x08, 0x6C, 0x00, 0x78, 0x0A, 0x1C, 0x2F, 0x32, 0x10, 0x70, 0x08, 0x6C, 0x01, 0x30, 0x08, 0x64
	.byte 0x70, 0x47, 0x00, 0x00, 0x08, 0x6C, 0x02, 0x78, 0x8A, 0x77, 0x01, 0x30, 0x08, 0x64, 0x70, 0x47
	.byte 0x08, 0x6C, 0x02, 0x78, 0xCA, 0x77, 0x01, 0x30, 0x08, 0x64, 0x70, 0x47, 0x08, 0x6C, 0x00, 0x78
	.byte 0x0A, 0x1C, 0x26, 0x32, 0x10, 0x70, 0x08, 0x6C, 0x01, 0x30, 0x08, 0x64, 0x70, 0x47, 0x00, 0x00
	.byte 0x08, 0x6C, 0x00, 0x78, 0x0A, 0x1C, 0x27, 0x32, 0x10, 0x70, 0x08, 0x6C, 0x01, 0x30, 0x08, 0x64
	.byte 0x70, 0x47, 0x00, 0x00, 0x70, 0x47, 0x00, 0x00

	thumb_func_start sub_80D3748
sub_80D3748: @ 0x080D3748
	svc #0xa
	bx lr

	thumb_func_start sub_80D374C
sub_80D374C: @ 0x080D374C
	svc #0xc
	bx lr

	thumb_func_start sub_80D3750
sub_80D3750: @ 0x080D3750
	svc #0xb
	bx lr

	thumb_func_start sub_80D3754
sub_80D3754: @ 0x080D3754
	movs r2, #0
	svc #4
	bx lr
	.align 2, 0

	thumb_func_start sub_080D375C
sub_080D375C: @ 0x080D375C
	ldr r3, _080D376C @ =0x04000208
	movs r2, #0
	strb r2, [r3]
	ldr r1, _080D3770 @ =gUnknown_03007F00
	mov sp, r1
	svc #1
	svc #0
	movs r0, r0
	.align 2, 0
_080D376C: .4byte 0x04000208
_080D3770: .4byte gUnknown_03007F00

	thumb_func_start sub_80D3774
sub_80D3774: @ 0x080D3774
	svc #8
	bx lr

	thumb_func_start sub_80D3778
sub_80D3778: @ 0x080D3778
	push {r4, lr}
	adds r4, r0, #0
	subs r3, r2, #1
	cmp r2, #0
	beq _080D3794
	movs r2, #1
	rsbs r2, r2, #0
_080D3786:
	ldrb r0, [r4]
	strb r0, [r1]
	adds r4, #1
	adds r1, #1
	subs r3, #1
	cmp r3, r2
	bne _080D3786
_080D3794:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D379C
sub_80D379C: @ 0x080D379C
	push {r4, r5, r6, lr}
	sub sp, #0x80
	adds r4, r0, #0
	adds r5, r1, #0
	adds r6, r2, #0
	ldr r2, _080D37C8 @ =0x04000204
	ldrh r0, [r2]
	ldr r1, _080D37CC @ =0x0000FFFC
	ands r0, r1
	movs r1, #3
	orrs r0, r1
	strh r0, [r2]
	ldr r3, _080D37D0 @ =sub_80D3778
	movs r0, #1
	bics r3, r0
	mov r2, sp
	ldr r0, _080D37D4 @ =sub_80D379C
	ldr r1, _080D37D0 @ =sub_80D3778
	subs r0, r0, r1
	lsls r0, r0, #0xf
	b _080D37E4
	.align 2, 0
_080D37C8: .4byte 0x04000204
_080D37CC: .4byte 0x0000FFFC
_080D37D0: .4byte sub_80D3778
_080D37D4: .4byte sub_80D379C
_080D37D8:
	ldrh r0, [r3]
	strh r0, [r2]
	adds r3, #2
	adds r2, #2
	subs r0, r1, #1
	lsls r0, r0, #0x10
_080D37E4:
	lsrs r1, r0, #0x10
	cmp r1, #0
	bne _080D37D8
	mov r3, sp
	adds r3, #1
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl sub_80D3918
	add sp, #0x80
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_80D3800
sub_80D3800: @ 0x080D3800
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r3, r2, #0
	ldr r2, _080D3838 @ =0x04000204
	ldrh r0, [r2]
	ldr r1, _080D383C @ =0x0000FFFC
	ands r0, r1
	movs r1, #3
	orrs r0, r1
	strh r0, [r2]
	subs r3, #1
	movs r0, #1
	rsbs r0, r0, #0
	cmp r3, r0
	beq _080D3830
	adds r1, r0, #0
_080D3822:
	ldrb r0, [r5]
	strb r0, [r4]
	adds r5, #1
	adds r4, #1
	subs r3, #1
	cmp r3, r1
	bne _080D3822
_080D3830:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080D3838: .4byte 0x04000204
_080D383C: .4byte 0x0000FFFC

	thumb_func_start sub_80D3840
sub_80D3840: @ 0x080D3840
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r3, r1, #0
	subs r4, r2, #1
	cmp r2, #0
	beq _080D3866
	movs r2, #1
	rsbs r2, r2, #0
_080D3850:
	ldrb r1, [r3]
	ldrb r0, [r5]
	adds r5, #1
	adds r3, #1
	cmp r1, r0
	beq _080D3860
	subs r0, r3, #1
	b _080D3868
_080D3860:
	subs r4, #1
	cmp r4, r2
	bne _080D3850
_080D3866:
	movs r0, #0
_080D3868:
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80D3870
sub_80D3870: @ 0x080D3870
	push {r4, r5, r6, lr}
	sub sp, #0xc0
	adds r4, r0, #0
	adds r5, r1, #0
	adds r6, r2, #0
	ldr r2, _080D389C @ =0x04000204
	ldrh r0, [r2]
	ldr r1, _080D38A0 @ =0x0000FFFC
	ands r0, r1
	movs r1, #3
	orrs r0, r1
	strh r0, [r2]
	ldr r3, _080D38A4 @ =sub_80D3840
	movs r0, #1
	bics r3, r0
	mov r2, sp
	ldr r0, _080D38A8 @ =sub_80D3870
	ldr r1, _080D38A4 @ =sub_80D3840
	subs r0, r0, r1
	lsls r0, r0, #0xf
	b _080D38B8
	.align 2, 0
_080D389C: .4byte 0x04000204
_080D38A0: .4byte 0x0000FFFC
_080D38A4: .4byte sub_80D3840
_080D38A8: .4byte sub_80D3870
_080D38AC:
	ldrh r0, [r3]
	strh r0, [r2]
	adds r3, #2
	adds r2, #2
	subs r0, r1, #1
	lsls r0, r0, #0x10
_080D38B8:
	lsrs r1, r0, #0x10
	cmp r1, #0
	bne _080D38AC
	mov r3, sp
	adds r3, #1
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl sub_80D3918
	add sp, #0xc0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_80D38D4
sub_80D38D4: @ 0x080D38D4
	push {r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r5, r1, #0
	adds r4, r2, #0
	movs r7, #0
	b _080D38E6
_080D38E0:
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
_080D38E6:
	cmp r7, #2
	bhi _080D3904
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_80D3800
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_80D3870
	adds r3, r0, #0
	cmp r3, #0
	bne _080D38E0
_080D3904:
	adds r0, r3, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_80D390C
sub_80D390C: @ 0x080D390C
	bx r0
	nop

	thumb_func_start sub_80D3910
sub_80D3910: @ 0x080D3910
	bx r1
	nop

	thumb_func_start sub_80D3914
sub_80D3914: @ 0x080D3914
	bx r2
	nop

	thumb_func_start sub_80D3918
sub_80D3918: @ 0x080D3918
	bx r3
	nop

	thumb_func_start sub_80D391C
sub_80D391C: @ 0x080D391C
	bx r4
	nop

	thumb_func_start sub_80D3920
sub_80D3920: @ 0x080D3920
	bx r5
	nop

	thumb_func_start sub_80D3924
sub_80D3924: @ 0x080D3924
	bx r6
	nop

	thumb_func_start sub_80D3928
sub_80D3928: @ 0x080D3928
	bx r7
	nop
_080D392C:
	.byte 0x40, 0x47, 0xC0, 0x46
	.byte 0x48, 0x47, 0xC0, 0x46, 0x50, 0x47, 0xC0, 0x46, 0x58, 0x47, 0xC0, 0x46

	thumb_func_start sub_80D393C
sub_80D393C: @ 0x080D393C
	bx ip
	nop
_080D3940:
	.byte 0x68, 0x47, 0xC0, 0x46, 0x70, 0x47, 0xC0, 0x46

	thumb_func_start sub_80D3948
sub_80D3948: @ 0x080D3948
	push {r4, lr}
	adds r4, r2, #0
	adds r3, r0, #0
	adds r2, r1, #0
	cmp r4, #3
	bls _080D3984
	orrs r0, r2
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	bne _080D3984
	b _080D396A
_080D3960:
	adds r3, #4
	adds r2, #4
	subs r4, #4
	cmp r4, #3
	bls _080D3984
_080D396A:
	ldr r1, [r3]
	ldr r0, [r2]
	cmp r1, r0
	beq _080D3960
	b _080D3984
_080D3974:
	ldrb r0, [r3]
	ldrb r1, [r2]
	cmp r0, r1
	beq _080D3980
	subs r0, r0, r1
	b _080D398E
_080D3980:
	adds r3, #1
	adds r2, #1
_080D3984:
	adds r0, r4, #0
	subs r4, #1
	cmp r0, #0
	bne _080D3974
	movs r0, #0
_080D398E:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_80D3994
sub_80D3994: @ 0x080D3994
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r5, #0
	adds r3, r1, #0
	cmp r2, #0xf
	bls _080D39D4
	adds r0, r3, #0
	orrs r0, r5
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	bne _080D39D4
	adds r1, r5, #0
_080D39AE:
	ldm r3!, {r0}
	stm r1!, {r0}
	ldm r3!, {r0}
	stm r1!, {r0}
	ldm r3!, {r0}
	stm r1!, {r0}
	ldm r3!, {r0}
	stm r1!, {r0}
	subs r2, #0x10
	cmp r2, #0xf
	bhi _080D39AE
	cmp r2, #3
	bls _080D39D2
_080D39C8:
	ldm r3!, {r0}
	stm r1!, {r0}
	subs r2, #4
	cmp r2, #3
	bhi _080D39C8
_080D39D2:
	adds r4, r1, #0
_080D39D4:
	subs r2, #1
	movs r0, #1
	rsbs r0, r0, #0
	cmp r2, r0
	beq _080D39EE
	adds r1, r0, #0
_080D39E0:
	ldrb r0, [r3]
	strb r0, [r4]
	adds r3, #1
	adds r4, #1
	subs r2, #1
	cmp r2, r1
	bne _080D39E0
_080D39EE:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80D39F8
sub_80D39F8: @ 0x080D39F8
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r5, #0
	adds r3, r1, #0
	cmp r3, r5
	bhs _080D3A2A
	adds r0, r3, r2
	cmp r5, r0
	bhs _080D3A2A
	adds r3, r0, #0
	adds r4, r5, r2
	subs r2, #1
	movs r0, #1
	rsbs r0, r0, #0
	cmp r2, r0
	beq _080D3A7C
	adds r1, r0, #0
_080D3A1A:
	subs r4, #1
	subs r3, #1
	ldrb r0, [r3]
	strb r0, [r4]
	subs r2, #1
	cmp r2, r1
	bne _080D3A1A
	b _080D3A7C
_080D3A2A:
	cmp r2, #0xf
	bls _080D3A62
	adds r0, r3, #0
	orrs r0, r4
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	bne _080D3A62
	adds r1, r3, #0
_080D3A3C:
	ldm r1!, {r0}
	stm r4!, {r0}
	ldm r1!, {r0}
	stm r4!, {r0}
	ldm r1!, {r0}
	stm r4!, {r0}
	ldm r1!, {r0}
	stm r4!, {r0}
	subs r2, #0x10
	cmp r2, #0xf
	bhi _080D3A3C
	cmp r2, #3
	bls _080D3A60
_080D3A56:
	ldm r1!, {r0}
	stm r4!, {r0}
	subs r2, #4
	cmp r2, #3
	bhi _080D3A56
_080D3A60:
	adds r3, r1, #0
_080D3A62:
	subs r2, #1
	movs r0, #1
	rsbs r0, r0, #0
	cmp r2, r0
	beq _080D3A7C
	adds r1, r0, #0
_080D3A6E:
	ldrb r0, [r3]
	strb r0, [r4]
	adds r3, #1
	adds r4, #1
	subs r2, #1
	cmp r2, r1
	bne _080D3A6E
_080D3A7C:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_80D3A84
sub_80D3A84: @ 0x080D3A84
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r3, r5, #0
	cmp r2, #3
	bls _080D3ACA
	movs r0, #3
	ands r0, r5
	cmp r0, #0
	bne _080D3ACA
	adds r1, r5, #0
	movs r0, #0xff
	ands r4, r0
	lsls r3, r4, #8
	orrs r3, r4
	lsls r0, r3, #0x10
	orrs r3, r0
	cmp r2, #0xf
	bls _080D3ABE
_080D3AAA:
	stm r1!, {r3}
	stm r1!, {r3}
	stm r1!, {r3}
	stm r1!, {r3}
	subs r2, #0x10
	cmp r2, #0xf
	bhi _080D3AAA
	b _080D3ABE
_080D3ABA:
	stm r1!, {r3}
	subs r2, #4
_080D3ABE:
	cmp r2, #3
	bhi _080D3ABA
	adds r3, r1, #0
	b _080D3ACA
_080D3AC6:
	strb r4, [r3]
	adds r3, #1
_080D3ACA:
	adds r0, r2, #0
	subs r2, #1
	cmp r0, #0
	bne _080D3AC6
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80D3ADC
sub_80D3ADC: @ 0x080D3ADC
	push {r4, r5, r6, lr}
	adds r2, r0, #0
	adds r6, r1, #0
	adds r4, r2, #0
	movs r0, #3
	ands r0, r4
	cmp r0, #0
	bne _080D3B12
	ldr r1, [r4]
	ldr r5, _080D3AF8 @ =0xFEFEFEFF
	adds r0, r1, r5
	bics r0, r1
	ldr r3, _080D3AFC @ =0x80808080
	b _080D3B08
	.align 2, 0
_080D3AF8: .4byte 0xFEFEFEFF
_080D3AFC: .4byte 0x80808080
_080D3B00:
	adds r2, #4
	ldr r1, [r2]
	adds r0, r1, r5
	bics r0, r1
_080D3B08:
	ands r0, r3
	cmp r0, #0
	beq _080D3B00
	b _080D3B12
_080D3B10:
	adds r2, #1
_080D3B12:
	ldrb r0, [r2]
	cmp r0, #0
	bne _080D3B10
	adds r0, r2, #0
	adds r1, r6, #0
	bl sub_80D3B28
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_80D3B28
sub_80D3B28: @ 0x080D3B28
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r3, r6, #0
	adds r2, r1, #0
	adds r0, r2, #0
	orrs r0, r6
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	bne _080D3B60
	ldr r1, [r2]
	ldr r5, _080D3B48 @ =0xFEFEFEFF
	adds r0, r1, r5
	bics r0, r1
	ldr r4, _080D3B4C @ =0x80808080
	b _080D3B5A
	.align 2, 0
_080D3B48: .4byte 0xFEFEFEFF
_080D3B4C: .4byte 0x80808080
_080D3B50:
	ldm r2!, {r0}
	stm r3!, {r0}
	ldr r1, [r2]
	adds r0, r1, r5
	bics r0, r1
_080D3B5A:
	ands r0, r4
	cmp r0, #0
	beq _080D3B50
_080D3B60:
	ldrb r0, [r2]
	strb r0, [r3]
	lsls r0, r0, #0x18
	adds r2, #1
	adds r3, #1
	cmp r0, #0
	bne _080D3B60
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80D3B78
sub_80D3B78: @ 0x080D3B78
	push {r4, r5, lr}
	adds r1, r0, #0
	adds r5, r1, #0
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	bne _080D3BB0
	adds r2, r1, #0
	ldr r1, [r2]
	ldr r4, _080D3B94 @ =0xFEFEFEFF
	adds r0, r1, r4
	bics r0, r1
	ldr r3, _080D3B98 @ =0x80808080
	b _080D3BA4
	.align 2, 0
_080D3B94: .4byte 0xFEFEFEFF
_080D3B98: .4byte 0x80808080
_080D3B9C:
	adds r2, #4
	ldr r1, [r2]
	adds r0, r1, r4
	bics r0, r1
_080D3BA4:
	ands r0, r3
	cmp r0, #0
	beq _080D3B9C
	adds r1, r2, #0
	b _080D3BB0
_080D3BAE:
	adds r1, #1
_080D3BB0:
	ldrb r0, [r1]
	cmp r0, #0
	bne _080D3BAE
	subs r0, r1, r5
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80D3BC0
sub_80D3BC0: @ 0x080D3BC0
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r5, _080D3BD0 @ =gUnknown_03000CD4
_080D3BC6:
	ldr r0, [r5]
	cmp r0, #0
	bne _080D3BD4
_080D3BCC:
	b _080D3BCC
	.align 2, 0
_080D3BD0: .4byte gUnknown_03000CD4
_080D3BD4:
	bl sub_80D390C
	adds r0, r4, #0
	bl sub_80D01F8
	cmp r0, #0
	beq _080D3BC6
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_80D3BE8
sub_80D3BE8: @ 0x080D3BE8
	push {r4, lr}
	sub sp, #0xc
	adds r4, r0, #0
	movs r0, #4
	bl sub_80005D4
	bl sub_8004C48
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #4]
	str r0, [sp, #8]
	adds r2, r1, #0
	movs r1, #0
	str r1, [r2]
	str r0, [r4]
	ldr r1, [sp]
	cmp r1, #0
	beq _080D3C1A
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D3C1A:
	adds r0, r4, #0
	add sp, #0xc
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_80D3C24
sub_80D3C24: @ 0x080D3C24
	push {r4, lr}
	sub sp, #0xc
	adds r4, r0, #0
	movs r0, #8
	bl sub_80005D4
	bl sub_8004B58
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #4]
	str r0, [sp, #8]
	adds r2, r1, #0
	movs r1, #0
	str r1, [r2]
	str r0, [r4]
	ldr r1, [sp]
	cmp r1, #0
	beq _080D3C56
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D3C56:
	adds r0, r4, #0
	add sp, #0xc
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_80D3C60
sub_80D3C60: @ 0x080D3C60
	push {lr}
	bl sub_800080C
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D3C6C
sub_80D3C6C: @ 0x080D3C6C
	push {lr}
	bl sub_800080C
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D3C78
sub_80D3C78: @ 0x080D3C78
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	ldr r0, _080D3E70 @ =0x00006D20
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	ldr r1, _080D3E74 @ =0x00006D18
	adds r4, r5, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	ldr r2, _080D3E78 @ =0x00006D10
	adds r4, r5, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	ldr r0, _080D3E7C @ =0x00006D08
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r1, #0xda
	lsls r1, r1, #7
	adds r4, r5, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	ldr r2, _080D3E80 @ =0x00006CF8
	adds r4, r5, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	ldr r0, _080D3E84 @ =0x00006CF0
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	ldr r1, _080D3E88 @ =0x00006CE8
	adds r4, r5, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	ldr r2, _080D3E8C @ =0x00006CE0
	adds r4, r5, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	ldr r0, _080D3E90 @ =0x00006CD8
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	ldr r1, _080D3E94 @ =0x00006CD0
	adds r4, r5, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	ldr r2, _080D3E98 @ =0x00006CC8
	adds r4, r5, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	ldr r0, _080D3E9C @ =0x00006CC0
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	ldr r1, _080D3EA0 @ =0x00006CB8
	adds r4, r5, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	ldr r2, _080D3EA4 @ =0x00006CB0
	adds r4, r5, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	ldr r0, _080D3EA8 @ =0x00006CA8
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	ldr r1, _080D3EAC @ =0x00006CA0
	adds r4, r5, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	ldr r2, _080D3EB0 @ =0x00006C98
	adds r4, r5, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	ldr r0, _080D3EB4 @ =0x00006C90
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	ldr r1, _080D3EB8 @ =0x00006C88
	adds r4, r5, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r2, #0xd9
	lsls r2, r2, #7
	adds r4, r5, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	ldr r0, _080D3EBC @ =0x00006C78
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	ldr r1, _080D3EC0 @ =0x00006C74
	adds r0, r5, r1
	movs r1, #2
	bl sub_8007184
	ldr r2, _080D3EC4 @ =0x00006C70
	adds r0, r5, r2
	movs r1, #2
	bl sub_80079E8
	ldr r1, _080D3EC8 @ =0x00006A70
	adds r0, r5, r1
	ldr r1, _080D3ECC @ =gUnknown_080E5A28
	str r1, [r0]
	ldr r2, _080D3ED0 @ =0x00006A40
	adds r0, r5, r2
	str r1, [r0]
	subs r2, #0x30
	adds r0, r5, r2
	str r1, [r0]
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_80086BC
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080D3E70: .4byte 0x00006D20
_080D3E74: .4byte 0x00006D18
_080D3E78: .4byte 0x00006D10
_080D3E7C: .4byte 0x00006D08
_080D3E80: .4byte 0x00006CF8
_080D3E84: .4byte 0x00006CF0
_080D3E88: .4byte 0x00006CE8
_080D3E8C: .4byte 0x00006CE0
_080D3E90: .4byte 0x00006CD8
_080D3E94: .4byte 0x00006CD0
_080D3E98: .4byte 0x00006CC8
_080D3E9C: .4byte 0x00006CC0
_080D3EA0: .4byte 0x00006CB8
_080D3EA4: .4byte 0x00006CB0
_080D3EA8: .4byte 0x00006CA8
_080D3EAC: .4byte 0x00006CA0
_080D3EB0: .4byte 0x00006C98
_080D3EB4: .4byte 0x00006C90
_080D3EB8: .4byte 0x00006C88
_080D3EBC: .4byte 0x00006C78
_080D3EC0: .4byte 0x00006C74
_080D3EC4: .4byte 0x00006C70
_080D3EC8: .4byte 0x00006A70
_080D3ECC: .4byte gUnknown_080E5A28
_080D3ED0: .4byte 0x00006A40

	thumb_func_start sub_80D3ED4
sub_80D3ED4: @ 0x080D3ED4
	push {lr}
	adds r2, r0, #0
	ldr r0, _080D3EF0 @ =gUnknown_080E5A28
	str r0, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080D3EEA
	adds r0, r2, #0
	bl sub_8000608
_080D3EEA:
	pop {r0}
	bx r0
	.align 2, 0
_080D3EF0: .4byte gUnknown_080E5A28

	thumb_func_start sub_80D3EF4
sub_80D3EF4: @ 0x080D3EF4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	mov sb, r0
	adds r5, r1, #0
	str r0, [sp, #0x10]
	mov sl, sp
	ldr r0, _080D3FEC @ =0x00000554
	bl sub_80005D4
	ldr r1, [r5, #4]
	movs r4, #0
	str r4, [r5, #4]
	adds r6, r0, #0
	ldr r0, _080D3FF0 @ =gUnknown_080E5BF8
	str r0, [r6]
	str r4, [sp, #4]
	str r1, [r6, #4]
	adds r0, r6, #0
	adds r0, #8
	bl sub_803F804
	movs r1, #0xd9
	lsls r1, r1, #2
	adds r0, r6, r1
	strb r4, [r0]
	movs r0, #0xdb
	lsls r0, r0, #2
	adds r1, r6, r0
	strb r4, [r1]
	movs r0, #0x1d
	str r0, [r1, #4]
	movs r1, #0xdd
	lsls r1, r1, #2
	adds r2, r6, r1
	ldrb r1, [r2]
	subs r0, #0x3d
	ands r0, r1
	movs r1, #6
	orrs r0, r1
	strb r0, [r2]
	ldrh r1, [r2]
	ldr r0, _080D3FF4 @ =0xFFFFF81F
	ands r0, r1
	strh r0, [r2]
	movs r1, #0xde
	lsls r1, r1, #2
	adds r0, r6, r1
	str r4, [r0]
	adds r1, #0x14
	adds r0, r6, r1
	str r4, [r0]
	movs r1, #0x9a
	lsls r1, r1, #3
	adds r0, r6, r1
	str r4, [r0]
	ldr r0, _080D3FF8 @ =0x000004DC
	adds r4, r6, r0
	movs r5, #5
	add r1, sp, #8
	mov r8, r1
	movs r7, #1
	rsbs r7, r7, #0
_080D3F78:
	adds r0, r4, #0
	bl sub_80D4130
	adds r4, #0xc
	subs r5, #1
	cmp r5, r7
	bne _080D3F78
	ldr r0, _080D3FFC @ =0x00000524
	adds r4, r6, r0
	movs r5, #3
	movs r7, #1
	rsbs r7, r7, #0
_080D3F90:
	adds r0, r4, #0
	bl sub_80D40CC
	adds r4, #0xc
	subs r5, #1
	cmp r5, r7
	bne _080D3F90
	ldr r0, _080D4000 @ =gUnknown_0300040C
	str r6, [r0]
	ldr r0, [sp, #4]
	cmp r0, #0
	beq _080D3FAE
	movs r1, #3
	bl sub_80D4480
_080D3FAE:
	mov r1, sl
	str r6, [r1]
	ldr r2, [sp]
	mov r0, sp
	str r0, [sp, #8]
	mov r1, r8
	str r2, [r1, #4]
	ldr r1, [sp, #8]
	movs r0, #0
	str r0, [r1]
	ldr r0, [sp, #0x10]
	str r2, [r0]
	ldr r1, [sp]
	cmp r1, #0
	beq _080D3FD8
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D3FD8:
	mov r0, sb
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080D3FEC: .4byte 0x00000554
_080D3FF0: .4byte gUnknown_080E5BF8
_080D3FF4: .4byte 0xFFFFF81F
_080D3FF8: .4byte 0x000004DC
_080D3FFC: .4byte 0x00000524
_080D4000: .4byte gUnknown_0300040C

	thumb_func_start sub_80D4004
sub_80D4004: @ 0x080D4004
	push {r4, lr}
	sub sp, #0xc
	adds r4, r0, #0
	movs r0, #8
	bl sub_80005D4
	bl sub_80036F8
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #4]
	str r0, [sp, #8]
	adds r2, r1, #0
	movs r1, #0
	str r1, [r2]
	str r0, [r4]
	ldr r1, [sp]
	cmp r1, #0
	beq _080D4036
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D4036:
	adds r0, r4, #0
	add sp, #0xc
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_80D4040
sub_80D4040: @ 0x080D4040
	push {lr}
	bl sub_800080C
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D404C
sub_80D404C: @ 0x080D404C
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, [r4, #4]
	cmp r0, #0
	beq _080D405E
	movs r1, #3
	bl sub_80D4480
_080D405E:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80D406C
sub_80D406C: @ 0x080D406C
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r4, r5, #0
	adds r4, #0x54
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	ldr r0, _080D40C8 @ =gUnknown_080E5A28
	str r0, [r5, #0x1c]
	adds r0, r5, #0
	adds r0, #0x10
	movs r1, #2
	bl sub_8050D0C
	ldr r1, [r5, #0xc]
	cmp r1, #0
	beq _080D40B8
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D40B8:
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_80086BC
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080D40C8: .4byte gUnknown_080E5A28

	thumb_func_start sub_80D40CC
sub_80D40CC: @ 0x080D40CC
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #8
	adds r5, r0, #0
	mov r2, sp
	movs r4, #0x8d
	lsls r4, r4, #2
	movs r6, #0
	ldrh r1, [r2]
	ldr r3, _080D412C @ =0xFFFFFC00
	adds r0, r3, #0
	ands r0, r1
	orrs r0, r4
	strh r0, [r2]
	movs r0, #0
	mov r8, r0
	ldrb r4, [r2, #1]
	movs r1, #3
	adds r0, r1, #0
	ands r0, r4
	strb r0, [r2, #1]
	ldrh r4, [r2, #2]
	adds r0, r3, #0
	ands r0, r4
	strh r0, [r2, #2]
	ldrb r0, [r2, #3]
	ands r1, r0
	strb r1, [r2, #3]
	ldrh r0, [r2, #4]
	ands r3, r0
	strh r3, [r2, #4]
	adds r0, r5, #0
	mov r1, sp
	movs r2, #6
	bl sub_80D3994
	mov r0, r8
	strb r0, [r5, #6]
	strh r6, [r5, #8]
	strh r6, [r5, #0xa]
	adds r0, r5, #0
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080D412C: .4byte 0xFFFFFC00

	thumb_func_start sub_80D4130
sub_80D4130: @ 0x080D4130
	push {r4, r5, lr}
	ldrb r2, [r0]
	movs r1, #4
	rsbs r1, r1, #0
	ands r1, r2
	strb r1, [r0]
	adds r4, r0, #2
	movs r5, #0x8d
	lsls r5, r5, #2
	ldrh r2, [r0, #2]
	ldr r3, _080D4174 @ =0xFFFFFC00
	adds r1, r3, #0
	ands r1, r2
	orrs r1, r5
	strh r1, [r0, #2]
	ldrb r5, [r4, #1]
	movs r2, #3
	adds r1, r2, #0
	ands r1, r5
	strb r1, [r4, #1]
	ldrh r5, [r4, #2]
	adds r1, r3, #0
	ands r1, r5
	strh r1, [r4, #2]
	ldrb r1, [r4, #3]
	ands r2, r1
	strb r2, [r4, #3]
	ldrh r1, [r4, #4]
	ands r3, r1
	strh r3, [r4, #4]
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080D4174: .4byte 0xFFFFFC00

	thumb_func_start sub_80D4178
sub_80D4178: @ 0x080D4178
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r5, r0, #0
	adds r6, r1, #0
	ldrb r3, [r6]
	lsls r1, r3, #0x1f
	lsrs r1, r1, #0x1f
	ldrb r2, [r5]
	movs r4, #2
	rsbs r4, r4, #0
	adds r0, r4, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #2
	ands r1, r3
	movs r2, #3
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #4
	ands r1, r3
	subs r2, #2
	ands r0, r2
	orrs r0, r1
	movs r1, #8
	ands r1, r3
	subs r2, #4
	ands r0, r2
	orrs r0, r1
	movs r1, #0x10
	ands r1, r3
	subs r2, #8
	ands r0, r2
	orrs r0, r1
	strb r0, [r5]
	ldrh r0, [r6]
	movs r1, #0xff
	lsls r1, r1, #5
	ands r1, r0
	ldrh r2, [r5]
	ldr r0, _080D441C @ =0xFFFFE01F
	ands r0, r2
	orrs r0, r1
	strh r0, [r5]
	ldr r2, [r6]
	movs r0, #0xf8
	lsls r0, r0, #0xa
	ands r2, r0
	ldr r0, [r5]
	ldr r1, _080D4420 @ =0xFFFC1FFF
	ands r0, r1
	orrs r0, r2
	str r0, [r5]
	ldrh r0, [r6, #2]
	movs r1, #0xfe
	lsls r1, r1, #1
	ands r1, r0
	ldrh r2, [r5, #2]
	ldr r0, _080D4424 @ =0xFFFFFE03
	ands r0, r2
	orrs r0, r1
	strh r0, [r5, #2]
	ldrb r2, [r6, #3]
	movs r1, #0x7e
	ands r1, r2
	ldrb r3, [r5, #3]
	movs r0, #0x7f
	rsbs r0, r0, #0
	ands r0, r3
	orrs r0, r1
	lsrs r2, r2, #7
	lsls r2, r2, #7
	movs r1, #0x7f
	ands r0, r1
	orrs r0, r2
	strb r0, [r5, #3]
	ldrb r0, [r6, #4]
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1f
	ldrb r1, [r5, #4]
	ands r4, r1
	orrs r4, r0
	strb r4, [r5, #4]
	adds r1, r5, #0
	adds r1, #8
	adds r0, r6, #0
	adds r0, #8
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	adds r0, r5, #0
	adds r0, #0x14
	adds r1, r6, #0
	adds r1, #0x14
	bl sub_80D64C8
	ldr r1, _080D4428 @ =0x00001AA8
	adds r0, r5, r1
	adds r1, r6, r1
	bl sub_80D6B40
	ldr r1, _080D442C @ =0x00001BD8
	adds r0, r5, r1
	adds r1, r6, r1
	bl sub_80D68C0
	ldr r1, _080D4430 @ =0x00001C70
	adds r0, r5, r1
	adds r1, r6, r1
	bl sub_80D67C8
	movs r0, #0xe5
	lsls r0, r0, #5
	adds r1, r5, r0
	adds r0, r0, r6
	mov ip, r0
	movs r0, #0
	str r0, [r1]
	mov r0, ip
	ldr r7, [r0]
	ldr r2, _080D4434 @ =0x00001CA4
	adds r0, r6, r2
	adds r4, r0, r7
	adds r2, r0, #0
	ldr r0, _080D4434 @ =0x00001CA4
	adds r3, r5, r0
	cmp r2, r4
	beq _080D428E
_080D427E:
	cmp r3, #0
	beq _080D4286
	ldrb r0, [r2]
	strb r0, [r3]
_080D4286:
	adds r2, #1
	adds r3, #1
	cmp r2, r4
	bne _080D427E
_080D428E:
	str r7, [r1]
	adds r0, r1, #0
	adds r0, #0x24
	mov r1, ip
	adds r1, #0x24
	movs r2, #6
	bl sub_80D3994
	ldr r1, _080D4438 @ =0x00001CCC
	adds r0, r5, r1
	adds r1, r6, r1
	movs r2, #6
	bl sub_80D3994
	ldr r1, _080D443C @ =0x00001CD4
	adds r0, r5, r1
	adds r1, r6, r1
	bl sub_80D60B0
	ldr r1, _080D4440 @ =0x0000214C
	adds r0, r5, r1
	adds r1, r6, r1
	bl sub_80D44D4
	ldr r0, _080D4444 @ =0x000021CC
	adds r4, r5, r0
	adds r0, r0, r6
	mov ip, r0
	ldr r0, [r0]
	str r0, [r4]
	mov r1, ip
	ldr r0, [r1, #4]
	str r0, [r4, #4]
	ldr r3, _080D4448 @ =0x000021D4
	adds r2, r5, r3
	movs r3, #7
	ldr r0, _080D4448 @ =0x000021D4
	adds r1, r6, r0
	movs r7, #1
	rsbs r7, r7, #0
_080D42DE:
	ldrb r0, [r1]
	strb r0, [r2]
	adds r2, #1
	adds r1, #1
	subs r3, #1
	cmp r3, r7
	bne _080D42DE
	adds r3, r4, #0
	adds r3, #0x10
	movs r1, #3
	mov r2, ip
	adds r2, #0x10
	adds r7, r4, #0
	adds r7, #0x14
	movs r0, #0x14
	add r0, ip
	mov r8, r0
	movs r0, #0x24
	adds r0, r0, r4
	mov sb, r0
	movs r0, #0x24
	add r0, ip
	mov sl, r0
	adds r4, #0x34
	str r4, [sp]
	mov r4, ip
	adds r4, #0x34
	str r4, [sp, #4]
	movs r4, #1
	rsbs r4, r4, #0
_080D431A:
	ldrb r0, [r2]
	strb r0, [r3]
	adds r3, #1
	adds r2, #1
	subs r1, #1
	cmp r1, r4
	bne _080D431A
	adds r0, r7, #0
	mov r1, r8
	bl sub_80D3B28
	mov r0, sb
	mov r1, sl
	bl sub_80D3B28
	ldr r0, [sp]
	ldr r1, [sp, #4]
	bl sub_80D3B28
	ldr r0, _080D444C @ =0x00002210
	adds r1, r5, r0
	adds r0, r6, r0
	ldr r0, [r0]
	str r0, [r1]
	ldr r1, _080D4450 @ =0x00002214
	adds r0, r5, r1
	adds r1, r6, r1
	ldr r2, _080D4454 @ =0x00000A08
	bl sub_80D3994
	ldr r1, _080D4458 @ =0x00002C1C
	adds r0, r5, r1
	adds r1, r6, r1
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r0, _080D445C @ =0x00002C4C
	adds r1, r5, r0
	adds r0, r6, r0
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldr r0, [r0]
	str r0, [r1]
	ldr r0, _080D4460 @ =0x00002C74
	adds r1, r5, r0
	adds r0, r6, r0
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	movs r1, #0xb2
	lsls r1, r1, #6
	adds r0, r5, r1
	adds r1, r6, r1
	movs r2, #0xec
	lsls r2, r2, #1
	bl sub_80D3994
	ldr r1, _080D4464 @ =0x00002E58
	adds r0, r5, r1
	adds r1, r6, r1
	movs r2, #0xc5
	lsls r2, r2, #3
	bl sub_80D3994
	movs r0, #0xd2
	lsls r0, r0, #6
	adds r1, r5, r0
	adds r0, r6, r0
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r1, _080D4468 @ =0x00003494
	adds r0, r5, r1
	adds r1, r6, r1
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r0, _080D446C @ =0x000034C4
	adds r1, r6, r0
	ldrb r1, [r1]
	adds r0, r5, r0
	strb r1, [r0]
	ldr r0, _080D4470 @ =0x000034C5
	adds r1, r6, r0
	ldrb r1, [r1]
	adds r0, r5, r0
	strb r1, [r0]
	ldr r0, _080D4474 @ =0x000034C8
	adds r1, r5, r0
	adds r0, r6, r0
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldr r0, [r0]
	str r0, [r1]
	ldr r0, _080D4478 @ =0x000034D8
	adds r1, r5, r0
	adds r0, r6, r0
	ldr r0, [r0]
	str r0, [r1]
	ldr r1, _080D447C @ =0x000034DC
	adds r0, r5, r1
	adds r1, r6, r1
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	adds r0, r5, #0
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080D441C: .4byte 0xFFFFE01F
_080D4420: .4byte 0xFFFC1FFF
_080D4424: .4byte 0xFFFFFE03
_080D4428: .4byte 0x00001AA8
_080D442C: .4byte 0x00001BD8
_080D4430: .4byte 0x00001C70
_080D4434: .4byte 0x00001CA4
_080D4438: .4byte 0x00001CCC
_080D443C: .4byte 0x00001CD4
_080D4440: .4byte 0x0000214C
_080D4444: .4byte 0x000021CC
_080D4448: .4byte 0x000021D4
_080D444C: .4byte 0x00002210
_080D4450: .4byte 0x00002214
_080D4454: .4byte 0x00000A08
_080D4458: .4byte 0x00002C1C
_080D445C: .4byte 0x00002C4C
_080D4460: .4byte 0x00002C74
_080D4464: .4byte 0x00002E58
_080D4468: .4byte 0x00003494
_080D446C: .4byte 0x000034C4
_080D4470: .4byte 0x000034C5
_080D4474: .4byte 0x000034C8
_080D4478: .4byte 0x000034D8
_080D447C: .4byte 0x000034DC

	thumb_func_start sub_80D4480
sub_80D4480: @ 0x080D4480
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	movs r0, #0xe5
	lsls r0, r0, #5
	adds r1, r4, r0
	ldr r0, [r1]
	adds r0, #4
	adds r1, r1, r0
	ldr r2, _080D44C8 @ =0x00001CA4
	adds r0, r4, r2
	cmp r0, r1
	beq _080D44A0
_080D449A:
	adds r0, #1
	cmp r0, r1
	bne _080D449A
_080D44A0:
	ldr r1, _080D44CC @ =0x00001C38
	adds r0, r4, r1
	movs r1, #2
	bl sub_80D6B00
	ldr r2, _080D44D0 @ =0x00001AA8
	adds r0, r4, r2
	movs r1, #2
	bl sub_80D6C08
	movs r0, #1
	ands r0, r5
	cmp r0, #0
	beq _080D44C2
	adds r0, r4, #0
	bl sub_8000608
_080D44C2:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080D44C8: .4byte 0x00001CA4
_080D44CC: .4byte 0x00001C38
_080D44D0: .4byte 0x00001AA8

	thumb_func_start sub_80D44D4
sub_80D44D4: @ 0x080D44D4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	adds r7, r0, #0
	mov sl, r1
	movs r0, #0
	adds r3, r7, #0
	stm r3!, {r0}
	ldm r1!, {r4}
	lsls r0, r4, #1
	adds r0, r0, r1
	cmp r0, r1
	beq _080D44FC
	subs r2, r0, r1
	adds r0, r3, #0
	bl sub_80D39F8
_080D44FC:
	str r4, [r7]
	mov r1, sl
	ldrh r0, [r1, #0xc]
	strh r0, [r7, #0xc]
	ldrb r2, [r1, #0xe]
	lsls r1, r2, #0x1f
	lsrs r1, r1, #0x1f
	ldrb r3, [r7, #0xe]
	movs r4, #2
	rsbs r4, r4, #0
	mov ip, r4
	mov r0, ip
	ands r0, r3
	orrs r0, r1
	movs r1, #6
	ands r1, r2
	subs r4, #5
	ands r0, r4
	orrs r0, r1
	movs r1, #8
	ands r1, r2
	movs r5, #9
	rsbs r5, r5, #0
	ands r0, r5
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	movs r6, #0x31
	rsbs r6, r6, #0
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	movs r1, #0x3f
	ands r0, r1
	orrs r0, r2
	strb r0, [r7, #0xe]
	mov r3, sl
	ldrb r2, [r3, #0xf]
	lsls r1, r2, #0x1f
	lsrs r1, r1, #0x1f
	ldrb r3, [r7, #0xf]
	mov r0, ip
	ands r0, r3
	orrs r1, r0
	movs r0, #2
	ands r0, r2
	adds r6, #0x2e
	ands r1, r6
	orrs r1, r0
	movs r0, #4
	ands r0, r2
	movs r3, #5
	rsbs r3, r3, #0
	ands r1, r3
	orrs r1, r0
	movs r0, #0x18
	ands r0, r2
	subs r6, #0x16
	mov r8, r6
	ands r1, r6
	orrs r1, r0
	movs r0, #0x20
	ands r0, r2
	subs r3, #0x1c
	ands r1, r3
	orrs r1, r0
	lsrs r2, r2, #6
	lsls r2, r2, #6
	movs r6, #0x3f
	ands r1, r6
	orrs r1, r2
	strb r1, [r7, #0xf]
	mov r0, sl
	ldrb r2, [r0, #0x10]
	lsls r1, r2, #0x1f
	lsrs r1, r1, #0x1f
	ldrb r3, [r7, #0x10]
	mov r0, ip
	ands r0, r3
	orrs r1, r0
	movs r0, #6
	ands r0, r2
	ands r1, r4
	orrs r1, r0
	movs r0, #8
	ands r0, r2
	ands r1, r5
	orrs r1, r0
	movs r0, #0x10
	ands r0, r2
	movs r3, #0x11
	rsbs r3, r3, #0
	ands r1, r3
	orrs r1, r0
	movs r0, #0x20
	ands r0, r2
	subs r6, #0x60
	ands r1, r6
	orrs r1, r0
	movs r0, #0x40
	ands r0, r2
	subs r3, #0x30
	ands r1, r3
	orrs r1, r0
	lsrs r2, r2, #7
	lsls r2, r2, #7
	movs r6, #0x7f
	ands r1, r6
	orrs r1, r2
	strb r1, [r7, #0x10]
	mov r0, sl
	ldrb r3, [r0, #0x11]
	lsls r1, r3, #0x1f
	lsrs r1, r1, #0x1f
	ldrb r2, [r7, #0x11]
	mov r0, ip
	ands r0, r2
	orrs r1, r0
	movs r0, #2
	ands r0, r3
	movs r2, #3
	rsbs r2, r2, #0
	ands r1, r2
	orrs r1, r0
	movs r0, #4
	ands r0, r3
	subs r6, #0x84
	ands r1, r6
	orrs r1, r0
	movs r0, #8
	ands r0, r3
	ands r1, r5
	orrs r1, r0
	movs r0, #0x10
	ands r0, r3
	subs r2, #0xe
	ands r1, r2
	orrs r1, r0
	movs r0, #0x60
	ands r0, r3
	movs r3, #0x61
	rsbs r3, r3, #0
	ands r1, r3
	orrs r1, r0
	strb r1, [r7, #0x11]
	mov r5, sl
	ldr r1, [r5, #0x10]
	movs r0, #0xc0
	lsls r0, r0, #9
	ands r1, r0
	ldr r0, [r7, #0x10]
	ldr r6, _080D4A18 @ =0xFFFE7FFF
	ands r0, r6
	orrs r0, r1
	str r0, [r7, #0x10]
	ldrb r3, [r5, #0x12]
	movs r1, #6
	ands r1, r3
	ldrb r2, [r7, #0x12]
	adds r0, r4, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x18
	ands r1, r3
	mov r2, r8
	ands r0, r2
	orrs r0, r1
	movs r1, #0x60
	ands r1, r3
	movs r3, #0x61
	rsbs r3, r3, #0
	ands r0, r3
	orrs r0, r1
	strb r0, [r7, #0x12]
	ldrh r0, [r5, #0x12]
	movs r1, #0xc0
	lsls r1, r1, #1
	ands r1, r0
	ldrh r2, [r7, #0x12]
	ldr r0, _080D4A1C @ =0xFFFFFE7F
	ands r0, r2
	orrs r0, r1
	strh r0, [r7, #0x12]
	ldrb r3, [r5, #0x13]
	movs r1, #6
	ands r1, r3
	ldrb r2, [r7, #0x13]
	adds r0, r4, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x18
	ands r1, r3
	mov r5, r8
	ands r0, r5
	orrs r0, r1
	movs r1, #0x60
	ands r1, r3
	movs r6, #0x61
	rsbs r6, r6, #0
	ands r0, r6
	orrs r0, r1
	lsrs r3, r3, #7
	mov r1, sl
	ldrb r2, [r1, #0x14]
	movs r5, #1
	ands r2, r5
	lsls r2, r2, #1
	orrs r2, r3
	adds r1, r2, #0
	ands r1, r5
	lsls r1, r1, #7
	movs r6, #0x7f
	ands r0, r6
	orrs r0, r1
	strb r0, [r7, #0x13]
	lsrs r2, r2, #1
	ands r2, r5
	ldrb r1, [r7, #0x14]
	mov r0, ip
	ands r0, r1
	orrs r0, r2
	mov r1, sl
	ldrb r2, [r1, #0x14]
	movs r1, #6
	ands r1, r2
	ands r0, r4
	orrs r0, r1
	movs r1, #0x18
	ands r1, r2
	mov r3, r8
	ands r0, r3
	orrs r0, r1
	movs r1, #0x60
	ands r1, r2
	subs r5, #0x62
	ands r0, r5
	orrs r0, r1
	strb r0, [r7, #0x14]
	mov r6, sl
	ldrh r0, [r6, #0x14]
	movs r1, #0xc0
	lsls r1, r1, #1
	ands r1, r0
	ldrh r2, [r7, #0x14]
	ldr r0, _080D4A1C @ =0xFFFFFE7F
	ands r0, r2
	orrs r0, r1
	strh r0, [r7, #0x14]
	ldrb r3, [r6, #0x15]
	movs r1, #6
	ands r1, r3
	ldrb r2, [r7, #0x15]
	adds r0, r4, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x18
	ands r1, r3
	mov r2, r8
	ands r0, r2
	orrs r0, r1
	movs r1, #0x60
	ands r1, r3
	ands r0, r5
	orrs r0, r1
	strb r0, [r7, #0x15]
	ldr r1, [r6, #0x14]
	movs r0, #0xc0
	lsls r0, r0, #9
	ands r1, r0
	ldr r0, [r7, #0x14]
	ldr r3, _080D4A18 @ =0xFFFE7FFF
	ands r0, r3
	orrs r0, r1
	str r0, [r7, #0x14]
	ldrb r3, [r6, #0x16]
	movs r1, #6
	ands r1, r3
	ldrb r2, [r7, #0x16]
	adds r0, r4, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x18
	ands r1, r3
	mov r5, r8
	ands r0, r5
	orrs r0, r1
	movs r1, #0x60
	ands r1, r3
	movs r6, #0x61
	rsbs r6, r6, #0
	ands r0, r6
	orrs r0, r1
	strb r0, [r7, #0x16]
	mov r1, sl
	ldrh r0, [r1, #0x16]
	movs r1, #0xc0
	lsls r1, r1, #1
	ands r1, r0
	ldrh r2, [r7, #0x16]
	ldr r0, _080D4A1C @ =0xFFFFFE7F
	ands r0, r2
	orrs r0, r1
	strh r0, [r7, #0x16]
	mov r2, sl
	ldrb r3, [r2, #0x17]
	movs r1, #6
	ands r1, r3
	ldrb r2, [r7, #0x17]
	adds r0, r4, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x18
	ands r1, r3
	ands r0, r5
	orrs r0, r1
	movs r1, #0x60
	ands r1, r3
	ands r0, r6
	orrs r0, r1
	lsrs r3, r3, #7
	mov r5, sl
	ldrb r1, [r5, #0x18]
	movs r6, #1
	ands r1, r6
	lsls r1, r1, #1
	orrs r1, r3
	adds r2, r1, #0
	ands r2, r6
	lsls r2, r2, #7
	movs r3, #0x7f
	ands r0, r3
	orrs r0, r2
	strb r0, [r7, #0x17]
	lsrs r1, r1, #1
	ands r1, r6
	ldrb r2, [r7, #0x18]
	mov r0, ip
	ands r0, r2
	orrs r1, r0
	ldrb r2, [r5, #0x18]
	movs r0, #6
	ands r0, r2
	ands r1, r4
	orrs r1, r0
	movs r0, #0x18
	ands r0, r2
	mov r5, r8
	ands r1, r5
	orrs r1, r0
	movs r0, #0x60
	ands r0, r2
	subs r6, #0x62
	ands r1, r6
	orrs r1, r0
	strb r1, [r7, #0x18]
	mov r1, sl
	ldrh r0, [r1, #0x18]
	movs r1, #0xc0
	lsls r1, r1, #1
	ands r1, r0
	ldrh r2, [r7, #0x18]
	ldr r0, _080D4A1C @ =0xFFFFFE7F
	ands r0, r2
	orrs r0, r1
	strh r0, [r7, #0x18]
	mov r2, sl
	ldrb r3, [r2, #0x19]
	movs r1, #6
	ands r1, r3
	ldrb r2, [r7, #0x19]
	adds r0, r4, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x18
	ands r1, r3
	ands r0, r5
	orrs r0, r1
	movs r1, #0x60
	ands r1, r3
	ands r0, r6
	orrs r0, r1
	strb r0, [r7, #0x19]
	mov r3, sl
	ldr r1, [r3, #0x18]
	movs r0, #0xc0
	lsls r0, r0, #9
	ands r1, r0
	ldr r0, [r7, #0x18]
	ldr r5, _080D4A18 @ =0xFFFE7FFF
	ands r0, r5
	orrs r0, r1
	str r0, [r7, #0x18]
	ldrb r3, [r3, #0x1a]
	movs r1, #6
	ands r1, r3
	ldrb r2, [r7, #0x1a]
	adds r0, r4, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x18
	ands r1, r3
	mov r6, r8
	ands r0, r6
	orrs r0, r1
	movs r1, #0x60
	ands r1, r3
	movs r2, #0x61
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r7, #0x1a]
	mov r3, sl
	ldrh r0, [r3, #0x1a]
	movs r1, #0xc0
	lsls r1, r1, #1
	ands r1, r0
	ldrh r2, [r7, #0x1a]
	ldr r0, _080D4A1C @ =0xFFFFFE7F
	ands r0, r2
	orrs r0, r1
	strh r0, [r7, #0x1a]
	ldrb r3, [r3, #0x1b]
	movs r1, #6
	ands r1, r3
	ldrb r2, [r7, #0x1b]
	adds r0, r4, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x18
	ands r1, r3
	ands r0, r6
	orrs r0, r1
	movs r1, #0x60
	ands r1, r3
	movs r5, #0x61
	rsbs r5, r5, #0
	ands r0, r5
	orrs r0, r1
	lsrs r3, r3, #7
	mov r6, sl
	ldrb r1, [r6, #0x1c]
	movs r2, #1
	ands r1, r2
	lsls r1, r1, #1
	orrs r1, r3
	adds r2, r1, #0
	movs r3, #1
	ands r2, r3
	lsls r2, r2, #7
	movs r5, #0x7f
	ands r0, r5
	orrs r0, r2
	strb r0, [r7, #0x1b]
	lsrs r1, r1, #1
	ands r1, r3
	ldrb r2, [r7, #0x1c]
	mov r0, ip
	ands r0, r2
	orrs r1, r0
	ldrb r2, [r6, #0x1c]
	movs r0, #6
	ands r0, r2
	ands r1, r4
	orrs r1, r0
	movs r0, #0x18
	ands r0, r2
	mov r6, r8
	ands r1, r6
	orrs r1, r0
	movs r0, #0x60
	ands r0, r2
	movs r2, #0x61
	rsbs r2, r2, #0
	ands r1, r2
	orrs r1, r0
	strb r1, [r7, #0x1c]
	mov r3, sl
	ldrh r0, [r3, #0x1c]
	movs r1, #0xc0
	lsls r1, r1, #1
	ands r1, r0
	ldrh r2, [r7, #0x1c]
	ldr r0, _080D4A1C @ =0xFFFFFE7F
	ands r0, r2
	orrs r0, r1
	strh r0, [r7, #0x1c]
	ldrb r3, [r3, #0x1d]
	movs r1, #6
	ands r1, r3
	ldrb r2, [r7, #0x1d]
	adds r0, r4, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x18
	ands r1, r3
	ands r0, r6
	orrs r0, r1
	movs r1, #0x60
	ands r1, r3
	subs r5, #0xe0
	ands r0, r5
	orrs r0, r1
	strb r0, [r7, #0x1d]
	mov r6, sl
	ldr r1, [r6, #0x1c]
	movs r0, #0xc0
	lsls r0, r0, #9
	ands r1, r0
	ldr r0, [r7, #0x1c]
	ldr r2, _080D4A18 @ =0xFFFE7FFF
	ands r0, r2
	orrs r0, r1
	str r0, [r7, #0x1c]
	ldrb r3, [r6, #0x1e]
	movs r1, #6
	ands r1, r3
	ldrb r2, [r7, #0x1e]
	adds r0, r4, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x18
	ands r1, r3
	mov r5, r8
	ands r0, r5
	orrs r0, r1
	movs r1, #0x60
	ands r1, r3
	movs r6, #0x61
	rsbs r6, r6, #0
	ands r0, r6
	orrs r0, r1
	strb r0, [r7, #0x1e]
	mov r1, sl
	ldrh r0, [r1, #0x1e]
	movs r1, #0xc0
	lsls r1, r1, #1
	ands r1, r0
	ldrh r2, [r7, #0x1e]
	ldr r0, _080D4A1C @ =0xFFFFFE7F
	ands r0, r2
	orrs r0, r1
	strh r0, [r7, #0x1e]
	mov r2, sl
	ldrb r3, [r2, #0x1f]
	movs r0, #6
	ands r0, r3
	ldrb r2, [r7, #0x1f]
	adds r1, r4, #0
	ands r1, r2
	orrs r1, r0
	movs r0, #0x18
	ands r0, r3
	ands r1, r5
	orrs r1, r0
	movs r0, #0x60
	ands r0, r3
	ands r1, r6
	orrs r1, r0
	lsrs r3, r3, #7
	mov r5, sl
	adds r5, #0x20
	ldrb r0, [r5]
	movs r6, #1
	ands r0, r6
	lsls r0, r0, #1
	orrs r0, r3
	adds r2, r0, #0
	ands r2, r6
	lsls r2, r2, #7
	movs r3, #0x7f
	ands r1, r3
	orrs r1, r2
	strb r1, [r7, #0x1f]
	lsrs r0, r0, #1
	ands r0, r6
	adds r3, r7, #0
	adds r3, #0x20
	ldrb r1, [r3]
	mov r6, ip
	ands r6, r1
	orrs r0, r6
	ldrb r2, [r5]
	movs r1, #6
	ands r1, r2
	ands r0, r4
	orrs r0, r1
	movs r1, #0x18
	ands r1, r2
	mov r5, r8
	ands r0, r5
	orrs r0, r1
	movs r1, #0x60
	ands r1, r2
	movs r6, #0x61
	rsbs r6, r6, #0
	ands r0, r6
	orrs r0, r1
	strb r0, [r3]
	mov r1, sl
	ldrh r0, [r1, #0x20]
	movs r1, #0xc0
	lsls r1, r1, #1
	ands r1, r0
	ldrh r2, [r7, #0x20]
	ldr r0, _080D4A1C @ =0xFFFFFE7F
	ands r0, r2
	orrs r0, r1
	strh r0, [r7, #0x20]
	mov r0, sl
	adds r0, #0x21
	ldrb r3, [r0]
	adds r5, r7, #0
	adds r5, #0x21
	movs r1, #6
	ands r1, r3
	ldrb r2, [r5]
	adds r0, r4, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x18
	ands r1, r3
	mov r2, r8
	ands r0, r2
	orrs r0, r1
	movs r1, #0x60
	ands r1, r3
	ands r0, r6
	orrs r0, r1
	strb r0, [r5]
	mov r3, sl
	ldr r1, [r3, #0x20]
	movs r0, #0xc0
	lsls r0, r0, #9
	ands r1, r0
	ldr r0, [r7, #0x20]
	ldr r5, _080D4A18 @ =0xFFFE7FFF
	ands r0, r5
	orrs r0, r1
	str r0, [r7, #0x20]
	mov r0, sl
	adds r0, #0x22
	ldrb r3, [r0]
	adds r5, r7, #0
	adds r5, #0x22
	movs r1, #6
	ands r1, r3
	ldrb r2, [r5]
	adds r0, r4, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x18
	b _080D4A20
	.align 2, 0
_080D4A18: .4byte 0xFFFE7FFF
_080D4A1C: .4byte 0xFFFFFE7F
_080D4A20:
	ands r1, r3
	mov r6, r8
	ands r0, r6
	orrs r0, r1
	movs r1, #0x20
	ands r1, r3
	movs r2, #0x21
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x40
	ands r1, r3
	movs r3, #0x41
	rsbs r3, r3, #0
	ands r0, r3
	orrs r0, r1
	strb r0, [r5]
	mov r0, sl
	adds r0, #0x23
	ldrb r0, [r0]
	lsrs r0, r0, #4
	mov r5, sl
	adds r5, #0x24
	str r5, [sp, #0x14]
	ldrb r1, [r5]
	movs r5, #7
	ands r1, r5
	lsls r1, r1, #4
	orrs r1, r0
	movs r0, #0xf
	adds r2, r1, #0
	ands r2, r0
	movs r6, #0x23
	lsls r2, r2, #4
	ldrb r3, [r6, r7]
	ands r0, r3
	orrs r0, r2
	strb r0, [r6, r7]
	lsrs r1, r1, #4
	adds r3, r7, #0
	adds r3, #0x24
	ands r1, r5
	ldrb r2, [r3]
	movs r0, #8
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	ldr r5, [sp, #0x14]
	ldrb r2, [r5]
	movs r1, #0x18
	ands r1, r2
	mov r6, r8
	ands r0, r6
	orrs r0, r1
	movs r1, #0x60
	ands r1, r2
	movs r2, #0x61
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r3]
	mov r3, sl
	ldrh r1, [r3, #0x24]
	movs r0, #0xc0
	lsls r0, r0, #1
	ands r0, r1
	ldrh r1, [r7, #0x24]
	ldr r5, _080D4E90 @ =0xFFFFFE7F
	ands r5, r1
	orrs r5, r0
	strh r5, [r7, #0x24]
	mov r0, sl
	adds r0, #0x25
	ldrb r1, [r0]
	adds r3, r7, #0
	adds r3, #0x25
	movs r0, #6
	ands r0, r1
	ldrb r2, [r3]
	ands r4, r2
	orrs r4, r0
	movs r0, #0x18
	ands r0, r1
	ands r4, r6
	orrs r4, r0
	movs r0, #0x60
	ands r0, r1
	movs r2, #0x61
	rsbs r2, r2, #0
	ands r4, r2
	orrs r4, r0
	lsrs r1, r1, #7
	lsls r1, r1, #7
	movs r5, #0x7f
	ands r4, r5
	orrs r4, r1
	strb r4, [r3]
	mov r0, sl
	adds r0, #0x26
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	adds r5, r7, #0
	adds r5, #0x26
	lsrs r1, r1, #0x1e
	ldrb r3, [r5]
	movs r4, #4
	rsbs r4, r4, #0
	adds r0, r4, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	movs r6, #0xd
	rsbs r6, r6, #0
	mov r8, r6
	ands r0, r6
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	movs r3, #0x31
	rsbs r3, r3, #0
	ands r0, r3
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	movs r6, #0x3f
	ands r0, r6
	orrs r0, r2
	strb r0, [r5]
	mov r0, sl
	adds r0, #0x27
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	adds r5, #1
	lsrs r1, r1, #0x1e
	ldrb r3, [r5]
	adds r0, r4, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	mov r3, r8
	ands r0, r3
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	subs r6, #0x70
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	movs r1, #0x3f
	ands r0, r1
	orrs r0, r2
	strb r0, [r5]
	mov r0, sl
	adds r0, #0x28
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	adds r5, #1
	lsrs r1, r1, #0x1e
	ldrb r3, [r5]
	adds r0, r4, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	mov r3, r8
	ands r0, r3
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	movs r6, #0x3f
	ands r0, r6
	orrs r0, r2
	strb r0, [r5]
	mov r0, sl
	adds r0, #0x29
	ldrb r3, [r0]
	lsls r1, r3, #0x1e
	adds r5, #1
	lsrs r1, r1, #0x1e
	ldrb r2, [r5]
	adds r0, r4, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0xc
	ands r1, r3
	mov r2, r8
	ands r0, r2
	orrs r0, r1
	movs r1, #0x10
	ands r1, r3
	movs r2, #0x11
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x20
	ands r1, r3
	subs r6, #0x60
	ands r0, r6
	orrs r0, r1
	movs r1, #0x40
	ands r1, r3
	subs r2, #0x30
	ands r0, r2
	orrs r0, r1
	lsrs r3, r3, #7
	lsls r3, r3, #7
	movs r1, #0x7f
	ands r0, r1
	orrs r0, r3
	strb r0, [r5]
	mov r0, sl
	adds r0, #0x2a
	ldrb r3, [r0]
	lsls r1, r3, #0x1f
	lsrs r1, r1, #0x1f
	adds r5, #1
	ldrb r2, [r5]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r2
	orrs r1, r0
	movs r0, #6
	ands r0, r3
	movs r2, #7
	rsbs r2, r2, #0
	ands r1, r2
	orrs r1, r0
	movs r0, #0x18
	ands r0, r3
	adds r6, #8
	ands r1, r6
	orrs r1, r0
	movs r0, #0x60
	ands r0, r3
	subs r2, #0x5a
	ands r1, r2
	orrs r1, r0
	strb r1, [r5]
	mov r3, sl
	ldrh r0, [r3, #0x2a]
	movs r1, #0xc0
	lsls r1, r1, #1
	ands r1, r0
	ldrh r2, [r7, #0x2a]
	ldr r0, _080D4E90 @ =0xFFFFFE7F
	ands r0, r2
	orrs r0, r1
	strh r0, [r7, #0x2a]
	mov r0, sl
	adds r0, #0x2b
	ldrb r3, [r0]
	adds r5, #1
	movs r1, #6
	ands r1, r3
	ldrb r2, [r5]
	movs r0, #7
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #8
	ands r1, r3
	movs r2, #9
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x30
	ands r1, r3
	subs r6, #0x18
	ands r0, r6
	orrs r0, r1
	lsrs r3, r3, #6
	lsls r3, r3, #6
	movs r1, #0x3f
	ands r0, r1
	orrs r0, r3
	strb r0, [r5]
	mov r0, sl
	adds r0, #0x2c
	ldrb r3, [r0]
	lsls r1, r3, #0x1f
	lsrs r1, r1, #0x1f
	adds r5, #1
	ldrb r2, [r5]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r2
	orrs r1, r0
	movs r0, #6
	ands r0, r3
	movs r2, #7
	rsbs r2, r2, #0
	ands r1, r2
	orrs r1, r0
	movs r0, #0x38
	ands r0, r3
	subs r2, #0x32
	ands r1, r2
	orrs r1, r0
	lsrs r3, r3, #6
	lsls r3, r3, #6
	movs r6, #0x3f
	ands r1, r6
	orrs r1, r3
	strb r1, [r5]
	mov r0, sl
	adds r0, #0x2d
	ldrb r3, [r0]
	lsls r1, r3, #0x1e
	adds r5, #1
	lsrs r1, r1, #0x1e
	ldrb r2, [r5]
	adds r0, r4, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0xc
	ands r1, r3
	mov r2, r8
	ands r0, r2
	orrs r0, r1
	movs r1, #0x30
	ands r1, r3
	movs r3, #0x31
	rsbs r3, r3, #0
	ands r0, r3
	orrs r0, r1
	strb r0, [r5]
	mov r5, sl
	ldr r1, [r5, #0x2c]
	movs r0, #0xf0
	lsls r0, r0, #0xa
	ands r1, r0
	ldr r0, [r7, #0x2c]
	ldr r6, _080D4E94 @ =0xFFFC3FFF
	ands r0, r6
	orrs r0, r1
	str r0, [r7, #0x2c]
	mov r0, sl
	adds r0, #0x2e
	ldrb r2, [r0]
	adds r5, r7, #0
	adds r5, #0x2e
	movs r1, #4
	ands r1, r2
	ldrb r3, [r5]
	movs r0, #5
	rsbs r0, r0, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0x18
	ands r1, r2
	movs r3, #0x19
	rsbs r3, r3, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0x60
	ands r1, r2
	movs r6, #0x61
	rsbs r6, r6, #0
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #7
	lsls r2, r2, #7
	movs r1, #0x7f
	ands r0, r1
	orrs r0, r2
	strb r0, [r5]
	mov r0, sl
	adds r0, #0x2f
	ldrb r3, [r0]
	lsls r0, r3, #0x1b
	movs r2, #0x2f
	adds r2, r2, r7
	mov ip, r2
	lsrs r0, r0, #0x1b
	ldrb r1, [r2]
	movs r2, #0x20
	rsbs r2, r2, #0
	ands r2, r1
	orrs r2, r0
	movs r0, #0x60
	ands r0, r3
	ands r2, r6
	orrs r2, r0
	lsrs r3, r3, #7
	mov r5, sl
	adds r5, #0x30
	ldrb r1, [r5]
	movs r6, #1
	ands r1, r6
	lsls r1, r1, #1
	orrs r1, r3
	adds r0, r1, #0
	ands r0, r6
	lsls r0, r0, #7
	movs r3, #0x7f
	ands r2, r3
	orrs r2, r0
	mov r6, ip
	strb r2, [r6]
	lsrs r1, r1, #1
	adds r3, r7, #0
	adds r3, #0x30
	movs r0, #1
	ands r1, r0
	ldrb r2, [r3]
	subs r0, #3
	ands r0, r2
	orrs r0, r1
	ldrb r2, [r5]
	movs r1, #6
	ands r1, r2
	movs r5, #7
	rsbs r5, r5, #0
	ands r0, r5
	orrs r0, r1
	movs r1, #0x18
	ands r1, r2
	movs r6, #0x19
	rsbs r6, r6, #0
	ands r0, r6
	orrs r0, r1
	movs r1, #0x60
	ands r1, r2
	subs r5, #0x5a
	ands r0, r5
	orrs r0, r1
	lsrs r2, r2, #7
	lsls r2, r2, #7
	movs r6, #0x7f
	ands r0, r6
	orrs r0, r2
	strb r0, [r3]
	mov r0, sl
	adds r0, #0x31
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	adds r5, r7, #0
	adds r5, #0x31
	lsrs r1, r1, #0x1e
	ldrb r3, [r5]
	adds r0, r4, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	mov r3, r8
	ands r0, r3
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	subs r6, #0xb0
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	movs r1, #0x3f
	ands r0, r1
	orrs r0, r2
	strb r0, [r5]
	mov r0, sl
	adds r0, #0x32
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	adds r5, #1
	lsrs r1, r1, #0x1e
	ldrb r3, [r5]
	adds r0, r4, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	mov r3, r8
	ands r0, r3
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	movs r6, #0x3f
	ands r0, r6
	orrs r0, r2
	strb r0, [r5]
	mov r0, sl
	adds r0, #0x33
	ldrb r1, [r0]
	lsls r0, r1, #0x1e
	adds r3, r7, #0
	adds r3, #0x33
	lsrs r0, r0, #0x1e
	ldrb r2, [r3]
	ands r4, r2
	orrs r4, r0
	movs r0, #0xc
	ands r0, r1
	mov r2, r8
	ands r4, r2
	orrs r4, r0
	movs r0, #0x30
	ands r0, r1
	movs r5, #0x31
	rsbs r5, r5, #0
	mov ip, r5
	ands r4, r5
	orrs r4, r0
	lsrs r1, r1, #6
	lsls r1, r1, #6
	ands r4, r6
	orrs r4, r1
	strb r4, [r3]
	mov r0, sl
	adds r0, #0x34
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	adds r4, r7, #0
	adds r4, #0x34
	lsrs r1, r1, #0x1e
	ldrb r3, [r4]
	adds r5, #0x2d
	adds r0, r5, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	subs r6, #0x4c
	ands r0, r6
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	mov r3, ip
	ands r0, r3
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	movs r6, #0x3f
	ands r0, r6
	orrs r0, r2
	strb r0, [r4]
	mov r0, sl
	adds r0, #0x35
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	adds r4, #1
	lsrs r1, r1, #0x1e
	ldrb r3, [r4]
	adds r0, r5, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	movs r3, #0xd
	rsbs r3, r3, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	mov r6, ip
	ands r0, r6
	orrs r0, r1
	b _080D4E98
	.align 2, 0
_080D4E90: .4byte 0xFFFFFE7F
_080D4E94: .4byte 0xFFFC3FFF
_080D4E98:
	lsrs r2, r2, #6
	lsls r2, r2, #6
	movs r1, #0x3f
	ands r0, r1
	orrs r0, r2
	strb r0, [r4]
	mov r0, sl
	adds r0, #0x36
	ldrb r3, [r0]
	lsls r1, r3, #0x1e
	adds r4, #1
	lsrs r1, r1, #0x1e
	ldrb r2, [r4]
	adds r0, r5, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #4
	ands r1, r3
	movs r2, #5
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x18
	ands r1, r3
	movs r6, #0x19
	rsbs r6, r6, #0
	ands r0, r6
	orrs r0, r1
	movs r1, #0x60
	ands r1, r3
	subs r2, #0x5c
	ands r0, r2
	orrs r0, r1
	strb r0, [r4]
	mov r3, sl
	ldrh r0, [r3, #0x36]
	movs r1, #0xc0
	lsls r1, r1, #1
	ands r1, r0
	ldrh r2, [r7, #0x36]
	ldr r0, _080D52D4 @ =0xFFFFFE7F
	ands r0, r2
	orrs r0, r1
	strh r0, [r7, #0x36]
	mov r0, sl
	adds r0, #0x37
	ldrb r3, [r0]
	movs r4, #0x37
	adds r4, r4, r7
	mov r8, r4
	movs r1, #6
	ands r1, r3
	ldrb r2, [r4]
	movs r0, #7
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x18
	ands r1, r3
	ands r0, r6
	orrs r0, r1
	movs r1, #0x60
	ands r1, r3
	subs r6, #0x48
	ands r0, r6
	orrs r0, r1
	lsrs r3, r3, #7
	mov r4, sl
	adds r4, #0x38
	ldrb r1, [r4]
	movs r2, #1
	ands r1, r2
	lsls r1, r1, #1
	orrs r1, r3
	adds r2, r1, #0
	movs r3, #1
	ands r2, r3
	lsls r2, r2, #7
	movs r6, #0x7f
	ands r0, r6
	orrs r0, r2
	mov r2, r8
	strb r0, [r2]
	lsrs r1, r1, #1
	ands r1, r3
	movs r3, #0x38
	adds r3, r3, r7
	mov r8, r3
	ldrb r2, [r3]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r2
	orrs r1, r0
	ldrb r3, [r4]
	movs r0, #2
	ands r0, r3
	movs r2, #3
	rsbs r2, r2, #0
	ands r1, r2
	orrs r1, r0
	movs r0, #0xc
	ands r0, r3
	movs r4, #0xd
	rsbs r4, r4, #0
	ands r1, r4
	orrs r1, r0
	movs r0, #0x30
	ands r0, r3
	mov r6, ip
	ands r1, r6
	orrs r1, r0
	lsrs r3, r3, #6
	lsls r3, r3, #6
	movs r0, #0x3f
	ands r1, r0
	orrs r1, r3
	mov r2, r8
	strb r1, [r2]
	mov r0, sl
	adds r0, #0x39
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	adds r4, r7, #0
	adds r4, #0x39
	lsrs r1, r1, #0x1e
	ldrb r3, [r4]
	adds r0, r5, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	movs r3, #0xd
	rsbs r3, r3, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	movs r6, #0x3f
	ands r0, r6
	orrs r0, r2
	strb r0, [r4]
	mov r0, sl
	adds r0, #0x3a
	ldrb r3, [r0]
	lsls r1, r3, #0x1e
	adds r4, #1
	lsrs r1, r1, #0x1e
	ldrb r2, [r4]
	adds r0, r5, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x1c
	ands r1, r3
	movs r2, #0x1d
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x60
	ands r1, r3
	subs r2, #0x44
	ands r0, r2
	orrs r0, r1
	strb r0, [r4]
	mov r3, sl
	ldrh r0, [r3, #0x3a]
	movs r1, #0xc0
	lsls r1, r1, #1
	ands r1, r0
	ldrh r2, [r7, #0x3a]
	ldr r0, _080D52D4 @ =0xFFFFFE7F
	ands r0, r2
	orrs r0, r1
	strh r0, [r7, #0x3a]
	mov r0, sl
	adds r0, #0x3b
	ldrb r3, [r0]
	movs r4, #0x3b
	adds r4, r4, r7
	mov r8, r4
	movs r1, #6
	ands r1, r3
	ldrb r2, [r4]
	movs r0, #7
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x18
	ands r1, r3
	subs r6, #0x58
	ands r0, r6
	orrs r0, r1
	movs r1, #0x60
	ands r1, r3
	movs r2, #0x61
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	lsrs r3, r3, #7
	mov r4, sl
	adds r4, #0x3c
	ldrb r1, [r4]
	movs r6, #1
	ands r1, r6
	lsls r1, r1, #1
	orrs r1, r3
	adds r2, r1, #0
	ands r2, r6
	lsls r2, r2, #7
	movs r3, #0x7f
	ands r0, r3
	orrs r0, r2
	mov r6, r8
	strb r0, [r6]
	lsrs r1, r1, #1
	movs r0, #1
	ands r1, r0
	adds r3, r7, #0
	adds r3, #0x3c
	ldrb r2, [r3]
	subs r0, #3
	ands r0, r2
	orrs r1, r0
	ldrb r2, [r4]
	movs r0, #6
	ands r0, r2
	movs r4, #7
	rsbs r4, r4, #0
	ands r1, r4
	orrs r1, r0
	movs r0, #0x18
	ands r0, r2
	movs r6, #0x19
	rsbs r6, r6, #0
	ands r1, r6
	orrs r1, r0
	movs r0, #0x60
	ands r0, r2
	movs r2, #0x61
	rsbs r2, r2, #0
	ands r1, r2
	orrs r1, r0
	strb r1, [r3]
	mov r3, sl
	ldrh r0, [r3, #0x3c]
	movs r1, #0xe0
	lsls r1, r1, #2
	ands r1, r0
	ldrh r2, [r7, #0x3c]
	ldr r0, _080D52D8 @ =0xFFFFFC7F
	ands r0, r2
	orrs r0, r1
	strh r0, [r7, #0x3c]
	mov r0, sl
	adds r0, #0x3d
	ldrb r3, [r0]
	adds r4, r7, #0
	adds r4, #0x3d
	movs r1, #0xc
	ands r1, r3
	ldrb r2, [r4]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x30
	ands r1, r3
	mov r6, ip
	ands r0, r6
	orrs r0, r1
	strb r0, [r4]
	mov r0, sl
	ldr r1, [r0, #0x3c]
	movs r0, #0xf0
	lsls r0, r0, #0xa
	ands r1, r0
	ldr r0, [r7, #0x3c]
	ldr r2, _080D52DC @ =0xFFFC3FFF
	ands r0, r2
	orrs r0, r1
	str r0, [r7, #0x3c]
	mov r0, sl
	adds r0, #0x3e
	ldrb r2, [r0]
	adds r4, #1
	movs r1, #0xc
	ands r1, r2
	ldrb r3, [r4]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	movs r3, #0x3f
	ands r0, r3
	orrs r0, r2
	strb r0, [r4]
	mov r0, sl
	adds r0, #0x3f
	ldrb r3, [r0]
	lsls r0, r3, #0x1e
	movs r4, #0x3f
	adds r4, r4, r7
	mov r8, r4
	lsrs r0, r0, #0x1e
	ldrb r2, [r4]
	adds r1, r5, #0
	ands r1, r2
	orrs r1, r0
	movs r0, #4
	ands r0, r3
	movs r6, #5
	rsbs r6, r6, #0
	ands r1, r6
	orrs r1, r0
	movs r0, #0x18
	ands r0, r3
	movs r2, #0x19
	rsbs r2, r2, #0
	ands r1, r2
	orrs r1, r0
	lsrs r3, r3, #5
	mov r4, sl
	adds r4, #0x40
	ldrb r0, [r4]
	movs r6, #1
	ands r0, r6
	lsls r0, r0, #3
	orrs r0, r3
	lsls r3, r3, #5
	movs r2, #0x1f
	ands r1, r2
	orrs r1, r3
	mov r2, r8
	strb r1, [r2]
	lsrs r0, r0, #3
	ands r0, r6
	adds r3, r7, #0
	adds r3, #0x40
	ldrb r1, [r3]
	movs r2, #2
	rsbs r2, r2, #0
	ands r2, r1
	orrs r0, r2
	ldrb r2, [r4]
	movs r1, #6
	ands r1, r2
	subs r6, #8
	ands r0, r6
	orrs r0, r1
	movs r1, #0x18
	ands r1, r2
	subs r6, #0x12
	ands r0, r6
	orrs r0, r1
	movs r1, #0x60
	ands r1, r2
	movs r2, #0x61
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r3]
	ldrh r1, [r4]
	movs r0, #0xc0
	lsls r0, r0, #1
	ands r0, r1
	ldrh r1, [r3]
	ldr r2, _080D52D4 @ =0xFFFFFE7F
	ands r2, r1
	orrs r2, r0
	strh r2, [r3]
	mov r0, sl
	adds r0, #0x41
	ldrb r3, [r0]
	adds r4, r7, #0
	adds r4, #0x41
	movs r1, #6
	ands r1, r3
	ldrb r2, [r4]
	movs r0, #7
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x18
	ands r1, r3
	ands r0, r6
	orrs r0, r1
	strb r0, [r4]
	mov r3, sl
	ldr r2, [r3, #0x40]
	movs r0, #0xf0
	lsls r0, r0, #9
	ands r2, r0
	ldr r0, [r7, #0x40]
	ldr r1, _080D52E0 @ =0xFFFE1FFF
	ands r0, r1
	orrs r0, r2
	str r0, [r7, #0x40]
	mov r0, sl
	adds r0, #0x42
	ldrb r1, [r0]
	adds r3, r7, #0
	adds r3, #0x42
	movs r0, #6
	ands r0, r1
	ldrb r2, [r3]
	movs r4, #7
	rsbs r4, r4, #0
	ands r4, r2
	orrs r4, r0
	movs r0, #0x18
	ands r0, r1
	ands r4, r6
	orrs r4, r0
	movs r0, #0x20
	ands r0, r1
	subs r6, #8
	ands r4, r6
	orrs r4, r0
	lsrs r1, r1, #6
	lsls r1, r1, #6
	movs r0, #0x3f
	mov r8, r0
	ands r4, r0
	orrs r4, r1
	strb r4, [r3]
	mov r0, sl
	adds r0, #0x43
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	adds r4, r7, #0
	adds r4, #0x43
	lsrs r1, r1, #0x1e
	ldrb r3, [r4]
	adds r0, r5, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	movs r3, #0xd
	rsbs r3, r3, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	subs r6, #0x10
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	mov r1, r8
	ands r0, r1
	orrs r0, r2
	strb r0, [r4]
	mov r0, sl
	adds r0, #0x44
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	adds r4, #1
	lsrs r1, r1, #0x1e
	ldrb r3, [r4]
	adds r0, r5, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	movs r3, #0xd
	rsbs r3, r3, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	mov r6, r8
	ands r0, r6
	orrs r0, r2
	strb r0, [r4]
	mov r0, sl
	adds r0, #0x45
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	adds r4, #1
	lsrs r1, r1, #0x1e
	ldrb r3, [r4]
	adds r0, r5, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	movs r3, #0xd
	rsbs r3, r3, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	movs r6, #0x31
	rsbs r6, r6, #0
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	mov r1, r8
	ands r0, r1
	orrs r0, r2
	strb r0, [r4]
	mov r0, sl
	adds r0, #0x46
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	adds r4, #1
	lsrs r1, r1, #0x1e
	ldrb r3, [r4]
	adds r0, r5, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	movs r3, #0xd
	rsbs r3, r3, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	mov r6, r8
	ands r0, r6
	b _080D52E4
	.align 2, 0
_080D52D4: .4byte 0xFFFFFE7F
_080D52D8: .4byte 0xFFFFFC7F
_080D52DC: .4byte 0xFFFC3FFF
_080D52E0: .4byte 0xFFFE1FFF
_080D52E4:
	orrs r0, r2
	strb r0, [r4]
	mov r0, sl
	adds r0, #0x47
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	adds r4, #1
	lsrs r1, r1, #0x1e
	ldrb r3, [r4]
	adds r0, r5, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	movs r3, #0xd
	rsbs r3, r3, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	movs r6, #0x31
	rsbs r6, r6, #0
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	mov r1, r8
	ands r0, r1
	orrs r0, r2
	strb r0, [r4]
	mov r0, sl
	adds r0, #0x48
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	adds r4, #1
	lsrs r1, r1, #0x1e
	ldrb r3, [r4]
	adds r0, r5, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	movs r3, #0xd
	rsbs r3, r3, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	mov r6, r8
	ands r0, r6
	orrs r0, r2
	strb r0, [r4]
	mov r0, sl
	adds r0, #0x49
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	adds r4, #1
	lsrs r1, r1, #0x1e
	ldrb r3, [r4]
	adds r0, r5, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	movs r3, #0xd
	rsbs r3, r3, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	movs r6, #0x31
	rsbs r6, r6, #0
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	mov r1, r8
	ands r0, r1
	orrs r0, r2
	strb r0, [r4]
	mov r0, sl
	adds r0, #0x4a
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	adds r4, #1
	lsrs r1, r1, #0x1e
	ldrb r3, [r4]
	adds r0, r5, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	movs r3, #0xd
	rsbs r3, r3, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	mov r6, r8
	ands r0, r6
	orrs r0, r2
	strb r0, [r4]
	mov r0, sl
	adds r0, #0x4b
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	adds r4, #1
	lsrs r1, r1, #0x1e
	ldrb r3, [r4]
	adds r0, r5, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	movs r3, #0xd
	rsbs r3, r3, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	movs r6, #0x31
	rsbs r6, r6, #0
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	mov r1, r8
	ands r0, r1
	orrs r0, r2
	strb r0, [r4]
	mov r0, sl
	adds r0, #0x4c
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	adds r4, #1
	lsrs r1, r1, #0x1e
	ldrb r3, [r4]
	adds r0, r5, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	movs r3, #0xd
	rsbs r3, r3, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	mov r6, r8
	ands r0, r6
	orrs r0, r2
	strb r0, [r4]
	mov r0, sl
	adds r0, #0x4d
	ldrb r3, [r0]
	lsls r1, r3, #0x1e
	adds r4, #1
	lsrs r1, r1, #0x1e
	ldrb r2, [r4]
	adds r0, r5, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #4
	ands r1, r3
	movs r2, #5
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #8
	ands r1, r3
	movs r6, #9
	rsbs r6, r6, #0
	ands r0, r6
	orrs r0, r1
	movs r1, #0x10
	ands r1, r3
	subs r2, #0xc
	ands r0, r2
	orrs r0, r1
	movs r1, #0x20
	ands r1, r3
	subs r6, #0x18
	ands r0, r6
	orrs r0, r1
	movs r1, #0x40
	ands r1, r3
	subs r2, #0x30
	ands r0, r2
	orrs r0, r1
	strb r0, [r4]
	mov r3, sl
	ldr r2, [r3, #0x4c]
	movs r4, #3
	mov r8, r4
	movs r0, #0xc0
	lsls r0, r0, #9
	ands r2, r0
	ldr r0, [r7, #0x4c]
	ldr r1, _080D5874 @ =0xFFFE7FFF
	ands r0, r1
	orrs r0, r2
	str r0, [r7, #0x4c]
	movs r6, #0x4e
	add r6, sl
	mov sb, r6
	ldrb r3, [r6]
	adds r4, r7, #0
	adds r4, #0x4e
	movs r1, #2
	ands r1, r3
	ldrb r2, [r4]
	movs r0, #3
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0xc
	ands r1, r3
	movs r2, #0xd
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x10
	ands r1, r3
	movs r6, #0x11
	rsbs r6, r6, #0
	ands r0, r6
	orrs r0, r1
	movs r1, #0x60
	ands r1, r3
	subs r2, #0x54
	ands r0, r2
	orrs r0, r1
	strb r0, [r4]
	mov r3, sb
	ldrh r0, [r3]
	movs r1, #0xc0
	lsls r1, r1, #1
	ands r1, r0
	ldrh r2, [r4]
	ldr r0, _080D5878 @ =0xFFFFFE7F
	ands r0, r2
	orrs r0, r1
	strh r0, [r4]
	mov r0, sl
	adds r0, #0x4f
	ldrb r3, [r0]
	movs r4, #0x4f
	adds r4, r4, r7
	mov ip, r4
	movs r1, #0xe
	ands r1, r3
	ldrb r2, [r4]
	movs r0, #0xf
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x30
	ands r1, r3
	subs r6, #0x20
	ands r0, r6
	orrs r0, r1
	movs r1, #0x40
	ands r1, r3
	movs r2, #0x41
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	lsrs r3, r3, #7
	mov r4, sl
	adds r4, #0x50
	ldrb r2, [r4]
	mov r6, r8
	ands r2, r6
	lsls r2, r2, #1
	orrs r2, r3
	adds r1, r2, #0
	movs r3, #1
	ands r1, r3
	lsls r1, r1, #7
	movs r6, #0x7f
	ands r0, r6
	orrs r0, r1
	mov r1, ip
	strb r0, [r1]
	lsrs r2, r2, #1
	adds r3, r7, #0
	adds r3, #0x50
	mov r6, r8
	ands r2, r6
	ldrb r1, [r3]
	adds r0, r5, #0
	ands r0, r1
	orrs r0, r2
	ldrb r2, [r4]
	movs r1, #0xc
	ands r1, r2
	movs r4, #0xd
	rsbs r4, r4, #0
	ands r0, r4
	orrs r0, r1
	movs r1, #0x10
	ands r1, r2
	movs r6, #0x11
	rsbs r6, r6, #0
	ands r0, r6
	orrs r0, r1
	movs r1, #0x60
	ands r1, r2
	subs r4, #0x54
	ands r0, r4
	orrs r0, r1
	lsrs r2, r2, #7
	lsls r2, r2, #7
	movs r6, #0x7f
	ands r0, r6
	orrs r0, r2
	strb r0, [r3]
	mov r0, sl
	adds r0, #0x51
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	adds r4, r7, #0
	adds r4, #0x51
	lsrs r1, r1, #0x1e
	ldrb r3, [r4]
	adds r0, r5, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #4
	ands r1, r2
	movs r3, #5
	rsbs r3, r3, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0x18
	ands r1, r2
	subs r6, #0x98
	ands r0, r6
	orrs r0, r1
	movs r1, #0x20
	ands r1, r2
	subs r3, #0x1c
	ands r0, r3
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	movs r6, #0x3f
	mov ip, r6
	ands r0, r6
	orrs r0, r2
	strb r0, [r4]
	mov r0, sl
	adds r0, #0x52
	str r0, [sp, #8]
	ldrb r3, [r0]
	lsls r1, r3, #0x1f
	lsrs r1, r1, #0x1f
	adds r4, #1
	ldrb r2, [r4]
	subs r6, #0x41
	mov r8, r6
	mov r0, r8
	ands r0, r2
	orrs r1, r0
	movs r0, #6
	ands r0, r3
	movs r2, #7
	rsbs r2, r2, #0
	ands r1, r2
	orrs r1, r0
	movs r0, #8
	ands r0, r3
	subs r6, #7
	ands r1, r6
	orrs r1, r0
	movs r0, #0x30
	ands r0, r3
	subs r2, #0x2a
	ands r1, r2
	orrs r1, r0
	strb r1, [r4]
	ldr r3, [sp, #8]
	ldrh r0, [r3]
	movs r1, #0xe0
	lsls r1, r1, #1
	ands r1, r0
	ldrh r2, [r4]
	ldr r0, _080D587C @ =0xFFFFFE3F
	ands r0, r2
	orrs r0, r1
	strh r0, [r4]
	mov r0, sl
	adds r0, #0x53
	ldrb r2, [r0]
	adds r4, #1
	movs r1, #6
	ands r1, r2
	ldrb r3, [r4]
	movs r0, #7
	rsbs r0, r0, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #8
	ands r1, r2
	ands r0, r6
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	subs r6, #0x28
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	mov r1, ip
	ands r0, r1
	orrs r0, r2
	strb r0, [r4]
	mov r0, sl
	adds r0, #0x54
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	adds r4, #1
	lsrs r1, r1, #0x1e
	ldrb r3, [r4]
	adds r0, r5, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #4
	ands r1, r2
	movs r3, #5
	rsbs r3, r3, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #8
	ands r1, r2
	adds r6, #0x28
	ands r0, r6
	orrs r0, r1
	movs r1, #0x10
	ands r1, r2
	subs r3, #0xc
	ands r0, r3
	orrs r0, r1
	movs r1, #0x60
	ands r1, r2
	subs r6, #0x58
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #7
	lsls r2, r2, #7
	movs r1, #0x7f
	ands r0, r1
	orrs r0, r2
	strb r0, [r4]
	mov r0, sl
	adds r0, #0x55
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	adds r4, #1
	lsrs r1, r1, #0x1e
	ldrb r3, [r4]
	adds r0, r5, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #4
	ands r1, r2
	movs r3, #5
	rsbs r3, r3, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0x18
	ands r1, r2
	adds r6, #0x48
	ands r0, r6
	orrs r0, r1
	movs r1, #0x20
	ands r1, r2
	subs r3, #0x1c
	ands r0, r3
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	mov r6, ip
	ands r0, r6
	orrs r0, r2
	strb r0, [r4]
	mov r0, sl
	adds r0, #0x56
	ldrb r2, [r0]
	lsls r1, r2, #0x1f
	lsrs r1, r1, #0x1f
	adds r4, #1
	ldrb r3, [r4]
	mov r0, r8
	ands r0, r3
	orrs r1, r0
	movs r0, #6
	ands r0, r2
	movs r3, #7
	rsbs r3, r3, #0
	ands r1, r3
	orrs r1, r0
	movs r0, #8
	ands r0, r2
	movs r6, #9
	rsbs r6, r6, #0
	ands r1, r6
	orrs r1, r0
	movs r0, #0x30
	ands r0, r2
	subs r3, #0x2a
	ands r1, r3
	orrs r1, r0
	lsrs r2, r2, #6
	lsls r2, r2, #6
	mov r6, ip
	ands r1, r6
	orrs r1, r2
	strb r1, [r4]
	mov r0, sl
	adds r0, #0x57
	ldrb r3, [r0]
	lsls r0, r3, #0x1e
	movs r1, #0x57
	adds r1, r1, r7
	mov ip, r1
	lsrs r0, r0, #0x1e
	ldrb r2, [r1]
	adds r1, r5, #0
	ands r1, r2
	orrs r1, r0
	movs r0, #0xc
	ands r0, r3
	movs r2, #0xd
	rsbs r2, r2, #0
	ands r1, r2
	orrs r1, r0
	movs r0, #0x30
	ands r0, r3
	movs r4, #0x31
	rsbs r4, r4, #0
	ands r1, r4
	orrs r1, r0
	movs r0, #0x40
	ands r0, r3
	movs r6, #0x41
	rsbs r6, r6, #0
	ands r1, r6
	orrs r1, r0
	lsrs r3, r3, #7
	mov r4, sl
	adds r4, #0x58
	ldrb r0, [r4]
	movs r2, #1
	ands r0, r2
	lsls r0, r0, #1
	orrs r0, r3
	adds r2, r0, #0
	movs r3, #1
	ands r2, r3
	lsls r2, r2, #7
	movs r6, #0x7f
	ands r1, r6
	orrs r1, r2
	mov r2, ip
	strb r1, [r2]
	lsrs r0, r0, #1
	ands r0, r3
	adds r3, r7, #0
	adds r3, #0x58
	ldrb r2, [r3]
	mov r1, r8
	ands r1, r2
	orrs r0, r1
	ldrb r2, [r4]
	movs r1, #2
	ands r1, r2
	movs r4, #3
	rsbs r4, r4, #0
	ands r0, r4
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	subs r6, #0x8c
	ands r0, r6
	orrs r0, r1
	movs r1, #0x10
	ands r1, r2
	subs r4, #0xe
	ands r0, r4
	orrs r0, r1
	movs r1, #0x60
	ands r1, r2
	subs r6, #0x54
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #7
	lsls r2, r2, #7
	movs r1, #0x7f
	ands r0, r1
	orrs r0, r2
	strb r0, [r3]
	mov r0, sl
	adds r0, #0x59
	ldrb r3, [r0]
	lsls r1, r3, #0x1e
	adds r4, r7, #0
	adds r4, #0x59
	lsrs r1, r1, #0x1e
	ldrb r2, [r4]
	adds r0, r5, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #4
	ands r1, r3
	movs r2, #5
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x18
	ands r1, r3
	adds r6, #0x48
	ands r0, r6
	orrs r0, r1
	movs r1, #0x60
	ands r1, r3
	subs r2, #0x5c
	ands r0, r2
	orrs r0, r1
	strb r0, [r4]
	mov r3, sl
	ldr r2, [r3, #0x58]
	movs r0, #0xe0
	lsls r0, r0, #0xa
	ands r2, r0
	ldr r0, [r7, #0x58]
	ldr r1, _080D5880 @ =0xFFFC7FFF
	ands r0, r1
	orrs r0, r2
	str r0, [r7, #0x58]
	movs r4, #0x5a
	add r4, sl
	mov ip, r4
	ldrb r3, [r4]
	adds r4, r7, #0
	adds r4, #0x5a
	movs r1, #4
	ands r1, r3
	ldrb r2, [r4]
	movs r0, #5
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #8
	ands r1, r3
	adds r6, #0x10
	ands r0, r6
	orrs r0, r1
	movs r1, #0x10
	ands r1, r3
	movs r2, #0x11
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x20
	ands r1, r3
	subs r6, #0x18
	ands r0, r6
	orrs r0, r1
	movs r1, #0x40
	ands r1, r3
	subs r2, #0x30
	ands r0, r2
	orrs r0, r1
	strb r0, [r4]
	mov r3, ip
	ldrh r1, [r3]
	movs r0, #0xc0
	lsls r0, r0, #1
	ands r0, r1
	ldrh r1, [r4]
	ldr r6, _080D5878 @ =0xFFFFFE7F
	ands r6, r1
	orrs r6, r0
	strh r6, [r4]
	mov r0, sl
	adds r0, #0x5b
	ldrb r3, [r0]
	movs r1, #0x5b
	adds r1, r1, r7
	mov sb, r1
	movs r1, #6
	ands r1, r3
	mov r4, sb
	ldrb r2, [r4]
	movs r0, #7
	rsbs r0, r0, #0
	ands r0, r2
	b _080D5884
	.align 2, 0
_080D5874: .4byte 0xFFFE7FFF
_080D5878: .4byte 0xFFFFFE7F
_080D587C: .4byte 0xFFFFFE3F
_080D5880: .4byte 0xFFFC7FFF
_080D5884:
	orrs r0, r1
	movs r1, #0x18
	ands r1, r3
	movs r6, #0x19
	rsbs r6, r6, #0
	ands r0, r6
	orrs r0, r1
	movs r1, #0x60
	ands r1, r3
	movs r2, #0x61
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	lsrs r3, r3, #7
	mov r4, sl
	adds r4, #0x5c
	ldrb r2, [r4]
	movs r6, #1
	ands r2, r6
	lsls r2, r2, #1
	orrs r2, r3
	adds r1, r2, #0
	ands r1, r6
	lsls r1, r1, #7
	movs r3, #0x7f
	ands r0, r3
	orrs r0, r1
	mov r6, sb
	strb r0, [r6]
	lsrs r2, r2, #1
	adds r3, r7, #0
	adds r3, #0x5c
	movs r0, #1
	ands r2, r0
	ldrb r1, [r3]
	mov r0, r8
	ands r0, r1
	orrs r0, r2
	ldrb r2, [r4]
	movs r1, #6
	ands r1, r2
	movs r4, #7
	rsbs r4, r4, #0
	ands r0, r4
	orrs r0, r1
	movs r1, #0x18
	ands r1, r2
	movs r6, #0x19
	rsbs r6, r6, #0
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #5
	lsls r2, r2, #5
	movs r1, #0x1f
	ands r0, r1
	orrs r0, r2
	strb r0, [r3]
	mov r0, sl
	adds r0, #0x5d
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	adds r4, r7, #0
	adds r4, #0x5d
	lsrs r1, r1, #0x1e
	ldrb r3, [r4]
	adds r0, r5, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	movs r3, #0xd
	rsbs r3, r3, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0x10
	ands r1, r2
	adds r6, #8
	ands r0, r6
	orrs r0, r1
	movs r1, #0x20
	ands r1, r2
	subs r3, #0x14
	ands r0, r3
	orrs r0, r1
	movs r1, #0x40
	ands r1, r2
	subs r6, #0x30
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #7
	lsls r2, r2, #7
	movs r1, #0x7f
	ands r0, r1
	orrs r0, r2
	strb r0, [r4]
	mov r0, sl
	adds r0, #0x5e
	ldrb r2, [r0]
	lsls r0, r2, #0x1f
	lsrs r0, r0, #0x1f
	adds r4, #1
	ldrb r3, [r4]
	mov r1, r8
	ands r1, r3
	orrs r0, r1
	movs r1, #2
	ands r1, r2
	movs r3, #3
	rsbs r3, r3, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #4
	ands r1, r2
	adds r6, #0x3c
	ands r0, r6
	orrs r0, r1
	movs r1, #8
	ands r1, r2
	subs r3, #6
	ands r0, r3
	orrs r0, r1
	movs r1, #0x10
	ands r1, r2
	subs r6, #0xc
	ands r0, r6
	orrs r0, r1
	movs r1, #0x20
	ands r1, r2
	subs r3, #0x18
	ands r0, r3
	orrs r0, r1
	movs r1, #0x40
	ands r1, r2
	subs r6, #0x30
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #7
	lsls r2, r2, #7
	movs r1, #0x7f
	ands r0, r1
	orrs r0, r2
	strb r0, [r4]
	mov r0, sl
	adds r0, #0x5f
	ldrb r2, [r0]
	lsls r0, r2, #0x1f
	lsrs r0, r0, #0x1f
	adds r3, r7, #0
	adds r3, #0x5f
	ldrb r1, [r3]
	mov r4, r8
	ands r4, r1
	orrs r0, r4
	movs r1, #2
	ands r1, r2
	adds r6, #0x3e
	ands r0, r6
	orrs r0, r1
	movs r1, #4
	ands r1, r2
	movs r4, #5
	rsbs r4, r4, #0
	ands r0, r4
	orrs r0, r1
	movs r1, #8
	ands r1, r2
	subs r6, #6
	ands r0, r6
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	subs r4, #0x2c
	mov ip, r4
	ands r0, r4
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	movs r6, #0x3f
	ands r0, r6
	orrs r0, r2
	strb r0, [r3]
	mov r0, sl
	adds r0, #0x60
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	adds r4, r7, #0
	adds r4, #0x60
	lsrs r1, r1, #0x1e
	ldrb r3, [r4]
	adds r0, r5, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	movs r3, #0xd
	rsbs r3, r3, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	mov r6, ip
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	movs r1, #0x3f
	ands r0, r1
	orrs r0, r2
	strb r0, [r4]
	mov r0, sl
	adds r0, #0x61
	ldrb r1, [r0]
	lsls r0, r1, #0x1e
	adds r3, r7, #0
	adds r3, #0x61
	lsrs r0, r0, #0x1e
	ldrb r2, [r3]
	ands r5, r2
	orrs r5, r0
	movs r0, #0xc
	ands r0, r1
	movs r2, #0xd
	rsbs r2, r2, #0
	ands r5, r2
	orrs r5, r0
	movs r0, #0x30
	ands r0, r1
	ands r5, r6
	orrs r5, r0
	lsrs r1, r1, #6
	lsls r1, r1, #6
	movs r4, #0x3f
	ands r5, r4
	orrs r5, r1
	strb r5, [r3]
	mov r0, sl
	adds r0, #0x62
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	movs r5, #0x62
	adds r5, r5, r7
	mov r8, r5
	lsrs r1, r1, #0x1e
	ldrb r3, [r5]
	subs r4, #0x43
	adds r0, r4, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	movs r5, #0xd
	rsbs r5, r5, #0
	ands r0, r5
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	movs r6, #0x3f
	ands r0, r6
	orrs r0, r2
	mov r1, r8
	strb r0, [r1]
	mov r0, sl
	adds r0, #0x63
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	movs r3, #0x63
	adds r3, r3, r7
	mov r8, r3
	lsrs r1, r1, #0x1e
	ldrb r3, [r3]
	adds r0, r4, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	ands r0, r5
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	mov r6, ip
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	movs r1, #0x3f
	ands r0, r1
	orrs r0, r2
	mov r2, r8
	strb r0, [r2]
	mov r0, sl
	adds r0, #0x64
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	movs r3, #0x64
	adds r3, r3, r7
	mov r8, r3
	lsrs r1, r1, #0x1e
	ldrb r3, [r3]
	adds r0, r4, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	ands r0, r5
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	movs r6, #0x3f
	ands r0, r6
	orrs r0, r2
	mov r1, r8
	strb r0, [r1]
	mov r0, sl
	adds r0, #0x65
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	movs r3, #0x65
	adds r3, r3, r7
	mov r8, r3
	lsrs r1, r1, #0x1e
	ldrb r3, [r3]
	adds r0, r4, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	ands r0, r5
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	mov r6, ip
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	movs r1, #0x3f
	ands r0, r1
	orrs r0, r2
	mov r2, r8
	strb r0, [r2]
	mov r0, sl
	adds r0, #0x66
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	movs r3, #0x66
	adds r3, r3, r7
	mov r8, r3
	lsrs r1, r1, #0x1e
	ldrb r3, [r3]
	adds r0, r4, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	ands r0, r5
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	movs r6, #0x3f
	ands r0, r6
	orrs r0, r2
	mov r1, r8
	strb r0, [r1]
	mov r0, sl
	adds r0, #0x67
	ldrb r2, [r0]
	lsls r1, r2, #0x1e
	movs r3, #0x67
	adds r3, r3, r7
	mov r8, r3
	lsrs r1, r1, #0x1e
	ldrb r3, [r3]
	adds r0, r4, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0xc
	ands r1, r2
	ands r0, r5
	orrs r0, r1
	movs r1, #0x30
	ands r1, r2
	mov r6, ip
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #6
	lsls r2, r2, #6
	movs r1, #0x3f
	ands r0, r1
	orrs r0, r2
	mov r2, r8
	strb r0, [r2]
	movs r3, #0x68
	add r3, sl
	mov r8, r3
	ldrb r2, [r3]
	lsls r0, r2, #0x1e
	adds r3, r7, #0
	adds r3, #0x68
	lsrs r0, r0, #0x1e
	ldrb r1, [r3]
	ands r4, r1
	orrs r4, r0
	movs r0, #0xc
	ands r0, r2
	ands r4, r5
	orrs r4, r0
	movs r0, #0x30
	ands r0, r2
	ands r4, r6
	orrs r4, r0
	strb r4, [r3]
	mov r4, r8
	ldrh r0, [r4]
	movs r1, #0xff
	lsls r1, r1, #6
	ands r1, r0
	ldrh r2, [r3]
	ldr r4, _080D5FC8 @ =0xFFFFC03F
	adds r0, r4, #0
	ands r0, r2
	orrs r0, r1
	strh r0, [r3]
	mov r5, sl
	ldr r1, [r5, #0x68]
	movs r0, #0xff
	lsls r0, r0, #0xe
	ands r1, r0
	ldr r0, [r7, #0x68]
	ldr r6, _080D5FCC @ =0xFFC03FFF
	ands r0, r6
	orrs r0, r1
	str r0, [r7, #0x68]
	mov r0, sl
	adds r0, #0x6a
	ldrh r0, [r0]
	adds r3, #2
	movs r1, #0xff
	lsls r1, r1, #6
	ands r1, r0
	ldrh r2, [r3]
	adds r0, r4, #0
	ands r0, r2
	orrs r0, r1
	strh r0, [r3]
	mov r0, sl
	adds r0, #0x6b
	ldrb r0, [r0]
	lsrs r0, r0, #6
	movs r1, #0x6c
	add r1, sl
	mov r8, r1
	ldrb r1, [r1]
	movs r2, #0x3f
	ands r1, r2
	lsls r1, r1, #2
	orrs r1, r0
	adds r2, r1, #0
	movs r3, #3
	ands r2, r3
	adds r5, r7, #0
	adds r5, #0x6b
	lsls r2, r2, #6
	ldrb r3, [r5]
	movs r0, #0x3f
	ands r0, r3
	orrs r0, r2
	strb r0, [r5]
	lsrs r1, r1, #2
	adds r3, r7, #0
	adds r3, #0x6c
	movs r5, #0x3f
	ands r1, r5
	ldrb r2, [r3]
	subs r5, #0x7f
	adds r0, r5, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r3]
	mov r6, r8
	ldrh r0, [r6]
	movs r1, #0xff
	lsls r1, r1, #6
	ands r1, r0
	ldrh r2, [r3]
	adds r0, r4, #0
	ands r0, r2
	orrs r0, r1
	strh r0, [r3]
	mov r0, sl
	ldr r1, [r0, #0x6c]
	movs r0, #0xff
	lsls r0, r0, #0xe
	ands r1, r0
	ldr r0, [r7, #0x6c]
	ldr r2, _080D5FCC @ =0xFFC03FFF
	ands r0, r2
	orrs r0, r1
	str r0, [r7, #0x6c]
	mov r0, sl
	adds r0, #0x6e
	ldrh r0, [r0]
	adds r3, #2
	movs r1, #0xff
	lsls r1, r1, #6
	ands r1, r0
	ldrh r2, [r3]
	adds r0, r4, #0
	ands r0, r2
	orrs r0, r1
	strh r0, [r3]
	mov r0, sl
	adds r0, #0x6f
	ldrb r0, [r0]
	lsrs r0, r0, #6
	movs r3, #0x70
	add r3, sl
	mov r8, r3
	ldrb r1, [r3]
	movs r6, #0x3f
	ands r1, r6
	lsls r1, r1, #2
	orrs r1, r0
	adds r2, r1, #0
	movs r0, #3
	ands r2, r0
	movs r3, #0x6f
	adds r3, r3, r7
	mov ip, r3
	lsls r2, r2, #6
	ldrb r3, [r3]
	movs r0, #0x3f
	ands r0, r3
	orrs r0, r2
	mov r6, ip
	strb r0, [r6]
	lsrs r1, r1, #2
	adds r3, r7, #0
	adds r3, #0x70
	movs r0, #0x3f
	ands r1, r0
	ldrb r2, [r3]
	adds r0, r5, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r3]
	mov r1, r8
	ldrh r0, [r1]
	movs r1, #0xff
	lsls r1, r1, #6
	ands r1, r0
	ldrh r2, [r3]
	adds r0, r4, #0
	ands r0, r2
	orrs r0, r1
	strh r0, [r3]
	mov r2, sl
	ldr r1, [r2, #0x70]
	movs r0, #0xff
	lsls r0, r0, #0xe
	ands r1, r0
	ldr r0, [r7, #0x70]
	ldr r3, _080D5FCC @ =0xFFC03FFF
	ands r0, r3
	orrs r0, r1
	str r0, [r7, #0x70]
	mov r0, sl
	adds r0, #0x72
	ldrh r1, [r0]
	adds r2, r7, #0
	adds r2, #0x72
	movs r0, #0xff
	lsls r0, r0, #6
	ands r0, r1
	ldrh r1, [r2]
	ands r4, r1
	orrs r4, r0
	strh r4, [r2]
	mov r0, sl
	adds r0, #0x73
	ldrb r0, [r0]
	lsrs r0, r0, #6
	mov r4, sl
	adds r4, #0x74
	ldrb r1, [r4]
	movs r6, #0x3f
	ands r1, r6
	lsls r1, r1, #2
	orrs r1, r0
	adds r2, r1, #0
	movs r0, #3
	ands r2, r0
	movs r3, #0x73
	adds r3, r3, r7
	mov r8, r3
	lsls r2, r2, #6
	ldrb r3, [r3]
	movs r0, #0x3f
	ands r0, r3
	orrs r0, r2
	mov r6, r8
	strb r0, [r6]
	lsrs r1, r1, #2
	adds r3, r7, #0
	adds r3, #0x74
	movs r0, #0x3f
	ands r1, r0
	ldrb r0, [r3]
	ands r5, r0
	orrs r5, r1
	strb r5, [r3]
	ldrh r0, [r4]
	movs r1, #0xe0
	lsls r1, r1, #1
	ands r1, r0
	ldrh r2, [r3]
	ldr r0, _080D5FD0 @ =0xFFFFFE3F
	ands r0, r2
	orrs r0, r1
	strh r0, [r3]
	mov r0, sl
	adds r0, #0x75
	ldrb r2, [r0]
	adds r4, r7, #0
	adds r4, #0x75
	movs r1, #6
	ands r1, r2
	ldrb r3, [r4]
	movs r0, #7
	rsbs r0, r0, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #8
	ands r1, r2
	movs r3, #9
	rsbs r3, r3, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0x10
	ands r1, r2
	movs r5, #0x11
	rsbs r5, r5, #0
	ands r0, r5
	orrs r0, r1
	movs r1, #0x20
	ands r1, r2
	movs r6, #0x21
	rsbs r6, r6, #0
	mov r8, r6
	ands r0, r6
	orrs r0, r1
	movs r1, #0x40
	ands r1, r2
	subs r3, #0x38
	ands r0, r3
	orrs r0, r1
	lsrs r2, r2, #7
	lsls r2, r2, #7
	movs r5, #0x7f
	ands r0, r5
	orrs r0, r2
	strb r0, [r4]
	mov r6, sl
	adds r6, #0x76
	str r6, [sp, #0x10]
	ldrb r2, [r6]
	lsls r1, r2, #0x1f
	lsrs r1, r1, #0x1f
	adds r4, #1
	ldrb r3, [r4]
	subs r5, #0x81
	adds r0, r5, #0
	ands r0, r3
	orrs r1, r0
	movs r0, #2
	ands r0, r2
	movs r3, #3
	rsbs r3, r3, #0
	mov ip, r3
	ands r1, r3
	orrs r1, r0
	movs r0, #4
	ands r0, r2
	movs r6, #5
	rsbs r6, r6, #0
	ands r1, r6
	orrs r1, r0
	movs r0, #8
	ands r0, r2
	subs r3, #6
	ands r1, r3
	orrs r1, r0
	movs r0, #0x10
	ands r0, r2
	subs r6, #0xc
	ands r1, r6
	orrs r1, r0
	movs r0, #0x20
	ands r0, r2
	mov r3, r8
	ands r1, r3
	orrs r1, r0
	movs r0, #0x40
	ands r0, r2
	subs r6, #0x30
	ands r1, r6
	orrs r1, r0
	strb r1, [r4]
	ldr r1, [sp, #0x10]
	ldrh r0, [r1]
	movs r1, #0xf0
	lsls r1, r1, #3
	ands r1, r0
	ldrh r2, [r4]
	ldr r0, _080D5FD4 @ =0xFFFFF87F
	ands r0, r2
	orrs r0, r1
	strh r0, [r4]
	mov r0, sl
	adds r0, #0x77
	ldrb r3, [r0]
	movs r2, #0x77
	adds r2, r2, r7
	mov sb, r2
	movs r1, #0x78
	ands r1, r3
	ldrb r2, [r2]
	movs r0, #0x79
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	lsrs r3, r3, #7
	mov r4, sl
	adds r4, #0x78
	ldrb r2, [r4]
	movs r1, #7
	lsls r3, r3, #7
	movs r6, #0x7f
	ands r0, r6
	orrs r0, r3
	mov r3, sb
	strb r0, [r3]
	adds r3, r7, #0
	adds r3, #0x78
	ands r2, r1
	ldrb r1, [r3]
	movs r0, #8
	rsbs r0, r0, #0
	ands r0, r1
	orrs r0, r2
	ldrb r2, [r4]
	movs r1, #8
	ands r1, r2
	movs r4, #9
	rsbs r4, r4, #0
	ands r0, r4
	orrs r0, r1
	movs r1, #0x10
	ands r1, r2
	subs r6, #0x90
	ands r0, r6
	orrs r0, r1
	movs r1, #0x20
	ands r1, r2
	mov r4, r8
	ands r0, r4
	orrs r0, r1
	movs r1, #0x40
	ands r1, r2
	subs r6, #0x30
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #7
	lsls r2, r2, #7
	movs r1, #0x7f
	ands r0, r1
	orrs r0, r2
	strb r0, [r3]
	mov r0, sl
	adds r0, #0x79
	ldrb r2, [r0]
	lsls r0, r2, #0x1f
	lsrs r0, r0, #0x1f
	adds r4, r7, #0
	adds r4, #0x79
	ldrb r3, [r4]
	adds r1, r5, #0
	ands r1, r3
	orrs r0, r1
	movs r1, #2
	ands r1, r2
	mov r3, ip
	ands r0, r3
	orrs r0, r1
	movs r1, #4
	ands r1, r2
	adds r6, #0x3c
	ands r0, r6
	orrs r0, r1
	movs r1, #8
	ands r1, r2
	movs r3, #9
	rsbs r3, r3, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #0x10
	ands r1, r2
	subs r6, #0xc
	ands r0, r6
	orrs r0, r1
	movs r1, #0x20
	ands r1, r2
	mov r3, r8
	ands r0, r3
	orrs r0, r1
	movs r1, #0x40
	ands r1, r2
	subs r6, #0x30
	ands r0, r6
	orrs r0, r1
	lsrs r2, r2, #7
	lsls r2, r2, #7
	movs r1, #0x7f
	ands r0, r1
	orrs r0, r2
	strb r0, [r4]
	mov r4, sl
	adds r4, #0x7a
	ldrb r1, [r4]
	lsls r1, r1, #0x1f
	lsrs r1, r1, #0x1f
	adds r3, r7, #0
	adds r3, #0x7a
	ldrb r2, [r3]
	adds r0, r5, #0
	ands r0, r2
	orrs r1, r0
	strb r1, [r3]
	ldrh r0, [r4]
	movs r1, #0xff
	lsls r1, r1, #1
	ands r1, r0
	ldrh r2, [r3]
	ldr r0, _080D5FD8 @ =0xFFFFFE01
	ands r0, r2
	orrs r0, r1
	strh r0, [r3]
	mov r0, sl
	adds r0, #0x7b
	ldrb r2, [r0]
	adds r4, r7, #0
	adds r4, #0x7b
	movs r1, #2
	ands r1, r2
	ldrb r3, [r4]
	mov r0, ip
	ands r0, r3
	orrs r0, r1
	movs r1, #4
	ands r1, r2
	movs r3, #5
	rsbs r3, r3, #0
	ands r0, r3
	orrs r0, r1
	movs r1, #8
	ands r1, r2
	adds r6, #0x38
	ands r0, r6
	orrs r0, r1
	movs r1, #0x10
	ands r1, r2
	subs r3, #0xc
	ands r0, r3
	orrs r0, r1
	movs r1, #0x20
	ands r1, r2
	mov r6, r8
	ands r0, r6
	orrs r0, r1
	movs r1, #0x40
	ands r1, r2
	subs r3, #0x30
	ands r0, r3
	orrs r0, r1
	lsrs r2, r2, #7
	lsls r2, r2, #7
	movs r6, #0x7f
	ands r0, r6
	orrs r0, r2
	strb r0, [r4]
	mov r0, sl
	adds r0, #0x7c
	ldrb r2, [r0]
	lsls r1, r2, #0x1f
	lsrs r1, r1, #0x1f
	adds r4, #1
	ldrb r3, [r4]
	adds r0, r5, #0
	ands r0, r3
	orrs r1, r0
	movs r0, #2
	ands r0, r2
	mov r3, ip
	ands r1, r3
	orrs r1, r0
	movs r0, #4
	ands r0, r2
	subs r6, #0x84
	ands r1, r6
	orrs r1, r0
	movs r0, #8
	ands r0, r2
	movs r3, #9
	rsbs r3, r3, #0
	ands r1, r3
	orrs r1, r0
	lsrs r2, r2, #4
	lsls r2, r2, #4
	b _080D5FDC
	.align 2, 0
_080D5FC8: .4byte 0xFFFFC03F
_080D5FCC: .4byte 0xFFC03FFF
_080D5FD0: .4byte 0xFFFFFE3F
_080D5FD4: .4byte 0xFFFFF87F
_080D5FD8: .4byte 0xFFFFFE01
_080D5FDC:
	movs r0, #0xf
	ands r1, r0
	orrs r1, r2
	strb r1, [r4]
	mov r0, sl
	adds r0, #0x7d
	ldrb r3, [r0]
	lsls r0, r3, #0x1f
	lsrs r0, r0, #0x1f
	adds r4, #1
	ldrb r1, [r4]
	ands r5, r1
	orrs r0, r5
	movs r1, #0x1e
	ands r1, r3
	movs r2, #0x1f
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x20
	ands r1, r3
	mov r5, r8
	ands r0, r5
	orrs r0, r1
	movs r1, #0x40
	ands r1, r3
	subs r6, #0x3c
	ands r0, r6
	orrs r0, r1
	lsrs r3, r3, #7
	lsls r3, r3, #7
	movs r1, #0x7f
	ands r0, r1
	orrs r0, r3
	strb r0, [r4]
	mov r5, sl
	adds r5, #0x7e
	ldrb r3, [r5]
	lsls r1, r3, #0x1e
	adds r4, #1
	lsrs r1, r1, #0x1e
	ldrb r2, [r4]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #4
	ands r1, r3
	movs r2, #5
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #8
	ands r1, r3
	adds r6, #0x38
	ands r0, r6
	orrs r0, r1
	movs r1, #0x10
	ands r1, r3
	subs r2, #0xc
	ands r0, r2
	orrs r0, r1
	movs r1, #0x20
	ands r1, r3
	mov r6, r8
	ands r0, r6
	orrs r0, r1
	movs r1, #0x40
	ands r1, r3
	subs r2, #0x30
	ands r0, r2
	orrs r0, r1
	strb r0, [r4]
	ldrh r0, [r5]
	movs r1, #0xe0
	lsls r1, r1, #2
	ands r1, r0
	ldrh r2, [r4]
	ldr r0, _080D60AC @ =0xFFFFFC7F
	ands r0, r2
	orrs r0, r1
	strh r0, [r4]
	mov r0, sl
	adds r0, #0x7f
	ldrb r1, [r0]
	lsrs r1, r1, #2
	adds r3, r7, #0
	adds r3, #0x7f
	lsls r1, r1, #2
	ldrb r2, [r3]
	movs r0, #3
	ands r0, r2
	orrs r0, r1
	strb r0, [r3]
	adds r0, r7, #0
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080D60AC: .4byte 0xFFFFFC7F

	thumb_func_start sub_80D60B0
sub_80D60B0: @ 0x080D60B0
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldrb r1, [r5]
	lsls r1, r1, #0x1a
	lsrs r1, r1, #0x1a
	ldrb r2, [r4]
	movs r0, #0x40
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r4]
	ldrh r0, [r5]
	movs r1, #0xfe
	lsls r1, r1, #5
	ands r1, r0
	ldrh r2, [r4]
	ldr r0, _080D64AC @ =0xFFFFE03F
	ands r0, r2
	orrs r0, r1
	strh r0, [r4]
	ldr r2, [r5]
	movs r0, #0xff
	lsls r0, r0, #0xd
	ands r2, r0
	ldr r0, [r4]
	ldr r1, _080D64B0 @ =0xFFE01FFF
	ands r0, r1
	orrs r0, r2
	str r0, [r4]
	ldrb r0, [r5, #2]
	movs r1, #0x20
	ands r1, r0
	ldrb r2, [r4, #2]
	movs r0, #0x21
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r4, #2]
	ldrh r0, [r5, #2]
	movs r1, #0xe0
	lsls r1, r1, #1
	ands r1, r0
	ldrh r2, [r4, #2]
	ldr r0, _080D64B4 @ =0xFFFFFE3F
	ands r0, r2
	orrs r0, r1
	strh r0, [r4, #2]
	ldrb r3, [r5, #3]
	movs r1, #2
	ands r1, r3
	ldrb r2, [r4, #3]
	movs r0, #3
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x1c
	ands r1, r3
	movs r2, #0x1d
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r4, #3]
	adds r1, r4, #4
	adds r0, r5, #4
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	adds r0, r4, #0
	adds r0, #0x18
	adds r1, r5, #0
	adds r1, #0x18
	bl sub_80D3B28
	adds r1, r4, #0
	adds r1, #0x28
	adds r0, r5, #0
	adds r0, #0x28
	ldrb r0, [r0]
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0x29
	ldrb r0, [r0]
	adds r1, #1
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0x2a
	ldrb r1, [r0]
	lsls r1, r1, #0x1f
	adds r3, r4, #0
	adds r3, #0x2a
	lsrs r1, r1, #0x1f
	ldrb r2, [r3]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r3]
	ldr r0, [r5, #0x2c]
	str r0, [r4, #0x2c]
	adds r1, r4, #0
	adds r1, #0x30
	adds r0, r5, #0
	adds r0, #0x30
	ldm r0!, {r2, r6}
	stm r1!, {r2, r6}
	adds r1, r4, #0
	adds r1, #0x38
	adds r0, r5, #0
	adds r0, #0x38
	ldm r0!, {r3, r6}
	stm r1!, {r3, r6}
	adds r1, r4, #0
	adds r1, #0x40
	adds r0, r5, #0
	adds r0, #0x40
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	adds r1, r4, #0
	adds r1, #0x48
	adds r0, r5, #0
	adds r0, #0x48
	ldm r0!, {r2, r6}
	stm r1!, {r2, r6}
	adds r1, r4, #0
	adds r1, #0x50
	adds r0, r5, #0
	adds r0, #0x50
	ldm r0!, {r3, r6}
	stm r1!, {r3, r6}
	adds r1, r4, #0
	adds r1, #0x58
	adds r0, r5, #0
	adds r0, #0x58
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	adds r1, r4, #0
	adds r1, #0x60
	adds r0, r5, #0
	adds r0, #0x60
	ldm r0!, {r2, r6}
	stm r1!, {r2, r6}
	adds r1, r4, #0
	adds r1, #0x68
	adds r0, r5, #0
	adds r0, #0x68
	ldm r0!, {r3, r6}
	stm r1!, {r3, r6}
	adds r1, r4, #0
	adds r1, #0x70
	adds r0, r5, #0
	adds r0, #0x70
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	adds r1, r4, #0
	adds r1, #0x84
	adds r0, r5, #0
	adds r0, #0x84
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r6}
	stm r1!, {r2, r6}
	adds r1, r4, #0
	adds r1, #0x98
	adds r0, r5, #0
	adds r0, #0x98
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	adds r1, r4, #0
	adds r1, #0xb0
	adds r0, r5, #0
	adds r0, #0xb0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r3, r6}
	stm r1!, {r3, r6}
	adds r1, r4, #0
	adds r1, #0xc4
	adds r0, r5, #0
	adds r0, #0xc4
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	adds r1, r4, #0
	adds r1, #0xd8
	adds r0, r5, #0
	adds r0, #0xd8
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	adds r1, r4, #0
	adds r1, #0xf0
	adds r0, r5, #0
	adds r0, #0xf0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r6}
	stm r1!, {r2, r6}
	movs r0, #0x82
	lsls r0, r0, #1
	adds r1, r4, r0
	adds r0, r5, r0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r3, r6}
	stm r1!, {r3, r6}
	movs r0, #0x8c
	lsls r0, r0, #1
	adds r1, r4, r0
	adds r0, r5, r0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	movs r0, #0x96
	lsls r0, r0, #1
	adds r1, r4, r0
	adds r0, r5, r0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r6}
	stm r1!, {r2, r6}
	movs r0, #0xa0
	lsls r0, r0, #1
	adds r1, r4, r0
	adds r0, r5, r0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r3, r6}
	stm r1!, {r3, r6}
	movs r1, #0xaa
	lsls r1, r1, #1
	adds r0, r4, r1
	adds r1, r5, r1
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	movs r0, #0xb6
	lsls r0, r0, #1
	adds r1, r4, r0
	adds r0, r5, r0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	movs r0, #0xc0
	lsls r0, r0, #1
	adds r1, r4, r0
	adds r0, r5, r0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r6}
	stm r1!, {r2, r6}
	movs r0, #0xca
	lsls r0, r0, #1
	adds r1, r4, r0
	adds r0, r5, r0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r3, r6}
	stm r1!, {r3, r6}
	movs r0, #0xd4
	lsls r0, r0, #1
	adds r1, r4, r0
	adds r0, r5, r0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	movs r0, #0xde
	lsls r0, r0, #1
	adds r1, r4, r0
	adds r0, r5, r0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r6}
	stm r1!, {r2, r6}
	movs r0, #0xe8
	lsls r0, r0, #1
	adds r1, r4, r0
	adds r0, r5, r0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r3, r6}
	stm r1!, {r3, r6}
	movs r1, #0xf2
	lsls r1, r1, #1
	adds r0, r4, r1
	adds r1, r5, r1
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	movs r0, #0xfe
	lsls r0, r0, #1
	adds r1, r4, r0
	adds r0, r5, r0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r4, r1
	adds r1, r5, r1
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	movs r0, #0x8a
	lsls r0, r0, #2
	adds r1, r4, r0
	adds r0, r5, r0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r6}
	stm r1!, {r2, r6}
	movs r0, #0x8f
	lsls r0, r0, #2
	adds r1, r4, r0
	adds r0, r5, r0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r3, r6}
	stm r1!, {r3, r6}
	movs r0, #0x94
	lsls r0, r0, #2
	adds r1, r4, r0
	adds r0, r5, r0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	movs r1, #0x99
	lsls r1, r1, #2
	adds r0, r4, r1
	adds r1, r5, r1
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	movs r0, #0x9f
	lsls r0, r0, #2
	adds r1, r4, r0
	adds r0, r5, r0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r6}
	stm r1!, {r2, r6}
	movs r1, #0xa4
	lsls r1, r1, #2
	adds r0, r4, r1
	adds r1, r5, r1
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	movs r0, #0xaa
	lsls r0, r0, #2
	adds r1, r4, r0
	adds r0, r5, r0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r3, r6}
	stm r1!, {r3, r6}
	movs r0, #0xaf
	lsls r0, r0, #2
	adds r1, r4, r0
	adds r0, r5, r0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	movs r0, #0xb4
	lsls r0, r0, #2
	adds r1, r4, r0
	adds r0, r5, r0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r6}
	stm r1!, {r2, r6}
	movs r1, #0xb9
	lsls r1, r1, #2
	adds r0, r4, r1
	adds r1, r5, r1
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	movs r0, #0xbf
	lsls r0, r0, #2
	adds r1, r4, r0
	adds r0, r5, r0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r3, r6}
	stm r1!, {r3, r6}
	movs r1, #0xc4
	lsls r1, r1, #2
	adds r0, r4, r1
	adds r1, r5, r1
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	movs r0, #0xca
	lsls r0, r0, #2
	adds r1, r4, r0
	adds r0, r5, r0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	movs r1, #0xcf
	lsls r1, r1, #2
	adds r0, r4, r1
	adds r1, r5, r1
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	movs r1, #0xd8
	lsls r1, r1, #2
	adds r0, r4, r1
	adds r1, r5, r1
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	movs r1, #0xe1
	lsls r1, r1, #2
	adds r0, r4, r1
	adds r1, r5, r1
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	movs r1, #0xea
	lsls r1, r1, #2
	adds r0, r4, r1
	adds r1, r5, r1
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	movs r1, #0xf3
	lsls r1, r1, #2
	adds r0, r4, r1
	adds r1, r5, r1
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	movs r1, #0xfc
	lsls r1, r1, #2
	adds r0, r4, r1
	adds r1, r5, r1
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, _080D64B8 @ =0x00000414
	adds r0, r4, r1
	adds r1, r5, r1
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	movs r1, #0x87
	lsls r1, r1, #3
	adds r0, r4, r1
	adds r1, r5, r1
	movs r2, #0x38
	bl sub_80D3994
	movs r0, #0x8e
	lsls r0, r0, #3
	adds r1, r4, r0
	adds r0, r5, r0
	ldr r0, [r0]
	str r0, [r1]
	ldr r0, _080D64BC @ =0x00000474
	adds r5, r5, r0
	ldrb r1, [r5]
	adds r0, r4, r0
	strb r1, [r0]
	adds r0, r4, #0
	b _080D64C0
	.align 2, 0
_080D64AC: .4byte 0xFFFFE03F
_080D64B0: .4byte 0xFFE01FFF
_080D64B4: .4byte 0xFFFFFE3F
_080D64B8: .4byte 0x00000414
_080D64BC: .4byte 0x00000474
_080D64C0:
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80D64C8
sub_80D64C8: @ 0x080D64C8
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	bl sub_80D3B28
	ldrh r1, [r5, #0x10]
	lsls r1, r1, #0x16
	lsrs r1, r1, #0x16
	ldrh r2, [r4, #0x10]
	ldr r0, _080D656C @ =0xFFFFFC00
	ands r0, r2
	orrs r0, r1
	strh r0, [r4, #0x10]
	ldrb r3, [r5, #0x11]
	movs r1, #4
	ands r1, r3
	ldrb r2, [r4, #0x11]
	movs r0, #5
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #8
	ands r1, r3
	movs r2, #9
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x10
	ands r1, r3
	subs r2, #8
	ands r0, r2
	orrs r0, r1
	strb r0, [r4, #0x11]
	adds r3, r4, #0
	adds r3, #0x14
	movs r1, #0xa
	adds r2, r5, #0
	adds r2, #0x14
	movs r6, #1
	rsbs r6, r6, #0
_080D6518:
	ldm r2!, {r0}
	stm r3!, {r0}
	subs r1, #1
	cmp r1, r6
	bne _080D6518
	adds r0, r4, #0
	adds r0, #0x40
	adds r1, r5, #0
	adds r1, #0x40
	movs r2, #0xd0
	lsls r2, r2, #1
	bl sub_80D3994
	movs r1, #0xf0
	lsls r1, r1, #1
	adds r0, r4, r1
	adds r1, r5, r1
	movs r2, #0x87
	lsls r2, r2, #2
	bl sub_80D3994
	movs r1, #0xff
	lsls r1, r1, #2
	adds r0, r4, r1
	adds r1, r5, r1
	bl sub_80D66A4
	ldr r1, _080D6570 @ =0x000005DC
	adds r0, r4, r1
	adds r1, r5, r1
	bl sub_80D657C
	ldr r1, _080D6574 @ =0x000009C8
	adds r0, r4, r1
	adds r1, r5, r1
	ldr r2, _080D6578 @ =0x000010CC
	bl sub_80D3994
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080D656C: .4byte 0xFFFFFC00
_080D6570: .4byte 0x000005DC
_080D6574: .4byte 0x000009C8
_080D6578: .4byte 0x000010CC

	thumb_func_start sub_80D657C
sub_80D657C: @ 0x080D657C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r6, r0, #0
	adds r4, r1, #0
	ldrb r1, [r4]
	lsls r1, r1, #0x1f
	lsrs r1, r1, #0x1f
	ldrb r2, [r6]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r6]
	ldrh r0, [r4]
	ldr r1, _080D6684 @ =0x000007FE
	ands r1, r0
	ldrh r2, [r6]
	ldr r0, _080D6688 @ =0xFFFFF801
	ands r0, r2
	orrs r0, r1
	strh r0, [r6]
	ldrb r3, [r4, #1]
	movs r1, #8
	ands r1, r3
	ldrb r2, [r6, #1]
	movs r0, #9
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x10
	ands r1, r3
	movs r2, #0x11
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r6, #1]
	ldr r2, [r4]
	ldr r0, _080D668C @ =0x1FFFE000
	ands r2, r0
	ldr r0, [r6]
	ldr r1, _080D6690 @ =0xE0001FFF
	ands r0, r1
	orrs r0, r2
	str r0, [r6]
	ldrb r2, [r4, #3]
	movs r1, #0x60
	ands r1, r2
	ldrb r3, [r6, #3]
	movs r0, #0x61
	rsbs r0, r0, #0
	ands r0, r3
	orrs r0, r1
	lsrs r2, r2, #7
	lsls r2, r2, #7
	movs r1, #0x7f
	ands r0, r1
	orrs r0, r2
	strb r0, [r6, #3]
	ldrb r1, [r4, #4]
	lsls r1, r1, #0x1c
	lsrs r1, r1, #0x1c
	ldrb r2, [r6, #4]
	movs r0, #0x10
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r6, #4]
	ldrh r0, [r4, #4]
	ldr r1, _080D6694 @ =0x00003FF0
	ands r1, r0
	ldrh r2, [r6, #4]
	ldr r0, _080D6698 @ =0xFFFFC00F
	ands r0, r2
	orrs r0, r1
	strh r0, [r6, #4]
	ldr r2, [r4, #4]
	ldr r0, _080D669C @ =0x00FFC000
	ands r2, r0
	ldr r0, [r6, #4]
	ldr r1, _080D66A0 @ =0xFF003FFF
	ands r0, r1
	orrs r0, r2
	str r0, [r6, #4]
	adds r2, r6, #7
	movs r3, #1
	adds r1, r4, #7
	movs r5, #1
	rsbs r5, r5, #0
_080D662E:
	ldrb r0, [r1]
	strb r0, [r2]
	adds r2, #1
	adds r1, #1
	subs r3, #1
	cmp r3, r5
	bne _080D662E
	adds r0, r6, #0
	adds r0, #0xc
	adds r1, r4, #0
	adds r1, #0xc
	bl sub_80D3B28
	adds r0, r6, #0
	adds r0, #0x1c
	adds r1, r4, #0
	adds r1, #0x1c
	bl sub_80D3B28
	adds r5, r6, #0
	adds r5, #0x2c
	movs r7, #0xf
	adds r4, #0x2c
	movs r0, #1
	rsbs r0, r0, #0
	mov r8, r0
_080D6662:
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0x3c
	bl sub_80D3994
	adds r5, #0x3c
	adds r4, #0x3c
	subs r7, #1
	cmp r7, r8
	bne _080D6662
	adds r0, r6, #0
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080D6684: .4byte 0x000007FE
_080D6688: .4byte 0xFFFFF801
_080D668C: .4byte 0x1FFFE000
_080D6690: .4byte 0xE0001FFF
_080D6694: .4byte 0x00003FF0
_080D6698: .4byte 0xFFFFC00F
_080D669C: .4byte 0x00FFC000
_080D66A0: .4byte 0xFF003FFF

	thumb_func_start sub_80D66A4
sub_80D66A4: @ 0x080D66A4
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r4, r0, #0
	adds r6, r1, #0
	ldrb r1, [r6]
	lsls r1, r1, #0x1f
	lsrs r1, r1, #0x1f
	ldrb r2, [r4]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r4]
	ldrh r0, [r6]
	ldr r1, _080D67BC @ =0x000007FE
	ands r1, r0
	ldrh r2, [r4]
	ldr r0, _080D67C0 @ =0xFFFFF801
	ands r0, r2
	orrs r0, r1
	strh r0, [r4]
	ldrb r0, [r6, #1]
	movs r1, #8
	ands r1, r0
	ldrb r2, [r4, #1]
	movs r0, #9
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r4, #1]
	ldr r2, [r6]
	movs r0, #0xff
	lsls r0, r0, #0xc
	ands r2, r0
	ldr r0, [r4]
	ldr r1, _080D67C4 @ =0xFFF00FFF
	ands r0, r1
	orrs r0, r2
	str r0, [r4]
	ldrb r2, [r6, #2]
	movs r1, #0x10
	ands r1, r2
	ldrb r3, [r4, #2]
	movs r0, #0x11
	rsbs r0, r0, #0
	ands r0, r3
	orrs r0, r1
	lsrs r2, r2, #5
	lsls r2, r2, #5
	movs r1, #0x1f
	ands r0, r1
	orrs r0, r2
	strb r0, [r4, #2]
	ldrb r2, [r6, #3]
	ldrb r0, [r6, #4]
	movs r3, #3
	ands r0, r3
	lsrs r1, r2, #8
	strb r2, [r4, #3]
	orrs r1, r0
	ands r1, r3
	ldrb r2, [r4, #4]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #8
	adds r1, r6, #0
	adds r1, #8
	bl sub_80D3B28
	movs r0, #0x18
	adds r0, r0, r4
	mov ip, r0
	movs r1, #7
	mov r8, r1
	adds r2, r6, #0
	adds r2, #0x18
	movs r3, #1
	rsbs r3, r3, #0
	mov sb, r3
_080D674E:
	mov r1, ip
	adds r0, r2, #0
	ldm r0!, {r3, r5, r7}
	stm r1!, {r3, r5, r7}
	ldm r0!, {r3, r5, r7}
	stm r1!, {r3, r5, r7}
	ldm r0!, {r3, r5, r7}
	stm r1!, {r3, r5, r7}
	ldm r0!, {r3, r5, r7}
	stm r1!, {r3, r5, r7}
	movs r5, #0x30
	add ip, r5
	adds r2, #0x30
	movs r7, #1
	rsbs r7, r7, #0
	add r8, r7
	cmp r8, sb
	bne _080D674E
	movs r0, #0xcc
	lsls r0, r0, #1
	adds r3, r4, r0
	movs r1, #7
	mov r8, r1
	adds r2, r6, r0
	adds r5, r7, #0
	mov sb, r5
_080D6782:
	adds r1, r3, #0
	adds r0, r2, #0
	ldm r0!, {r5, r7}
	stm r1!, {r5, r7}
	adds r3, #8
	adds r2, #8
	movs r7, #1
	rsbs r7, r7, #0
	add r8, r7
	cmp r8, sb
	bne _080D6782
	movs r0, #0xec
	lsls r0, r0, #1
	adds r2, r4, r0
	movs r3, #1
	adds r1, r6, r0
	adds r5, r7, #0
_080D67A4:
	ldm r1!, {r0}
	stm r2!, {r0}
	subs r3, #1
	cmp r3, r5
	bne _080D67A4
	adds r0, r4, #0
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080D67BC: .4byte 0x000007FE
_080D67C0: .4byte 0xFFFFF801
_080D67C4: .4byte 0xFFF00FFF

	thumb_func_start sub_80D67C8
sub_80D67C8: @ 0x080D67C8
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	bl sub_80D684C
	ldrb r0, [r5, #0x1c]
	strb r0, [r4, #0x1c]
	ldrb r3, [r5, #0x1d]
	lsls r1, r3, #0x1f
	lsrs r1, r1, #0x1f
	ldrb r2, [r4, #0x1d]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #2
	ands r1, r3
	movs r2, #3
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r4, #0x1d]
	ldr r0, [r5, #0x20]
	str r0, [r4, #0x20]
	ldr r0, [r5, #0x24]
	ldr r1, [r5, #0x28]
	str r0, [r4, #0x24]
	str r1, [r4, #0x28]
	ldrh r1, [r5, #0x2c]
	lsls r1, r1, #0x16
	lsrs r1, r1, #0x16
	ldrh r2, [r4, #0x2c]
	ldr r0, _080D6844 @ =0xFFFFFC00
	ands r0, r2
	orrs r0, r1
	strh r0, [r4, #0x2c]
	adds r0, r5, #0
	adds r0, #0x2d
	ldrb r0, [r0]
	adds r3, r4, #0
	adds r3, #0x2d
	movs r1, #0x1c
	ands r1, r0
	ldrb r2, [r3]
	movs r0, #0x1d
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r3]
	ldr r2, [r5, #0x2c]
	movs r0, #0xff
	lsls r0, r0, #0xd
	ands r2, r0
	ldr r0, [r4, #0x2c]
	ldr r1, _080D6848 @ =0xFFE01FFF
	ands r0, r1
	orrs r0, r2
	str r0, [r4, #0x2c]
	adds r0, r4, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080D6844: .4byte 0xFFFFFC00
_080D6848: .4byte 0xFFE01FFF

	thumb_func_start sub_80D684C
sub_80D684C: @ 0x080D684C
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	adds r1, r4, #0
	adds r0, r5, #0
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	adds r0, r4, #0
	adds r0, #8
	adds r1, r5, #0
	adds r1, #8
	bl sub_80D3B28
	ldrh r1, [r5, #0x18]
	lsls r1, r1, #0x16
	lsrs r1, r1, #0x16
	ldrh r2, [r4, #0x18]
	ldr r0, _080D68B8 @ =0xFFFFFC00
	ands r0, r2
	orrs r0, r1
	strh r0, [r4, #0x18]
	ldrb r3, [r5, #0x19]
	movs r1, #4
	ands r1, r3
	ldrb r2, [r4, #0x19]
	movs r0, #5
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #8
	ands r1, r3
	movs r2, #9
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x10
	ands r1, r3
	subs r2, #8
	ands r0, r2
	orrs r0, r1
	strb r0, [r4, #0x19]
	ldr r2, [r5, #0x18]
	movs r0, #0xff
	lsls r0, r0, #0xd
	ands r2, r0
	ldr r0, [r4, #0x18]
	ldr r1, _080D68BC @ =0xFFE01FFF
	ands r0, r1
	orrs r0, r2
	str r0, [r4, #0x18]
	adds r0, r4, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080D68B8: .4byte 0xFFFFFC00
_080D68BC: .4byte 0xFFE01FFF

	thumb_func_start sub_80D68C0
sub_80D68C0: @ 0x080D68C0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r7, r0, #0
	mov r8, r1
	bl sub_80D3B28
	adds r0, r7, #0
	adds r0, #0x10
	mov r1, r8
	adds r1, #0x10
	bl sub_80D3B28
	adds r1, r7, #0
	adds r1, #0x20
	mov r0, r8
	adds r0, #0x20
	ldrb r0, [r0]
	strb r0, [r1]
	adds r1, #4
	mov r0, r8
	adds r0, #0x24
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	adds r3, r7, #0
	adds r3, #0x2c
	movs r1, #5
	mov r2, r8
	adds r2, #0x2c
	movs r4, #1
	rsbs r4, r4, #0
_080D68FE:
	ldm r2!, {r0}
	stm r3!, {r0}
	subs r1, #1
	cmp r1, r4
	bne _080D68FE
	mov r4, r8
	adds r4, #0x44
	ldrb r3, [r4]
	lsls r1, r3, #0x1c
	adds r5, r7, #0
	adds r5, #0x44
	lsrs r1, r1, #0x1c
	ldrb r2, [r5]
	movs r0, #0x10
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x10
	ands r1, r3
	movs r2, #0x11
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x20
	ands r1, r3
	subs r2, #0x10
	ands r0, r2
	orrs r0, r1
	movs r1, #0x40
	ands r1, r3
	subs r2, #0x20
	ands r0, r2
	orrs r0, r1
	strb r0, [r5]
	ldrh r0, [r4]
	movs r1, #0xff
	lsls r1, r1, #7
	ands r1, r0
	ldrh r2, [r5]
	ldr r4, _080D6A68 @ =0xFFFF807F
	adds r0, r4, #0
	ands r0, r2
	orrs r0, r1
	strh r0, [r5]
	mov r0, r8
	ldr r2, [r0, #0x44]
	movs r0, #0xff
	lsls r0, r0, #0xf
	ands r2, r0
	ldr r0, [r7, #0x44]
	ldr r1, _080D6A6C @ =0xFF807FFF
	ands r0, r1
	orrs r0, r2
	str r0, [r7, #0x44]
	mov r0, r8
	adds r0, #0x46
	ldrh r0, [r0]
	adds r3, r7, #0
	adds r3, #0x46
	movs r1, #0xff
	lsls r1, r1, #7
	ands r1, r0
	ldrh r2, [r3]
	adds r0, r4, #0
	ands r0, r2
	orrs r0, r1
	strh r0, [r3]
	mov r0, r8
	adds r0, #0x47
	ldrb r1, [r0]
	lsrs r1, r1, #7
	mov r2, r8
	ldr r3, [r2, #0x48]
	ldr r5, _080D6A70 @ =0x1FFFFFFF
	adds r6, r7, #0
	adds r6, #0x47
	lsls r1, r1, #7
	ldrb r2, [r6]
	movs r0, #0x7f
	ands r0, r2
	orrs r0, r1
	strb r0, [r6]
	ands r3, r5
	ldr r0, [r7, #0x48]
	movs r1, #0xe0
	lsls r1, r1, #0x18
	ands r0, r1
	orrs r0, r3
	str r0, [r7, #0x48]
	mov r0, r8
	adds r0, #0x4b
	ldrb r1, [r0]
	lsrs r1, r1, #5
	adds r3, r7, #0
	adds r3, #0x4b
	lsls r1, r1, #5
	ldrb r2, [r3]
	movs r5, #0x1f
	adds r0, r5, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r3]
	mov r6, r8
	adds r6, #0x4c
	ldrb r1, [r6]
	lsls r1, r1, #0x19
	adds r3, #1
	lsrs r1, r1, #0x19
	ldrb r2, [r3]
	movs r0, #0x80
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r3]
	ldrh r1, [r6]
	movs r0, #0xff
	lsls r0, r0, #7
	ands r0, r1
	ldrh r1, [r3]
	ands r4, r1
	orrs r4, r0
	strh r4, [r3]
	mov r3, r8
	ldr r2, [r3, #0x4c]
	lsrs r2, r2, #0xf
	mov r0, r8
	adds r0, #0x50
	ldrh r4, [r0]
	ldr r6, _080D6A74 @ =0x00001FFF
	ands r4, r6
	lsrs r3, r2, #0x11
	lsls r2, r2, #0xf
	ldr r0, [r7, #0x4c]
	ldr r1, _080D6A78 @ =0x00007FFF
	ands r0, r1
	orrs r0, r2
	str r0, [r7, #0x4c]
	orrs r3, r4
	adds r2, r7, #0
	adds r2, #0x50
	ands r3, r6
	ldrh r1, [r2]
	ldr r0, _080D6A7C @ =0xFFFFE000
	ands r0, r1
	orrs r0, r3
	strh r0, [r2]
	mov r0, r8
	adds r0, #0x51
	ldrb r0, [r0]
	lsrs r0, r0, #5
	adds r2, #1
	lsls r0, r0, #5
	ldrb r1, [r2]
	ands r5, r1
	orrs r5, r0
	strb r5, [r2]
	adds r1, r7, #0
	adds r1, #0x54
	mov r0, r8
	adds r0, #0x54
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	adds r0, r7, #0
	adds r0, #0x5c
	mov r1, r8
	adds r1, #0x5c
	movs r2, #2
	bl sub_80D3994
	adds r0, r7, #0
	adds r0, #0x60
	mov r1, r8
	adds r1, #0x60
	bl sub_80D6A80
	adds r0, r7, #0
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080D6A68: .4byte 0xFFFF807F
_080D6A6C: .4byte 0xFF807FFF
_080D6A70: .4byte 0x1FFFFFFF
_080D6A74: .4byte 0x00001FFF
_080D6A78: .4byte 0x00007FFF
_080D6A7C: .4byte 0xFFFFE000

	thumb_func_start sub_80D6A80
sub_80D6A80: @ 0x080D6A80
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r7, r0, #0
	adds r4, r1, #0
	movs r0, #0
	adds r2, r7, #0
	stm r2!, {r0}
	adds r0, r4, #0
	ldm r0!, {r5}
	lsls r1, r5, #2
	adds r1, r1, r0
	adds r3, r0, #0
	cmp r3, r1
	beq _080D6AB0
_080D6AA0:
	cmp r2, #0
	beq _080D6AA8
	ldr r0, [r3]
	str r0, [r2]
_080D6AA8:
	adds r3, #4
	adds r2, #4
	cmp r3, r1
	bne _080D6AA0
_080D6AB0:
	str r5, [r7]
	movs r0, #0x24
	adds r0, r0, r7
	mov sb, r0
	movs r0, #0
	str r0, [r7, #0x24]
	ldr r1, [r4, #0x24]
	mov r8, r1
	adds r1, r4, #0
	adds r1, #0x28
	mov r2, r8
	lsls r0, r2, #1
	adds r6, r0, r1
	adds r4, r1, #0
	adds r5, r7, #0
	adds r5, #0x28
	cmp r4, r6
	beq _080D6AEA
_080D6AD4:
	cmp r5, #0
	beq _080D6AE2
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl sub_80D3994
_080D6AE2:
	adds r4, #2
	adds r5, #2
	cmp r4, r6
	bne _080D6AD4
_080D6AEA:
	mov r0, r8
	mov r1, sb
	str r0, [r1]
	adds r0, r7, #0
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80D6B00
sub_80D6B00: @ 0x080D6B00
	push {lr}
	adds r3, r0, #0
	ldr r0, [r3, #0x24]
	lsls r0, r0, #1
	adds r0, r0, r3
	adds r0, #0x28
	adds r2, r3, #0
	adds r2, #0x28
	cmp r2, r0
	beq _080D6B1A
_080D6B14:
	adds r2, #2
	cmp r2, r0
	bne _080D6B14
_080D6B1A:
	ldr r0, [r3]
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r3, r0
	adds r0, r3, #4
	cmp r0, r2
	beq _080D6B2E
_080D6B28:
	adds r0, #4
	cmp r0, r2
	bne _080D6B28
_080D6B2E:
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080D6B3C
	adds r0, r3, #0
	bl sub_8000608
_080D6B3C:
	pop {r0}
	bx r0

	thumb_func_start sub_80D6B40
sub_80D6B40: @ 0x080D6B40
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	ldr r0, [r6]
	str r0, [r5]
	ldrb r3, [r6, #4]
	lsls r1, r3, #0x1f
	lsrs r1, r1, #0x1f
	ldrb r2, [r5, #4]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #2
	ands r1, r3
	movs r2, #3
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r5, #4]
	movs r0, #8
	adds r0, r0, r5
	mov ip, r0
	movs r0, #0
	str r0, [r5, #8]
	ldr r7, [r6, #8]
	adds r1, r6, #0
	adds r1, #0xc
	lsls r0, r7, #3
	adds r4, r0, r1
	adds r2, r1, #0
	adds r3, r5, #0
	adds r3, #0xc
	cmp r2, r4
	beq _080D6B9A
_080D6B86:
	cmp r3, #0
	beq _080D6B92
	ldr r0, [r2]
	ldr r1, [r2, #4]
	str r0, [r3]
	str r1, [r3, #4]
_080D6B92:
	adds r2, #8
	adds r3, #8
	cmp r2, r4
	bne _080D6B86
_080D6B9A:
	mov r2, ip
	str r7, [r2]
	movs r0, #0xfc
	adds r0, r0, r5
	mov ip, r0
	adds r1, r6, #0
	adds r1, #0xfc
	movs r0, #0
	mov r2, ip
	str r0, [r2]
	ldr r7, [r1]
	movs r0, #0x80
	lsls r0, r0, #1
	adds r1, r6, r0
	lsls r0, r7, #3
	adds r4, r0, r1
	adds r2, r1, #0
	movs r0, #0x80
	lsls r0, r0, #1
	adds r3, r5, r0
	cmp r2, r4
	beq _080D6BDA
_080D6BC6:
	cmp r3, #0
	beq _080D6BD2
	ldr r0, [r2]
	ldr r1, [r2, #4]
	str r0, [r3]
	str r1, [r3, #4]
_080D6BD2:
	adds r2, #8
	adds r3, #8
	cmp r2, r4
	bne _080D6BC6
_080D6BDA:
	mov r2, ip
	str r7, [r2]
	movs r0, #0x90
	lsls r0, r0, #1
	adds r2, r5, r0
	adds r0, r6, r0
	ldr r1, [r0, #4]
	ldr r0, [r0]
	str r0, [r2]
	str r1, [r2, #4]
	movs r0, #0x94
	lsls r0, r0, #1
	adds r2, r5, r0
	adds r0, r6, r0
	ldr r1, [r0, #4]
	ldr r0, [r0]
	str r0, [r2]
	str r1, [r2, #4]
	adds r0, r5, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80D6C08
sub_80D6C08: @ 0x080D6C08
	push {r4, lr}
	adds r2, r0, #0
	adds r3, r1, #0
	adds r1, r2, #0
	adds r1, #0xfc
	ldr r0, [r1]
	lsls r0, r0, #3
	adds r0, #4
	adds r1, r1, r0
	movs r4, #0x80
	lsls r4, r4, #1
	adds r0, r2, r4
	cmp r0, r1
	beq _080D6C2A
_080D6C24:
	adds r0, #8
	cmp r0, r1
	bne _080D6C24
_080D6C2A:
	adds r1, r2, #0
	adds r1, #8
	ldr r0, [r2, #8]
	lsls r0, r0, #3
	adds r0, #4
	adds r1, r1, r0
	adds r0, r2, #0
	adds r0, #0xc
	cmp r0, r1
	beq _080D6C44
_080D6C3E:
	adds r0, #8
	cmp r0, r1
	bne _080D6C3E
_080D6C44:
	movs r0, #1
	ands r0, r3
	cmp r0, #0
	beq _080D6C52
	adds r0, r2, #0
	bl sub_8000608
_080D6C52:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_80D6C58
sub_80D6C58: @ 0x080D6C58
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	mov sb, r0
	adds r5, r1, #0
	str r0, [sp, #0x10]
	add r1, sp, #4
	mov sl, r1
	ldr r0, _080D6D70 @ =0x00000554
	bl sub_80005D4
	adds r6, r5, #4
	movs r1, #0x14
	adds r1, r1, r5
	mov r8, r1
	adds r4, r5, #0
	adds r4, #0x28
	adds r7, r0, #0
	adds r0, r5, #0
	adds r0, #0x24
	ldrb r5, [r0]
	ldr r0, _080D6D74 @ =gUnknown_080E5BF8
	str r0, [r7]
	ldr r0, _080D6D78 @ =0x000034F4
	bl sub_80005D4
	str r4, [sp]
	adds r1, r6, #0
	mov r2, r8
	adds r3, r5, #0
	bl sub_8010358
	adds r1, r0, #0
	str r1, [r7, #4]
	adds r0, r7, #0
	adds r0, #8
	bl sub_803F804
	movs r0, #0xd9
	lsls r0, r0, #2
	adds r1, r7, r0
	movs r3, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0xda
	lsls r0, r0, #2
	adds r1, r7, r0
	movs r0, #0xab
	str r0, [r1]
	movs r0, #0xdb
	lsls r0, r0, #2
	adds r1, r7, r0
	strb r3, [r1]
	movs r0, #0x1d
	str r0, [r1, #4]
	movs r1, #0xdd
	lsls r1, r1, #2
	adds r2, r7, r1
	ldrb r1, [r2]
	subs r0, #0x3d
	ands r0, r1
	movs r1, #6
	orrs r0, r1
	strb r0, [r2]
	ldrh r1, [r2]
	ldr r0, _080D6D7C @ =0xFFFFF81F
	ands r0, r1
	strh r0, [r2]
	movs r1, #0xde
	lsls r1, r1, #2
	adds r0, r7, r1
	str r3, [r0]
	adds r1, #0x14
	adds r0, r7, r1
	str r3, [r0]
	movs r1, #0x9a
	lsls r1, r1, #3
	adds r0, r7, r1
	str r3, [r0]
	ldr r0, _080D6D80 @ =0x000004DC
	adds r4, r7, r0
	movs r5, #5
	add r1, sp, #8
	mov r8, r1
	movs r6, #1
	rsbs r6, r6, #0
_080D6D0A:
	adds r0, r4, #0
	bl sub_80D4130
	adds r4, #0xc
	subs r5, #1
	cmp r5, r6
	bne _080D6D0A
	ldr r0, _080D6D84 @ =0x00000524
	adds r4, r7, r0
	movs r5, #3
	movs r6, #1
	rsbs r6, r6, #0
_080D6D22:
	adds r0, r4, #0
	bl sub_80D40CC
	adds r4, #0xc
	subs r5, #1
	cmp r5, r6
	bne _080D6D22
	ldr r0, _080D6D88 @ =gUnknown_0300040C
	str r7, [r0]
	mov r1, sl
	str r7, [r1]
	ldr r2, [sp, #4]
	add r0, sp, #4
	str r0, [sp, #8]
	mov r1, r8
	str r2, [r1, #4]
	ldr r1, [sp, #8]
	movs r0, #0
	str r0, [r1]
	ldr r0, [sp, #0x10]
	str r2, [r0]
	ldr r1, [sp, #4]
	cmp r1, #0
	beq _080D6D5E
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D6D5E:
	mov r0, sb
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080D6D70: .4byte 0x00000554
_080D6D74: .4byte gUnknown_080E5BF8
_080D6D78: .4byte 0x000034F4
_080D6D7C: .4byte 0xFFFFF81F
_080D6D80: .4byte 0x000004DC
_080D6D84: .4byte 0x00000524
_080D6D88: .4byte gUnknown_0300040C

	thumb_func_start sub_80D6D8C
sub_80D6D8C: @ 0x080D6D8C
	push {lr}
	bl sub_800080C
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D6D98
sub_80D6D98: @ 0x080D6D98
	push {lr}
	adds r3, r0, #0
	lsls r1, r1, #2
	subs r1, #4
	adds r1, r3, r1
	str r2, [r1]
	cmp r1, r3
	beq _080D6DB2
_080D6DA8:
	adds r0, r1, #0
	subs r1, #4
	str r0, [r1]
	cmp r1, r3
	bne _080D6DA8
_080D6DB2:
	adds r0, r1, #0
	pop {r1}
	bx r1

	thumb_func_start sub_80D6DB8
sub_80D6DB8: @ 0x080D6DB8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r7, r0, #0
	ldr r0, [r7, #0xc]
	ldr r2, [r7]
	subs r0, r0, r2
	asrs r0, r0, #3
	cmp r0, r1
	bhs _080D6E88
	ldr r3, [r7, #4]
	subs r0, r3, r2
	asrs r0, r0, #3
	mov sl, r0
	cmp r2, #0
	beq _080D6E54
	adds r5, r2, #0
	adds r6, r3, #0
	cmp r1, #0
	beq _080D6DFA
	lsls r4, r1, #3
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080D6DFE
	mov r0, r8
	bl sub_80D3BC0
	b _080D6DFE
_080D6DFA:
	movs r0, #0
	mov r8, r0
_080D6DFE:
	mov sb, r0
	mov r4, sb
	mov r0, sl
	lsls r0, r0, #3
	mov sl, r0
	cmp r5, r6
	beq _080D6E28
_080D6E0C:
	cmp r4, #0
	beq _080D6E20
	adds r0, r4, #0
	bl sub_8007128
	ldr r1, [r5, #4]
	adds r0, r4, #0
	bl sub_800745C
	str r0, [r4, #4]
_080D6E20:
	adds r5, #8
	adds r4, #8
	cmp r5, r6
	bne _080D6E0C
_080D6E28:
	mov r6, sb
	ldr r5, [r7, #4]
	ldr r4, [r7]
	cmp r4, r5
	beq _080D6E48
_080D6E32:
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	adds r4, #8
	cmp r4, r5
	bne _080D6E32
_080D6E48:
	ldr r0, [r7]
	cmp r0, #0
	beq _080D6E7A
	bl sub_80D0260
	b _080D6E7A
_080D6E54:
	cmp r1, #0
	beq _080D6E6E
	lsls r4, r1, #3
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080D6E72
	mov r0, r8
	bl sub_80D3BC0
	b _080D6E72
_080D6E6E:
	movs r0, #0
	mov r8, r0
_080D6E72:
	adds r6, r0, #0
	mov r1, sl
	lsls r1, r1, #3
	mov sl, r1
_080D6E7A:
	mov r2, sl
	adds r0, r2, r6
	mov r2, r8
	adds r1, r2, r6
	str r6, [r7]
	str r0, [r7, #4]
	str r1, [r7, #0xc]
_080D6E88:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D6E98
sub_80D6E98: @ 0x080D6E98
	movs r1, #1
	rsbs r1, r1, #0
	str r1, [r0, #4]
	str r1, [r0, #8]
	movs r2, #0
	movs r1, #1
	strb r1, [r0]
	strb r2, [r0, #1]
	bx lr
	.align 2, 0

	thumb_func_start sub_80D6EAC
sub_80D6EAC: @ 0x080D6EAC
	push {r4, lr}
	adds r4, r0, #0
	adds r0, r4, #4
	bl sub_80D6E98
	adds r0, r4, #0
	adds r0, #0x10
	bl sub_80D6E98
	movs r1, #0
	movs r0, #1
	strb r0, [r4]
	strb r1, [r4, #1]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_80D6ECC
sub_80D6ECC: @ 0x080D6ECC
	push {r4, lr}
	adds r4, r0, #0
	adds r0, r4, #4
	bl sub_80D6EAC
	adds r0, r4, #0
	adds r0, #0x20
	bl sub_80D6EAC
	movs r1, #0
	movs r0, #1
	strb r0, [r4]
	strb r1, [r4, #1]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_80D6EEC
sub_80D6EEC: @ 0x080D6EEC
	push {r4, lr}
	adds r4, r0, #0
	adds r0, r4, #4
	bl sub_80D6ECC
	adds r0, r4, #0
	adds r0, #0x40
	bl sub_80D6ECC
	movs r1, #0
	movs r0, #1
	strb r0, [r4]
	strb r1, [r4, #1]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_80D6F0C
sub_80D6F0C: @ 0x080D6F0C
	movs r1, #0
	str r1, [r0, #8]
	str r1, [r0, #4]
	strb r1, [r0]
	movs r1, #1
	strb r1, [r0, #1]
	bx lr
	.align 2, 0

	thumb_func_start sub_80D6F1C
sub_80D6F1C: @ 0x080D6F1C
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x10
	bl sub_80D6F0C
	adds r0, r4, #4
	bl sub_80D6F0C
	movs r0, #0
	strb r0, [r4]
	movs r0, #1
	strb r0, [r4, #1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D6F3C
sub_80D6F3C: @ 0x080D6F3C
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x20
	bl sub_80D6F1C
	adds r0, r4, #4
	bl sub_80D6F1C
	movs r0, #0
	strb r0, [r4]
	movs r0, #1
	strb r0, [r4, #1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D6F5C
sub_80D6F5C: @ 0x080D6F5C
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x40
	bl sub_80D6F3C
	adds r0, r4, #4
	bl sub_80D6F3C
	movs r0, #0
	strb r0, [r4]
	movs r0, #1
	strb r0, [r4, #1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D6F7C
sub_80D6F7C: @ 0x080D6F7C
	push {r4, r5, lr}
	sub sp, #8
	adds r4, r0, #0
	adds r3, r1, #0
	str r2, [sp]
	cmp r3, #0x3f
	bhi _080D700C
	cmp r2, #0
	beq _080D700C
	cmp r3, #0
	bne _080D6F9C
	cmp r2, #0x3f
	bls _080D6F9C
	bl sub_80D6E98
	b _080D700C
_080D6F9C:
	cmp r3, #0x1f
	bhi _080D6FC0
	movs r0, #0x20
	subs r0, r0, r3
	str r0, [sp, #4]
	add r1, sp, #4
	mov r5, sp
	cmp r2, r0
	bls _080D6FB0
	adds r5, r1, #0
_080D6FB0:
	ldr r0, [r5]
	movs r1, #1
	lsls r1, r0
	subs r1, #1
	lsls r1, r3
	ldr r0, [r4, #4]
	orrs r0, r1
	str r0, [r4, #4]
_080D6FC0:
	adds r0, r3, r2
	cmp r0, #0x20
	bls _080D6FE2
	movs r2, #0
	cmp r3, #0x1f
	bls _080D6FD0
	adds r2, r3, #0
	subs r2, #0x20
_080D6FD0:
	subs r0, #0x20
	subs r0, r0, r2
	movs r1, #1
	lsls r1, r0
	subs r1, #1
	lsls r1, r2
	ldr r0, [r4, #8]
	orrs r0, r1
	str r0, [r4, #8]
_080D6FE2:
	movs r2, #0
	movs r1, #0
	ldr r0, [r4, #4]
	adds r0, #1
	cmp r0, #0
	bne _080D6FF0
	movs r1, #1
_080D6FF0:
	cmp r1, #0
	beq _080D7006
	movs r1, #0
	ldr r0, [r4, #8]
	adds r0, #1
	cmp r0, #0
	bne _080D7000
	movs r1, #1
_080D7000:
	cmp r1, #0
	beq _080D7006
	movs r2, #1
_080D7006:
	movs r0, #0
	strb r2, [r4]
	strb r0, [r4, #1]
_080D700C:
	add sp, #8
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80D7014
sub_80D7014: @ 0x080D7014
	push {r4, r5, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r4, r1, #0
	str r2, [sp]
	cmp r4, #0x7f
	bhi _080D708C
	adds r0, r2, #0
	cmp r0, #0
	beq _080D708C
	cmp r4, #0
	bne _080D7038
	cmp r0, #0x7f
	bls _080D7038
	adds r0, r5, #0
	bl sub_80D6EAC
	b _080D708C
_080D7038:
	cmp r4, #0x3f
	bhi _080D7058
	movs r0, #0x40
	subs r0, r0, r4
	str r0, [sp, #4]
	add r3, sp, #4
	ldr r1, [sp]
	mov r2, sp
	cmp r1, r0
	bls _080D704E
	adds r2, r3, #0
_080D704E:
	ldr r2, [r2]
	adds r0, r5, #4
	adds r1, r4, #0
	bl sub_80D6F7C
_080D7058:
	ldr r0, [sp]
	adds r0, r4, r0
	cmp r0, #0x40
	bls _080D7078
	movs r1, #0
	cmp r4, #0x3f
	bls _080D706A
	adds r1, r4, #0
	subs r1, #0x40
_080D706A:
	adds r2, r0, #0
	subs r2, #0x40
	subs r2, r2, r1
	adds r0, r5, #0
	adds r0, #0x10
	bl sub_80D6F7C
_080D7078:
	movs r1, #0
	ldrb r0, [r5, #4]
	cmp r0, #0
	beq _080D7086
	ldrb r0, [r5, #0x10]
	rsbs r0, r0, #0
	lsrs r1, r0, #0x1f
_080D7086:
	movs r0, #0
	strb r1, [r5]
	strb r0, [r5, #1]
_080D708C:
	add sp, #8
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80D7094
sub_80D7094: @ 0x080D7094
	push {r4, r5, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r4, r1, #0
	str r2, [sp]
	cmp r4, #0xff
	bhi _080D7110
	adds r0, r2, #0
	cmp r0, #0
	beq _080D7110
	cmp r4, #0
	bne _080D70B8
	cmp r0, #0xff
	bls _080D70B8
	adds r0, r5, #0
	bl sub_80D6ECC
	b _080D7110
_080D70B8:
	cmp r4, #0x7f
	bhi _080D70D8
	movs r0, #0x80
	subs r0, r0, r4
	str r0, [sp, #4]
	add r3, sp, #4
	ldr r1, [sp]
	mov r2, sp
	cmp r1, r0
	bls _080D70CE
	adds r2, r3, #0
_080D70CE:
	ldr r2, [r2]
	adds r0, r5, #4
	adds r1, r4, #0
	bl sub_80D7014
_080D70D8:
	ldr r0, [sp]
	adds r0, r4, r0
	cmp r0, #0x80
	bls _080D70F8
	movs r1, #0
	cmp r4, #0x7f
	bls _080D70EA
	adds r1, r4, #0
	subs r1, #0x80
_080D70EA:
	adds r2, r0, #0
	subs r2, #0x80
	subs r2, r2, r1
	adds r0, r5, #0
	adds r0, #0x20
	bl sub_80D7014
_080D70F8:
	movs r1, #0
	ldrb r0, [r5, #4]
	cmp r0, #0
	beq _080D710A
	adds r0, r5, #0
	adds r0, #0x20
	ldrb r0, [r0]
	rsbs r0, r0, #0
	lsrs r1, r0, #0x1f
_080D710A:
	movs r0, #0
	strb r1, [r5]
	strb r0, [r5, #1]
_080D7110:
	add sp, #8
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80D7118
sub_80D7118: @ 0x080D7118
	push {r4, r5, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r4, r1, #0
	str r2, [sp]
	ldr r1, _080D7140 @ =0x000001FF
	cmp r4, r1
	bhi _080D71A0
	adds r0, r2, #0
	cmp r0, #0
	beq _080D71A0
	cmp r4, #0
	bne _080D7144
	cmp r0, r1
	bls _080D7144
	adds r0, r5, #0
	bl sub_80D6EEC
	b _080D71A0
	.align 2, 0
_080D7140: .4byte 0x000001FF
_080D7144:
	cmp r4, #0xff
	bhi _080D7166
	movs r0, #0x80
	lsls r0, r0, #1
	subs r0, r0, r4
	str r0, [sp, #4]
	add r3, sp, #4
	ldr r1, [sp]
	mov r2, sp
	cmp r1, r0
	bls _080D715C
	adds r2, r3, #0
_080D715C:
	ldr r2, [r2]
	adds r0, r5, #4
	adds r1, r4, #0
	bl sub_80D7094
_080D7166:
	ldr r0, [sp]
	adds r2, r4, r0
	movs r0, #0x80
	lsls r0, r0, #1
	cmp r2, r0
	bls _080D7188
	movs r1, #0
	cmp r4, #0xff
	bls _080D717C
	ldr r3, _080D71A8 @ =0xFFFFFF00
	adds r1, r4, r3
_080D717C:
	subs r2, r2, r0
	subs r2, r2, r1
	adds r0, r5, #0
	adds r0, #0x40
	bl sub_80D7094
_080D7188:
	movs r1, #0
	ldrb r0, [r5, #4]
	cmp r0, #0
	beq _080D719A
	adds r0, r5, #0
	adds r0, #0x40
	ldrb r0, [r0]
	rsbs r0, r0, #0
	lsrs r1, r0, #0x1f
_080D719A:
	movs r0, #0
	strb r1, [r5]
	strb r0, [r5, #1]
_080D71A0:
	add sp, #8
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080D71A8: .4byte 0xFFFFFF00

	thumb_func_start sub_80D71AC
sub_80D71AC: @ 0x080D71AC
	push {r4, r5, lr}
	sub sp, #8
	adds r4, r0, #0
	adds r3, r1, #0
	str r2, [sp]
	cmp r3, #0x3f
	bhi _080D7238
	cmp r2, #0
	beq _080D7238
	cmp r3, #0
	bne _080D71CC
	cmp r2, #0x3f
	bls _080D71CC
	bl sub_80D6F0C
	b _080D7238
_080D71CC:
	cmp r3, #0x1f
	bhi _080D71F0
	movs r0, #0x20
	subs r0, r0, r3
	str r0, [sp, #4]
	add r1, sp, #4
	mov r5, sp
	cmp r2, r0
	bls _080D71E0
	adds r5, r1, #0
_080D71E0:
	ldr r0, [r5]
	movs r1, #1
	lsls r1, r0
	subs r1, #1
	lsls r1, r3
	ldr r0, [r4, #4]
	bics r0, r1
	str r0, [r4, #4]
_080D71F0:
	adds r0, r3, r2
	cmp r0, #0x20
	bls _080D7212
	movs r2, #0
	cmp r3, #0x1f
	bls _080D7200
	adds r2, r3, #0
	subs r2, #0x20
_080D7200:
	subs r0, #0x20
	subs r0, r0, r2
	movs r1, #1
	lsls r1, r0
	subs r1, #1
	lsls r1, r2
	ldr r0, [r4, #8]
	bics r0, r1
	str r0, [r4, #8]
_080D7212:
	movs r0, #0
	strb r0, [r4]
	movs r2, #0
	movs r1, #0
	ldr r0, [r4, #4]
	cmp r0, #0
	bne _080D7222
	movs r1, #1
_080D7222:
	cmp r1, #0
	beq _080D7236
	movs r1, #0
	ldr r0, [r4, #8]
	cmp r0, #0
	bne _080D7230
	movs r1, #1
_080D7230:
	cmp r1, #0
	beq _080D7236
	movs r2, #1
_080D7236:
	strb r2, [r4, #1]
_080D7238:
	add sp, #8
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80D7240
sub_80D7240: @ 0x080D7240
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r4, r1, #0
	str r2, [sp]
	cmp r4, #0x7f
	bhi _080D72BA
	adds r0, r2, #0
	cmp r0, #0
	beq _080D72BA
	cmp r4, #0
	bne _080D7264
	cmp r0, #0x7f
	bls _080D7264
	adds r0, r5, #0
	bl sub_80D6F1C
	b _080D72BA
_080D7264:
	adds r6, r5, #4
	cmp r4, #0x3f
	bhi _080D7286
	movs r0, #0x40
	subs r0, r0, r4
	str r0, [sp, #4]
	add r3, sp, #4
	ldr r1, [sp]
	mov r2, sp
	cmp r1, r0
	bls _080D727C
	adds r2, r3, #0
_080D727C:
	ldr r2, [r2]
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_80D71AC
_080D7286:
	ldr r0, [sp]
	adds r0, r4, r0
	cmp r0, #0x40
	bls _080D72A6
	movs r1, #0
	cmp r4, #0x3f
	bls _080D7298
	adds r1, r4, #0
	subs r1, #0x40
_080D7298:
	adds r2, r0, #0
	subs r2, #0x40
	subs r2, r2, r1
	adds r0, r5, #0
	adds r0, #0x10
	bl sub_80D71AC
_080D72A6:
	movs r0, #0
	strb r0, [r5]
	movs r1, #0
	ldrb r0, [r6, #1]
	cmp r0, #0
	beq _080D72B8
	ldrb r0, [r5, #0x11]
	rsbs r0, r0, #0
	lsrs r1, r0, #0x1f
_080D72B8:
	strb r1, [r5, #1]
_080D72BA:
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D72C4
sub_80D72C4: @ 0x080D72C4
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r4, r1, #0
	str r2, [sp]
	cmp r4, #0xff
	bhi _080D7342
	adds r0, r2, #0
	cmp r0, #0
	beq _080D7342
	cmp r4, #0
	bne _080D72E8
	cmp r0, #0xff
	bls _080D72E8
	adds r0, r5, #0
	bl sub_80D6F3C
	b _080D7342
_080D72E8:
	adds r6, r5, #4
	cmp r4, #0x7f
	bhi _080D730A
	movs r0, #0x80
	subs r0, r0, r4
	str r0, [sp, #4]
	add r3, sp, #4
	ldr r1, [sp]
	mov r2, sp
	cmp r1, r0
	bls _080D7300
	adds r2, r3, #0
_080D7300:
	ldr r2, [r2]
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_80D7240
_080D730A:
	ldr r0, [sp]
	adds r0, r4, r0
	cmp r0, #0x80
	bls _080D732A
	movs r1, #0
	cmp r4, #0x7f
	bls _080D731C
	adds r1, r4, #0
	subs r1, #0x80
_080D731C:
	adds r2, r0, #0
	subs r2, #0x80
	subs r2, r2, r1
	adds r0, r5, #0
	adds r0, #0x20
	bl sub_80D7240
_080D732A:
	movs r0, #0
	strb r0, [r5]
	movs r1, #0
	ldrb r0, [r6, #1]
	cmp r0, #0
	beq _080D7340
	adds r0, r5, #0
	adds r0, #0x20
	ldrb r0, [r0, #1]
	rsbs r0, r0, #0
	lsrs r1, r0, #0x1f
_080D7340:
	strb r1, [r5, #1]
_080D7342:
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D734C
sub_80D734C: @ 0x080D734C
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r4, r1, #0
	str r2, [sp]
	ldr r1, _080D7374 @ =0x000001FF
	cmp r4, r1
	bhi _080D73D6
	adds r0, r2, #0
	cmp r0, #0
	beq _080D73D6
	cmp r4, #0
	bne _080D7378
	cmp r0, r1
	bls _080D7378
	adds r0, r5, #0
	bl sub_80D6F5C
	b _080D73D6
	.align 2, 0
_080D7374: .4byte 0x000001FF
_080D7378:
	adds r6, r5, #4
	cmp r4, #0xff
	bhi _080D739C
	movs r0, #0x80
	lsls r0, r0, #1
	subs r0, r0, r4
	str r0, [sp, #4]
	add r3, sp, #4
	ldr r1, [sp]
	mov r2, sp
	cmp r1, r0
	bls _080D7392
	adds r2, r3, #0
_080D7392:
	ldr r2, [r2]
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_80D72C4
_080D739C:
	ldr r0, [sp]
	adds r2, r4, r0
	movs r0, #0x80
	lsls r0, r0, #1
	cmp r2, r0
	bls _080D73BE
	movs r1, #0
	cmp r4, #0xff
	bls _080D73B2
	ldr r3, _080D73E0 @ =0xFFFFFF00
	adds r1, r4, r3
_080D73B2:
	subs r2, r2, r0
	subs r2, r2, r1
	adds r0, r5, #0
	adds r0, #0x40
	bl sub_80D72C4
_080D73BE:
	movs r0, #0
	strb r0, [r5]
	movs r1, #0
	ldrb r0, [r6, #1]
	cmp r0, #0
	beq _080D73D4
	adds r0, r5, #0
	adds r0, #0x40
	ldrb r0, [r0, #1]
	rsbs r0, r0, #0
	lsrs r1, r0, #0x1f
_080D73D4:
	strb r1, [r5, #1]
_080D73D6:
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080D73E0: .4byte 0xFFFFFF00

	thumb_func_start sub_80D73E4
sub_80D73E4: @ 0x080D73E4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r6, r0, #0
	adds r7, r1, #0
	cmp r7, #5
	bhi _080D745E
	movs r0, #0
	mov r8, r0
	adds r4, r6, #4
_080D73F8:
	movs r1, #0
	ldr r0, [r4]
	adds r0, #1
	cmp r0, #0
	bne _080D7404
	movs r1, #1
_080D7404:
	adds r5, r1, #0
	cmp r5, #0
	bne _080D7450
	adds r0, r4, #0
	adds r1, r7, #0
	bl sub_80077DC
	adds r2, r0, #0
	movs r0, #0
	cmp r2, #0x1f
	bhi _080D741C
	movs r0, #1
_080D741C:
	cmp r0, #0
	beq _080D7450
	strb r5, [r6, #1]
	movs r3, #0
	movs r1, #0
	ldr r0, [r6, #4]
	adds r0, #1
	cmp r0, #0
	bne _080D7430
	movs r1, #1
_080D7430:
	cmp r1, #0
	beq _080D7446
	movs r1, #0
	ldr r0, [r6, #8]
	adds r0, #1
	cmp r0, #0
	bne _080D7440
	movs r1, #1
_080D7440:
	cmp r1, #0
	beq _080D7446
	movs r3, #1
_080D7446:
	strb r3, [r6]
	mov r1, r8
	lsls r0, r1, #5
	orrs r0, r2
	b _080D7474
_080D7450:
	adds r4, #4
	movs r0, #1
	add r8, r0
	mov r1, r8
	cmp r1, #1
	ble _080D73F8
	b _080D7472
_080D745E:
	cmp r7, #6
	bne _080D7472
	ldrb r0, [r6, #1]
	cmp r0, #0
	beq _080D7472
	adds r0, r6, #0
	bl sub_80D6E98
	movs r0, #0
	b _080D7474
_080D7472:
	movs r0, #0x40
_080D7474:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80D7480
sub_80D7480: @ 0x080D7480
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r6, r0, #0
	adds r7, r1, #0
	cmp r7, #6
	bhi _080D74D2
	movs r3, #0
	adds r4, r6, #4
_080D7490:
	ldrb r5, [r4]
	cmp r5, #0
	bne _080D74C8
	adds r0, r4, #0
	adds r1, r7, #0
	str r3, [sp]
	bl sub_80D73E4
	adds r2, r0, #0
	movs r0, #0
	ldr r3, [sp]
	cmp r2, #0x3f
	bhi _080D74AC
	movs r0, #1
_080D74AC:
	cmp r0, #0
	beq _080D74C8
	strb r5, [r6, #1]
	movs r1, #0
	ldrb r0, [r6, #4]
	cmp r0, #0
	beq _080D74C0
	ldrb r0, [r6, #0x10]
	rsbs r0, r0, #0
	lsrs r1, r0, #0x1f
_080D74C0:
	strb r1, [r6]
	lsls r0, r3, #6
	orrs r0, r2
	b _080D74E8
_080D74C8:
	adds r4, #0xc
	adds r3, #1
	cmp r3, #1
	ble _080D7490
	b _080D74E6
_080D74D2:
	cmp r7, #7
	bne _080D74E6
	ldrb r0, [r6, #1]
	cmp r0, #0
	beq _080D74E6
	adds r0, r6, #0
	bl sub_80D6EAC
	movs r0, #0
	b _080D74E8
_080D74E6:
	movs r0, #0x80
_080D74E8:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_80D74F0
sub_80D74F0: @ 0x080D74F0
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r6, r0, #0
	adds r7, r1, #0
	cmp r7, #7
	bhi _080D7546
	movs r3, #0
	adds r4, r6, #4
_080D7500:
	ldrb r5, [r4]
	cmp r5, #0
	bne _080D753C
	adds r0, r4, #0
	adds r1, r7, #0
	str r3, [sp]
	bl sub_80D7480
	adds r2, r0, #0
	movs r0, #0
	ldr r3, [sp]
	cmp r2, #0x7f
	bhi _080D751C
	movs r0, #1
_080D751C:
	cmp r0, #0
	beq _080D753C
	strb r5, [r6, #1]
	movs r1, #0
	ldrb r0, [r6, #4]
	cmp r0, #0
	beq _080D7534
	adds r0, r6, #0
	adds r0, #0x20
	ldrb r0, [r0]
	rsbs r0, r0, #0
	lsrs r1, r0, #0x1f
_080D7534:
	strb r1, [r6]
	lsls r0, r3, #7
	orrs r0, r2
	b _080D755E
_080D753C:
	adds r4, #0x1c
	adds r3, #1
	cmp r3, #1
	ble _080D7500
	b _080D755A
_080D7546:
	cmp r7, #8
	bne _080D755A
	ldrb r0, [r6, #1]
	cmp r0, #0
	beq _080D755A
	adds r0, r6, #0
	bl sub_80D6ECC
	movs r0, #0
	b _080D755E
_080D755A:
	movs r0, #0x80
	lsls r0, r0, #1
_080D755E:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80D7568
sub_80D7568: @ 0x080D7568
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r6, r0, #0
	adds r7, r1, #0
	cmp r7, #8
	bhi _080D75BE
	movs r3, #0
	adds r4, r6, #4
_080D7578:
	ldrb r5, [r4]
	cmp r5, #0
	bne _080D75B4
	adds r0, r4, #0
	adds r1, r7, #0
	str r3, [sp]
	bl sub_80D74F0
	adds r2, r0, #0
	movs r0, #0
	ldr r3, [sp]
	cmp r2, #0xff
	bhi _080D7594
	movs r0, #1
_080D7594:
	cmp r0, #0
	beq _080D75B4
	strb r5, [r6, #1]
	movs r1, #0
	ldrb r0, [r6, #4]
	cmp r0, #0
	beq _080D75AC
	adds r0, r6, #0
	adds r0, #0x40
	ldrb r0, [r0]
	rsbs r0, r0, #0
	lsrs r1, r0, #0x1f
_080D75AC:
	strb r1, [r6]
	lsls r0, r3, #8
	orrs r0, r2
	b _080D75D6
_080D75B4:
	adds r4, #0x3c
	adds r3, #1
	cmp r3, #1
	ble _080D7578
	b _080D75D2
_080D75BE:
	cmp r7, #9
	bne _080D75D2
	ldrb r0, [r6, #1]
	cmp r0, #0
	beq _080D75D2
	adds r0, r6, #0
	bl sub_80D6EEC
	movs r0, #0
	b _080D75D6
_080D75D2:
	movs r0, #0x80
	lsls r0, r0, #2
_080D75D6:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80D75E0
sub_80D75E0: @ 0x080D75E0
	push {r4, lr}
	adds r4, r0, #0
	cmp r2, #5
	bhi _080D7622
	movs r0, #0x20
	ands r0, r1
	adds r3, r4, #4
	cmp r0, #0
	beq _080D75F4
	adds r3, #4
_080D75F4:
	adds r0, r3, #0
	bl sub_8007844
	movs r0, #0
	strb r0, [r4]
	movs r2, #0
	movs r1, #0
	ldr r0, [r4, #4]
	cmp r0, #0
	bne _080D760A
	movs r1, #1
_080D760A:
	cmp r1, #0
	beq _080D761E
	movs r1, #0
	ldr r0, [r4, #8]
	cmp r0, #0
	bne _080D7618
	movs r1, #1
_080D7618:
	cmp r1, #0
	beq _080D761E
	movs r2, #1
_080D761E:
	strb r2, [r4, #1]
	b _080D762C
_080D7622:
	cmp r2, #6
	bne _080D762C
	adds r0, r4, #0
	bl sub_80D6F0C
_080D762C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D7634
sub_80D7634: @ 0x080D7634
	push {r4, r5, lr}
	adds r4, r0, #0
	cmp r2, #6
	bhi _080D7668
	movs r0, #0x40
	ands r0, r1
	adds r5, r4, #4
	adds r3, r5, #0
	cmp r0, #0
	beq _080D764C
	adds r3, r4, #0
	adds r3, #0x10
_080D764C:
	adds r0, r3, #0
	bl sub_80D75E0
	movs r0, #0
	strb r0, [r4]
	movs r1, #0
	ldrb r0, [r5, #1]
	cmp r0, #0
	beq _080D7664
	ldrb r0, [r4, #0x11]
	rsbs r0, r0, #0
	lsrs r1, r0, #0x1f
_080D7664:
	strb r1, [r4, #1]
	b _080D7672
_080D7668:
	cmp r2, #7
	bne _080D7672
	adds r0, r4, #0
	bl sub_80D6F1C
_080D7672:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80D7678
sub_80D7678: @ 0x080D7678
	push {r4, r5, lr}
	adds r4, r0, #0
	cmp r2, #7
	bhi _080D76B0
	movs r0, #0x80
	ands r0, r1
	adds r5, r4, #4
	adds r3, r5, #0
	cmp r0, #0
	beq _080D7690
	adds r3, r4, #0
	adds r3, #0x20
_080D7690:
	adds r0, r3, #0
	bl sub_80D7634
	movs r0, #0
	strb r0, [r4]
	movs r1, #0
	ldrb r0, [r5, #1]
	cmp r0, #0
	beq _080D76AC
	adds r0, r4, #0
	adds r0, #0x20
	ldrb r0, [r0, #1]
	rsbs r0, r0, #0
	lsrs r1, r0, #0x1f
_080D76AC:
	strb r1, [r4, #1]
	b _080D76BA
_080D76B0:
	cmp r2, #8
	bne _080D76BA
	adds r0, r4, #0
	bl sub_80D6F3C
_080D76BA:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80D76C0
sub_80D76C0: @ 0x080D76C0
	push {r4, r5, lr}
	adds r4, r0, #0
	cmp r2, #8
	bhi _080D76FA
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	adds r5, r4, #4
	adds r3, r5, #0
	cmp r0, #0
	beq _080D76DA
	adds r3, r4, #0
	adds r3, #0x40
_080D76DA:
	adds r0, r3, #0
	bl sub_80D7678
	movs r0, #0
	strb r0, [r4]
	movs r1, #0
	ldrb r0, [r5, #1]
	cmp r0, #0
	beq _080D76F6
	adds r0, r4, #0
	adds r0, #0x40
	ldrb r0, [r0, #1]
	rsbs r0, r0, #0
	lsrs r1, r0, #0x1f
_080D76F6:
	strb r1, [r4, #1]
	b _080D7704
_080D76FA:
	cmp r2, #9
	bne _080D7704
	adds r0, r4, #0
	bl sub_80D6F5C
_080D7704:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D770C
sub_80D770C: @ 0x080D770C
	push {lr}
	adds r3, r0, #0
	lsls r1, r1, #3
	subs r1, #8
	adds r1, r3, r1
	str r2, [r1]
	cmp r1, r3
	beq _080D7726
_080D771C:
	adds r0, r1, #0
	subs r1, #8
	str r0, [r1]
	cmp r1, r3
	bne _080D771C
_080D7726:
	adds r0, r1, #0
	pop {r1}
	bx r1

	thumb_func_start sub_80D772C
sub_80D772C: @ 0x080D772C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r7, r0, #0
	ldr r0, [r7, #0xc]
	ldr r2, [r7]
	subs r0, r0, r2
	asrs r0, r0, #3
	cmp r0, r1
	bhs _080D77FC
	ldr r3, [r7, #4]
	subs r0, r3, r2
	asrs r0, r0, #3
	mov sl, r0
	cmp r2, #0
	beq _080D77C8
	adds r5, r2, #0
	adds r6, r3, #0
	cmp r1, #0
	beq _080D776E
	lsls r4, r1, #3
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080D7772
	mov r0, r8
	bl sub_80D3BC0
	b _080D7772
_080D776E:
	movs r0, #0
	mov r8, r0
_080D7772:
	mov sb, r0
	mov r4, sb
	mov r0, sl
	lsls r0, r0, #3
	mov sl, r0
	cmp r5, r6
	beq _080D779C
_080D7780:
	cmp r4, #0
	beq _080D7794
	adds r0, r4, #0
	bl sub_8007874
	ldr r1, [r5, #4]
	adds r0, r4, #0
	bl sub_8007CD8
	str r0, [r4, #4]
_080D7794:
	adds r5, #8
	adds r4, #8
	cmp r5, r6
	bne _080D7780
_080D779C:
	mov r6, sb
	ldr r5, [r7, #4]
	ldr r4, [r7]
	cmp r4, r5
	beq _080D77BC
_080D77A6:
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	adds r4, #8
	cmp r4, r5
	bne _080D77A6
_080D77BC:
	ldr r0, [r7]
	cmp r0, #0
	beq _080D77EE
	bl sub_80D0260
	b _080D77EE
_080D77C8:
	cmp r1, #0
	beq _080D77E2
	lsls r4, r1, #3
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080D77E6
	mov r0, r8
	bl sub_80D3BC0
	b _080D77E6
_080D77E2:
	movs r0, #0
	mov r8, r0
_080D77E6:
	adds r6, r0, #0
	mov r1, sl
	lsls r1, r1, #3
	mov sl, r1
_080D77EE:
	mov r2, sl
	adds r0, r2, r6
	mov r2, r8
	adds r1, r2, r6
	str r6, [r7]
	str r0, [r7, #4]
	str r1, [r7, #0xc]
_080D77FC:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D780C
sub_80D780C: @ 0x080D780C
	push {lr}
	ldr r0, [r0, #0xc]
	bl sub_80096F0
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80D781C
sub_80D781C: @ 0x080D781C
	push {lr}
	ldr r0, [r0, #0xc]
	bl sub_8009864
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80D782C
sub_80D782C: @ 0x080D782C
	push {r4, lr}
	ldr r4, [r0, #0xc]
	movs r2, #0
	ldr r0, [r4]
	ldr r1, [r4, #4]
	cmp r0, r1
	bne _080D783C
	movs r2, #1
_080D783C:
	cmp r2, #0
	bne _080D785E
	subs r1, r1, r0
	asrs r1, r1, #4
	lsls r1, r1, #4
	adds r1, r0, r1
	bl sub_8008FE4
	ldr r0, [r4]
	adds r2, r0, #0
	ldr r1, [r4, #4]
	cmp r2, r1
	beq _080D785C
_080D7856:
	adds r0, #0x10
	cmp r0, r1
	bne _080D7856
_080D785C:
	str r2, [r4, #4]
_080D785E:
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80D7868
sub_80D7868: @ 0x080D7868
	push {lr}
	bl sub_80098AC
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D7874
sub_80D7874: @ 0x080D7874
	push {lr}
	bl sub_80098AC
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D7880
sub_80D7880: @ 0x080D7880
	push {lr}
	bl sub_80098AC
	pop {r0}
	bx r0
	.align 2, 0
_080D788C:
	.byte 0x70, 0xB5, 0x81, 0xB0
	.byte 0x06, 0x1C, 0x6D, 0x46, 0x01, 0x24, 0x01, 0x20, 0x28, 0xF7, 0x46, 0xFE, 0x04, 0x40, 0x2C, 0x80
	.byte 0x30, 0x1C, 0x32, 0xF7, 0x6F, 0xF8, 0x69, 0x46, 0x08, 0x88, 0x00, 0x28, 0x01, 0xD0, 0x28, 0xF7
	.byte 0x21, 0xFE, 0x01, 0xB0, 0x70, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x30, 0xB5, 0x04, 0x1C
	.byte 0x0D, 0x1C, 0x06, 0x48, 0xA0, 0x60, 0x20, 0x1C, 0x31, 0xF7, 0x50, 0xFE, 0x20, 0x1C, 0x29, 0x1C
	.byte 0x32, 0xF7, 0x04, 0xF8, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x90, 0x5B, 0x0E, 0x08

	thumb_func_start sub_80D78E0
sub_80D78E0: @ 0x080D78E0
	push {lr}
	ldr r0, _080D78F4 @ =gUnknown_03000410
	ldr r0, [r0]
	ldr r0, [r0]
	ldr r1, [r0, #8]
	ldr r1, [r1, #8]
	bl sub_80D3910
	pop {r0}
	bx r0
	.align 2, 0
_080D78F4: .4byte gUnknown_03000410

	thumb_func_start sub_80D78F8
sub_80D78F8: @ 0x080D78F8
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r0, _080D7934 @ =gUnknown_080E5B3C
	str r0, [r5, #0x14]
	ldr r0, [r1]
	str r0, [r5]
	movs r4, #1
	movs r0, #1
	bl sub_8000528
	ands r4, r0
	strh r4, [r5, #4]
	ldr r0, _080D7938 @ =gUnknown_03000410
	ldr r1, [r0]
	str r5, [r0]
	str r1, [r5, #8]
	ldr r0, _080D793C @ =gUnknown_080E5B48
	str r0, [r5, #0xc]
	ldr r1, _080D7940 @ =sub_80D78E0
	movs r0, #0
	bl sub_80D100C
	str r0, [r5, #0x10]
	movs r0, #1
	bl sub_800050C
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080D7934: .4byte gUnknown_080E5B3C
_080D7938: .4byte gUnknown_03000410
_080D793C: .4byte gUnknown_080E5B48
_080D7940: .4byte sub_80D78E0

	thumb_func_start sub_80D7944
sub_80D7944: @ 0x080D7944
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _080D7984 @ =gUnknown_080E5B3C
	str r0, [r4, #0x14]
	movs r0, #1
	bl sub_8000528
	ldr r1, [r4, #0x10]
	movs r0, #0
	bl sub_80D100C
	ldr r0, _080D7988 @ =gUnknown_080E5B54
	str r0, [r4, #0xc]
	ldr r1, _080D798C @ =gUnknown_03000410
	ldr r0, [r4, #8]
	str r0, [r1]
	ldrh r0, [r4, #4]
	cmp r0, #0
	beq _080D7970
	bl sub_80004F4
_080D7970:
	movs r0, #1
	ands r5, r0
	cmp r5, #0
	beq _080D797E
	adds r0, r4, #0
	bl sub_8000608
_080D797E:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080D7984: .4byte gUnknown_080E5B3C
_080D7988: .4byte gUnknown_080E5B54
_080D798C: .4byte gUnknown_03000410
_080D7990:
	.byte 0x70, 0xB5, 0x46, 0x46, 0x40, 0xB4, 0x81, 0xB0, 0x06, 0x1C, 0x88, 0x46, 0x6D, 0x46, 0x01, 0x24
	.byte 0x01, 0x20, 0x28, 0xF7, 0xC1, 0xFD, 0x04, 0x40, 0x2C, 0x80, 0x30, 0x1C, 0x41, 0x46, 0x31, 0xF7
	.byte 0xC7, 0xFF, 0x69, 0x46, 0x08, 0x88, 0x00, 0x28, 0x01, 0xD0, 0x28, 0xF7, 0x9B, 0xFD, 0x01, 0xB0
	.byte 0x08, 0xBC, 0x98, 0x46, 0x70, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00

	thumb_func_start sub_80D79CC
sub_80D79CC: @ 0x080D79CC
	push {r4, r5, lr}
	adds r5, r1, #0
	adds r4, r0, #0
	subs r4, #0x1c
	ldr r1, _080D79F0 @ =gUnknown_080E5B0C
	str r1, [r4, #0x30]
	ldr r1, _080D79F4 @ =gUnknown_080E5B18
	str r1, [r4, #8]
	movs r1, #0
	bl sub_80D7944
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800959C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080D79F0: .4byte gUnknown_080E5B0C
_080D79F4: .4byte gUnknown_080E5B18
_080D79F8:
	.byte 0x70, 0xB5, 0x46, 0x46, 0x40, 0xB4, 0x81, 0xB0
	.byte 0x06, 0x1C, 0x88, 0x46, 0x6D, 0x46, 0x01, 0x24, 0x01, 0x20, 0x28, 0xF7, 0x8D, 0xFD, 0x04, 0x40
	.byte 0x2C, 0x80, 0x30, 0x1C, 0x41, 0x46, 0x31, 0xF7, 0xA7, 0xFF, 0x69, 0x46, 0x08, 0x88, 0x00, 0x28
	.byte 0x01, 0xD0, 0x28, 0xF7, 0x67, 0xFD, 0x01, 0xB0, 0x08, 0xBC, 0x98, 0x46, 0x70, 0xBC, 0x01, 0xBC
	.byte 0x00, 0x47, 0x00, 0x00, 0x70, 0xB5, 0x46, 0x46, 0x40, 0xB4, 0x81, 0xB0, 0x06, 0x1C, 0x88, 0x46
	.byte 0x6D, 0x46, 0x01, 0x24, 0x01, 0x20, 0x28, 0xF7, 0x6F, 0xFD, 0x04, 0x40, 0x2C, 0x80, 0x30, 0x1C
	.byte 0x41, 0x46, 0x31, 0xF7, 0xAD, 0xFF, 0x69, 0x46, 0x08, 0x88, 0x00, 0x28, 0x01, 0xD0, 0x28, 0xF7
	.byte 0x49, 0xFD, 0x01, 0xB0, 0x08, 0xBC, 0x98, 0x46, 0x70, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
	.byte 0x70, 0xB5, 0x46, 0x46, 0x40, 0xB4, 0x81, 0xB0, 0x06, 0x1C, 0x88, 0x46, 0x6D, 0x46, 0x01, 0x24
	.byte 0x01, 0x20, 0x28, 0xF7, 0x51, 0xFD, 0x04, 0x40, 0x2C, 0x80, 0x30, 0x1C, 0x41, 0x46, 0x31, 0xF7
	.byte 0xA1, 0xFF, 0x69, 0x46, 0x08, 0x88, 0x00, 0x28, 0x01, 0xD0, 0x28, 0xF7, 0x2B, 0xFD, 0x01, 0xB0
	.byte 0x08, 0xBC, 0x98, 0x46, 0x70, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00

	thumb_func_start sub_80D7AAC
sub_80D7AAC: @ 0x080D7AAC
	push {lr}
	adds r3, r0, #0
	ldr r0, _080D7ACC @ =gUnknown_080E5B54
	str r0, [r3, #4]
	ldr r2, _080D7AD0 @ =gUnknown_03000410
	ldr r0, [r3]
	str r0, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080D7AC8
	adds r0, r3, #0
	bl sub_8000608
_080D7AC8:
	pop {r0}
	bx r0
	.align 2, 0
_080D7ACC: .4byte gUnknown_080E5B54
_080D7AD0: .4byte gUnknown_03000410

	thumb_func_start sub_80D7AD4
sub_80D7AD4: @ 0x080D7AD4
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _080D7AFC @ =gUnknown_080E5B0C
	str r0, [r4, #0x30]
	ldr r0, _080D7B00 @ =gUnknown_080E5B18
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x1c
	movs r1, #0
	bl sub_80D7944
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800959C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080D7AFC: .4byte gUnknown_080E5B0C
_080D7B00: .4byte gUnknown_080E5B18

	thumb_func_start sub_80D7B04
sub_80D7B04: @ 0x080D7B04
	push {lr}
	adds r3, r0, #0
	ldr r0, _080D7B24 @ =gUnknown_080E5B54
	str r0, [r3, #4]
	ldr r2, _080D7B28 @ =gUnknown_03000410
	ldr r0, [r3]
	str r0, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080D7B20
	adds r0, r3, #0
	bl sub_8000608
_080D7B20:
	pop {r0}
	bx r0
	.align 2, 0
_080D7B24: .4byte gUnknown_080E5B54
_080D7B28: .4byte gUnknown_03000410

	thumb_func_start sub_80D7B2C
sub_80D7B2C: @ 0x080D7B2C
	push {lr}
	bl sub_80098AC
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D7B38
sub_80D7B38: @ 0x080D7B38
	push {lr}
	bl sub_80098AC
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D7B44
sub_80D7B44: @ 0x080D7B44
	push {lr}
	bl sub_80098AC
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D7B50
sub_80D7B50: @ 0x080D7B50
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bl sub_80D7C40
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r3, [r0]
	lsls r1, r3, #0x1f
	adds r6, r5, #0
	adds r6, #0x24
	lsrs r1, r1, #0x1f
	ldrb r2, [r6]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x3e
	ands r1, r3
	movs r2, #0x3f
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r6]
	ldrh r0, [r4, #0x24]
	movs r1, #0xf8
	lsls r1, r1, #3
	ands r1, r0
	ldrh r2, [r5, #0x24]
	ldr r0, _080D7BC0 @ =0xFFFFF83F
	ands r0, r2
	orrs r0, r1
	strh r0, [r5, #0x24]
	ldr r0, [r4, #0x28]
	str r0, [r5, #0x28]
	ldr r0, [r4, #0x2c]
	ldr r1, [r4, #0x30]
	str r0, [r5, #0x2c]
	str r1, [r5, #0x30]
	adds r4, #0x34
	ldrb r1, [r4]
	lsls r1, r1, #0x1d
	adds r3, r5, #0
	adds r3, #0x34
	lsrs r1, r1, #0x1d
	ldrb r2, [r3]
	movs r0, #8
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r3]
	adds r0, r5, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080D7BC0: .4byte 0xFFFFF83F

	thumb_func_start sub_80D7BC4
sub_80D7BC4: @ 0x080D7BC4
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	adds r5, r0, #0
	adds r4, r1, #0
	bl sub_80D7C40
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r6, [r0]
	lsls r1, r6, #0x1f
	movs r0, #0x24
	adds r0, r0, r5
	mov r8, r0
	lsrs r1, r1, #0x1f
	ldrb r2, [r0]
	movs r3, #2
	rsbs r3, r3, #0
	adds r0, r3, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x3e
	ands r1, r6
	movs r2, #0x3f
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	mov r1, r8
	strb r0, [r1]
	ldrh r0, [r4, #0x24]
	movs r1, #0xf8
	lsls r1, r1, #3
	ands r1, r0
	ldrh r2, [r5, #0x24]
	ldr r0, _080D7C3C @ =0xFFFFF83F
	ands r0, r2
	orrs r0, r1
	strh r0, [r5, #0x24]
	ldr r0, [r4, #0x28]
	str r0, [r5, #0x28]
	ldr r0, [r4, #0x2c]
	ldr r1, [r4, #0x30]
	str r0, [r5, #0x2c]
	str r1, [r5, #0x30]
	adds r4, #0x34
	ldrb r0, [r4]
	lsls r0, r0, #0x1f
	adds r2, r5, #0
	adds r2, #0x34
	lsrs r0, r0, #0x1f
	ldrb r1, [r2]
	ands r3, r1
	orrs r3, r0
	strb r3, [r2]
	adds r0, r5, #0
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080D7C3C: .4byte 0xFFFFF83F

	thumb_func_start sub_80D7C40
sub_80D7C40: @ 0x080D7C40
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	adds r4, r0, #0
	adds r5, r1, #0
	bl sub_80D684C
	ldrb r3, [r5, #0x1c]
	lsls r1, r3, #0x1b
	lsrs r1, r1, #0x1b
	ldrb r2, [r4, #0x1c]
	movs r0, #0x20
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x20
	ands r1, r3
	movs r2, #0x21
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	movs r6, #1
	movs r1, #0x40
	ands r1, r3
	subs r2, #0x20
	ands r0, r2
	orrs r0, r1
	lsrs r3, r3, #7
	lsls r3, r3, #7
	movs r1, #0x7f
	mov r8, r1
	ands r0, r1
	orrs r0, r3
	strb r0, [r4, #0x1c]
	ldrb r3, [r5, #0x1d]
	lsls r1, r3, #0x1e
	lsrs r1, r1, #0x1e
	ldrb r2, [r4, #0x1d]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	movs r1, #0x1c
	ands r1, r3
	movs r2, #0x1d
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	lsrs r3, r3, #5
	lsls r3, r3, #5
	movs r1, #0x1f
	ands r0, r1
	orrs r0, r3
	strb r0, [r4, #0x1d]
	ldrh r1, [r5, #0x1e]
	lsls r1, r1, #0x17
	lsrs r1, r1, #0x17
	ldrh r2, [r4, #0x1e]
	ldr r3, _080D7CF4 @ =0xFFFFFE00
	adds r0, r3, #0
	ands r0, r2
	orrs r0, r1
	strh r0, [r4, #0x1e]
	ldrb r0, [r5, #0x1f]
	lsrs r0, r0, #1
	ldrh r1, [r5, #0x20]
	ldr r5, _080D7CF8 @ =0x000001FF
	ands r1, r5
	lsls r1, r1, #7
	orrs r1, r0
	adds r0, r1, #0
	mov r2, r8
	ands r0, r2
	lsls r0, r0, #1
	ldrb r2, [r4, #0x1f]
	ands r6, r2
	orrs r6, r0
	strb r6, [r4, #0x1f]
	lsrs r1, r1, #7
	ands r1, r5
	ldrh r0, [r4, #0x20]
	ands r3, r0
	orrs r3, r1
	strh r3, [r4, #0x20]
	adds r0, r4, #0
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080D7CF4: .4byte 0xFFFFFE00
_080D7CF8: .4byte 0x000001FF

	thumb_func_start sub_80D7CFC
sub_80D7CFC: @ 0x080D7CFC
	push {r4, r5, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r4, r1, #0
	str r2, [sp]
	adds r1, r4, #4
	ldr r0, [r4, #4]
	str r0, [sp, #4]
	ldr r0, [r4]
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r4, r0
	adds r3, r1, #4
	subs r0, r0, r3
	asrs r2, r0, #2
	cmp r2, #0
	ble _080D7D28
_080D7D1E:
	ldm r3!, {r0}
	stm r1!, {r0}
	subs r2, #1
	cmp r2, #0
	bgt _080D7D1E
_080D7D28:
	ldr r0, [r4]
	lsls r0, r0, #2
	adds r0, r4, r0
	ldr r1, [sp]
	str r1, [r0]
	ldr r0, [sp, #4]
	str r0, [r5]
	adds r0, r5, #0
	add sp, #8
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_80D7D40
sub_80D7D40: @ 0x080D7D40
	push {r4, r5, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r4, r1, #0
	str r2, [sp]
	ldr r1, [r4]
	lsls r0, r1, #2
	adds r0, r4, r0
	ldr r0, [r0]
	str r0, [sp, #4]
	adds r0, r4, #4
	lsls r1, r1, #2
	adds r1, #4
	adds r1, r4, r1
	subs r3, r1, #4
	subs r0, r3, r0
	asrs r2, r0, #2
	cmp r2, #0
	ble _080D7D74
_080D7D66:
	subs r1, #4
	subs r3, #4
	ldr r0, [r3]
	str r0, [r1]
	subs r2, #1
	cmp r2, #0
	bgt _080D7D66
_080D7D74:
	ldr r0, [sp]
	str r0, [r4, #4]
	ldr r0, [sp, #4]
	str r0, [r5]
	adds r0, r5, #0
	add sp, #8
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80D7D88
sub_80D7D88: @ 0x080D7D88
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	mov r8, r0
	adds r7, r1, #0
	mov sb, r2
	adds r4, r7, #4
	mov r0, sp
	adds r1, r4, #0
	movs r2, #2
	bl sub_80D3994
	ldr r0, [r7]
	lsls r0, r0, #1
	adds r6, r7, #6
	adds r5, r4, #0
	subs r0, #2
	asrs r4, r0, #1
	cmp r4, #0
	ble _080D7DC8
_080D7DB4:
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #2
	bl sub_80D3994
	adds r6, #2
	adds r5, #2
	subs r4, #1
	cmp r4, #0
	bgt _080D7DB4
_080D7DC8:
	ldr r0, [r7]
	lsls r0, r0, #1
	adds r0, #2
	adds r0, r7, r0
	mov r1, sb
	movs r2, #2
	bl sub_80D3994
	mov r0, r8
	mov r1, sp
	movs r2, #2
	bl sub_80D3994
	mov r0, r8
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80D7DF4
sub_80D7DF4: @ 0x080D7DF4
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	mov r8, r0
	adds r7, r1, #0
	mov sb, r2
	ldr r1, [r7]
	lsls r1, r1, #1
	adds r1, #2
	adds r1, r7, r1
	mov r0, sp
	movs r2, #2
	bl sub_80D3994
	adds r1, r7, #4
	ldr r0, [r7]
	lsls r0, r0, #1
	adds r0, #4
	adds r0, r7, r0
	subs r5, r0, #2
	adds r6, r0, #0
	subs r1, r5, r1
	asrs r4, r1, #1
	cmp r4, #0
	ble _080D7E3E
_080D7E2A:
	subs r6, #2
	subs r5, #2
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #2
	bl sub_80D3994
	subs r4, #1
	cmp r4, #0
	bgt _080D7E2A
_080D7E3E:
	adds r0, r7, #4
	mov r1, sb
	movs r2, #2
	bl sub_80D3994
	mov r0, r8
	mov r1, sp
	movs r2, #2
	bl sub_80D3994
	mov r0, r8
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80D7E64
sub_80D7E64: @ 0x080D7E64
	push {r4, r5, lr}
	adds r3, r0, #0
	adds r5, r1, #0
	movs r0, #0xac
	lsls r0, r0, #1
	adds r1, r3, r0
	ldr r0, [r1]
	lsls r0, r0, #3
	adds r0, #4
	adds r1, r1, r0
	movs r2, #0xae
	lsls r2, r2, #1
	adds r0, r3, r2
	cmp r0, r1
	beq _080D7E88
_080D7E82:
	adds r0, #8
	cmp r0, r1
	bne _080D7E82
_080D7E88:
	adds r1, r3, #0
	adds r1, #0x14
	ldr r0, [r3, #0x14]
	lsls r0, r0, #3
	adds r0, #4
	adds r1, r1, r0
	adds r2, r3, #0
	adds r2, #0x18
	adds r4, r3, #4
	ldr r0, [r3]
	cmp r2, r1
	beq _080D7EA6
_080D7EA0:
	adds r2, #8
	cmp r2, r1
	bne _080D7EA0
_080D7EA6:
	lsls r0, r0, #3
	adds r0, #4
	adds r0, r3, r0
	adds r1, r4, #0
	cmp r1, r0
	beq _080D7EB8
_080D7EB2:
	adds r1, #8
	cmp r1, r0
	bne _080D7EB2
_080D7EB8:
	movs r0, #1
	ands r0, r5
	cmp r0, #0
	beq _080D7EC6
	adds r0, r3, #0
	bl sub_8000608
_080D7EC6:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80D7ECC
sub_80D7ECC: @ 0x080D7ECC
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	subs r1, r1, r4
	asrs r1, r1, #3
	cmp r1, #0
	ble _080D7EFE
	ldr r5, [r2]
_080D7EDA:
	asrs r3, r1, #1
	lsls r0, r3, #3
	adds r0, r4, r0
	movs r2, #0
	ldrh r6, [r0]
	cmp r5, r6
	bhs _080D7EEA
	movs r2, #1
_080D7EEA:
	cmp r2, #0
	beq _080D7EF2
	adds r1, r3, #0
	b _080D7EFA
_080D7EF2:
	adds r4, r0, #0
	adds r4, #8
	subs r0, r1, r3
	subs r1, r0, #1
_080D7EFA:
	cmp r1, #0
	bgt _080D7EDA
_080D7EFE:
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80D7F08
sub_80D7F08: @ 0x080D7F08
	push {r4, r5, lr}
	movs r4, #1
	adds r5, r0, #0
	adds r5, #0xa8
_080D7F10:
	ldr r0, [r5]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	adds r1, r4, #0
	bl sub_80D3914
	adds r1, r0, #0
	cmp r1, #0
	beq _080D7F2E
	ldr r0, [r1, #0x14]
	ldr r2, [r0, #0x3c]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D7F2E:
	adds r4, #1
	cmp r4, #0x23
	bls _080D7F10
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D7F3C
sub_80D7F3C: @ 0x080D7F3C
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0xa8
	ldr r0, [r0]
	ldr r1, [r0]
	movs r2, #0x92
	lsls r2, r2, #1
	adds r1, r1, r2
	ldr r1, [r1]
	bl sub_80D3910
	adds r4, #0x9c
	movs r0, #2
	str r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D7F60
sub_80D7F60: @ 0x080D7F60
	push {lr}
	adds r0, #0xac
	ldr r0, [r0]
	cmp r0, #0
	beq _080D7F6E
	bl sub_8050E8C
_080D7F6E:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D7F74
sub_80D7F74: @ 0x080D7F74
	push {lr}
	adds r0, #0xac
	ldr r0, [r0]
	cmp r0, #0
	beq _080D7F82
	bl sub_8050E5C
_080D7F82:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D7F88
sub_80D7F88: @ 0x080D7F88
	push {lr}
	adds r0, #0xac
	ldr r0, [r0]
	cmp r0, #0
	beq _080D7F96
	bl sub_8050E74
_080D7F96:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80D7F9C
sub_80D7F9C: @ 0x080D7F9C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	str r0, [sp, #0x10]
	str r1, [sp, #0x14]
	adds r4, r3, #0
	mov sl, r2
	cmp r1, #0x49
	bgt _080D8058
	adds r0, #0xa8
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	ldr r1, [sp, #0x14]
	bl sub_80D3914
	adds r7, r0, #0
	cmp r7, #0
	bne _080D7FCA
	b _080D8106
_080D7FCA:
	add r1, sp, #8
	ldr r0, _080D8050 @ =0x000003FF
	mov r8, r0
	mov r2, sl
	mov r0, r8
	ands r2, r0
	ldrh r3, [r1]
	ldr r5, _080D8054 @ =0xFFFFFC00
	adds r0, r5, #0
	ands r0, r3
	orrs r0, r2
	strh r0, [r1]
	lsls r4, r4, #0x10
	lsrs r2, r4, #0x10
	movs r0, #0x3f
	mov sb, r0
	ands r2, r0
	lsls r2, r2, #2
	ldrb r6, [r1, #1]
	movs r3, #3
	adds r0, r3, #0
	ands r0, r6
	orrs r0, r2
	strb r0, [r1, #1]
	lsrs r4, r4, #0x16
	mov r2, r8
	ands r4, r2
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	orrs r0, r4
	strh r0, [r1, #2]
	ldr r4, [sp, #0x38]
	lsls r2, r4, #0x10
	lsrs r0, r2, #0x10
	mov r4, sb
	ands r0, r4
	lsls r0, r0, #2
	ldrb r4, [r1, #3]
	ands r3, r4
	orrs r3, r0
	strb r3, [r1, #3]
	lsrs r2, r2, #0x16
	mov r0, r8
	ands r2, r0
	ldrh r0, [r1, #4]
	ands r5, r0
	orrs r5, r2
	strh r5, [r1, #4]
	mov r4, sp
	mov r0, sp
	movs r2, #6
	bl sub_80D3994
	ldr r0, [sp, #0x3c]
	strb r0, [r4, #6]
	adds r0, r7, #0
	mov r1, sp
	bl sub_803211C
	ldr r0, [r7, #0x14]
	ldr r1, [r0, #0x20]
	adds r0, r7, #0
	bl sub_80D3910
	b _080D8106
	.align 2, 0
_080D8050: .4byte 0x000003FF
_080D8054: .4byte 0xFFFFFC00
_080D8058:
	ldr r0, [sp, #0x10]
	adds r0, #0xa8
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	ldr r1, [sp, #0x14]
	bl sub_80D3914
	adds r7, r0, #0
	cmp r7, #0
	beq _080D8106
	mov r5, sp
	ldr r1, _080D8130 @ =0x000003FF
	mov r8, r1
	mov r1, sl
	mov r2, r8
	ands r1, r2
	ldrh r2, [r5]
	ldr r3, _080D8134 @ =0xFFFFFC00
	adds r0, r3, #0
	ands r0, r2
	orrs r0, r1
	strh r0, [r5]
	lsls r2, r4, #0x10
	lsrs r0, r2, #0x10
	movs r4, #0x3f
	mov sb, r4
	ands r0, r4
	lsls r0, r0, #2
	ldrb r1, [r5, #1]
	movs r4, #3
	adds r6, r4, #0
	ands r6, r1
	orrs r6, r0
	strb r6, [r5, #1]
	lsrs r2, r2, #0x16
	mov r0, r8
	ands r2, r0
	ldrh r1, [r5, #2]
	adds r0, r3, #0
	ands r0, r1
	orrs r0, r2
	strh r0, [r5, #2]
	ldr r2, [sp, #0x38]
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	mov r2, sb
	ands r0, r2
	lsls r0, r0, #2
	ldrb r2, [r5, #3]
	ands r4, r2
	orrs r4, r0
	strb r4, [r5, #3]
	lsrs r1, r1, #0x16
	mov r0, r8
	ands r1, r0
	ldrh r0, [r5, #4]
	ands r3, r0
	orrs r3, r1
	strh r3, [r5, #4]
	mov r0, sp
	ldrh r1, [r0]
	lsls r1, r1, #0x16
	lsrs r1, r1, #0x16
	lsrs r6, r6, #2
	ldrh r2, [r0, #2]
	ldr r5, _080D8130 @ =0x000003FF
	ands r2, r5
	lsls r2, r2, #6
	orrs r2, r6
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	lsrs r4, r4, #2
	ldrh r3, [r0, #4]
	ands r3, r5
	lsls r3, r3, #6
	orrs r3, r4
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	adds r0, r7, #0
	bl sub_801FE78
	ldr r0, [r7, #0x14]
	ldr r1, [r0, #0x20]
	adds r0, r7, #0
	bl sub_80D3910
_080D8106:
	ldr r1, [sp, #0x14]
	cmp r1, #0
	bne _080D815A
	mov r2, sl
	cmp r2, #0x19
	bne _080D8120
	ldr r0, [sp, #0x10]
	adds r0, #0x8c
	ldr r0, [r0]
	ldr r4, _080D8138 @ =0x00001CD4
	adds r0, r0, r4
	bl sub_80A0A90
_080D8120:
	movs r1, #0
	mov r0, sl
	subs r0, #0x35
	cmp r0, #0xfe
	bhi _080D813C
	mov r1, sl
	subs r1, #0x34
	b _080D8148
	.align 2, 0
_080D8130: .4byte 0x000003FF
_080D8134: .4byte 0xFFFFFC00
_080D8138: .4byte 0x00001CD4
_080D813C:
	ldr r0, _080D816C @ =0xFFFFFECB
	add r0, sl
	cmp r0, #0xfe
	bhi _080D8148
	ldr r1, _080D8170 @ =0xFFFFFECC
	add r1, sl
_080D8148:
	cmp r1, #0
	ble _080D815A
	ldr r0, [sp, #0x10]
	adds r0, #0x8c
	ldr r0, [r0]
	ldr r2, _080D8174 @ =0x00001BD8
	adds r0, r0, r2
	bl sub_800EECC
_080D815A:
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080D816C: .4byte 0xFFFFFECB
_080D8170: .4byte 0xFFFFFECC
_080D8174: .4byte 0x00001BD8

	thumb_func_start sub_080D8178
sub_080D8178: @ 0x080D8178
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r4, _080D82D8 @ =0xFFFFFA70
	add sp, r4
	ldr r2, _080D82DC @ =0x000004DC
	add r2, sp
	str r0, [r2]
	mov sl, r1
	add r0, sp, #0x10
	movs r1, #0x1e
	movs r2, #4
	bl sub_80091A4
	add r6, sp, #0x34
	adds r0, r6, #0
	movs r1, #0
	movs r2, #0x20
	bl sub_8009744
	mov r7, sl
	adds r7, #0x10
	movs r2, #0
	mov r3, sl
	ldrh r0, [r3, #0x10]
	movs r1, #0x80
	orrs r0, r1
	strh r0, [r3, #0x10]
	movs r4, #0x87
	lsls r4, r4, #3
	add r4, sp
	str r2, [r4]
	str r2, [r4, #4]
	ldr r0, _080D82E0 @ =gUnknown_080E5AF0
	str r0, [r4, #8]
	str r7, [r4, #0xc]
	mov r5, sl
	adds r5, #0x68
	adds r0, r5, #0
	bl sub_8008AE0
	ldr r1, [r0, #8]
	ldr r2, [r1, #0x10]
	adds r1, r4, #0
	bl sub_80D3914
	adds r0, r5, #0
	bl sub_8008AF0
	adds r0, r4, #0
	movs r1, #2
	bl sub_80098AC
	movs r1, #0x87
	lsls r1, r1, #3
	add r1, sp
	movs r5, #0xf2
	lsls r5, r5, #5
	adds r0, r5, #0
	strh r0, [r1]
	ldrh r0, [r4]
	mov r2, sl
	strh r0, [r2, #0x10]
	movs r0, #0x3f
	strh r0, [r1]
	mov r1, sl
	adds r1, #0x60
	ldrh r0, [r4]
	strh r0, [r1]
	mov r5, sl
	adds r5, #0xd0
	adds r2, #0xc0
	ldr r0, _080D82E4 @ =0x0000046C
	add r0, sp
	str r2, [r0]
	ldr r3, _080D82E4 @ =0x0000046C
	add r3, sp
	movs r0, #0x9c
	lsls r0, r0, #3
	add r0, sp
	str r3, [r0]
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080D8308
	cmp r1, #0
	beq _080D822C
	str r2, [r1]
_080D822C:
	ldr r0, [r5, #4]
	adds r0, #4
	str r0, [r5, #4]
	ldr r1, _080D82E8 @ =0x00000544
	add r1, sp
	str r7, [r1]
	adds r6, r5, #0
	movs r2, #0xc4
	add r2, sl
	mov r8, r2
	movs r3, #0x8f
	lsls r3, r3, #3
	add r3, sp
	movs r4, #0xa7
	lsls r4, r4, #3
	add r4, sp
	str r3, [r4]
	mov r5, sl
	adds r5, #0xc8
	ldr r7, _080D82EC @ =0x0000056C
	add r7, sp
	str r5, [r7]
	ldr r0, _080D82F0 @ =0x00000484
	add r0, sp
	ldr r1, _080D82F4 @ =0x0000053C
	add r1, sp
	str r0, [r1]
	mov r2, sl
	adds r2, #0xcc
	movs r3, #0xae
	lsls r3, r3, #3
	add r3, sp
	str r2, [r3]
	movs r4, #0x92
	lsls r4, r4, #3
	add r4, sp
	movs r5, #0xa8
	lsls r5, r5, #3
	add r5, sp
	str r4, [r5]
	mov r7, sl
	adds r7, #0xa0
	ldr r0, _080D82F8 @ =0x0000055C
	add r0, sp
	str r7, [r0]
	mov r1, sl
	adds r1, #0x8c
	movs r2, #0xaa
	lsls r2, r2, #3
	add r2, sp
	str r1, [r2]
	mov r3, sl
	adds r3, #0xb0
	movs r4, #0xad
	lsls r4, r4, #3
	add r4, sp
	str r3, [r4]
	mov r5, sl
	adds r5, #0x90
	ldr r7, _080D82FC @ =0x00000554
	add r7, sp
	str r5, [r7]
	mov r0, sl
	adds r0, #0xa8
	ldr r1, _080D8300 @ =0x00000564
	add r1, sp
	str r0, [r1]
	mov r2, sl
	adds r2, #0x88
	ldr r3, _080D8304 @ =0x0000054C
	add r3, sp
	str r2, [r3]
	mov r4, sl
	adds r4, #0x9c
	movs r5, #0xab
	lsls r5, r5, #3
	add r5, sp
	str r4, [r5]
	mov r7, sl
	adds r7, #0xa4
	movs r0, #0xac
	lsls r0, r0, #3
	add r0, sp
	str r7, [r0]
	b _080D843A
	.align 2, 0
_080D82D8: .4byte 0xFFFFFA70
_080D82DC: .4byte 0x000004DC
_080D82E0: .4byte gUnknown_080E5AF0
_080D82E4: .4byte 0x0000046C
_080D82E8: .4byte 0x00000544
_080D82EC: .4byte 0x0000056C
_080D82F0: .4byte 0x00000484
_080D82F4: .4byte 0x0000053C
_080D82F8: .4byte 0x0000055C
_080D82FC: .4byte 0x00000554
_080D8300: .4byte 0x00000564
_080D8304: .4byte 0x0000054C
_080D8308:
	adds r6, r1, #0
	movs r0, #1
	ldr r1, _080D8350 @ =0x00000474
	add r1, sp
	str r0, [r1]
	ldr r0, [r5]
	subs r0, r6, r0
	asrs r4, r0, #2
	movs r0, #0x8e
	lsls r0, r0, #3
	add r0, sp
	str r4, [r0]
	ldr r2, _080D8350 @ =0x00000474
	add r2, sp
	ldr r0, [r1]
	movs r1, #0x8e
	lsls r1, r1, #3
	add r1, sp
	cmp r4, r0
	bhs _080D8332
	adds r1, r2, #0
_080D8332:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _080D8354
	lsls r4, r0, #2
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080D8358
	mov r0, sb
	bl sub_80D3BC0
	b _080D8358
	.align 2, 0
_080D8350: .4byte 0x00000474
_080D8354:
	movs r0, #0
	mov sb, r0
_080D8358:
	adds r7, r0, #0
	ldr r1, [r5]
	cmp r6, r1
	beq _080D836C
	subs r4, r6, r1
	adds r2, r4, #0
	bl sub_80D39F8
	adds r4, r0, r4
	b _080D836E
_080D836C:
	adds r4, r7, #0
_080D836E:
	ldr r0, _080D846C @ =0x00000474
	add r0, sp
	ldr r1, [r0]
	mov r2, sl
	adds r2, #0x10
	ldr r3, _080D8470 @ =0x00000544
	add r3, sp
	str r2, [r3]
	mov r6, sl
	adds r6, #0xd0
	ldr r2, [r5]
	movs r0, #0xc4
	add r0, sl
	mov r8, r0
	movs r3, #0x8f
	lsls r3, r3, #3
	add r3, sp
	movs r0, #0xa7
	lsls r0, r0, #3
	add r0, sp
	str r3, [r0]
	mov r3, sl
	adds r3, #0xc8
	ldr r0, _080D8474 @ =0x0000056C
	add r0, sp
	str r3, [r0]
	ldr r3, _080D8478 @ =0x00000484
	add r3, sp
	ldr r0, _080D847C @ =0x0000053C
	add r0, sp
	str r3, [r0]
	mov r3, sl
	adds r3, #0xcc
	movs r0, #0xae
	lsls r0, r0, #3
	add r0, sp
	str r3, [r0]
	movs r3, #0x92
	lsls r3, r3, #3
	add r3, sp
	movs r0, #0xa8
	lsls r0, r0, #3
	add r0, sp
	str r3, [r0]
	mov r3, sl
	adds r3, #0xa0
	ldr r0, _080D8480 @ =0x0000055C
	add r0, sp
	str r3, [r0]
	subs r3, #0x14
	movs r0, #0xaa
	lsls r0, r0, #3
	add r0, sp
	str r3, [r0]
	adds r3, #0x24
	movs r0, #0xad
	lsls r0, r0, #3
	add r0, sp
	str r3, [r0]
	subs r3, #0x20
	ldr r0, _080D8484 @ =0x00000554
	add r0, sp
	str r3, [r0]
	adds r3, #0x18
	ldr r0, _080D8488 @ =0x00000564
	add r0, sp
	str r3, [r0]
	subs r3, #0x20
	ldr r0, _080D848C @ =0x0000054C
	add r0, sp
	str r3, [r0]
	adds r3, #0x14
	movs r0, #0xab
	lsls r0, r0, #3
	add r0, sp
	str r3, [r0]
	adds r3, #8
	movs r0, #0xac
	lsls r0, r0, #3
	add r0, sp
	str r3, [r0]
	cmp r1, #0
	beq _080D8426
_080D8414:
	movs r3, #0x9c
	lsls r3, r3, #3
	add r3, sp
	ldr r3, [r3]
	ldr r0, [r3]
	stm r4!, {r0}
	subs r1, #1
	cmp r1, #0
	bne _080D8414
_080D8426:
	cmp r2, #0
	beq _080D8430
	adds r0, r2, #0
	bl sub_80D0260
_080D8430:
	mov r1, sb
	adds r0, r1, r7
	str r7, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080D843A:
	mov sb, r6
	movs r0, #0x8f
	lsls r0, r0, #3
	add r0, sp
	mov r2, r8
	str r2, [r0]
	movs r3, #0xa7
	lsls r3, r3, #3
	add r3, sp
	ldr r3, [r3]
	ldr r4, _080D8490 @ =0x000004E4
	add r4, sp
	str r3, [r4]
	ldr r4, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r4, r0
	beq _080D8494
	cmp r4, #0
	beq _080D8462
	str r2, [r4]
_080D8462:
	ldr r0, [r6, #4]
	adds r0, #4
	str r0, [r6, #4]
	b _080D8532
	.align 2, 0
_080D846C: .4byte 0x00000474
_080D8470: .4byte 0x00000544
_080D8474: .4byte 0x0000056C
_080D8478: .4byte 0x00000484
_080D847C: .4byte 0x0000053C
_080D8480: .4byte 0x0000055C
_080D8484: .4byte 0x00000554
_080D8488: .4byte 0x00000564
_080D848C: .4byte 0x0000054C
_080D8490: .4byte 0x000004E4
_080D8494:
	adds r7, r4, #0
	movs r0, #1
	movs r1, #0x90
	lsls r1, r1, #3
	add r1, sp
	str r0, [r1]
	ldr r0, [r6]
	subs r0, r7, r0
	asrs r4, r0, #2
	ldr r0, _080D84DC @ =0x0000047C
	add r0, sp
	str r4, [r0]
	movs r2, #0x90
	lsls r2, r2, #3
	add r2, sp
	ldr r0, [r1]
	ldr r1, _080D84DC @ =0x0000047C
	add r1, sp
	cmp r4, r0
	bhs _080D84BE
	adds r1, r2, #0
_080D84BE:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _080D84E0
	lsls r4, r0, #2
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080D84E4
	mov r0, r8
	bl sub_80D3BC0
	b _080D84E4
	.align 2, 0
_080D84DC: .4byte 0x0000047C
_080D84E0:
	movs r0, #0
	mov r8, r0
_080D84E4:
	adds r5, r0, #0
	mov r4, sb
	ldr r1, [r4]
	cmp r7, r1
	beq _080D84FA
	subs r4, r7, r1
	adds r2, r4, #0
	bl sub_80D39F8
	adds r4, r0, r4
	b _080D84FC
_080D84FA:
	adds r4, r5, #0
_080D84FC:
	movs r0, #0x90
	lsls r0, r0, #3
	add r0, sp
	ldr r1, [r0]
	mov r7, sb
	ldr r2, [r7]
	cmp r1, #0
	beq _080D851C
_080D850C:
	ldr r3, _080D8564 @ =0x000004E4
	add r3, sp
	ldr r3, [r3]
	ldr r0, [r3]
	stm r4!, {r0}
	subs r1, #1
	cmp r1, #0
	bne _080D850C
_080D851C:
	cmp r2, #0
	beq _080D8526
	adds r0, r2, #0
	bl sub_80D0260
_080D8526:
	mov r7, r8
	adds r0, r7, r5
	mov r1, sb
	str r5, [r1]
	str r4, [r1, #4]
	str r0, [r1, #0xc]
_080D8532:
	mov sb, r6
	ldr r0, _080D8568 @ =0x00000484
	add r0, sp
	ldr r2, _080D856C @ =0x0000056C
	add r2, sp
	ldr r2, [r2]
	str r2, [r0]
	ldr r3, _080D8570 @ =0x0000053C
	add r3, sp
	ldr r3, [r3]
	movs r4, #0x9d
	lsls r4, r4, #3
	add r4, sp
	str r3, [r4]
	ldr r4, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r4, r0
	beq _080D8574
	cmp r4, #0
	beq _080D855C
	str r2, [r4]
_080D855C:
	ldr r0, [r6, #4]
	adds r0, #4
	str r0, [r6, #4]
	b _080D8614
	.align 2, 0
_080D8564: .4byte 0x000004E4
_080D8568: .4byte 0x00000484
_080D856C: .4byte 0x0000056C
_080D8570: .4byte 0x0000053C
_080D8574:
	adds r7, r4, #0
	movs r0, #1
	ldr r1, _080D85BC @ =0x0000048C
	add r1, sp
	str r0, [r1]
	ldr r0, [r6]
	subs r0, r7, r0
	asrs r4, r0, #2
	movs r0, #0x91
	lsls r0, r0, #3
	add r0, sp
	str r4, [r0]
	ldr r2, _080D85BC @ =0x0000048C
	add r2, sp
	ldr r0, [r1]
	movs r1, #0x91
	lsls r1, r1, #3
	add r1, sp
	cmp r4, r0
	bhs _080D859E
	adds r1, r2, #0
_080D859E:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _080D85C0
	lsls r4, r0, #2
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080D85C4
	mov r0, r8
	bl sub_80D3BC0
	b _080D85C4
	.align 2, 0
_080D85BC: .4byte 0x0000048C
_080D85C0:
	movs r0, #0
	mov r8, r0
_080D85C4:
	adds r5, r0, #0
	mov r0, sb
	ldr r1, [r0]
	cmp r7, r1
	beq _080D85DC
	subs r4, r7, r1
	adds r0, r5, #0
	adds r2, r4, #0
	bl sub_80D39F8
	adds r4, r0, r4
	b _080D85DE
_080D85DC:
	adds r4, r5, #0
_080D85DE:
	ldr r0, _080D8648 @ =0x0000048C
	add r0, sp
	ldr r1, [r0]
	mov r3, sb
	ldr r2, [r3]
	cmp r1, #0
	beq _080D85FE
_080D85EC:
	movs r7, #0x9d
	lsls r7, r7, #3
	add r7, sp
	ldr r7, [r7]
	ldr r0, [r7]
	stm r4!, {r0}
	subs r1, #1
	cmp r1, #0
	bne _080D85EC
_080D85FE:
	cmp r2, #0
	beq _080D8608
	adds r0, r2, #0
	bl sub_80D0260
_080D8608:
	mov r1, r8
	adds r0, r1, r5
	mov r2, sb
	str r5, [r2]
	str r4, [r2, #4]
	str r0, [r2, #0xc]
_080D8614:
	adds r5, r6, #0
	movs r0, #0x92
	lsls r0, r0, #3
	add r0, sp
	movs r3, #0xae
	lsls r3, r3, #3
	add r3, sp
	ldr r3, [r3]
	str r3, [r0]
	movs r4, #0xa8
	lsls r4, r4, #3
	add r4, sp
	ldr r4, [r4]
	mov sb, r4
	ldr r4, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r4, r0
	beq _080D864C
	cmp r4, #0
	beq _080D863E
	str r3, [r4]
_080D863E:
	ldr r0, [r5, #4]
	adds r0, #4
	str r0, [r5, #4]
	b _080D86E0
	.align 2, 0
_080D8648: .4byte 0x0000048C
_080D864C:
	adds r7, r4, #0
	movs r0, #1
	movs r1, #0x93
	lsls r1, r1, #3
	add r1, sp
	str r0, [r1]
	ldr r0, [r5]
	subs r0, r7, r0
	asrs r4, r0, #2
	ldr r0, _080D8694 @ =0x00000494
	add r0, sp
	str r4, [r0]
	movs r2, #0x93
	lsls r2, r2, #3
	add r2, sp
	ldr r0, [r1]
	ldr r1, _080D8694 @ =0x00000494
	add r1, sp
	cmp r4, r0
	bhs _080D8676
	adds r1, r2, #0
_080D8676:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _080D8698
	lsls r4, r0, #2
	adds r0, r4, #0
	bl sub_80D01F8
	mov r8, r4
	cmp r0, #0
	bne _080D869C
	mov r0, r8
	bl sub_80D3BC0
	b _080D869C
	.align 2, 0
_080D8694: .4byte 0x00000494
_080D8698:
	movs r0, #0
	mov r8, r0
_080D869C:
	adds r6, r0, #0
	ldr r1, [r5]
	cmp r7, r1
	beq _080D86B0
	subs r4, r7, r1
	adds r2, r4, #0
	bl sub_80D39F8
	adds r4, r0, r4
	b _080D86B2
_080D86B0:
	adds r4, r6, #0
_080D86B2:
	movs r0, #0x93
	lsls r0, r0, #3
	add r0, sp
	ldr r1, [r0]
	ldr r2, [r5]
	cmp r1, #0
	beq _080D86CC
_080D86C0:
	mov r7, sb
	ldr r0, [r7]
	stm r4!, {r0}
	subs r1, #1
	cmp r1, #0
	bne _080D86C0
_080D86CC:
	cmp r2, #0
	beq _080D86D6
	adds r0, r2, #0
	bl sub_80D0260
_080D86D6:
	mov r1, r8
	adds r0, r1, r6
	str r6, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080D86E0:
	movs r0, #4
	bl sub_80005D4
	ldr r2, _080D87FC @ =0x00000544
	add r2, sp
	ldr r1, [r2]
	bl sub_8009300
	ldr r3, _080D8800 @ =0x0000055C
	add r3, sp
	ldr r5, [r3]
	adds r4, r0, #0
	adds r6, r5, #0
	ldr r0, [r6]
	cmp r4, r0
	beq _080D870A
	cmp r0, #0
	beq _080D870A
	movs r1, #3
	bl sub_8009324
_080D870A:
	str r4, [r5]
	movs r0, #0x68
	bl sub_80005D4
	movs r7, #0xaa
	lsls r7, r7, #3
	add r7, sp
	ldr r7, [r7]
	ldr r1, [r7]
	bl sub_803B4B0
	movs r1, #0xad
	lsls r1, r1, #3
	add r1, sp
	ldr r5, [r1]
	adds r4, r0, #0
	ldr r1, [r5]
	cmp r4, r1
	beq _080D8740
	cmp r1, #0
	beq _080D8740
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D8740:
	str r4, [r5]
	ldr r2, _080D8804 @ =0x00000554
	add r2, sp
	ldr r2, [r2]
	ldr r0, [r2]
	cmp r0, #0x2a
	bne _080D8814
	mov r0, sl
	adds r0, #0x94
	ldrb r1, [r0]
	adds r6, r0, #0
	cmp r1, #0
	beq _080D8814
	ldr r3, _080D8808 @ =0x00000564
	add r3, sp
	ldr r5, [r3]
	movs r4, #0xaa
	lsls r4, r4, #3
	add r4, sp
	ldr r4, [r4]
	ldr r1, [r4]
	ldr r7, _080D880C @ =0x0000054C
	add r7, sp
	ldr r7, [r7]
	ldr r2, [r7]
	movs r4, #0x87
	lsls r4, r4, #3
	add r4, sp
	adds r0, r4, #0
	movs r3, #0
	bl sub_801FB7C
	ldr r2, [r4]
	ldr r1, _080D8810 @ =0x0000049C
	add r1, sp
	ldr r0, _080D8810 @ =0x0000049C
	add r0, sp
	str r4, [r0]
	str r2, [r1, #4]
	movs r0, #0
	str r0, [r4]
	adds r4, r2, #0
	ldr r0, _080D8808 @ =0x00000564
	add r0, sp
	ldr r0, [r0]
	ldr r1, [r0]
	cmp r4, r1
	beq _080D87B0
	cmp r1, #0
	beq _080D87B0
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D87B0:
	str r4, [r5]
	movs r0, #0x87
	lsls r0, r0, #3
	add r0, sp
	ldr r1, [r0]
	cmp r1, #0
	beq _080D87CA
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D87CA:
	ldr r1, [r6]
	lsls r1, r1, #8
	lsrs r1, r1, #0x10
	mov r0, sl
	adds r0, #0x98
	movs r2, #0
	ldrsh r5, [r0, r2]
	adds r0, #2
	movs r3, #0
	ldrsh r4, [r0, r3]
	mov r0, sl
	adds r2, r5, #0
	adds r3, r4, #0
	bl sub_80DC2B4
	movs r0, #0
	str r0, [sp]
	mov r0, sl
	movs r1, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl sub_80DC360
	b _080D8884
	.align 2, 0
_080D87FC: .4byte 0x00000544
_080D8800: .4byte 0x0000055C
_080D8804: .4byte 0x00000554
_080D8808: .4byte 0x00000564
_080D880C: .4byte 0x0000054C
_080D8810: .4byte 0x0000049C
_080D8814:
	ldr r4, _080D88A8 @ =0x00000564
	add r4, sp
	ldr r5, [r4]
	movs r6, #0xaa
	lsls r6, r6, #3
	add r6, sp
	ldr r6, [r6]
	ldr r1, [r6]
	ldr r7, _080D88AC @ =0x0000054C
	add r7, sp
	ldr r7, [r7]
	ldr r2, [r7]
	movs r4, #0x87
	lsls r4, r4, #3
	add r4, sp
	adds r0, r4, #0
	movs r3, #1
	bl sub_801FB7C
	ldr r2, [r4]
	ldr r1, _080D88B0 @ =0x000004A4
	add r1, sp
	ldr r0, _080D88B0 @ =0x000004A4
	add r0, sp
	str r4, [r0]
	str r2, [r1, #4]
	movs r0, #0
	str r0, [r4]
	adds r4, r2, #0
	ldr r0, _080D88A8 @ =0x00000564
	add r0, sp
	ldr r0, [r0]
	ldr r1, [r0]
	cmp r4, r1
	beq _080D886A
	cmp r1, #0
	beq _080D886A
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D886A:
	str r4, [r5]
	movs r0, #0x87
	lsls r0, r0, #3
	add r0, sp
	ldr r1, [r0]
	cmp r1, #0
	beq _080D8884
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D8884:
	movs r0, #0
	movs r1, #0xab
	lsls r1, r1, #3
	add r1, sp
	ldr r1, [r1]
	str r0, [r1]
	ldr r2, _080D88B4 @ =0x00000554
	add r2, sp
	ldr r2, [r2]
	ldr r0, [r2]
	cmp r0, #0x2f
	bls _080D889E
	b _080D8FE8
_080D889E:
	lsls r0, r0, #2
	ldr r1, _080D88B8 @ =_080D88BC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080D88A8: .4byte 0x00000564
_080D88AC: .4byte 0x0000054C
_080D88B0: .4byte 0x000004A4
_080D88B4: .4byte 0x00000554
_080D88B8: .4byte _080D88BC
_080D88BC: @ jump table
	.4byte _080D897C @ case 0
	.4byte _080D89D4 @ case 1
	.4byte _080D8FE8 @ case 2
	.4byte _080D8BC8 @ case 3
	.4byte _080D8B6E @ case 4
	.4byte _080D8C30 @ case 5
	.4byte _080D8C8C @ case 6
	.4byte _080D8AC4 @ case 7
	.4byte _080D8B20 @ case 8
	.4byte _080D8CE8 @ case 9
	.4byte _080D8DE0 @ case 10
	.4byte _080D8DE0 @ case 11
	.4byte _080D8DE0 @ case 12
	.4byte _080D8DE0 @ case 13
	.4byte _080D8DE0 @ case 14
	.4byte _080D8DE0 @ case 15
	.4byte _080D8DE0 @ case 16
	.4byte _080D8DE0 @ case 17
	.4byte _080D8DE0 @ case 18
	.4byte _080D8DE0 @ case 19
	.4byte _080D8DE0 @ case 20
	.4byte _080D8DE0 @ case 21
	.4byte _080D8DE0 @ case 22
	.4byte _080D8DE0 @ case 23
	.4byte _080D8DE0 @ case 24
	.4byte _080D8DE0 @ case 25
	.4byte _080D8DE0 @ case 26
	.4byte _080D8DE0 @ case 27
	.4byte _080D8DE0 @ case 28
	.4byte _080D8DE0 @ case 29
	.4byte _080D8DE0 @ case 30
	.4byte _080D8DE0 @ case 31
	.4byte _080D8E24 @ case 32
	.4byte _080D8FA8 @ case 33
	.4byte _080D8FA8 @ case 34
	.4byte _080D8FA8 @ case 35
	.4byte _080D8FA8 @ case 36
	.4byte _080D8E6C @ case 37
	.4byte _080D8DE0 @ case 38
	.4byte _080D8F3C @ case 39
	.4byte _080D8DE0 @ case 40
	.4byte _080D8DA4 @ case 41
	.4byte _080D8DE0 @ case 42
	.4byte _080D8DE0 @ case 43
	.4byte _080D8DE0 @ case 44
	.4byte _080D8EF4 @ case 45
	.4byte _080D8DE0 @ case 46
	.4byte _080D8DE0 @ case 47
_080D897C:
	ldr r1, _080D89C0 @ =0x00000363
	mov r0, sl
	movs r2, #0
	bl sub_80DC294
	ldr r0, _080D89C4 @ =gUnknown_0300040C
	ldr r2, [r0]
	movs r3, #0xdb
	lsls r3, r3, #2
	adds r2, r2, r3
	movs r0, #0x20
	rsbs r0, r0, #0
	ldr r4, _080D89C8 @ =0x000004EC
	add r4, sp
	ldrh r4, [r4]
	ands r0, r4
	movs r1, #6
	orrs r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _080D89CC @ =0xFFFFFF00
	ldr r5, _080D89C8 @ =0x000004EC
	add r5, sp
	ldrh r5, [r5]
	ands r1, r5
	orrs r1, r0
	ldr r0, _080D89D0 @ =0xFFFFF81F
	ands r1, r0
	movs r3, #0x1d
	movs r0, #1
	strb r0, [r2]
	str r3, [r2, #4]
	strh r1, [r2, #8]
	b _080D8FE8
	.align 2, 0
_080D89C0: .4byte 0x00000363
_080D89C4: .4byte gUnknown_0300040C
_080D89C8: .4byte 0x000004EC
_080D89CC: .4byte 0xFFFFFF00
_080D89D0: .4byte 0xFFFFF81F
_080D89D4:
	ldr r6, _080D8AB4 @ =0x00000564
	add r6, sp
	ldr r6, [r6]
	ldr r0, [r6]
	ldr r1, [r0]
	movs r7, #0x94
	lsls r7, r7, #1
	adds r1, r1, r7
	ldr r1, [r1]
	bl sub_80D3910
	movs r0, #0xc
	bl sub_80005D4
	movs r1, #1
	str r1, [sp]
	movs r1, #0
	movs r2, #0x1f
	movs r3, #0
	bl sub_803C54C
	mov r4, sl
	adds r4, #0xb4
	adds r5, r0, #0
	ldr r1, [r4]
	adds r6, r4, #0
	cmp r5, r1
	beq _080D8A1C
	cmp r1, #0
	beq _080D8A1C
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D8A1C:
	str r5, [r4]
	movs r0, #0xaa
	lsls r0, r0, #3
	add r0, sp
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r2, _080D8AB8 @ =0x00002210
	adds r0, r1, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	cmp r0, #0
	bge _080D8A48
	ldr r3, _080D8ABC @ =0x000034C4
	adds r0, r1, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D8A48
	ldr r0, [r6]
	ldr r1, [r0, #4]
	ldr r1, [r1, #0xc]
	bl sub_80D3910
_080D8A48:
	ldr r4, [r6]
	movs r5, #0
	ldr r7, _080D8AB4 @ =0x00000564
	add r7, sp
	ldr r7, [r7]
	ldr r0, [r7]
	ldr r1, [r0]
	adds r1, #0xb0
	ldr r1, [r1]
	bl sub_80D3910
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080D8A7C
	movs r1, #0xaa
	lsls r1, r1, #3
	add r1, sp
	ldr r1, [r1]
	ldr r0, [r1]
	ldrh r1, [r0, #0x12]
	lsls r1, r1, #0x15
	lsrs r1, r1, #0x1a
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080D8A7E
_080D8A7C:
	movs r5, #1
_080D8A7E:
	adds r2, r5, #0
	movs r3, #0xaa
	lsls r3, r3, #3
	add r3, sp
	ldr r3, [r3]
	ldr r1, [r3]
	adds r1, #0x10
	adds r0, r4, #0
	adds r0, #8
	bl sub_803CD4C
	ldr r0, [r6]
	movs r4, #0xaa
	lsls r4, r4, #3
	add r4, sp
	ldr r4, [r4]
	ldr r1, [r4]
	ldr r1, [r1, #8]
	adds r0, #8
	bl sub_803D3A0
	ldr r5, _080D8AC0 @ =0x0000055C
	add r5, sp
	ldr r5, [r5]
	ldr r0, [r5]
	b _080D8D7C
	.align 2, 0
_080D8AB4: .4byte 0x00000564
_080D8AB8: .4byte 0x00002210
_080D8ABC: .4byte 0x000034C4
_080D8AC0: .4byte 0x0000055C
_080D8AC4:
	movs r4, #1
	movs r6, #0xab
	lsls r6, r6, #3
	add r6, sp
	ldr r6, [r6]
	str r4, [r6]
	movs r0, #0x10
	bl sub_80005D4
	str r4, [sp]
	movs r1, #4
	str r1, [sp, #4]
	movs r1, #0
	movs r2, #0x1f
	movs r3, #0
	bl sub_803BF78
	mov r4, sl
	adds r4, #0xb8
	adds r5, r0, #0
	ldr r1, [r4]
	adds r7, r4, #0
	cmp r5, r1
	beq _080D8B04
	cmp r1, #0
	beq _080D8B04
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D8B04:
	str r5, [r4]
	ldr r0, [r7]
	ldr r1, [r0, #4]
	ldr r1, [r1, #0xc]
	bl sub_80D3910
	ldr r7, _080D8B1C @ =0x0000055C
	add r7, sp
	ldr r7, [r7]
	ldr r0, [r7]
	b _080D8D7C
	.align 2, 0
_080D8B1C: .4byte 0x0000055C
_080D8B20:
	movs r4, #1
	movs r0, #0xab
	lsls r0, r0, #3
	add r0, sp
	ldr r0, [r0]
	str r4, [r0]
	movs r0, #0x10
	bl sub_80005D4
	str r4, [sp]
	movs r1, #5
	str r1, [sp, #4]
	movs r1, #0
	movs r2, #0x1f
	movs r3, #0
	bl sub_803BF78
	mov r4, sl
	adds r4, #0xb8
	adds r5, r0, #0
	ldr r1, [r4]
	adds r7, r4, #0
	cmp r5, r1
	beq _080D8B60
	cmp r1, #0
	beq _080D8B60
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D8B60:
	str r5, [r4]
	ldr r0, [r7]
	ldr r1, [r0, #4]
	ldr r1, [r1, #0xc]
	bl sub_80D3910
	b _080D8D74
_080D8B6E:
	movs r4, #1
	movs r2, #0xab
	lsls r2, r2, #3
	add r2, sp
	ldr r2, [r2]
	str r4, [r2]
	movs r0, #0x10
	bl sub_80005D4
	str r4, [sp]
	str r4, [sp, #4]
	movs r1, #0
	movs r2, #0x1f
	movs r3, #0
	bl sub_803BF78
	mov r4, sl
	adds r4, #0xb8
	adds r5, r0, #0
	ldr r1, [r4]
	adds r7, r4, #0
	cmp r5, r1
	beq _080D8BAC
	cmp r1, #0
	beq _080D8BAC
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D8BAC:
	str r5, [r4]
	ldr r0, [r7]
	ldr r1, [r0, #4]
	ldr r1, [r1, #0xc]
	bl sub_80D3910
	ldr r3, _080D8BC4 @ =0x0000055C
	add r3, sp
	ldr r3, [r3]
	ldr r0, [r3]
	b _080D8D7C
	.align 2, 0
_080D8BC4: .4byte 0x0000055C
_080D8BC8:
	movs r4, #1
	movs r5, #0xab
	lsls r5, r5, #3
	add r5, sp
	ldr r5, [r5]
	str r4, [r5]
	ldr r6, _080D8C2C @ =0x00000564
	add r6, sp
	ldr r6, [r6]
	ldr r0, [r6]
	ldr r1, [r0]
	movs r7, #0x94
	lsls r7, r7, #1
	adds r1, r1, r7
	ldr r1, [r1]
	bl sub_80D3910
	movs r0, #0x10
	bl sub_80005D4
	str r4, [sp]
	movs r1, #0
	str r1, [sp, #4]
	movs r2, #0x1f
	movs r3, #0
	bl sub_803BF78
	mov r4, sl
	adds r4, #0xb8
	adds r5, r0, #0
	ldr r1, [r4]
	adds r7, r4, #0
	cmp r5, r1
	beq _080D8C1C
	cmp r1, #0
	beq _080D8C1C
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D8C1C:
	str r5, [r4]
	ldr r0, [r7]
	ldr r1, [r0, #4]
	ldr r1, [r1, #0xc]
	bl sub_80D3910
	b _080D8D74
	.align 2, 0
_080D8C2C: .4byte 0x00000564
_080D8C30:
	movs r4, #1
	movs r2, #0xab
	lsls r2, r2, #3
	add r2, sp
	ldr r2, [r2]
	str r4, [r2]
	movs r0, #0x10
	bl sub_80005D4
	str r4, [sp]
	movs r1, #2
	str r1, [sp, #4]
	movs r1, #0
	movs r2, #0x1f
	movs r3, #0
	bl sub_803BF78
	mov r4, sl
	adds r4, #0xb8
	adds r5, r0, #0
	ldr r1, [r4]
	adds r7, r4, #0
	cmp r5, r1
	beq _080D8C70
	cmp r1, #0
	beq _080D8C70
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D8C70:
	str r5, [r4]
	ldr r0, [r7]
	ldr r1, [r0, #4]
	ldr r1, [r1, #0xc]
	bl sub_80D3910
	ldr r3, _080D8C88 @ =0x0000055C
	add r3, sp
	ldr r3, [r3]
	ldr r0, [r3]
	b _080D8D7C
	.align 2, 0
_080D8C88: .4byte 0x0000055C
_080D8C8C:
	movs r4, #1
	movs r5, #0xab
	lsls r5, r5, #3
	add r5, sp
	ldr r5, [r5]
	str r4, [r5]
	movs r0, #0x10
	bl sub_80005D4
	str r4, [sp]
	movs r1, #3
	str r1, [sp, #4]
	movs r1, #0
	movs r2, #0x1f
	movs r3, #0
	bl sub_803BF78
	mov r4, sl
	adds r4, #0xb8
	adds r5, r0, #0
	ldr r1, [r4]
	adds r7, r4, #0
	cmp r5, r1
	beq _080D8CCC
	cmp r1, #0
	beq _080D8CCC
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D8CCC:
	str r5, [r4]
	ldr r0, [r7]
	ldr r1, [r0, #4]
	ldr r1, [r1, #0xc]
	bl sub_80D3910
	ldr r6, _080D8CE4 @ =0x0000055C
	add r6, sp
	ldr r6, [r6]
	ldr r0, [r6]
	b _080D8D7C
	.align 2, 0
_080D8CE4: .4byte 0x0000055C
_080D8CE8:
	movs r0, #6
	movs r7, #0xab
	lsls r7, r7, #3
	add r7, sp
	ldr r7, [r7]
	str r0, [r7]
	movs r0, #4
	bl sub_80005D4
	adds r6, r0, #0
	movs r5, #0x87
	lsls r5, r5, #3
	add r5, sp
	adds r0, r5, #0
	bl sub_800835C
	ldr r4, _080D8D88 @ =0x0000043C
	add r4, sp
	adds r0, r4, #0
	bl sub_800770C
	movs r0, #1
	str r0, [sp]
	str r5, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #0x1f
	movs r3, #0
	bl sub_8050CC0
	mov r4, sl
	adds r4, #0xac
	adds r5, r0, #0
	ldr r0, [r4]
	adds r6, r4, #0
	cmp r5, r0
	beq _080D8D3E
	cmp r0, #0
	beq _080D8D3E
	movs r1, #3
	bl sub_8050D0C
_080D8D3E:
	str r5, [r4]
	ldr r0, _080D8D88 @ =0x0000043C
	add r0, sp
	movs r1, #2
	bl sub_8007714
	movs r0, #0x87
	lsls r0, r0, #3
	add r0, sp
	movs r1, #2
	bl sub_8008364
	ldr r0, [r6]
	bl sub_8050D68
	ldr r0, [r6]
	ldr r1, _080D8D8C @ =gUnknown_080F05B8
	ldr r2, _080D8D90 @ =gUnknown_080F05C0
	ldr r3, _080D8D94 @ =gUnknown_080F05C8
	ldr r5, _080D8D98 @ =gUnknown_080F05D4
	movs r4, #0
	str r5, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	str r4, [sp, #0xc]
	bl sub_8050E0C
_080D8D74:
	ldr r1, _080D8D9C @ =0x0000055C
	add r1, sp
	ldr r1, [r1]
	ldr r0, [r1]
_080D8D7C:
	ldr r1, _080D8DA0 @ =0x00000889
	movs r2, #1
	movs r3, #1
	bl sub_800934C
	b _080D8FE8
	.align 2, 0
_080D8D88: .4byte 0x0000043C
_080D8D8C: .4byte gUnknown_080F05B8
_080D8D90: .4byte gUnknown_080F05C0
_080D8D94: .4byte gUnknown_080F05C8
_080D8D98: .4byte gUnknown_080F05D4
_080D8D9C: .4byte 0x0000055C
_080D8DA0: .4byte 0x00000889
_080D8DA4:
	ldr r0, _080D8E10 @ =gUnknown_0300040C
	ldr r2, [r0]
	movs r3, #0xdb
	lsls r3, r3, #2
	adds r2, r2, r3
	movs r0, #0x20
	rsbs r0, r0, #0
	movs r4, #0x9e
	lsls r4, r4, #3
	add r4, sp
	ldrh r4, [r4]
	ands r0, r4
	movs r1, #6
	orrs r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _080D8E14 @ =0xFFFFFF00
	movs r5, #0x9e
	lsls r5, r5, #3
	add r5, sp
	ldrh r5, [r5]
	ands r1, r5
	orrs r1, r0
	ldr r0, _080D8E18 @ =0xFFFFF81F
	ands r1, r0
	movs r3, #0x1d
	movs r0, #1
	strb r0, [r2]
	str r3, [r2, #4]
	strh r1, [r2, #8]
_080D8DE0:
	mov r1, sl
	adds r1, #0xe8
	movs r3, #0
	movs r0, #1
	strb r0, [r1]
	mov r0, sl
	adds r0, #0xe9
	strb r3, [r0]
	mov r6, sl
	ldrh r1, [r6, #0x10]
	ldr r0, _080D8E1C @ =0x0000F0FF
	ands r0, r1
	strh r0, [r6, #0x10]
	mov r2, sl
	adds r2, #0x60
	ldrh r1, [r2]
	ldr r0, _080D8E20 @ =0x0000FF3F
	ands r0, r1
	strh r0, [r2]
	mov r0, sl
	adds r0, #0x5c
	strh r3, [r0]
	b _080D8F8E
	.align 2, 0
_080D8E10: .4byte gUnknown_0300040C
_080D8E14: .4byte 0xFFFFFF00
_080D8E18: .4byte 0xFFFFF81F
_080D8E1C: .4byte 0x0000F0FF
_080D8E20: .4byte 0x0000FF3F
_080D8E24:
	mov r1, sl
	adds r1, #0xe8
	movs r3, #0
	movs r0, #1
	strb r0, [r1]
	mov r0, sl
	adds r0, #0xe9
	strb r3, [r0]
	mov r7, sl
	ldrh r1, [r7, #0x10]
	ldr r0, _080D8E60 @ =0x0000F0FF
	ands r0, r1
	strh r0, [r7, #0x10]
	mov r2, sl
	adds r2, #0x60
	ldrh r1, [r2]
	ldr r0, _080D8E64 @ =0x0000FF3F
	ands r0, r1
	strh r0, [r2]
	mov r0, sl
	adds r0, #0x5c
	strh r3, [r0]
	ldr r0, _080D8E68 @ =gUnknown_0300040C
	ldr r0, [r0]
	adds r0, #8
	mov r1, sl
	adds r1, #0x94
	ldr r1, [r1]
	b _080D8F8A
	.align 2, 0
_080D8E60: .4byte 0x0000F0FF
_080D8E64: .4byte 0x0000FF3F
_080D8E68: .4byte gUnknown_0300040C
_080D8E6C:
	mov r1, sl
	adds r1, #0xe8
	movs r3, #0
	movs r0, #1
	strb r0, [r1]
	mov r0, sl
	adds r0, #0xe9
	strb r3, [r0]
	mov r0, sl
	ldrh r1, [r0, #0x10]
	ldr r0, _080D8EB8 @ =0x0000F0FF
	ands r0, r1
	mov r1, sl
	strh r0, [r1, #0x10]
	mov r2, sl
	adds r2, #0x60
	ldrh r1, [r2]
	ldr r0, _080D8EBC @ =0x0000FF3F
	ands r0, r1
	strh r0, [r2]
	mov r0, sl
	adds r0, #0x5c
	strh r3, [r0]
	movs r2, #0xaa
	lsls r2, r2, #3
	add r2, sp
	ldr r2, [r2]
	ldr r1, [r2]
	ldr r3, _080D8EC0 @ =0x00002C4A
	adds r0, r1, r3
	ldrb r2, [r0]
	lsls r0, r2, #0x19
	cmp r0, #0
	bge _080D8EC4
	movs r1, #1
	rsbs r1, r1, #0
	b _080D8EE6
	.align 2, 0
_080D8EB8: .4byte 0x0000F0FF
_080D8EBC: .4byte 0x0000FF3F
_080D8EC0: .4byte 0x00002C4A
_080D8EC4:
	ldr r4, _080D8EE0 @ =0x00002C48
	adds r0, r1, r4
	ldrb r1, [r0]
	movs r0, #3
	ands r0, r1
	cmp r0, #3
	bne _080D8EE4
	lsrs r0, r2, #7
	movs r1, #2
	cmp r0, #0
	beq _080D8EE6
	movs r1, #1
	b _080D8EE6
	.align 2, 0
_080D8EE0: .4byte 0x00002C48
_080D8EE4:
	movs r1, #0
_080D8EE6:
	ldr r0, _080D8EF0 @ =gUnknown_0300040C
	ldr r0, [r0]
	adds r0, #8
	b _080D8F8A
	.align 2, 0
_080D8EF0: .4byte gUnknown_0300040C
_080D8EF4:
	mov r1, sl
	adds r1, #0xe8
	movs r3, #0
	movs r0, #1
	strb r0, [r1]
	mov r0, sl
	adds r0, #0xe9
	strb r3, [r0]
	mov r5, sl
	ldrh r1, [r5, #0x10]
	ldr r0, _080D8F30 @ =0x0000F0FF
	ands r0, r1
	strh r0, [r5, #0x10]
	mov r2, sl
	adds r2, #0x60
	ldrh r1, [r2]
	ldr r0, _080D8F34 @ =0x0000FF3F
	ands r0, r1
	strh r0, [r2]
	mov r0, sl
	adds r0, #0x5c
	strh r3, [r0]
	ldr r0, _080D8F38 @ =gUnknown_0300040C
	ldr r0, [r0]
	adds r0, #8
	mov r1, sl
	adds r1, #0x94
	ldr r1, [r1]
	b _080D8F8A
	.align 2, 0
_080D8F30: .4byte 0x0000F0FF
_080D8F34: .4byte 0x0000FF3F
_080D8F38: .4byte gUnknown_0300040C
_080D8F3C:
	mov r1, sl
	adds r1, #0xe8
	movs r3, #0
	movs r0, #1
	strb r0, [r1]
	mov r0, sl
	adds r0, #0xe9
	strb r3, [r0]
	mov r6, sl
	ldrh r1, [r6, #0x10]
	ldr r0, _080D8F98 @ =0x0000F0FF
	ands r0, r1
	strh r0, [r6, #0x10]
	mov r2, sl
	adds r2, #0x60
	ldrh r1, [r2]
	ldr r0, _080D8F9C @ =0x0000FF3F
	ands r0, r1
	strh r0, [r2]
	mov r0, sl
	adds r0, #0x5c
	strh r3, [r0]
	ldr r0, _080D8FA0 @ =gUnknown_0300040C
	ldr r0, [r0]
	adds r2, r0, #0
	adds r2, #8
	movs r7, #0xaa
	lsls r7, r7, #3
	add r7, sp
	ldr r7, [r7]
	ldr r0, [r7]
	ldr r1, _080D8FA4 @ =0x00002C4C
	adds r0, r0, r1
	movs r1, #0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D8F88
	movs r1, #1
_080D8F88:
	adds r0, r2, #0
_080D8F8A:
	bl sub_803F8B8
_080D8F8E:
	mov r0, sl
	bl sub_80D7F3C
	b _080D8FE8
	.align 2, 0
_080D8F98: .4byte 0x0000F0FF
_080D8F9C: .4byte 0x0000FF3F
_080D8FA0: .4byte gUnknown_0300040C
_080D8FA4: .4byte 0x00002C4C
_080D8FA8:
	mov r1, sl
	adds r1, #0xe8
	movs r3, #0
	movs r0, #1
	strb r0, [r1]
	mov r0, sl
	adds r0, #0xe9
	strb r3, [r0]
	mov r2, sl
	ldrh r1, [r2, #0x10]
	ldr r0, _080D9024 @ =0x0000F0FF
	ands r0, r1
	strh r0, [r2, #0x10]
	adds r2, #0x60
	ldrh r1, [r2]
	ldr r0, _080D9028 @ =0x0000FF3F
	ands r0, r1
	strh r0, [r2]
	mov r0, sl
	adds r0, #0x5c
	strh r3, [r0]
	ldr r0, _080D902C @ =gUnknown_0300040C
	ldr r0, [r0]
	adds r0, #8
	mov r1, sl
	adds r1, #0x94
	ldrb r1, [r1]
	bl sub_803F8B8
	mov r0, sl
	bl sub_80D7F3C
_080D8FE8:
	add r0, sp, #0x10
	bl sub_8009268
	movs r3, #0xaa
	lsls r3, r3, #3
	add r3, sp
	ldr r3, [r3]
	ldr r0, [r3]
	ldr r1, [r0, #0x10]
	ldr r0, _080D9030 @ =0x000004CC
	add r0, sp
	str r1, [r0]
	bl sub_80D11E4
	movs r4, #0
	ldr r5, _080D9034 @ =0x000004F4
	add r5, sp
	str r4, [r5]
	movs r6, #0xab
	lsls r6, r6, #3
	add r6, sp
	ldr r6, [r6]
	ldr r0, [r6]
	cmp r0, #0x1d
	bhi _080D90F4
	lsls r0, r0, #2
	ldr r1, _080D9038 @ =_080D903C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080D9024: .4byte 0x0000F0FF
_080D9028: .4byte 0x0000FF3F
_080D902C: .4byte gUnknown_0300040C
_080D9030: .4byte 0x000004CC
_080D9034: .4byte 0x000004F4
_080D9038: .4byte _080D903C
_080D903C: @ jump table
	.4byte _080D90B4 @ case 0
	.4byte _080D90DC @ case 1
	.4byte _080D90DC @ case 2
	.4byte _080D90DC @ case 3
	.4byte _080D90DC @ case 4
	.4byte _080D90DC @ case 5
	.4byte _080D90DC @ case 6
	.4byte _080D90DC @ case 7
	.4byte _080D90DC @ case 8
	.4byte _080D90DC @ case 9
	.4byte _080D90DC @ case 10
	.4byte _080D90DC @ case 11
	.4byte _080D90DC @ case 12
	.4byte _080D90DC @ case 13
	.4byte _080D90DC @ case 14
	.4byte _080D90DC @ case 15
	.4byte _080D90DC @ case 16
	.4byte _080D90DC @ case 17
	.4byte _080D90EC @ case 18
	.4byte _080D90EC @ case 19
	.4byte _080D90DC @ case 20
	.4byte _080D90EC @ case 21
	.4byte _080D90EC @ case 22
	.4byte _080D90EC @ case 23
	.4byte _080D90DC @ case 24
	.4byte _080D90EC @ case 25
	.4byte _080D90EC @ case 26
	.4byte _080D90EC @ case 27
	.4byte _080D90EC @ case 28
	.4byte _080D90EC @ case 29
_080D90B4:
	ldr r7, _080D90D4 @ =0x0000055C
	add r7, sp
	ldr r7, [r7]
	ldr r0, [r7]
	bl sub_80094A4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r1, r1, #0x1f
	ldr r0, _080D90D8 @ =0x000004F4
	add r0, sp
	str r1, [r0]
	b _080D90F4
	.align 2, 0
_080D90D4: .4byte 0x0000055C
_080D90D8: .4byte 0x000004F4
_080D90DC:
	movs r1, #1
	ldr r2, _080D90E8 @ =0x000004F4
	add r2, sp
	str r1, [r2]
	b _080D90F4
	.align 2, 0
_080D90E8: .4byte 0x000004F4
_080D90EC:
	movs r3, #0
	ldr r4, _080D9110 @ =0x000004F4
	add r4, sp
	str r3, [r4]
_080D90F4:
	movs r5, #0xab
	lsls r5, r5, #3
	add r5, sp
	ldr r5, [r5]
	ldr r0, [r5]
	cmp r0, #0x1d
	bls _080D9104
	b _080D93E8
_080D9104:
	lsls r0, r0, #2
	ldr r1, _080D9114 @ =_080D9118
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080D9110: .4byte 0x000004F4
_080D9114: .4byte _080D9118
_080D9118: @ jump table
	.4byte _080D9190 @ case 0
	.4byte _080D91BC @ case 1
	.4byte _080D921C @ case 2
	.4byte _080D9190 @ case 3
	.4byte _080D9190 @ case 4
	.4byte _080D9190 @ case 5
	.4byte _080D91F4 @ case 6
	.4byte _080D9190 @ case 7
	.4byte _080D91BC @ case 8
	.4byte _080D91BC @ case 9
	.4byte _080D91F4 @ case 10
	.4byte _080D91F4 @ case 11
	.4byte _080D91F4 @ case 12
	.4byte _080D91BC @ case 13
	.4byte _080D9288 @ case 14
	.4byte _080D9288 @ case 15
	.4byte _080D9288 @ case 16
	.4byte _080D92C4 @ case 17
	.4byte _080D935C @ case 18
	.4byte _080D93B4 @ case 19
	.4byte _080D9288 @ case 20
	.4byte _080D924C @ case 21
	.4byte _080D924C @ case 22
	.4byte _080D924C @ case 23
	.4byte _080D924C @ case 24
	.4byte _080D924C @ case 25
	.4byte _080D924C @ case 26
	.4byte _080D924C @ case 27
	.4byte _080D924C @ case 28
	.4byte _080D924C @ case 29
_080D9190:
	mov r0, sl
	adds r0, #0xb4
	ldr r5, [r0]
	mov r6, sl
	adds r6, #0x6c
	subs r0, #0x4c
	bl sub_8008AE0
	ldr r1, [r5, #4]
	str r0, [sp]
	ldr r4, [r1, #0x2c]
	adds r0, r5, #0
	add r1, sp, #0x34
	ldr r7, _080D91B8 @ =0x00000544
	add r7, sp
	ldr r2, [r7]
	adds r3, r6, #0
	bl sub_80D391C
	b _080D93E8
	.align 2, 0
_080D91B8: .4byte 0x00000544
_080D91BC:
	mov r0, sl
	adds r0, #0xb8
	ldr r5, [r0]
	mov r4, sl
	adds r4, #0x6c
	subs r0, #0x50
	bl sub_8008AE0
	str r4, [sp]
	str r0, [sp, #4]
	ldr r0, _080D91EC @ =0x0000056C
	add r0, sp
	ldr r0, [r0]
	str r0, [sp, #8]
	adds r0, r5, #0
	add r1, sp, #0x10
	add r2, sp, #0x34
	ldr r4, _080D91F0 @ =0x00000544
	add r4, sp
	ldr r3, [r4]
	bl sub_803C00C
	b _080D93E8
	.align 2, 0
_080D91EC: .4byte 0x0000056C
_080D91F0: .4byte 0x00000544
_080D91F4:
	mov r0, sl
	adds r0, #0xac
	ldr r5, [r0]
	mov r4, sl
	adds r4, #0x6c
	subs r0, #0x44
	bl sub_8008AE0
	str r4, [sp]
	str r0, [sp, #4]
	ldr r6, _080D9218 @ =0x0000056C
	add r6, sp
	ldr r6, [r6]
	str r6, [sp, #8]
	adds r0, r5, #0
	add r1, sp, #0x10
	b _080D9342
	.align 2, 0
_080D9218: .4byte 0x0000056C
_080D921C:
	mov r0, sl
	adds r0, #0xac
	ldr r5, [r0]
	cmp r5, #0
	beq _080D924C
	mov r4, sl
	adds r4, #0x6c
	subs r0, #0x44
	bl sub_8008AE0
	str r4, [sp]
	str r0, [sp, #4]
	ldr r0, _080D9280 @ =0x0000056C
	add r0, sp
	ldr r0, [r0]
	str r0, [sp, #8]
	adds r0, r5, #0
	add r1, sp, #0x10
	add r2, sp, #0x34
	ldr r4, _080D9284 @ =0x00000544
	add r4, sp
	ldr r3, [r4]
	bl sub_8050D3C
_080D924C:
	mov r0, sl
	adds r0, #0xe8
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D9258
	b _080D93E8
_080D9258:
	mov r0, sl
	adds r0, #0xb4
	ldr r6, [r0]
	cmp r6, #0
	bne _080D9264
	b _080D93E8
_080D9264:
	mov r5, sl
	adds r5, #0x6c
	subs r0, #0x4c
	bl sub_8008AE0
	ldr r1, [r6, #4]
	str r0, [sp]
	ldr r4, [r1, #0x2c]
	adds r0, r6, #0
	add r1, sp, #0x34
	ldr r6, _080D9284 @ =0x00000544
	add r6, sp
	ldr r2, [r6]
	b _080D93A2
	.align 2, 0
_080D9280: .4byte 0x0000056C
_080D9284: .4byte 0x00000544
_080D9288:
	mov r0, sl
	adds r0, #0xac
	ldr r5, [r0]
	cmp r5, #0
	bne _080D9294
	b _080D93E8
_080D9294:
	mov r4, sl
	adds r4, #0x6c
	subs r0, #0x44
	bl sub_8008AE0
	str r4, [sp]
	str r0, [sp, #4]
	ldr r7, _080D92BC @ =0x0000056C
	add r7, sp
	ldr r7, [r7]
	str r7, [sp, #8]
	adds r0, r5, #0
	add r1, sp, #0x10
	add r2, sp, #0x34
	ldr r4, _080D92C0 @ =0x00000544
	add r4, sp
	ldr r3, [r4]
	bl sub_8050D3C
	b _080D93E8
	.align 2, 0
_080D92BC: .4byte 0x0000056C
_080D92C0: .4byte 0x00000544
_080D92C4:
	mov r0, sl
	adds r0, #0xac
	ldr r5, [r0]
	cmp r5, #0
	bne _080D92D0
	b _080D93E8
_080D92D0:
	add r0, sp, #0x10
	ldrh r2, [r0, #8]
	movs r0, #3
	rsbs r0, r0, #0
	ands r0, r2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r3, _080D9350 @ =0xFFFFFF00
	adds r1, r3, #0
	ands r1, r2
	orrs r1, r0
	movs r0, #0x41
	rsbs r0, r0, #0
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ands r1, r3
	orrs r1, r0
	movs r0, #0x7f
	ands r0, r1
	ands r1, r3
	orrs r1, r0
	movs r0, #0x21
	rsbs r0, r0, #0
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ands r1, r3
	orrs r1, r0
	movs r0, #0x11
	rsbs r0, r0, #0
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ands r1, r3
	orrs r1, r0
	movs r0, #0x89
	lsls r0, r0, #3
	add r0, sp
	bl sub_80091E8
	mov r4, sl
	adds r4, #0x6c
	mov r0, sl
	adds r0, #0x68
	bl sub_8008AE0
	str r4, [sp]
	str r0, [sp, #4]
	ldr r6, _080D9354 @ =0x0000056C
	add r6, sp
	ldr r6, [r6]
	str r6, [sp, #8]
	adds r0, r5, #0
	movs r1, #0x89
	lsls r1, r1, #3
	add r1, sp
_080D9342:
	add r2, sp, #0x34
	ldr r7, _080D9358 @ =0x00000544
	add r7, sp
	ldr r3, [r7]
	bl sub_8050D3C
	b _080D93E8
	.align 2, 0
_080D9350: .4byte 0xFFFFFF00
_080D9354: .4byte 0x0000056C
_080D9358: .4byte 0x00000544
_080D935C:
	ldr r1, _080D93AC @ =0x0000055C
	add r1, sp
	ldr r1, [r1]
	ldr r0, [r1]
	bl sub_80094A4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	rsbs r1, r0, #0
	orrs r1, r0
	cmp r1, #0
	bge _080D93E8
	mov r0, sl
	adds r0, #0xe8
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D93E8
	mov r0, sl
	adds r0, #0xb4
	ldr r6, [r0]
	cmp r6, #0
	beq _080D93E8
	mov r5, sl
	adds r5, #0x6c
	subs r0, #0x4c
	bl sub_8008AE0
	ldr r1, [r6, #4]
	str r0, [sp]
	ldr r4, [r1, #0x2c]
	adds r0, r6, #0
	add r1, sp, #0x34
	ldr r3, _080D93B0 @ =0x00000544
	add r3, sp
	ldr r2, [r3]
_080D93A2:
	adds r3, r5, #0
	bl sub_80D391C
	b _080D93E8
	.align 2, 0
_080D93AC: .4byte 0x0000055C
_080D93B0: .4byte 0x00000544
_080D93B4:
	mov r0, sl
	adds r0, #0xe8
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D93E8
	mov r0, sl
	adds r0, #0xb4
	ldr r6, [r0]
	cmp r6, #0
	beq _080D93E8
	mov r5, sl
	adds r5, #0x6c
	subs r0, #0x4c
	bl sub_8008AE0
	ldr r1, [r6, #4]
	str r0, [sp]
	ldr r4, [r1, #0x2c]
	adds r0, r6, #0
	add r1, sp, #0x34
	ldr r6, _080D9404 @ =0x00000544
	add r6, sp
	ldr r2, [r6]
	adds r3, r5, #0
	bl sub_80D391C
_080D93E8:
	movs r7, #0xab
	lsls r7, r7, #3
	add r7, sp
	ldr r7, [r7]
	ldr r0, [r7]
	cmp r0, #0x1d
	bls _080D93FA
	bl _080DAAE6
_080D93FA:
	lsls r0, r0, #2
	ldr r1, _080D9408 @ =_080D940C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080D9404: .4byte 0x00000544
_080D9408: .4byte _080D940C
_080D940C: @ jump table
	.4byte _080D9484 @ case 0
	.4byte _080D9D46 @ case 1
	.4byte _080DA278 @ case 2
	.4byte _080D9630 @ case 3
	.4byte _080D9708 @ case 4
	.4byte _080D97E4 @ case 5
	.4byte _080D99B4 @ case 6
	.4byte _080D9CD4 @ case 7
	.4byte _080DA13A @ case 8
	.4byte _080DA238 @ case 9
	.4byte _080D9C28 @ case 10
	.4byte _080D9C96 @ case 11
	.4byte _080D9974 @ case 12
	.4byte _080D98D4 @ case 13
	.4byte _080DA584 @ case 14
	.4byte _080DA596 @ case 15
	.4byte _080DA5BC @ case 16
	.4byte _080DA5CE @ case 17
	.4byte _080DA6E8 @ case 18
	.4byte _080DA738 @ case 19
	.4byte _080DA79C @ case 20
	.4byte _080DA758 @ case 21
	.4byte _080DA778 @ case 22
	.4byte _080DA7C8 @ case 23
	.4byte _080DAA50 @ case 24
	.4byte _080DA7E0 @ case 25
	.4byte _080DA814 @ case 26
	.4byte _080DAA6C @ case 27
	.4byte _080DAA9C @ case 28
	.4byte _080DAACC @ case 29
_080D9484:
	add r0, sp, #0x10
	ldrh r5, [r0, #4]
	ldrh r1, [r0]
	ldr r0, _080D958C @ =0x000004AC
	add r0, sp
	str r1, [r0]
	movs r0, #0xc
	ands r0, r5
	cmp r0, #0
	bne _080D949C
	bl _080DAAE6
_080D949C:
	mov r0, sl
	adds r0, #0xb4
	ldr r0, [r0]
	bl sub_803BE9C
	adds r6, r0, #0
	ldr r1, _080D9590 @ =0x00000564
	add r1, sp
	ldr r1, [r1]
	ldr r0, [r1]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	movs r1, #0x4b
	bl sub_80D3914
	adds r3, r0, #0
	ldr r0, _080D9594 @ =gUnknown_0300040C
	ldr r4, [r0]
	movs r2, #0xde
	lsls r2, r2, #2
	adds r2, r2, r4
	mov r8, r2
	ldr r7, _080D9590 @ =0x00000564
	add r7, sp
	ldr r7, [r7]
	ldr r0, [r7]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	movs r1, #0
	movs r7, #0xb0
	lsls r7, r7, #3
	add r7, sp
	str r3, [r7]
	bl sub_80D3914
	adds r2, r0, #0
	movs r0, #0xb0
	lsls r0, r0, #3
	add r0, sp
	ldr r3, [r0]
	cmp r6, #3
	beq _080D94F8
	cmp r6, #0
	beq _080D94F8
	bl _080DAAE6
_080D94F8:
	movs r6, #0
	movs r1, #0
	mov r7, r8
	ldr r0, [r7]
	cmp r0, #0
	bne _080D9506
	movs r1, #1
_080D9506:
	cmp r1, #0
	beq _080D9534
	movs r1, #0xe3
	lsls r1, r1, #2
	adds r0, r4, r1
	movs r1, #0
	ldr r0, [r0]
	cmp r0, #0
	bne _080D951A
	movs r1, #1
_080D951A:
	cmp r1, #0
	beq _080D9534
	movs r7, #0x9a
	lsls r7, r7, #3
	adds r0, r4, r7
	movs r1, #0
	ldr r0, [r0]
	cmp r0, #0
	bne _080D952E
	movs r1, #1
_080D952E:
	cmp r1, #0
	beq _080D9534
	movs r6, #1
_080D9534:
	cmp r6, #0
	bne _080D953C
	bl _080DAAE6
_080D953C:
	cmp r3, #0
	beq _080D955C
	adds r0, r3, #0
	ldr r1, _080D9598 @ =0x0000057C
	add r1, sp
	str r2, [r1]
	bl sub_8038108
	lsls r0, r0, #0x18
	ldr r3, _080D9598 @ =0x0000057C
	add r3, sp
	ldr r2, [r3]
	cmp r0, #0
	beq _080D955C
	bl _080DAAE6
_080D955C:
	ldr r0, [r2, #0x14]
	adds r0, #0x94
	ldr r1, [r0]
	adds r0, r2, #0
	bl sub_80D3910
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080D9572
	bl _080DAAE6
_080D9572:
	ldr r0, _080D958C @ =0x000004AC
	add r0, sp
	ldrb r1, [r0, #1]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080D95C4
	movs r0, #8
	ands r0, r5
	cmp r0, #0
	beq _080D959C
	movs r0, #4
	b _080D9606
	.align 2, 0
_080D958C: .4byte 0x000004AC
_080D9590: .4byte 0x00000564
_080D9594: .4byte gUnknown_0300040C
_080D9598: .4byte 0x0000057C
_080D959C:
	movs r0, #4
	ands r5, r0
	cmp r5, #0
	bne _080D95A8
	bl _080DAAE6
_080D95A8:
	movs r0, #5
	movs r6, #0xab
	lsls r6, r6, #3
	add r6, sp
	ldr r6, [r6]
	str r0, [r6]
	ldr r7, _080D95C0 @ =0x0000055C
	add r7, sp
	ldr r7, [r7]
	ldr r0, [r7]
	b _080D9618
	.align 2, 0
_080D95C0: .4byte 0x0000055C
_080D95C4:
	movs r1, #0xaa
	lsls r1, r1, #3
	add r1, sp
	ldr r1, [r1]
	ldr r0, [r1]
	ldr r2, _080D95F4 @ =0x000034C4
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D95F8
	movs r0, #8
	ands r0, r5
	cmp r0, #0
	beq _080D95F8
	mov r0, sl
	adds r0, #0xb4
	ldr r0, [r0]
	ldr r1, [r0, #4]
	ldr r1, [r1, #0x14]
	bl sub_80D3910
	movs r0, #7
	bl _080DA804
	.align 2, 0
_080D95F4: .4byte 0x000034C4
_080D95F8:
	movs r0, #4
	ands r5, r0
	cmp r5, #0
	bne _080D9604
	bl _080DAAE6
_080D9604:
	movs r0, #3
_080D9606:
	movs r4, #0xab
	lsls r4, r4, #3
	add r4, sp
	ldr r4, [r4]
	str r0, [r4]
	ldr r5, _080D9628 @ =0x0000055C
	add r5, sp
	ldr r5, [r5]
	ldr r0, [r5]
_080D9618:
	ldr r1, _080D962C @ =0x00000889
	movs r2, #1
	movs r3, #1
	bl sub_8009378
	bl _080DAAE6
	.align 2, 0
_080D9628: .4byte 0x0000055C
_080D962C: .4byte 0x00000889
_080D9630:
	ldr r6, _080D96F4 @ =0x0000055C
	add r6, sp
	ldr r6, [r6]
	ldr r0, [r6]
	bl sub_80094A4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r7, r1, #0x1f
	cmp r7, #0
	beq _080D964E
	bl _080DAAE6
_080D964E:
	movs r4, #0x87
	lsls r4, r4, #3
	add r4, sp
	movs r0, #1
	mov r8, r0
	str r0, [r4]
	movs r0, #0x14
	bl sub_80005D4
	movs r1, #0xaa
	lsls r1, r1, #3
	add r1, sp
	ldr r1, [r1]
	ldr r1, [r1]
	mov sb, r1
	movs r5, #0x89
	lsls r5, r5, #3
	add r5, sp
	adds r1, r5, #0
	ldm r4!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldr r1, _080D96F8 @ =gUnknown_080E5E74
	str r1, [r0]
	mov r1, sb
	str r1, [r0, #4]
	adds r2, r0, #0
	adds r2, #8
	movs r1, #0x89
	lsls r1, r1, #3
	add r1, sp
	ldm r1!, {r3, r4, r6}
	stm r2!, {r3, r4, r6}
	ldr r4, _080D96FC @ =0x00000444
	add r4, sp
	str r0, [r4]
	movs r0, #0x10
	bl sub_80005D4
	ldr r2, [r4]
	str r7, [r4]
	str r2, [r5]
	movs r1, #0xaa
	lsls r1, r1, #3
	add r1, sp
	ldr r1, [r1]
	ldr r3, [r1]
	ldr r1, _080D9700 @ =gUnknown_080E5EB4
	str r1, [r0]
	str r7, [r5]
	str r2, [r0, #4]
	str r3, [r0, #8]
	mov r2, r8
	strb r2, [r0, #0xc]
	movs r3, #0xac
	lsls r3, r3, #3
	add r3, sp
	ldr r5, [r3]
	adds r4, r0, #0
	adds r6, r5, #0
	ldr r1, [r6]
	cmp r4, r1
	beq _080D96DA
	cmp r1, #0
	beq _080D96DA
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D96DA:
	str r4, [r5]
	movs r7, #0xac
	lsls r7, r7, #3
	add r7, sp
	ldr r7, [r7]
	ldr r0, [r7]
	movs r1, #0
	str r1, [r7]
	ldr r3, _080D9704 @ =0x000004DC
	add r3, sp
	ldr r3, [r3]
	str r0, [r3]
	b _080D98A0
	.align 2, 0
_080D96F4: .4byte 0x0000055C
_080D96F8: .4byte gUnknown_080E5E74
_080D96FC: .4byte 0x00000444
_080D9700: .4byte gUnknown_080E5EB4
_080D9704: .4byte 0x000004DC
_080D9708:
	ldr r4, _080D97CC @ =0x0000055C
	add r4, sp
	ldr r4, [r4]
	ldr r0, [r4]
	bl sub_80094A4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r1, r1, #0x1f
	lsls r4, r1, #0x18
	lsrs r7, r4, #0x18
	cmp r7, #0
	beq _080D972A
	bl _080DAAE6
_080D972A:
	movs r0, #0x10
	bl sub_80005D4
	adds r6, r0, #0
	movs r5, #0xaa
	lsls r5, r5, #3
	add r5, sp
	ldr r5, [r5]
	ldr r5, [r5]
	mov r8, r5
	ldr r0, _080D97D0 @ =gUnknown_080E5C14
	str r0, [r6]
	str r5, [r6, #4]
	movs r0, #0x14
	bl sub_80005D4
	ldr r1, _080D97D4 @ =gUnknown_080E5E44
	str r1, [r0]
	strb r7, [r0, #4]
	adds r5, r0, #6
	movs r3, #0x8d
	lsls r3, r3, #2
	ldrh r2, [r0, #6]
	ldr r4, _080D97D8 @ =0xFFFFFC00
	adds r1, r4, #0
	ands r1, r2
	orrs r1, r3
	strh r1, [r0, #6]
	ldrb r2, [r5, #1]
	movs r3, #3
	adds r1, r3, #0
	ands r1, r2
	strb r1, [r5, #1]
	ldrh r2, [r5, #2]
	adds r1, r4, #0
	ands r1, r2
	strh r1, [r5, #2]
	ldrb r1, [r5, #3]
	ands r3, r1
	strb r3, [r5, #3]
	ldrh r1, [r5, #4]
	ands r4, r1
	strh r4, [r5, #4]
	ldr r1, _080D97DC @ =gUnknown_080E5C24
	str r1, [r0]
	mov r1, r8
	str r1, [r0, #0xc]
	str r7, [r0, #0x10]
	str r0, [r6, #8]
	str r7, [r6, #0xc]
	movs r2, #0xac
	lsls r2, r2, #3
	add r2, sp
	ldr r4, [r2]
	adds r3, r4, #0
	ldr r1, [r3]
	cmp r6, r1
	beq _080D97AE
	cmp r1, #0
	beq _080D97AE
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D97AE:
	str r6, [r4]
	movs r4, #0xac
	lsls r4, r4, #3
	add r4, sp
	ldr r4, [r4]
	ldr r1, [r4]
	movs r0, #0
	str r0, [r4]
	ldr r6, _080D97E0 @ =0x000004DC
	add r6, sp
	ldr r6, [r6]
	str r1, [r6]
	bl sub_80DB0CC
	.align 2, 0
_080D97CC: .4byte 0x0000055C
_080D97D0: .4byte gUnknown_080E5C14
_080D97D4: .4byte gUnknown_080E5E44
_080D97D8: .4byte 0xFFFFFC00
_080D97DC: .4byte gUnknown_080E5C24
_080D97E0: .4byte 0x000004DC
_080D97E4:
	ldr r7, _080D98C0 @ =0x0000055C
	add r7, sp
	ldr r7, [r7]
	ldr r0, [r7]
	bl sub_80094A4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r6, r1, #0x1f
	cmp r6, #0
	beq _080D9802
	bl _080DAAE6
_080D9802:
	movs r4, #0x87
	lsls r4, r4, #3
	add r4, sp
	movs r0, #1
	str r0, [r4]
	movs r0, #0x14
	bl sub_80005D4
	movs r1, #0xaa
	lsls r1, r1, #3
	add r1, sp
	ldr r1, [r1]
	ldr r1, [r1]
	mov r8, r1
	movs r5, #0x89
	lsls r5, r5, #3
	add r5, sp
	adds r1, r5, #0
	ldm r4!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldr r1, _080D98C4 @ =gUnknown_080E5E74
	str r1, [r0]
	mov r1, r8
	str r1, [r0, #4]
	adds r2, r0, #0
	adds r2, #8
	movs r1, #0x89
	lsls r1, r1, #3
	add r1, sp
	ldm r1!, {r3, r4, r7}
	stm r2!, {r3, r4, r7}
	ldr r4, _080D98C8 @ =0x00000444
	add r4, sp
	str r0, [r4]
	movs r0, #0xc
	bl sub_80005D4
	ldr r3, [r4]
	str r6, [r4]
	str r3, [r5]
	movs r1, #0xaa
	lsls r1, r1, #3
	add r1, sp
	ldr r1, [r1]
	ldr r2, [r1]
	ldr r1, _080D98CC @ =gUnknown_080E5E94
	str r1, [r0]
	str r2, [r0, #4]
	str r6, [r5]
	str r3, [r0, #8]
	movs r2, #0xac
	lsls r2, r2, #3
	add r2, sp
	ldr r5, [r2]
	adds r4, r0, #0
	adds r3, r5, #0
	ldr r1, [r3]
	cmp r4, r1
	beq _080D9888
	cmp r1, #0
	beq _080D9888
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D9888:
	str r4, [r5]
	movs r4, #0xac
	lsls r4, r4, #3
	add r4, sp
	ldr r4, [r4]
	ldr r0, [r4]
	movs r1, #0
	str r1, [r4]
	ldr r6, _080D98D0 @ =0x000004DC
	add r6, sp
	ldr r6, [r6]
	str r0, [r6]
_080D98A0:
	ldr r0, _080D98C8 @ =0x00000444
	add r0, sp
	ldr r1, [r0]
	cmp r1, #0
	bne _080D98AE
	bl sub_80DB0CC
_080D98AE:
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
	bl sub_80DB0CC
	.align 2, 0
_080D98C0: .4byte 0x0000055C
_080D98C4: .4byte gUnknown_080E5E74
_080D98C8: .4byte 0x00000444
_080D98CC: .4byte gUnknown_080E5E94
_080D98D0: .4byte 0x000004DC
_080D98D4:
	mov r4, sl
	adds r4, #0xb8
	ldr r0, [r4]
	bl sub_803BE9C
	cmp r0, #0
	beq _080D98E6
	bl _080DAAE6
_080D98E6:
	movs r5, #0
	ldr r1, [r4]
	cmp r5, r1
	beq _080D98FE
	cmp r1, #0
	beq _080D98FE
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D98FE:
	str r5, [r4]
	movs r0, #4
	bl sub_80005D4
	adds r6, r0, #0
	movs r5, #0x87
	lsls r5, r5, #3
	add r5, sp
	adds r0, r5, #0
	bl sub_800835C
	ldr r4, _080D9970 @ =0x0000043C
	add r4, sp
	adds r0, r4, #0
	bl sub_800770C
	movs r0, #1
	str r0, [sp]
	str r5, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #0x1f
	movs r3, #0
	bl sub_8050CC0
	mov r4, sl
	adds r4, #0xac
	adds r5, r0, #0
	ldr r0, [r4]
	adds r6, r4, #0
	cmp r5, r0
	beq _080D994A
	cmp r0, #0
	beq _080D994A
	movs r1, #3
	bl sub_8050D0C
_080D994A:
	str r5, [r4]
	ldr r0, _080D9970 @ =0x0000043C
	add r0, sp
	movs r1, #2
	bl sub_8007714
	movs r0, #0x87
	lsls r0, r0, #3
	add r0, sp
	movs r1, #2
	bl sub_8008364
	ldr r0, [r6]
	bl sub_8050D5C
	movs r0, #0xc
	bl _080DA858
	.align 2, 0
_080D9970: .4byte 0x0000043C
_080D9974:
	mov r4, sl
	adds r4, #0xac
	ldr r0, [r4]
	bl sub_8050D34
	cmp r0, #3
	beq _080D9986
	bl _080DAAE6
_080D9986:
	ldr r0, [r4]
	ldr r1, _080D99A4 @ =gUnknown_080F05B8
	ldr r2, _080D99A8 @ =gUnknown_080F05C0
	ldr r3, _080D99AC @ =gUnknown_080F05C8
	ldr r5, _080D99B0 @ =gUnknown_080F05D4
	movs r4, #0
	str r5, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	str r4, [sp, #0xc]
	bl sub_8050E0C
	movs r0, #6
	bl _080DAABA
	.align 2, 0
_080D99A4: .4byte gUnknown_080F05B8
_080D99A8: .4byte gUnknown_080F05C0
_080D99AC: .4byte gUnknown_080F05C8
_080D99B0: .4byte gUnknown_080F05D4
_080D99B4:
	ldr r2, _080D99FC @ =0x0000055C
	add r2, sp
	ldr r2, [r2]
	ldr r0, [r2]
	bl sub_80094A4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r6, r1, #0x1f
	cmp r6, #0
	beq _080D99D2
	bl _080DAAE6
_080D99D2:
	mov r4, sl
	adds r4, #0xac
	ldr r0, [r4]
	bl sub_8050D34
	cmp r0, #6
	bne _080D9A00
	add r0, sp, #0x10
	ldrh r0, [r0, #4]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _080D99F0
	bl _080DAAE6
_080D99F0:
	ldr r0, [r4]
	bl sub_8050D74
	movs r0, #0xa
	bl _080DA804
	.align 2, 0
_080D99FC: .4byte 0x0000055C
_080D9A00:
	ldr r0, [r4]
	bl sub_8050DF0
	cmp r0, #2
	beq _080D9AAC
	cmp r0, #2
	bgt _080D9A16
	cmp r0, #1
	beq _080D9A26
	bl _080DAAE6
_080D9A16:
	cmp r0, #3
	bne _080D9A1C
	b _080D9B40
_080D9A1C:
	cmp r0, #4
	bne _080D9A22
	b _080D9C1C
_080D9A22:
	bl _080DAAE6
_080D9A26:
	ldr r4, _080D9A9C @ =0x0000055C
	add r4, sp
	ldr r4, [r4]
	ldr r0, [r4]
	ldr r1, _080D9AA0 @ =0x00000889
	movs r2, #1
	movs r3, #1
	bl sub_8009378
	movs r0, #0xb
	movs r5, #0xab
	lsls r5, r5, #3
	add r5, sp
	ldr r5, [r5]
	str r0, [r5]
	movs r4, #0x87
	lsls r4, r4, #3
	add r4, sp
	movs r0, #9
	str r0, [r4]
	movs r0, #0x14
	bl sub_80005D4
	movs r7, #0xaa
	lsls r7, r7, #3
	add r7, sp
	ldr r7, [r7]
	ldr r7, [r7]
	mov r8, r7
	movs r5, #0x89
	lsls r5, r5, #3
	add r5, sp
	adds r1, r5, #0
	ldm r4!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldr r1, _080D9AA4 @ =gUnknown_080E5E74
	str r1, [r0]
	mov r1, r8
	str r1, [r0, #4]
	adds r2, r0, #0
	adds r2, #8
	movs r1, #0x89
	lsls r1, r1, #3
	add r1, sp
	ldm r1!, {r3, r4, r7}
	stm r2!, {r3, r4, r7}
	ldr r1, _080D9AA8 @ =0x00000444
	add r1, sp
	str r6, [r1]
	str r0, [r5]
	movs r0, #0xc
	bl sub_80005D4
	adds r1, r5, #0
	movs r2, #0
	bl sub_803B6FC
	b _080D9BC6
	.align 2, 0
_080D9A9C: .4byte 0x0000055C
_080D9AA0: .4byte 0x00000889
_080D9AA4: .4byte gUnknown_080E5E74
_080D9AA8: .4byte 0x00000444
_080D9AAC:
	ldr r3, _080D9B30 @ =0x0000055C
	add r3, sp
	ldr r3, [r3]
	ldr r0, [r3]
	ldr r1, _080D9B34 @ =0x00000889
	movs r2, #1
	movs r3, #1
	bl sub_8009378
	movs r0, #0xb
	movs r4, #0xab
	lsls r4, r4, #3
	add r4, sp
	ldr r4, [r4]
	str r0, [r4]
	movs r4, #0x87
	lsls r4, r4, #3
	add r4, sp
	movs r0, #9
	str r0, [r4]
	movs r0, #0x14
	bl sub_80005D4
	movs r5, #0xaa
	lsls r5, r5, #3
	add r5, sp
	ldr r5, [r5]
	ldr r5, [r5]
	mov r8, r5
	movs r5, #0x89
	lsls r5, r5, #3
	add r5, sp
	adds r1, r5, #0
	ldm r4!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldr r1, _080D9B38 @ =gUnknown_080E5E74
	str r1, [r0]
	mov r4, r8
	str r4, [r0, #4]
	adds r2, r0, #0
	adds r2, #8
	movs r1, #0x89
	lsls r1, r1, #3
	add r1, sp
	ldm r1!, {r3, r4, r7}
	stm r2!, {r3, r4, r7}
	ldr r1, _080D9B3C @ =0x00000444
	add r1, sp
	str r6, [r1]
	str r0, [r5]
	movs r0, #0xc
	bl sub_80005D4
	adds r1, r5, #0
	movs r2, #1
	bl sub_803B6FC
	movs r6, #0xac
	lsls r6, r6, #3
	add r6, sp
	ldr r5, [r6]
	adds r4, r0, #0
	adds r7, r5, #0
	ldr r1, [r7]
	b _080D9BD4
	.align 2, 0
_080D9B30: .4byte 0x0000055C
_080D9B34: .4byte 0x00000889
_080D9B38: .4byte gUnknown_080E5E74
_080D9B3C: .4byte 0x00000444
_080D9B40:
	ldr r1, _080D9C08 @ =0x0000055C
	add r1, sp
	ldr r1, [r1]
	ldr r0, [r1]
	ldr r1, _080D9C0C @ =0x00000889
	movs r2, #1
	movs r3, #1
	bl sub_8009378
	movs r0, #0xb
	movs r2, #0xab
	lsls r2, r2, #3
	add r2, sp
	ldr r2, [r2]
	str r0, [r2]
	movs r4, #0x87
	lsls r4, r4, #3
	add r4, sp
	movs r0, #9
	str r0, [r4]
	movs r0, #0x14
	bl sub_80005D4
	movs r3, #0xaa
	lsls r3, r3, #3
	add r3, sp
	ldr r3, [r3]
	ldr r3, [r3]
	mov r8, r3
	movs r5, #0x89
	lsls r5, r5, #3
	add r5, sp
	adds r1, r5, #0
	ldm r4!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldr r1, _080D9C10 @ =gUnknown_080E5E74
	str r1, [r0]
	mov r4, r8
	str r4, [r0, #4]
	adds r2, r0, #0
	adds r2, #8
	movs r1, #0x89
	lsls r1, r1, #3
	add r1, sp
	ldm r1!, {r3, r4, r7}
	stm r2!, {r3, r4, r7}
	ldr r4, _080D9C14 @ =0x00000444
	add r4, sp
	str r0, [r4]
	movs r0, #0x10
	bl sub_80005D4
	ldr r2, [r4]
	str r6, [r4]
	str r2, [r5]
	movs r7, #0xaa
	lsls r7, r7, #3
	add r7, sp
	ldr r7, [r7]
	ldr r3, [r7]
	movs r4, #0x88
	ldr r1, _080D9C18 @ =gUnknown_080E5D54
	str r1, [r0]
	str r6, [r5]
	str r2, [r0, #4]
	str r3, [r0, #8]
	str r4, [r0, #0xc]
_080D9BC6:
	movs r1, #0xac
	lsls r1, r1, #3
	add r1, sp
	ldr r5, [r1]
	adds r4, r0, #0
	adds r2, r5, #0
	ldr r1, [r2]
_080D9BD4:
	cmp r4, r1
	beq _080D9BE8
	cmp r1, #0
	beq _080D9BE8
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D9BE8:
	str r4, [r5]
	ldr r0, _080D9C14 @ =0x00000444
	add r0, sp
	ldr r1, [r0]
	cmp r1, #0
	bne _080D9BF8
	bl _080DAAE6
_080D9BF8:
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
	bl _080DAAE6
	.align 2, 0
_080D9C08: .4byte 0x0000055C
_080D9C0C: .4byte 0x00000889
_080D9C10: .4byte gUnknown_080E5E74
_080D9C14: .4byte 0x00000444
_080D9C18: .4byte gUnknown_080E5D54
_080D9C1C:
	ldr r0, [r4]
	bl sub_8050D74
	movs r0, #0xa
	bl _080DA804
_080D9C28:
	mov r4, sl
	adds r4, #0xac
	ldr r0, [r4]
	bl sub_8050D34
	cmp r0, #0
	beq _080D9C3A
	bl _080DAAE6
_080D9C3A:
	movs r5, #0
	ldr r0, [r4]
	cmp r5, r0
	beq _080D9C4C
	cmp r0, #0
	beq _080D9C4C
	movs r1, #3
	bl sub_8050D0C
_080D9C4C:
	str r5, [r4]
	movs r0, #0x10
	bl sub_80005D4
	movs r1, #1
	str r1, [sp]
	movs r1, #6
	str r1, [sp, #4]
	movs r1, #0
	movs r2, #0x1f
	movs r3, #0
	bl sub_803BF78
	mov r4, sl
	adds r4, #0xb8
	adds r5, r0, #0
	ldr r1, [r4]
	adds r7, r4, #0
	cmp r5, r1
	beq _080D9C84
	cmp r1, #0
	beq _080D9C84
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D9C84:
	str r5, [r4]
	ldr r0, [r7]
	ldr r1, [r0, #4]
	ldr r1, [r1, #0xc]
	bl sub_80D3910
	movs r0, #1
	bl sub_080DA76C
_080D9C96:
	ldr r5, _080D9CCC @ =0x0000055C
	add r5, sp
	ldr r5, [r5]
	ldr r0, [r5]
	bl sub_80094A4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r1, r1, #0x1f
	cmp r1, #0
	beq _080D9CB4
	bl _080DAAE6
_080D9CB4:
	movs r6, #0xac
	lsls r6, r6, #3
	add r6, sp
	ldr r6, [r6]
	ldr r0, [r6]
	str r1, [r6]
	ldr r1, _080D9CD0 @ =0x000004DC
	add r1, sp
	ldr r1, [r1]
	str r0, [r1]
	bl sub_80DB0CC
	.align 2, 0
_080D9CCC: .4byte 0x0000055C
_080D9CD0: .4byte 0x000004DC
_080D9CD4:
	mov r4, sl
	adds r4, #0xb4
	ldr r0, [r4]
	bl sub_803BE9C
	cmp r0, #0
	beq _080D9CE6
	bl _080DAAE6
_080D9CE6:
	movs r5, #0
	ldr r1, [r4]
	cmp r5, r1
	beq _080D9CFE
	cmp r1, #0
	beq _080D9CFE
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D9CFE:
	str r5, [r4]
	movs r0, #0x10
	bl sub_80005D4
	movs r1, #1
	str r1, [sp]
	movs r1, #0
	str r1, [sp, #4]
	movs r2, #0x1f
	movs r3, #0
	bl sub_803BF78
	mov r4, sl
	adds r4, #0xb8
	adds r5, r0, #0
	ldr r1, [r4]
	adds r7, r4, #0
	cmp r5, r1
	beq _080D9D34
	cmp r1, #0
	beq _080D9D34
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D9D34:
	str r5, [r4]
	ldr r0, [r7]
	ldr r1, [r0, #4]
	ldr r1, [r1, #0xc]
	bl sub_80D3910
	movs r0, #1
	bl _080DAADC
_080D9D46:
	mov r4, sl
	adds r4, #0xb8
	ldr r0, [r4]
	bl sub_803BE9C
	adds r7, r4, #0
	cmp r0, #3
	beq _080D9D5A
	bl _080DAAE6
_080D9D5A:
	add r0, sp, #0x10
	ldrh r2, [r0, #4]
	movs r0, #1
	ands r0, r2
	cmp r0, #0
	bne _080D9D68
	b _080DA11C
_080D9D68:
	movs r3, #0
	movs r5, #0x9f
	lsls r5, r5, #3
	add r5, sp
	str r3, [r5]
	ldr r0, [r4]
	bl sub_803C540
	cmp r0, #6
	bls _080D9D7E
	b _080DA0E4
_080D9D7E:
	lsls r0, r0, #2
	ldr r1, _080D9D88 @ =_080D9D8C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080D9D88: .4byte _080D9D8C
_080D9D8C: @ jump table
	.4byte _080D9DA8 @ case 0
	.4byte _080DA014 @ case 1
	.4byte _080D9E1C @ case 2
	.4byte _080D9EBC @ case 3
	.4byte _080D9F30 @ case 4
	.4byte _080D9FA8 @ case 5
	.4byte _080DA0C4 @ case 6
_080D9DA8:
	movs r4, #0x87
	lsls r4, r4, #3
	add r4, sp
	movs r0, #3
	str r0, [r4]
	movs r0, #0x14
	bl sub_80005D4
	movs r6, #0xaa
	lsls r6, r6, #3
	add r6, sp
	ldr r6, [r6]
	ldr r6, [r6]
	mov r8, r6
	movs r6, #0x89
	lsls r6, r6, #3
	add r6, sp
	adds r1, r6, #0
	ldm r4!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldr r1, _080D9E10 @ =gUnknown_080E5E74
	str r1, [r0]
	mov r1, r8
	str r1, [r0, #4]
	adds r2, r0, #0
	adds r2, #8
	movs r1, #0x89
	lsls r1, r1, #3
	add r1, sp
	ldm r1!, {r3, r4, r5}
	stm r2!, {r3, r4, r5}
	ldr r4, _080D9E14 @ =0x00000444
	add r4, sp
	str r0, [r4]
	movs r0, #0xc
	bl sub_80005D4
	ldr r5, [r4]
	movs r3, #0
	str r3, [r4]
	str r5, [r6]
	movs r1, #0xaa
	lsls r1, r1, #3
	add r1, sp
	ldr r1, [r1]
	ldr r2, [r1]
	ldr r1, _080D9E18 @ =gUnknown_080E5E54
	str r1, [r0]
	str r2, [r0, #4]
	str r3, [r6]
	str r5, [r0, #8]
	b _080DA07A
	.align 2, 0
_080D9E10: .4byte gUnknown_080E5E74
_080D9E14: .4byte 0x00000444
_080D9E18: .4byte gUnknown_080E5E54
_080D9E1C:
	movs r0, #0x10
	bl sub_80005D4
	adds r6, r0, #0
	movs r4, #0xaa
	lsls r4, r4, #3
	add r4, sp
	ldr r4, [r4]
	ldr r4, [r4]
	mov r8, r4
	movs r5, #1
	mov sb, r5
	ldr r0, _080D9EAC @ =gUnknown_080E5C14
	str r0, [r6]
	str r4, [r6, #4]
	movs r0, #0x14
	bl sub_80005D4
	ldr r1, _080D9EB0 @ =gUnknown_080E5E44
	str r1, [r0]
	movs r1, #0
	strb r1, [r0, #4]
	adds r5, r0, #6
	movs r3, #0x8d
	lsls r3, r3, #2
	ldrh r2, [r0, #6]
	ldr r4, _080D9EB4 @ =0xFFFFFC00
	adds r1, r4, #0
	ands r1, r2
	orrs r1, r3
	strh r1, [r0, #6]
	ldrb r2, [r5, #1]
	movs r3, #3
	adds r1, r3, #0
	ands r1, r2
	strb r1, [r5, #1]
	ldrh r2, [r5, #2]
	adds r1, r4, #0
	ands r1, r2
	strh r1, [r5, #2]
	ldrb r1, [r5, #3]
	ands r3, r1
	strb r3, [r5, #3]
	ldrh r1, [r5, #4]
	ands r4, r1
	strh r4, [r5, #4]
	ldr r1, _080D9EB8 @ =gUnknown_080E5C24
	str r1, [r0]
	mov r1, r8
	str r1, [r0, #0xc]
	mov r2, sb
	str r2, [r0, #0x10]
	str r0, [r6, #8]
	str r2, [r6, #0xc]
	movs r3, #0xac
	lsls r3, r3, #3
	add r3, sp
	ldr r4, [r3]
	adds r5, r4, #0
	ldr r1, [r5]
	cmp r6, r1
	beq _080D9EA8
	cmp r1, #0
	beq _080D9EA8
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080D9EA8:
	str r6, [r4]
	b _080DA0E4
	.align 2, 0
_080D9EAC: .4byte gUnknown_080E5C14
_080D9EB0: .4byte gUnknown_080E5E44
_080D9EB4: .4byte 0xFFFFFC00
_080D9EB8: .4byte gUnknown_080E5C24
_080D9EBC:
	movs r4, #0x87
	lsls r4, r4, #3
	add r4, sp
	movs r0, #6
	str r0, [r4]
	movs r0, #0x14
	bl sub_80005D4
	movs r6, #0xaa
	lsls r6, r6, #3
	add r6, sp
	ldr r6, [r6]
	ldr r6, [r6]
	mov r8, r6
	movs r6, #0x89
	lsls r6, r6, #3
	add r6, sp
	adds r1, r6, #0
	ldm r4!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldr r1, _080D9F24 @ =gUnknown_080E5E74
	str r1, [r0]
	mov r1, r8
	str r1, [r0, #4]
	adds r2, r0, #0
	adds r2, #8
	movs r1, #0x89
	lsls r1, r1, #3
	add r1, sp
	ldm r1!, {r3, r4, r5}
	stm r2!, {r3, r4, r5}
	ldr r4, _080D9F28 @ =0x00000444
	add r4, sp
	str r0, [r4]
	movs r0, #0xc
	bl sub_80005D4
	ldr r5, [r4]
	movs r3, #0
	str r3, [r4]
	str r5, [r6]
	movs r1, #0xaa
	lsls r1, r1, #3
	add r1, sp
	ldr r1, [r1]
	ldr r2, [r1]
	ldr r1, _080D9F2C @ =gUnknown_080E5E94
	str r1, [r0]
	str r2, [r0, #4]
	str r3, [r6]
	str r5, [r0, #8]
	b _080DA07A
	.align 2, 0
_080D9F24: .4byte gUnknown_080E5E74
_080D9F28: .4byte 0x00000444
_080D9F2C: .4byte gUnknown_080E5E94
_080D9F30:
	movs r4, #0x87
	lsls r4, r4, #3
	add r4, sp
	movs r0, #7
	str r0, [r4]
	movs r0, #0x14
	bl sub_80005D4
	movs r5, #0xaa
	lsls r5, r5, #3
	add r5, sp
	ldr r5, [r5]
	ldr r5, [r5]
	mov r8, r5
	movs r6, #0x89
	lsls r6, r6, #3
	add r6, sp
	adds r1, r6, #0
	ldm r4!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldr r1, _080D9F9C @ =gUnknown_080E5E74
	str r1, [r0]
	mov r1, r8
	str r1, [r0, #4]
	adds r2, r0, #0
	adds r2, #8
	movs r1, #0x89
	lsls r1, r1, #3
	add r1, sp
	ldm r1!, {r3, r4, r5}
	stm r2!, {r3, r4, r5}
	ldr r4, _080D9FA0 @ =0x00000444
	add r4, sp
	str r0, [r4]
	movs r0, #0x10
	bl sub_80005D4
	ldr r5, [r4]
	movs r2, #0
	str r2, [r4]
	str r5, [r6]
	movs r1, #0xaa
	lsls r1, r1, #3
	add r1, sp
	ldr r1, [r1]
	ldr r3, [r1]
	ldr r1, _080D9FA4 @ =gUnknown_080E5EB4
	str r1, [r0]
	str r2, [r6]
	str r5, [r0, #4]
	str r3, [r0, #8]
	strb r2, [r0, #0xc]
	b _080DA07A
	.align 2, 0
_080D9F9C: .4byte gUnknown_080E5E74
_080D9FA0: .4byte 0x00000444
_080D9FA4: .4byte gUnknown_080E5EB4
_080D9FA8:
	movs r4, #0x87
	lsls r4, r4, #3
	add r4, sp
	movs r0, #8
	str r0, [r4]
	movs r0, #0x14
	bl sub_80005D4
	movs r5, #0xaa
	lsls r5, r5, #3
	add r5, sp
	ldr r5, [r5]
	ldr r5, [r5]
	mov r8, r5
	movs r6, #0x89
	lsls r6, r6, #3
	add r6, sp
	adds r1, r6, #0
	ldm r4!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldr r1, _080DA008 @ =gUnknown_080E5E74
	str r1, [r0]
	mov r1, r8
	str r1, [r0, #4]
	adds r2, r0, #0
	adds r2, #8
	movs r1, #0x89
	lsls r1, r1, #3
	add r1, sp
	ldm r1!, {r3, r4, r5}
	stm r2!, {r3, r4, r5}
	ldr r4, _080DA00C @ =0x00000444
	add r4, sp
	str r0, [r4]
	movs r0, #0xc
	bl sub_80005D4
	ldr r5, [r4]
	movs r2, #0
	str r2, [r4]
	str r5, [r6]
	movs r1, #0xaa
	lsls r1, r1, #3
	add r1, sp
	ldr r1, [r1]
	ldr r3, [r1]
	ldr r1, _080DA010 @ =gUnknown_080E5EA4
	b _080DA072
	.align 2, 0
_080DA008: .4byte gUnknown_080E5E74
_080DA00C: .4byte 0x00000444
_080DA010: .4byte gUnknown_080E5EA4
_080DA014:
	movs r4, #0x87
	lsls r4, r4, #3
	add r4, sp
	movs r0, #4
	str r0, [r4]
	movs r0, #0x14
	bl sub_80005D4
	movs r5, #0xaa
	lsls r5, r5, #3
	add r5, sp
	ldr r5, [r5]
	ldr r5, [r5]
	mov r8, r5
	movs r6, #0x89
	lsls r6, r6, #3
	add r6, sp
	adds r1, r6, #0
	ldm r4!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldr r1, _080DA0B8 @ =gUnknown_080E5E74
	str r1, [r0]
	mov r1, r8
	str r1, [r0, #4]
	adds r2, r0, #0
	adds r2, #8
	movs r1, #0x89
	lsls r1, r1, #3
	add r1, sp
	ldm r1!, {r3, r4, r5}
	stm r2!, {r3, r4, r5}
	ldr r4, _080DA0BC @ =0x00000444
	add r4, sp
	str r0, [r4]
	movs r0, #0xc
	bl sub_80005D4
	ldr r5, [r4]
	movs r2, #0
	str r2, [r4]
	str r5, [r6]
	movs r1, #0xaa
	lsls r1, r1, #3
	add r1, sp
	ldr r1, [r1]
	ldr r3, [r1]
	ldr r1, _080DA0C0 @ =gUnknown_080E5CF4
_080DA072:
	str r1, [r0]
	str r2, [r6]
	str r5, [r0, #4]
	str r3, [r0, #8]
_080DA07A:
	movs r2, #0xac
	lsls r2, r2, #3
	add r2, sp
	ldr r5, [r2]
	adds r4, r0, #0
	adds r3, r5, #0
	ldr r1, [r3]
	cmp r4, r1
	beq _080DA09C
	cmp r1, #0
	beq _080DA09C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DA09C:
	str r4, [r5]
	ldr r0, _080DA0BC @ =0x00000444
	add r0, sp
	ldr r1, [r0]
	cmp r1, #0
	beq _080DA0E4
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
	b _080DA0E4
	.align 2, 0
_080DA0B8: .4byte gUnknown_080E5E74
_080DA0BC: .4byte 0x00000444
_080DA0C0: .4byte gUnknown_080E5CF4
_080DA0C4:
	movs r4, #1
	movs r5, #0x9f
	lsls r5, r5, #3
	add r5, sp
	str r4, [r5]
	ldr r0, [r7]
	ldr r1, [r0, #4]
	ldr r1, [r1, #0x14]
	bl sub_80D3910
	movs r0, #0xd
	movs r6, #0xab
	lsls r6, r6, #3
	add r6, sp
	ldr r6, [r6]
	str r0, [r6]
_080DA0E4:
	movs r0, #0x9f
	lsls r0, r0, #3
	add r0, sp
	ldr r0, [r0]
	cmp r0, #0
	beq _080DA0F4
	bl _080DAAE6
_080DA0F4:
	ldr r0, [r7]
	bl sub_803C544
	ldr r1, _080DA114 @ =0x0000055C
	add r1, sp
	ldr r1, [r1]
	ldr r0, [r1]
	ldr r1, _080DA118 @ =0x00000889
	movs r2, #1
	movs r3, #1
	bl sub_8009378
	movs r0, #9
	bl _080DAADC
	.align 2, 0
_080DA114: .4byte 0x0000055C
_080DA118: .4byte 0x00000889
_080DA11C:
	lsls r1, r2, #0x1c
	lsrs r1, r1, #0x1f
	lsls r0, r2, #0x1e
	lsrs r0, r0, #0x1f
	cmn r1, r0
	bne _080DA12C
	bl _080DAAE6
_080DA12C:
	ldr r0, [r4]
	ldr r1, [r0, #4]
	ldr r1, [r1, #0x14]
	bl sub_80D3910
	movs r0, #8
	b _080DA804
_080DA13A:
	mov r4, sl
	adds r4, #0xb8
	ldr r0, [r4]
	bl sub_803BE9C
	cmp r0, #0
	beq _080DA14C
	bl _080DAAE6
_080DA14C:
	movs r5, #0
	ldr r1, [r4]
	cmp r5, r1
	beq _080DA164
	cmp r1, #0
	beq _080DA164
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DA164:
	str r5, [r4]
	movs r0, #0xc
	bl sub_80005D4
	movs r1, #1
	str r1, [sp]
	movs r1, #0
	movs r2, #0x1f
	movs r3, #0
	bl sub_803C54C
	mov r4, sl
	adds r4, #0xb4
	adds r5, r0, #0
	ldr r1, [r4]
	adds r6, r4, #0
	cmp r5, r1
	beq _080DA198
	cmp r1, #0
	beq _080DA198
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DA198:
	str r5, [r4]
	movs r4, #0xaa
	lsls r4, r4, #3
	add r4, sp
	ldr r4, [r4]
	ldr r1, [r4]
	ldr r5, _080DA22C @ =0x00002210
	adds r0, r1, r5
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	cmp r0, #0
	bge _080DA1C4
	ldr r7, _080DA230 @ =0x000034C4
	adds r0, r1, r7
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DA1C4
	ldr r0, [r6]
	ldr r1, [r0, #4]
	ldr r1, [r1, #0xc]
	bl sub_80D3910
_080DA1C4:
	ldr r4, [r6]
	movs r5, #0
	ldr r1, _080DA234 @ =0x00000564
	add r1, sp
	ldr r1, [r1]
	ldr r0, [r1]
	ldr r1, [r0]
	adds r1, #0xb0
	ldr r1, [r1]
	bl sub_80D3910
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080DA1F8
	movs r2, #0xaa
	lsls r2, r2, #3
	add r2, sp
	ldr r2, [r2]
	ldr r0, [r2]
	ldrh r1, [r0, #0x12]
	lsls r1, r1, #0x15
	lsrs r1, r1, #0x1a
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080DA1FA
_080DA1F8:
	movs r5, #1
_080DA1FA:
	adds r2, r5, #0
	movs r3, #0xaa
	lsls r3, r3, #3
	add r3, sp
	ldr r3, [r3]
	ldr r1, [r3]
	adds r1, #0x10
	adds r0, r4, #0
	adds r0, #8
	bl sub_803CD4C
	mov r0, sl
	adds r0, #0xb4
	ldr r0, [r0]
	movs r4, #0xaa
	lsls r4, r4, #3
	add r4, sp
	ldr r4, [r4]
	ldr r1, [r4]
	ldr r1, [r1, #8]
	adds r0, #8
	bl sub_803D3A0
	movs r0, #0
	b _080DA790
	.align 2, 0
_080DA22C: .4byte 0x00002210
_080DA230: .4byte 0x000034C4
_080DA234: .4byte 0x00000564
_080DA238:
	ldr r6, _080DA270 @ =0x0000055C
	add r6, sp
	ldr r6, [r6]
	ldr r0, [r6]
	bl sub_80094A4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r1, r1, #0x1f
	cmp r1, #0
	beq _080DA256
	bl _080DAAE6
_080DA256:
	movs r7, #0xac
	lsls r7, r7, #3
	add r7, sp
	ldr r7, [r7]
	ldr r0, [r7]
	str r1, [r7]
	ldr r3, _080DA274 @ =0x000004DC
	add r3, sp
	ldr r3, [r3]
	str r0, [r3]
	bl sub_80DB0CC
	.align 2, 0
_080DA270: .4byte 0x0000055C
_080DA274: .4byte 0x000004DC
_080DA278:
	ldr r4, _080DA33C @ =gUnknown_0300040C
	ldr r1, [r4]
	adds r0, r1, #0
	adds r0, #8
	movs r5, #0xd5
	lsls r5, r5, #2
	adds r1, r1, r5
	ldr r1, [r1]
	ldr r1, [r1, #0xc]
	bl sub_80D3910
	cmp r0, #0
	beq _080DA296
	bl _080DAAE6
_080DA296:
	ldr r4, [r4]
	movs r6, #0xde
	lsls r6, r6, #2
	adds r5, r4, r6
	movs r2, #0
	movs r1, #0
	ldr r0, [r5]
	cmp r0, #0
	bne _080DA2AA
	movs r1, #1
_080DA2AA:
	cmp r1, #0
	beq _080DA2D8
	movs r7, #0xe3
	lsls r7, r7, #2
	adds r0, r4, r7
	movs r1, #0
	ldr r0, [r0]
	cmp r0, #0
	bne _080DA2BE
	movs r1, #1
_080DA2BE:
	cmp r1, #0
	beq _080DA2D8
	movs r1, #0x9a
	lsls r1, r1, #3
	adds r0, r4, r1
	movs r1, #0
	ldr r0, [r0]
	cmp r0, #0
	bne _080DA2D2
	movs r1, #1
_080DA2D2:
	cmp r1, #0
	beq _080DA2D8
	movs r2, #1
_080DA2D8:
	adds r3, r2, #0
	cmp r3, #0
	beq _080DA2E0
	b _080DA468
_080DA2E0:
	movs r1, #0
	ldr r0, [r5]
	cmp r0, #0
	bne _080DA2EA
	movs r1, #1
_080DA2EA:
	cmp r1, #0
	bne _080DA344
	adds r7, r5, #4
	ldr r1, [r5, #4]
	ldr r2, [r5, #8]
	ldr r3, _080DA340 @ =0x000004FC
	add r3, sp
	str r1, [r3]
	str r2, [r3, #4]
	ldr r4, _080DA33C @ =gUnknown_0300040C
	mov r8, r4
	movs r3, #0x96
	lsls r3, r3, #3
	add r3, sp
	cmp r0, #0
	beq _080DA332
	lsls r0, r0, #3
	adds r0, #4
	adds r0, r5, r0
	adds r1, r5, #0
	adds r1, #0xc
	cmp r1, r0
	beq _080DA32C
	adds r6, r1, #0
	subs r0, r0, r6
	asrs r2, r0, #3
	cmp r2, #0
	ble _080DA32C
_080DA322:
	ldm r6!, {r0, r1}
	stm r7!, {r0, r1}
	subs r2, #1
	cmp r2, #0
	bgt _080DA322
_080DA32C:
	ldr r0, [r5]
	subs r0, #1
	str r0, [r5]
_080DA332:
	movs r0, #0x96
	lsls r0, r0, #3
	add r0, sp
	ldr r6, _080DA340 @ =0x000004FC
	b _080DA3A6
	.align 2, 0
_080DA33C: .4byte gUnknown_0300040C
_080DA340: .4byte 0x000004FC
_080DA344:
	adds r4, r5, #0
	adds r4, #0x14
	movs r1, #0
	ldr r0, [r5, #0x14]
	cmp r0, #0
	bne _080DA352
	movs r1, #1
_080DA352:
	cmp r1, #0
	bne _080DA3BC
	adds r7, r5, #0
	adds r7, #0x18
	ldr r1, [r5, #0x18]
	ldr r2, [r5, #0x1c]
	ldr r3, _080DA3B4 @ =0x00000504
	add r3, sp
	str r1, [r3]
	str r2, [r3, #4]
	adds r6, r4, #0
	ldr r4, _080DA3B8 @ =gUnknown_0300040C
	mov r8, r4
	movs r3, #0x96
	lsls r3, r3, #3
	add r3, sp
	cmp r0, #0
	beq _080DA39E
	lsls r0, r0, #3
	adds r0, #4
	adds r1, r6, r0
	adds r0, r5, #0
	adds r0, #0x20
	cmp r0, r1
	beq _080DA398
	adds r5, r0, #0
	subs r0, r1, r5
	asrs r2, r0, #3
	cmp r2, #0
	ble _080DA398
_080DA38E:
	ldm r5!, {r0, r1}
	stm r7!, {r0, r1}
	subs r2, #1
	cmp r2, #0
	bgt _080DA38E
_080DA398:
	ldr r0, [r6]
	subs r0, #1
	str r0, [r6]
_080DA39E:
	movs r0, #0x96
	lsls r0, r0, #3
	add r0, sp
	ldr r6, _080DA3B4 @ =0x00000504
_080DA3A6:
	add r6, sp
	ldr r5, [r6]
	ldr r6, [r6, #4]
	str r5, [r0]
	str r6, [r0, #4]
	b _080DA44E
	.align 2, 0
_080DA3B4: .4byte 0x00000504
_080DA3B8: .4byte gUnknown_0300040C
_080DA3BC:
	movs r7, #0xac
	lsls r7, r7, #1
	adds r6, r5, r7
	movs r1, #0
	ldr r0, [r6]
	cmp r0, #0
	bne _080DA3CC
	movs r1, #1
_080DA3CC:
	cmp r1, #0
	bne _080DA438
	movs r1, #0xae
	lsls r1, r1, #1
	adds r4, r5, r1
	ldr r1, [r4]
	ldr r2, [r4, #4]
	ldr r3, _080DA430 @ =0x0000050C
	add r3, sp
	str r1, [r3]
	str r2, [r3, #4]
	ldr r7, _080DA434 @ =gUnknown_0300040C
	mov r8, r7
	movs r3, #0x96
	lsls r3, r3, #3
	add r3, sp
	cmp r0, #0
	beq _080DA41C
	lsls r0, r0, #3
	adds r0, #4
	adds r1, r6, r0
	movs r2, #0xb2
	lsls r2, r2, #1
	adds r0, r5, r2
	cmp r0, r1
	beq _080DA416
	adds r5, r0, #0
	adds r7, r4, #0
	subs r0, r1, r5
	asrs r2, r0, #3
	cmp r2, #0
	ble _080DA416
_080DA40C:
	ldm r5!, {r0, r1}
	stm r7!, {r0, r1}
	subs r2, #1
	cmp r2, #0
	bgt _080DA40C
_080DA416:
	ldr r0, [r6]
	subs r0, #1
	str r0, [r6]
_080DA41C:
	movs r0, #0x96
	lsls r0, r0, #3
	add r0, sp
	ldr r5, _080DA430 @ =0x0000050C
	add r5, sp
	ldr r4, [r5]
	ldr r5, [r5, #4]
	str r4, [r0]
	str r5, [r0, #4]
	b _080DA44E
	.align 2, 0
_080DA430: .4byte 0x0000050C
_080DA434: .4byte gUnknown_0300040C
_080DA438:
	movs r1, #0x96
	lsls r1, r1, #3
	add r1, sp
	movs r0, #0x96
	lsls r0, r0, #3
	add r0, sp
	str r3, [r0]
	str r3, [r1, #4]
	ldr r6, _080DA464 @ =gUnknown_0300040C
	mov r8, r6
	adds r3, r1, #0
_080DA44E:
	mov r7, r8
	ldr r0, [r7]
	adds r0, #8
	movs r1, #0x96
	lsls r1, r1, #3
	add r1, sp
	ldr r1, [r1]
	ldr r2, [r3, #4]
	bl sub_803F878
	b _080DAAE6
	.align 2, 0
_080DA464: .4byte gUnknown_0300040C
_080DA468:
	mov r4, sl
	adds r4, #0xac
	ldr r0, [r4]
	cmp r0, #0
	beq _080DA480
	movs r5, #0
	cmp r5, r0
	beq _080DA47E
	movs r1, #3
	bl sub_8050D0C
_080DA47E:
	str r5, [r4]
_080DA480:
	mov r4, sl
	adds r4, #0xf0
	movs r5, #0
	ldr r0, [r4]
	cmp r5, r0
	beq _080DA490
	bl sub_8000608
_080DA490:
	str r5, [r4]
	ldr r1, _080DA578 @ =0x00000564
	add r1, sp
	ldr r1, [r1]
	ldr r0, [r1]
	ldr r1, [r0]
	movs r2, #0x94
	lsls r2, r2, #1
	adds r1, r1, r2
	ldr r1, [r1]
	bl sub_80D3910
	mov r0, sl
	adds r0, #0xb4
	ldr r1, [r0]
	adds r6, r0, #0
	cmp r1, #0
	bne _080DA4E4
	movs r0, #0xc
	bl sub_80005D4
	movs r1, #1
	str r1, [sp]
	movs r1, #0
	movs r2, #0x1f
	movs r3, #0
	bl sub_803C54C
	adds r5, r6, #0
	adds r4, r0, #0
	ldr r1, [r6]
	cmp r4, r1
	beq _080DA4E2
	cmp r1, #0
	beq _080DA4E2
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DA4E2:
	str r4, [r5]
_080DA4E4:
	movs r3, #0xaa
	lsls r3, r3, #3
	add r3, sp
	ldr r3, [r3]
	ldr r1, [r3]
	ldr r4, _080DA57C @ =0x00002210
	adds r0, r1, r4
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	cmp r0, #0
	bge _080DA50E
	ldr r5, _080DA580 @ =0x000034C4
	adds r0, r1, r5
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DA50E
	ldr r0, [r6]
	ldr r1, [r0, #4]
	ldr r1, [r1, #0x10]
	bl sub_80D3910
_080DA50E:
	ldr r4, [r6]
	movs r5, #0
	ldr r6, _080DA578 @ =0x00000564
	add r6, sp
	ldr r6, [r6]
	ldr r0, [r6]
	ldr r1, [r0]
	adds r1, #0xb0
	ldr r1, [r1]
	bl sub_80D3910
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080DA542
	movs r7, #0xaa
	lsls r7, r7, #3
	add r7, sp
	ldr r7, [r7]
	ldr r0, [r7]
	ldrh r1, [r0, #0x12]
	lsls r1, r1, #0x15
	lsrs r1, r1, #0x1a
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080DA544
_080DA542:
	movs r5, #1
_080DA544:
	adds r2, r5, #0
	movs r0, #0xaa
	lsls r0, r0, #3
	add r0, sp
	ldr r0, [r0]
	ldr r1, [r0]
	adds r1, #0x10
	adds r0, r4, #0
	adds r0, #8
	bl sub_803CD4C
	mov r0, sl
	adds r0, #0xb4
	ldr r0, [r0]
	movs r2, #0xaa
	lsls r2, r2, #3
	add r2, sp
	ldr r2, [r2]
	ldr r1, [r2]
	ldr r1, [r1, #8]
	adds r0, #8
	bl sub_803D3A0
	movs r0, #0
	b _080DA804
	.align 2, 0
_080DA578: .4byte 0x00000564
_080DA57C: .4byte 0x00002210
_080DA580: .4byte 0x000034C4
_080DA584:
	mov r0, sl
	adds r0, #0xac
	ldr r0, [r0]
	bl sub_8050D34
	cmp r0, #3
	beq _080DA594
	b _080DAAE6
_080DA594:
	b _080DA76A
_080DA596:
	mov r4, sl
	adds r4, #0xac
	ldr r0, [r4]
	bl sub_8050D34
	cmp r0, #0
	beq _080DA5A6
	b _080DAAE6
_080DA5A6:
	movs r5, #0
	ldr r0, [r4]
	cmp r5, r0
	beq _080DA5B8
	cmp r0, #0
	beq _080DA5B8
	movs r1, #3
	bl sub_8050D0C
_080DA5B8:
	str r5, [r4]
	b _080DA78E
_080DA5BC:
	mov r0, sl
	adds r0, #0xac
	ldr r0, [r0]
	bl sub_8050D34
	cmp r0, #3
	beq _080DA5CC
	b _080DAAE6
_080DA5CC:
	b _080DAA88
_080DA5CE:
	add r0, sp, #0x10
	ldrh r4, [r0, #8]
	mov r0, sl
	adds r0, #0xac
	ldr r0, [r0]
	bl sub_8050D34
	cmp r0, #6
	bls _080DA5E2
	b _080DAAE6
_080DA5E2:
	lsls r0, r0, #2
	ldr r1, _080DA5EC @ =_080DA5F0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080DA5EC: .4byte _080DA5F0
_080DA5F0: @ jump table
	.4byte _080DA60C @ case 0
	.4byte _080DA60C @ case 1
	.4byte _080DA60C @ case 2
	.4byte _080DA60C @ case 3
	.4byte _080DA62C @ case 4
	.4byte _080DA62C @ case 5
	.4byte _080DA60C @ case 6
_080DA60C:
	movs r0, #2
	movs r7, #0xab
	lsls r7, r7, #3
	add r7, sp
	ldr r7, [r7]
	str r0, [r7]
	ldr r0, _080DA628 @ =gUnknown_0300040C
	ldr r0, [r0]
	adds r0, #8
	movs r1, #4
	bl sub_803F8B8
	b _080DAAE6
	.align 2, 0
_080DA628: .4byte gUnknown_0300040C
_080DA62C:
	movs r1, #2
	adds r0, r4, #0
	ands r0, r1
	cmp r0, #0
	beq _080DA654
	movs r0, #0xab
	lsls r0, r0, #3
	add r0, sp
	ldr r0, [r0]
	str r1, [r0]
	ldr r0, _080DA650 @ =gUnknown_0300040C
	ldr r0, [r0]
	adds r0, #8
	movs r1, #5
	bl sub_803F8B8
	b _080DAAE6
	.align 2, 0
_080DA650: .4byte gUnknown_0300040C
_080DA654:
	movs r0, #0x40
	ands r0, r4
	cmp r0, #0
	beq _080DA678
	movs r2, #0xab
	lsls r2, r2, #3
	add r2, sp
	ldr r2, [r2]
	str r1, [r2]
	ldr r0, _080DA674 @ =gUnknown_0300040C
	ldr r0, [r0]
	adds r0, #8
	movs r1, #0
	bl sub_803F8B8
	b _080DAAE6
	.align 2, 0
_080DA674: .4byte gUnknown_0300040C
_080DA678:
	movs r0, #0x80
	ands r0, r4
	cmp r0, #0
	beq _080DA69C
	movs r3, #0xab
	lsls r3, r3, #3
	add r3, sp
	ldr r3, [r3]
	str r1, [r3]
	ldr r0, _080DA698 @ =gUnknown_0300040C
	ldr r0, [r0]
	adds r0, #8
	movs r1, #1
	bl sub_803F8B8
	b _080DAAE6
	.align 2, 0
_080DA698: .4byte gUnknown_0300040C
_080DA69C:
	movs r0, #0x20
	ands r0, r4
	cmp r0, #0
	beq _080DA6C0
	movs r4, #0xab
	lsls r4, r4, #3
	add r4, sp
	ldr r4, [r4]
	str r1, [r4]
	ldr r0, _080DA6BC @ =gUnknown_0300040C
	ldr r0, [r0]
	adds r0, #8
	movs r1, #2
	bl sub_803F8B8
	b _080DAAE6
	.align 2, 0
_080DA6BC: .4byte gUnknown_0300040C
_080DA6C0:
	movs r0, #0x10
	ands r4, r0
	cmp r4, #0
	bne _080DA6CA
	b _080DAAE6
_080DA6CA:
	movs r5, #0xab
	lsls r5, r5, #3
	add r5, sp
	ldr r5, [r5]
	str r1, [r5]
	ldr r0, _080DA6E4 @ =gUnknown_0300040C
	ldr r0, [r0]
	adds r0, #8
	movs r1, #3
	bl sub_803F8B8
	b _080DAAE6
	.align 2, 0
_080DA6E4: .4byte gUnknown_0300040C
_080DA6E8:
	ldr r6, _080DA72C @ =0x0000055C
	add r6, sp
	ldr r6, [r6]
	ldr r0, [r6]
	bl sub_80094A4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r3, r1, #0x1f
	cmp r3, #0
	beq _080DA704
	b _080DAAE6
_080DA704:
	mov r1, sl
	adds r1, #0xe8
	movs r0, #1
	strb r0, [r1]
	mov r7, sl
	ldrh r1, [r7, #0x10]
	ldr r0, _080DA730 @ =0x0000F0FF
	ands r0, r1
	strh r0, [r7, #0x10]
	mov r2, sl
	adds r2, #0x60
	ldrh r1, [r2]
	ldr r0, _080DA734 @ =0x0000FF3F
	ands r0, r1
	strh r0, [r2]
	mov r0, sl
	adds r0, #0x5c
	strh r3, [r0]
	b _080DAAB8
	.align 2, 0
_080DA72C: .4byte 0x0000055C
_080DA730: .4byte 0x0000F0FF
_080DA734: .4byte 0x0000FF3F
_080DA738:
	ldr r2, _080DA754 @ =0x0000055C
	add r2, sp
	ldr r2, [r2]
	ldr r0, [r2]
	bl sub_80094A4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	rsbs r1, r0, #0
	orrs r1, r0
	cmp r1, #0
	bge _080DA752
	b _080DAAE6
_080DA752:
	b _080DA802
	.align 2, 0
_080DA754: .4byte 0x0000055C
_080DA758:
	mov r1, sl
	adds r1, #0xe0
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080DA76A
	b _080DAAE6
_080DA76A:
	movs r0, #2

	thumb_func_start sub_080DA76C
sub_080DA76C: @ 0x080DA76C
	movs r4, #0xab
	lsls r4, r4, #3
	add r4, sp
	ldr r4, [r4]
	str r0, [r4]
	b _080DAAE6
_080DA778:
	mov r4, sl
	adds r4, #0xe4
	ldr r0, [r4]
	bl sub_8032370
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080DA78A
	b _080DAAE6
_080DA78A:
	movs r0, #0
	str r0, [r4]
_080DA78E:
	movs r0, #2
_080DA790:
	movs r5, #0xab
	lsls r5, r5, #3
	add r5, sp
	ldr r5, [r5]
	str r0, [r5]
	b _080DAAE6
_080DA79C:
	mov r5, sl
	adds r5, #0xac
	ldr r0, [r5]
	bl sub_8050D34
	cmp r0, #6
	bne _080DA7AC
	b _080DAAE6
_080DA7AC:
	ldr r0, _080DA7C4 @ =gUnknown_0300040C
	ldr r4, [r0]
	adds r4, #8
	ldr r0, [r5]
	bl sub_8050DF0
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_803F8B8
	b _080DAA88
	.align 2, 0
_080DA7C4: .4byte gUnknown_0300040C
_080DA7C8:
	ldr r7, _080DA7DC @ =0x00000564
	add r7, sp
	ldr r7, [r7]
	ldr r0, [r7]
	ldr r1, [r0]
	ldr r1, [r1, #0x28]
	bl sub_80D3910
	b _080DAAB2
	.align 2, 0
_080DA7DC: .4byte 0x00000564
_080DA7E0:
	ldr r2, _080DA810 @ =0x00000564
	add r2, sp
	ldr r2, [r2]
	ldr r0, [r2]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	movs r1, #0
	bl sub_80D3914
	ldr r1, [r0, #0x14]
	ldr r1, [r1, #0x3c]
	bl sub_80D3910
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080DA802
	b _080DAAE6
_080DA802:
	movs r0, #2
_080DA804:
	movs r3, #0xab
	lsls r3, r3, #3
	add r3, sp
	ldr r3, [r3]
	str r0, [r3]
	b _080DAAE6
	.align 2, 0
_080DA810: .4byte 0x00000564
_080DA814:
	mov r0, sl
	adds r0, #0xef
	ldrb r1, [r0]
	movs r4, #0xaf
	lsls r4, r4, #3
	add r4, sp
	str r0, [r4]
	cmp r1, #0x78
	bne _080DA868
	subs r0, #5
	movs r3, #0
	strb r3, [r0]
	mov r5, sl
	ldrh r1, [r5, #0x10]
	ldr r0, _080DA864 @ =0x0000FEFF
	ands r0, r1
	strh r0, [r5, #0x10]
	movs r2, #0x87
	lsls r2, r2, #3
	add r2, sp
	movs r0, #0x3f
	strh r0, [r2]
	mov r1, sl
	adds r1, #0x60
	movs r6, #0x87
	lsls r6, r6, #3
	add r6, sp
	ldrh r0, [r6]
	strh r0, [r1]
	strh r3, [r2]
	adds r1, #2
	ldrh r0, [r6]
	strh r0, [r1]
	movs r0, #2
_080DA858:
	movs r7, #0xab
	lsls r7, r7, #3
	add r7, sp
	ldr r7, [r7]
	str r0, [r7]
	b _080DAAE6
	.align 2, 0
_080DA864: .4byte 0x0000FEFF
_080DA868:
	mov r0, sl
	adds r0, #0xec
	ldrh r1, [r0]
	mov r8, sl
	movs r0, #0x87
	lsls r0, r0, #3
	add r0, sp
	ldr r2, _080DA8C4 @ =0x05000002
	movs r3, #2
	bl sub_8008F60
	movs r0, #0x87
	lsls r0, r0, #3
	add r0, sp
	ldr r1, _080DA8C8 @ =0x00000514
	add r1, sp
	str r0, [r1]
	mov r2, sl
	ldr r1, [r2, #4]
	ldr r0, [r2, #0xc]
	cmp r1, r0
	beq _080DA8CC
	cmp r1, #0
	beq _080DA8A8
	adds r0, r1, #0
	movs r1, #0x87
	lsls r1, r1, #3
	add r1, sp
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080DA8A8:
	mov r6, sl
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	adds r6, #0x62
	movs r7, #0xa9
	lsls r7, r7, #3
	add r7, sp
	str r6, [r7]
	movs r0, #0xee
	add r0, sl
	mov sb, r0
	b _080DA9FE
	.align 2, 0
_080DA8C4: .4byte 0x05000002
_080DA8C8: .4byte 0x00000514
_080DA8CC:
	ldr r2, _080DA924 @ =0x00000584
	add r2, sp
	str r1, [r2]
	movs r0, #1
	ldr r1, _080DA928 @ =0x000004BC
	add r1, sp
	str r0, [r1]
	mov r3, sl
	ldr r0, [r3]
	ldr r4, [r2]
	subs r0, r4, r0
	asrs r4, r0, #4
	movs r0, #0x97
	lsls r0, r0, #3
	add r0, sp
	str r4, [r0]
	ldr r2, _080DA928 @ =0x000004BC
	add r2, sp
	ldr r0, [r1]
	movs r1, #0x97
	lsls r1, r1, #3
	add r1, sp
	cmp r4, r0
	bhs _080DA8FE
	adds r1, r2, #0
_080DA8FE:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _080DA92C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	movs r5, #0xb1
	lsls r5, r5, #3
	add r5, sp
	str r4, [r5]
	cmp r0, #0
	bne _080DA936
	adds r0, r4, #0
	bl sub_80D3BC0
	b _080DA936
	.align 2, 0
_080DA924: .4byte 0x00000584
_080DA928: .4byte 0x000004BC
_080DA92C:
	movs r0, #0
	movs r6, #0xb1
	lsls r6, r6, #3
	add r6, sp
	str r0, [r6]
_080DA936:
	adds r5, r0, #0
	adds r4, r5, #0
	mov r7, r8
	ldr r2, [r7]
	adds r3, r4, #0
	mov r0, sl
	adds r0, #0x62
	movs r1, #0xa9
	lsls r1, r1, #3
	add r1, sp
	str r0, [r1]
	movs r5, #0xee
	add r5, sl
	mov sb, r5
	ldr r6, _080DA9A0 @ =0x00000584
	add r6, sp
	ldr r6, [r6]
	cmp r2, r6
	beq _080DA97A
_080DA95C:
	cmp r3, #0
	beq _080DA96C
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r5, r6, r7}
	stm r0!, {r5, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080DA96C:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, _080DA9A0 @ =0x00000584
	add r7, sp
	ldr r7, [r7]
	cmp r2, r7
	bne _080DA95C
_080DA97A:
	adds r5, r3, #0
	ldr r0, _080DA9A4 @ =0x000004BC
	add r0, sp
	ldr r0, [r0]
	cmp r0, #1
	bne _080DA9AC
	cmp r5, #0
	beq _080DA99A
	adds r0, r5, #0
	ldr r2, _080DA9A8 @ =0x00000514
	add r2, sp
	ldr r1, [r2]
	ldm r1!, {r3, r6, r7}
	stm r0!, {r3, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080DA99A:
	adds r5, #0x10
	b _080DA9D2
	.align 2, 0
_080DA9A0: .4byte 0x00000584
_080DA9A4: .4byte 0x000004BC
_080DA9A8: .4byte 0x00000514
_080DA9AC:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080DA9D0
_080DA9B4:
	cmp r2, #0
	beq _080DA9C8
	adds r0, r2, #0
	ldr r5, _080DAA48 @ =0x00000514
	add r5, sp
	ldr r1, [r5]
	ldm r1!, {r5, r6, r7}
	stm r0!, {r5, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080DA9C8:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080DA9B4
_080DA9D0:
	adds r5, r2, #0
_080DA9D2:
	mov r6, r8
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080DA9E4
_080DA9DE:
	adds r1, #0x10
	cmp r1, r2
	bne _080DA9DE
_080DA9E4:
	cmp r0, #0
	beq _080DA9EC
	bl sub_80D0260
_080DA9EC:
	movs r7, #0xb1
	lsls r7, r7, #3
	add r7, sp
	ldr r7, [r7]
	adds r0, r7, r4
	mov r1, r8
	str r4, [r1]
	str r5, [r1, #4]
	str r0, [r1, #0xc]
_080DA9FE:
	ldr r1, _080DAA4C @ =gUnknown_080F05D9
	movs r2, #0xaf
	lsls r2, r2, #3
	add r2, sp
	ldr r2, [r2]
	ldrb r0, [r2]
	adds r0, r0, r1
	ldrb r0, [r0]
	mov r3, sb
	strb r0, [r3]
	movs r2, #0x87
	lsls r2, r2, #3
	add r2, sp
	ldrb r0, [r3]
	movs r4, #0x80
	lsls r4, r4, #5
	adds r1, r4, #0
	adds r0, r0, r1
	strh r0, [r2]
	movs r5, #0x87
	lsls r5, r5, #3
	add r5, sp
	ldrh r0, [r5]
	movs r6, #0xa9
	lsls r6, r6, #3
	add r6, sp
	ldr r6, [r6]
	strh r0, [r6]
	movs r7, #0xaf
	lsls r7, r7, #3
	add r7, sp
	ldr r7, [r7]
	ldrb r0, [r7]
	adds r0, #1
	strb r0, [r7]
	b _080DAAE6
	.align 2, 0
_080DAA48: .4byte 0x00000514
_080DAA4C: .4byte gUnknown_080F05D9
_080DAA50:
	movs r2, #0xac
	lsls r2, r2, #3
	add r2, sp
	ldr r2, [r2]
	ldr r1, [r2]
	movs r0, #0
	str r0, [r2]
	ldr r4, _080DAA68 @ =0x000004DC
	add r4, sp
	ldr r4, [r4]
	str r1, [r4]
	b sub_80DB0CC
	.align 2, 0
_080DAA68: .4byte 0x000004DC
_080DAA6C:
	ldr r5, _080DAA98 @ =0x00000564
	add r5, sp
	ldr r5, [r5]
	ldr r0, [r5]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	movs r1, #0x5d
	bl sub_80D3914
	bl sub_803880C
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080DAAE6
_080DAA88:
	movs r0, #2
	movs r6, #0xab
	lsls r6, r6, #3
	add r6, sp
	ldr r6, [r6]
	str r0, [r6]
	b _080DAAE6
	.align 2, 0
_080DAA98: .4byte 0x00000564
_080DAA9C:
	ldr r7, _080DAAC8 @ =0x00000564
	add r7, sp
	ldr r7, [r7]
	ldr r0, [r7]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	movs r1, #0x5d
	bl sub_80D3914
	bl sub_80387D8
_080DAAB2:
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080DAAE6
_080DAAB8:
	movs r0, #2
_080DAABA:
	movs r1, #0xab
	lsls r1, r1, #3
	add r1, sp
	ldr r1, [r1]
	str r0, [r1]
	b _080DAAE6
	.align 2, 0
_080DAAC8: .4byte 0x00000564
_080DAACC:
	mov r0, sl
	adds r0, #0xbc
	bl sub_8008CD0
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080DAAE6
	movs r0, #2
_080DAADC:
	movs r2, #0xab
	lsls r2, r2, #3
	add r2, sp
	ldr r2, [r2]
	str r0, [r2]
_080DAAE6:
	ldr r3, _080DAB80 @ =0x000004F4
	add r3, sp
	ldr r3, [r3]
	cmp r3, #0
	bne _080DAB10
	movs r1, #0x98
	lsls r1, r1, #3
	add r1, sp
	movs r0, #0x98
	lsls r0, r0, #3
	add r0, sp
	add r4, sp, #0x10
	str r4, [r0]
	ldr r5, _080DAB84 @ =0x00000564
	add r5, sp
	ldr r5, [r5]
	ldr r0, [r5]
	ldr r2, [r0]
	ldr r2, [r2, #0xc]
	bl sub_80D3914
_080DAB10:
	mov r0, sl
	adds r0, #0xe8
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DAB1C
	b _080DACC0
_080DAB1C:
	mov r0, sl
	adds r0, #0xe9
	ldrb r0, [r0]
	ldr r1, _080DAB88 @ =0x0000FFFF
	cmp r0, #0
	beq _080DAB2A
	movs r1, #0
_080DAB2A:
	mov r8, sl
	movs r0, #0x87
	lsls r0, r0, #3
	add r0, sp
	movs r2, #0xa0
	lsls r2, r2, #0x13
	movs r3, #2
	bl sub_8008F60
	movs r6, #0x87
	lsls r6, r6, #3
	add r6, sp
	movs r7, #0xa3
	lsls r7, r7, #3
	add r7, sp
	str r6, [r7]
	mov r0, sl
	ldr r1, [r0, #4]
	ldr r0, [r0, #0xc]
	cmp r1, r0
	beq _080DAB90
	cmp r1, #0
	beq _080DAB6A
	adds r0, r1, #0
	movs r2, #0xa3
	lsls r2, r2, #3
	add r2, sp
	ldr r1, [r2]
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080DAB6A:
	mov r6, sl
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	adds r6, #0xb4
	mov r7, sl
	adds r7, #0xea
	ldr r0, _080DAB8C @ =0x00000574
	add r0, sp
	str r7, [r0]
	b _080DACF8
	.align 2, 0
_080DAB80: .4byte 0x000004F4
_080DAB84: .4byte 0x00000564
_080DAB88: .4byte 0x0000FFFF
_080DAB8C: .4byte 0x00000574
_080DAB90:
	movs r2, #0xb1
	lsls r2, r2, #3
	add r2, sp
	str r1, [r2]
	movs r0, #1
	movs r1, #0x99
	lsls r1, r1, #3
	add r1, sp
	str r0, [r1]
	mov r3, sl
	ldr r0, [r3]
	ldr r4, [r2]
	subs r0, r4, r0
	asrs r4, r0, #4
	ldr r0, _080DABE4 @ =0x000004C4
	add r0, sp
	str r4, [r0]
	movs r2, #0x99
	lsls r2, r2, #3
	add r2, sp
	ldr r0, [r1]
	ldr r1, _080DABE4 @ =0x000004C4
	add r1, sp
	cmp r4, r0
	bhs _080DABC4
	adds r1, r2, #0
_080DABC4:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _080DABE8
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080DABEC
	mov r0, sb
	bl sub_80D3BC0
	b _080DABEC
	.align 2, 0
_080DABE4: .4byte 0x000004C4
_080DABE8:
	movs r0, #0
	mov sb, r0
_080DABEC:
	adds r5, r0, #0
	ldr r6, _080DAC5C @ =0x0000058C
	add r6, sp
	str r5, [r6]
	mov r7, r8
	ldr r2, [r7]
	adds r3, r5, #0
	mov r6, sl
	adds r6, #0xb4
	mov r0, sl
	adds r0, #0xea
	ldr r1, _080DAC60 @ =0x00000574
	add r1, sp
	str r0, [r1]
	movs r4, #0xb1
	lsls r4, r4, #3
	add r4, sp
	ldr r4, [r4]
	cmp r2, r4
	beq _080DAC34
_080DAC14:
	cmp r3, #0
	beq _080DAC24
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080DAC24:
	adds r2, #0x10
	adds r3, #0x10
	movs r5, #0xb1
	lsls r5, r5, #3
	add r5, sp
	ldr r5, [r5]
	cmp r2, r5
	bne _080DAC14
_080DAC34:
	adds r5, r3, #0
	movs r0, #0x99
	lsls r0, r0, #3
	add r0, sp
	ldr r0, [r0]
	cmp r0, #1
	bne _080DAC64
	cmp r5, #0
	beq _080DAC58
	adds r0, r5, #0
	movs r7, #0xa3
	lsls r7, r7, #3
	add r7, sp
	ldr r1, [r7]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080DAC58:
	adds r5, #0x10
	b _080DAC8C
	.align 2, 0
_080DAC5C: .4byte 0x0000058C
_080DAC60: .4byte 0x00000574
_080DAC64:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080DAC8A
_080DAC6C:
	cmp r2, #0
	beq _080DAC82
	adds r0, r2, #0
	movs r5, #0xa3
	lsls r5, r5, #3
	add r5, sp
	ldr r1, [r5]
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080DAC82:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080DAC6C
_080DAC8A:
	adds r5, r2, #0
_080DAC8C:
	mov r7, r8
	ldr r2, [r7, #4]
	ldr r0, [r7]
	adds r1, r0, #0
	cmp r0, r2
	beq _080DAC9E
_080DAC98:
	adds r1, #0x10
	cmp r1, r2
	bne _080DAC98
_080DAC9E:
	cmp r0, #0
	beq _080DACA6
	bl sub_80D0260
_080DACA6:
	ldr r1, _080DACBC @ =0x0000058C
	add r1, sp
	ldr r0, [r1]
	add r0, sb
	ldr r2, [r1]
	mov r3, r8
	str r2, [r3]
	str r5, [r3, #4]
	str r0, [r3, #0xc]
	b _080DACF8
	.align 2, 0
_080DACBC: .4byte 0x0000058C
_080DACC0:
	mov r0, sl
	adds r0, #0x6c
	movs r1, #0x87
	lsls r1, r1, #3
	add r1, sp
	mov r4, sl
	str r4, [r1]
	ldr r5, _080DAE3C @ =0x00000544
	add r5, sp
	ldr r5, [r5]
	str r5, [r1, #4]
	add r6, sp, #0x34
	str r6, [r1, #8]
	str r0, [r1, #0xc]
	ldr r7, _080DAE40 @ =0x00000564
	add r7, sp
	ldr r7, [r7]
	ldr r0, [r7]
	ldr r2, [r0]
	ldr r2, [r2, #0x10]
	bl sub_80D3914
	mov r6, sl
	adds r6, #0xb4
	adds r4, #0xea
	ldr r0, _080DAE44 @ =0x00000574
	add r0, sp
	str r4, [r0]
_080DACF8:
	ldr r1, [r6]
	mov r8, r1
	cmp r1, #0
	bne _080DAD02
	b _080DAE90
_080DAD02:
	movs r2, #0xaa
	lsls r2, r2, #3
	add r2, sp
	ldr r2, [r2]
	ldr r5, [r2]
	movs r3, #0x10
	adds r3, r3, r5
	mov sb, r3
	ldr r7, _080DAE48 @ =0x000004CC
	add r7, sp
	ldr r0, [r7]
	lsls r0, r0, #5
	ldr r1, [r5, #0x10]
	lsls r4, r1, #5
	lsrs r0, r0, #0x1a
	lsrs r1, r4, #0x1a
	cmp r0, r1
	beq _080DAE02
	adds r0, r1, #0
	movs r1, #0xa
	bl sub_80D0F4E
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080DADEE
	lsrs r0, r4, #0x1a
	movs r1, #0xa
	bl sub_80D0EDA
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #1
	mov r0, r8
	adds r0, #8
	bl sub_803D340
	ldr r1, [r7]
	lsls r1, r1, #0xb
	ldr r0, [r5, #0x10]
	lsls r2, r0, #0xb
	lsrs r1, r1, #0x1b
	lsrs r0, r2, #0x1b
	cmp r1, r0
	beq _080DADEE
	ldr r0, [r6]
	lsrs r1, r2, #0x1b
	adds r0, #8
	bl sub_803D240
	ldr r7, _080DAE48 @ =0x000004CC
	add r7, sp
	ldrb r1, [r7, #1]
	lsls r1, r1, #0x19
	lsrs r1, r1, #0x1b
	adds r1, #1
	ldrb r3, [r5, #0x11]
	lsls r0, r3, #0x19
	lsrs r0, r0, #0x1b
	adds r4, r0, #1
	cmp r1, r4
	beq _080DADEE
	ldr r0, [r6]
	mov r8, r0
	ldrb r2, [r5, #0x10]
	lsls r2, r2, #0x1d
	lsrs r2, r2, #0x1d
	lsls r0, r3, #0x1e
	lsrs r0, r0, #0x1e
	adds r2, #6
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r1, r1, #1
	lsls r0, r2, #4
	subs r0, r0, r2
	lsls r0, r0, #3
	adds r1, r1, r0
	adds r1, r1, r4
	subs r1, #1
	cmp r1, #6
	bls _080DADB0
	adds r0, r1, #0
	movs r1, #7
	bl sub_80D0F4E
	adds r1, r0, #0
_080DADB0:
	movs r0, #7
	ands r1, r0
	movs r2, #8
	rsbs r2, r2, #0
	ldr r3, _080DAE4C @ =0x0000051C
	add r3, sp
	ldrb r3, [r3]
	ands r2, r3
	orrs r2, r1
	ldr r0, _080DAE4C @ =0x0000051C
	add r0, sp
	strb r2, [r0]
	lsls r2, r2, #0x1d
	lsrs r2, r2, #0x1d
	mov r0, r8
	adds r0, #8
	adds r1, r4, #0
	bl sub_803D0F0
	ldrb r1, [r7, #1]
	lsls r1, r1, #0x1e
	ldrb r0, [r5, #0x11]
	lsls r0, r0, #0x1e
	lsrs r2, r0, #0x1e
	cmp r1, r0
	beq _080DADEE
	ldr r0, [r6]
	adds r0, #8
	adds r1, r2, #0
	bl sub_803D080
_080DADEE:
	ldr r0, [r6]
	mov r1, sb
	ldr r2, [r1]
	lsls r2, r2, #5
	lsrs r2, r2, #0x1a
	movs r1, #1
	ands r1, r2
	adds r0, #8
	bl sub_803D2E8
_080DAE02:
	ldr r0, [r6]
	movs r2, #0xaa
	lsls r2, r2, #3
	add r2, sp
	ldr r2, [r2]
	ldr r1, [r2]
	ldr r1, [r1, #8]
	adds r0, #8
	bl sub_803D3A0
	movs r3, #0xaa
	lsls r3, r3, #3
	add r3, sp
	ldr r3, [r3]
	ldr r0, [r3]
	ldr r4, _080DAE50 @ =0x00001C34
	adds r5, r0, r4
	adds r0, r5, #0
	bl sub_800DC34
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080DAE54
	ldr r0, [r6]
	adds r0, #8
	bl sub_803D440
	b _080DAE90
	.align 2, 0
_080DAE3C: .4byte 0x00000544
_080DAE40: .4byte 0x00000564
_080DAE44: .4byte 0x00000574
_080DAE48: .4byte 0x000004CC
_080DAE4C: .4byte 0x0000051C
_080DAE50: .4byte 0x00001C34
_080DAE54:
	movs r7, #0xaa
	lsls r7, r7, #3
	add r7, sp
	ldr r7, [r7]
	ldr r4, [r7]
	ldr r0, _080DAFA4 @ =0x00001BD8
	adds r4, r4, r0
	adds r0, r5, #0
	bl sub_800DC10
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_800E550
	movs r1, #0x9a
	lsls r1, r1, #3
	add r1, sp
	strb r0, [r1]
	movs r0, #0x9a
	lsls r0, r0, #3
	add r0, sp
	bl sub_800DB60
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldr r0, [r6]
	adds r0, #8
	bl sub_803D404
_080DAE90:
	ldr r1, _080DAFA8 @ =0x00000574
	add r1, sp
	ldr r1, [r1]
	ldrb r0, [r1]
	cmp r0, #0
	bne _080DAEA8
	ldr r2, _080DAFAC @ =0x0000055C
	add r2, sp
	ldr r2, [r2]
	ldr r0, [r2]
	bl sub_80093AC
_080DAEA8:
	movs r3, #0xab
	lsls r3, r3, #3
	add r3, sp
	ldr r3, [r3]
	ldr r0, [r3]
	cmp r0, #0
	beq _080DAEB8
	b _080DB0BC
_080DAEB8:
	ldr r0, _080DAFB0 @ =gUnknown_0300040C
	ldr r1, [r0]
	movs r5, #0xde
	lsls r5, r5, #2
	adds r4, r1, r5
	movs r3, #0
	movs r2, #0
	ldr r0, [r4]
	cmp r0, #0
	bne _080DAECE
	movs r2, #1
_080DAECE:
	cmp r2, #0
	beq _080DAEFC
	movs r6, #0xe3
	lsls r6, r6, #2
	adds r0, r1, r6
	movs r2, #0
	ldr r0, [r0]
	cmp r0, #0
	bne _080DAEE2
	movs r2, #1
_080DAEE2:
	cmp r2, #0
	beq _080DAEFC
	movs r7, #0x9a
	lsls r7, r7, #3
	adds r0, r1, r7
	movs r1, #0
	ldr r0, [r0]
	cmp r0, #0
	bne _080DAEF6
	movs r1, #1
_080DAEF6:
	cmp r1, #0
	beq _080DAEFC
	movs r3, #1
_080DAEFC:
	cmp r3, #0
	beq _080DAF02
	b _080DB0BC
_080DAF02:
	ldr r1, _080DAFAC @ =0x0000055C
	add r1, sp
	ldr r1, [r1]
	ldr r0, [r1]
	bl sub_80094A4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r5, r1, #0x1f
	cmp r5, #0
	beq _080DAF1E
	b _080DB0BC
_080DAF1E:
	ldr r2, _080DAFB4 @ =0x00000564
	add r2, sp
	ldr r2, [r2]
	ldr r0, [r2]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	movs r1, #0
	bl sub_80D3914
	adds r2, r0, #0
	cmp r2, #0
	beq _080DAF4A
	ldr r0, [r2, #0x14]
	adds r0, #0x98
	ldr r1, [r0]
	adds r0, r2, #0
	bl sub_80D3910
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080DAF4A
	b _080DB0BC
_080DAF4A:
	movs r1, #0
	ldr r0, [r4]
	cmp r0, #0
	bne _080DAF54
	movs r1, #1
_080DAF54:
	cmp r1, #0
	bne _080DAFBC
	adds r6, r4, #4
	ldr r1, [r4, #4]
	ldr r2, [r4, #8]
	movs r3, #0xa4
	lsls r3, r3, #3
	add r3, sp
	str r1, [r3]
	str r2, [r3, #4]
	ldr r3, _080DAFB8 @ =0x000004D4
	add r3, sp
	cmp r0, #0
	beq _080DAF98
	lsls r0, r0, #3
	adds r0, #4
	adds r0, r4, r0
	adds r1, r4, #0
	adds r1, #0xc
	cmp r1, r0
	beq _080DAF92
	adds r5, r1, #0
	subs r0, r0, r5
	asrs r2, r0, #3
	cmp r2, #0
	ble _080DAF92
_080DAF88:
	ldm r5!, {r0, r1}
	stm r6!, {r0, r1}
	subs r2, #1
	cmp r2, #0
	bgt _080DAF88
_080DAF92:
	ldr r0, [r4]
	subs r0, #1
	str r0, [r4]
_080DAF98:
	ldr r0, _080DAFB8 @ =0x000004D4
	add r0, sp
	movs r5, #0xa4
	lsls r5, r5, #3
	b _080DB01A
	.align 2, 0
_080DAFA4: .4byte 0x00001BD8
_080DAFA8: .4byte 0x00000574
_080DAFAC: .4byte 0x0000055C
_080DAFB0: .4byte gUnknown_0300040C
_080DAFB4: .4byte 0x00000564
_080DAFB8: .4byte 0x000004D4
_080DAFBC:
	adds r7, r4, #0
	adds r7, #0x14
	movs r1, #0
	ldr r0, [r4, #0x14]
	cmp r0, #0
	bne _080DAFCA
	movs r1, #1
_080DAFCA:
	cmp r1, #0
	bne _080DB02C
	adds r6, r4, #0
	adds r6, #0x18
	ldr r1, [r4, #0x18]
	ldr r2, [r4, #0x1c]
	movs r3, #0xa5
	lsls r3, r3, #3
	add r3, sp
	str r1, [r3]
	str r2, [r3, #4]
	adds r5, r7, #0
	ldr r3, _080DB028 @ =0x000004D4
	add r3, sp
	cmp r0, #0
	beq _080DB012
	lsls r0, r0, #3
	adds r0, #4
	adds r1, r5, r0
	adds r0, r4, #0
	adds r0, #0x20
	cmp r0, r1
	beq _080DB00C
	adds r4, r0, #0
	subs r0, r1, r4
	asrs r2, r0, #3
	cmp r2, #0
	ble _080DB00C
_080DB002:
	ldm r4!, {r0, r1}
	stm r6!, {r0, r1}
	subs r2, #1
	cmp r2, #0
	bgt _080DB002
_080DB00C:
	ldr r0, [r5]
	subs r0, #1
	str r0, [r5]
_080DB012:
	ldr r0, _080DB028 @ =0x000004D4
	add r0, sp
	movs r5, #0xa5
	lsls r5, r5, #3
_080DB01A:
	add r5, sp
	ldr r4, [r5]
	ldr r5, [r5, #4]
	str r4, [r0]
	str r5, [r0, #4]
	b _080DB0AE
	.align 2, 0
_080DB028: .4byte 0x000004D4
_080DB02C:
	movs r6, #0xac
	lsls r6, r6, #1
	adds r7, r4, r6
	movs r1, #0
	ldr r0, [r7]
	cmp r0, #0
	bne _080DB03C
	movs r1, #1
_080DB03C:
	cmp r1, #0
	bne _080DB0A0
	movs r1, #0xae
	lsls r1, r1, #1
	adds r6, r4, r1
	ldr r1, [r6]
	ldr r2, [r6, #4]
	movs r3, #0xa6
	lsls r3, r3, #3
	add r3, sp
	str r1, [r3]
	str r2, [r3, #4]
	adds r5, r7, #0
	ldr r3, _080DB09C @ =0x000004D4
	add r3, sp
	cmp r0, #0
	beq _080DB088
	lsls r0, r0, #3
	adds r0, #4
	adds r1, r5, r0
	movs r7, #0xb2
	lsls r7, r7, #1
	adds r0, r4, r7
	cmp r0, r1
	beq _080DB082
	adds r4, r0, #0
	subs r0, r1, r4
	asrs r2, r0, #3
	cmp r2, #0
	ble _080DB082
_080DB078:
	ldm r4!, {r0, r1}
	stm r6!, {r0, r1}
	subs r2, #1
	cmp r2, #0
	bgt _080DB078
_080DB082:
	ldr r0, [r5]
	subs r0, #1
	str r0, [r5]
_080DB088:
	ldr r0, _080DB09C @ =0x000004D4
	add r0, sp
	movs r2, #0xa6
	lsls r2, r2, #3
	add r2, sp
	ldr r1, [r2]
	ldr r2, [r2, #4]
	str r1, [r0]
	str r2, [r0, #4]
	b _080DB0AE
	.align 2, 0
_080DB09C: .4byte 0x000004D4
_080DB0A0:
	ldr r1, _080DB0C8 @ =0x000004D4
	add r1, sp
	ldr r0, _080DB0C8 @ =0x000004D4
	add r0, sp
	str r5, [r0]
	str r5, [r1, #4]
	adds r3, r1, #0
_080DB0AE:
	ldr r0, _080DB0C8 @ =0x000004D4
	add r0, sp
	ldr r1, [r0]
	ldr r2, [r3, #4]
	mov r0, sl
	bl sub_80DC294
_080DB0BC:
	mov r0, sl
	add r1, sp, #0x34
	bl sub_8011CD8
	bl _080D8FE8
	.align 2, 0
_080DB0C8: .4byte 0x000004D4
sub_80DB0CC:
	ldr r3, _080DB0E8 @ =0x000004DC
	add r3, sp
	ldr r0, [r3]
	movs r3, #0xb2
	lsls r3, r3, #3
	add sp, r3
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080DB0E8: .4byte 0x000004DC

	thumb_func_start sub_80DB0EC
sub_80DB0EC: @ 0x080DB0EC
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	adds r1, r4, #0
	adds r1, #0xf4
	ldr r0, _080DB1E0 @ =gUnknown_080E5C08
	str r0, [r1]
	adds r0, r4, #0
	adds r0, #0xf0
	ldr r0, [r0]
	bl sub_8000608
	adds r0, r4, #0
	adds r0, #0xd0
	ldr r0, [r0]
	cmp r0, #0
	beq _080DB112
	bl sub_80D0260
_080DB112:
	adds r0, r4, #0
	adds r0, #0xb8
	ldr r1, [r0]
	cmp r1, #0
	beq _080DB128
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB128:
	adds r0, r4, #0
	adds r0, #0xb4
	ldr r1, [r0]
	cmp r1, #0
	beq _080DB13E
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB13E:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r1, [r0]
	cmp r1, #0
	beq _080DB154
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB154:
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	cmp r0, #0
	beq _080DB164
	movs r1, #3
	bl sub_8050D0C
_080DB164:
	adds r0, r4, #0
	adds r0, #0xa8
	ldr r1, [r0]
	cmp r1, #0
	beq _080DB17A
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB17A:
	adds r0, r4, #0
	adds r0, #0xa4
	ldr r1, [r0]
	cmp r1, #0
	beq _080DB190
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB190:
	adds r0, r4, #0
	adds r0, #0xa0
	ldr r0, [r0]
	cmp r0, #0
	beq _080DB1A0
	movs r1, #3
	bl sub_8009324
_080DB1A0:
	adds r0, r4, #0
	adds r0, #0x6c
	movs r1, #2
	bl sub_80098DC
	adds r0, r4, #0
	adds r0, #0x68
	movs r1, #2
	bl sub_8008A68
	ldr r1, [r4, #4]
	ldr r0, [r4]
	cmp r0, r1
	beq _080DB1C2
_080DB1BC:
	adds r0, #0x10
	cmp r0, r1
	bne _080DB1BC
_080DB1C2:
	ldr r0, [r4]
	cmp r0, #0
	beq _080DB1CC
	bl sub_80D0260
_080DB1CC:
	movs r0, #1
	ands r0, r5
	cmp r0, #0
	beq _080DB1DA
	adds r0, r4, #0
	bl sub_8000608
_080DB1DA:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080DB1E0: .4byte gUnknown_080E5C08

	thumb_func_start sub_80DB1E4
sub_80DB1E4: @ 0x080DB1E4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r7, r0, #0
	adds r5, r1, #0
	movs r6, #0
	ldr r0, [r5, #0xc]
	cmp r0, #2
	bne _080DB1F6
	movs r6, #1
_080DB1F6:
	ldr r0, [r5, #8]
	movs r4, #0
	str r4, [r5, #8]
	str r0, [sp, #4]
	movs r0, #8
	bl sub_80005D4
	ldr r1, [r5, #4]
	add r2, sp, #4
	adds r3, r6, #0
	bl sub_807865C
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r4, [r1]
	str r0, [r7]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DB22C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB22C:
	adds r0, r7, #0
	add sp, #0x10
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80DB238
sub_80DB238: @ 0x080DB238
	push {r4, r5, r6, r7, lr}
	sub sp, #0x20
	adds r6, r0, #0
	adds r5, r1, #0
	movs r0, #0x2a
	str r0, [sp]
	ldr r0, [r5, #0x10]
	cmp r0, #1
	beq _080DB264
	cmp r0, #1
	bgt _080DB256
	cmp r0, #0
	beq _080DB25E
	add r4, sp, #0xc
	b _080DB2AE
_080DB256:
	cmp r0, #2
	beq _080DB276
	add r4, sp, #0xc
	b _080DB2AE
_080DB25E:
	add r2, sp, #0xc
	movs r0, #1
	b _080DB268
_080DB264:
	add r2, sp, #0xc
	movs r0, #5
_080DB268:
	str r0, [sp, #0xc]
	mov r1, sp
	adds r0, r2, #0
	ldm r0!, {r3, r4, r7}
	stm r1!, {r3, r4, r7}
	adds r4, r2, #0
	b _080DB2AE
_080DB276:
	mov r1, sp
	ldrb r0, [r5, #4]
	strb r0, [r1, #4]
	lsls r0, r0, #0x18
	add r4, sp, #0xc
	cmp r0, #0
	beq _080DB2AE
	ldrh r1, [r5, #6]
	lsls r1, r1, #0x16
	lsrs r1, r1, #0xe
	ldr r0, [sp, #4]
	ldr r2, _080DB2E4 @ =0xFF0000FF
	ands r0, r2
	orrs r0, r1
	str r0, [sp, #4]
	mov r3, sp
	ldrb r2, [r5, #7]
	lsrs r2, r2, #2
	ldrh r0, [r5, #8]
	ldr r1, _080DB2E8 @ =0x000003FF
	ands r0, r1
	lsls r0, r0, #6
	orrs r0, r2
	strh r0, [r3, #8]
	mov r1, sp
	ldr r0, [r5, #8]
	lsrs r0, r0, #0xa
	strh r0, [r1, #0xa]
_080DB2AE:
	movs r0, #8
	bl sub_80005D4
	ldr r1, [r5, #0xc]
	mov r2, sp
	bl sub_8011DC4
	str r0, [sp, #0xc]
	str r4, [sp, #0x18]
	str r0, [sp, #0x1c]
	movs r1, #0
	str r1, [r4]
	str r0, [r6]
	ldr r1, [sp, #0xc]
	cmp r1, #0
	beq _080DB2DA
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB2DA:
	adds r0, r6, #0
	add sp, #0x20
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080DB2E4: .4byte 0xFF0000FF
_080DB2E8: .4byte 0x000003FF

	thumb_func_start sub_80DB2EC
sub_80DB2EC: @ 0x080DB2EC
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _080DB304
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB304:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DB314
sub_80DB314: @ 0x080DB314
	push {lr}
	bl sub_800080C
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DB320
sub_80DB320: @ 0x080DB320
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	movs r0, #0xc
	bl sub_80005D4
	ldr r5, [r4, #4]
	movs r2, #0
	str r2, [r4, #4]
	ldr r3, [r4, #8]
	ldr r1, _080DB368 @ =gUnknown_080E5E84
	str r1, [r0]
	str r2, [sp, #4]
	str r5, [r0, #4]
	str r3, [r0, #8]
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r2, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DB35E
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB35E:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080DB368: .4byte gUnknown_080E5E84

	thumb_func_start sub_80DB36C
sub_80DB36C: @ 0x080DB36C
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DB384
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB384:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DB394
sub_80DB394: @ 0x080DB394
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0xc
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	bl sub_805FCD0
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DB3D0
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB3D0:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80DB3DC
sub_80DB3DC: @ 0x080DB3DC
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DB3F4
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB3F4:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080DB404:
	.byte 0x70, 0xB5, 0x84, 0xB0, 0x06, 0x1C, 0x0C, 0x1C, 0x60, 0x68, 0x00, 0x25
	.byte 0x65, 0x60, 0x01, 0x90, 0x08, 0x20, 0x25, 0xF7, 0xDD, 0xF8, 0x01, 0xA9, 0xA2, 0x68, 0xE3, 0x68
	.byte 0x92, 0xF7, 0x52, 0xFA, 0x00, 0x90, 0x69, 0x46, 0x02, 0x91, 0x03, 0x90, 0x0D, 0x60, 0x30, 0x60
	.byte 0x00, 0x99, 0x00, 0x29, 0x05, 0xD0, 0x08, 0x68, 0x82, 0x68, 0x08, 0x1C, 0x03, 0x21, 0xF8, 0xF7
	.byte 0x69, 0xFA, 0x30, 0x1C, 0x04, 0xB0, 0x70, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x30, 0xB5, 0x04, 0x1C
	.byte 0x0D, 0x1C, 0x61, 0x68, 0x00, 0x29, 0x05, 0xD0, 0x08, 0x68, 0x82, 0x68, 0x08, 0x1C, 0x03, 0x21
	.byte 0xF8, 0xF7, 0x58, 0xFA, 0x20, 0x1C, 0x29, 0x1C, 0x25, 0xF7, 0xD0, 0xF9, 0x30, 0xBC, 0x01, 0xBC
	.byte 0x00, 0x47, 0x00, 0x00, 0xF0, 0xB5, 0x84, 0xB0, 0x07, 0x1C, 0x0C, 0x1C, 0x14, 0x20, 0x25, 0xF7
	.byte 0xA9, 0xF8, 0x65, 0x68, 0x00, 0x22, 0x62, 0x60, 0x26, 0x7C, 0xA3, 0x68, 0xE4, 0x68, 0x0D, 0x49
	.byte 0x01, 0x60, 0x01, 0x92, 0x45, 0x60, 0x83, 0x60, 0xC4, 0x60, 0x06, 0x74, 0x00, 0x90, 0x69, 0x46
	.byte 0x02, 0x91, 0x03, 0x90, 0x0A, 0x60, 0x38, 0x60, 0x00, 0x99, 0x00, 0x29, 0x05, 0xD0, 0x08, 0x68
	.byte 0x82, 0x68, 0x08, 0x1C, 0x03, 0x21, 0xF8, 0xF7, 0x2D, 0xFA, 0x38, 0x1C, 0x04, 0xB0, 0xF0, 0xBC
	.byte 0x02, 0xBC, 0x08, 0x47, 0xC8, 0x82, 0x0E, 0x08, 0x30, 0xB5, 0x04, 0x1C, 0x0D, 0x1C, 0x61, 0x68
	.byte 0x00, 0x29, 0x05, 0xD0, 0x08, 0x68, 0x82, 0x68, 0x08, 0x1C, 0x03, 0x21, 0xF8, 0xF7, 0x1A, 0xFA
	.byte 0x20, 0x1C, 0x29, 0x1C, 0x25, 0xF7, 0x92, 0xF9, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
	.byte 0x70, 0xB5, 0x84, 0xB0, 0x06, 0x1C, 0x0C, 0x1C, 0x10, 0x20, 0x25, 0xF7, 0x6B, 0xF8, 0x65, 0x68
	.byte 0x00, 0x22, 0x62, 0x60, 0xA3, 0x68, 0xE4, 0x68, 0x0C, 0x49, 0x01, 0x60, 0x01, 0x92, 0x45, 0x60
	.byte 0x83, 0x60, 0xC4, 0x60, 0x00, 0x90, 0x69, 0x46, 0x02, 0x91, 0x03, 0x90, 0x0A, 0x60, 0x30, 0x60
	.byte 0x00, 0x99, 0x00, 0x29, 0x05, 0xD0, 0x08, 0x68, 0x82, 0x68, 0x08, 0x1C, 0x03, 0x21, 0xF8, 0xF7
	.byte 0xF1, 0xF9, 0x30, 0x1C, 0x04, 0xB0, 0x70, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x88, 0x82, 0x0E, 0x08
	.byte 0x30, 0xB5, 0x04, 0x1C, 0x0D, 0x1C, 0x61, 0x68, 0x00, 0x29, 0x05, 0xD0, 0x08, 0x68, 0x82, 0x68
	.byte 0x08, 0x1C, 0x03, 0x21, 0xF8, 0xF7, 0xDE, 0xF9, 0x20, 0x1C, 0x29, 0x1C, 0x25, 0xF7, 0x56, 0xF9
	.byte 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x70, 0xB5, 0x84, 0xB0, 0x06, 0x1C, 0x0C, 0x1C
	.byte 0x10, 0x20, 0x25, 0xF7, 0x2F, 0xF8, 0x65, 0x68, 0x00, 0x22, 0x62, 0x60, 0xA3, 0x68, 0xE4, 0x68
	.byte 0x0C, 0x49, 0x01, 0x60, 0x01, 0x92, 0x45, 0x60, 0x83, 0x60, 0xC4, 0x60, 0x00, 0x90, 0x69, 0x46
	.byte 0x02, 0x91, 0x03, 0x90, 0x0A, 0x60, 0x30, 0x60, 0x00, 0x99, 0x00, 0x29, 0x05, 0xD0, 0x08, 0x68
	.byte 0x82, 0x68, 0x08, 0x1C, 0x03, 0x21, 0xF8, 0xF7, 0xB5, 0xF9, 0x30, 0x1C, 0x04, 0xB0, 0x70, 0xBC
	.byte 0x02, 0xBC, 0x08, 0x47, 0x98, 0x82, 0x0E, 0x08, 0x30, 0xB5, 0x04, 0x1C, 0x0D, 0x1C, 0x61, 0x68
	.byte 0x00, 0x29, 0x05, 0xD0, 0x08, 0x68, 0x82, 0x68, 0x08, 0x1C, 0x03, 0x21, 0xF8, 0xF7, 0xA2, 0xF9
	.byte 0x20, 0x1C, 0x29, 0x1C, 0x25, 0xF7, 0x1A, 0xF9, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
	.byte 0x70, 0xB5, 0x84, 0xB0, 0x06, 0x1C, 0x0C, 0x1C, 0x10, 0x20, 0x24, 0xF7, 0xF3, 0xFF, 0x65, 0x68
	.byte 0x00, 0x22, 0x62, 0x60, 0xA3, 0x68, 0xE4, 0x68, 0x0C, 0x49, 0x01, 0x60, 0x01, 0x92, 0x45, 0x60
	.byte 0x83, 0x60, 0xC4, 0x60, 0x00, 0x90, 0x69, 0x46, 0x02, 0x91, 0x03, 0x90, 0x0A, 0x60, 0x30, 0x60
	.byte 0x00, 0x99, 0x00, 0x29, 0x05, 0xD0, 0x08, 0x68, 0x82, 0x68, 0x08, 0x1C, 0x03, 0x21, 0xF8, 0xF7
	.byte 0x79, 0xF9, 0x30, 0x1C, 0x04, 0xB0, 0x70, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0xA8, 0x82, 0x0E, 0x08

	thumb_func_start sub_80DB630
sub_80DB630: @ 0x080DB630
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DB648
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB648:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DB658
sub_80DB658: @ 0x080DB658
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	movs r0, #0xc
	bl sub_80005D4
	ldr r5, [r4, #4]
	movs r2, #0
	str r2, [r4, #4]
	ldr r3, [r4, #8]
	ldr r1, _080DB6A0 @ =gUnknown_080E82B8
	str r1, [r0]
	str r2, [sp, #4]
	str r5, [r0, #4]
	str r3, [r0, #8]
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r2, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DB696
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB696:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080DB6A0: .4byte gUnknown_080E82B8

	thumb_func_start sub_80DB6A4
sub_80DB6A4: @ 0x080DB6A4
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DB6BC
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB6BC:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DB6CC
sub_80DB6CC: @ 0x080DB6CC
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0xc
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	bl sub_80A3744
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DB708
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB708:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80DB714
sub_80DB714: @ 0x080DB714
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DB72C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB72C:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DB73C
sub_80DB73C: @ 0x080DB73C
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0xc
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	bl sub_808AB38
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DB778
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB778:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80DB784
sub_80DB784: @ 0x080DB784
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DB79C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB79C:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DB7AC
sub_80DB7AC: @ 0x080DB7AC
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0xc
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	bl sub_808ECD8
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DB7E8
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB7E8:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80DB7F4
sub_80DB7F4: @ 0x080DB7F4
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DB80C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB80C:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DB81C
sub_80DB81C: @ 0x080DB81C
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0xc
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	bl sub_8090E54
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DB858
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB858:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80DB864
sub_80DB864: @ 0x080DB864
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DB87C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB87C:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DB88C
sub_80DB88C: @ 0x080DB88C
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0xc
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	bl sub_808C56C
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DB8C8
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB8C8:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80DB8D4
sub_80DB8D4: @ 0x080DB8D4
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DB8EC
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB8EC:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DB8FC
sub_80DB8FC: @ 0x080DB8FC
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0xc
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	bl sub_805218C
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DB938
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB938:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80DB944
sub_80DB944: @ 0x080DB944
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DB95C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB95C:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DB96C
sub_80DB96C: @ 0x080DB96C
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0xc
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	ldrb r3, [r4, #0xc]
	bl sub_8057DD8
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DB9AA
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB9AA:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_80DB9B4
sub_80DB9B4: @ 0x080DB9B4
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DB9CC
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DB9CC:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DB9DC
sub_80DB9DC: @ 0x080DB9DC
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0xc
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	bl sub_805E624
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DBA18
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBA18:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80DBA24
sub_80DBA24: @ 0x080DBA24
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DBA3C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBA3C:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DBA4C
sub_80DBA4C: @ 0x080DBA4C
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0xc
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	ldrb r3, [r4, #0xc]
	bl sub_805CEB8
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DBA8A
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBA8A:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_80DBA94
sub_80DBA94: @ 0x080DBA94
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DBAAC
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBAAC:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DBABC
sub_80DBABC: @ 0x080DBABC
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0xc
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	ldrb r3, [r4, #0xc]
	bl sub_809A4D4
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DBAFA
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBAFA:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_80DBB04
sub_80DBB04: @ 0x080DBB04
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DBB1C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBB1C:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DBB2C
sub_80DBB2C: @ 0x080DBB2C
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0xc
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	ldr r3, [r4, #0xc]
	bl sub_807B038
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DBB6A
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBB6A:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_80DBB74
sub_80DBB74: @ 0x080DBB74
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DBB8C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBB8C:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DBB9C
sub_80DBB9C: @ 0x080DBB9C
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0xc
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	bl sub_8081A40
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DBBD8
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBBD8:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80DBBE4
sub_80DBBE4: @ 0x080DBBE4
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DBBFC
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBBFC:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DBC0C
sub_80DBC0C: @ 0x080DBC0C
	push {r4, r5, lr}
	sub sp, #0x10
	adds r5, r0, #0
	ldr r0, [r1, #4]
	movs r4, #0
	str r4, [r1, #4]
	str r0, [sp, #4]
	movs r0, #0xc
	bl sub_80005D4
	add r1, sp, #4
	bl sub_8077C40
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r4, [r1]
	str r0, [r5]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DBC44
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBC44:
	adds r0, r5, #0
	add sp, #0x10
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80DBC50
sub_80DBC50: @ 0x080DBC50
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DBC68
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBC68:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DBC78
sub_80DBC78: @ 0x080DBC78
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0xc
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	bl sub_80931B0
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DBCB4
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBCB4:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80DBCC0
sub_80DBCC0: @ 0x080DBCC0
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DBCD8
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBCD8:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DBCE8
sub_80DBCE8: @ 0x080DBCE8
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0x14
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	ldr r3, [r4, #0xc]
	bl sub_8088168
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DBD26
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBD26:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_80DBD30
sub_80DBD30: @ 0x080DBD30
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DBD48
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBD48:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DBD58
sub_80DBD58: @ 0x080DBD58
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0x14
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	ldr r3, [r4, #0xc]
	bl sub_807D070
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DBD96
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBD96:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_80DBDA0
sub_80DBDA0: @ 0x080DBDA0
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DBDB8
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBDB8:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DBDC8
sub_80DBDC8: @ 0x080DBDC8
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0xc
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	bl sub_8080D94
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DBE04
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBE04:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80DBE10
sub_80DBE10: @ 0x080DBE10
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DBE28
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBE28:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DBE38
sub_80DBE38: @ 0x080DBE38
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0xc
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	bl sub_807F580
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DBE74
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBE74:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80DBE80
sub_80DBE80: @ 0x080DBE80
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DBE98
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBE98:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DBEA8
sub_80DBEA8: @ 0x080DBEA8
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0xc
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	bl sub_8082114
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DBEE4
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBEE4:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80DBEF0
sub_80DBEF0: @ 0x080DBEF0
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DBF08
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBF08:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DBF18
sub_80DBF18: @ 0x080DBF18
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0xc
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	bl sub_808045C
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DBF54
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBF54:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80DBF60
sub_80DBF60: @ 0x080DBF60
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DBF78
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBF78:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DBF88
sub_80DBF88: @ 0x080DBF88
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0xc
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	bl sub_80854F4
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DBFC4
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBFC4:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80DBFD0
sub_80DBFD0: @ 0x080DBFD0
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DBFE8
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DBFE8:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DBFF8
sub_80DBFF8: @ 0x080DBFF8
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0xc
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	bl sub_807EE14
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DC034
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DC034:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80DC040
sub_80DC040: @ 0x080DC040
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DC058
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DC058:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DC068
sub_80DC068: @ 0x080DC068
	push {r4, r5, r6, r7, lr}
	sub sp, #0x20
	adds r7, r0, #0
	adds r5, r1, #0
	ldr r0, [r5, #4]
	movs r6, #0
	str r6, [r5, #4]
	str r0, [sp, #0x14]
	movs r0, #0x20
	bl sub_80005D4
	add r1, sp, #0x14
	ldr r2, [r5, #8]
	ldrb r3, [r5, #0x1c]
	ldr r4, [r5, #0xc]
	str r4, [sp]
	ldr r4, [r5, #0x10]
	str r4, [sp, #4]
	ldr r4, [r5, #0x14]
	str r4, [sp, #8]
	ldr r4, [r5, #0x18]
	str r4, [sp, #0xc]
	bl sub_8083A7C
	str r0, [sp, #0x10]
	add r1, sp, #0x10
	str r1, [sp, #0x18]
	str r0, [sp, #0x1c]
	str r6, [r1]
	str r0, [r7]
	ldr r1, [sp, #0x10]
	cmp r1, #0
	beq _080DC0B6
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DC0B6:
	adds r0, r7, #0
	add sp, #0x20
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_80DC0C0
sub_80DC0C0: @ 0x080DC0C0
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DC0D8
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DC0D8:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DC0E8
sub_80DC0E8: @ 0x080DC0E8
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0xc
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	ldr r3, [r4, #0xc]
	bl sub_807E438
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DC126
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DC126:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_80DC130
sub_80DC130: @ 0x080DC130
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DC148
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DC148:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DC158
sub_80DC158: @ 0x080DC158
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0xc
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	bl sub_807DD38
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DC194
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DC194:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80DC1A0
sub_80DC1A0: @ 0x080DC1A0
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DC1B8
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DC1B8:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DC1C8
sub_80DC1C8: @ 0x080DC1C8
	push {lr}
	bl sub_800080C
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DC1D4
sub_80DC1D4: @ 0x080DC1D4
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #8]
	movs r5, #0
	str r5, [r4, #8]
	str r0, [sp, #4]
	movs r0, #8
	bl sub_80005D4
	ldr r1, [r4, #4]
	add r2, sp, #4
	bl sub_8004B94
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DC210
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DC210:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80DC21C
sub_80DC21C: @ 0x080DC21C
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _080DC234
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DC234:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DC244
sub_80DC244: @ 0x080DC244
	push {r4, r5, lr}
	sub sp, #0xc
	adds r5, r0, #0
	adds r4, r1, #0
	movs r0, #8
	bl sub_80005D4
	ldr r1, [r4, #4]
	adds r4, #8
	adds r2, r4, #0
	bl sub_8011DC4
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #4]
	str r0, [sp, #8]
	adds r2, r1, #0
	movs r1, #0
	str r1, [r2]
	str r0, [r5]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DC27E
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DC27E:
	adds r0, r5, #0
	add sp, #0xc
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_80DC288
sub_80DC288: @ 0x080DC288
	push {lr}
	bl sub_800080C
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DC294
sub_80DC294: @ 0x080DC294
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _080DC2B0 @ =gUnknown_0300040C
	ldr r0, [r0]
	adds r0, #8
	bl sub_803F878
	adds r0, r4, #0
	bl sub_80D7F3C
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080DC2B0: .4byte gUnknown_0300040C

	thumb_func_start sub_80DC2B4
sub_80DC2B4: @ 0x080DC2B4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	str r0, [sp, #8]
	adds r0, #0xa8
	ldr r0, [r0]
	ldr r4, [r0]
	mov ip, r4
	movs r5, #0xb4
	add ip, r5
	mov r8, sp
	ldr r7, _080DC358 @ =0x000003FF
	mov sl, r7
	mov r4, sl
	ands r1, r4
	mov r7, r8
	ldrh r5, [r7]
	ldr r6, _080DC35C @ =0xFFFFFC00
	adds r4, r6, #0
	ands r4, r5
	orrs r4, r1
	strh r4, [r7]
	lsls r2, r2, #0x10
	lsrs r4, r2, #0x10
	movs r1, #0x3f
	ands r4, r1
	lsls r4, r4, #2
	ldrb r5, [r7, #1]
	mov sb, r5
	movs r5, #3
	adds r1, r5, #0
	mov r7, sb
	ands r1, r7
	orrs r1, r4
	mov r4, r8
	strb r1, [r4, #1]
	lsrs r2, r2, #0x16
	mov r7, sl
	ands r2, r7
	ldrh r4, [r4, #2]
	adds r1, r6, #0
	ands r1, r4
	orrs r1, r2
	mov r2, r8
	strh r1, [r2, #2]
	lsls r3, r3, #0x10
	lsrs r1, r3, #0x10
	movs r4, #0x3f
	ands r1, r4
	lsls r1, r1, #2
	ldrb r2, [r2, #3]
	ands r5, r2
	orrs r5, r1
	mov r7, r8
	strb r5, [r7, #3]
	lsrs r3, r3, #0x16
	mov r1, sl
	ands r3, r1
	ldrh r1, [r7, #4]
	ands r6, r1
	orrs r6, r3
	strh r6, [r7, #4]
	mov r2, ip
	ldr r3, [r2]
	mov r1, sp
	movs r2, #1
	bl sub_80D3918
	ldr r0, [sp, #8]
	bl sub_80D7F08
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080DC358: .4byte 0x000003FF
_080DC35C: .4byte 0xFFFFFC00

	thumb_func_start sub_80DC360
sub_80DC360: @ 0x080DC360
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #8
	adds r6, r0, #0
	mov r8, r1
	mov sb, r2
	adds r4, r3, #0
	ldr r5, [sp, #0x20]
	adds r0, #0xa8
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r1, [r1, #0x14]
	bl sub_80D3910
	adds r2, r0, #0
	str r4, [sp]
	str r5, [sp, #4]
	adds r0, r6, #0
	mov r1, r8
	mov r3, sb
	bl sub_80D7F9C
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DC3A0
sub_80DC3A0: @ 0x080DC3A0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x18
	mov r8, r0
	adds r5, r1, #0
	add r6, sp, #0xc
	movs r7, #0
	str r7, [sp, #0xc]
	ldr r2, [r5, #8]
	mov r0, sp
	adds r1, r6, #0
	bl sub_8093A58
	adds r0, r6, #0
	mov r1, sp
	bl sub_8093AD4
	ldr r1, [sp, #0xc]
	cmp r1, #0
	beq _080DC3D6
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DC3D6:
	ldr r4, [r5, #4]
	mov r0, sp
	bl sub_8093AC8
	str r0, [r4, #0xc]
	ldr r0, [r5, #4]
	str r7, [r5, #4]
	str r6, [sp, #0x10]
	str r0, [sp, #0x14]
	str r7, [sp, #0xc]
	mov r1, r8
	str r0, [r1]
	mov r0, sp
	movs r1, #2
	bl sub_8093A88
	mov r0, r8
	add sp, #0x18
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_80DC404
sub_80DC404: @ 0x080DC404
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DC41C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DC41C:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_80007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DC42C
sub_80DC42C: @ 0x080DC42C
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #8]
	movs r5, #0
	str r5, [r4, #8]
	str r0, [sp, #4]
	movs r0, #8
	bl sub_80005D4
	ldr r1, [r4, #4]
	add r2, sp, #4
	bl sub_80701BC
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DC468
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DC468:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80DC474
sub_80DC474: @ 0x080DC474
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _080DC48C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DC48C:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DC49C
sub_80DC49C: @ 0x080DC49C
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0xc
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	bl sub_80755EC
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DC4D8
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DC4D8:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80DC4E4
sub_80DC4E4: @ 0x080DC4E4
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DC4FC
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DC4FC:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DC50C
sub_80DC50C: @ 0x080DC50C
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0xc
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	ldrb r3, [r4, #0xc]
	bl sub_8069E14
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080DC54A
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DC54A:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_80DC554
sub_80DC554: @ 0x080DC554
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080DC56C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DC56C:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DC57C
sub_80DC57C: @ 0x080DC57C
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r4, r1, #0
	cmp r4, #0
	beq _080DC5A0
_080DC586:
	ldr r1, [r4, #0xc]
	adds r0, r6, #0
	bl sub_80DC57C
	ldr r5, [r4, #8]
	cmp r4, #0
	beq _080DC59A
	adds r0, r4, #0
	bl sub_80D0260
_080DC59A:
	adds r4, r5, #0
	cmp r4, #0
	bne _080DC586
_080DC5A0:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080DC5A8:
	.byte 0x00, 0xB5, 0xC8, 0xF7, 0x03, 0xF9, 0x01, 0xBC
	.byte 0x00, 0x47, 0x00, 0x00, 0x00, 0xB5, 0x02, 0x1C, 0x05, 0x48, 0x10, 0x60, 0x01, 0x20, 0x08, 0x40
	.byte 0x00, 0x28, 0x02, 0xD0, 0x10, 0x1C, 0x24, 0xF7, 0x1F, 0xF8, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
	.byte 0xA0, 0x61, 0x0E, 0x08, 0x00, 0xB5, 0x02, 0x1C, 0x05, 0x48, 0x10, 0x60, 0x01, 0x20, 0x08, 0x40
	.byte 0x00, 0x28, 0x02, 0xD0, 0x10, 0x1C, 0x24, 0xF7, 0x0F, 0xF8, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
	.byte 0xA0, 0x61, 0x0E, 0x08, 0x30, 0xB5, 0x05, 0x1C, 0x0C, 0x1C, 0x48, 0x30, 0x02, 0x21, 0xC8, 0xF7
	.byte 0xD9, 0xF8, 0x28, 0x1C, 0x08, 0x30, 0x02, 0x21, 0xC8, 0xF7, 0xD4, 0xF8, 0x05, 0x48, 0x68, 0x60
	.byte 0x01, 0x20, 0x20, 0x40, 0x00, 0x28, 0x02, 0xD0, 0x28, 0x1C, 0x23, 0xF7, 0xF5, 0xFF, 0x30, 0xBC
	.byte 0x01, 0xBC, 0x00, 0x47, 0xE0, 0x65, 0x0E, 0x08, 0x30, 0xB5, 0x04, 0x1C, 0x0D, 0x1C, 0x0A, 0x48
	.byte 0x60, 0x61, 0x21, 0x69, 0x00, 0x29, 0x05, 0xD0, 0x48, 0x68, 0x82, 0x68, 0x08, 0x1C, 0x03, 0x21
	.byte 0xF7, 0xF7, 0x68, 0xF9, 0x01, 0x20, 0x28, 0x40, 0x00, 0x28, 0x02, 0xD0, 0x20, 0x1C, 0x23, 0xF7
	.byte 0xDB, 0xFF, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x50, 0x62, 0x0E, 0x08, 0x00, 0xB5, 0x02, 0x1C
	.byte 0x05, 0x48, 0x50, 0x60, 0x01, 0x20, 0x08, 0x40, 0x00, 0x28, 0x02, 0xD0, 0x10, 0x1C, 0x23, 0xF7
	.byte 0xCB, 0xFF, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0xE0, 0x65, 0x0E, 0x08

	thumb_func_start sub_80DC67C
sub_80DC67C: @ 0x080DC67C
	push {r4, r5, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	adds r3, r0, #0
	subs r0, r5, r3
	asrs r2, r0, #2
	cmp r2, #0
	ble _080DC6B4
	ldrb r1, [r4]
_080DC68E:
	ldrb r0, [r3]
	cmp r0, r1
	beq _080DC6E2
	adds r3, #1
	ldrb r0, [r3]
	cmp r0, r1
	beq _080DC6E2
	adds r3, #1
	ldrb r0, [r3]
	cmp r0, r1
	beq _080DC6E2
	adds r3, #1
	ldrb r0, [r3]
	cmp r0, r1
	beq _080DC6E2
	adds r3, #1
	subs r2, #1
	cmp r2, #0
	bgt _080DC68E
_080DC6B4:
	subs r0, r5, r3
	cmp r0, #1
	beq _080DC6DA
	cmp r0, #1
	ble _080DC6E6
	cmp r0, #2
	beq _080DC6D0
	cmp r0, #3
	bne _080DC6E6
	ldrb r0, [r3]
	ldrb r1, [r4]
	cmp r0, r1
	beq _080DC6E2
	adds r3, #1
_080DC6D0:
	ldrb r0, [r3]
	ldrb r1, [r4]
	cmp r0, r1
	beq _080DC6E2
	adds r3, #1
_080DC6DA:
	ldrb r0, [r3]
	ldrb r4, [r4]
	cmp r0, r4
	bne _080DC6E6
_080DC6E2:
	adds r0, r3, #0
	b _080DC6E8
_080DC6E6:
	adds r0, r5, #0
_080DC6E8:
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080DC6F0:
	.byte 0x30, 0xB5, 0x04, 0x1C, 0x0D, 0x1C, 0x0A, 0x48, 0x60, 0x61, 0x21, 0x69, 0x00, 0x29, 0x05, 0xD0
	.byte 0x48, 0x68, 0x82, 0x68, 0x08, 0x1C, 0x03, 0x21, 0xF7, 0xF7, 0x04, 0xF9, 0x01, 0x20, 0x28, 0x40
	.byte 0x00, 0x28, 0x02, 0xD0, 0x20, 0x1C, 0x23, 0xF7, 0x77, 0xFF, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47
	.byte 0x50, 0x62, 0x0E, 0x08

	thumb_func_start sub_80DC724
sub_80DC724: @ 0x080DC724
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, #0x8c
	movs r1, #2
	bl sub_80A47B4
	adds r0, r5, #0
	adds r0, #0x48
	movs r1, #2
	bl sub_80A47B4
	adds r0, r5, #0
	adds r0, #8
	movs r1, #2
	bl sub_80A47B4
	ldr r0, _080DC760 @ =gUnknown_080E65E0
	str r0, [r5, #4]
	movs r0, #1
	ands r0, r4
	cmp r0, #0
	beq _080DC758
	adds r0, r5, #0
	bl sub_8000608
_080DC758:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080DC760: .4byte gUnknown_080E65E0

	thumb_func_start sub_80DC764
sub_80DC764: @ 0x080DC764
	push {r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r7, r1, #0
	adds r2, r6, #0
	adds r2, #0xcc
	ldr r1, [r2]
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, #4
	adds r5, r2, r0
	adds r4, r6, #0
	adds r4, #0xd0
	cmp r4, r5
	beq _080DC790
_080DC782:
	adds r0, r4, #4
	movs r1, #2
	bl sub_80A47B4
	adds r4, #0x48
	cmp r4, r5
	bne _080DC782
_080DC790:
	adds r0, r6, #0
	adds r0, #0x8c
	movs r1, #2
	bl sub_80A47B4
	adds r0, r6, #0
	adds r0, #0x48
	movs r1, #2
	bl sub_80A47B4
	adds r0, r6, #0
	adds r0, #8
	movs r1, #2
	bl sub_80A47B4
	ldr r0, _080DC7C8 @ =gUnknown_080E65E0
	str r0, [r6, #4]
	movs r0, #1
	ands r0, r7
	cmp r0, #0
	beq _080DC7C0
	adds r0, r6, #0
	bl sub_8000608
_080DC7C0:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080DC7C8: .4byte gUnknown_080E65E0
_080DC7CC:
	.byte 0x30, 0xB5, 0x04, 0x1C
	.byte 0x0D, 0x1C, 0x0A, 0x48, 0x60, 0x61, 0x21, 0x69, 0x00, 0x29, 0x05, 0xD0, 0x48, 0x68, 0x82, 0x68
	.byte 0x08, 0x1C, 0x03, 0x21, 0xF7, 0xF7, 0x96, 0xF8, 0x01, 0x20, 0x28, 0x40, 0x00, 0x28, 0x02, 0xD0
	.byte 0x20, 0x1C, 0x23, 0xF7, 0x09, 0xFF, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x50, 0x62, 0x0E, 0x08
	.byte 0x30, 0xB5, 0x04, 0x1C, 0x0D, 0x1C, 0x0A, 0x48, 0x60, 0x61, 0x21, 0x69, 0x00, 0x29, 0x05, 0xD0
	.byte 0x48, 0x68, 0x82, 0x68, 0x08, 0x1C, 0x03, 0x21, 0xF7, 0xF7, 0x7C, 0xF8, 0x01, 0x20, 0x28, 0x40
	.byte 0x00, 0x28, 0x02, 0xD0, 0x20, 0x1C, 0x23, 0xF7, 0xEF, 0xFE, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47
	.byte 0x50, 0x62, 0x0E, 0x08, 0x00, 0xB5, 0xC7, 0xF7, 0xBD, 0xFF, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00

	thumb_func_start sub_80DC840
sub_80DC840: @ 0x080DC840
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r5, r1, #0
	ldr r0, _080DC88C @ =gUnknown_080E82D8
	str r0, [r7, #0x24]
	adds r6, r5, #0
	ldm r6!, {r0}
	adds r4, r7, #0
	stm r4!, {r0}
	adds r0, r4, #0
	bl sub_8007874
	ldr r1, [r6, #4]
	adds r0, r4, #0
	bl sub_8007CD8
	str r0, [r4, #4]
	ldrh r0, [r5, #0xc]
	movs r1, #0
	strh r0, [r7, #0xc]
	str r1, [r7, #0x10]
	ldr r4, [r5, #0x10]
	adds r1, r5, #0
	adds r1, #0x14
	adds r0, r7, #0
	adds r0, #0x14
	adds r2, r1, r4
	cmp r2, r1
	beq _080DC880
	subs r2, r2, r1
	bl sub_80D39F8
_080DC880:
	str r4, [r7, #0x10]
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080DC88C: .4byte gUnknown_080E82D8
_080DC890:
	.byte 0x30, 0xB5, 0x05, 0x1C, 0x0C, 0x1C, 0x48, 0x30, 0x02, 0x21, 0xC7, 0xF7, 0x8B, 0xFF, 0x28, 0x1C
	.byte 0x08, 0x30, 0x02, 0x21, 0xC7, 0xF7, 0x86, 0xFF, 0x05, 0x48, 0x68, 0x60, 0x01, 0x20, 0x20, 0x40
	.byte 0x00, 0x28, 0x02, 0xD0, 0x28, 0x1C, 0x23, 0xF7, 0xA7, 0xFE, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47
	.byte 0xE0, 0x65, 0x0E, 0x08, 0x30, 0xB5, 0x04, 0x1C, 0x0D, 0x1C, 0x0A, 0x48, 0x60, 0x61, 0x21, 0x69
	.byte 0x00, 0x29, 0x05, 0xD0, 0x48, 0x68, 0x82, 0x68, 0x08, 0x1C, 0x03, 0x21, 0xF7, 0xF7, 0x1A, 0xF8
	.byte 0x01, 0x20, 0x28, 0x40, 0x00, 0x28, 0x02, 0xD0, 0x20, 0x1C, 0x23, 0xF7, 0x8D, 0xFE, 0x30, 0xBC
	.byte 0x01, 0xBC, 0x00, 0x47, 0x50, 0x62, 0x0E, 0x08, 0x30, 0xB5, 0x05, 0x1C, 0x0C, 0x1C, 0x48, 0x30
	.byte 0x02, 0x21, 0xC7, 0xF7, 0x57, 0xFF, 0x28, 0x1C, 0x08, 0x30, 0x02, 0x21, 0xC7, 0xF7, 0x52, 0xFF
	.byte 0x05, 0x48, 0x68, 0x60, 0x01, 0x20, 0x20, 0x40, 0x00, 0x28, 0x02, 0xD0, 0x28, 0x1C, 0x23, 0xF7
	.byte 0x73, 0xFE, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0xE0, 0x65, 0x0E, 0x08, 0x30, 0xB5, 0x05, 0x1C
	.byte 0x0C, 0x1C, 0x8C, 0x30, 0x02, 0x21, 0xC7, 0xF7, 0x3D, 0xFF, 0x28, 0x1C, 0x48, 0x30, 0x02, 0x21
	.byte 0xC7, 0xF7, 0x38, 0xFF, 0x28, 0x1C, 0x08, 0x30, 0x02, 0x21, 0xC7, 0xF7, 0x33, 0xFF, 0x06, 0x48
	.byte 0x68, 0x60, 0x01, 0x20, 0x20, 0x40, 0x00, 0x28, 0x02, 0xD0, 0x28, 0x1C, 0x23, 0xF7, 0x54, 0xFE
	.byte 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0xE0, 0x65, 0x0E, 0x08

	thumb_func_start sub_80DC96C
sub_80DC96C: @ 0x080DC96C
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	subs r1, r1, r4
	asrs r1, r1, #3
	cmp r1, #0
	ble _080DC99E
	ldr r5, [r2]
_080DC97A:
	asrs r3, r1, #1
	lsls r0, r3, #3
	adds r0, r4, r0
	movs r2, #0
	ldrh r6, [r0]
	cmp r5, r6
	bhs _080DC98A
	movs r2, #1
_080DC98A:
	cmp r2, #0
	beq _080DC992
	adds r1, r3, #0
	b _080DC99A
_080DC992:
	adds r4, r0, #0
	adds r4, #8
	subs r0, r1, r3
	subs r1, r0, #1
_080DC99A:
	cmp r1, #0
	bgt _080DC97A
_080DC99E:
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080DC9A8:
	.byte 0x00, 0xB5, 0x58, 0xF7, 0x01, 0xFA, 0x01, 0xBC
	.byte 0x00, 0x47, 0x00, 0x00, 0x00, 0xB5, 0x58, 0xF7, 0xFB, 0xF9, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00

	thumb_func_start sub_80DC9C0
sub_80DC9C0: @ 0x080DC9C0
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DC9CC
sub_80DC9CC: @ 0x080DC9CC
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DC9D8
sub_80DC9D8: @ 0x080DC9D8
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DC9E4
sub_80DC9E4: @ 0x080DC9E4
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DC9F0
sub_80DC9F0: @ 0x080DC9F0
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DC9FC
sub_80DC9FC: @ 0x080DC9FC
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCA08
sub_80DCA08: @ 0x080DCA08
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCA14
sub_80DCA14: @ 0x080DCA14
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCA20
sub_80DCA20: @ 0x080DCA20
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCA2C
sub_80DCA2C: @ 0x080DCA2C
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCA38
sub_80DCA38: @ 0x080DCA38
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCA44
sub_80DCA44: @ 0x080DCA44
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCA50
sub_80DCA50: @ 0x080DCA50
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCA5C
sub_80DCA5C: @ 0x080DCA5C
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCA68
sub_80DCA68: @ 0x080DCA68
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCA74
sub_80DCA74: @ 0x080DCA74
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCA80
sub_80DCA80: @ 0x080DCA80
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCA8C
sub_80DCA8C: @ 0x080DCA8C
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCA98
sub_80DCA98: @ 0x080DCA98
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCAA4
sub_80DCAA4: @ 0x080DCAA4
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCAB0
sub_80DCAB0: @ 0x080DCAB0
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCABC
sub_80DCABC: @ 0x080DCABC
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCAC8
sub_80DCAC8: @ 0x080DCAC8
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCAD4
sub_80DCAD4: @ 0x080DCAD4
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCAE0
sub_80DCAE0: @ 0x080DCAE0
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCAEC
sub_80DCAEC: @ 0x080DCAEC
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCAF8
sub_80DCAF8: @ 0x080DCAF8
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCB04
sub_80DCB04: @ 0x080DCB04
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCB10
sub_80DCB10: @ 0x080DCB10
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCB1C
sub_80DCB1C: @ 0x080DCB1C
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCB28
sub_80DCB28: @ 0x080DCB28
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCB34
sub_80DCB34: @ 0x080DCB34
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCB40
sub_80DCB40: @ 0x080DCB40
	push {lr}
	bl sub_8034DB0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCB4C
sub_80DCB4C: @ 0x080DCB4C
	push {lr}
	bl sub_8037048
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCB58
sub_80DCB58: @ 0x080DCB58
	push {lr}
	bl sub_8037048
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCB64
sub_80DCB64: @ 0x080DCB64
	push {lr}
	bl sub_8037048
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCB70
sub_80DCB70: @ 0x080DCB70
	push {lr}
	bl sub_8037048
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCB7C
sub_80DCB7C: @ 0x080DCB7C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x6c
	mov r8, r0
	mov sl, r1
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	str r2, [sp, #0x5c]
	movs r0, #0
	mov r1, r8
	str r0, [r1]
	add r5, sp, #0xc
	mov r2, sl
	ldr r0, [r2]
	ldr r1, [r0, #0x7c]
	mov r0, sl
	bl sub_80D3910
	adds r1, r0, #0
	ldr r3, [sp, #0x5c]
	cmp r3, #0
	beq _080DCBB8
	ldr r0, _080DCBB4 @ =gUnknown_080F1684
	ldrh r2, [r0, #2]
	b _080DCBBC
	.align 2, 0
_080DCBB4: .4byte gUnknown_080F1684
_080DCBB8:
	ldr r0, _080DCC90 @ =gUnknown_080F1684
	ldrh r2, [r0]
_080DCBBC:
	movs r0, #6
	str r0, [sp]
	movs r0, #0x1d
	str r0, [sp, #4]
	add r4, sp, #8
	movs r0, #0
	strb r0, [r4]
	adds r0, r5, #0
	mov r3, sl
	bl sub_80A4A00
	movs r0, #0xc8
	lsls r0, r0, #0xf
	str r0, [r5, #0x40]
	adds r1, r5, #0
	adds r1, #0x44
	movs r0, #0x96
	lsls r0, r0, #1
	strh r0, [r1]
	ldr r0, _080DCC94 @ =0x00002666
	str r0, [r5, #0x48]
	ldr r0, _080DCC90 @ =gUnknown_080F1684
	ldrb r1, [r0, #4]
	adds r0, r5, #0
	adds r0, #0x4c
	strb r1, [r0]
	adds r1, r5, #0
	adds r1, #0x4d
	movs r0, #1
	strb r0, [r1]
	mov r0, r8
	ldr r1, [r0]
	str r4, [sp, #0x68]
	cmp r1, #4
	bhi _080DCC1E
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #4
	adds r0, #4
	add r0, r8
	cmp r0, #0
	beq _080DCC16
	add r1, sp, #0xc
	bl sub_80DCD2C
_080DCC16:
	mov r1, r8
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_080DCC1E:
	add r0, sp, #0xc
	movs r1, #2
	bl sub_80A47B4
	movs r2, #0
	str r2, [sp, #0x60]
	add r7, sp, #0xc
	mov r3, sp
	adds r3, #0x59
	str r3, [sp, #0x64]
_080DCC32:
	bl sub_80D11E4
	movs r1, #3
	bl sub_80D0ED0
	adds r6, r0, #0
	bl sub_80D11E4
	movs r1, #0xf0
	lsls r1, r1, #1
	bl sub_80D0F4E
	adds r5, r0, #0
	ldr r4, _080DCC98 @ =gUnknown_080F1672
	bl sub_80D11E4
	movs r1, #3
	bl sub_80D0ED0
	adds r0, r0, r4
	ldrb r4, [r0]
	bl sub_80D11E4
	movs r1, #3
	bl sub_80D0ED0
	lsls r0, r0, #2
	ldr r1, _080DCC9C @ =gUnknown_080F1678
	adds r0, r0, r1
	ldr r0, [r0]
	mov sb, r0
	mov r2, sl
	ldr r0, [r2]
	ldr r1, [r0, #0x7c]
	mov r0, sl
	bl sub_80D3910
	adds r1, r0, #0
	ldr r3, [sp, #0x5c]
	cmp r3, #0
	beq _080DCCA0
	lsls r0, r6, #3
	ldr r2, _080DCC90 @ =gUnknown_080F1684
	adds r0, r0, r2
	ldrh r2, [r0, #2]
	b _080DCCA8
	.align 2, 0
_080DCC90: .4byte gUnknown_080F1684
_080DCC94: .4byte 0x00002666
_080DCC98: .4byte gUnknown_080F1672
_080DCC9C: .4byte gUnknown_080F1678
_080DCCA0:
	lsls r0, r6, #3
	ldr r3, _080DCD28 @ =gUnknown_080F1684
	adds r0, r0, r3
	ldrh r2, [r0]
_080DCCA8:
	movs r0, #6
	str r0, [sp]
	movs r0, #0x1d
	str r0, [sp, #4]
	movs r0, #0
	ldr r3, [sp, #0x68]
	strb r0, [r3]
	adds r0, r7, #0
	mov r3, sl
	bl sub_80A4A00
	lsls r0, r5, #0x10
	str r0, [r7, #0x40]
	adds r0, r7, #0
	adds r0, #0x44
	strh r4, [r0]
	mov r0, sb
	str r0, [r7, #0x48]
	lsls r0, r6, #3
	ldr r1, _080DCD28 @ =gUnknown_080F1684
	adds r0, r0, r1
	ldrb r1, [r0, #4]
	adds r0, r7, #0
	adds r0, #0x4c
	strb r1, [r0]
	movs r0, #1
	ldr r2, [sp, #0x64]
	strb r0, [r2]
	mov r3, r8
	ldr r1, [r3]
	cmp r1, #4
	bhi _080DCD04
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #4
	adds r0, #4
	add r0, r8
	cmp r0, #0
	beq _080DCCFC
	add r1, sp, #0xc
	bl sub_80DCD2C
_080DCCFC:
	mov r1, r8
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_080DCD04:
	add r0, sp, #0xc
	movs r1, #2
	bl sub_80A47B4
	ldr r2, [sp, #0x60]
	adds r2, #1
	str r2, [sp, #0x60]
	cmp r2, #3
	bls _080DCC32
	mov r0, r8
	add sp, #0x6c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080DCD28: .4byte gUnknown_080F1684

	thumb_func_start sub_80DCD2C
sub_80DCD2C: @ 0x080DCD2C
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	bl sub_80DC840
	ldr r0, _080DCDAC @ =gUnknown_080E681C
	str r0, [r4, #0x24]
	adds r1, r4, #0
	adds r1, #0x28
	adds r0, r5, #0
	adds r0, #0x28
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	adds r0, r5, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x3c
	strb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x3d
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x3d
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0x3e
	ldrb r0, [r0]
	adds r1, #1
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0x3f
	ldrb r0, [r0]
	adds r1, #1
	strb r0, [r1]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x40]
	adds r0, r5, #0
	adds r0, #0x44
	ldrh r1, [r0]
	adds r0, r4, #0
	adds r0, #0x44
	strh r1, [r0]
	ldr r0, [r5, #0x48]
	str r0, [r4, #0x48]
	adds r0, r5, #0
	adds r0, #0x4c
	ldrb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x4c
	strb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x4d
	ldrb r0, [r0]
	adds r2, r4, #0
	adds r2, #0x4d
	strb r0, [r2]
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080DCDAC: .4byte gUnknown_080E681C

	thumb_func_start sub_80DCDB0
sub_80DCDB0: @ 0x080DCDB0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r7, r0, #0
	mov r8, r1
	ldr r0, [r7, #0x14]
	cmp r0, #0
	beq _080DCDE8
	adds r6, r0, #0
	ldr r1, [r6]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #4
	adds r0, #4
	adds r5, r6, r0
	adds r4, r6, #4
	cmp r4, r5
	beq _080DCDE2
_080DCDD4:
	adds r0, r4, #0
	movs r1, #2
	bl sub_80A47B4
	adds r4, #0x50
	cmp r4, r5
	bne _080DCDD4
_080DCDE2:
	adds r0, r6, #0
	bl sub_8000608
_080DCDE8:
	ldr r0, [r7, #0x10]
	cmp r0, #0
	beq _080DCE16
	adds r6, r0, #0
	ldr r0, [r6]
	lsls r0, r0, #6
	adds r0, #4
	adds r5, r6, r0
	adds r4, r6, #4
	cmp r4, r5
	beq _080DCE10
_080DCDFE:
	ldr r0, [r4, #0x24]
	ldr r2, [r0, #8]
	adds r0, r4, #0
	movs r1, #2
	bl sub_80D3914
	adds r4, #0x40
	cmp r4, r5
	bne _080DCDFE
_080DCE10:
	adds r0, r6, #0
	bl sub_8000608
_080DCE16:
	ldr r4, [r7, #0xc]
	cmp r4, #0
	beq _080DCE2A
	adds r0, r4, #0
	movs r1, #2
	bl sub_80A47B4
	adds r0, r4, #0
	bl sub_8000608
_080DCE2A:
	ldr r4, [r7, #8]
	cmp r4, #0
	beq _080DCE3E
	adds r0, r4, #0
	movs r1, #2
	bl sub_80A47B4
	adds r0, r4, #0
	bl sub_8000608
_080DCE3E:
	ldr r0, _080DCE5C @ =gUnknown_080E65E0
	str r0, [r7, #4]
	movs r0, #1
	mov r1, r8
	ands r0, r1
	cmp r0, #0
	beq _080DCE52
	adds r0, r7, #0
	bl sub_8000608
_080DCE52:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080DCE5C: .4byte gUnknown_080E65E0

	thumb_func_start sub_80DCE60
sub_80DCE60: @ 0x080DCE60
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _080DCE90 @ =gUnknown_080E6250
	str r0, [r4, #0x14]
	ldr r1, [r4, #0x10]
	cmp r1, #0
	beq _080DCE7C
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DCE7C:
	movs r0, #1
	ands r0, r5
	cmp r0, #0
	beq _080DCE8A
	adds r0, r4, #0
	bl sub_8000608
_080DCE8A:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080DCE90: .4byte gUnknown_080E6250

	thumb_func_start sub_80DCE94
sub_80DCE94: @ 0x080DCE94
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, #8
	movs r1, #2
	bl sub_80A47B4
	ldr r0, _080DCEBC @ =gUnknown_080E65E0
	str r0, [r5, #4]
	movs r0, #1
	ands r0, r4
	cmp r0, #0
	beq _080DCEB4
	adds r0, r5, #0
	bl sub_8000608
_080DCEB4:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080DCEBC: .4byte gUnknown_080E65E0

	thumb_func_start sub_80DCEC0
sub_80DCEC0: @ 0x080DCEC0
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, #8
	movs r1, #2
	bl sub_80A47B4
	ldr r0, _080DCEE8 @ =gUnknown_080E65E0
	str r0, [r5, #4]
	movs r0, #1
	ands r0, r4
	cmp r0, #0
	beq _080DCEE0
	adds r0, r5, #0
	bl sub_8000608
_080DCEE0:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080DCEE8: .4byte gUnknown_080E65E0

	thumb_func_start sub_80DCEEC
sub_80DCEEC: @ 0x080DCEEC
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _080DCF1C @ =gUnknown_080E6250
	str r0, [r4, #0x14]
	ldr r1, [r4, #0x10]
	cmp r1, #0
	beq _080DCF08
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DCF08:
	movs r0, #1
	ands r0, r5
	cmp r0, #0
	beq _080DCF16
	adds r0, r4, #0
	bl sub_8000608
_080DCF16:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080DCF1C: .4byte gUnknown_080E6250

	thumb_func_start sub_80DCF20
sub_80DCF20: @ 0x080DCF20
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, #8
	movs r1, #2
	bl sub_80A47B4
	ldr r0, _080DCF48 @ =gUnknown_080E65E0
	str r0, [r5, #4]
	movs r0, #1
	ands r0, r4
	cmp r0, #0
	beq _080DCF40
	adds r0, r5, #0
	bl sub_8000608
_080DCF40:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080DCF48: .4byte gUnknown_080E65E0

	thumb_func_start sub_80DCF4C
sub_80DCF4C: @ 0x080DCF4C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	mov r8, r0
	mov sb, r1
	ldr r0, _080DCFC4 @ =gUnknown_080E7568
	mov r1, r8
	str r0, [r1, #0x14]
	ldr r0, [r1, #0x10]
	cmp r0, #0
	beq _080DCF90
	ldr r1, [r1, #0x18]
	movs r6, #0
	ldr r7, [r0, #8]
	cmp r6, r7
	bhs _080DCF90
	adds r5, r1, #0
	adds r4, r0, #0
	adds r4, #0xc
_080DCF74:
	ldr r1, [r4]
	cmp r1, #0
	beq _080DCF86
	ldr r0, [r1, #0x4c]
	ldr r2, [r0, #0x14]
	adds r0, r1, #0
	adds r1, r5, #0
	bl sub_80D3914
_080DCF86:
	adds r5, #0x10
	adds r4, #4
	adds r6, #1
	cmp r6, r7
	blo _080DCF74
_080DCF90:
	ldr r0, _080DCFC8 @ =gUnknown_080E6250
	mov r2, r8
	str r0, [r2, #0x14]
	ldr r1, [r2, #0x10]
	cmp r1, #0
	beq _080DCFA8
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DCFA8:
	movs r0, #1
	mov r1, sb
	ands r0, r1
	cmp r0, #0
	beq _080DCFB8
	mov r0, r8
	bl sub_8000608
_080DCFB8:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080DCFC4: .4byte gUnknown_080E7568
_080DCFC8: .4byte gUnknown_080E6250

	thumb_func_start sub_80DCFCC
sub_80DCFCC: @ 0x080DCFCC
	push {r4, lr}
	adds r4, r0, #0
	bl sub_801FE20
	movs r0, #0
	strb r0, [r4, #0x1c]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DCFE0
sub_80DCFE0: @ 0x080DCFE0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r4, r0, #0
	movs r7, #0
	ldrb r0, [r4, #0x1c]
	cmp r0, #0
	bne _080DCFF6
	b _080DD318
_080DCFF6:
	movs r0, #0x18
	bl sub_80005D4
	adds r6, r0, #0
	ldr r0, [r4, #0x18]
	mov sl, r0
	str r4, [r6]
	ldr r0, _080DD034 @ =gUnknown_080E76D4
	str r0, [r6, #4]
	str r7, [r6, #8]
	ldr r4, [r4]
	mov r8, r4
	movs r1, #0
	mov sb, r1
_080DD012:
	mov r2, sb
	lsls r0, r2, #4
	mov r1, sl
	adds r7, r1, r0
	ldrb r0, [r7]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	subs r0, #1
	cmp r0, #0xb
	bls _080DD028
	b _080DD2FA
_080DD028:
	lsls r0, r0, #2
	ldr r1, _080DD038 @ =_080DD03C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080DD034: .4byte gUnknown_080E76D4
_080DD038: .4byte _080DD03C
_080DD03C: @ jump table
	.4byte _080DD06C @ case 0
	.4byte _080DD094 @ case 1
	.4byte _080DD0B4 @ case 2
	.4byte _080DD0DC @ case 3
	.4byte _080DD104 @ case 4
	.4byte _080DD160 @ case 5
	.4byte _080DD1D4 @ case 6
	.4byte _080DD1FC @ case 7
	.4byte _080DD224 @ case 8
	.4byte _080DD24C @ case 9
	.4byte _080DD274 @ case 10
	.4byte _080DD294 @ case 11
_080DD06C:
	movs r0, #0x64
	bl sub_80005D4
	adds r5, r0, #0
	adds r4, r7, #4
	ldr r2, [r7, #4]
	ldr r0, _080DD08C @ =0x000009B6
	adds r2, r2, r0
	adds r0, r5, #0
	mov r1, r8
	movs r3, #1
	bl sub_8039E98
	ldr r0, _080DD090 @ =gUnknown_080E76A4
	b _080DD2AA
	.align 2, 0
_080DD08C: .4byte 0x000009B6
_080DD090: .4byte gUnknown_080E76A4
_080DD094:
	movs r0, #0x64
	bl sub_80005D4
	adds r5, r0, #0
	adds r4, r7, #4
	ldr r2, [r7, #4]
	adds r2, #0x10
	mov r1, r8
	movs r3, #1
	bl sub_8039E98
	ldr r0, _080DD0B0 @ =gUnknown_080E768C
	b _080DD2AA
	.align 2, 0
_080DD0B0: .4byte gUnknown_080E768C
_080DD0B4:
	movs r0, #0x64
	bl sub_80005D4
	adds r5, r0, #0
	adds r4, r7, #4
	ldr r2, [r7, #4]
	ldr r0, _080DD0D4 @ =0x000003DB
	adds r2, r2, r0
	adds r0, r5, #0
	mov r1, r8
	movs r3, #1
	bl sub_8039E98
	ldr r0, _080DD0D8 @ =gUnknown_080E7674
	b _080DD2AA
	.align 2, 0
_080DD0D4: .4byte 0x000003DB
_080DD0D8: .4byte gUnknown_080E7674
_080DD0DC:
	movs r0, #0x64
	bl sub_80005D4
	adds r5, r0, #0
	adds r4, r7, #4
	ldr r2, [r7, #4]
	ldr r0, _080DD0FC @ =0x00000806
	adds r2, r2, r0
	adds r0, r5, #0
	mov r1, r8
	movs r3, #1
	bl sub_8039E98
	ldr r0, _080DD100 @ =gUnknown_080E765C
	b _080DD2AA
	.align 2, 0
_080DD0FC: .4byte 0x00000806
_080DD100: .4byte gUnknown_080E765C
_080DD104:
	movs r0, #0x6c
	bl sub_80005D4
	adds r5, r0, #0
	adds r4, r7, #4
	ldr r2, [r7, #4]
	ldr r0, _080DD158 @ =0x00000202
	adds r2, r2, r0
	adds r0, r5, #0
	mov r1, r8
	movs r3, #1
	bl sub_8039E98
	ldr r0, _080DD15C @ =gUnknown_080E7644
	str r0, [r5, #0x4c]
	ldr r0, [r7, #4]
	str r0, [r5, #0x50]
	ldrh r0, [r4, #4]
	adds r1, r5, #0
	adds r1, #0x54
	movs r2, #0
	movs r3, #0
	strh r0, [r1]
	ldrh r0, [r4, #6]
	adds r4, r5, #0
	adds r4, #0x56
	strh r0, [r4]
	adds r0, r5, #0
	adds r0, #0x60
	strh r3, [r0]
	adds r0, #2
	strb r2, [r0]
	movs r2, #0
	ldrsh r0, [r1, r2]
	lsls r0, r0, #0x10
	str r0, [r5, #0x58]
	movs r1, #0
	ldrsh r0, [r4, r1]
	lsls r0, r0, #0x10
	str r0, [r5, #0x5c]
	str r3, [r5, #0x68]
	b _080DD2DE
	.align 2, 0
_080DD158: .4byte 0x00000202
_080DD15C: .4byte gUnknown_080E7644
_080DD160:
	movs r0, #0x88
	bl sub_80005D4
	adds r5, r0, #0
	adds r4, r7, #4
	ldr r2, [r7, #4]
	ldr r0, _080DD1CC @ =0x000002A3
	adds r2, r2, r0
	adds r0, r5, #0
	mov r1, r8
	movs r3, #1
	bl sub_8039E98
	ldr r0, _080DD1D0 @ =gUnknown_080E762C
	str r0, [r5, #0x4c]
	ldr r0, [r7, #4]
	str r0, [r5, #0x50]
	adds r1, r5, #0
	adds r1, #0x79
	movs r0, #0xff
	strb r0, [r1]
	subs r1, #0x29
	ldrb r2, [r4, #8]
	lsls r2, r2, #0x1c
	asrs r2, r2, #0x1c
	adds r0, r5, #0
	bl sub_803A144
	adds r1, r5, #0
	adds r1, #0x78
	movs r2, #0
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0x60
	movs r1, #0
	strh r2, [r0]
	adds r0, #2
	strb r1, [r0]
	subs r0, #0xe
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r0, r0, #0x10
	str r0, [r5, #0x58]
	adds r0, r5, #0
	adds r0, #0x56
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r0, r0, #0x10
	str r0, [r5, #0x5c]
	adds r1, r5, #0
	adds r1, #0x84
	movs r0, #0xf8
	strb r0, [r1]
	b _080DD2DE
	.align 2, 0
_080DD1CC: .4byte 0x000002A3
_080DD1D0: .4byte gUnknown_080E762C
_080DD1D4:
	movs r0, #0x64
	bl sub_80005D4
	adds r5, r0, #0
	adds r4, r7, #4
	ldr r2, [r7, #4]
	ldr r0, _080DD1F4 @ =0x0000087B
	adds r2, r2, r0
	adds r0, r5, #0
	mov r1, r8
	movs r3, #1
	bl sub_8039E98
	ldr r0, _080DD1F8 @ =gUnknown_080E7614
	b _080DD2AA
	.align 2, 0
_080DD1F4: .4byte 0x0000087B
_080DD1F8: .4byte gUnknown_080E7614
_080DD1FC:
	movs r0, #0x64
	bl sub_80005D4
	adds r5, r0, #0
	adds r4, r7, #4
	ldr r2, [r7, #4]
	ldr r0, _080DD21C @ =0x0000065C
	adds r2, r2, r0
	adds r0, r5, #0
	mov r1, r8
	movs r3, #1
	bl sub_8039E98
	ldr r0, _080DD220 @ =gUnknown_080E75FC
	b _080DD2AA
	.align 2, 0
_080DD21C: .4byte 0x0000065C
_080DD220: .4byte gUnknown_080E75FC
_080DD224:
	movs r0, #0x64
	bl sub_80005D4
	adds r5, r0, #0
	adds r4, r7, #4
	ldr r2, [r7, #4]
	ldr r0, _080DD244 @ =0x000008F9
	adds r2, r2, r0
	adds r0, r5, #0
	mov r1, r8
	movs r3, #1
	bl sub_8039E98
	ldr r0, _080DD248 @ =gUnknown_080E75E4
	b _080DD2AA
	.align 2, 0
_080DD244: .4byte 0x000008F9
_080DD248: .4byte gUnknown_080E75E4
_080DD24C:
	movs r0, #0x64
	bl sub_80005D4
	adds r5, r0, #0
	adds r4, r7, #4
	ldr r2, [r7, #4]
	ldr r0, _080DD26C @ =0x000009A9
	adds r2, r2, r0
	adds r0, r5, #0
	mov r1, r8
	movs r3, #1
	bl sub_8039E98
	ldr r0, _080DD270 @ =gUnknown_080E75CC
	b _080DD2AA
	.align 2, 0
_080DD26C: .4byte 0x000009A9
_080DD270: .4byte gUnknown_080E75CC
_080DD274:
	movs r0, #0x64
	bl sub_80005D4
	adds r5, r0, #0
	adds r4, r7, #4
	mov r1, r8
	ldr r2, _080DD28C @ =0x000008FD
	movs r3, #1
	bl sub_8039E98
	ldr r0, _080DD290 @ =gUnknown_080E75B4
	b _080DD2AA
	.align 2, 0
_080DD28C: .4byte 0x000008FD
_080DD290: .4byte gUnknown_080E75B4
_080DD294:
	movs r0, #0x64
	bl sub_80005D4
	adds r5, r0, #0
	adds r4, r7, #4
	mov r1, r8
	movs r2, #0x15
	movs r3, #0
	bl sub_8039E98
	ldr r0, _080DD314 @ =gUnknown_080E759C
_080DD2AA:
	str r0, [r5, #0x4c]
	ldr r0, [r7, #4]
	str r0, [r5, #0x50]
	ldrh r0, [r4, #4]
	adds r2, r5, #0
	adds r2, #0x54
	movs r3, #0
	movs r1, #0
	strh r0, [r2]
	ldrh r0, [r4, #6]
	adds r4, r5, #0
	adds r4, #0x56
	strh r0, [r4]
	adds r0, r5, #0
	adds r0, #0x60
	strh r1, [r0]
	adds r0, #2
	strb r3, [r0]
	movs r1, #0
	ldrsh r0, [r2, r1]
	lsls r0, r0, #0x10
	str r0, [r5, #0x58]
	movs r2, #0
	ldrsh r0, [r4, r2]
	lsls r0, r0, #0x10
	str r0, [r5, #0x5c]
_080DD2DE:
	adds r1, r6, #0
	adds r1, #8
	ldr r0, [r6, #8]
	cmp r0, #2
	bhi _080DD2FA
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r1, r0
	cmp r0, #0
	beq _080DD2F4
	str r5, [r0]
_080DD2F4:
	ldr r0, [r6, #8]
	adds r0, #1
	str r0, [r6, #8]
_080DD2FA:
	ldrb r1, [r7]
	movs r0, #0x10
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r7]
	movs r0, #1
	add sb, r0
	mov r1, sb
	cmp r1, #2
	bhi _080DD310
	b _080DD012
_080DD310:
	adds r7, r6, #0
	b _080DD36E
	.align 2, 0
_080DD314: .4byte gUnknown_080E759C
_080DD318:
	movs r0, #0x18
	bl sub_80005D4
	adds r5, r0, #0
	str r4, [r5]
	ldr r0, _080DD380 @ =gUnknown_080E76D4
	str r0, [r5, #4]
	str r7, [r5, #8]
	ldr r4, [r4]
	ldr r0, [r4]
	movs r2, #0xa2
	lsls r2, r2, #1
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r4, #0
	bl sub_80D3910
	ldrb r0, [r0, #0xa]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1b
	movs r6, #0
	subs r0, #6
	cmp r0, #0xb
	bls _080DD34A
	movs r6, #1
_080DD34A:
	ldr r0, [r4]
	movs r1, #0xa2
	lsls r1, r1, #1
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r4, #0
	bl sub_80D3910
	adds r0, #8
	bl sub_800E324
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	adds r3, r6, #0
	bl sub_803A394
	adds r7, r5, #0
_080DD36E:
	adds r0, r7, #0
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080DD380: .4byte gUnknown_080E76D4
_080DD384:
	.byte 0x0B, 0x78, 0x10, 0x22, 0x52, 0x42, 0x1A, 0x40, 0x0C, 0x23, 0x1A, 0x43
	.byte 0x0A, 0x70, 0x02, 0x6D, 0x4A, 0x60, 0x02, 0x1C, 0x54, 0x32, 0x12, 0x88, 0x0A, 0x81, 0x56, 0x30
	.byte 0x00, 0x88, 0x48, 0x81, 0x70, 0x47, 0x00, 0x00

	thumb_func_start sub_80DD3A8
sub_80DD3A8: @ 0x080DD3A8
	push {r4, r5, lr}
	sub sp, #0x10
	adds r4, r0, #0
	adds r4, #0x54
	movs r5, #0
	ldrsh r4, [r4, r5]
	str r4, [sp]
	adds r4, r0, #0
	adds r4, #0x56
	movs r5, #0
	ldrsh r4, [r4, r5]
	str r4, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r4, #2
	str r4, [sp, #0xc]
	bl sub_8039F90
	add sp, #0x10
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80DD3D4
sub_80DD3D4: @ 0x080DD3D4
	push {r4, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x47
	ldrb r0, [r1]
	cmp r0, #0
	bne _080DD3F8
	adds r0, r4, #0
	adds r0, #0x30
	bl sub_805E8F0
	lsls r0, r0, #0x1e
	cmp r0, #0
	bge _080DD3FC
	adds r1, r4, #0
	adds r1, #0x44
	movs r0, #1
	b _080DD3FA
_080DD3F8:
	movs r0, #0
_080DD3FA:
	strb r0, [r1]
_080DD3FC:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DD404
sub_80DD404: @ 0x080DD404
	push {lr}
	bl sub_8039F50
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DD410
sub_80DD410: @ 0x080DD410
	ldrb r3, [r1]
	movs r2, #0x10
	rsbs r2, r2, #0
	ands r2, r3
	movs r3, #0xb
	orrs r2, r3
	strb r2, [r1]
	ldr r2, [r0, #0x50]
	str r2, [r1, #4]
	adds r2, r0, #0
	adds r2, #0x54
	ldrh r2, [r2]
	strh r2, [r1, #8]
	adds r0, #0x56
	ldrh r0, [r0]
	strh r0, [r1, #0xa]
	bx lr
	.align 2, 0

	thumb_func_start sub_80DD434
sub_80DD434: @ 0x080DD434
	push {r4, r5, lr}
	sub sp, #0x10
	adds r4, r0, #0
	adds r4, #0x54
	movs r5, #0
	ldrsh r4, [r4, r5]
	str r4, [sp]
	adds r4, r0, #0
	adds r4, #0x56
	movs r5, #0
	ldrsh r4, [r4, r5]
	str r4, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r4, #2
	str r4, [sp, #0xc]
	bl sub_8039F90
	add sp, #0x10
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80DD460
sub_80DD460: @ 0x080DD460
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	adds r5, #0x62
	movs r0, #0
	ldrsb r0, [r5, r0]
	cmp r0, #0
	beq _080DD476
	cmp r0, #1
	beq _080DD4A4
	b _080DD4B8
_080DD476:
	bl sub_80D11E4
	asrs r0, r0, #4
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	beq _080DD48C
	adds r0, r4, #0
	movs r1, #0xcf
	bl sub_803A350
_080DD48C:
	movs r0, #2
	bl sub_80AB788
	adds r0, #6
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r1, r1, #2
	adds r0, r4, #0
	adds r0, #0x60
	strh r1, [r0]
	movs r0, #1
	b _080DD4B6
_080DD4A4:
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080DD4B8
	movs r0, #0
_080DD4B6:
	strb r0, [r5]
_080DD4B8:
	adds r1, r4, #0
	adds r1, #0x47
	ldrb r0, [r1]
	cmp r0, #0
	bne _080DD4D8
	adds r0, r4, #0
	adds r0, #0x30
	bl sub_805E8F0
	lsls r0, r0, #0x1e
	cmp r0, #0
	bge _080DD4DC
	adds r1, r4, #0
	adds r1, #0x44
	movs r0, #1
	b _080DD4DA
_080DD4D8:
	movs r0, #0
_080DD4DA:
	strb r0, [r1]
_080DD4DC:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DD4E4
sub_80DD4E4: @ 0x080DD4E4
	push {lr}
	bl sub_8039F50
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DD4F0
sub_80DD4F0: @ 0x080DD4F0
	ldrb r3, [r1]
	movs r2, #0x10
	rsbs r2, r2, #0
	ands r2, r3
	movs r3, #0xa
	orrs r2, r3
	strb r2, [r1]
	ldr r2, [r0, #0x50]
	str r2, [r1, #4]
	adds r2, r0, #0
	adds r2, #0x54
	ldrh r2, [r2]
	strh r2, [r1, #8]
	adds r0, #0x56
	ldrh r0, [r0]
	strh r0, [r1, #0xa]
	bx lr
	.align 2, 0

	thumb_func_start sub_80DD514
sub_80DD514: @ 0x080DD514
	push {r4, r5, lr}
	sub sp, #0x10
	adds r4, r0, #0
	adds r4, #0x54
	movs r5, #0
	ldrsh r4, [r4, r5]
	str r4, [sp]
	adds r4, r0, #0
	adds r4, #0x56
	movs r5, #0
	ldrsh r4, [r4, r5]
	str r4, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r4, #2
	str r4, [sp, #0xc]
	bl sub_8039F90
	add sp, #0x10
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80DD540
sub_80DD540: @ 0x080DD540
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0x80
	lsls r2, r2, #9
	bl sub_803A180
	cmp r0, #0
	beq _080DD57E
	ldr r0, [r4, #0x50]
	ldr r1, _080DD584 @ =0x000009A9
	adds r5, r0, r1
	ldrh r0, [r4, #4]
	cmp r0, r5
	beq _080DD57E
	adds r0, r4, #0
	adds r0, #0x30
	adds r1, r5, #0
	bl sub_805E860
	adds r0, r4, #0
	adds r0, #0x44
	movs r2, #0
	movs r1, #1
	strb r1, [r0]
	adds r0, #2
	strb r2, [r0]
	adds r0, #1
	strb r1, [r0]
	strh r5, [r4, #4]
_080DD57E:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080DD584: .4byte 0x000009A9

	thumb_func_start sub_80DD588
sub_80DD588: @ 0x080DD588
	push {lr}
	bl sub_8039F50
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DD594
sub_80DD594: @ 0x080DD594
	ldrb r3, [r1]
	movs r2, #0x10
	rsbs r2, r2, #0
	ands r2, r3
	movs r3, #9
	orrs r2, r3
	strb r2, [r1]
	ldr r2, [r0, #0x50]
	str r2, [r1, #4]
	adds r2, r0, #0
	adds r2, #0x54
	ldrh r2, [r2]
	strh r2, [r1, #8]
	adds r0, #0x56
	ldrh r0, [r0]
	strh r0, [r1, #0xa]
	bx lr
	.align 2, 0

	thumb_func_start sub_80DD5B8
sub_80DD5B8: @ 0x080DD5B8
	push {r4, r5, lr}
	sub sp, #0x10
	adds r4, r0, #0
	adds r4, #0x54
	movs r5, #0
	ldrsh r4, [r4, r5]
	str r4, [sp]
	adds r4, r0, #0
	adds r4, #0x56
	movs r5, #0
	ldrsh r4, [r4, r5]
	str r4, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r4, #2
	str r4, [sp, #0xc]
	bl sub_8039F90
	add sp, #0x10
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80DD5E4
sub_80DD5E4: @ 0x080DD5E4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x50
	adds r5, r0, #0
	ldr r4, [r5]
	ldr r0, [r4]
	ldr r2, [r0, #0x40]
	adds r0, r4, #0
	movs r1, #0
	bl sub_80D3914
	cmp r0, #0
	beq _080DD6FE
	movs r2, #0xa
	ldrsh r1, [r0, r2]
	mov sb, r1
	movs r7, #0xe
	ldrsh r3, [r0, r7]
	mov r8, r3
	movs r0, #0x54
	adds r0, r0, r5
	mov sl, r0
	movs r1, #0
	ldrsh r0, [r0, r1]
	mov r2, sb
	subs r0, r2, r0
	cmp r0, #0
	bge _080DD624
	rsbs r0, r0, #0
_080DD624:
	cmp r0, #0xf
	bgt _080DD6FE
	adds r6, r5, #0
	adds r6, #0x56
	movs r3, #0
	ldrsh r0, [r6, r3]
	mov r7, r8
	subs r0, r7, r0
	cmp r0, #0
	bge _080DD63A
	rsbs r0, r0, #0
_080DD63A:
	cmp r0, #0xf
	bgt _080DD6FE
	ldr r1, [r4]
	add r0, sp, #8
	ldr r3, [r1, #0x34]
	adds r1, r4, #0
	movs r2, #0
	bl sub_80D3918
	mov r0, sl
	movs r2, #0
	ldrsh r1, [r0, r2]
	movs r4, #0
	ldrsh r3, [r6, r4]
	add r2, sp, #0x48
	adds r0, r1, #0
	subs r0, #8
	movs r7, #0
	mov ip, r7
	strh r0, [r2]
	adds r0, r3, #0
	subs r0, #8
	strh r0, [r2, #2]
	adds r1, #8
	strh r1, [r2, #4]
	adds r3, #8
	strh r3, [r2, #6]
	add r2, sp, #0x14
	movs r1, #0x21
	str r1, [sp, #0x14]
	movs r0, #0x21
	rsbs r0, r0, #0
	str r0, [r2, #4]
	str r0, [r2, #8]
	str r1, [r2, #0xc]
	add r1, sp, #0x28
	add r0, sp, #8
	ldm r0!, {r3, r4, r7}
	stm r1!, {r3, r4, r7}
	ldr r0, [sp, #0x48]
	ldr r1, [sp, #0x4c]
	str r0, [sp, #0x34]
	str r1, [sp, #0x38]
	movs r0, #0x20
	str r0, [r2, #0x28]
	mov r1, ip
	str r1, [r2, #0x2c]
	str r1, [r2, #0x30]
	ldr r4, [r5, #0x50]
	mov r3, sl
	movs r7, #0
	ldrsh r0, [r3, r7]
	movs r3, #0
	ldrsh r1, [r6, r3]
	str r2, [sp]
	str r4, [sp, #4]
	mov r2, sb
	mov r3, r8
	bl sub_80ABE58
	adds r1, r0, #0
	str r1, [r5, #0x50]
	adds r6, r5, #0
	adds r6, #0x62
	cmp r4, r1
	bne _080DD6C6
	movs r0, #0
	ldrsb r0, [r6, r0]
	cmp r0, #0
	bne _080DD6F2
_080DD6C6:
	ldr r7, _080DD740 @ =0x000008F9
	adds r4, r1, r7
	ldrh r0, [r5, #4]
	cmp r0, r4
	beq _080DD6F2
	adds r0, r5, #0
	adds r0, #0x30
	adds r1, r4, #0
	bl sub_805E860
	adds r0, r5, #0
	adds r0, #0x44
	movs r1, #1
	strb r1, [r0]
	adds r2, r5, #0
	adds r2, #0x46
	movs r0, #0
	strb r0, [r2]
	adds r0, r5, #0
	adds r0, #0x47
	strb r1, [r0]
	strh r4, [r5, #4]
_080DD6F2:
	movs r0, #1
	strb r0, [r6]
	adds r1, r5, #0
	adds r1, #0x60
	movs r0, #0x3c
	strh r0, [r1]
_080DD6FE:
	adds r1, r5, #0
	adds r1, #0x50
	movs r2, #0x80
	lsls r2, r2, #8
	adds r0, r5, #0
	bl sub_803A180
	cmp r0, #0
	beq _080DD772
	adds r0, r5, #0
	adds r0, #0x62
	movs r6, #0
	ldrsb r6, [r0, r6]
	cmp r6, #0
	bne _080DD748
	ldr r0, [r5, #0x50]
	ldr r1, _080DD744 @ =0x000008F5
	adds r4, r0, r1
	ldrh r0, [r5, #4]
	cmp r0, r4
	beq _080DD772
	adds r0, r5, #0
	adds r0, #0x30
	adds r1, r4, #0
	bl sub_805E860
	adds r0, r5, #0
	adds r0, #0x44
	movs r1, #1
	strb r1, [r0]
	adds r0, #2
	strb r6, [r0]
	b _080DD76C
	.align 2, 0
_080DD740: .4byte 0x000008F9
_080DD744: .4byte 0x000008F5
_080DD748:
	ldr r0, [r5, #0x50]
	ldr r2, _080DD784 @ =0x000008F9
	adds r4, r0, r2
	ldrh r0, [r5, #4]
	cmp r0, r4
	beq _080DD772
	adds r0, r5, #0
	adds r0, #0x30
	adds r1, r4, #0
	bl sub_805E860
	adds r0, r5, #0
	adds r0, #0x44
	movs r2, #0
	movs r1, #1
	strb r1, [r0]
	adds r0, #2
	strb r2, [r0]
_080DD76C:
	adds r0, #1
	strb r1, [r0]
	strh r4, [r5, #4]
_080DD772:
	add sp, #0x50
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080DD784: .4byte 0x000008F9

	thumb_func_start sub_80DD788
sub_80DD788: @ 0x080DD788
	push {lr}
	bl sub_8039F50
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DD794
sub_80DD794: @ 0x080DD794
	ldrb r3, [r1]
	movs r2, #0x10
	rsbs r2, r2, #0
	ands r2, r3
	movs r3, #8
	orrs r2, r3
	strb r2, [r1]
	ldr r2, [r0, #0x50]
	str r2, [r1, #4]
	adds r2, r0, #0
	adds r2, #0x54
	ldrh r2, [r2]
	strh r2, [r1, #8]
	adds r0, #0x56
	ldrh r0, [r0]
	strh r0, [r1, #0xa]
	bx lr
	.align 2, 0

	thumb_func_start sub_80DD7B8
sub_80DD7B8: @ 0x080DD7B8
	push {r4, r5, lr}
	sub sp, #0x10
	adds r4, r0, #0
	adds r4, #0x54
	movs r5, #0
	ldrsh r4, [r4, r5]
	str r4, [sp]
	adds r4, r0, #0
	adds r4, #0x56
	movs r5, #0
	ldrsh r4, [r4, r5]
	str r4, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r4, #2
	str r4, [sp, #0xc]
	bl sub_8039F90
	add sp, #0x10
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80DD7E4
sub_80DD7E4: @ 0x080DD7E4
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0x80
	lsls r2, r2, #8
	bl sub_803A180
	cmp r0, #0
	beq _080DD854
	adds r0, r4, #0
	adds r0, #0x62
	movs r6, #0
	ldrsb r6, [r0, r6]
	cmp r6, #0
	bne _080DD82A
	ldr r0, [r4, #0x50]
	movs r1, #0xcb
	lsls r1, r1, #3
	adds r5, r0, r1
	ldrh r0, [r4, #4]
	cmp r0, r5
	beq _080DD854
	adds r0, r4, #0
	adds r0, #0x30
	adds r1, r5, #0
	bl sub_805E860
	adds r0, r4, #0
	adds r0, #0x44
	movs r1, #1
	strb r1, [r0]
	adds r0, #2
	strb r6, [r0]
	b _080DD84E
_080DD82A:
	ldr r0, [r4, #0x50]
	ldr r1, _080DD85C @ =0x0000065C
	adds r5, r0, r1
	ldrh r0, [r4, #4]
	cmp r0, r5
	beq _080DD854
	adds r0, r4, #0
	adds r0, #0x30
	adds r1, r5, #0
	bl sub_805E860
	adds r0, r4, #0
	adds r0, #0x44
	movs r2, #0
	movs r1, #1
	strb r1, [r0]
	adds r0, #2
	strb r2, [r0]
_080DD84E:
	adds r0, #1
	strb r1, [r0]
	strh r5, [r4, #4]
_080DD854:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080DD85C: .4byte 0x0000065C

	thumb_func_start sub_80DD860
sub_80DD860: @ 0x080DD860
	push {lr}
	bl sub_8039F50
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DD86C
sub_80DD86C: @ 0x080DD86C
	ldrb r3, [r1]
	movs r2, #0x10
	rsbs r2, r2, #0
	ands r2, r3
	movs r3, #7
	orrs r2, r3
	strb r2, [r1]
	ldr r2, [r0, #0x50]
	str r2, [r1, #4]
	adds r2, r0, #0
	adds r2, #0x54
	ldrh r2, [r2]
	strh r2, [r1, #8]
	adds r0, #0x56
	ldrh r0, [r0]
	strh r0, [r1, #0xa]
	bx lr
	.align 2, 0

	thumb_func_start sub_80DD890
sub_80DD890: @ 0x080DD890
	push {r4, r5, lr}
	sub sp, #0x10
	adds r4, r0, #0
	adds r4, #0x54
	movs r5, #0
	ldrsh r4, [r4, r5]
	str r4, [sp]
	adds r4, r0, #0
	adds r4, #0x56
	movs r5, #0
	ldrsh r4, [r4, r5]
	str r4, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r4, #2
	str r4, [sp, #0xc]
	bl sub_8039F90
	add sp, #0x10
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80DD8BC
sub_80DD8BC: @ 0x080DD8BC
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0x80
	lsls r2, r2, #8
	bl sub_803A180
	cmp r0, #0
	beq _080DD92E
	adds r0, r4, #0
	adds r0, #0x62
	movs r6, #0
	ldrsb r6, [r0, r6]
	cmp r6, #0
	bne _080DD904
	ldr r0, [r4, #0x50]
	ldr r1, _080DD900 @ =0x00000877
	adds r5, r0, r1
	ldrh r0, [r4, #4]
	cmp r0, r5
	beq _080DD92E
	adds r0, r4, #0
	adds r0, #0x30
	adds r1, r5, #0
	bl sub_805E860
	adds r0, r4, #0
	adds r0, #0x44
	movs r1, #1
	strb r1, [r0]
	adds r0, #2
	strb r6, [r0]
	b _080DD928
	.align 2, 0
_080DD900: .4byte 0x00000877
_080DD904:
	ldr r0, [r4, #0x50]
	ldr r1, _080DD934 @ =0x0000087B
	adds r5, r0, r1
	ldrh r0, [r4, #4]
	cmp r0, r5
	beq _080DD92E
	adds r0, r4, #0
	adds r0, #0x30
	adds r1, r5, #0
	bl sub_805E860
	adds r0, r4, #0
	adds r0, #0x44
	movs r2, #0
	movs r1, #1
	strb r1, [r0]
	adds r0, #2
	strb r2, [r0]
_080DD928:
	adds r0, #1
	strb r1, [r0]
	strh r5, [r4, #4]
_080DD92E:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080DD934: .4byte 0x0000087B

	thumb_func_start sub_80DD938
sub_80DD938: @ 0x080DD938
	push {lr}
	bl sub_8039F50
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DD944
sub_80DD944: @ 0x080DD944
	push {r4, lr}
	mov ip, r0
	ldrb r2, [r1]
	movs r3, #0x10
	rsbs r3, r3, #0
	adds r0, r3, #0
	ands r0, r2
	movs r2, #6
	orrs r0, r2
	strb r0, [r1]
	mov r2, ip
	ldr r0, [r2, #0x50]
	str r0, [r1, #4]
	mov r0, ip
	adds r0, #0x54
	ldrh r0, [r0]
	strh r0, [r1, #8]
	mov r0, ip
	adds r0, #0x56
	ldrh r0, [r0]
	strh r0, [r1, #0xa]
	mov r0, ip
	adds r0, #0x78
	ldrb r2, [r0]
	movs r4, #0xf
	adds r0, r4, #0
	ands r0, r2
	ldrb r2, [r1, #0xc]
	ands r3, r2
	orrs r3, r0
	mov r0, ip
	adds r0, #0x79
	ldrb r0, [r0]
	lsls r0, r0, #4
	ands r3, r4
	orrs r3, r0
	strb r3, [r1, #0xc]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_80DD994
sub_80DD994: @ 0x080DD994
	push {r4, lr}
	sub sp, #0x10
	mov ip, r0
	adds r0, #0x54
	movs r4, #0
	ldrsh r0, [r0, r4]
	str r0, [sp]
	mov r0, ip
	adds r0, #0x56
	movs r4, #0
	ldrsh r0, [r0, r4]
	str r0, [sp, #4]
	mov r0, ip
	adds r0, #0x84
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	str r0, [sp, #8]
	movs r0, #1
	str r0, [sp, #0xc]
	mov r0, ip
	bl sub_8039F90
	add sp, #0x10
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DD9CC
sub_80DD9CC: @ 0x080DD9CC
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r5, #0
	adds r6, #0x62
	movs r4, #0
	ldrsb r4, [r6, r4]
	cmp r4, #1
	beq _080DDA14
	cmp r4, #1
	bgt _080DD9E8
	cmp r4, #0
	beq _080DD9F8
	subs r6, #0x1b
	b _080DDBD6
_080DD9E8:
	cmp r4, #2
	beq _080DDA6C
	adds r6, r5, #0
	adds r6, #0x47
	cmp r4, #3
	bne _080DD9F6
	b _080DDB66
_080DD9F6:
	b _080DDBD6
_080DD9F8:
	movs r0, #2
	bl sub_80AB788
	adds r0, #0x1e
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r1, r1, #2
	adds r0, r5, #0
	adds r0, #0x60
	strh r1, [r0]
	adds r0, #0x26
	strh r4, [r0]
	movs r0, #1
	b _080DDA28
_080DDA14:
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bge _080DDA30
	movs r0, #2
_080DDA28:
	strb r0, [r6]
	adds r6, r5, #0
	adds r6, #0x47
	b _080DDBD6
_080DDA30:
	movs r2, #0xb4
	lsls r2, r2, #1
	adds r6, r5, #0
	adds r6, #0x47
	cmp r0, r2
	bgt _080DDA3E
	b _080DDBD6
_080DDA3E:
	adds r1, r5, #0
	adds r1, #0x86
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080DDA50
	b _080DDBD6
_080DDA50:
	strh r2, [r1]
	bl sub_80D11E4
	asrs r0, r0, #4
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	bne _080DDA62
	b _080DDBD6
_080DDA62:
	adds r0, r5, #0
	movs r1, #0xce
	bl sub_803A350
	b _080DDBD6
_080DDA6C:
	adds r2, r5, #0
	adds r2, #0x79
	movs r1, #0
	ldrsb r1, [r2, r1]
	movs r0, #1
	rsbs r0, r0, #0
	cmp r1, r0
	bne _080DDA8A
	adds r0, r5, #0
	adds r0, #0x78
	ldrb r0, [r0]
	adds r0, #1
	movs r1, #3
	ands r0, r1
	strb r0, [r2]
_080DDA8A:
	adds r1, r5, #0
	adds r1, #0x64
	ldrb r2, [r2]
	lsls r2, r2, #0x18
	asrs r2, r2, #0x18
	adds r0, r5, #0
	bl sub_803A144
	adds r0, r5, #0
	adds r0, #0x68
	movs r2, #0
	ldrsh r1, [r0, r2]
	lsls r1, r1, #0x10
	str r1, [r5, #0x6c]
	adds r0, #2
	movs r3, #0
	ldrsh r2, [r0, r3]
	lsls r2, r2, #0x10
	str r2, [r5, #0x70]
	ldr r0, [r5, #0x58]
	subs r1, r1, r0
	str r1, [r5, #0x7c]
	adds r1, r5, #0
	adds r1, #0x80
	ldr r0, [r5, #0x5c]
	subs r2, r2, r0
	str r2, [r1]
	ldr r0, [r5, #0x7c]
	adds r1, r0, #0
	cmp r0, #0
	bge _080DDACA
	rsbs r1, r0, #0
_080DDACA:
	asrs r7, r1, #0x11
	adds r1, r2, #0
	cmp r2, #0
	bge _080DDAD4
	rsbs r1, r2, #0
_080DDAD4:
	asrs r6, r1, #0x11
	cmp r7, r6
	ble _080DDB06
	cmp r0, #0
	bge _080DDAE2
	str r4, [r5, #0x50]
	b _080DDAE6
_080DDAE2:
	movs r0, #3
	str r0, [r5, #0x50]
_080DDAE6:
	ldr r0, [r5, #0x7c]
	adds r1, r7, #0
	bl sub_80D0EC8
	str r0, [r5, #0x7c]
	adds r4, r5, #0
	adds r4, #0x80
	ldr r0, [r4]
	adds r1, r7, #0
	bl sub_80D0EC8
	str r0, [r4]
	adds r0, r5, #0
	adds r0, #0x60
	strh r7, [r0]
	b _080DDB30
_080DDB06:
	cmp r2, #0
	bge _080DDB0E
	movs r0, #1
	b _080DDB10
_080DDB0E:
	movs r0, #0
_080DDB10:
	str r0, [r5, #0x50]
	ldr r0, [r5, #0x7c]
	adds r1, r6, #0
	bl sub_80D0EC8
	str r0, [r5, #0x7c]
	adds r4, r5, #0
	adds r4, #0x80
	ldr r0, [r4]
	adds r1, r6, #0
	bl sub_80D0EC8
	str r0, [r4]
	adds r0, r5, #0
	adds r0, #0x60
	strh r6, [r0]
_080DDB30:
	ldr r4, _080DDC08 @ =0x000002A9
	ldrh r0, [r5, #4]
	adds r6, r5, #0
	adds r6, #0x47
	cmp r0, r4
	beq _080DDB58
	adds r0, r5, #0
	adds r0, #0x30
	adds r1, r4, #0
	bl sub_805E860
	adds r1, r5, #0
	adds r1, #0x44
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	adds r1, #2
	strb r2, [r1]
	strb r0, [r6]
	strh r4, [r5, #4]
_080DDB58:
	adds r1, r5, #0
	adds r1, #0x62
	movs r0, #3
	strb r0, [r1]
	adds r1, #0x22
	movs r0, #8
	strb r0, [r1]
_080DDB66:
	ldr r0, [r5, #0x58]
	ldr r1, [r5, #0x7c]
	adds r0, r0, r1
	str r0, [r5, #0x58]
	adds r1, r5, #0
	adds r1, #0x80
	ldr r0, [r5, #0x5c]
	ldr r1, [r1]
	adds r0, r0, r1
	str r0, [r5, #0x5c]
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r1]
	subs r0, #1
	movs r7, #0
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _080DDBD6
	adds r2, r5, #0
	adds r2, #0x79
	ldrb r1, [r2]
	adds r0, r5, #0
	adds r0, #0x78
	strb r1, [r0]
	movs r0, #0xff
	strb r0, [r2]
	ldr r0, [r5, #0x6c]
	str r0, [r5, #0x58]
	ldr r0, [r5, #0x70]
	str r0, [r5, #0x5c]
	adds r0, r5, #0
	adds r0, #0x62
	strb r7, [r0]
	adds r1, r5, #0
	adds r1, #0x84
	movs r0, #0xf8
	strb r0, [r1]
	movs r4, #0xa9
	lsls r4, r4, #2
	ldrh r0, [r5, #4]
	cmp r0, r4
	beq _080DDBD6
	adds r0, r5, #0
	adds r0, #0x30
	adds r1, r4, #0
	bl sub_805E860
	adds r0, r5, #0
	adds r0, #0x44
	movs r1, #1
	strb r1, [r0]
	adds r0, #2
	strb r7, [r0]
	strb r1, [r6]
	strh r4, [r5, #4]
_080DDBD6:
	ldr r0, [r5, #0x58]
	asrs r0, r0, #0x10
	adds r1, r5, #0
	adds r1, #0x54
	strh r0, [r1]
	ldr r0, [r5, #0x5c]
	asrs r0, r0, #0x10
	adds r1, #2
	strh r0, [r1]
	ldrb r0, [r6]
	cmp r0, #0
	bne _080DDC0C
	adds r0, r5, #0
	adds r0, #0x30
	bl sub_805E8F0
	lsls r0, r0, #0x1e
	cmp r0, #0
	bge _080DDC10
	adds r1, r5, #0
	adds r1, #0x44
	movs r0, #1
	strb r0, [r1]
	b _080DDC10
	.align 2, 0
_080DDC08: .4byte 0x000002A9
_080DDC0C:
	movs r0, #0
	strb r0, [r6]
_080DDC10:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DDC18
sub_80DDC18: @ 0x080DDC18
	push {lr}
	bl sub_8039F50
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DDC24
sub_80DDC24: @ 0x080DDC24
	ldrb r3, [r1]
	movs r2, #0x10
	rsbs r2, r2, #0
	ands r2, r3
	movs r3, #5
	orrs r2, r3
	strb r2, [r1]
	ldr r2, [r0, #0x50]
	str r2, [r1, #4]
	adds r2, r0, #0
	adds r2, #0x54
	ldrh r2, [r2]
	strh r2, [r1, #8]
	adds r0, #0x56
	ldrh r0, [r0]
	strh r0, [r1, #0xa]
	bx lr
	.align 2, 0

	thumb_func_start sub_80DDC48
sub_80DDC48: @ 0x080DDC48
	push {r4, r5, lr}
	sub sp, #0x10
	adds r4, r0, #0
	adds r4, #0x54
	movs r5, #0
	ldrsh r4, [r4, r5]
	str r4, [sp]
	adds r4, r0, #0
	adds r4, #0x56
	movs r5, #0
	ldrsh r4, [r4, r5]
	str r4, [sp, #4]
	ldr r4, [r0, #0x68]
	asrs r4, r4, #0x10
	str r4, [sp, #8]
	movs r4, #2
	str r4, [sp, #0xc]
	bl sub_8039F90
	add sp, #0x10
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DDC78
sub_80DDC78: @ 0x080DDC78
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r6, r0, #0
	adds r5, r6, #0
	adds r5, #0x62
	movs r4, #0
	ldrsb r4, [r5, r4]
	cmp r4, #1
	beq _080DDD1C
	cmp r4, #1
	bgt _080DDCA2
	cmp r4, #0
	beq _080DDCB4
	adds r4, r6, #0
	adds r4, #0x60
	movs r0, #0x47
	adds r0, r0, r6
	mov r8, r0
	b _080DDE1E
_080DDCA2:
	cmp r4, #2
	bne _080DDCA8
	b _080DDE08
_080DDCA8:
	adds r4, r6, #0
	adds r4, #0x60
	movs r1, #0x47
	adds r1, r1, r6
	mov r8, r1
	b _080DDE1E
_080DDCB4:
	bl sub_80D11E4
	asrs r0, r0, #8
	movs r1, #1
	ands r0, r1
	adds r0, #1
	strb r0, [r5]
	adds r5, r0, #0
	cmp r5, #1
	bne _080DDCEE
	movs r0, #4
	bl sub_80AB788
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r0, r2
	adds r4, r6, #0
	adds r4, #0x60
	strh r0, [r4]
	bl sub_80D11E4
	asrs r0, r0, #8
	ands r0, r5
	lsls r0, r0, #0xb
	adds r1, r6, #0
	adds r1, #0x64
	strh r0, [r1]
	b _080DDD04
_080DDCEE:
	movs r0, #2
	bl sub_80AB788
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r1, r1, #2
	adds r1, #0xb4
	adds r0, r6, #0
	adds r0, #0x60
	strh r1, [r0]
	adds r4, r0, #0
_080DDD04:
	movs r0, #2
	bl sub_80AB788
	lsls r0, r0, #2
	adds r0, #0xc
	adds r1, r6, #0
	adds r1, #0x66
	strh r0, [r1]
	movs r3, #0x47
	adds r3, r3, r6
	mov r8, r3
	b _080DDE1E
_080DDD1C:
	adds r1, r6, #0
	adds r1, #0x64
	ldrh r0, [r1]
	movs r7, #0xff
	lsls r7, r7, #4
	ands r7, r0
	mov sb, r1
	cmp r7, #0
	bne _080DDD5C
	ldr r5, _080DDD58 @ =0x00000205
	ldrh r0, [r6, #4]
	movs r1, #0x47
	adds r1, r1, r6
	mov r8, r1
	cmp r0, r5
	beq _080DDD90
	adds r0, r6, #0
	adds r0, #0x30
	adds r1, r5, #0
	bl sub_805E860
	adds r0, r6, #0
	adds r0, #0x44
	strb r4, [r0]
	adds r0, #2
	strb r7, [r0]
	mov r2, r8
	strb r4, [r2]
	b _080DDD8E
	.align 2, 0
_080DDD58: .4byte 0x00000205
_080DDD5C:
	movs r0, #0x80
	lsls r0, r0, #4
	movs r3, #0x47
	adds r3, r3, r6
	mov r8, r3
	cmp r7, r0
	bne _080DDD90
	movs r5, #0x81
	lsls r5, r5, #2
	ldrh r0, [r6, #4]
	cmp r0, r5
	beq _080DDD90
	adds r0, r6, #0
	adds r0, #0x30
	adds r1, r5, #0
	bl sub_805E860
	adds r0, r6, #0
	adds r0, #0x44
	movs r1, #0
	strb r4, [r0]
	adds r0, #2
	strb r1, [r0]
	mov r0, r8
	strb r4, [r0]
_080DDD8E:
	strh r5, [r6, #4]
_080DDD90:
	mov r2, sb
	ldrh r1, [r2]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	movs r5, #0xff
	ands r1, r5
	adds r0, r6, #0
	bl sub_803A320
	adds r4, r0, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	mov r3, sb
	ldrh r1, [r3]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	lsls r1, r1, #1
	ands r1, r5
	adds r0, r6, #0
	bl sub_803A334
	lsls r0, r0, #0x10
	adds r1, r6, #0
	adds r1, #0x66
	ldrh r1, [r1]
	mov r2, sb
	ldrh r2, [r2]
	adds r1, r1, r2
	mov r3, sb
	strh r1, [r3]
	lsls r4, r4, #6
	ldr r2, [r6, #0x58]
	adds r2, r2, r4
	str r2, [r6, #0x58]
	asrs r0, r0, #0xa
	ldr r1, [r6, #0x5c]
	adds r1, r1, r0
	str r1, [r6, #0x5c]
	asrs r2, r2, #0x10
	adds r0, r6, #0
	adds r0, #0x54
	strh r2, [r0]
	ldr r0, [r6, #0x5c]
	asrs r0, r0, #0x10
	adds r1, r6, #0
	adds r1, #0x56
	strh r0, [r1]
	ldr r1, [r6, #0x68]
	ldr r0, _080DDE04 @ =0x0007FFFF
	adds r4, r6, #0
	adds r4, #0x60
	cmp r1, r0
	bgt _080DDE1E
	movs r2, #0x80
	lsls r2, r2, #6
	adds r0, r1, r2
	b _080DDE1C
	.align 2, 0
_080DDE04: .4byte 0x0007FFFF
_080DDE08:
	ldr r0, [r6, #0x68]
	adds r4, r6, #0
	adds r4, #0x60
	movs r3, #0x47
	adds r3, r3, r6
	mov r8, r3
	cmp r0, #0
	ble _080DDE1E
	ldr r1, _080DDE54 @ =0xFFFFE000
	adds r0, r0, r1
_080DDE1C:
	str r0, [r6, #0x68]
_080DDE1E:
	ldrh r0, [r4]
	subs r0, #1
	movs r1, #0
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080DDE32
	adds r0, r6, #0
	adds r0, #0x62
	strb r1, [r0]
_080DDE32:
	mov r2, r8
	ldrb r0, [r2]
	cmp r0, #0
	bne _080DDE58
	adds r0, r6, #0
	adds r0, #0x30
	bl sub_805E8F0
	lsls r0, r0, #0x1e
	cmp r0, #0
	bge _080DDE5C
	adds r1, r6, #0
	adds r1, #0x44
	movs r0, #1
	strb r0, [r1]
	b _080DDE5C
	.align 2, 0
_080DDE54: .4byte 0xFFFFE000
_080DDE58:
	mov r3, r8
	strb r1, [r3]
_080DDE5C:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80DDE68
sub_80DDE68: @ 0x080DDE68
	push {lr}
	bl sub_8039F50
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DDE74
sub_80DDE74: @ 0x080DDE74
	ldrb r3, [r1]
	movs r2, #0x10
	rsbs r2, r2, #0
	ands r2, r3
	movs r3, #4
	orrs r2, r3
	strb r2, [r1]
	ldr r2, [r0, #0x50]
	str r2, [r1, #4]
	adds r2, r0, #0
	adds r2, #0x54
	ldrh r2, [r2]
	strh r2, [r1, #8]
	adds r0, #0x56
	ldrh r0, [r0]
	strh r0, [r1, #0xa]
	bx lr
	.align 2, 0

	thumb_func_start sub_80DDE98
sub_80DDE98: @ 0x080DDE98
	push {r4, r5, lr}
	sub sp, #0x10
	adds r4, r0, #0
	adds r4, #0x54
	movs r5, #0
	ldrsh r4, [r4, r5]
	str r4, [sp]
	adds r4, r0, #0
	adds r4, #0x56
	movs r5, #0
	ldrsh r4, [r4, r5]
	str r4, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r4, #2
	str r4, [sp, #0xc]
	bl sub_8039F90
	add sp, #0x10
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80DDEC4
sub_80DDEC4: @ 0x080DDEC4
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0x80
	lsls r2, r2, #6
	bl sub_803A180
	cmp r0, #0
	beq _080DDF02
	ldr r0, [r4, #0x50]
	ldr r1, _080DDF08 @ =0x00000806
	adds r5, r0, r1
	ldrh r0, [r4, #4]
	cmp r0, r5
	beq _080DDF02
	adds r0, r4, #0
	adds r0, #0x30
	adds r1, r5, #0
	bl sub_805E860
	adds r0, r4, #0
	adds r0, #0x44
	movs r2, #0
	movs r1, #1
	strb r1, [r0]
	adds r0, #2
	strb r2, [r0]
	adds r0, #1
	strb r1, [r0]
	strh r5, [r4, #4]
_080DDF02:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080DDF08: .4byte 0x00000806

	thumb_func_start sub_80DDF0C
sub_80DDF0C: @ 0x080DDF0C
	push {lr}
	bl sub_8039F50
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DDF18
sub_80DDF18: @ 0x080DDF18
	ldrb r3, [r1]
	movs r2, #0x10
	rsbs r2, r2, #0
	ands r2, r3
	movs r3, #3
	orrs r2, r3
	strb r2, [r1]
	ldr r2, [r0, #0x50]
	str r2, [r1, #4]
	adds r2, r0, #0
	adds r2, #0x54
	ldrh r2, [r2]
	strh r2, [r1, #8]
	adds r0, #0x56
	ldrh r0, [r0]
	strh r0, [r1, #0xa]
	bx lr
	.align 2, 0

	thumb_func_start sub_80DDF3C
sub_80DDF3C: @ 0x080DDF3C
	push {r4, r5, lr}
	sub sp, #0x10
	adds r4, r0, #0
	adds r4, #0x54
	movs r5, #0
	ldrsh r4, [r4, r5]
	str r4, [sp]
	adds r4, r0, #0
	adds r4, #0x56
	movs r5, #0
	ldrsh r4, [r4, r5]
	str r4, [sp, #4]
	movs r4, #8
	str r4, [sp, #8]
	movs r4, #2
	str r4, [sp, #0xc]
	bl sub_8039F90
	add sp, #0x10
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80DDF68
sub_80DDF68: @ 0x080DDF68
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0x80
	lsls r2, r2, #7
	bl sub_803A180
	cmp r0, #0
	beq _080DDFA6
	ldr r0, [r4, #0x50]
	ldr r1, _080DDFAC @ =0x000003DB
	adds r5, r0, r1
	ldrh r0, [r4, #4]
	cmp r0, r5
	beq _080DDFA6
	adds r0, r4, #0
	adds r0, #0x30
	adds r1, r5, #0
	bl sub_805E860
	adds r0, r4, #0
	adds r0, #0x44
	movs r2, #0
	movs r1, #1
	strb r1, [r0]
	adds r0, #2
	strb r2, [r0]
	adds r0, #1
	strb r1, [r0]
	strh r5, [r4, #4]
_080DDFA6:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080DDFAC: .4byte 0x000003DB

	thumb_func_start sub_80DDFB0
sub_80DDFB0: @ 0x080DDFB0
	push {lr}
	bl sub_8039F50
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DDFBC
sub_80DDFBC: @ 0x080DDFBC
	ldrb r3, [r1]
	movs r2, #0x10
	rsbs r2, r2, #0
	ands r2, r3
	movs r3, #2
	orrs r2, r3
	strb r2, [r1]
	ldr r2, [r0, #0x50]
	str r2, [r1, #4]
	adds r2, r0, #0
	adds r2, #0x54
	ldrh r2, [r2]
	strh r2, [r1, #8]
	adds r0, #0x56
	ldrh r0, [r0]
	strh r0, [r1, #0xa]
	bx lr
	.align 2, 0

	thumb_func_start sub_80DDFE0
sub_80DDFE0: @ 0x080DDFE0
	push {r4, r5, lr}
	sub sp, #0x10
	adds r4, r0, #0
	adds r4, #0x54
	movs r5, #0
	ldrsh r4, [r4, r5]
	str r4, [sp]
	adds r4, r0, #0
	adds r4, #0x56
	movs r5, #0
	ldrsh r4, [r4, r5]
	str r4, [sp, #4]
	movs r4, #8
	str r4, [sp, #8]
	movs r4, #2
	str r4, [sp, #0xc]
	bl sub_8039F90
	add sp, #0x10
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80DE00C
sub_80DE00C: @ 0x080DE00C
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0x80
	lsls r2, r2, #8
	bl sub_803A180
	cmp r0, #0
	beq _080DE04A
	ldr r0, [r4, #0x50]
	adds r5, r0, #0
	adds r5, #0x10
	ldrh r0, [r4, #4]
	cmp r0, r5
	beq _080DE04A
	adds r0, r4, #0
	adds r0, #0x30
	adds r1, r5, #0
	bl sub_805E860
	adds r0, r4, #0
	adds r0, #0x44
	movs r2, #0
	movs r1, #1
	strb r1, [r0]
	adds r0, #2
	strb r2, [r0]
	adds r0, #1
	strb r1, [r0]
	strh r5, [r4, #4]
_080DE04A:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80DE050
sub_80DE050: @ 0x080DE050
	push {lr}
	bl sub_8039F50
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DE05C
sub_80DE05C: @ 0x080DE05C
	ldrb r3, [r1]
	movs r2, #0x10
	rsbs r2, r2, #0
	ands r2, r3
	movs r3, #1
	orrs r2, r3
	strb r2, [r1]
	ldr r2, [r0, #0x50]
	str r2, [r1, #4]
	adds r2, r0, #0
	adds r2, #0x54
	ldrh r2, [r2]
	strh r2, [r1, #8]
	adds r0, #0x56
	ldrh r0, [r0]
	strh r0, [r1, #0xa]
	bx lr
	.align 2, 0

	thumb_func_start sub_80DE080
sub_80DE080: @ 0x080DE080
	push {r4, r5, lr}
	sub sp, #0x10
	adds r4, r0, #0
	adds r4, #0x54
	movs r5, #0
	ldrsh r4, [r4, r5]
	str r4, [sp]
	adds r4, r0, #0
	adds r4, #0x56
	movs r5, #0
	ldrsh r4, [r4, r5]
	str r4, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r4, #2
	str r4, [sp, #0xc]
	bl sub_8039F90
	add sp, #0x10
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80DE0AC
sub_80DE0AC: @ 0x080DE0AC
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0x80
	lsls r2, r2, #8
	bl sub_803A180
	cmp r0, #0
	beq _080DE11E
	adds r0, r4, #0
	adds r0, #0x62
	movs r6, #0
	ldrsb r6, [r0, r6]
	cmp r6, #0
	bne _080DE0F4
	ldr r0, [r4, #0x50]
	ldr r1, _080DE0F0 @ =0x000009B6
	adds r5, r0, r1
	ldrh r0, [r4, #4]
	cmp r0, r5
	beq _080DE11E
	adds r0, r4, #0
	adds r0, #0x30
	adds r1, r5, #0
	bl sub_805E860
	adds r0, r4, #0
	adds r0, #0x44
	movs r1, #1
	strb r1, [r0]
	adds r0, #2
	strb r6, [r0]
	b _080DE118
	.align 2, 0
_080DE0F0: .4byte 0x000009B6
_080DE0F4:
	ldr r0, [r4, #0x50]
	ldr r1, _080DE124 @ =0x000009BA
	adds r5, r0, r1
	ldrh r0, [r4, #4]
	cmp r0, r5
	beq _080DE11E
	adds r0, r4, #0
	adds r0, #0x30
	adds r1, r5, #0
	bl sub_805E860
	adds r0, r4, #0
	adds r0, #0x44
	movs r2, #0
	movs r1, #1
	strb r1, [r0]
	adds r0, #2
	strb r2, [r0]
_080DE118:
	adds r0, #1
	strb r1, [r0]
	strh r5, [r4, #4]
_080DE11E:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080DE124: .4byte 0x000009BA

	thumb_func_start sub_80DE128
sub_80DE128: @ 0x080DE128
	push {lr}
	bl sub_8039F50
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DE134
sub_80DE134: @ 0x080DE134
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	ldr r2, [r0]
	ldr r2, [r2]
	mov sb, r2
	ldr r2, [r1, #8]
	mov r8, r2
	ldr r7, [r1]
	adds r5, r0, #0
	adds r5, #0xc
	ldr r1, [r0, #8]
	lsls r1, r1, #2
	adds r1, r1, r0
	adds r6, r1, #0
	adds r6, #0xc
	cmp r5, r6
	beq _080DE176
_080DE15A:
	ldr r1, [r5]
	cmp r1, #0
	beq _080DE170
	ldr r0, [r1, #0x4c]
	ldr r4, [r0, #0x10]
	adds r0, r1, #0
	mov r1, sb
	mov r2, r8
	adds r3, r7, #0
	bl sub_80D391C
_080DE170:
	adds r5, #4
	cmp r5, r6
	bne _080DE15A
_080DE176:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80DE184
sub_80DE184: @ 0x080DE184
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r4, #0xc
	ldr r1, [r0, #8]
	lsls r1, r1, #2
	adds r1, r1, r0
	adds r5, r1, #0
	adds r5, #0xc
	cmp r4, r5
	beq _080DE1AE
_080DE198:
	ldr r2, [r4]
	cmp r2, #0
	beq _080DE1A8
	ldr r0, [r2, #0x4c]
	ldr r1, [r0, #0xc]
	adds r0, r2, #0
	bl sub_80D3910
_080DE1A8:
	adds r4, #4
	cmp r4, r5
	bne _080DE198
_080DE1AE:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80DE1B4
sub_80DE1B4: @ 0x080DE1B4
	push {r4, r5, lr}
	sub sp, #0x10
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _080DE1D4 @ =gUnknown_080E76D4
	str r0, [r4, #4]
	ldr r0, [r4, #8]
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, #0xc
	str r0, [sp, #4]
	adds r0, r4, #0
	adds r0, #0xc
	str r0, [sp, #0xc]
	b _080DE1F2
	.align 2, 0
_080DE1D4: .4byte gUnknown_080E76D4
_080DE1D8:
	subs r0, r2, #4
	ldr r1, [r0]
	cmp r1, #0
	beq _080DE1EC
	ldr r0, [r1, #0x4c]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080DE1EC:
	ldr r0, [sp, #4]
	subs r0, #4
	str r0, [sp, #4]
_080DE1F2:
	ldr r2, [sp, #4]
	ldr r0, [sp, #0xc]
	movs r1, #0
	cmp r2, r0
	bne _080DE1FE
	movs r1, #1
_080DE1FE:
	cmp r1, #0
	beq _080DE1D8
	ldr r0, _080DE21C @ =gUnknown_080E65E0
	str r0, [r4, #4]
	movs r0, #1
	ands r0, r5
	cmp r0, #0
	beq _080DE214
	adds r0, r4, #0
	bl sub_8000608
_080DE214:
	add sp, #0x10
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080DE21C: .4byte gUnknown_080E65E0

	thumb_func_start sub_80DE220
sub_80DE220: @ 0x080DE220
	push {lr}
	adds r2, r0, #0
	ldr r0, _080DE23C @ =gUnknown_080E76F8
	str r0, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080DE236
	adds r0, r2, #0
	bl sub_8000608
_080DE236:
	pop {r0}
	bx r0
	.align 2, 0
_080DE23C: .4byte gUnknown_080E76F8
_080DE240:
	.byte 0x10, 0xB5, 0x88, 0xB0, 0x04, 0x1C, 0x69, 0x46, 0x00, 0x20, 0x08, 0x70, 0x20, 0x70, 0x20, 0x1D
	.byte 0xF5, 0xF7, 0x6A, 0xFC, 0x20, 0x1C, 0x08, 0xB0, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00
	.byte 0x00, 0xB5, 0x02, 0x1C, 0x05, 0x48, 0x10, 0x60, 0x01, 0x20, 0x08, 0x40, 0x00, 0x28, 0x02, 0xD0
	.byte 0x10, 0x1C, 0x22, 0xF7, 0xC9, 0xF9, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0xF8, 0x76, 0x0E, 0x08

	thumb_func_start sub_80DE280
sub_80DE280: @ 0x080DE280
	push {lr}
	subs r0, #4
	bl sub_80E0908
	pop {r0}
	bx r0

	thumb_func_start sub_80DE28C
sub_80DE28C: @ 0x080DE28C
	push {lr}
	subs r0, #0xc
	bl sub_80E0908
	pop {r0}
	bx r0

	thumb_func_start sub_80DE298
sub_80DE298: @ 0x080DE298
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x30
	subs r0, #0xc
	mov r8, r0
	subs r1, #2
	ldr r0, _080DE2C0 @ =0x00000141
	cmp r1, r0
	bls _080DE2B4
	bl _080E0080
_080DE2B4:
	lsls r0, r1, #2
	ldr r1, _080DE2C4 @ =_080DE2C8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080DE2C0: .4byte 0x00000141
_080DE2C4: .4byte _080DE2C8
_080DE2C8: @ jump table
	.4byte _080DF750 @ case 0
	.4byte _080DF8C6 @ case 1
	.4byte _080DF904 @ case 2
	.4byte _080DF940 @ case 3
	.4byte _080DF99C @ case 4
	.4byte _080E0080 @ case 5
	.4byte _080DF9EE @ case 6
	.4byte _080DFAB2 @ case 7
	.4byte _080DFA50 @ case 8
	.4byte _080DFB14 @ case 9
	.4byte _080DFB76 @ case 10
	.4byte _080DFBB6 @ case 11
	.4byte _080DFC10 @ case 12
	.4byte _080DFC24 @ case 13
	.4byte _080E0080 @ case 14
	.4byte _080DFC5C @ case 15
	.4byte _080DFCC2 @ case 16
	.4byte _080E0080 @ case 17
	.4byte _080E0080 @ case 18
	.4byte _080E0080 @ case 19
	.4byte _080DF51A @ case 20
	.4byte _080DF5E8 @ case 21
	.4byte _080DF638 @ case 22
	.4byte _080DF65E @ case 23
	.4byte _080DF6B0 @ case 24
	.4byte _080DF6C2 @ case 25
	.4byte _080DF748 @ case 26
	.4byte _080E0080 @ case 27
	.4byte _080E0080 @ case 28
	.4byte _080DE7D0 @ case 29
	.4byte _080DE8AE @ case 30
	.4byte _080DE97C @ case 31
	.4byte _080DE8CE @ case 32
	.4byte _080DE924 @ case 33
	.4byte _080DE9D4 @ case 34
	.4byte _080DEAA4 @ case 35
	.4byte _080DEBB8 @ case 36
	.4byte _080DED0C @ case 37
	.4byte _080DEDB4 @ case 38
	.4byte _080DEE9E @ case 39
	.4byte _080DEFCE @ case 40
	.4byte _080DF136 @ case 41
	.4byte _080E0080 @ case 42
	.4byte _080E0080 @ case 43
	.4byte _080E0080 @ case 44
	.4byte _080E0080 @ case 45
	.4byte _080E0080 @ case 46
	.4byte _080E0080 @ case 47
	.4byte _080E0080 @ case 48
	.4byte _080DF318 @ case 49
	.4byte _080DF3F0 @ case 50
	.4byte _080E0080 @ case 51
	.4byte _080DF2EC @ case 52
	.4byte _080DFCF6 @ case 53
	.4byte _080E0080 @ case 54
	.4byte _080E0080 @ case 55
	.4byte _080E0080 @ case 56
	.4byte _080E0080 @ case 57
	.4byte _080E0080 @ case 58
	.4byte _080E0080 @ case 59
	.4byte _080E0080 @ case 60
	.4byte _080E0080 @ case 61
	.4byte _080E0080 @ case 62
	.4byte _080E0080 @ case 63
	.4byte _080E0080 @ case 64
	.4byte _080E0080 @ case 65
	.4byte _080E0080 @ case 66
	.4byte _080E0040 @ case 67
	.4byte _080E0080 @ case 68
	.4byte _080DFF6E @ case 69
	.4byte _080DFFF2 @ case 70
	.4byte _080E0080 @ case 71
	.4byte _080E0080 @ case 72
	.4byte _080E0080 @ case 73
	.4byte _080E0080 @ case 74
	.4byte _080E0058 @ case 75
	.4byte _080E0080 @ case 76
	.4byte _080E0080 @ case 77
	.4byte _080E0080 @ case 78
	.4byte _080E0080 @ case 79
	.4byte _080E0080 @ case 80
	.4byte _080E0080 @ case 81
	.4byte _080E0080 @ case 82
	.4byte _080E0080 @ case 83
	.4byte _080E0080 @ case 84
	.4byte _080E0080 @ case 85
	.4byte _080E0080 @ case 86
	.4byte _080E0080 @ case 87
	.4byte _080DFF3A @ case 88
	.4byte _080E0080 @ case 89
	.4byte _080E0080 @ case 90
	.4byte _080E0080 @ case 91
	.4byte _080E0080 @ case 92
	.4byte _080E0080 @ case 93
	.4byte _080E0080 @ case 94
	.4byte _080E0080 @ case 95
	.4byte _080E0080 @ case 96
	.4byte _080E0080 @ case 97
	.4byte _080E0080 @ case 98
	.4byte _080E0080 @ case 99
	.4byte _080E0080 @ case 100
	.4byte _080E0080 @ case 101
	.4byte _080E0080 @ case 102
	.4byte _080E0080 @ case 103
	.4byte _080E0080 @ case 104
	.4byte _080E0080 @ case 105
	.4byte _080E0080 @ case 106
	.4byte _080E0080 @ case 107
	.4byte _080E0080 @ case 108
	.4byte _080E0080 @ case 109
	.4byte _080E0080 @ case 110
	.4byte _080E0080 @ case 111
	.4byte _080E0080 @ case 112
	.4byte _080E0080 @ case 113
	.4byte _080E0080 @ case 114
	.4byte _080E0080 @ case 115
	.4byte _080E0080 @ case 116
	.4byte _080E0080 @ case 117
	.4byte _080E0080 @ case 118
	.4byte _080E0080 @ case 119
	.4byte _080E0080 @ case 120
	.4byte _080E0080 @ case 121
	.4byte _080E0080 @ case 122
	.4byte _080E0080 @ case 123
	.4byte _080E0080 @ case 124
	.4byte _080E0080 @ case 125
	.4byte _080E0080 @ case 126
	.4byte _080E0080 @ case 127
	.4byte _080E0080 @ case 128
	.4byte _080E0080 @ case 129
	.4byte _080E0080 @ case 130
	.4byte _080E0080 @ case 131
	.4byte _080E0080 @ case 132
	.4byte _080E0080 @ case 133
	.4byte _080E0080 @ case 134
	.4byte _080E0080 @ case 135
	.4byte _080E0080 @ case 136
	.4byte _080E0080 @ case 137
	.4byte _080E0080 @ case 138
	.4byte _080E0080 @ case 139
	.4byte _080E0080 @ case 140
	.4byte _080E0080 @ case 141
	.4byte _080E0080 @ case 142
	.4byte _080E0080 @ case 143
	.4byte _080E0080 @ case 144
	.4byte _080E0080 @ case 145
	.4byte _080E0080 @ case 146
	.4byte _080E0080 @ case 147
	.4byte _080E0080 @ case 148
	.4byte _080E0080 @ case 149
	.4byte _080E0080 @ case 150
	.4byte _080E0080 @ case 151
	.4byte _080E0080 @ case 152
	.4byte _080E0080 @ case 153
	.4byte _080E0080 @ case 154
	.4byte _080E0080 @ case 155
	.4byte _080E0080 @ case 156
	.4byte _080E0080 @ case 157
	.4byte _080E0080 @ case 158
	.4byte _080E0080 @ case 159
	.4byte _080E0080 @ case 160
	.4byte _080E0080 @ case 161
	.4byte _080E0080 @ case 162
	.4byte _080E0080 @ case 163
	.4byte _080E0080 @ case 164
	.4byte _080E0080 @ case 165
	.4byte _080E0080 @ case 166
	.4byte _080E0080 @ case 167
	.4byte _080E0080 @ case 168
	.4byte _080E0080 @ case 169
	.4byte _080E0080 @ case 170
	.4byte _080E0080 @ case 171
	.4byte _080E0080 @ case 172
	.4byte _080E0080 @ case 173
	.4byte _080E0080 @ case 174
	.4byte _080E0080 @ case 175
	.4byte _080E0080 @ case 176
	.4byte _080E0080 @ case 177
	.4byte _080E0080 @ case 178
	.4byte _080E0080 @ case 179
	.4byte _080E0080 @ case 180
	.4byte _080E0080 @ case 181
	.4byte _080DFD5C @ case 182
	.4byte _080DFD80 @ case 183
	.4byte _080E0080 @ case 184
	.4byte _080E0080 @ case 185
	.4byte _080E0080 @ case 186
	.4byte _080E0080 @ case 187
	.4byte _080E0080 @ case 188
	.4byte _080DFD38 @ case 189
	.4byte _080DFD24 @ case 190
	.4byte _080E0080 @ case 191
	.4byte _080E0080 @ case 192
	.4byte _080E0080 @ case 193
	.4byte _080E0080 @ case 194
	.4byte _080E0080 @ case 195
	.4byte _080E0080 @ case 196
	.4byte _080E0080 @ case 197
	.4byte _080E0080 @ case 198
	.4byte _080E0080 @ case 199
	.4byte _080E0080 @ case 200
	.4byte _080E0080 @ case 201
	.4byte _080E0080 @ case 202
	.4byte _080E0080 @ case 203
	.4byte _080E0080 @ case 204
	.4byte _080E0080 @ case 205
	.4byte _080E0080 @ case 206
	.4byte _080E0080 @ case 207
	.4byte _080E0080 @ case 208
	.4byte _080E0080 @ case 209
	.4byte _080E0080 @ case 210
	.4byte _080E0080 @ case 211
	.4byte _080E0080 @ case 212
	.4byte _080E0080 @ case 213
	.4byte _080E0080 @ case 214
	.4byte _080E0080 @ case 215
	.4byte _080E0080 @ case 216
	.4byte _080E0080 @ case 217
	.4byte _080E0080 @ case 218
	.4byte _080E0080 @ case 219
	.4byte _080E0080 @ case 220
	.4byte _080E0080 @ case 221
	.4byte _080E0080 @ case 222
	.4byte _080E0080 @ case 223
	.4byte _080E0080 @ case 224
	.4byte _080E0080 @ case 225
	.4byte _080E0080 @ case 226
	.4byte _080E0080 @ case 227
	.4byte _080E0080 @ case 228
	.4byte _080E0080 @ case 229
	.4byte _080E0080 @ case 230
	.4byte _080E0080 @ case 231
	.4byte _080E0080 @ case 232
	.4byte _080E0080 @ case 233
	.4byte _080E0080 @ case 234
	.4byte _080E0080 @ case 235
	.4byte _080E0080 @ case 236
	.4byte _080E0080 @ case 237
	.4byte _080E0080 @ case 238
	.4byte _080E0080 @ case 239
	.4byte _080E0080 @ case 240
	.4byte _080E0080 @ case 241
	.4byte _080E0080 @ case 242
	.4byte _080E0080 @ case 243
	.4byte _080E0080 @ case 244
	.4byte _080E0080 @ case 245
	.4byte _080E0080 @ case 246
	.4byte _080E0080 @ case 247
	.4byte _080E0080 @ case 248
	.4byte _080E0080 @ case 249
	.4byte _080E0080 @ case 250
	.4byte _080E0080 @ case 251
	.4byte _080E0080 @ case 252
	.4byte _080E0080 @ case 253
	.4byte _080E0080 @ case 254
	.4byte _080E0080 @ case 255
	.4byte _080E0080 @ case 256
	.4byte _080E0080 @ case 257
	.4byte _080E0080 @ case 258
	.4byte _080E0080 @ case 259
	.4byte _080E0080 @ case 260
	.4byte _080E0080 @ case 261
	.4byte _080E0080 @ case 262
	.4byte _080E0080 @ case 263
	.4byte _080E0080 @ case 264
	.4byte _080E0080 @ case 265
	.4byte _080E0080 @ case 266
	.4byte _080E0080 @ case 267
	.4byte _080E0080 @ case 268
	.4byte _080E0080 @ case 269
	.4byte _080E0080 @ case 270
	.4byte _080E0080 @ case 271
	.4byte _080E0080 @ case 272
	.4byte _080E0080 @ case 273
	.4byte _080E0080 @ case 274
	.4byte _080E0080 @ case 275
	.4byte _080E0080 @ case 276
	.4byte _080E0080 @ case 277
	.4byte _080E0080 @ case 278
	.4byte _080E0080 @ case 279
	.4byte _080E0080 @ case 280
	.4byte _080E0080 @ case 281
	.4byte _080E0080 @ case 282
	.4byte _080E0080 @ case 283
	.4byte _080E0080 @ case 284
	.4byte _080E0080 @ case 285
	.4byte _080E0080 @ case 286
	.4byte _080E0080 @ case 287
	.4byte _080E0080 @ case 288
	.4byte _080E0080 @ case 289
	.4byte _080E0080 @ case 290
	.4byte _080E0080 @ case 291
	.4byte _080E0080 @ case 292
	.4byte _080E0080 @ case 293
	.4byte _080E0080 @ case 294
	.4byte _080E0080 @ case 295
	.4byte _080E0080 @ case 296
	.4byte _080E0080 @ case 297
	.4byte _080E0080 @ case 298
	.4byte _080E0080 @ case 299
	.4byte _080E0080 @ case 300
	.4byte _080E0080 @ case 301
	.4byte _080E0080 @ case 302
	.4byte _080E0080 @ case 303
	.4byte _080E0080 @ case 304
	.4byte _080E0080 @ case 305
	.4byte _080E0080 @ case 306
	.4byte _080E0080 @ case 307
	.4byte _080E0080 @ case 308
	.4byte _080E0080 @ case 309
	.4byte _080E0080 @ case 310
	.4byte _080E0080 @ case 311
	.4byte _080E0080 @ case 312
	.4byte _080E0080 @ case 313
	.4byte _080E0080 @ case 314
	.4byte _080E0080 @ case 315
	.4byte _080DFDAC @ case 316
	.4byte _080DFE36 @ case 317
	.4byte _080DFE8C @ case 318
	.4byte _080DFEFE @ case 319
	.4byte _080DFFBA @ case 320
	.4byte _080DF85C @ case 321
_080DE7D0:
	movs r0, #0xdb
	lsls r0, r0, #2
	add r0, r8
	ldr r5, [r0]
	adds r6, r0, #0
	cmp r5, #0
	bne _080DE88E
	movs r0, #0xe8
	lsls r0, r0, #2
	add r0, r8
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DE83E
	movs r0, #4
	bl sub_80005D4
	adds r4, r0, #0
	add r0, sp, #0x10
	bl sub_800835C
	add r0, sp, #0x14
	bl sub_800770C
	add r1, sp, #0x14
	movs r0, #1
	str r0, [sp]
	add r0, sp, #0x10
	str r0, [sp, #4]
	str r1, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x1f
	movs r3, #0
	bl sub_8050CC0
	adds r5, r6, #0
	adds r4, r0, #0
	ldr r0, [r6]
	cmp r4, r0
	beq _080DE82A
	cmp r0, #0
	beq _080DE82A
	movs r1, #3
	bl sub_8050D0C
_080DE82A:
	str r4, [r5]
	add r0, sp, #0x14
	movs r1, #2
	bl sub_8007714
	add r0, sp, #0x10
	movs r1, #2
	bl sub_8008364
	b _080DE88E
_080DE83E:
	movs r0, #4
	bl sub_80005D4
	adds r4, r0, #0
	add r0, sp, #0x10
	bl sub_800835C
	add r0, sp, #0x14
	bl sub_800770C
	add r0, sp, #0x14
	str r5, [sp]
	add r1, sp, #0x10
	str r1, [sp, #4]
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x1f
	movs r3, #0
	bl sub_8050CC0
	adds r5, r6, #0
	adds r4, r0, #0
	ldr r0, [r6]
	cmp r4, r0
	beq _080DE87C
	cmp r0, #0
	beq _080DE87C
	movs r1, #3
	bl sub_8050D0C
_080DE87C:
	str r4, [r5]
	add r0, sp, #0x14
	movs r1, #2
	bl sub_8007714
	add r0, sp, #0x10
	movs r1, #2
	bl sub_8008364
_080DE88E:
	ldr r0, [r6]
	bl sub_8050D34
	cmp r0, #3
	bne _080DE89C
	bl _080E007C
_080DE89C:
	ldr r0, [r6]
	bl sub_8050D5C
	movs r1, #0xd9
	lsls r1, r1, #2
	add r1, r8
	movs r0, #2
	bl _080E007A
_080DE8AE:
	movs r0, #0xdb
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	cmp r0, #0
	bne _080DE8BE
	bl _080E007C
_080DE8BE:
	bl sub_8050D74
	movs r1, #0xd9
	lsls r1, r1, #2
	add r1, r8
	movs r0, #3
	bl _080E007A
_080DE8CE:
	movs r2, #0xe0
	lsls r2, r2, #1
	add r2, r8
	ldr r1, [r2]
	lsls r0, r1, #2
	add r0, r8
	ldr r3, [r0, #0x2c]
	cmp r1, #0
	beq _080DE8E4
	subs r0, r1, #1
	str r0, [r2]
_080DE8E4:
	mov r2, r8
	adds r2, #0xc
	ldr r0, [r2, #0x10]
	cmp r3, r0
	bhi _080DE8FC
	ldr r1, [r2, #0x14]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r2, #0x18]
	ldr r0, [r0]
	adds r1, r1, r0
	b _080DE8FE
_080DE8FC:
	ldr r1, _080DE920 @ =gUnknown_080F19A0
_080DE8FE:
	movs r0, #0xdb
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	cmp r0, #0
	bne _080DE90E
	bl _080E007C
_080DE90E:
	movs r2, #0x40
	bl sub_8050DB4
	movs r1, #0xd9
	lsls r1, r1, #2
	add r1, r8
	movs r0, #4
	bl _080E007A
	.align 2, 0
_080DE920: .4byte gUnknown_080F19A0
_080DE924:
	movs r2, #0xe0
	lsls r2, r2, #1
	add r2, r8
	ldr r1, [r2]
	lsls r0, r1, #2
	add r0, r8
	ldr r3, [r0, #0x2c]
	cmp r1, #0
	beq _080DE93A
	subs r0, r1, #1
	str r0, [r2]
_080DE93A:
	mov r2, r8
	adds r2, #0xc
	ldr r0, [r2, #0x10]
	cmp r3, r0
	bhi _080DE952
	ldr r1, [r2, #0x14]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r2, #0x18]
	ldr r0, [r0]
	adds r1, r1, r0
	b _080DE954
_080DE952:
	ldr r1, _080DE978 @ =gUnknown_080F19A0
_080DE954:
	movs r0, #0xdb
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	cmp r0, #0
	bne _080DE964
	bl _080E007C
_080DE964:
	movs r2, #0
	bl sub_8050DB4
	movs r1, #0xd9
	lsls r1, r1, #2
	add r1, r8
	movs r0, #4
	bl _080E007A
	.align 2, 0
_080DE978: .4byte gUnknown_080F19A0
_080DE97C:
	movs r2, #0xe0
	lsls r2, r2, #1
	add r2, r8
	ldr r1, [r2]
	lsls r0, r1, #2
	add r0, r8
	ldr r3, [r0, #0x2c]
	cmp r1, #0
	beq _080DE992
	subs r0, r1, #1
	str r0, [r2]
_080DE992:
	mov r2, r8
	adds r2, #0xc
	ldr r0, [r2, #0x10]
	cmp r3, r0
	bhi _080DE9AA
	ldr r1, [r2, #0x14]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r2, #0x18]
	ldr r0, [r0]
	adds r1, r1, r0
	b _080DE9AC
_080DE9AA:
	ldr r1, _080DE9D0 @ =gUnknown_080F19A0
_080DE9AC:
	movs r0, #0xdb
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	cmp r0, #0
	bne _080DE9BC
	bl _080E007C
_080DE9BC:
	movs r2, #0x80
	lsls r2, r2, #1
	bl sub_8050DB4
	movs r1, #0xd9
	lsls r1, r1, #2
	add r1, r8
	movs r0, #4
	bl _080E007A
	.align 2, 0
_080DE9D0: .4byte gUnknown_080F19A0
_080DE9D4:
	mov r3, r8
	adds r3, #0x30
	movs r2, #0xe0
	lsls r2, r2, #1
	add r2, r8
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r7, [r0]
	cmp r1, #0
	beq _080DE9F0
	subs r0, r1, #1
	str r0, [r2]
_080DE9F0:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r5, [r0]
	cmp r1, #0
	beq _080DEA02
	subs r0, r1, #1
	str r0, [r2]
_080DEA02:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _080DEA14
	subs r0, r1, #1
	str r0, [r2]
_080DEA14:
	mov r0, r8
	adds r0, #0xc
	ldr r1, [r0, #0x10]
	adds r4, r0, #0
	cmp r3, r1
	bhi _080DEA2E
	ldr r1, [r4, #0x14]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r6, r1, r0
	b _080DEA30
_080DEA2E:
	ldr r6, _080DEA44 @ =gUnknown_080F19A0
_080DEA30:
	ldr r0, [r4, #0x10]
	cmp r5, r0
	bhi _080DEA48
	ldr r1, [r4, #0x14]
	lsls r0, r5, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r2, r1, r0
	b _080DEA4A
	.align 2, 0
_080DEA44: .4byte gUnknown_080F19A0
_080DEA48:
	ldr r2, _080DEA60 @ =gUnknown_080F19A0
_080DEA4A:
	ldr r0, [r4, #0x10]
	cmp r7, r0
	bhi _080DEA64
	ldr r1, [r4, #0x14]
	lsls r0, r7, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r3, r1, r0
	b _080DEA66
	.align 2, 0
_080DEA60: .4byte gUnknown_080F19A0
_080DEA64:
	ldr r3, _080DEAA0 @ =gUnknown_080F19A0
_080DEA66:
	movs r1, #0
	movs r0, #0xdb
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	cmp r0, #0
	bne _080DEA78
	bl _080E007C
_080DEA78:
	cmp r2, #0
	bne _080DEA80
	bl _080E007C
_080DEA80:
	cmp r3, #0
	bne _080DEA88
	bl _080E007C
_080DEA88:
	str r1, [sp]
	str r1, [sp, #4]
	str r1, [sp, #8]
	adds r1, r6, #0
	bl sub_8050E30
	movs r1, #0xd9
	lsls r1, r1, #2
	add r1, r8
	movs r0, #7
	bl _080E007A
	.align 2, 0
_080DEAA0: .4byte gUnknown_080F19A0
_080DEAA4:
	mov r3, r8
	adds r3, #0x30
	movs r2, #0xe0
	lsls r2, r2, #1
	add r2, r8
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	mov sb, r0
	cmp r1, #0
	beq _080DEAC2
	subs r0, r1, #1
	str r0, [r2]
_080DEAC2:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r7, [r0]
	cmp r1, #0
	beq _080DEAD4
	subs r0, r1, #1
	str r0, [r2]
_080DEAD4:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r6, [r0]
	cmp r1, #0
	beq _080DEAE6
	subs r0, r1, #1
	str r0, [r2]
_080DEAE6:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _080DEAF8
	subs r0, r1, #1
	str r0, [r2]
_080DEAF8:
	mov r0, r8
	adds r0, #0xc
	ldr r1, [r0, #0x10]
	adds r4, r0, #0
	cmp r3, r1
	bhi _080DEB12
	ldr r1, [r4, #0x14]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r5, r1, r0
	b _080DEB14
_080DEB12:
	ldr r5, _080DEB28 @ =gUnknown_080F19A0
_080DEB14:
	ldr r0, [r4, #0x10]
	cmp r6, r0
	bhi _080DEB2C
	ldr r1, [r4, #0x14]
	lsls r0, r6, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r2, r1, r0
	b _080DEB2E
	.align 2, 0
_080DEB28: .4byte gUnknown_080F19A0
_080DEB2C:
	ldr r2, _080DEB44 @ =gUnknown_080F19A0
_080DEB2E:
	ldr r0, [r4, #0x10]
	cmp r7, r0
	bhi _080DEB48
	ldr r1, [r4, #0x14]
	lsls r0, r7, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r3, r1, r0
	b _080DEB4A
	.align 2, 0
_080DEB44: .4byte gUnknown_080F19A0
_080DEB48:
	ldr r3, _080DEB60 @ =gUnknown_080F19A0
_080DEB4A:
	ldr r0, [r4, #0x10]
	cmp sb, r0
	bhi _080DEB64
	ldr r1, [r4, #0x14]
	mov r6, sb
	lsls r0, r6, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r1, r1, r0
	b _080DEB66
	.align 2, 0
_080DEB60: .4byte gUnknown_080F19A0
_080DEB64:
	ldr r1, _080DEB9C @ =gUnknown_080F19A0
_080DEB66:
	movs r4, #0
	movs r0, #0xdb
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	cmp r0, #0
	bne _080DEB78
	bl _080E007C
_080DEB78:
	cmp r2, #0
	bne _080DEB80
	bl _080E007C
_080DEB80:
	cmp r3, #0
	bne _080DEB88
	bl _080E007C
_080DEB88:
	cmp r1, #0
	bne _080DEBA0
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	adds r1, r5, #0
	bl sub_8050E30
	b _080DEBAC
	.align 2, 0
_080DEB9C: .4byte gUnknown_080F19A0
_080DEBA0:
	str r1, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	adds r1, r5, #0
	bl sub_8050E30
_080DEBAC:
	movs r1, #0xd9
	lsls r1, r1, #2
	add r1, r8
	movs r0, #7
	bl _080E007A
_080DEBB8:
	mov r3, r8
	adds r3, #0x30
	movs r2, #0xe0
	lsls r2, r2, #1
	add r2, r8
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	mov sl, r0
	cmp r1, #0
	beq _080DEBD6
	subs r0, r1, #1
	str r0, [r2]
_080DEBD6:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	mov sb, r0
	cmp r1, #0
	beq _080DEBEA
	subs r0, r1, #1
	str r0, [r2]
_080DEBEA:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r7, [r0]
	cmp r1, #0
	beq _080DEBFC
	subs r0, r1, #1
	str r0, [r2]
_080DEBFC:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r5, [r0]
	cmp r1, #0
	beq _080DEC0E
	subs r0, r1, #1
	str r0, [r2]
_080DEC0E:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _080DEC20
	subs r0, r1, #1
	str r0, [r2]
_080DEC20:
	mov r0, r8
	adds r0, #0xc
	ldr r1, [r0, #0x10]
	adds r4, r0, #0
	cmp r3, r1
	bhi _080DEC3A
	ldr r1, [r4, #0x14]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r6, r1, r0
	b _080DEC3C
_080DEC3A:
	ldr r6, _080DEC50 @ =gUnknown_080F19A0
_080DEC3C:
	ldr r0, [r4, #0x10]
	cmp r5, r0
	bhi _080DEC54
	ldr r1, [r4, #0x14]
	lsls r0, r5, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r2, r1, r0
	b _080DEC56
	.align 2, 0
_080DEC50: .4byte gUnknown_080F19A0
_080DEC54:
	ldr r2, _080DEC6C @ =gUnknown_080F19A0
_080DEC56:
	ldr r0, [r4, #0x10]
	cmp r7, r0
	bhi _080DEC70
	ldr r1, [r4, #0x14]
	lsls r0, r7, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r3, r1, r0
	b _080DEC72
	.align 2, 0
_080DEC6C: .4byte gUnknown_080F19A0
_080DEC70:
	ldr r3, _080DEC88 @ =gUnknown_080F19A0
_080DEC72:
	ldr r0, [r4, #0x10]
	cmp sb, r0
	bhi _080DEC8C
	ldr r1, [r4, #0x14]
	mov r7, sb
	lsls r0, r7, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r5, r1, r0
	b _080DEC8E
	.align 2, 0
_080DEC88: .4byte gUnknown_080F19A0
_080DEC8C:
	ldr r5, _080DECA4 @ =gUnknown_080F19A0
_080DEC8E:
	ldr r0, [r4, #0x10]
	cmp sl, r0
	bhi _080DECA8
	ldr r1, [r4, #0x14]
	mov r7, sl
	lsls r0, r7, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r1, r1, r0
	b _080DECAA
	.align 2, 0
_080DECA4: .4byte gUnknown_080F19A0
_080DECA8:
	ldr r1, _080DECD8 @ =gUnknown_080F19A0
_080DECAA:
	movs r0, #0xdb
	lsls r0, r0, #2
	add r0, r8
	ldr r4, [r0]
	cmp r4, #0
	bne _080DECBA
	bl _080E007C
_080DECBA:
	cmp r2, #0
	bne _080DECC2
	bl _080E007C
_080DECC2:
	cmp r3, #0
	bne _080DECCA
	bl _080E007C
_080DECCA:
	cmp r5, #0
	bne _080DECDC
	str r5, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	b _080DECE6
	.align 2, 0
_080DECD8: .4byte gUnknown_080F19A0
_080DECDC:
	cmp r1, #0
	bne _080DECF0
	str r5, [sp]
	str r1, [sp, #4]
	str r1, [sp, #8]
_080DECE6:
	adds r0, r4, #0
	adds r1, r6, #0
	bl sub_8050E30
	b _080DED00
_080DECF0:
	str r5, [sp]
	str r1, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	adds r0, r4, #0
	adds r1, r6, #0
	bl sub_8050E30
_080DED00:
	movs r1, #0xd9
	lsls r1, r1, #2
	add r1, r8
	movs r0, #7
	bl _080E007A
_080DED0C:
	mov r3, r8
	adds r3, #0x30
	movs r2, #0xe0
	lsls r2, r2, #1
	add r2, r8
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r5, [r0]
	cmp r1, #0
	beq _080DED28
	subs r0, r1, #1
	str r0, [r2]
_080DED28:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _080DED3A
	subs r0, r1, #1
	str r0, [r2]
_080DED3A:
	mov r0, r8
	adds r0, #0xc
	ldr r1, [r0, #0x10]
	adds r4, r0, #0
	cmp r3, r1
	bhi _080DED54
	ldr r1, [r4, #0x14]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r3, r1, r0
	b _080DED56
_080DED54:
	ldr r3, _080DED6C @ =gUnknown_080F19A0
_080DED56:
	ldr r0, [r4, #0x10]
	cmp r5, r0
	bhi _080DED70
	ldr r1, [r4, #0x14]
	lsls r0, r5, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r2, r1, r0
	b _080DED72
	.align 2, 0
_080DED6C: .4byte gUnknown_080F19A0
_080DED70:
	ldr r2, _080DEDB0 @ =gUnknown_080F19A0
_080DED72:
	movs r1, #0
	movs r0, #0xdb
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	cmp r0, #0
	bne _080DED84
	bl _080E007C
_080DED84:
	cmp r3, #0
	bne _080DED8C
	bl _080E007C
_080DED8C:
	cmp r2, #0
	bne _080DED94
	bl _080E007C
_080DED94:
	str r1, [sp]
	str r1, [sp, #4]
	str r1, [sp, #8]
	str r1, [sp, #0xc]
	adds r1, r3, #0
	movs r3, #0
	bl sub_8050E0C
	movs r1, #0xd9
	lsls r1, r1, #2
	add r1, r8
	movs r0, #7
	bl _080E007A
	.align 2, 0
_080DEDB0: .4byte gUnknown_080F19A0
_080DEDB4:
	mov r3, r8
	adds r3, #0x30
	movs r2, #0xe0
	lsls r2, r2, #1
	add r2, r8
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r7, [r0]
	cmp r1, #0
	beq _080DEDD0
	subs r0, r1, #1
	str r0, [r2]
_080DEDD0:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r6, [r0]
	cmp r1, #0
	beq _080DEDE2
	subs r0, r1, #1
	str r0, [r2]
_080DEDE2:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _080DEDF4
	subs r0, r1, #1
	str r0, [r2]
_080DEDF4:
	mov r0, r8
	adds r0, #0xc
	ldr r1, [r0, #0x10]
	adds r4, r0, #0
	cmp r3, r1
	bhi _080DEE0E
	ldr r1, [r4, #0x14]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r5, r1, r0
	b _080DEE10
_080DEE0E:
	ldr r5, _080DEE24 @ =gUnknown_080F19A0
_080DEE10:
	ldr r0, [r4, #0x10]
	cmp r6, r0
	bhi _080DEE28
	ldr r1, [r4, #0x14]
	lsls r0, r6, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r2, r1, r0
	b _080DEE2A
	.align 2, 0
_080DEE24: .4byte gUnknown_080F19A0
_080DEE28:
	ldr r2, _080DEE40 @ =gUnknown_080F19A0
_080DEE2A:
	ldr r0, [r4, #0x10]
	cmp r7, r0
	bhi _080DEE44
	ldr r1, [r4, #0x14]
	lsls r0, r7, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r3, r1, r0
	b _080DEE46
	.align 2, 0
_080DEE40: .4byte gUnknown_080F19A0
_080DEE44:
	ldr r3, _080DEE80 @ =gUnknown_080F19A0
_080DEE46:
	movs r1, #0
	movs r0, #0xdb
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	cmp r0, #0
	bne _080DEE58
	bl _080E007C
_080DEE58:
	cmp r5, #0
	bne _080DEE60
	bl _080E007C
_080DEE60:
	cmp r2, #0
	bne _080DEE68
	bl _080E007C
_080DEE68:
	cmp r3, #0
	bne _080DEE84
	str r3, [sp]
	str r3, [sp, #4]
	str r3, [sp, #8]
	str r3, [sp, #0xc]
	adds r1, r5, #0
	movs r3, #0
	bl sub_8050E0C
	b _080DEE92
	.align 2, 0
_080DEE80: .4byte gUnknown_080F19A0
_080DEE84:
	str r1, [sp]
	str r1, [sp, #4]
	str r1, [sp, #8]
	str r1, [sp, #0xc]
	adds r1, r5, #0
	bl sub_8050E0C
_080DEE92:
	movs r1, #0xd9
	lsls r1, r1, #2
	add r1, r8
	movs r0, #7
	bl _080E007A
_080DEE9E:
	mov r3, r8
	adds r3, #0x30
	movs r2, #0xe0
	lsls r2, r2, #1
	add r2, r8
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	mov sb, r0
	cmp r1, #0
	beq _080DEEBC
	subs r0, r1, #1
	str r0, [r2]
_080DEEBC:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r7, [r0]
	cmp r1, #0
	beq _080DEECE
	subs r0, r1, #1
	str r0, [r2]
_080DEECE:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r6, [r0]
	cmp r1, #0
	beq _080DEEE0
	subs r0, r1, #1
	str r0, [r2]
_080DEEE0:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _080DEEF2
	subs r0, r1, #1
	str r0, [r2]
_080DEEF2:
	mov r0, r8
	adds r0, #0xc
	ldr r1, [r0, #0x10]
	adds r4, r0, #0
	cmp r3, r1
	bhi _080DEF0C
	ldr r1, [r4, #0x14]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r5, r1, r0
	b _080DEF0E
_080DEF0C:
	ldr r5, _080DEF24 @ =gUnknown_080F19A0
_080DEF0E:
	ldr r0, [r4, #0x10]
	cmp r6, r0
	bhi _080DEF28
	ldr r1, [r4, #0x14]
	lsls r0, r6, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r2, r1, r0
	b _080DEF2A
	.align 2, 0
_080DEF24: .4byte gUnknown_080F19A0
_080DEF28:
	ldr r2, _080DEF40 @ =gUnknown_080F19A0
_080DEF2A:
	ldr r0, [r4, #0x10]
	cmp r7, r0
	bhi _080DEF44
	ldr r1, [r4, #0x14]
	lsls r0, r7, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r3, r1, r0
	b _080DEF46
	.align 2, 0
_080DEF40: .4byte gUnknown_080F19A0
_080DEF44:
	ldr r3, _080DEF5C @ =gUnknown_080F19A0
_080DEF46:
	ldr r0, [r4, #0x10]
	cmp sb, r0
	bhi _080DEF60
	ldr r1, [r4, #0x14]
	mov r6, sb
	lsls r0, r6, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r1, r1, r0
	b _080DEF62
	.align 2, 0
_080DEF5C: .4byte gUnknown_080F19A0
_080DEF60:
	ldr r1, _080DEF9C @ =gUnknown_080F19A0
_080DEF62:
	movs r4, #0
	movs r0, #0xdb
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	cmp r0, #0
	bne _080DEF74
	bl _080E007C
_080DEF74:
	cmp r5, #0
	bne _080DEF7C
	bl _080E007C
_080DEF7C:
	cmp r2, #0
	bne _080DEF84
	bl _080E007C
_080DEF84:
	cmp r3, #0
	bne _080DEFA0
	str r3, [sp]
	str r3, [sp, #4]
	str r3, [sp, #8]
	str r3, [sp, #0xc]
	adds r1, r5, #0
	movs r3, #0
	bl sub_8050E0C
	b _080DEFC2
	.align 2, 0
_080DEF9C: .4byte gUnknown_080F19A0
_080DEFA0:
	cmp r1, #0
	bne _080DEFB4
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	str r4, [sp, #0xc]
	adds r1, r5, #0
	bl sub_8050E0C
	b _080DEFC2
_080DEFB4:
	str r1, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	str r4, [sp, #0xc]
	adds r1, r5, #0
	bl sub_8050E0C
_080DEFC2:
	movs r1, #0xd9
	lsls r1, r1, #2
	add r1, r8
	movs r0, #7
	bl _080E007A
_080DEFCE:
	mov r3, r8
	adds r3, #0x30
	movs r2, #0xe0
	lsls r2, r2, #1
	add r2, r8
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	mov sl, r0
	cmp r1, #0
	beq _080DEFEC
	subs r0, r1, #1
	str r0, [r2]
_080DEFEC:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	mov sb, r0
	cmp r1, #0
	beq _080DF000
	subs r0, r1, #1
	str r0, [r2]
_080DF000:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r7, [r0]
	cmp r1, #0
	beq _080DF012
	subs r0, r1, #1
	str r0, [r2]
_080DF012:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r5, [r0]
	cmp r1, #0
	beq _080DF024
	subs r0, r1, #1
	str r0, [r2]
_080DF024:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _080DF036
	subs r0, r1, #1
	str r0, [r2]
_080DF036:
	mov r0, r8
	adds r0, #0xc
	ldr r1, [r0, #0x10]
	adds r4, r0, #0
	cmp r3, r1
	bhi _080DF050
	ldr r1, [r4, #0x14]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r6, r1, r0
	b _080DF052
_080DF050:
	ldr r6, _080DF068 @ =gUnknown_080F19A0
_080DF052:
	ldr r0, [r4, #0x10]
	cmp r5, r0
	bhi _080DF06C
	ldr r1, [r4, #0x14]
	lsls r0, r5, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r2, r1, r0
	b _080DF06E
	.align 2, 0
_080DF068: .4byte gUnknown_080F19A0
_080DF06C:
	ldr r2, _080DF084 @ =gUnknown_080F19A0
_080DF06E:
	ldr r0, [r4, #0x10]
	cmp r7, r0
	bhi _080DF088
	ldr r1, [r4, #0x14]
	lsls r0, r7, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r3, r1, r0
	b _080DF08A
	.align 2, 0
_080DF084: .4byte gUnknown_080F19A0
_080DF088:
	ldr r3, _080DF0A0 @ =gUnknown_080F19A0
_080DF08A:
	ldr r0, [r4, #0x10]
	cmp sb, r0
	bhi _080DF0A4
	ldr r1, [r4, #0x14]
	mov r7, sb
	lsls r0, r7, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r5, r1, r0
	b _080DF0A6
	.align 2, 0
_080DF0A0: .4byte gUnknown_080F19A0
_080DF0A4:
	ldr r5, _080DF0BC @ =gUnknown_080F19A0
_080DF0A6:
	ldr r0, [r4, #0x10]
	cmp sl, r0
	bhi _080DF0C0
	ldr r1, [r4, #0x14]
	mov r7, sl
	lsls r0, r7, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r1, r1, r0
	b _080DF0C2
	.align 2, 0
_080DF0BC: .4byte gUnknown_080F19A0
_080DF0C0:
	ldr r1, _080DF0FC @ =gUnknown_080F19A0
_080DF0C2:
	movs r4, #0
	movs r0, #0xdb
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	cmp r0, #0
	bne _080DF0D4
	bl _080E007C
_080DF0D4:
	cmp r6, #0
	bne _080DF0DC
	bl _080E007C
_080DF0DC:
	cmp r2, #0
	bne _080DF0E4
	bl _080E007C
_080DF0E4:
	cmp r3, #0
	bne _080DF100
	str r3, [sp]
	str r3, [sp, #4]
	str r3, [sp, #8]
	str r3, [sp, #0xc]
	adds r1, r6, #0
	movs r3, #0
	bl sub_8050E0C
	b _080DF12A
	.align 2, 0
_080DF0FC: .4byte gUnknown_080F19A0
_080DF100:
	cmp r5, #0
	bne _080DF108
	str r4, [sp]
	b _080DF10E
_080DF108:
	cmp r1, #0
	bne _080DF11C
	str r5, [sp]
_080DF10E:
	str r4, [sp, #4]
	str r4, [sp, #8]
	str r4, [sp, #0xc]
	adds r1, r6, #0
	bl sub_8050E0C
	b _080DF12A
_080DF11C:
	str r5, [sp]
	str r1, [sp, #4]
	str r4, [sp, #8]
	str r4, [sp, #0xc]
	adds r1, r6, #0
	bl sub_8050E0C
_080DF12A:
	movs r1, #0xd9
	lsls r1, r1, #2
	add r1, r8
	movs r0, #7
	bl _080E007A
_080DF136:
	mov r3, r8
	adds r3, #0x30
	movs r2, #0xe0
	lsls r2, r2, #1
	add r2, r8
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	mov ip, r0
	cmp r1, #0
	beq _080DF154
	subs r0, r1, #1
	str r0, [r2]
_080DF154:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	mov sl, r0
	cmp r1, #0
	beq _080DF168
	subs r0, r1, #1
	str r0, [r2]
_080DF168:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	mov sb, r0
	cmp r1, #0
	beq _080DF17C
	subs r0, r1, #1
	str r0, [r2]
_080DF17C:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r6, [r0]
	cmp r1, #0
	beq _080DF18E
	subs r0, r1, #1
	str r0, [r2]
_080DF18E:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r5, [r0]
	cmp r1, #0
	beq _080DF1A0
	subs r0, r1, #1
	str r0, [r2]
_080DF1A0:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _080DF1B2
	subs r0, r1, #1
	str r0, [r2]
_080DF1B2:
	mov r0, r8
	adds r0, #0xc
	ldr r1, [r0, #0x10]
	adds r4, r0, #0
	cmp r3, r1
	bhi _080DF1CC
	ldr r1, [r4, #0x14]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r7, r1, r0
	b _080DF1CE
_080DF1CC:
	ldr r7, _080DF1E4 @ =gUnknown_080F19A0
_080DF1CE:
	ldr r0, [r4, #0x10]
	cmp r5, r0
	bhi _080DF1E8
	ldr r1, [r4, #0x14]
	lsls r0, r5, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r2, r1, r0
	b _080DF1EA
	.align 2, 0
_080DF1E4: .4byte gUnknown_080F19A0
_080DF1E8:
	ldr r2, _080DF200 @ =gUnknown_080F19A0
_080DF1EA:
	ldr r0, [r4, #0x10]
	cmp r6, r0
	bhi _080DF204
	ldr r1, [r4, #0x14]
	lsls r0, r6, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r3, r1, r0
	b _080DF206
	.align 2, 0
_080DF200: .4byte gUnknown_080F19A0
_080DF204:
	ldr r3, _080DF21C @ =gUnknown_080F19A0
_080DF206:
	ldr r0, [r4, #0x10]
	cmp sb, r0
	bhi _080DF220
	ldr r1, [r4, #0x14]
	mov r5, sb
	lsls r0, r5, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r6, r1, r0
	b _080DF222
	.align 2, 0
_080DF21C: .4byte gUnknown_080F19A0
_080DF220:
	ldr r6, _080DF238 @ =gUnknown_080F19A0
_080DF222:
	ldr r0, [r4, #0x10]
	cmp sl, r0
	bhi _080DF23C
	ldr r1, [r4, #0x14]
	mov r5, sl
	lsls r0, r5, #2
	adds r0, r0, r1
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r5, r1, r0
	b _080DF23E
	.align 2, 0
_080DF238: .4byte gUnknown_080F19A0
_080DF23C:
	ldr r5, _080DF258 @ =gUnknown_080F19A0
_080DF23E:
	ldr r0, [r4, #0x10]
	cmp ip, r0
	bhi _080DF25C
	ldr r0, [r4, #0x14]
	mov sb, r0
	mov r1, ip
	lsls r0, r1, #2
	add r0, sb
	ldr r1, [r4, #0x18]
	ldr r0, [r0]
	adds r1, r1, r0
	b _080DF25E
	.align 2, 0
_080DF258: .4byte gUnknown_080F19A0
_080DF25C:
	ldr r1, _080DF298 @ =gUnknown_080F19A0
_080DF25E:
	movs r0, #0xdb
	lsls r0, r0, #2
	add r0, r8
	ldr r4, [r0]
	cmp r4, #0
	bne _080DF26E
	bl _080E007C
_080DF26E:
	cmp r7, #0
	bne _080DF276
	bl _080E007C
_080DF276:
	cmp r2, #0
	bne _080DF27E
	bl _080E007C
_080DF27E:
	cmp r3, #0
	bne _080DF29C
	str r3, [sp]
	str r3, [sp, #4]
	str r3, [sp, #8]
	str r3, [sp, #0xc]
	adds r0, r4, #0
	adds r1, r7, #0
	movs r3, #0
	bl sub_8050E0C
	b _080DF2E0
	.align 2, 0
_080DF298: .4byte gUnknown_080F19A0
_080DF29C:
	cmp r6, #0
	bne _080DF2AA
	str r6, [sp]
	str r6, [sp, #4]
	str r6, [sp, #8]
	str r6, [sp, #0xc]
	b _080DF2C4
_080DF2AA:
	cmp r5, #0
	bne _080DF2B8
	str r6, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	str r5, [sp, #0xc]
	b _080DF2C4
_080DF2B8:
	cmp r1, #0
	bne _080DF2CE
	str r6, [sp]
	str r5, [sp, #4]
	str r1, [sp, #8]
	str r1, [sp, #0xc]
_080DF2C4:
	adds r0, r4, #0
	adds r1, r7, #0
	bl sub_8050E0C
	b _080DF2E0
_080DF2CE:
	str r6, [sp]
	str r5, [sp, #4]
	str r1, [sp, #8]
	movs r0, #0
	str r0, [sp, #0xc]
	adds r0, r4, #0
	adds r1, r7, #0
	bl sub_8050E0C
_080DF2E0:
	movs r1, #0xd9
	lsls r1, r1, #2
	add r1, r8
	movs r0, #7
	bl _080E007A
_080DF2EC:
	movs r2, #0xe0
	lsls r2, r2, #1
	add r2, r8
	ldr r0, [r2]
	lsls r0, r0, #2
	add r0, r8
	ldr r1, [r0, #0x2c]
	movs r0, #0xe6
	lsls r0, r0, #2
	add r0, r8
	strh r1, [r0]
	ldr r0, [r2]
	cmp r0, #0
	beq _080DF30C
	subs r0, #1
	str r0, [r2]
_080DF30C:
	movs r1, #0xd9
	lsls r1, r1, #2
	add r1, r8
	movs r0, #8
	bl _080E007A
_080DF318:
	mov r3, r8
	adds r3, #0x30
	movs r2, #0xe0
	lsls r2, r2, #1
	add r2, r8
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r4, [r0]
	cmp r1, #0
	beq _080DF334
	subs r0, r1, #1
	str r0, [r2]
_080DF334:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _080DF346
	subs r0, r1, #1
	str r0, [r2]
_080DF346:
	cmp r3, #4
	bls _080DF34E
	bl _080E007C
_080DF34E:
	lsls r0, r3, #2
	ldr r1, _080DF358 @ =_080DF35C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080DF358: .4byte _080DF35C
_080DF35C: @ jump table
	.4byte _080DF370 @ case 0
	.4byte _080DF376 @ case 1
	.4byte _080DF37C @ case 2
	.4byte _080DF380 @ case 3
	.4byte _080DF384 @ case 4
_080DF370:
	movs r5, #2
	movs r3, #0
	b _080DF388
_080DF376:
	movs r5, #1
	movs r3, #0
	b _080DF388
_080DF37C:
	movs r5, #2
	b _080DF386
_080DF380:
	movs r5, #1
	b _080DF386
_080DF384:
	movs r5, #0
_080DF386:
	movs r3, #1
_080DF388:
	cmp r4, #1
	beq _080DF3A8
	cmp r4, #1
	bgt _080DF398
	cmp r4, #0
	beq _080DF3A0
	bl _080E007C
_080DF398:
	cmp r4, #2
	beq _080DF3B0
	bl _080E007C
_080DF3A0:
	ldr r1, _080DF3A4 @ =0x00001112
	b _080DF3B2
	.align 2, 0
_080DF3A4: .4byte 0x00001112
_080DF3A8:
	ldr r1, _080DF3AC @ =0x00000889
	b _080DF3B2
	.align 2, 0
_080DF3AC: .4byte 0x00000889
_080DF3B0:
	ldr r1, _080DF3E8 @ =0x00000444
_080DF3B2:
	movs r0, #0xdc
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	adds r2, r5, #0
	bl sub_8009378
	movs r1, #0xd9
	lsls r1, r1, #2
	add r1, r8
	movs r0, #5
	str r0, [r1]
	movs r1, #0xe8
	lsls r1, r1, #2
	add r1, r8
	movs r0, #0
	strb r0, [r1]
	movs r1, #0
	cmp r5, #2
	bne _080DF3DC
	movs r1, #1
_080DF3DC:
	ldr r0, _080DF3EC @ =0x000003A1
	add r0, r8
	strb r1, [r0]
	bl _080E007C
	.align 2, 0
_080DF3E8: .4byte 0x00000444
_080DF3EC: .4byte 0x000003A1
_080DF3F0:
	mov r3, r8
	adds r3, #0x30
	movs r2, #0xe0
	lsls r2, r2, #1
	add r2, r8
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r4, [r0]
	cmp r1, #0
	beq _080DF40C
	subs r0, r1, #1
	str r0, [r2]
_080DF40C:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _080DF41E
	subs r0, r1, #1
	str r0, [r2]
_080DF41E:
	cmp r3, #4
	bls _080DF426
	bl _080E007C
_080DF426:
	lsls r0, r3, #2
	ldr r1, _080DF430 @ =_080DF434
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080DF430: .4byte _080DF434
_080DF434: @ jump table
	.4byte _080DF448 @ case 0
	.4byte _080DF44E @ case 1
	.4byte _080DF454 @ case 2
	.4byte _080DF458 @ case 3
	.4byte _080DF45C @ case 4
_080DF448:
	movs r6, #2
	movs r3, #0
	b _080DF460
_080DF44E:
	movs r6, #1
	movs r3, #0
	b _080DF460
_080DF454:
	movs r6, #2
	b _080DF45E
_080DF458:
	movs r6, #1
	b _080DF45E
_080DF45C:
	movs r6, #0
_080DF45E:
	movs r3, #1
_080DF460:
	cmp r4, #1
	beq _080DF480
	cmp r4, #1
	bgt _080DF470
	cmp r4, #0
	beq _080DF478
	bl _080E007C
_080DF470:
	cmp r4, #2
	beq _080DF488
	bl _080E007C
_080DF478:
	ldr r1, _080DF47C @ =0x00001112
	b _080DF48A
	.align 2, 0
_080DF47C: .4byte 0x00001112
_080DF480:
	ldr r1, _080DF484 @ =0x00000889
	b _080DF48A
	.align 2, 0
_080DF484: .4byte 0x00000889
_080DF488:
	ldr r1, _080DF4F4 @ =0x00000444
_080DF48A:
	movs r0, #0xdc
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	adds r2, r6, #0
	bl sub_800934C
	movs r1, #0xd9
	lsls r1, r1, #2
	add r1, r8
	movs r0, #6
	str r0, [r1]
	movs r1, #0xe8
	lsls r1, r1, #2
	add r1, r8
	movs r0, #0
	strb r0, [r1]
	movs r1, #0
	cmp r6, #2
	bne _080DF4B4
	movs r1, #1
_080DF4B4:
	ldr r0, _080DF4F8 @ =0x000003A1
	add r0, r8
	strb r1, [r0]
	mov r5, r8
	adds r5, #4
	adds r0, r5, #0
	bl sub_8008918
	adds r4, r0, #0
	adds r0, r5, #0
	bl sub_8008918
	ldrh r0, [r0]
	movs r2, #0xe0
	lsls r2, r2, #4
	adds r1, r2, #0
	orrs r0, r1
	strh r0, [r4]
	cmp r6, #1
	bne _080DF4FC
	adds r0, r5, #0
	bl sub_8008918
	adds r4, r0, #0
	adds r4, #0x50
	adds r0, r5, #0
	bl sub_8008918
	adds r0, #0x50
	ldrh r0, [r0]
	movs r1, #0x80
	b _080DF512
	.align 2, 0
_080DF4F4: .4byte 0x00000444
_080DF4F8: .4byte 0x000003A1
_080DF4FC:
	adds r0, r5, #0
	bl sub_8008918
	adds r4, r0, #0
	adds r4, #0x50
	adds r0, r5, #0
	bl sub_8008918
	adds r0, #0x50
	ldrh r0, [r0]
	movs r1, #0xc0
_080DF512:
	orrs r0, r1
	strh r0, [r4]
	bl _080E007C
_080DF51A:
	mov r3, r8
	adds r3, #0x30
	movs r2, #0xe0
	lsls r2, r2, #1
	add r2, r8
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	str r0, [sp, #0x2c]
	cmp r1, #0
	beq _080DF538
	subs r0, r1, #1
	str r0, [r2]
_080DF538:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r4, [r0]
	cmp r1, #0
	beq _080DF54A
	subs r0, r1, #1
	str r0, [r2]
_080DF54A:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _080DF55C
	subs r0, r1, #1
	str r0, [r2]
_080DF55C:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r5, [r0]
	mov sl, r5
	movs r6, #0xb0
	add sl, r6
	add r6, sp, #0x10
	ldr r7, _080DF5E0 @ =0x000003FF
	mov sb, r7
	mov r1, sb
	ands r3, r1
	ldrh r2, [r6]
	ldr r5, _080DF5E4 @ =0xFFFFFC00
	adds r1, r5, #0
	ands r1, r2
	orrs r1, r3
	strh r1, [r6]
	lsls r4, r4, #0x10
	lsrs r2, r4, #0x10
	movs r7, #0x3f
	mov ip, r7
	mov r1, ip
	ands r2, r1
	lsls r2, r2, #2
	ldrb r7, [r6, #1]
	mov r8, r7
	movs r3, #3
	adds r1, r3, #0
	mov r7, r8
	ands r1, r7
	orrs r1, r2
	strb r1, [r6, #1]
	lsrs r4, r4, #0x16
	mov r1, sb
	ands r4, r1
	ldrh r2, [r6, #2]
	adds r1, r5, #0
	ands r1, r2
	orrs r1, r4
	strh r1, [r6, #2]
	ldr r4, [sp, #0x2c]
	lsls r2, r4, #0x10
	lsrs r1, r2, #0x10
	mov r7, ip
	ands r1, r7
	lsls r1, r1, #2
	ldrb r4, [r6, #3]
	ands r3, r4
	orrs r3, r1
	strb r3, [r6, #3]
	lsrs r2, r2, #0x16
	mov r1, sb
	ands r2, r1
	ldrh r1, [r6, #4]
	ands r5, r1
	orrs r5, r2
	strh r5, [r6, #4]
	mov r4, sl
	ldr r2, [r4]
	adds r1, r6, #0
	bl sub_80D3914
	bl _080E0080
	.align 2, 0
_080DF5E0: .4byte 0x000003FF
_080DF5E4: .4byte 0xFFFFFC00
_080DF5E8:
	mov r6, r8
	adds r6, #0x30
	movs r5, #0xe0
	lsls r5, r5, #1
	add r5, r8
	ldr r1, [r5]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _080DF604
	subs r0, r1, #1
	str r0, [r5]
_080DF604:
	ldr r1, [r5]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _080DF616
	subs r0, r1, #1
	str r0, [r5]
_080DF616:
	ldr r4, [r5]
	lsls r0, r4, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r6, [r0]
	cmp r4, #0
	beq _080DF628
	subs r0, r4, #1
	str r0, [r5]
_080DF628:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r4, [r1, #0x24]
	bl sub_080DFE84
_080DF638:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r1, [r1, #0x28]
	bl sub_80D3910
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080DF652
	bl _080E007C
_080DF652:
	movs r1, #0xd9
	lsls r1, r1, #2
	add r1, r8
	movs r0, #0xa
	bl _080E007A
_080DF65E:
	mov r3, r8
	adds r3, #0x30
	movs r2, #0xe0
	lsls r2, r2, #1
	add r2, r8
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r4, [r0]
	cmp r1, #0
	beq _080DF67A
	subs r0, r1, #1
	str r0, [r2]
_080DF67A:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _080DF68C
	subs r0, r1, #1
	str r0, [r2]
_080DF68C:
	lsls r0, r4, #0x10
	lsrs r1, r0, #0x10
	movs r0, #0xdd
	lsls r0, r0, #2
	add r0, r8
	cmp r3, #1
	beq _080DF738
	cmp r3, #1
	bgt _080DF6A6
	cmp r3, #0
	beq _080DF730
	bl _080E0080
_080DF6A6:
	cmp r3, #2
	beq _080DF6AE
	bl _080E0080
_080DF6AE:
	b _080DF740
_080DF6B0:
	movs r0, #0xdd
	lsls r0, r0, #2
	add r0, r8
	bl sub_8008BE0
	bl _080E0080
_080DF6BE:
	ldr r0, [r4]
	b _080DF716
_080DF6C2:
	mov r3, r8
	adds r3, #0x30
	movs r2, #0xe0
	lsls r2, r2, #1
	add r2, r8
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r7, [r0]
	cmp r1, #0
	beq _080DF6DE
	subs r0, r1, #1
	str r0, [r2]
_080DF6DE:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r6, [r0]
	cmp r1, #0
	beq _080DF6F0
	subs r0, r1, #1
	str r0, [r2]
_080DF6F0:
	movs r0, #0xe2
	lsls r0, r0, #2
	add r0, r8
	ldr r4, [r0]
	ldr r5, [r0, #4]
	lsls r7, r7, #0x10
	cmp r4, r5
	beq _080DF712
_080DF700:
	ldr r0, [r4]
	bl sub_8008CD0
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080DF6BE
	adds r4, #4
	cmp r4, r5
	bne _080DF700
_080DF712:
	subs r0, r5, #4
	ldr r0, [r0]
_080DF716:
	lsrs r1, r7, #0x10
	cmp r6, #1
	beq _080DF738
	cmp r6, #1
	bgt _080DF728
	cmp r6, #0
	beq _080DF730
	bl _080E0080
_080DF728:
	cmp r6, #2
	beq _080DF740
	bl _080E0080
_080DF730:
	bl sub_8008B6C
	bl _080E0080
_080DF738:
	bl sub_8008B88
	bl _080E0080
_080DF740:
	bl sub_8008BB0
	bl _080E0080
_080DF748:
	bl sub_8008DE8
	bl _080E0080
_080DF750:
	mov r5, r8
	adds r5, #0x30
	movs r3, #0xe0
	lsls r3, r3, #1
	add r3, r8
	ldr r1, [r3]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r5, r0
	ldr r0, [r0]
	str r0, [sp, #0x28]
	cmp r1, #0
	beq _080DF76E
	subs r0, r1, #1
	str r0, [r3]
_080DF76E:
	ldr r1, [r3]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r5, r0
	ldr r0, [r0]
	mov sl, r0
	cmp r1, #0
	beq _080DF782
	subs r0, r1, #1
	str r0, [r3]
_080DF782:
	ldr r1, [r3]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r5, r0
	ldr r4, [r0]
	cmp r1, #0
	beq _080DF794
	subs r0, r1, #1
	str r0, [r3]
_080DF794:
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r5, r0
	ldr r6, [r0]
	cmp r2, #0
	beq _080DF7A6
	subs r0, r2, #1
	str r0, [r3]
_080DF7A6:
	movs r5, #0xda
	lsls r5, r5, #2
	add r5, r8
	ldr r0, [r5]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	adds r1, r6, #0
	bl sub_80D3914
	adds r7, r0, #0
	cmp r7, #0
	bne _080DF7C2
	bl _080E0080
_080DF7C2:
	ldr r0, [r5]
	ldr r1, [r0]
	ldr r1, [r1, #0x14]
	bl sub_80D3910
	add r1, sp, #0x18
	ldr r5, _080DF854 @ =0x000003FF
	mov r8, r5
	mov r6, r8
	ands r0, r6
	ldrh r3, [r1]
	ldr r5, _080DF858 @ =0xFFFFFC00
	adds r2, r5, #0
	ands r2, r3
	orrs r2, r0
	strh r2, [r1]
	lsls r4, r4, #0x10
	lsrs r2, r4, #0x10
	movs r0, #0x3f
	mov sb, r0
	ands r2, r0
	lsls r2, r2, #2
	ldrb r6, [r1, #1]
	movs r3, #3
	adds r0, r3, #0
	ands r0, r6
	orrs r0, r2
	strb r0, [r1, #1]
	lsrs r4, r4, #0x16
	mov r2, r8
	ands r4, r2
	ldrh r2, [r1, #2]
	adds r0, r5, #0
	ands r0, r2
	orrs r0, r4
	strh r0, [r1, #2]
	mov r4, sl
	lsls r2, r4, #0x10
	lsrs r0, r2, #0x10
	mov r6, sb
	ands r0, r6
	lsls r0, r0, #2
	ldrb r4, [r1, #3]
	ands r3, r4
	orrs r3, r0
	strb r3, [r1, #3]
	lsrs r2, r2, #0x16
	mov r0, r8
	ands r2, r0
	ldrh r0, [r1, #4]
	ands r5, r0
	orrs r5, r2
	strh r5, [r1, #4]
	add r4, sp, #0x10
	adds r0, r4, #0
	movs r2, #6
	bl sub_80D3994
	add r1, sp, #0x28
	ldrb r1, [r1]
	strb r1, [r4, #6]
	adds r0, r7, #0
	add r1, sp, #0x10
	bl sub_803211C
	ldr r0, [r7, #0x14]
	ldr r1, [r0, #0x20]
	adds r0, r7, #0
	bl sub_80D3910
	bl _080E0080
	.align 2, 0
_080DF854: .4byte 0x000003FF
_080DF858: .4byte 0xFFFFFC00
_080DF85C:
	mov r3, r8
	adds r3, #0x30
	movs r1, #0xe0
	lsls r1, r1, #1
	add r1, r8
	ldr r2, [r1]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r6, [r0]
	cmp r2, #0
	beq _080DF878
	subs r0, r2, #1
	str r0, [r1]
_080DF878:
	ldr r2, [r1]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r5, [r0]
	cmp r2, #0
	beq _080DF88A
	subs r0, r2, #1
	str r0, [r1]
_080DF88A:
	ldr r2, [r1]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r3, [r0]
	cmp r2, #0
	beq _080DF89C
	subs r0, r2, #1
	str r0, [r1]
_080DF89C:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	adds r1, r3, #0
	bl sub_80D3914
	adds r4, r0, #0
	cmp r4, #0
	bne _080DF8B6
	b _080E0080
_080DF8B6:
	adds r1, r5, #0
	bl sub_80323E0
	adds r0, r4, #0
	adds r1, r6, #0
	bl sub_80323F0
	b _080E0080
_080DF8C6:
	mov r0, r8
	adds r0, #0x30
	movs r2, #0xe0
	lsls r2, r2, #1
	add r2, r8
	ldr r3, [r2]
	lsls r1, r3, #2
	subs r1, #4
	adds r1, r0, r1
	ldr r6, [r1]
	adds r5, r0, #0
	adds r4, r2, #0
	cmp r3, #0
	beq _080DF8E6
	subs r0, r3, #1
	str r0, [r4]
_080DF8E6:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	adds r1, r6, #0
	bl sub_80D3914
	movs r1, #0
	cmp r0, #0
	beq _080DF900
	ldr r1, [r0, #8]
_080DF900:
	asrs r2, r1, #0x10
	b _080DF9DA
_080DF904:
	mov r0, r8
	adds r0, #0x30
	movs r2, #0xe0
	lsls r2, r2, #1
	add r2, r8
	ldr r3, [r2]
	lsls r1, r3, #2
	subs r1, #4
	adds r1, r0, r1
	ldr r6, [r1]
	adds r5, r0, #0
	adds r4, r2, #0
	cmp r3, #0
	beq _080DF924
	subs r0, r3, #1
	str r0, [r4]
_080DF924:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	adds r1, r6, #0
	bl sub_80D3914
	movs r1, #0
	cmp r0, #0
	beq _080DF900
	ldr r1, [r0, #0xc]
	b _080DF900
_080DF940:
	mov r3, r8
	adds r3, #0x30
	movs r1, #0xe0
	lsls r1, r1, #1
	add r1, r8
	ldr r2, [r1]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r4, [r0]
	cmp r2, #0
	beq _080DF95C
	subs r0, r2, #1
	str r0, [r1]
_080DF95C:
	ldr r2, [r1]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r3, [r0]
	cmp r2, #0
	beq _080DF96E
	subs r0, r2, #1
	str r0, [r1]
_080DF96E:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	adds r1, r3, #0
	bl sub_80D3914
	adds r1, r0, #0
	cmp r1, #0
	bne _080DF988
	b _080E0080
_080DF988:
	adds r0, #0x20
	ldrb r0, [r0]
	cmp r0, r4
	bne _080DF992
	b _080E0080
_080DF992:
	adds r0, r1, #0
	adds r1, r4, #0
	bl sub_8032198
	b _080E0080
_080DF99C:
	mov r0, r8
	adds r0, #0x30
	movs r2, #0xe0
	lsls r2, r2, #1
	add r2, r8
	ldr r3, [r2]
	lsls r1, r3, #2
	subs r1, #4
	adds r1, r0, r1
	ldr r6, [r1]
	adds r5, r0, #0
	adds r4, r2, #0
	cmp r3, #0
	beq _080DF9BC
	subs r0, r3, #1
	str r0, [r4]
_080DF9BC:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	adds r1, r6, #0
	bl sub_80D3914
	cmp r0, #0
	beq _080DF9D8
	adds r0, #0x20
	ldrb r2, [r0]
	b _080DF9DA
_080DF9D8:
	movs r2, #0
_080DF9DA:
	ldr r1, [r4]
	cmp r1, #0x63
	bls _080DF9E2
	b _080E0080
_080DF9E2:
	lsls r0, r1, #2
	adds r0, r5, r0
	str r2, [r0]
	adds r0, r1, #1
	str r0, [r4]
	b _080E0080
_080DF9EE:
	mov r4, r8
	adds r4, #0x30
	movs r3, #0xe0
	lsls r3, r3, #1
	add r3, r8
	ldr r1, [r3]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r6, [r0]
	cmp r1, #0
	beq _080DFA0A
	subs r0, r1, #1
	str r0, [r3]
_080DFA0A:
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r5, [r0]
	cmp r2, #0
	beq _080DFA1C
	subs r0, r2, #1
	str r0, [r3]
_080DFA1C:
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r4, [r0]
	cmp r2, #0
	beq _080DFA2E
	subs r0, r2, #1
	str r0, [r3]
_080DFA2E:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	adds r1, r4, #0
	bl sub_80D3914
	cmp r0, #0
	bne _080DFA46
	b _080E0080
_080DFA46:
	lsls r2, r6, #0x10
	adds r1, r5, #0
	bl sub_8032308
	b _080E0080
_080DFA50:
	mov r4, r8
	adds r4, #0x30
	movs r3, #0xe0
	lsls r3, r3, #1
	add r3, r8
	ldr r1, [r3]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r6, [r0]
	cmp r1, #0
	beq _080DFA6C
	subs r0, r1, #1
	str r0, [r3]
_080DFA6C:
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r5, [r0]
	cmp r2, #0
	beq _080DFA7E
	subs r0, r2, #1
	str r0, [r3]
_080DFA7E:
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r4, [r0]
	cmp r2, #0
	beq _080DFA90
	subs r0, r2, #1
	str r0, [r3]
_080DFA90:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	adds r1, r4, #0
	bl sub_80D3914
	cmp r0, #0
	bne _080DFAA8
	b _080E0080
_080DFAA8:
	lsls r2, r6, #0x10
	adds r1, r5, #0
	bl sub_803233C
	b _080E0080
_080DFAB2:
	mov r4, r8
	adds r4, #0x30
	movs r3, #0xe0
	lsls r3, r3, #1
	add r3, r8
	ldr r1, [r3]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r6, [r0]
	cmp r1, #0
	beq _080DFACE
	subs r0, r1, #1
	str r0, [r3]
_080DFACE:
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r5, [r0]
	cmp r2, #0
	beq _080DFAE0
	subs r0, r2, #1
	str r0, [r3]
_080DFAE0:
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r4, [r0]
	cmp r2, #0
	beq _080DFAF2
	subs r0, r2, #1
	str r0, [r3]
_080DFAF2:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	adds r1, r4, #0
	bl sub_80D3914
	cmp r0, #0
	bne _080DFB0A
	b _080E0080
_080DFB0A:
	adds r1, r5, #0
	adds r2, r6, #0
	bl sub_8032308
	b _080E0080
_080DFB14:
	mov r4, r8
	adds r4, #0x30
	movs r3, #0xe0
	lsls r3, r3, #1
	add r3, r8
	ldr r1, [r3]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r6, [r0]
	cmp r1, #0
	beq _080DFB30
	subs r0, r1, #1
	str r0, [r3]
_080DFB30:
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r5, [r0]
	cmp r2, #0
	beq _080DFB42
	subs r0, r2, #1
	str r0, [r3]
_080DFB42:
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r4, [r0]
	cmp r2, #0
	beq _080DFB54
	subs r0, r2, #1
	str r0, [r3]
_080DFB54:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	adds r1, r4, #0
	bl sub_80D3914
	cmp r0, #0
	bne _080DFB6C
	b _080E0080
_080DFB6C:
	adds r1, r5, #0
	adds r2, r6, #0
	bl sub_803233C
	b _080E0080
_080DFB76:
	movs r1, #0xe0
	lsls r1, r1, #1
	add r1, r8
	ldr r2, [r1]
	lsls r0, r2, #2
	add r0, r8
	ldr r3, [r0, #0x2c]
	cmp r2, #0
	beq _080DFB8C
	subs r0, r2, #1
	str r0, [r1]
_080DFB8C:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	adds r1, r3, #0
	bl sub_80D3914
	movs r1, #0xe7
	lsls r1, r1, #2
	add r1, r8
	str r0, [r1]
	cmp r0, #0
	bne _080DFBAC
	b _080E007C
_080DFBAC:
	movs r1, #0xd9
	lsls r1, r1, #2
	add r1, r8
	movs r0, #9
	b _080E007A
_080DFBB6:
	mov r3, r8
	adds r3, #0x30
	movs r1, #0xe0
	lsls r1, r1, #1
	add r1, r8
	ldr r2, [r1]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r4, [r0]
	cmp r2, #0
	beq _080DFBD2
	subs r0, r2, #1
	str r0, [r1]
_080DFBD2:
	ldr r2, [r1]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r3, [r0]
	cmp r2, #0
	beq _080DFBE4
	subs r0, r2, #1
	str r0, [r1]
_080DFBE4:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	adds r1, r3, #0
	bl sub_80D3914
	adds r1, r0, #0
	cmp r1, #0
	bne _080DFBFE
	b _080E0080
_080DFBFE:
	ldrh r0, [r1, #0x22]
	cmp r0, r4
	bne _080DFC06
	b _080E0080
_080DFC06:
	adds r0, r1, #0
	adds r1, r4, #0
	bl sub_80321B0
	b _080E0080
_080DFC10:
	movs r1, #0xe0
	lsls r1, r1, #1
	add r1, r8
	ldr r0, [r1]
	cmp r0, #0
	bne _080DFC1E
	b _080E0080
_080DFC1E:
	subs r0, #1
	str r0, [r1]
	b _080E0080
_080DFC24:
	movs r1, #0xe0
	lsls r1, r1, #1
	add r1, r8
	ldr r2, [r1]
	lsls r0, r2, #2
	add r0, r8
	ldr r3, [r0, #0x2c]
	cmp r2, #0
	beq _080DFC3A
	subs r0, r2, #1
	str r0, [r1]
_080DFC3A:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	adds r1, r3, #0
	bl sub_80D3914
	cmp r0, #0
	bne _080DFC52
	b _080E0080
_080DFC52:
	movs r1, #0x8d
	lsls r1, r1, #2
	bl sub_801FF38
	b _080E0080
_080DFC5C:
	mov r4, r8
	adds r4, #0x30
	movs r3, #0xe0
	lsls r3, r3, #1
	add r3, r8
	ldr r1, [r3]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r5, [r0]
	cmp r1, #0
	beq _080DFC78
	subs r0, r1, #1
	str r0, [r3]
_080DFC78:
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r6, [r0]
	cmp r2, #0
	beq _080DFC8A
	subs r0, r2, #1
	str r0, [r3]
_080DFC8A:
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r4, [r0]
	cmp r2, #0
	beq _080DFC9C
	subs r0, r2, #1
	str r0, [r3]
_080DFC9C:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	adds r1, r4, #0
	bl sub_80D3914
	cmp r0, #0
	bne _080DFCB4
	b _080E0080
_080DFCB4:
	rsbs r2, r5, #0
	orrs r2, r5
	lsrs r2, r2, #0x1f
	adds r1, r6, #0
	bl sub_8032384
	b _080E0080
_080DFCC2:
	movs r1, #0xe0
	lsls r1, r1, #1
	add r1, r8
	ldr r2, [r1]
	lsls r0, r2, #2
	add r0, r8
	ldr r3, [r0, #0x2c]
	cmp r2, #0
	beq _080DFCD8
	subs r0, r2, #1
	str r0, [r1]
_080DFCD8:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	adds r1, r3, #0
	bl sub_80D3914
	cmp r0, #0
	bne _080DFCF0
	b _080E0080
_080DFCF0:
	bl sub_80323C8
	b _080E0080
_080DFCF6:
	movs r3, #0xe0
	lsls r3, r3, #1
	add r3, r8
	ldr r2, [r3]
	lsls r0, r2, #2
	add r0, r8
	ldr r1, [r0, #0x2c]
	cmp r2, #0
	beq _080DFD0C
	subs r0, r2, #1
	str r0, [r3]
_080DFD0C:
	mov r0, r8
	adds r0, #0xc
	ldr r2, _080DFD20 @ =gUnknown_080F89D4
	lsls r1, r1, #2
	adds r1, r1, r2
	ldr r1, [r1]
	bl sub_803EEEC
	b _080E0080
	.align 2, 0
_080DFD20: .4byte gUnknown_080F89D4
_080DFD24:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	adds r1, #0x80
	ldr r1, [r1]
	bl sub_80D3910
	b _080E0080
_080DFD38:
	movs r1, #0xe0
	lsls r1, r1, #1
	add r1, r8
	ldr r2, [r1]
	lsls r0, r2, #2
	add r0, r8
	ldr r3, [r0, #0x2c]
	cmp r2, #0
	beq _080DFD4E
	subs r0, r2, #1
	str r0, [r1]
_080DFD4E:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	adds r1, #0x9c
	b _080DFDA2
_080DFD5C:
	movs r1, #0xe0
	lsls r1, r1, #1
	add r1, r8
	ldr r2, [r1]
	lsls r0, r2, #2
	add r0, r8
	ldr r3, [r0, #0x2c]
	cmp r2, #0
	beq _080DFD72
	subs r0, r2, #1
	str r0, [r1]
_080DFD72:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	adds r1, #0xa0
	b _080DFDA2
_080DFD80:
	movs r1, #0xe0
	lsls r1, r1, #1
	add r1, r8
	ldr r2, [r1]
	lsls r0, r2, #2
	add r0, r8
	ldr r3, [r0, #0x2c]
	cmp r2, #0
	beq _080DFD96
	subs r0, r2, #1
	str r0, [r1]
_080DFD96:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	adds r1, #0xac
_080DFDA2:
	ldr r2, [r1]
	adds r1, r3, #0
	bl sub_80D3914
	b _080E0080
_080DFDAC:
	mov r6, r8
	adds r6, #0x30
	movs r5, #0xe0
	lsls r5, r5, #1
	add r5, r8
	ldr r1, [r5]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _080DFDC8
	subs r0, r1, #1
	str r0, [r5]
_080DFDC8:
	ldr r1, [r5]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _080DFDDA
	subs r0, r1, #1
	str r0, [r5]
_080DFDDA:
	ldr r4, [r5]
	lsls r0, r4, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r4, #0
	beq _080DFDEC
	subs r0, r4, #1
	str r0, [r5]
_080DFDEC:
	ldr r4, [r5]
	lsls r0, r4, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r0, [r0]
	mov sb, r0
	cmp r4, #0
	beq _080DFE00
	subs r0, r4, #1
	str r0, [r5]
_080DFE00:
	ldr r4, [r5]
	lsls r0, r4, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r7, [r0]
	cmp r4, #0
	beq _080DFE12
	subs r0, r4, #1
	str r0, [r5]
_080DFE12:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r5, [r0]
	ldr r4, [r5]
	adds r4, #0xb4
	add r6, sp, #0x20
	adds r0, r6, #0
	bl sub_8009FC8
	ldr r4, [r4]
	adds r0, r5, #0
	adds r1, r7, #0
	mov r2, sb
	adds r3, r6, #0
	bl sub_80D391C
	b _080E0080
_080DFE36:
	mov r6, r8
	adds r6, #0x30
	movs r5, #0xe0
	lsls r5, r5, #1
	add r5, r8
	ldr r1, [r5]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _080DFE52
	subs r0, r1, #1
	str r0, [r5]
_080DFE52:
	ldr r1, [r5]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _080DFE64
	subs r0, r1, #1
	str r0, [r5]
_080DFE64:
	ldr r4, [r5]
	lsls r0, r4, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r6, [r0]
	cmp r4, #0
	beq _080DFE76
	subs r0, r4, #1
	str r0, [r5]
_080DFE76:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	adds r1, #0xb8
	ldr r4, [r1]

	thumb_func_start sub_080DFE84
sub_080DFE84: @ 0x080DFE84
	adds r1, r6, #0
	bl sub_80D391C
	b _080E0080
_080DFE8C:
	mov r5, r8
	adds r5, #0x30
	movs r4, #0xe0
	lsls r4, r4, #1
	add r4, r8
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r5, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _080DFEA8
	subs r0, r2, #1
	str r0, [r4]
_080DFEA8:
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r5, r0
	ldr r7, [r0]
	cmp r2, #0
	beq _080DFEBA
	subs r0, r2, #1
	str r0, [r4]
_080DFEBA:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r5, r0
	ldr r6, [r0]
	cmp r3, #0
	beq _080DFECC
	subs r0, r3, #1
	str r0, [r4]
_080DFECC:
	movs r5, #0xda
	lsls r5, r5, #2
	add r5, r8
	ldr r0, [r5]
	ldr r2, [r0]
	adds r1, #0x62
	ldr r2, [r2, #0x40]
	bl sub_80D3914
	adds r4, r0, #0
	cmp r4, #0
	bne _080DFEE6
	b _080E0080
_080DFEE6:
	ldr r0, [r5]
	ldr r1, [r0]
	ldr r1, [r1, #0x14]
	bl sub_80D3910
	adds r1, r0, #0
	adds r0, r4, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl sub_801FE78
	b _080E0080
_080DFEFE:
	movs r3, #0xe0
	lsls r3, r3, #1
	add r3, r8
	ldr r2, [r3]
	lsls r0, r2, #2
	add r0, r8
	ldr r1, [r0, #0x2c]
	cmp r2, #0
	beq _080DFF14
	subs r0, r2, #1
	str r0, [r3]
_080DFF14:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r2, [r0]
	adds r1, #0x62
	ldr r2, [r2, #0x40]
	bl sub_80D3914
	cmp r0, #0
	bne _080DFF2C
	b _080E0080
_080DFF2C:
	movs r1, #0x8d
	lsls r1, r1, #2
	movs r2, #0
	movs r3, #0
	bl sub_801FE78
	b _080E0080
_080DFF3A:
	movs r1, #0xe0
	lsls r1, r1, #1
	add r1, r8
	ldr r2, [r1]
	lsls r0, r2, #2
	add r0, r8
	ldr r4, [r0, #0x2c]
	cmp r2, #0
	beq _080DFF50
	subs r0, r2, #1
	str r0, [r1]
_080DFF50:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	movs r1, #0x5e
	bl sub_80D3914
	ldr r1, [r0, #0x14]
	ldr r2, [r1, #0x40]
	adds r1, r4, #0
	bl sub_80D3914
	b _080E0072
_080DFF6E:
	movs r1, #0xe0
	lsls r1, r1, #1
	add r1, r8
	ldr r2, [r1]
	lsls r0, r2, #2
	add r0, r8
	ldr r6, [r0, #0x2c]
	cmp r2, #0
	beq _080DFF84
	subs r0, r2, #1
	str r0, [r1]
_080DFF84:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	movs r1, #0x5e
	bl sub_80D3914
	adds r4, r0, #0
	ldr r5, [r4, #0x14]
	add r0, sp, #0x10
	adds r1, r6, #0
	bl sub_800DCA8
	add r0, sp, #0x10
	bl sub_800DCE0
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldr r3, [r5, #0x44]
	adds r0, r4, #0
	movs r2, #0
	bl sub_80D3918
	b _080E0072
_080DFFBA:
	movs r1, #0xe0
	lsls r1, r1, #1
	add r1, r8
	ldr r2, [r1]
	lsls r0, r2, #2
	add r0, r8
	ldr r4, [r0, #0x2c]
	cmp r2, #0
	beq _080DFFD0
	subs r0, r2, #1
	str r0, [r1]
_080DFFD0:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	movs r1, #0x5e
	bl sub_80D3914
	ldr r2, [r0, #0x14]
	lsls r1, r4, #0x10
	lsrs r1, r1, #0x10
	ldr r3, [r2, #0x44]
	movs r2, #1
	bl sub_80D3918
	b _080E0072
_080DFFF2:
	movs r1, #0xe0
	lsls r1, r1, #1
	add r1, r8
	ldr r2, [r1]
	lsls r0, r2, #2
	add r0, r8
	ldr r7, [r0, #0x2c]
	cmp r2, #0
	beq _080E0008
	subs r0, r2, #1
	str r0, [r1]
_080E0008:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	movs r1, #0x5e
	bl sub_80D3914
	adds r5, r0, #0
	ldr r6, [r5, #0x14]
	add r4, sp, #0x24
	adds r0, r4, #0
	adds r1, r7, #0
	bl sub_800DF50
	adds r0, r4, #0
	bl sub_800DF84
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldr r3, [r6, #0x44]
	adds r0, r5, #0
	movs r2, #0
	bl sub_80D3918
	b _080E0072
_080E0040:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	movs r1, #0x5e
	bl sub_80D3914
	ldr r1, [r0, #0x14]
	ldr r1, [r1, #0x4c]
	b _080E006E
_080E0058:
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	movs r1, #0x5e
	bl sub_80D3914
	ldr r1, [r0, #0x14]
	ldr r1, [r1, #0x48]
_080E006E:
	bl sub_80D3910
_080E0072:
	movs r1, #0xd9
	lsls r1, r1, #2
	add r1, r8
	movs r0, #0xb
_080E007A:
	str r0, [r1]
_080E007C:
	movs r0, #1
	b _080E0082
_080E0080:
	movs r0, #0
_080E0082:
	add sp, #0x30
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80E0094
sub_80E0094: @ 0x080E0094
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xac
	str r0, [sp, #0x7c]
	adds r7, r1, #0
	adds r6, r7, #4
	adds r0, r6, #0
	bl sub_8008724
	adds r0, r6, #0
	bl sub_8008918
	add r2, sp, #0xc
	movs r3, #0x82
	lsls r3, r3, #5
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0]
	adds r0, r6, #0
	bl sub_8008918
	add r1, sp, #0xc
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r4, #0xe2
	lsls r4, r4, #2
	adds r5, r7, r4
	movs r0, #0xde
	lsls r0, r0, #2
	adds r1, r7, r0
	str r1, [sp, #0x38]
	mov r2, sp
	adds r2, #0x38
	str r2, [sp, #0x80]
	ldr r4, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r4, r0
	beq _080E011C
	cmp r4, #0
	beq _080E00F0
	str r1, [r4]
_080E00F0:
	ldr r0, [r5, #4]
	adds r0, #4
	str r0, [r5, #4]
	mov sl, r6
	add r3, sp, #0x44
	mov r8, r3
	mov r4, sp
	adds r4, #0x50
	str r4, [sp, #0x9c]
	mov r5, sp
	adds r5, #0x5c
	str r5, [sp, #0xa0]
	adds r0, r7, #0
	adds r0, #0xc
	str r0, [sp, #0x98]
	mov r1, sp
	adds r1, #0x10
	str r1, [sp, #0x94]
	mov r2, sp
	adds r2, #0x68
	str r2, [sp, #0xa4]
	b _080E01BC
_080E011C:
	mov r8, r4
	movs r0, #1
	str r0, [sp, #0x40]
	ldr r0, [r5]
	subs r0, r4, r0
	asrs r4, r0, #2
	str r4, [sp, #0x3c]
	add r1, sp, #0x40
	add r0, sp, #0x3c
	cmp r4, #1
	bhs _080E0134
	adds r0, r1, #0
_080E0134:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080E0152
	lsls r4, r0, #2
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080E0156
	mov r0, sb
	bl sub_80D3BC0
	b _080E0156
_080E0152:
	movs r0, #0
	mov sb, r0
_080E0156:
	adds r6, r0, #0
	ldr r1, [r5]
	cmp r8, r1
	beq _080E016C
	mov r3, r8
	subs r4, r3, r1
	adds r2, r4, #0
	bl sub_80D39F8
	adds r0, r0, r4
	b _080E016E
_080E016C:
	adds r0, r6, #0
_080E016E:
	adds r4, r0, #0
	ldr r1, [sp, #0x40]
	adds r0, r7, #4
	mov sl, r0
	ldr r2, [r5]
	add r3, sp, #0x44
	mov r8, r3
	mov r0, sp
	adds r0, #0x50
	str r0, [sp, #0x9c]
	mov r3, sp
	adds r3, #0x5c
	str r3, [sp, #0xa0]
	adds r0, r7, #0
	adds r0, #0xc
	str r0, [sp, #0x98]
	subs r3, #0x4c
	str r3, [sp, #0x94]
	mov r0, sp
	adds r0, #0x68
	str r0, [sp, #0xa4]
	cmp r1, #0
	beq _080E01A8
_080E019C:
	ldr r3, [sp, #0x80]
	ldr r0, [r3]
	stm r4!, {r0}
	subs r1, #1
	cmp r1, #0
	bne _080E019C
_080E01A8:
	cmp r2, #0
	beq _080E01B2
	adds r0, r2, #0
	bl sub_80D0260
_080E01B2:
	mov r1, sb
	adds r0, r1, r6
	str r6, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080E01BC:
	movs r2, #0xe2
	lsls r2, r2, #2
	adds r5, r7, r2
	movs r3, #0xdf
	lsls r3, r3, #2
	adds r1, r7, r3
	str r1, [sp, #0x44]
	mov r4, r8
	str r4, [sp, #0x84]
	ldr r4, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r4, r0
	beq _080E01E4
	cmp r4, #0
	beq _080E01DC
	str r1, [r4]
_080E01DC:
	ldr r0, [r5, #4]
	adds r0, #4
	str r0, [r5, #4]
	b _080E0262
_080E01E4:
	mov r8, r4
	movs r0, #1
	str r0, [sp, #0x4c]
	ldr r0, [r5]
	subs r0, r4, r0
	asrs r4, r0, #2
	str r4, [sp, #0x48]
	add r1, sp, #0x4c
	add r0, sp, #0x48
	cmp r4, #1
	bhs _080E01FC
	adds r0, r1, #0
_080E01FC:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080E021A
	lsls r4, r0, #2
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080E021E
	mov r0, sb
	bl sub_80D3BC0
	b _080E021E
_080E021A:
	movs r0, #0
	mov sb, r0
_080E021E:
	adds r6, r0, #0
	ldr r1, [r5]
	cmp r8, r1
	beq _080E0236
	mov r0, r8
	subs r4, r0, r1
	adds r0, r6, #0
	adds r2, r4, #0
	bl sub_80D39F8
	adds r0, r0, r4
	b _080E0238
_080E0236:
	adds r0, r6, #0
_080E0238:
	adds r4, r0, #0
	ldr r1, [sp, #0x4c]
	ldr r2, [r5]
	cmp r1, #0
	beq _080E024E
_080E0242:
	ldr r3, [sp, #0x84]
	ldr r0, [r3]
	stm r4!, {r0}
	subs r1, #1
	cmp r1, #0
	bne _080E0242
_080E024E:
	cmp r2, #0
	beq _080E0258
	adds r0, r2, #0
	bl sub_80D0260
_080E0258:
	mov r1, sb
	adds r0, r1, r6
	str r6, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080E0262:
	movs r2, #0xe2
	lsls r2, r2, #2
	adds r5, r7, r2
	movs r3, #0xe0
	lsls r3, r3, #2
	adds r1, r7, r3
	str r1, [sp, #0x50]
	ldr r4, [sp, #0x9c]
	str r4, [sp, #0x88]
	ldr r4, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r4, r0
	beq _080E028A
	cmp r4, #0
	beq _080E0282
	str r1, [r4]
_080E0282:
	ldr r0, [r5, #4]
	adds r0, #4
	str r0, [r5, #4]
	b _080E0308
_080E028A:
	mov r8, r4
	movs r0, #1
	str r0, [sp, #0x58]
	ldr r0, [r5]
	subs r0, r4, r0
	asrs r4, r0, #2
	str r4, [sp, #0x54]
	add r1, sp, #0x58
	add r0, sp, #0x54
	cmp r4, #1
	bhs _080E02A2
	adds r0, r1, #0
_080E02A2:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080E02C0
	lsls r4, r0, #2
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080E02C4
	mov r0, sb
	bl sub_80D3BC0
	b _080E02C4
_080E02C0:
	movs r0, #0
	mov sb, r0
_080E02C4:
	adds r6, r0, #0
	ldr r1, [r5]
	cmp r8, r1
	beq _080E02DC
	mov r0, r8
	subs r4, r0, r1
	adds r0, r6, #0
	adds r2, r4, #0
	bl sub_80D39F8
	adds r0, r0, r4
	b _080E02DE
_080E02DC:
	adds r0, r6, #0
_080E02DE:
	adds r4, r0, #0
	ldr r1, [sp, #0x58]
	ldr r2, [r5]
	cmp r1, #0
	beq _080E02F4
_080E02E8:
	ldr r3, [sp, #0x88]
	ldr r0, [r3]
	stm r4!, {r0}
	subs r1, #1
	cmp r1, #0
	bne _080E02E8
_080E02F4:
	cmp r2, #0
	beq _080E02FE
	adds r0, r2, #0
	bl sub_80D0260
_080E02FE:
	mov r1, sb
	adds r0, r1, r6
	str r6, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080E0308:
	movs r2, #0xe2
	lsls r2, r2, #2
	adds r5, r7, r2
	movs r3, #0xe1
	lsls r3, r3, #2
	adds r1, r7, r3
	str r1, [sp, #0x5c]
	ldr r4, [sp, #0xa0]
	str r4, [sp, #0x8c]
	ldr r4, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r4, r0
	beq _080E0330
	cmp r4, #0
	beq _080E0328
	str r1, [r4]
_080E0328:
	ldr r0, [r5, #4]
	adds r0, #4
	str r0, [r5, #4]
	b _080E03AE
_080E0330:
	mov r8, r4
	movs r0, #1
	str r0, [sp, #0x64]
	ldr r0, [r5]
	subs r0, r4, r0
	asrs r4, r0, #2
	str r4, [sp, #0x60]
	add r1, sp, #0x64
	add r0, sp, #0x60
	cmp r4, #1
	bhs _080E0348
	adds r0, r1, #0
_080E0348:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080E0366
	lsls r4, r0, #2
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080E036A
	mov r0, sb
	bl sub_80D3BC0
	b _080E036A
_080E0366:
	movs r0, #0
	mov sb, r0
_080E036A:
	adds r6, r0, #0
	ldr r1, [r5]
	cmp r8, r1
	beq _080E0382
	mov r0, r8
	subs r4, r0, r1
	adds r0, r6, #0
	adds r2, r4, #0
	bl sub_80D39F8
	adds r0, r0, r4
	b _080E0384
_080E0382:
	adds r0, r6, #0
_080E0384:
	adds r4, r0, #0
	ldr r1, [sp, #0x64]
	ldr r2, [r5]
	cmp r1, #0
	beq _080E039A
_080E038E:
	ldr r3, [sp, #0x8c]
	ldr r0, [r3]
	stm r4!, {r0}
	subs r1, #1
	cmp r1, #0
	bne _080E038E
_080E039A:
	cmp r2, #0
	beq _080E03A4
	adds r0, r2, #0
	bl sub_80D0260
_080E03A4:
	mov r1, sb
	adds r0, r1, r6
	str r6, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_080E03AE:
	ldr r2, _080E0534 @ =gUnknown_080F89D4
	ldr r1, _080E0538 @ =gUnknown_080F19AE
	movs r3, #0xd8
	lsls r3, r3, #2
	adds r0, r7, r3
	ldr r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r1, [r0]
	ldr r0, [sp, #0x98]
	bl sub_803EEEC
	movs r4, #0xd9
	lsls r4, r4, #2
	adds r0, r7, r4
	movs r4, #0
	str r4, [r0]
	movs r0, #0xda
	lsls r0, r0, #2
	adds r5, r7, r0
	ldr r0, [sp, #0x94]
	bl sub_80AD724
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x94]
	str r1, [sp, #0x68]
	ldr r2, [sp, #0xa4]
	str r0, [r2, #4]
	str r4, [r1]
	adds r4, r0, #0
	ldr r1, [r5]
	cmp r4, r1
	beq _080E0406
	cmp r1, #0
	beq _080E0406
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E0406:
	str r4, [r5]
	ldr r1, [sp, #0x10]
	cmp r1, #0
	beq _080E041A
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E041A:
	movs r0, #4
	bl sub_80005D4
	adds r4, r0, #0
	mov r0, sl
	bl sub_8008918
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_8009300
	movs r3, #0xdc
	lsls r3, r3, #2
	adds r5, r7, r3
	adds r4, r0, #0
	ldr r0, [r5]
	cmp r4, r0
	beq _080E0448
	cmp r0, #0
	beq _080E0448
	movs r1, #3
	bl sub_8009324
_080E0448:
	str r4, [r5]
_080E044A:
	mov r0, sl
	bl sub_80088B8
	movs r4, #0xd9
	lsls r4, r4, #2
	adds r6, r7, r4
	ldr r0, [r6]
	cmp r0, #1
	beq _080E04B2
	mov r0, sl
	bl sub_80088DC
	ldrh r0, [r0, #8]
	movs r1, #8
	ands r0, r1
	cmp r0, #0
	beq _080E04B2
	movs r0, #0xdc
	lsls r0, r0, #2
	adds r5, r7, r0
	ldr r0, [r5]
	bl sub_80094A4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	rsbs r1, r0, #0
	orrs r1, r0
	cmp r1, #0
	blt _080E04B2
	movs r1, #0xdb
	lsls r1, r1, #2
	adds r4, r7, r1
	ldr r0, [r4]
	cmp r0, #0
	beq _080E04A2
	bl sub_8050D34
	cmp r0, #1
	beq _080E04B2
	ldr r0, [r4]
	bl sub_8050D34
	cmp r0, #2
	beq _080E04B2
_080E04A2:
	ldr r0, [r5]
	ldr r1, _080E053C @ =0x00000889
	movs r2, #1
	movs r3, #1
	bl sub_8009378
	movs r0, #1
	str r0, [r6]
_080E04B2:
	movs r2, #0xdb
	lsls r2, r2, #2
	adds r4, r7, r2
	ldr r0, [r4]
	cmp r0, #0
	beq _080E0518
	mov r0, sl
	bl sub_80088DC
	ldrh r2, [r0, #8]
	movs r0, #9
	rsbs r0, r0, #0
	ands r0, r2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _080E0540 @ =0xFFFFFF00
	ands r1, r2
	orrs r1, r0
	ldr r4, [r4]
	mov sb, r4
	add r5, sp, #0x14
	adds r0, r5, #0
	bl sub_80091E8
	mov r0, sl
	bl sub_8008920
	mov r8, r0
	mov r0, sl
	bl sub_8008918
	adds r6, r0, #0
	mov r0, sl
	bl sub_8008940
	adds r4, r0, #0
	mov r0, sl
	bl sub_800894C
	movs r3, #0xe0
	lsls r3, r3, #2
	adds r1, r7, r3
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, sb
	adds r1, r5, #0
	mov r2, r8
	adds r3, r6, #0
	bl sub_8050D3C
_080E0518:
	movs r6, #0
	movs r4, #0xd9
	lsls r4, r4, #2
	adds r0, r7, r4
	ldr r0, [r0]
	cmp r0, #0xb
	bls _080E0528
	b _080E075E
_080E0528:
	lsls r0, r0, #2
	ldr r1, _080E0544 @ =_080E0548
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080E0534: .4byte gUnknown_080F89D4
_080E0538: .4byte gUnknown_080F19AE
_080E053C: .4byte 0x00000889
_080E0540: .4byte 0xFFFFFF00
_080E0544: .4byte _080E0548
_080E0548: @ jump table
	.4byte _080E0578 @ case 0
	.4byte _080E05A2 @ case 1
	.4byte _080E05D0 @ case 2
	.4byte _080E05EC @ case 3
	.4byte _080E0616 @ case 4
	.4byte _080E065C @ case 5
	.4byte _080E06BC @ case 6
	.4byte _080E0632 @ case 7
	.4byte _080E06DE @ case 8
	.4byte _080E06FA @ case 9
	.4byte _080E0712 @ case 10
	.4byte _080E0734 @ case 11
_080E0578:
	movs r6, #1
	movs r5, #0xd6
	lsls r5, r5, #2
	adds r0, r7, r5
	ldr r0, [r0]
	ldr r1, [r0, #0xc]
	ldr r0, [sp, #0x98]
	bl sub_80D3910
	adds r2, r0, #0
	cmp r2, #0
	beq _080E0592
	b _080E075E
_080E0592:
	movs r1, #0xd7
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	str r2, [r0]
	ldr r2, [sp, #0x7c]
	str r1, [r2]
	b _080E08F4
_080E05A2:
	movs r6, #1
	movs r3, #0xdc
	lsls r3, r3, #2
	adds r0, r7, r3
	ldr r0, [r0]
	bl sub_80094A4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r2, r1, #0x1f
	cmp r2, #0
	beq _080E05C0
	b _080E075E
_080E05C0:
	movs r4, #0xd7
	lsls r4, r4, #2
	adds r0, r7, r4
	ldr r1, [r0]
	str r2, [r0]
	ldr r5, [sp, #0x7c]
	str r1, [r5]
	b _080E08F4
_080E05D0:
	movs r6, #1
	movs r1, #0xdb
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r0, [r0]
	bl sub_8050D34
	cmp r0, #3
	beq _080E05E4
	b _080E075E
_080E05E4:
	movs r2, #0xd9
	lsls r2, r2, #2
	adds r1, r7, r2
	b _080E072E
_080E05EC:
	movs r6, #1
	movs r3, #0xdb
	lsls r3, r3, #2
	adds r4, r7, r3
	ldr r0, [r4]
	bl sub_8050D34
	cmp r0, #0
	beq _080E0600
	b _080E075E
_080E0600:
	movs r5, #0
	ldr r0, [r4]
	cmp r5, r0
	beq _080E0612
	cmp r0, #0
	beq _080E0612
	movs r1, #3
	bl sub_8050D0C
_080E0612:
	str r5, [r4]
	b _080E0728
_080E0616:
	movs r6, #1
	movs r5, #0xdb
	lsls r5, r5, #2
	adds r0, r7, r5
	ldr r0, [r0]
	bl sub_8050D34
	cmp r0, #3
	beq _080E062A
	b _080E075E
_080E062A:
	movs r0, #0xd9
	lsls r0, r0, #2
	adds r1, r7, r0
	b _080E072E
_080E0632:
	movs r6, #1
	movs r1, #0xdb
	lsls r1, r1, #2
	adds r4, r7, r1
	ldr r0, [r4]
	bl sub_8050D34
	cmp r0, #6
	bne _080E0646
	b _080E075E
_080E0646:
	ldr r0, [r4]
	bl sub_8050DF0
	adds r1, r0, #0
	adds r0, r7, #0
	bl sub_80E09E4
	movs r2, #0xd9
	lsls r2, r2, #2
	adds r1, r7, r2
	b _080E072E
_080E065C:
	movs r3, #0xdc
	lsls r3, r3, #2
	adds r0, r7, r3
	ldr r0, [r0]
	bl sub_80094A4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r4, r1, #0x1f
	cmp r4, #0
	bne _080E075E
	movs r5, #0xe8
	lsls r5, r5, #2
	adds r1, r7, r5
	movs r0, #1
	strb r0, [r1]
	mov r0, sl
	bl sub_8008918
	ldrh r2, [r0]
	ldr r1, _080E06B4 @ =0x0000F0FF
	ands r1, r2
	strh r1, [r0]
	mov r0, sl
	bl sub_8008918
	adds r0, #0x50
	ldrh r2, [r0]
	ldr r1, _080E06B8 @ =0x0000FF3F
	ands r1, r2
	strh r1, [r0]
	mov r0, sl
	bl sub_8008918
	adds r0, #0x4c
	strh r4, [r0]
	movs r1, #0xd9
	lsls r1, r1, #2
	adds r0, r7, r1
	str r4, [r0]
	b _080E075E
	.align 2, 0
_080E06B4: .4byte 0x0000F0FF
_080E06B8: .4byte 0x0000FF3F
_080E06BC:
	movs r2, #0xdc
	lsls r2, r2, #2
	adds r0, r7, r2
	ldr r0, [r0]
	bl sub_80094A4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r1, r1, #0x1f
	cmp r1, #0
	bne _080E075E
	movs r3, #0xd9
	lsls r3, r3, #2
	adds r0, r7, r3
	b _080E075C
_080E06DE:
	movs r4, #0xe6
	lsls r4, r4, #2
	adds r1, r7, r4
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0
	bne _080E075E
	movs r5, #0xd9
	lsls r5, r5, #2
	adds r0, r7, r5
	b _080E075C
_080E06FA:
	movs r0, #0xe7
	lsls r0, r0, #2
	adds r4, r7, r0
	ldr r0, [r4]
	bl sub_8032370
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080E075E
	movs r1, #0
	str r1, [r4]
	b _080E0756
_080E0712:
	movs r3, #0xda
	lsls r3, r3, #2
	adds r0, r7, r3
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r1, [r1, #0x28]
	bl sub_80D3910
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080E075E
_080E0728:
	movs r4, #0xd9
	lsls r4, r4, #2
	adds r1, r7, r4
_080E072E:
	movs r0, #0
	str r0, [r1]
	b _080E075E
_080E0734:
	movs r5, #0xda
	lsls r5, r5, #2
	adds r0, r7, r5
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r2, [r1, #0x40]
	movs r1, #0x5e
	bl sub_80D3914
	ldr r1, [r0, #0x14]
	ldr r1, [r1, #0x3c]
	bl sub_80D3910
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0
	bne _080E075E
_080E0756:
	movs r2, #0xd9
	lsls r2, r2, #2
	adds r0, r7, r2
_080E075C:
	str r1, [r0]
_080E075E:
	cmp r6, #0
	bne _080E077C
	mov r0, sl
	bl sub_80088DC
	add r1, sp, #0x70
	str r0, [sp, #0x70]
	movs r3, #0xda
	lsls r3, r3, #2
	adds r0, r7, r3
	ldr r0, [r0]
	ldr r2, [r0]
	ldr r2, [r2, #0xc]
	bl sub_80D3914
_080E077C:
	movs r4, #0xe8
	lsls r4, r4, #2
	adds r0, r7, r4
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E078A
	b _080E08A8
_080E078A:
	mov r0, sl
	bl sub_8008910
	adds r2, r0, #0
	ldr r5, _080E07D4 @ =0x000003A1
	adds r0, r7, r5
	ldrb r0, [r0]
	ldr r1, _080E07D8 @ =0x0000FFFF
	cmp r0, #0
	beq _080E07A0
	movs r1, #0
_080E07A0:
	adds r6, r2, #0
	add r0, sp, #0xc
	movs r2, #0xa0
	lsls r2, r2, #0x13
	movs r3, #2
	bl sub_8008F60
	mov r0, sp
	adds r0, #0xc
	str r0, [sp, #0x90]
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080E07DC
	cmp r1, #0
	beq _080E07CC
	adds r0, r1, #0
	add r1, sp, #0xc
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080E07CC:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080E08E0
	.align 2, 0
_080E07D4: .4byte 0x000003A1
_080E07D8: .4byte 0x0000FFFF
_080E07DC:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x78]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x74]
	add r1, sp, #0x78
	add r0, sp, #0x74
	cmp r4, #1
	bhs _080E07F4
	adds r0, r1, #0
_080E07F4:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080E0812
	lsls r4, r0, #4
	adds r0, r4, #0
	bl sub_80D01F8
	mov sb, r4
	cmp r0, #0
	bne _080E0816
	mov r0, sb
	bl sub_80D3BC0
	b _080E0816
_080E0812:
	movs r0, #0
	mov sb, r0
_080E0816:
	adds r5, r0, #0
	str r5, [sp, #0xa8]
	ldr r2, [r6]
	mov ip, r5
	cmp r2, r8
	beq _080E083E
_080E0822:
	mov r5, ip
	cmp r5, #0
	beq _080E0834
	mov r0, ip
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080E0834:
	adds r2, #0x10
	movs r0, #0x10
	add ip, r0
	cmp r2, r8
	bne _080E0822
_080E083E:
	mov r5, ip
	ldr r0, [sp, #0x78]
	cmp r0, #1
	bne _080E085A
	cmp r5, #0
	beq _080E0856
	adds r0, r5, #0
	ldr r1, [sp, #0x90]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080E0856:
	adds r5, #0x10
	b _080E0882
_080E085A:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _080E0880
_080E0862:
	cmp r2, #0
	beq _080E0872
	adds r0, r2, #0
	ldr r1, [sp, #0x90]
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080E0872:
	movs r5, #1
	rsbs r5, r5, #0
	add r8, r5
	adds r2, #0x10
	mov r0, r8
	cmp r0, #0
	bne _080E0862
_080E0880:
	adds r5, r2, #0
_080E0882:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080E0892
_080E088C:
	adds r1, #0x10
	cmp r1, r2
	bne _080E088C
_080E0892:
	cmp r0, #0
	beq _080E089A
	bl sub_80D0260
_080E089A:
	ldr r0, [sp, #0xa8]
	add r0, sb
	ldr r1, [sp, #0xa8]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
	b _080E08E0
_080E08A8:
	mov r0, sl
	bl sub_8008910
	adds r6, r0, #0
	mov r0, sl
	bl sub_8008918
	adds r5, r0, #0
	mov r0, sl
	bl sub_8008920
	adds r4, r0, #0
	mov r0, sl
	bl sub_8008940
	str r6, [sp, #0xc]
	str r5, [sp, #0x10]
	str r4, [sp, #0x14]
	str r0, [sp, #0x18]
	movs r2, #0xda
	lsls r2, r2, #2
	adds r0, r7, r2
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r2, [r1, #0x10]
	add r1, sp, #0xc
	bl sub_80D3914
_080E08E0:
	movs r3, #0xdc
	lsls r3, r3, #2
	adds r0, r7, r3
	ldr r0, [r0]
	bl sub_80093AC
	mov r0, sl
	bl sub_80087C8
	b _080E044A
_080E08F4:
	ldr r0, [sp, #0x7c]
	add sp, #0xac
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80E0908
sub_80E0908: @ 0x080E0908
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _080E09A4 @ =gUnknown_080E7708
	str r0, [r4, #8]
	movs r0, #0xd6
	lsls r0, r0, #2
	adds r1, r4, r0
	ldr r0, _080E09A8 @ =gUnknown_080E7714
	str r0, [r1]
	ldr r0, _080E09AC @ =gUnknown_080E7728
	str r0, [r4]
	movs r1, #0xe2
	lsls r1, r1, #2
	adds r0, r4, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _080E0930
	bl sub_80D0260
_080E0930:
	movs r1, #0xdc
	lsls r1, r1, #2
	adds r0, r4, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _080E0942
	movs r1, #3
	bl sub_8009324
_080E0942:
	movs r1, #0xdb
	lsls r1, r1, #2
	adds r0, r4, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _080E0954
	movs r1, #3
	bl sub_8050D0C
_080E0954:
	movs r1, #0xda
	lsls r1, r1, #2
	adds r0, r4, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E096C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E096C:
	movs r1, #0xd7
	lsls r1, r1, #2
	adds r0, r4, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E0984
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E0984:
	adds r0, r4, #0
	adds r0, #0xc
	movs r1, #0
	bl sub_803EEC8
	adds r0, r4, #4
	movs r1, #0
	bl sub_80086BC
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_80007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E09A4: .4byte gUnknown_080E7708
_080E09A8: .4byte gUnknown_080E7714
_080E09AC: .4byte gUnknown_080E7728

	thumb_func_start sub_80E09B0
sub_80E09B0: @ 0x080E09B0
	push {lr}
	bl sub_80007EC
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E09BC
sub_80E09BC: @ 0x080E09BC
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080E09D4
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E09D4:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E09E4
sub_80E09E4: @ 0x080E09E4
	push {r4, lr}
	adds r4, r1, #0
	adds r1, r0, #0
	adds r1, #0x30
	movs r2, #0xe0
	lsls r2, r2, #1
	adds r3, r0, r2
	ldr r2, [r3]
	cmp r2, #0x63
	bhi _080E0A02
	lsls r0, r2, #2
	adds r0, r1, r0
	str r4, [r0]
	adds r0, r2, #1
	str r0, [r3]
_080E0A02:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_80E0A08
sub_80E0A08: @ 0x080E0A08
	push {r4, r5, lr}
	adds r2, r0, #0
	ldr r4, [r2, #0xc]
	ldr r3, [r2, #0x10]
	ldrb r0, [r2, #0x15]
	cmp r0, #0
	beq _080E0A68
	ldrb r0, [r2, #0x14]
	lsls r0, r0, #5
	adds r5, r3, r0
	ldrb r0, [r2, #0x16]
	movs r1, #1
	eors r0, r1
	strb r0, [r2, #0x16]
	lsls r0, r0, #2
	ldr r2, _080E0A64 @ =0x0F0F0F0F
	lsls r2, r0
	mvns r1, r2
_080E0A2C:
	ldm r4!, {r0}
	ands r0, r2
	stm r3!, {r0}
	ldm r4!, {r0}
	ands r0, r1
	stm r3!, {r0}
	ldm r4!, {r0}
	ands r0, r2
	stm r3!, {r0}
	ldm r4!, {r0}
	ands r0, r1
	stm r3!, {r0}
	ldm r4!, {r0}
	ands r0, r2
	stm r3!, {r0}
	ldm r4!, {r0}
	ands r0, r1
	stm r3!, {r0}
	ldm r4!, {r0}
	ands r0, r2
	stm r3!, {r0}
	ldm r4!, {r0}
	ands r0, r1
	stm r3!, {r0}
	cmp r3, r5
	bne _080E0A2C
	movs r0, #1
	b _080E0A76
	.align 2, 0
_080E0A64: .4byte 0x0F0F0F0F
_080E0A68:
	ldrb r2, [r2, #0x14]
	lsls r2, r2, #3
	adds r0, r4, #0
	adds r1, r3, #0
	bl sub_80D374C
	movs r0, #0
_080E0A76:
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_80E0A7C
sub_80E0A7C: @ 0x080E0A7C
	push {lr}
	bl sub_80098AC
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E0A88
sub_80E0A88: @ 0x080E0A88
	push {lr}
	bl sub_80098AC
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E0A94
sub_80E0A94: @ 0x080E0A94
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r7, r0, #0
	ldr r1, _080E0C2C @ =gUnknown_0871E7A8
	bl sub_805E6CC
	adds r4, r7, #0
	adds r4, #0x30
	adds r0, r4, #0
	bl sub_8007128
	adds r0, r4, #0
	bl sub_800736C
	str r0, [r4, #4]
	adds r0, r7, #0
	adds r0, #0x38
	movs r4, #0
	str r4, [r7, #0x38]
	str r4, [r0, #4]
	ldr r6, _080E0C30 @ =gUnknown_080E77D0
	str r6, [r0, #8]
	str r4, [r0, #0xc]
	str r4, [r0, #0x10]
	str r4, [r0, #0x14]
	movs r0, #0x34
	bl sub_80005D4
	adds r5, r0, #0
	bl sub_8007874
	adds r0, r5, #0
	movs r1, #2
	bl sub_8007B54
	str r0, [r5, #4]
	adds r0, r5, #0
	adds r0, #8
	str r4, [r5, #8]
	str r4, [r0, #4]
	str r6, [r0, #8]
	str r4, [r0, #0xc]
	str r4, [r0, #0x10]
	str r4, [r0, #0x14]
	adds r0, #0x18
	adds r1, r7, #0
	movs r2, #7
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	str r5, [r7, #0x50]
	adds r1, r7, #0
	adds r1, #0x54
	movs r0, #6
	movs r3, #0
	movs r2, #1
	rsbs r2, r2, #0
_080E0B0C:
	stm r1!, {r3}
	subs r0, #1
	cmp r0, r2
	bne _080E0B0C
	movs r0, #0x70
	adds r0, r0, r7
	mov r8, r0
	movs r2, #0xdd
	lsls r2, r2, #2
	adds r4, r7, r2
	movs r5, #2
	movs r0, #0
	mov sb, r0
	movs r6, #1
	rsbs r6, r6, #0
_080E0B2A:
	adds r0, r4, #0
	bl sub_8007874
	mov r2, sb
	str r2, [r4, #4]
	adds r4, #8
	subs r5, #1
	cmp r5, r6
	bne _080E0B2A
	movs r0, #0xc7
	lsls r0, r0, #2
	add r0, r8
	movs r2, #5
	movs r1, #0
	ldr r4, _080E0C30 @ =gUnknown_080E77D0
	movs r3, #1
	rsbs r3, r3, #0
_080E0B4C:
	str r1, [r0]
	str r1, [r0, #4]
	str r4, [r0, #8]
	str r1, [r0, #0xc]
	str r1, [r0, #0x10]
	str r1, [r0, #0x14]
	adds r0, #0x18
	subs r2, #1
	cmp r2, r3
	bne _080E0B4C
	movs r6, #0
	movs r5, #0xc2
	lsls r5, r5, #2
	add r5, r8
_080E0B68:
	lsls r4, r6, #3
	add r4, r8
	movs r0, #0xc1
	lsls r0, r0, #2
	adds r4, r4, r0
	ldr r1, [r5]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #3
	bl sub_8007B54
	str r0, [r5]
	adds r5, #8
	adds r6, #1
	cmp r6, #2
	bls _080E0B68
	movs r2, #0
	mov r8, r2
	movs r6, #0
	movs r0, #0x54
	adds r0, r0, r7
	mov sb, r0
_080E0B98:
	movs r0, #0x34
	bl sub_80005D4
	adds r4, r0, #0
	ldr r1, _080E0C34 @ =gUnknown_080F19CC
	mov r2, r8
	lsls r0, r2, #2
	adds r0, r0, r1
	ldr r5, [r0]
	adds r0, r4, #0
	bl sub_8007874
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007B54
	str r0, [r4, #4]
	adds r1, r4, #0
	adds r1, #8
	str r6, [r4, #8]
	str r6, [r1, #4]
	ldr r0, _080E0C30 @ =gUnknown_080E77D0
	str r0, [r1, #8]
	str r6, [r1, #0xc]
	str r6, [r1, #0x10]
	str r6, [r1, #0x14]
	adds r0, r4, #0
	adds r0, #0x20
	adds r1, r7, #0
	adds r2, r5, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl sub_805E824
	mov r0, sb
	ldr r5, [r0]
	cmp r4, r5
	beq _080E0C08
	cmp r5, #0
	beq _080E0C08
	adds r0, r5, #0
	adds r0, #8
	movs r1, #2
	bl sub_80098AC
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007C28
	adds r0, r5, #0
	movs r1, #2
	bl sub_80079E8
	adds r0, r5, #0
	bl sub_8000608
_080E0C08:
	mov r2, sb
	adds r2, #4
	mov sb, r2
	subs r2, #4
	stm r2!, {r4}
	movs r0, #1
	add r8, r0
	mov r2, r8
	cmp r2, #6
	bls _080E0B98
	adds r0, r7, #0
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080E0C2C: .4byte gUnknown_0871E7A8
_080E0C30: .4byte gUnknown_080E77D0
_080E0C34: .4byte gUnknown_080F19CC

	thumb_func_start sub_80E0C38
sub_80E0C38: @ 0x080E0C38
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r6, r0, #0
	str r1, [sp]
	movs r0, #0x70
	adds r0, r0, r6
	mov r8, r0
	movs r1, #0xe3
	lsls r1, r1, #2
	adds r0, r6, r1
	cmp r0, #0
	beq _080E0C78
	adds r1, #0x90
	adds r4, r6, r1
	cmp r0, r4
	beq _080E0C78
	movs r0, #0xe3
	lsls r0, r0, #2
	adds r5, r6, r0
_080E0C66:
	subs r4, #0x18
	ldr r0, [r4, #8]
	ldr r2, [r0, #0xc]
	adds r0, r4, #0
	movs r1, #0
	bl sub_80D3914
	cmp r5, r4
	bne _080E0C66
_080E0C78:
	movs r5, #0xc1
	lsls r5, r5, #2
	add r5, r8
	adds r7, r6, #0
	adds r7, #0x54
	movs r1, #0x38
	adds r1, r1, r6
	mov sl, r1
	movs r0, #0x30
	adds r0, r0, r6
	mov sb, r0
	cmp r5, #0
	beq _080E0CB2
	movs r4, #0xc7
	lsls r4, r4, #2
	add r4, r8
	cmp r5, r4
	beq _080E0CB2
_080E0C9C:
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	cmp r5, r4
	bne _080E0C9C
_080E0CB2:
	cmp r7, #0
	beq _080E0CE8
	adds r5, r6, #0
	adds r5, #0x70
_080E0CBA:
	cmp r7, r5
	beq _080E0CE8
	subs r5, #4
	ldr r4, [r5]
	cmp r4, #0
	beq _080E0CBA
	adds r0, r4, #0
	adds r0, #8
	movs r1, #2
	bl sub_80098AC
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	adds r0, r4, #0
	bl sub_8000608
	b _080E0CBA
_080E0CE8:
	ldr r4, [r6, #0x50]
	cmp r4, #0
	beq _080E0D0E
	adds r0, r4, #0
	adds r0, #8
	movs r1, #2
	bl sub_80098AC
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	adds r0, r4, #0
	bl sub_8000608
_080E0D0E:
	mov r0, sl
	movs r1, #2
	bl sub_80098AC
	mov r0, sb
	ldr r1, [r0, #4]
	bl sub_80073E0
	mov r0, sb
	movs r1, #2
	bl sub_8007184
	ldr r0, _080E0D4C @ =gUnknown_080E5A28
	str r0, [r6]
	movs r0, #1
	ldr r1, [sp]
	ands r0, r1
	cmp r0, #0
	beq _080E0D3A
	adds r0, r6, #0
	bl sub_8000608
_080E0D3A:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080E0D4C: .4byte gUnknown_080E5A28

	thumb_func_start sub_80E0D50
sub_80E0D50: @ 0x080E0D50
	push {lr}
	ldr r3, [r0, #0xc]
	ldr r1, [r0, #0x10]
	ldr r2, [r0, #0x14]
	adds r0, r3, #0
	bl sub_8008E64
	movs r0, #0
	pop {r1}
	bx r1

	thumb_func_start sub_80E0D64
sub_80E0D64: @ 0x080E0D64
	push {lr}
	bl sub_80098AC
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E0D70
sub_80E0D70: @ 0x080E0D70
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r5, r1, #0
	movs r1, #0xd0
	lsls r1, r1, #2
	adds r0, r6, r1
	movs r1, #2
	bl sub_80098AC
	movs r0, #0xce
	lsls r0, r0, #2
	adds r4, r6, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r1, #0xc7
	lsls r1, r1, #2
	adds r0, r6, r1
	movs r1, #2
	bl sub_80098AC
	movs r0, #0xc5
	lsls r0, r0, #2
	adds r4, r6, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r1, #0xbf
	lsls r1, r1, #2
	adds r0, r6, r1
	movs r1, #2
	bl sub_80098AC
	movs r0, #0xbd
	lsls r0, r0, #2
	adds r4, r6, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r1, #0xb6
	lsls r1, r1, #2
	adds r0, r6, r1
	movs r1, #2
	bl sub_80098AC
	movs r0, #0xb4
	lsls r0, r0, #2
	adds r4, r6, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r1, #0xad
	lsls r1, r1, #2
	adds r0, r6, r1
	movs r1, #2
	bl sub_80098AC
	movs r0, #0xaa
	lsls r0, r0, #2
	adds r4, r6, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r1, #0xc8
	lsls r1, r1, #1
	adds r0, r6, r1
	movs r1, #2
	bl sub_80098AC
	movs r0, #0xc2
	lsls r0, r0, #1
	adds r4, r6, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	adds r0, r6, #0
	adds r0, #0x68
	movs r1, #2
	bl sub_80098AC
	adds r4, r6, #0
	adds r4, #0x60
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	ldr r0, _080E0E7C @ =gUnknown_080E5A28
	str r0, [r6, #0x30]
	str r0, [r6]
	movs r0, #1
	ands r0, r5
	cmp r0, #0
	beq _080E0E74
	adds r0, r6, #0
	bl sub_8000608
_080E0E74:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080E0E7C: .4byte gUnknown_080E5A28

	thumb_func_start sub_80E0E80
sub_80E0E80: @ 0x080E0E80
	push {r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r7, r2, #0
	subs r3, r1, r6
_080E0E88:
	cmp r3, #0
	ble _080E0EAC
	asrs r2, r3, #1
	adds r5, r6, r2
	ldrb r1, [r5]
	movs r4, #0
	ldr r0, [r7]
	cmp r1, r0
	bhs _080E0E9C
	movs r4, #1
_080E0E9C:
	cmp r4, #0
	beq _080E0EA8
	adds r6, r5, #1
	subs r0, r3, r2
	subs r3, r0, #1
	b _080E0E88
_080E0EA8:
	adds r3, r2, #0
	b _080E0E88
_080E0EAC:
	adds r0, r6, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_80E0EB4
sub_80E0EB4: @ 0x080E0EB4
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	subs r1, r1, r5
	asrs r1, r1, #3
	cmp r1, #0
	ble _080E0EE6
	ldr r6, [r2]
_080E0EC2:
	asrs r3, r1, #1
	lsls r0, r3, #3
	adds r2, r5, r0
	movs r4, #0
	ldr r0, [r2]
	cmp r0, r6
	bge _080E0ED2
	movs r4, #1
_080E0ED2:
	cmp r4, #0
	beq _080E0EE0
	adds r5, r2, #0
	adds r5, #8
	subs r0, r1, r3
	subs r1, r0, #1
	b _080E0EE2
_080E0EE0:
	adds r1, r3, #0
_080E0EE2:
	cmp r1, #0
	bgt _080E0EC2
_080E0EE6:
	adds r0, r5, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80E0EF0
sub_80E0EF0: @ 0x080E0EF0
	push {lr}
	bl sub_803EEC8
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E0EFC
sub_80E0EFC: @ 0x080E0EFC
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #1
	ldr r2, _080E0F44 @ =0x19999999
	movs r1, #0xa
	cmp r5, #0xa
	blo _080E0F1C
	adds r4, #1
_080E0F0C:
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r1, r0, #1
	cmp r5, r1
	blo _080E0F1C
	adds r4, #1
	cmp r1, r2
	bls _080E0F0C
_080E0F1C:
	movs r0, #0
	strb r0, [r4]
_080E0F20:
	subs r4, #1
	adds r0, r5, #0
	movs r1, #0xa
	bl sub_80D0EDA
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #1
	subs r1, r5, r1
	adds r1, #0x30
	strb r1, [r4]
	adds r5, r0, #0
	cmp r5, #0
	bne _080E0F20
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E0F44: .4byte 0x19999999

	thumb_func_start sub_80E0F48
sub_80E0F48: @ 0x080E0F48
	push {r4, r5, lr}
	ldr r5, [r0, #0xc]
	movs r0, #0
	ldr r1, [r5]
	cmp r1, #0
	bne _080E0F56
	movs r0, #1
_080E0F56:
	cmp r0, #0
	bne _080E0F86
	adds r4, r5, #4
	lsls r1, r1, #4
	adds r1, r4, r1
	adds r0, r4, #0
	bl sub_8009094
	ldr r0, [r5]
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r5, r0
	adds r2, r0, #0
	adds r1, r4, #0
	ldr r3, [r5]
	cmp r1, r2
	beq _080E0F7E
_080E0F78:
	adds r1, #0x10
	cmp r1, r2
	bne _080E0F78
_080E0F7E:
	subs r0, r0, r4
	asrs r0, r0, #4
	subs r0, r3, r0
	str r0, [r5]
_080E0F86:
	movs r0, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80E0F90
sub_80E0F90: @ 0x080E0F90
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	ldr r0, [r0, #0xc]
	mov r8, r0
	movs r1, #0
_080E0F9E:
	movs r7, #0
	lsls r0, r1, #2
	adds r1, #1
	mov sb, r1
	mov r1, r8
	adds r6, r0, r1
	adds r6, #8
_080E0FAC:
	ldr r0, [r6]
	lsls r1, r7, #4
	adds r5, r0, r1
	ldrb r0, [r5, #0xc]
	cmp r0, #0
	beq _080E0FE2
	adds r2, r5, #4
	ldr r1, [r2, #4]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _080E0FDE
	ldr r4, [r5]
	adds r4, #4
	adds r0, r2, #0
	bl sub_8007D4C
	adds r1, r0, #0
	lsls r1, r1, #5
	ldr r0, _080E1014 @ =0x06010000
	adds r1, r1, r0
	adds r0, r4, #0
	movs r2, #0x40
	bl sub_80D374C
_080E0FDE:
	movs r0, #0
	strb r0, [r5, #0xc]
_080E0FE2:
	adds r7, #1
	cmp r7, #6
	ble _080E0FAC
	mov r1, sb
	cmp r1, #2
	ble _080E0F9E
	mov r1, r8
	ldrb r0, [r1, #0x19]
	cmp r0, #0
	beq _080E0FFA
	movs r0, #0
	strb r0, [r1, #0x19]
_080E0FFA:
	mov r1, r8
	ldrb r0, [r1, #0x1a]
	cmp r0, #0
	beq _080E1006
	movs r0, #0
	strb r0, [r1, #0x1a]
_080E1006:
	movs r0, #0
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080E1014: .4byte 0x06010000

	thumb_func_start sub_80E1018
sub_80E1018: @ 0x080E1018
	push {lr}
	bl sub_80098AC
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E1024
sub_80E1024: @ 0x080E1024
	push {lr}
	bl sub_80098AC
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E1030
sub_80E1030: @ 0x080E1030
	push {lr}
	bl sub_80098AC
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E103C
sub_80E103C: @ 0x080E103C
	push {lr}
	adds r2, r0, #0
	ldr r0, _080E1058 @ =gUnknown_080E78F0
	str r0, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080E1052
	adds r0, r2, #0
	bl sub_8000608
_080E1052:
	pop {r0}
	bx r0
	.align 2, 0
_080E1058: .4byte gUnknown_080E78F0

	thumb_func_start sub_80E105C
sub_80E105C: @ 0x080E105C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov r8, r0
	mov sl, r1
	adds r0, #8
	cmp r0, #0
	beq _080E10B8
	mov r7, r8
	adds r7, #0x14
	cmp r0, r7
	beq _080E10B8
_080E1078:
	subs r7, #4
	ldr r0, [r7]
	movs r1, #8
	add r1, r8
	mov sb, r1
	cmp r0, #0
	beq _080E10B4
	adds r6, r0, #0
	adds r5, r6, #0
	adds r5, #0x70
	cmp r6, r5
	beq _080E10AE
_080E1090:
	subs r5, #0x10
	adds r4, r5, #4
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	ldr r0, [r5]
	bl sub_8000608
	cmp r6, r5
	bne _080E1090
_080E10AE:
	adds r0, r6, #0
	bl sub_8000608
_080E10B4:
	cmp sb, r7
	bne _080E1078
_080E10B8:
	ldr r0, _080E10DC @ =gUnknown_080E7908
	mov r1, r8
	str r0, [r1]
	movs r0, #1
	mov r1, sl
	ands r0, r1
	cmp r0, #0
	beq _080E10CE
	mov r0, r8
	bl sub_8000608
_080E10CE:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080E10DC: .4byte gUnknown_080E7908

	thumb_func_start sub_80E10E0
sub_80E10E0: @ 0x080E10E0
	push {lr}
	bl sub_80098AC
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E10EC
sub_80E10EC: @ 0x080E10EC
	movs r0, #1
	bx lr
_080E10F0:
	.byte 0x00, 0x20, 0x70, 0x47, 0x00, 0x20, 0x70, 0x47

	thumb_func_start sub_80E10F8
sub_80E10F8: @ 0x080E10F8
	push {lr}
	adds r2, r0, #0
	ldr r0, _080E1114 @ =gUnknown_080E78F0
	str r0, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080E110E
	adds r0, r2, #0
	bl sub_8000608
_080E110E:
	pop {r0}
	bx r0
	.align 2, 0
_080E1114: .4byte gUnknown_080E78F0
_080E1118:
	.byte 0x00, 0x20, 0x70, 0x47, 0x70, 0x47, 0x00, 0x00
	.byte 0x70, 0x47, 0x00, 0x00, 0x70, 0x47, 0x00, 0x00

	thumb_func_start sub_80E1128
sub_80E1128: @ 0x080E1128
	push {lr}
	adds r2, r0, #0
	ldr r0, _080E1144 @ =gUnknown_080E7908
	str r0, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080E113E
	adds r0, r2, #0
	bl sub_8000608
_080E113E:
	pop {r0}
	bx r0
	.align 2, 0
_080E1144: .4byte gUnknown_080E7908

	thumb_func_start sub_80E1148
sub_80E1148: @ 0x080E1148
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r4, r5, #0
	adds r4, #0xb0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	ldr r0, _080E1188 @ =gUnknown_080E5A28
	str r0, [r5, #0x10]
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_80086BC
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080E1188: .4byte gUnknown_080E5A28

	thumb_func_start sub_80E118C
sub_80E118C: @ 0x080E118C
	push {r4, r5, r6, lr}
	sub sp, #0x24
	adds r6, r0, #0
	cmp r2, #0xff
	bne _080E11D4
	add r4, sp, #0x20
	ldrh r1, [r1, #4]
	adds r0, r4, #0
	bl sub_800DF50
	adds r0, r4, #0
	bl sub_800DF58
	adds r5, r0, #0
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, #0x1f
	bls _080E11B4
	movs r4, #0x1f
_080E11B4:
	mov r0, sp
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_80D3994
	mov r0, sp
	adds r1, r0, r4
	movs r0, #0
	strb r0, [r1]
	movs r0, #1
	strb r0, [r6]
	adds r0, r6, #4
	mov r1, sp
	bl sub_80D3B28
	b _080E11E2
_080E11D4:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	strb r0, [r6]
	adds r0, r6, #4
	bl sub_80D3B28
_080E11E2:
	adds r0, r6, #0
	add sp, #0x24
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_80E11EC
sub_80E11EC: @ 0x080E11EC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r6, r0, #0
	mov sl, r1
	ldr r0, _080E148C @ =0x000023A0
	adds r1, r6, r0
	ldr r0, _080E1490 @ =gUnknown_080E76F8
	str r0, [r1]
	movs r1, #0xa8
	lsls r1, r1, #3
	adds r5, r6, r1
	movs r2, #0xa9
	lsls r2, r2, #3
	adds r0, r6, r2
	cmp r0, #0
	beq _080E1232
	adds r1, #0x18
	adds r4, r6, r1
	cmp r0, r4
	beq _080E1232
	adds r7, r0, #0
_080E121C:
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	cmp r7, r4
	bne _080E121C
_080E1232:
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007C28
	adds r0, r5, #0
	movs r1, #2
	bl sub_80079E8
	movs r2, #0xa0
	lsls r2, r2, #3
	adds r0, r6, r2
	movs r1, #0xe0
	adds r1, r1, r6
	mov r8, r1
	adds r7, r6, #0
	adds r7, #0xb0
	movs r2, #0x80
	adds r2, r2, r6
	mov sb, r2
	cmp r0, #0
	beq _080E1296
	movs r1, #0xa8
	lsls r1, r1, #3
	adds r5, r6, r1
	cmp r0, r5
	beq _080E1296
_080E1266:
	subs r5, #0x10
	adds r4, r5, #0
	adds r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007C28
	adds r0, r5, #0
	movs r1, #2
	bl sub_80079E8
	movs r2, #0xa0
	lsls r2, r2, #3
	adds r0, r6, r2
	cmp r0, r5
	bne _080E1266
_080E1296:
	movs r0, #0x9f
	lsls r0, r0, #3
	adds r4, r6, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r1, #0x9e
	lsls r1, r1, #3
	adds r4, r6, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r2, #0x9d
	lsls r2, r2, #3
	adds r4, r6, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r0, #0x9c
	lsls r0, r0, #3
	adds r4, r6, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r1, #0x9b
	lsls r1, r1, #3
	adds r4, r6, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r2, #0x9a
	lsls r2, r2, #3
	adds r4, r6, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r0, #0x99
	lsls r0, r0, #3
	adds r4, r6, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r1, #0x98
	lsls r1, r1, #3
	adds r4, r6, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r2, #0x97
	lsls r2, r2, #3
	adds r4, r6, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r0, #0x96
	lsls r0, r0, #3
	adds r4, r6, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r1, #0x95
	lsls r1, r1, #3
	adds r4, r6, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r2, #0x94
	lsls r2, r2, #3
	adds r4, r6, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r0, #0x93
	lsls r0, r0, #3
	adds r4, r6, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r1, #0x92
	lsls r1, r1, #3
	adds r4, r6, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r2, #0x91
	lsls r2, r2, #3
	adds r4, r6, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r0, #0x90
	lsls r0, r0, #3
	adds r4, r6, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r1, #0x8f
	lsls r1, r1, #3
	adds r4, r6, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r2, #0x8e
	lsls r2, r2, #3
	adds r4, r6, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r0, #0x8d
	lsls r0, r0, #3
	adds r4, r6, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r2, #0xe8
	lsls r2, r2, #1
	adds r1, r6, r2
	ldr r0, _080E1494 @ =gUnknown_080E5A28
	str r0, [r1]
	subs r2, #0x30
	adds r1, r6, r2
	str r0, [r1]
	subs r2, #0x30
	adds r1, r6, r2
	str r0, [r1]
	subs r2, #0x30
	adds r1, r6, r2
	str r0, [r1]
	subs r2, #0x30
	adds r1, r6, r2
	str r0, [r1]
	mov r1, r8
	str r0, [r1]
	str r0, [r7]
	mov r2, sb
	str r0, [r2]
	str r0, [r6, #0x50]
	str r0, [r6, #0x20]
	ldr r0, [r6, #0x10]
	cmp r0, #0
	beq _080E1474
	movs r1, #3
	bl sub_8050D0C
_080E1474:
	adds r0, r6, #0
	mov r1, sl
	bl sub_80086BC
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080E148C: .4byte 0x000023A0
_080E1490: .4byte gUnknown_080E76F8
_080E1494: .4byte gUnknown_080E5A28

	thumb_func_start sub_80E1498
sub_80E1498: @ 0x080E1498
	push {lr}
	adds r2, r0, #0
	ldr r0, _080E14B4 @ =gUnknown_080E76F8
	str r0, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080E14AE
	adds r0, r2, #0
	bl sub_8000608
_080E14AE:
	pop {r0}
	bx r0
	.align 2, 0
_080E14B4: .4byte gUnknown_080E76F8

	thumb_func_start sub_80E14B8
sub_80E14B8: @ 0x080E14B8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x28
	adds r7, r0, #0
	adds r3, r1, #0
	adds r0, r2, #0
	subs r0, #0xfa
	cmp r0, #5
	bhi _080E1578
	lsls r0, r0, #2
	ldr r1, _080E14D4 @ =_080E14D8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080E14D4: .4byte _080E14D8
_080E14D8: @ jump table
	.4byte _080E14F0 @ case 0
	.4byte _080E1588 @ case 1
	.4byte _080E1528 @ case 2
	.4byte _080E152C @ case 3
	.4byte _080E1530 @ case 4
	.4byte _080E1534 @ case 5
_080E14F0:
	ldr r0, [r3, #0x14]
	mov r1, sp
	movs r2, #0
	bl sub_804EC84
	add r5, sp, #8
	mov r0, sp
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, #0x1f
	bls _080E150A
	movs r4, #0x1f
_080E150A:
	adds r0, r5, #0
	mov r1, sp
	adds r2, r4, #0
	bl sub_80D3994
	adds r1, r5, r4
	movs r0, #0
	strb r0, [r1]
	movs r0, #1
	strb r0, [r7]
	adds r0, r7, #4
	adds r1, r5, #0
	bl sub_80D3B28
	b _080E15B6
_080E1528:
	ldr r1, [r3, #4]
	b _080E1536
_080E152C:
	ldr r1, [r3, #8]
	b _080E1536
_080E1530:
	ldr r1, [r3, #0xc]
	b _080E1536
_080E1534:
	ldr r1, [r3, #0x10]
_080E1536:
	cmp r1, #0x80
	beq _080E1588
	add r6, sp, #8
	movs r0, #0xd
	adds r5, r1, #0
	muls r5, r0, r5
	ldr r0, _080E1574 @ =gUnknown_080FA796
	adds r5, r5, r0
	adds r0, r5, #0
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, #0x1f
	bls _080E1554
	movs r4, #0x1f
_080E1554:
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_80D3994
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
	movs r0, #1
	strb r0, [r7]
	adds r0, r7, #4
	adds r1, r6, #0
	bl sub_80D3B28
	b _080E15B6
	.align 2, 0
_080E1574: .4byte gUnknown_080FA796
_080E1578:
	add r1, sp, #8
	movs r0, #0
	strb r0, [r1]
	strb r0, [r7]
	adds r0, r7, #4
	bl sub_80D3B28
	b _080E15B6
_080E1588:
	ldr r5, [r3, #0x18]
	adds r0, r5, #0
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, #0x1f
	bls _080E1598
	movs r4, #0x1f
_080E1598:
	mov r0, sp
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_80D3994
	mov r0, sp
	adds r1, r0, r4
	movs r0, #0
	strb r0, [r1]
	movs r0, #1
	strb r0, [r7]
	adds r0, r7, #4
	mov r1, sp
	bl sub_80D3B28
_080E15B6:
	adds r0, r7, #0
	add sp, #0x28
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_80E15C0
sub_80E15C0: @ 0x080E15C0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r7, r0, #0
	mov r8, r1
	movs r0, #0xa7
	lsls r0, r0, #5
	adds r1, r7, r0
	ldr r0, _080E181C @ =gUnknown_080E76F8
	str r0, [r1]
	movs r1, #0xcb
	lsls r1, r1, #3
	adds r0, r7, r1
	cmp r0, #0
	beq _080E162C
	movs r2, #0xd7
	lsls r2, r2, #3
	adds r5, r7, r2
	cmp r0, r5
	beq _080E162C
_080E15E8:
	subs r5, #0x18
	adds r0, r5, #0
	adds r0, #8
	cmp r0, #0
	beq _080E1612
	adds r4, r5, #0
	adds r4, #0x18
	cmp r0, r4
	beq _080E1612
	adds r6, r0, #0
_080E15FC:
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	cmp r6, r4
	bne _080E15FC
_080E1612:
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl sub_8007C28
	adds r0, r5, #0
	movs r1, #2
	bl sub_80079E8
	movs r1, #0xcb
	lsls r1, r1, #3
	adds r0, r7, r1
	cmp r0, r5
	bne _080E15E8
_080E162C:
	movs r2, #0xca
	lsls r2, r2, #3
	adds r4, r7, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r0, #0xc9
	lsls r0, r0, #3
	adds r4, r7, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r1, #0xc8
	lsls r1, r1, #3
	adds r4, r7, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r2, #0xc7
	lsls r2, r2, #3
	adds r4, r7, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r0, #0xc6
	lsls r0, r0, #3
	adds r4, r7, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r1, #0xc5
	lsls r1, r1, #3
	adds r4, r7, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r2, #0xc4
	lsls r2, r2, #3
	adds r4, r7, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r0, #0xc3
	lsls r0, r0, #3
	adds r4, r7, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r1, #0xc2
	lsls r1, r1, #3
	adds r4, r7, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r2, #0xc1
	lsls r2, r2, #3
	adds r4, r7, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r0, #0xc0
	lsls r0, r0, #3
	adds r4, r7, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r1, #0xbf
	lsls r1, r1, #3
	adds r4, r7, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r2, #0xbe
	lsls r2, r2, #3
	adds r4, r7, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r0, #0xbd
	lsls r0, r0, #3
	adds r4, r7, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r1, #0xbc
	lsls r1, r1, #3
	adds r4, r7, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r2, #0xbb
	lsls r2, r2, #3
	adds r4, r7, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r0, #0xba
	lsls r0, r0, #3
	adds r4, r7, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r1, #0xb9
	lsls r1, r1, #3
	adds r4, r7, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r2, #0xb8
	lsls r2, r2, #3
	adds r4, r7, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r0, #0xd0
	lsls r0, r0, #1
	adds r1, r7, r0
	ldr r0, _080E1820 @ =gUnknown_080E5A28
	str r0, [r1]
	movs r2, #0xb8
	lsls r2, r2, #1
	adds r1, r7, r2
	str r0, [r1]
	subs r2, #0x30
	adds r1, r7, r2
	str r0, [r1]
	subs r2, #0x30
	adds r1, r7, r2
	str r0, [r1]
	adds r1, r7, #0
	adds r1, #0xe0
	str r0, [r1]
	subs r1, #0x30
	str r0, [r1]
	subs r1, #0x30
	str r0, [r1]
	str r0, [r7, #0x50]
	str r0, [r7, #0x20]
	ldr r0, [r7, #0x10]
	cmp r0, #0
	beq _080E180A
	movs r1, #3
	bl sub_8050D0C
_080E180A:
	adds r0, r7, #0
	mov r1, r8
	bl sub_80086BC
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080E181C: .4byte gUnknown_080E76F8
_080E1820: .4byte gUnknown_080E5A28

	thumb_func_start sub_80E1824
sub_80E1824: @ 0x080E1824
	push {lr}
	adds r2, r0, #0
	ldr r0, _080E1840 @ =gUnknown_080E76F8
	str r0, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080E183A
	adds r0, r2, #0
	bl sub_8000608
_080E183A:
	pop {r0}
	bx r0
	.align 2, 0
_080E1840: .4byte gUnknown_080E76F8

	thumb_func_start sub_80E1844
sub_80E1844: @ 0x080E1844
	push {r4, r5, r6, lr}
	sub sp, #0x20
	adds r6, r0, #0
	cmp r2, #0xff
	bne _080E188C
	ldr r0, [r1, #4]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #2
	ldr r0, _080E1888 @ =gUnknown_080FB000
	adds r5, r1, r0
	adds r0, r5, #0
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, #0x1f
	bls _080E1868
	movs r4, #0x1f
_080E1868:
	mov r0, sp
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_80D3994
	mov r0, sp
	adds r1, r0, r4
	movs r0, #0
	strb r0, [r1]
	movs r0, #1
	strb r0, [r6]
	adds r0, r6, #4
	mov r1, sp
	bl sub_80D3B28
	b _080E189A
	.align 2, 0
_080E1888: .4byte gUnknown_080FB000
_080E188C:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	strb r0, [r6]
	adds r0, r6, #4
	bl sub_80D3B28
_080E189A:
	adds r0, r6, #0
	add sp, #0x20
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_80E18A4
sub_80E18A4: @ 0x080E18A4
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	ldr r0, _080E1958 @ =0x00000AEC
	adds r1, r5, r0
	ldr r0, _080E195C @ =gUnknown_080E76F8
	str r0, [r1]
	movs r0, #0xa2
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r0, #0x9e
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r0, #0x9a
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r0, #0x96
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r0, #0x92
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r0, #0x8e
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	ldr r0, _080E1960 @ =gUnknown_080E5A28
	str r0, [r5, #0x50]
	str r0, [r5, #0x20]
	ldr r0, [r5, #0x10]
	cmp r0, #0
	beq _080E1948
	movs r1, #3
	bl sub_8050D0C
_080E1948:
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_80086BC
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080E1958: .4byte 0x00000AEC
_080E195C: .4byte gUnknown_080E76F8
_080E1960: .4byte gUnknown_080E5A28

	thumb_func_start sub_80E1964
sub_80E1964: @ 0x080E1964
	push {lr}
	adds r2, r0, #0
	ldr r0, _080E1980 @ =gUnknown_080E76F8
	str r0, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080E197A
	adds r0, r2, #0
	bl sub_8000608
_080E197A:
	pop {r0}
	bx r0
	.align 2, 0
_080E1980: .4byte gUnknown_080E76F8

	thumb_func_start sub_80E1984
sub_80E1984: @ 0x080E1984
	push {lr}
	adds r2, r0, #0
	ldr r0, _080E19A0 @ =gUnknown_080E5A28
	str r0, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080E199A
	adds r0, r2, #0
	bl sub_8000608
_080E199A:
	pop {r0}
	bx r0
	.align 2, 0
_080E19A0: .4byte gUnknown_080E5A28

	thumb_func_start sub_80E19A4
sub_80E19A4: @ 0x080E19A4
	push {r4, r5, r6, lr}
	sub sp, #0x20
	adds r5, r0, #0
	cmp r2, #0xff
	bne _080E19DE
	ldr r6, [r1, #4]
	adds r0, r6, #0
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, #0x1f
	bls _080E19BE
	movs r4, #0x1f
_080E19BE:
	mov r0, sp
	adds r1, r6, #0
	adds r2, r4, #0
	bl sub_80D3994
	mov r0, sp
	adds r1, r0, r4
	movs r0, #0
	strb r0, [r1]
	movs r0, #1
	strb r0, [r5]
	adds r0, r5, #4
	mov r1, sp
	bl sub_80D3B28
	b _080E19EC
_080E19DE:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	strb r0, [r5]
	adds r0, r5, #4
	bl sub_80D3B28
_080E19EC:
	adds r0, r5, #0
	add sp, #0x20
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80E19F8
sub_80E19F8: @ 0x080E19F8
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _080E1A20 @ =0x00006428
	adds r1, r4, r0
	ldr r0, _080E1A24 @ =gUnknown_080E76F8
	str r0, [r1]
	ldr r0, [r4, #0x10]
	cmp r0, #0
	beq _080E1A12
	movs r1, #3
	bl sub_8050D0C
_080E1A12:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_80086BC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E1A20: .4byte 0x00006428
_080E1A24: .4byte gUnknown_080E76F8

	thumb_func_start sub_80E1A28
sub_80E1A28: @ 0x080E1A28
	push {lr}
	adds r2, r0, #0
	ldr r0, _080E1A44 @ =gUnknown_080E76F8
	str r0, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080E1A3E
	adds r0, r2, #0
	bl sub_8000608
_080E1A3E:
	pop {r0}
	bx r0
	.align 2, 0
_080E1A44: .4byte gUnknown_080E76F8

	thumb_func_start sub_80E1A48
sub_80E1A48: @ 0x080E1A48
	push {lr}
	bl sub_8076EA8
	movs r0, #1
	pop {r1}
	bx r1

	thumb_func_start sub_80E1A54
sub_80E1A54: @ 0x080E1A54
	push {lr}
	ldr r2, _080E1A68 @ =0x000009C4
	adds r3, r0, r2
	ldr r2, _080E1A6C @ =gUnknown_080E5A28
	str r2, [r3]
	bl sub_8076E0C
	pop {r0}
	bx r0
	.align 2, 0
_080E1A68: .4byte 0x000009C4
_080E1A6C: .4byte gUnknown_080E5A28

	thumb_func_start sub_80E1A70
sub_80E1A70: @ 0x080E1A70
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x24
	adds r7, r0, #0
	bl sub_8076EA8
	movs r0, #0
	mov r8, r0
	ldr r1, _080E1C08 @ =0x00001268
	adds r0, r7, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	adds r0, #0x30
	movs r3, #0xb2
	lsls r3, r3, #3
	adds r1, r7, r3
	movs r2, #0
	ldrsh r1, [r1, r2]
	cmp r0, r1
	bge _080E1AB4
	adds r2, r1, #0
	ldr r3, _080E1C08 @ =0x00001268
	adds r1, r7, r3
_080E1AA4:
	adds r1, #0x10
	movs r0, #1
	add r8, r0
	movs r3, #0
	ldrsh r0, [r1, r3]
	adds r0, #0x30
	cmp r0, r2
	blt _080E1AA4
_080E1AB4:
	ldr r1, _080E1C0C @ =0x00001264
	adds r0, r7, r1
	ldr r0, [r0]
	ldr r2, _080E1C10 @ =0x0000163C
	adds r2, r7, r2
	str r2, [sp, #0x20]
	cmp r8, r0
	bhs _080E1B40
	adds r3, r1, #0
	adds r3, r3, r7
	mov sl, r3
	movs r0, #0xb2
	lsls r0, r0, #3
	adds r0, r0, r7
	mov sb, r0
	mov r1, r8
	lsls r0, r1, #4
	ldr r2, _080E1C08 @ =0x00001268
	adds r0, r0, r2
	adds r5, r0, r7
_080E1ADC:
	movs r3, #0
	ldrsh r1, [r5, r3]
	mov r2, sb
	movs r3, #0
	ldrsh r0, [r2, r3]
	adds r0, #0xa0
	cmp r1, r0
	bgt _080E1B32
	ldr r0, [r7]
	bl sub_8008920
	adds r4, r0, #0
	movs r0, #0
	ldrsh r2, [r5, r0]
	mov r1, sb
	movs r3, #0
	ldrsh r0, [r1, r3]
	subs r2, r2, r0
	ldr r1, [r5, #4]
	movs r0, #2
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r0, #0
	str r0, [sp, #0xc]
	add r6, sp, #0x10
	adds r0, r6, #0
	movs r3, #0x10
	bl sub_804EA94
	ldrb r2, [r4]
	cmp r2, #0x7f
	bhi _080E1B32
	lsls r1, r2, #3
	adds r1, #4
	adds r1, r4, r1
	ldr r0, [sp, #0x10]
	str r0, [r1]
	ldrh r0, [r6, #4]
	strh r0, [r1, #4]
	adds r0, r2, #1
	strb r0, [r4]
_080E1B32:
	adds r5, #0x10
	movs r0, #1
	add r8, r0
	mov r1, sl
	ldr r0, [r1]
	cmp r8, r0
	blo _080E1ADC
_080E1B40:
	movs r2, #0
	mov r8, r2
	ldr r3, [sp, #0x20]
	movs r1, #0
	ldrsh r0, [r3, r1]
	adds r0, #0x30
	movs r2, #0xb2
	lsls r2, r2, #3
	adds r1, r7, r2
	movs r3, #0
	ldrsh r1, [r1, r3]
	cmp r0, r1
	bge _080E1B70
	adds r2, r1, #0
	ldr r0, _080E1C10 @ =0x0000163C
	adds r1, r7, r0
_080E1B60:
	adds r1, #0x10
	movs r3, #1
	add r8, r3
	movs r3, #0
	ldrsh r0, [r1, r3]
	adds r0, #0x30
	cmp r0, r2
	blt _080E1B60
_080E1B70:
	ldr r1, _080E1C14 @ =0x00001638
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r8, r0
	bhs _080E1BF4
	adds r2, r1, #0
	adds r2, r2, r7
	mov sl, r2
	movs r3, #0xb2
	lsls r3, r3, #3
	adds r3, r3, r7
	mov sb, r3
	mov r1, r8
	lsls r0, r1, #4
	ldr r2, _080E1C10 @ =0x0000163C
	adds r0, r0, r2
	adds r6, r0, r7
_080E1B92:
	movs r3, #0
	ldrsh r1, [r6, r3]
	mov r2, sb
	movs r3, #0
	ldrsh r0, [r2, r3]
	adds r0, #0xa0
	cmp r1, r0
	bgt _080E1BE6
	ldr r0, [r7]
	bl sub_8008920
	adds r4, r0, #0
	movs r0, #0
	ldrsh r2, [r6, r0]
	mov r1, sb
	movs r3, #0
	ldrsh r0, [r1, r3]
	subs r2, r2, r0
	ldr r1, [r6, #4]
	movs r0, #1
	str r0, [sp]
	str r0, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	str r0, [sp, #0xc]
	add r5, sp, #0x18
	adds r0, r5, #0
	movs r3, #5
	bl sub_804EA94
	ldrb r2, [r4]
	cmp r2, #0x7f
	bhi _080E1BE6
	lsls r1, r2, #3
	adds r1, #4
	adds r1, r4, r1
	ldr r0, [sp, #0x18]
	str r0, [r1]
	ldrh r0, [r5, #4]
	strh r0, [r1, #4]
	adds r0, r2, #1
	strb r0, [r4]
_080E1BE6:
	adds r6, #0x10
	movs r0, #1
	add r8, r0
	mov r1, sl
	ldr r0, [r1]
	cmp r8, r0
	blo _080E1B92
_080E1BF4:
	movs r0, #1
	add sp, #0x24
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080E1C08: .4byte 0x00001268
_080E1C0C: .4byte 0x00001264
_080E1C10: .4byte 0x0000163C
_080E1C14: .4byte 0x00001638

	thumb_func_start sub_80E1C18
sub_80E1C18: @ 0x080E1C18
	push {r4, lr}
	adds r2, r0, #0
	adds r3, r1, #0
	ldr r0, _080E1C60 @ =0x00001638
	adds r1, r2, r0
	ldr r0, [r1]
	lsls r0, r0, #4
	adds r0, #4
	adds r1, r1, r0
	ldr r4, _080E1C64 @ =0x0000163C
	adds r0, r2, r4
	cmp r0, r1
	beq _080E1C38
_080E1C32:
	adds r0, #0x10
	cmp r0, r1
	bne _080E1C32
_080E1C38:
	ldr r0, _080E1C68 @ =0x00001264
	adds r1, r2, r0
	ldr r0, [r1]
	lsls r0, r0, #4
	adds r0, #4
	adds r1, r1, r0
	ldr r4, _080E1C6C @ =0x00001268
	adds r0, r2, r4
	cmp r0, r1
	beq _080E1C52
_080E1C4C:
	adds r0, #0x10
	cmp r0, r1
	bne _080E1C4C
_080E1C52:
	adds r0, r2, #0
	adds r1, r3, #0
	bl sub_8076E0C
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E1C60: .4byte 0x00001638
_080E1C64: .4byte 0x0000163C
_080E1C68: .4byte 0x00001264
_080E1C6C: .4byte 0x00001268

	thumb_func_start sub_80E1C70
sub_80E1C70: @ 0x080E1C70
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	adds r7, r0, #0
	bl sub_8076EA8
	movs r0, #0
	mov r8, r0
	ldr r1, _080E1D4C @ =0x00002168
	adds r0, r7, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	adds r0, #0x30
	movs r3, #0xb2
	lsls r3, r3, #3
	adds r1, r7, r3
	movs r2, #0
	ldrsh r1, [r1, r2]
	cmp r0, r1
	bge _080E1CB4
	adds r2, r1, #0
	ldr r3, _080E1D4C @ =0x00002168
	adds r1, r7, r3
_080E1CA4:
	adds r1, #0x10
	movs r0, #1
	add r8, r0
	movs r3, #0
	ldrsh r0, [r1, r3]
	adds r0, #0x30
	cmp r0, r2
	blt _080E1CA4
_080E1CB4:
	ldr r1, _080E1D50 @ =0x00002164
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r8, r0
	bhs _080E1D38
	adds r2, r1, #0
	adds r2, r2, r7
	mov sl, r2
	movs r3, #0xb2
	lsls r3, r3, #3
	adds r3, r3, r7
	mov sb, r3
	mov r1, r8
	lsls r0, r1, #4
	ldr r2, _080E1D4C @ =0x00002168
	adds r0, r0, r2
	adds r5, r0, r7
_080E1CD6:
	movs r3, #0
	ldrsh r1, [r5, r3]
	mov r2, sb
	movs r3, #0
	ldrsh r0, [r2, r3]
	adds r0, #0xa0
	cmp r1, r0
	bgt _080E1D2A
	ldr r0, [r7]
	bl sub_8008920
	adds r4, r0, #0
	movs r0, #0
	ldrsh r2, [r5, r0]
	mov r1, sb
	movs r3, #0
	ldrsh r0, [r1, r3]
	subs r2, r2, r0
	ldr r1, [r5, #4]
	movs r0, #1
	str r0, [sp]
	str r0, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	str r0, [sp, #0xc]
	add r6, sp, #0x10
	adds r0, r6, #0
	movs r3, #5
	bl sub_804EA94
	ldrb r2, [r4]
	cmp r2, #0x7f
	bhi _080E1D2A
	lsls r1, r2, #3
	adds r1, #4
	adds r1, r4, r1
	ldr r0, [sp, #0x10]
	str r0, [r1]
	ldrh r0, [r6, #4]
	strh r0, [r1, #4]
	adds r0, r2, #1
	strb r0, [r4]
_080E1D2A:
	adds r5, #0x10
	movs r0, #1
	add r8, r0
	mov r1, sl
	ldr r0, [r1]
	cmp r8, r0
	blo _080E1CD6
_080E1D38:
	movs r0, #1
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080E1D4C: .4byte 0x00002168
_080E1D50: .4byte 0x00002164

	thumb_func_start sub_80E1D54
sub_80E1D54: @ 0x080E1D54
	push {r4, lr}
	adds r2, r0, #0
	adds r3, r1, #0
	ldr r0, _080E1D84 @ =0x00002164
	adds r1, r2, r0
	ldr r0, [r1]
	lsls r0, r0, #4
	adds r0, #4
	adds r1, r1, r0
	ldr r4, _080E1D88 @ =0x00002168
	adds r0, r2, r4
	cmp r0, r1
	beq _080E1D74
_080E1D6E:
	adds r0, #0x10
	cmp r0, r1
	bne _080E1D6E
_080E1D74:
	adds r0, r2, #0
	adds r1, r3, #0
	bl sub_8076E0C
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E1D84: .4byte 0x00002164
_080E1D88: .4byte 0x00002168

	thumb_func_start sub_80E1D8C
sub_80E1D8C: @ 0x080E1D8C
	push {lr}
	bl sub_8076E0C
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E1D98
sub_80E1D98: @ 0x080E1D98
	push {lr}
	bl sub_8076E0C
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E1DA4
sub_80E1DA4: @ 0x080E1DA4
	push {lr}
	bl sub_8076E0C
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E1DB0
sub_80E1DB0: @ 0x080E1DB0
	push {lr}
	bl sub_8076E0C
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E1DBC
sub_80E1DBC: @ 0x080E1DBC
	push {lr}
	bl sub_8076EA8
	movs r0, #1
	pop {r1}
	bx r1

	thumb_func_start sub_80E1DC8
sub_80E1DC8: @ 0x080E1DC8
	push {lr}
	bl sub_8076E0C
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E1DD4
sub_80E1DD4: @ 0x080E1DD4
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	movs r0, #0x92
	lsls r0, r0, #1
	adds r1, r4, r0
	ldr r0, [r1]
	lsls r0, r0, #3
	adds r0, #4
	adds r1, r1, r0
	movs r2, #0x94
	lsls r2, r2, #1
	adds r0, r4, r2
	ldr r2, _080E1E20 @ =gUnknown_080E5A28
	cmp r0, r1
	beq _080E1DFA
_080E1DF4:
	adds r0, #8
	cmp r0, r1
	bne _080E1DF4
_080E1DFA:
	str r2, [r4, #0xc]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _080E1E12
	ldr r2, _080E1E24 @ =0x000005B4
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E1E12:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_80086BC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E1E20: .4byte gUnknown_080E5A28
_080E1E24: .4byte 0x000005B4

	thumb_func_start sub_80E1E28
sub_80E1E28: @ 0x080E1E28
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r5, r0, #0
	mov sb, r1
	ldr r1, _080E1F80 @ =0x00004120
	adds r0, r5, r1
	cmp r0, #0
	beq _080E1E5E
	adds r1, #0x50
	adds r4, r5, r1
	cmp r0, r4
	beq _080E1E5E
	ldr r0, _080E1F80 @ =0x00004120
	adds r6, r5, r0
_080E1E48:
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	cmp r6, r4
	bne _080E1E48
_080E1E5E:
	ldr r1, _080E1F84 @ =0x000040D0
	adds r0, r5, r1
	ldr r1, _080E1F88 @ =0x00003FA8
	adds r7, r5, r1
	ldr r1, _080E1F8C @ =0x00003EA4
	adds r1, r1, r5
	mov r8, r1
	cmp r0, #0
	beq _080E1E92
	ldr r1, _080E1F80 @ =0x00004120
	adds r4, r5, r1
	cmp r0, r4
	beq _080E1E92
	ldr r0, _080E1F84 @ =0x000040D0
	adds r6, r5, r0
_080E1E7C:
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	cmp r6, r4
	bne _080E1E7C
_080E1E92:
	ldr r1, _080E1F90 @ =0x000040C8
	adds r4, r5, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	ldr r0, _080E1F94 @ =0x000040C0
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	ldr r1, _080E1F98 @ =0x000040B8
	adds r4, r5, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	ldr r0, _080E1F9C @ =0x000040B0
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	ldr r1, _080E1FA0 @ =0x00003FA4
	adds r2, r5, r1
	ldr r1, [r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r2, r0
	adds r0, r7, #0
	cmp r0, r2
	beq _080E1EFE
_080E1EF8:
	adds r0, #0xc
	cmp r0, r2
	bne _080E1EF8
_080E1EFE:
	ldr r0, _080E1FA4 @ =0x00003EA0
	adds r1, r5, r0
	ldr r0, [r1]
	lsls r0, r0, #4
	adds r0, #4
	adds r1, r1, r0
	mov r0, r8
	cmp r0, r1
	beq _080E1F16
_080E1F10:
	adds r0, #0x10
	cmp r0, r1
	bne _080E1F10
_080E1F16:
	movs r1, #0x9a
	lsls r1, r1, #1
	adds r0, r5, r1
	movs r1, #2
	bl sub_8050D0C
	ldr r0, _080E1FA8 @ =gUnknown_080E5A28
	str r0, [r5, #0x54]
	str r0, [r5, #0x24]
	ldr r0, [r5, #0x1c]
	cmp r0, #0
	beq _080E1F5A
	adds r4, r0, #0
	adds r0, #0x28
	movs r1, #2
	bl sub_8075DEC
	adds r0, r4, #0
	adds r0, #0x18
	ldr r2, [r0, #4]
	ldr r1, [r4, #0x18]
	cmp r1, r2
	beq _080E1F4A
_080E1F44:
	adds r1, #0x40
	cmp r1, r2
	bne _080E1F44
_080E1F4A:
	ldr r0, [r0]
	cmp r0, #0
	beq _080E1F54
	bl sub_80D0260
_080E1F54:
	adds r0, r4, #0
	bl sub_8000608
_080E1F5A:
	ldr r1, [r5, #8]
	cmp r1, #0
	beq _080E1F6C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E1F6C:
	adds r0, r5, #0
	mov r1, sb
	bl sub_80086BC
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080E1F80: .4byte 0x00004120
_080E1F84: .4byte 0x000040D0
_080E1F88: .4byte 0x00003FA8
_080E1F8C: .4byte 0x00003EA4
_080E1F90: .4byte 0x000040C8
_080E1F94: .4byte 0x000040C0
_080E1F98: .4byte 0x000040B8
_080E1F9C: .4byte 0x000040B0
_080E1FA0: .4byte 0x00003FA4
_080E1FA4: .4byte 0x00003EA0
_080E1FA8: .4byte gUnknown_080E5A28

	thumb_func_start sub_80E1FAC
sub_80E1FAC: @ 0x080E1FAC
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r4, r5, #0
	adds r4, #0x30
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	ldr r0, [r5, #0xc]
	cmp r0, #0
	beq _080E2008
	movs r1, #3
	bl sub_8050D0C
_080E2008:
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_80086BC
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E2018
sub_80E2018: @ 0x080E2018
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r7, r1, #0
	adds r0, #0xe0
	cmp r0, #0
	beq _080E203E
	movs r1, #0xd0
	lsls r1, r1, #1
	adds r4, r5, r1
	cmp r0, r4
	beq _080E203E
	adds r6, r0, #0
_080E2030:
	subs r4, #0x30
	adds r0, r4, #0
	movs r1, #0
	bl sub_80E20C0
	cmp r6, r4
	bne _080E2030
_080E203E:
	adds r0, r5, #0
	adds r0, #0xd0
	ldr r2, [r0, #4]
	ldr r1, [r0]
	adds r4, r5, #0
	adds r4, #0xa0
	adds r6, r5, #0
	adds r6, #0x18
	cmp r1, r2
	beq _080E2058
_080E2052:
	adds r1, #0x1c
	cmp r1, r2
	bne _080E2052
_080E2058:
	ldr r0, [r0]
	cmp r0, #0
	beq _080E2062
	bl sub_80D0260
_080E2062:
	ldr r0, _080E2090 @ =gUnknown_080E5A28
	str r0, [r4]
	str r0, [r5, #0x20]
	adds r0, r6, #0
	movs r1, #2
	bl sub_80756D0
	ldr r1, [r5, #0xc]
	cmp r1, #0
	beq _080E2082
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E2082:
	adds r0, r5, #0
	adds r1, r7, #0
	bl sub_80086BC
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080E2090: .4byte gUnknown_080E5A28

	thumb_func_start sub_80E2094
sub_80E2094: @ 0x080E2094
	sub sp, #0xc
	adds r2, r0, #0
	movs r0, #0
	str r0, [r2]
	str r0, [r2, #4]
	adds r1, r2, #0
	adds r1, #8
	str r0, [r1, #4]
	adds r1, #8
	str r0, [r2, #0x10]
	str r0, [r1, #4]
	adds r1, #8
	str r0, [r1, #4]
	adds r1, #8
	str r0, [r2, #0x20]
	str r0, [r1, #4]
	adds r1, #8
	str r0, [r1, #4]
	adds r0, r2, #0
	add sp, #0xc
	bx lr
	.align 2, 0

	thumb_func_start sub_80E20C0
sub_80E20C0: @ 0x080E20C0
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, [r4, #0x20]
	cmp r0, #0
	beq _080E20D0
	bl sub_80D0260
_080E20D0:
	ldr r0, [r4, #0x10]
	cmp r0, #0
	beq _080E20DA
	bl sub_80D0260
_080E20DA:
	ldr r0, [r4]
	cmp r0, #0
	beq _080E20E4
	bl sub_80D0260
_080E20E4:
	movs r0, #1
	ands r0, r5
	cmp r0, #0
	beq _080E20F2
	adds r0, r4, #0
	bl sub_8000608
_080E20F2:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80E20F8
sub_80E20F8: @ 0x080E20F8
	push {lr}
	bl sub_8070C88
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E2104
sub_80E2104: @ 0x080E2104
	push {lr}
	bl sub_8070C88
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E2110
sub_80E2110: @ 0x080E2110
	push {lr}
	bl sub_8070C88
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E211C
sub_80E211C: @ 0x080E211C
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	movs r0, #0x92
	lsls r0, r0, #1
	adds r1, r4, r0
	ldr r0, [r1]
	lsls r0, r0, #3
	adds r0, #4
	adds r1, r1, r0
	movs r2, #0x94
	lsls r2, r2, #1
	adds r0, r4, r2
	ldr r2, _080E2168 @ =gUnknown_080E5A28
	cmp r0, r1
	beq _080E2142
_080E213C:
	adds r0, #8
	cmp r0, r1
	bne _080E213C
_080E2142:
	str r2, [r4, #0xc]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _080E215A
	ldr r2, _080E216C @ =0x000005B4
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E215A:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_80086BC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E2168: .4byte gUnknown_080E5A28
_080E216C: .4byte 0x000005B4

	thumb_func_start sub_80E2170
sub_80E2170: @ 0x080E2170
	push {lr}
	adds r2, r0, #0
	ldr r3, [r2, #0xc]
	ldr r0, [r3, #8]
	str r0, [r2, #0xc]
	ldr r0, [r3, #8]
	cmp r0, #0
	beq _080E2182
	str r2, [r0, #4]
_080E2182:
	ldr r0, [r2, #4]
	str r0, [r3, #4]
	ldr r0, [r1]
	cmp r2, r0
	bne _080E2190
	str r3, [r1]
	b _080E219E
_080E2190:
	ldr r1, [r2, #4]
	ldr r0, [r1, #8]
	cmp r2, r0
	bne _080E219C
	str r3, [r1, #8]
	b _080E219E
_080E219C:
	str r3, [r1, #0xc]
_080E219E:
	str r2, [r3, #8]
	str r3, [r2, #4]
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E21A8
sub_80E21A8: @ 0x080E21A8
	push {lr}
	adds r2, r0, #0
	ldr r3, [r2, #8]
	ldr r0, [r3, #0xc]
	str r0, [r2, #8]
	ldr r0, [r3, #0xc]
	cmp r0, #0
	beq _080E21BA
	str r2, [r0, #4]
_080E21BA:
	ldr r0, [r2, #4]
	str r0, [r3, #4]
	ldr r0, [r1]
	cmp r2, r0
	bne _080E21C8
	str r3, [r1]
	b _080E21D6
_080E21C8:
	ldr r1, [r2, #4]
	ldr r0, [r1, #0xc]
	cmp r2, r0
	bne _080E21D4
	str r3, [r1, #0xc]
	b _080E21D6
_080E21D4:
	str r3, [r1, #8]
_080E21D6:
	str r2, [r3, #0xc]
	str r3, [r2, #4]
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E21E0
sub_80E21E0: @ 0x080E21E0
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	movs r0, #0
	strb r0, [r4]
	ldr r0, [r5]
	cmp r4, r0
	beq _080E2286
	ldr r2, [r4, #4]
	ldrb r0, [r2]
	cmp r0, #0
	bne _080E2286
	movs r6, #1
	movs r7, #0
_080E21FC:
	ldr r1, [r2, #4]
	ldr r0, [r1, #8]
	cmp r2, r0
	bne _080E2238
	ldr r0, [r1, #0xc]
	cmp r0, #0
	beq _080E2210
	ldrb r1, [r0]
	cmp r1, #0
	beq _080E2242
_080E2210:
	ldr r1, [r4, #4]
	ldr r0, [r1, #0xc]
	cmp r4, r0
	bne _080E2222
	adds r4, r1, #0
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_80E2170
_080E2222:
	ldr r0, [r4, #4]
	strb r6, [r0]
	ldr r0, [r4, #4]
	ldr r0, [r0, #4]
	strb r7, [r0]
	ldr r0, [r4, #4]
	ldr r0, [r0, #4]
	adds r1, r5, #0
	bl sub_80E21A8
	b _080E2278
_080E2238:
	cmp r0, #0
	beq _080E2252
	ldrb r1, [r0]
	cmp r1, #0
	bne _080E2252
_080E2242:
	strb r6, [r2]
	strb r6, [r0]
	ldr r0, [r4, #4]
	ldr r0, [r0, #4]
	strb r1, [r0]
	ldr r0, [r4, #4]
	ldr r4, [r0, #4]
	b _080E2278
_080E2252:
	ldr r1, [r4, #4]
	ldr r0, [r1, #8]
	cmp r4, r0
	bne _080E2264
	adds r4, r1, #0
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_80E21A8
_080E2264:
	ldr r0, [r4, #4]
	strb r6, [r0]
	ldr r0, [r4, #4]
	ldr r0, [r0, #4]
	strb r7, [r0]
	ldr r0, [r4, #4]
	ldr r0, [r0, #4]
	adds r1, r5, #0
	bl sub_80E2170
_080E2278:
	ldr r0, [r5]
	cmp r4, r0
	beq _080E2286
	ldr r2, [r4, #4]
	ldrb r0, [r2]
	cmp r0, #0
	beq _080E21FC
_080E2286:
	ldr r1, [r5]
	movs r0, #1
	strb r0, [r1]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E2294
sub_80E2294: @ 0x080E2294
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r6, r1, #0
	ldr r4, [sp, #0x14]
	adds r5, r3, #0
	ldr r0, [r6, #4]
	cmp r5, r0
	beq _080E22BE
	ldr r0, [sp, #0x18]
	cmp r0, #0
	bne _080E22FE
	cmp r2, #0
	bne _080E22BE
	movs r2, #0
	ldr r1, [r4]
	ldr r0, [r5, #0x10]
	cmp r1, r0
	bhs _080E22BA
	movs r2, #1
_080E22BA:
	cmp r2, #0
	beq _080E22FE
_080E22BE:
	movs r0, #0x18
	bl sub_80D01F8
	adds r2, r0, #0
	cmp r2, #0
	bne _080E22D2
	movs r0, #0x18
	bl sub_80D3BC0
	adds r2, r0, #0
_080E22D2:
	adds r1, r2, #0
	adds r1, #0x10
	cmp r1, #0
	beq _080E22E2
	ldr r0, [r4]
	str r0, [r2, #0x10]
	ldr r0, [r4, #4]
	str r0, [r1, #4]
_080E22E2:
	adds r4, r2, #0
	str r4, [r5, #8]
	ldr r1, [r6, #4]
	cmp r5, r1
	bne _080E22F4
	str r4, [r5, #4]
	ldr r0, [r6, #4]
	str r4, [r0, #0xc]
	b _080E2330
_080E22F4:
	ldr r0, [r1, #8]
	cmp r5, r0
	bne _080E2330
	str r4, [r1, #8]
	b _080E2330
_080E22FE:
	movs r0, #0x18
	bl sub_80D01F8
	adds r2, r0, #0
	cmp r2, #0
	bne _080E2312
	movs r0, #0x18
	bl sub_80D3BC0
	adds r2, r0, #0
_080E2312:
	adds r1, r2, #0
	adds r1, #0x10
	cmp r1, #0
	beq _080E2322
	ldr r0, [r4]
	str r0, [r2, #0x10]
	ldr r0, [r4, #4]
	str r0, [r1, #4]
_080E2322:
	adds r4, r2, #0
	str r4, [r5, #0xc]
	ldr r1, [r6, #4]
	ldr r0, [r1, #0xc]
	cmp r5, r0
	bne _080E2330
	str r4, [r1, #0xc]
_080E2330:
	str r5, [r4, #4]
	movs r0, #0
	str r0, [r4, #8]
	str r0, [r4, #0xc]
	ldr r1, [r6, #4]
	adds r1, #4
	adds r0, r4, #0
	bl sub_80E21E0
	ldr r0, [r6, #8]
	adds r0, #1
	str r0, [r6, #8]
	str r4, [r7]
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80E2354
sub_80E2354: @ 0x080E2354
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2]
	cmp r0, #0
	bne _080E236A
	ldr r0, [r2, #4]
	ldr r0, [r0, #4]
	cmp r0, r2
	bne _080E236A
	ldr r2, [r2, #0xc]
	b _080E238A
_080E236A:
	ldr r0, [r2, #8]
	cmp r0, #0
	beq _080E2380
	adds r1, r0, #0
	b _080E2376
_080E2374:
	ldr r1, [r1, #0xc]
_080E2376:
	ldr r0, [r1, #0xc]
	cmp r0, #0
	bne _080E2374
	b _080E2388
_080E237E:
	adds r2, r1, #0
_080E2380:
	ldr r1, [r2, #4]
	ldr r0, [r1, #8]
	cmp r2, r0
	beq _080E237E
_080E2388:
	adds r2, r1, #0
_080E238A:
	adds r0, r2, #0
	pop {r1}
	bx r1

	thumb_func_start sub_80E2390
sub_80E2390: @ 0x080E2390
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x14
	adds r6, r0, #0
	mov r8, r1
	adds r7, r2, #0
	ldr r4, [r1, #4]
	ldr r5, [r4, #4]
	movs r0, #1
	cmp r5, #0
	beq _080E23C6
	ldr r2, [r7]
_080E23AA:
	adds r4, r5, #0
	movs r1, #0
	ldr r0, [r4, #0x10]
	cmp r2, r0
	bhs _080E23B6
	movs r1, #1
_080E23B6:
	adds r0, r1, #0
	cmp r0, #0
	beq _080E23C0
	ldr r5, [r4, #8]
	b _080E23C2
_080E23C0:
	ldr r5, [r4, #0xc]
_080E23C2:
	cmp r5, #0
	bne _080E23AA
_080E23C6:
	str r4, [sp, #8]
	cmp r0, #0
	beq _080E2400
	mov r1, r8
	ldr r0, [r1, #4]
	ldr r0, [r0, #8]
	str r0, [sp, #0xc]
	movs r1, #0
	cmp r4, r0
	bne _080E23DC
	movs r1, #1
_080E23DC:
	cmp r1, #0
	beq _080E23F8
	str r7, [sp]
	movs r0, #0
	str r0, [sp, #4]
	add r0, sp, #0x10
	mov r1, r8
	adds r2, r5, #0
	adds r3, r4, #0
	bl sub_80E2294
	movs r1, #1
	ldr r0, [sp, #0x10]
	b _080E242A
_080E23F8:
	adds r0, r4, #0
	bl sub_80E2354
	str r0, [sp, #8]
_080E2400:
	ldr r2, [sp, #8]
	movs r3, #0
	ldr r1, [r2, #0x10]
	ldr r0, [r7]
	cmp r1, r0
	bhs _080E240E
	movs r3, #1
_080E240E:
	adds r0, r3, #0
	cmp r0, #0
	beq _080E2430
	str r7, [sp]
	movs r0, #0
	str r0, [sp, #4]
	add r0, sp, #0xc
	mov r1, r8
	adds r2, r5, #0
	adds r3, r4, #0
	bl sub_80E2294
	movs r1, #1
	ldr r0, [sp, #0xc]
_080E242A:
	str r0, [r6]
	strb r1, [r6, #4]
	b _080E2434
_080E2430:
	str r2, [r6]
	strb r0, [r6, #4]
_080E2434:
	adds r0, r6, #0
	add sp, #0x14
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80E2444
sub_80E2444: @ 0x080E2444
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x18
	adds r7, r0, #0
	adds r6, r1, #0
	mov r8, r2
	adds r4, r3, #0
	ldr r1, [r6, #4]
	ldr r2, [r2]
	ldr r0, [r1, #8]
	cmp r2, r0
	bne _080E24D4
	ldr r0, [r6, #8]
	cmp r0, #0
	bne _080E2474
	add r0, sp, #8
	adds r1, r6, #0
	adds r2, r4, #0
	bl sub_80E2390
	ldr r0, [sp, #8]
	b _080E25E8
_080E2474:
	movs r0, #0
	ldr r1, [r2, #0x10]
	adds r3, r2, #0
	ldr r2, [r4]
	cmp r2, r1
	bhs _080E2482
	movs r0, #1
_080E2482:
	mov sb, r0
	cmp r0, #0
	bne _080E2548
	movs r0, #0
	cmp r1, r2
	bhs _080E2490
	movs r0, #1
_080E2490:
	cmp r0, #0
	bne _080E2498
	str r3, [r7]
	b _080E25EA
_080E2498:
	str r3, [sp, #8]
	adds r0, r3, #0
	bl sub_80E2B28
	adds r2, r0, #0
	str r2, [sp, #8]
	ldr r0, [r6, #4]
	cmp r2, r0
	bne _080E24B0
	mov r0, r8
	ldr r3, [r0]
	b _080E25AE
_080E24B0:
	movs r3, #0
	ldr r1, [r4]
	ldr r0, [r2, #0x10]
	adds r5, r2, #0
	cmp r1, r0
	bhs _080E24BE
	movs r3, #1
_080E24BE:
	cmp r3, #0
	bne _080E24C4
	b _080E25DC
_080E24C4:
	mov r1, r8
	ldr r3, [r1]
	ldr r0, [r3, #0xc]
	cmp r0, #0
	beq _080E25AE
	str r4, [sp]
	mov r0, sb
	b _080E25C2
_080E24D4:
	cmp r2, r1
	bne _080E24FE
	ldr r3, [r2, #0xc]
	movs r5, #0
	ldr r1, [r3, #0x10]
	ldr r0, [r4]
	cmp r1, r0
	bhs _080E24E6
	movs r5, #1
_080E24E6:
	cmp r5, #0
	beq _080E24F0
	str r4, [sp]
	str r2, [sp, #4]
	b _080E25B2
_080E24F0:
	add r0, sp, #8
	adds r1, r6, #0
	adds r2, r4, #0
	bl sub_80E2390
	ldr r0, [sp, #8]
	b _080E25E8
_080E24FE:
	str r2, [sp, #8]
	adds r0, r2, #0
	bl sub_80E2354
	adds r2, r0, #0
	str r2, [sp, #8]
	mov r1, r8
	ldr r3, [r1]
	movs r5, #0
	ldr r1, [r4]
	ldr r0, [r3, #0x10]
	cmp r1, r0
	bhs _080E251A
	movs r5, #1
_080E251A:
	mov sb, r5
	cmp r5, #0
	beq _080E255A
	movs r0, #0
	mov ip, r0
	ldr r0, [r2, #0x10]
	adds r5, r2, #0
	cmp r0, r1
	bhs _080E2530
	movs r1, #1
	mov ip, r1
_080E2530:
	mov r0, ip
	cmp r0, #0
	beq _080E255A
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080E2548
	str r4, [sp]
	str r5, [sp, #4]
	adds r0, r7, #0
	adds r1, r6, #0
	movs r2, #0
	b _080E25CA
_080E2548:
	str r4, [sp]
	movs r0, #0
	str r0, [sp, #4]
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r3, #0
	bl sub_80E2294
	b _080E25EA
_080E255A:
	mov r1, r8
	ldr r0, [r1]
	str r0, [sp, #0xc]
	bl sub_80E2B28
	mov ip, r0
	str r0, [sp, #0xc]
	movs r0, #1
	mov r1, sb
	eors r1, r0
	mov r0, sb
	cmp r0, #0
	bne _080E25D2
	mov r1, r8
	ldr r0, [r1]
	movs r5, #0
	ldr r1, [r0, #0x10]
	adds r3, r0, #0
	ldr r2, [r4]
	cmp r1, r2
	bhs _080E2586
	movs r5, #1
_080E2586:
	adds r1, r5, #0
	cmp r1, #0
	beq _080E25D2
	ldr r0, [r6, #4]
	mov r5, ip
	cmp r5, r0
	beq _080E25A8
	movs r0, #0
	mov ip, r0
	ldr r0, [r5, #0x10]
	cmp r2, r0
	bhs _080E25A2
	movs r0, #1
	mov ip, r0
_080E25A2:
	mov r0, ip
	cmp r0, #0
	beq _080E25D2
_080E25A8:
	ldr r0, [r3, #0xc]
	cmp r0, #0
	bne _080E25BE
_080E25AE:
	str r4, [sp]
	str r3, [sp, #4]
_080E25B2:
	adds r0, r7, #0
	adds r1, r6, #0
	movs r2, #0
	bl sub_80E2294
	b _080E25EA
_080E25BE:
	str r4, [sp]
	movs r0, #0
_080E25C2:
	str r0, [sp, #4]
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r5, #0
_080E25CA:
	adds r3, r5, #0
	bl sub_80E2294
	b _080E25EA
_080E25D2:
	cmp sb, r1
	bne _080E25DC
	mov r1, r8
	ldr r0, [r1]
	b _080E25E8
_080E25DC:
	add r0, sp, #0x10
	adds r1, r6, #0
	adds r2, r4, #0
	bl sub_80E2390
	ldr r0, [sp, #0x10]
_080E25E8:
	str r0, [r7]
_080E25EA:
	adds r0, r7, #0
	add sp, #0x18
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80E25FC
sub_80E25FC: @ 0x080E25FC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	mov r8, r1
	adds r7, r5, #0
	ldr r1, [r7, #8]
	cmp r1, #0
	beq _080E2624
	ldr r0, [r7, #0xc]
	cmp r0, #0
	bne _080E2618
	adds r6, r1, #0
	b _080E2626
_080E2618:
	adds r7, r0, #0
	b _080E261E
_080E261C:
	ldr r7, [r7, #8]
_080E261E:
	ldr r0, [r7, #8]
	cmp r0, #0
	bne _080E261C
_080E2624:
	ldr r6, [r7, #0xc]
_080E2626:
	cmp r7, r5
	beq _080E267A
	ldr r0, [r5, #8]
	str r7, [r0, #4]
	ldr r0, [r5, #8]
	str r0, [r7, #8]
	ldr r0, [r5, #0xc]
	cmp r7, r0
	beq _080E264E
	ldr r4, [r7, #4]
	cmp r6, #0
	beq _080E2640
	str r4, [r6, #4]
_080E2640:
	ldr r0, [r7, #4]
	str r6, [r0, #8]
	ldr r0, [r5, #0xc]
	str r0, [r7, #0xc]
	ldr r0, [r5, #0xc]
	str r7, [r0, #4]
	b _080E2650
_080E264E:
	adds r4, r7, #0
_080E2650:
	mov r1, r8
	ldr r0, [r1]
	cmp r0, r5
	bne _080E265C
	str r7, [r1]
	b _080E266A
_080E265C:
	ldr r1, [r5, #4]
	ldr r0, [r1, #8]
	cmp r0, r5
	bne _080E2668
	str r7, [r1, #8]
	b _080E266A
_080E2668:
	str r7, [r1, #0xc]
_080E266A:
	ldr r0, [r5, #4]
	str r0, [r7, #4]
	ldrb r1, [r7]
	ldrb r0, [r5]
	strb r0, [r7]
	strb r1, [r5]
	adds r7, r5, #0
	b _080E26E4
_080E267A:
	ldr r4, [r7, #4]
	cmp r6, #0
	beq _080E2682
	str r4, [r6, #4]
_080E2682:
	mov r1, r8
	ldr r0, [r1]
	cmp r0, r7
	bne _080E268E
	str r6, [r1]
	b _080E269C
_080E268E:
	ldr r1, [r7, #4]
	ldr r0, [r1, #8]
	cmp r0, r7
	bne _080E269A
	str r6, [r1, #8]
	b _080E269C
_080E269A:
	str r6, [r1, #0xc]
_080E269C:
	ldr r0, [r2]
	cmp r0, r5
	bne _080E26C0
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080E26AE
	ldr r0, [r5, #4]
	str r0, [r2]
	b _080E26C0
_080E26AE:
	adds r1, r6, #0
	ldr r0, [r6, #8]
	cmp r0, #0
	beq _080E26BE
_080E26B6:
	ldr r1, [r1, #8]
	ldr r0, [r1, #8]
	cmp r0, #0
	bne _080E26B6
_080E26BE:
	str r1, [r2]
_080E26C0:
	ldr r0, [r3]
	cmp r0, r5
	bne _080E26E4
	ldr r0, [r5, #8]
	cmp r0, #0
	bne _080E26D2
	ldr r0, [r5, #4]
	str r0, [r3]
	b _080E26E4
_080E26D2:
	adds r1, r6, #0
	ldr r0, [r6, #0xc]
	cmp r0, #0
	beq _080E26E2
_080E26DA:
	ldr r1, [r1, #0xc]
	ldr r0, [r1, #0xc]
	cmp r0, #0
	bne _080E26DA
_080E26E2:
	str r1, [r3]
_080E26E4:
	ldrb r0, [r7]
	cmp r0, #0
	bne _080E26EC
	b _080E27F0
_080E26EC:
	b _080E27D6
_080E26EE:
	ldr r0, [r4, #8]
	cmp r6, r0
	bne _080E2760
	ldr r2, [r4, #0xc]
	ldrb r1, [r2]
	cmp r1, #0
	bne _080E270C
	movs r0, #1
	strb r0, [r2]
	strb r1, [r4]
	adds r0, r4, #0
	mov r1, r8
	bl sub_80E2170
	ldr r2, [r4, #0xc]
_080E270C:
	ldr r3, [r2, #8]
	cmp r3, #0
	beq _080E271A
	ldrb r0, [r3]
	ldr r1, [r2, #0xc]
	cmp r0, #1
	bne _080E2726
_080E271A:
	ldr r1, [r2, #0xc]
	cmp r1, #0
	beq _080E2792
	ldrb r0, [r1]
	cmp r0, #1
	beq _080E2792
_080E2726:
	cmp r1, #0
	beq _080E2730
	ldrb r0, [r1]
	cmp r0, #1
	bne _080E2746
_080E2730:
	cmp r3, #0
	beq _080E2738
	movs r0, #1
	strb r0, [r3]
_080E2738:
	movs r0, #0
	strb r0, [r2]
	adds r0, r2, #0
	mov r1, r8
	bl sub_80E21A8
	ldr r2, [r4, #0xc]
_080E2746:
	ldrb r0, [r4]
	strb r0, [r2]
	movs r1, #1
	strb r1, [r4]
	ldr r0, [r2, #0xc]
	cmp r0, #0
	beq _080E2756
	strb r1, [r0]
_080E2756:
	adds r0, r4, #0
	mov r1, r8
	bl sub_80E2170
	b _080E27E8
_080E2760:
	adds r2, r0, #0
	ldrb r1, [r2]
	cmp r1, #0
	bne _080E2778
	movs r0, #1
	strb r0, [r2]
	strb r1, [r4]
	adds r0, r4, #0
	mov r1, r8
	bl sub_80E21A8
	ldr r2, [r4, #8]
_080E2778:
	ldr r3, [r2, #0xc]
	cmp r3, #0
	beq _080E2786
	ldrb r0, [r3]
	ldr r1, [r2, #8]
	cmp r0, #1
	bne _080E279C
_080E2786:
	ldr r1, [r2, #8]
	cmp r1, #0
	beq _080E2792
	ldrb r0, [r1]
	cmp r0, #1
	bne _080E279C
_080E2792:
	movs r0, #0
	strb r0, [r2]
	adds r6, r4, #0
	ldr r4, [r6, #4]
	b _080E27D6
_080E279C:
	cmp r1, #0
	beq _080E27A6
	ldrb r0, [r1]
	cmp r0, #1
	bne _080E27BC
_080E27A6:
	cmp r3, #0
	beq _080E27AE
	movs r0, #1
	strb r0, [r3]
_080E27AE:
	movs r0, #0
	strb r0, [r2]
	adds r0, r2, #0
	mov r1, r8
	bl sub_80E2170
	ldr r2, [r4, #8]
_080E27BC:
	ldrb r0, [r4]
	strb r0, [r2]
	movs r1, #1
	strb r1, [r4]
	ldr r0, [r2, #8]
	cmp r0, #0
	beq _080E27CC
	strb r1, [r0]
_080E27CC:
	adds r0, r4, #0
	mov r1, r8
	bl sub_80E21A8
	b _080E27E8
_080E27D6:
	mov r1, r8
	ldr r0, [r1]
	cmp r6, r0
	beq _080E27E8
	cmp r6, #0
	beq _080E26EE
	ldrb r0, [r6]
	cmp r0, #1
	beq _080E26EE
_080E27E8:
	cmp r6, #0
	beq _080E27F0
	movs r0, #1
	strb r0, [r6]
_080E27F0:
	adds r0, r7, #0
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_80E27FC
sub_80E27FC: @ 0x080E27FC
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r6, r1, #0
	ldr r4, [sp, #0x14]
	adds r5, r3, #0
	ldr r0, [r6, #4]
	cmp r5, r0
	beq _080E2826
	ldr r0, [sp, #0x18]
	cmp r0, #0
	bne _080E2866
	cmp r2, #0
	bne _080E2826
	movs r2, #0
	ldr r1, [r4]
	ldr r0, [r5, #0x10]
	cmp r1, r0
	bhs _080E2822
	movs r2, #1
_080E2822:
	cmp r2, #0
	beq _080E2866
_080E2826:
	movs r0, #0x18
	bl sub_80D01F8
	adds r2, r0, #0
	cmp r2, #0
	bne _080E283A
	movs r0, #0x18
	bl sub_80D3BC0
	adds r2, r0, #0
_080E283A:
	adds r1, r2, #0
	adds r1, #0x10
	cmp r1, #0
	beq _080E284A
	ldr r0, [r4]
	str r0, [r2, #0x10]
	ldr r0, [r4, #4]
	str r0, [r1, #4]
_080E284A:
	adds r4, r2, #0
	str r4, [r5, #8]
	ldr r1, [r6, #4]
	cmp r5, r1
	bne _080E285C
	str r4, [r5, #4]
	ldr r0, [r6, #4]
	str r4, [r0, #0xc]
	b _080E2898
_080E285C:
	ldr r0, [r1, #8]
	cmp r5, r0
	bne _080E2898
	str r4, [r1, #8]
	b _080E2898
_080E2866:
	movs r0, #0x18
	bl sub_80D01F8
	adds r2, r0, #0
	cmp r2, #0
	bne _080E287A
	movs r0, #0x18
	bl sub_80D3BC0
	adds r2, r0, #0
_080E287A:
	adds r1, r2, #0
	adds r1, #0x10
	cmp r1, #0
	beq _080E288A
	ldr r0, [r4]
	str r0, [r2, #0x10]
	ldr r0, [r4, #4]
	str r0, [r1, #4]
_080E288A:
	adds r4, r2, #0
	str r4, [r5, #0xc]
	ldr r1, [r6, #4]
	ldr r0, [r1, #0xc]
	cmp r5, r0
	bne _080E2898
	str r4, [r1, #0xc]
_080E2898:
	str r5, [r4, #4]
	movs r0, #0
	str r0, [r4, #8]
	str r0, [r4, #0xc]
	ldr r1, [r6, #4]
	adds r1, #4
	adds r0, r4, #0
	bl sub_80E21E0
	ldr r0, [r6, #8]
	adds r0, #1
	str r0, [r6, #8]
	str r4, [r7]
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80E28BC
sub_80E28BC: @ 0x080E28BC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x14
	adds r6, r0, #0
	mov r8, r1
	adds r7, r2, #0
	ldr r4, [r1, #4]
	ldr r5, [r4, #4]
	movs r0, #1
	cmp r5, #0
	beq _080E28F2
	ldr r2, [r7]
_080E28D6:
	adds r4, r5, #0
	movs r1, #0
	ldr r0, [r4, #0x10]
	cmp r2, r0
	bhs _080E28E2
	movs r1, #1
_080E28E2:
	adds r0, r1, #0
	cmp r0, #0
	beq _080E28EC
	ldr r5, [r4, #8]
	b _080E28EE
_080E28EC:
	ldr r5, [r4, #0xc]
_080E28EE:
	cmp r5, #0
	bne _080E28D6
_080E28F2:
	str r4, [sp, #8]
	cmp r0, #0
	beq _080E292C
	mov r1, r8
	ldr r0, [r1, #4]
	ldr r0, [r0, #8]
	str r0, [sp, #0xc]
	movs r1, #0
	cmp r4, r0
	bne _080E2908
	movs r1, #1
_080E2908:
	cmp r1, #0
	beq _080E2924
	str r7, [sp]
	movs r0, #0
	str r0, [sp, #4]
	add r0, sp, #0x10
	mov r1, r8
	adds r2, r5, #0
	adds r3, r4, #0
	bl sub_80E27FC
	movs r1, #1
	ldr r0, [sp, #0x10]
	b _080E2956
_080E2924:
	adds r0, r4, #0
	bl sub_80E2354
	str r0, [sp, #8]
_080E292C:
	ldr r2, [sp, #8]
	movs r3, #0
	ldr r1, [r2, #0x10]
	ldr r0, [r7]
	cmp r1, r0
	bhs _080E293A
	movs r3, #1
_080E293A:
	adds r0, r3, #0
	cmp r0, #0
	beq _080E295C
	str r7, [sp]
	movs r0, #0
	str r0, [sp, #4]
	add r0, sp, #0xc
	mov r1, r8
	adds r2, r5, #0
	adds r3, r4, #0
	bl sub_80E27FC
	movs r1, #1
	ldr r0, [sp, #0xc]
_080E2956:
	str r0, [r6]
	strb r1, [r6, #4]
	b _080E2960
_080E295C:
	str r2, [r6]
	strb r0, [r6, #4]
_080E2960:
	adds r0, r6, #0
	add sp, #0x14
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80E2970
sub_80E2970: @ 0x080E2970
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x18
	adds r7, r0, #0
	adds r6, r1, #0
	mov r8, r2
	adds r4, r3, #0
	ldr r1, [r6, #4]
	ldr r2, [r2]
	ldr r0, [r1, #8]
	cmp r2, r0
	bne _080E2A00
	ldr r0, [r6, #8]
	cmp r0, #0
	bne _080E29A0
	add r0, sp, #8
	adds r1, r6, #0
	adds r2, r4, #0
	bl sub_80E28BC
	ldr r0, [sp, #8]
	b _080E2B14
_080E29A0:
	movs r0, #0
	ldr r1, [r2, #0x10]
	adds r3, r2, #0
	ldr r2, [r4]
	cmp r2, r1
	bhs _080E29AE
	movs r0, #1
_080E29AE:
	mov sb, r0
	cmp r0, #0
	bne _080E2A74
	movs r0, #0
	cmp r1, r2
	bhs _080E29BC
	movs r0, #1
_080E29BC:
	cmp r0, #0
	bne _080E29C4
	str r3, [r7]
	b _080E2B16
_080E29C4:
	str r3, [sp, #8]
	adds r0, r3, #0
	bl sub_80E2B28
	adds r2, r0, #0
	str r2, [sp, #8]
	ldr r0, [r6, #4]
	cmp r2, r0
	bne _080E29DC
	mov r0, r8
	ldr r3, [r0]
	b _080E2ADA
_080E29DC:
	movs r3, #0
	ldr r1, [r4]
	ldr r0, [r2, #0x10]
	adds r5, r2, #0
	cmp r1, r0
	bhs _080E29EA
	movs r3, #1
_080E29EA:
	cmp r3, #0
	bne _080E29F0
	b _080E2B08
_080E29F0:
	mov r1, r8
	ldr r3, [r1]
	ldr r0, [r3, #0xc]
	cmp r0, #0
	beq _080E2ADA
	str r4, [sp]
	mov r0, sb
	b _080E2AEE
_080E2A00:
	cmp r2, r1
	bne _080E2A2A
	ldr r3, [r2, #0xc]
	movs r5, #0
	ldr r1, [r3, #0x10]
	ldr r0, [r4]
	cmp r1, r0
	bhs _080E2A12
	movs r5, #1
_080E2A12:
	cmp r5, #0
	beq _080E2A1C
	str r4, [sp]
	str r2, [sp, #4]
	b _080E2ADE
_080E2A1C:
	add r0, sp, #8
	adds r1, r6, #0
	adds r2, r4, #0
	bl sub_80E28BC
	ldr r0, [sp, #8]
	b _080E2B14
_080E2A2A:
	str r2, [sp, #8]
	adds r0, r2, #0
	bl sub_80E2354
	adds r2, r0, #0
	str r2, [sp, #8]
	mov r1, r8
	ldr r3, [r1]
	movs r5, #0
	ldr r1, [r4]
	ldr r0, [r3, #0x10]
	cmp r1, r0
	bhs _080E2A46
	movs r5, #1
_080E2A46:
	mov sb, r5
	cmp r5, #0
	beq _080E2A86
	movs r0, #0
	mov ip, r0
	ldr r0, [r2, #0x10]
	adds r5, r2, #0
	cmp r0, r1
	bhs _080E2A5C
	movs r1, #1
	mov ip, r1
_080E2A5C:
	mov r0, ip
	cmp r0, #0
	beq _080E2A86
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080E2A74
	str r4, [sp]
	str r5, [sp, #4]
	adds r0, r7, #0
	adds r1, r6, #0
	movs r2, #0
	b _080E2AF6
_080E2A74:
	str r4, [sp]
	movs r0, #0
	str r0, [sp, #4]
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r3, #0
	bl sub_80E27FC
	b _080E2B16
_080E2A86:
	mov r1, r8
	ldr r0, [r1]
	str r0, [sp, #0xc]
	bl sub_80E2B28
	mov ip, r0
	str r0, [sp, #0xc]
	movs r0, #1
	mov r1, sb
	eors r1, r0
	mov r0, sb
	cmp r0, #0
	bne _080E2AFE
	mov r1, r8
	ldr r0, [r1]
	movs r5, #0
	ldr r1, [r0, #0x10]
	adds r3, r0, #0
	ldr r2, [r4]
	cmp r1, r2
	bhs _080E2AB2
	movs r5, #1
_080E2AB2:
	adds r1, r5, #0
	cmp r1, #0
	beq _080E2AFE
	ldr r0, [r6, #4]
	mov r5, ip
	cmp r5, r0
	beq _080E2AD4
	movs r0, #0
	mov ip, r0
	ldr r0, [r5, #0x10]
	cmp r2, r0
	bhs _080E2ACE
	movs r0, #1
	mov ip, r0
_080E2ACE:
	mov r0, ip
	cmp r0, #0
	beq _080E2AFE
_080E2AD4:
	ldr r0, [r3, #0xc]
	cmp r0, #0
	bne _080E2AEA
_080E2ADA:
	str r4, [sp]
	str r3, [sp, #4]
_080E2ADE:
	adds r0, r7, #0
	adds r1, r6, #0
	movs r2, #0
	bl sub_80E27FC
	b _080E2B16
_080E2AEA:
	str r4, [sp]
	movs r0, #0
_080E2AEE:
	str r0, [sp, #4]
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r5, #0
_080E2AF6:
	adds r3, r5, #0
	bl sub_80E27FC
	b _080E2B16
_080E2AFE:
	cmp sb, r1
	bne _080E2B08
	mov r1, r8
	ldr r0, [r1]
	b _080E2B14
_080E2B08:
	add r0, sp, #0x10
	adds r1, r6, #0
	adds r2, r4, #0
	bl sub_80E28BC
	ldr r0, [sp, #0x10]
_080E2B14:
	str r0, [r7]
_080E2B16:
	adds r0, r7, #0
	add sp, #0x18
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80E2B28
sub_80E2B28: @ 0x080E2B28
	push {lr}
	adds r1, r0, #0
	ldr r0, [r1, #0xc]
	cmp r0, #0
	beq _080E2B46
	adds r1, r0, #0
	ldr r0, [r1, #8]
	cmp r0, #0
	beq _080E2B56
_080E2B3A:
	ldr r1, [r1, #8]
	ldr r0, [r1, #8]
	cmp r0, #0
	bne _080E2B3A
	b _080E2B56
_080E2B44:
	adds r1, r2, #0
_080E2B46:
	ldr r2, [r1, #4]
	ldr r0, [r2, #0xc]
	cmp r1, r0
	beq _080E2B44
	ldr r0, [r1, #0xc]
	cmp r0, r2
	beq _080E2B56
	adds r1, r2, #0
_080E2B56:
	adds r0, r1, #0
	pop {r1}
	bx r1

	thumb_func_start sub_80E2B5C
sub_80E2B5C: @ 0x080E2B5C
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r4, r1, #0
	cmp r4, #0
	beq _080E2B80
_080E2B66:
	ldr r1, [r4, #0xc]
	adds r0, r6, #0
	bl sub_80E2B5C
	ldr r5, [r4, #8]
	cmp r4, #0
	beq _080E2B7A
	adds r0, r4, #0
	bl sub_80D0260
_080E2B7A:
	adds r4, r5, #0
	cmp r4, #0
	bne _080E2B66
_080E2B80:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E2B88
sub_80E2B88: @ 0x080E2B88
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r4, r1, #0
	cmp r4, #0
	beq _080E2BAC
_080E2B92:
	ldr r1, [r4, #0xc]
	adds r0, r6, #0
	bl sub_80E2B88
	ldr r5, [r4, #8]
	cmp r4, #0
	beq _080E2BA6
	adds r0, r4, #0
	bl sub_80D0260
_080E2BA6:
	adds r4, r5, #0
	cmp r4, #0
	bne _080E2B92
_080E2BAC:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E2BB4
sub_80E2BB4: @ 0x080E2BB4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	mov sl, r0
	str r1, [sp, #0x10]
	str r3, [sp, #0x14]
	ldr r0, [r2, #8]
	str r0, [sp, #0x18]
	ldr r1, [r2, #0x10]
	str r1, [sp, #0x1c]
	ldr r3, [r2]
	movs r0, #0
	cmp r3, #0
	beq _080E2BD8
	ldrh r0, [r2, #4]
_080E2BD8:
	lsls r0, r0, #3
	adds r0, r3, r0
	str r0, [sp, #0x20]
	cmp r3, r0
	bne _080E2BE4
	b _080E2DA2
_080E2BE4:
	ldm r3!, {r0, r1}
	str r0, [sp]
	str r1, [sp, #4]
	ldr r2, [sp]
	lsls r0, r2, #7
	asrs r6, r0, #0x17
	ldr r0, [sp, #0x14]
	adds r6, r6, r0
	str r3, [sp, #0x24]
	cmp r6, #0xef
	ble _080E2BFC
	b _080E2D98
_080E2BFC:
	mov r0, sp
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	mov r8, r0
	ldr r1, [sp, #0x48]
	add r8, r1
	mov r0, r8
	cmp r0, #0x9f
	ble _080E2C12
	b _080E2D98
_080E2C12:
	lsls r1, r2, #0x10
	lsrs r1, r1, #0x1e
	lsls r1, r1, #2
	lsrs r0, r2, #0x1e
	adds r1, r1, r0
	ldr r2, _080E2C84 @ =gUnknown_080FC066
	lsrs r0, r1, #1
	adds r0, r0, r2
	ldrb r2, [r0]
	movs r0, #1
	ands r1, r0
	lsls r1, r1, #2
	asrs r2, r1
	movs r3, #3
	adds r1, r2, #0
	ands r1, r3
	movs r4, #8
	adds r0, r4, #0
	lsls r0, r1
	adds r0, r6, r0
	cmp r0, #0
	bgt _080E2C40
	b _080E2D98
_080E2C40:
	lsrs r1, r2, #2
	ands r1, r3
	adds r0, r4, #0
	lsls r0, r1
	add r0, r8
	cmp r0, #0
	bgt _080E2C50
	b _080E2D98
_080E2C50:
	ldr r0, [sp, #4]
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x11
	ldr r1, [sp, #0x18]
	adds r0, r1, r0
	str r0, [sp, #8]
	mov r1, sl
	adds r1, #4
	add r7, sp, #8
	ldr r4, [r1, #4]
	ldr r2, [r4, #4]
	mov ip, r1
	cmp r2, #0
	beq _080E2C8E
	adds r5, r0, #0
_080E2C6E:
	movs r3, #0
	ldr r0, [r2, #0x10]
	cmp r0, r5
	bhs _080E2C78
	movs r3, #1
_080E2C78:
	cmp r3, #0
	bne _080E2C88
	adds r4, r2, #0
	ldr r2, [r4, #8]
	b _080E2C8A
	.align 2, 0
_080E2C84: .4byte gUnknown_080FC066
_080E2C88:
	ldr r2, [r2, #0xc]
_080E2C8A:
	cmp r2, #0
	bne _080E2C6E
_080E2C8E:
	ldr r3, [r1, #4]
	cmp r4, r3
	beq _080E2CA4
	movs r2, #0
	ldr r1, [r7]
	ldr r0, [r4, #0x10]
	cmp r1, r0
	bhs _080E2CA0
	movs r2, #1
_080E2CA0:
	cmp r2, #0
	beq _080E2CA6
_080E2CA4:
	adds r4, r3, #0
_080E2CA6:
	mov r0, ip
	ldr r1, [r0, #4]
	eors r1, r4
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _080E2CBE
	ldr r1, [r4, #0x14]
	mov r0, sl
	bl sub_8007D4C
	b _080E2CC2
_080E2CBE:
	movs r0, #1
	rsbs r0, r0, #0
_080E2CC2:
	mov sb, r0
	cmp r0, #0
	blt _080E2D98
	ldr r0, [sp, #4]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x1c
	lsls r0, r0, #5
	ldr r1, [sp, #0x1c]
	adds r0, r1, r0
	str r0, [sp, #0xc]
	mov r1, sl
	adds r1, #0x18
	add r7, sp, #0xc
	ldr r4, [r1, #4]
	ldr r2, [r4, #4]
	mov ip, r1
	cmp r2, #0
	beq _080E2D02
	adds r5, r0, #0
_080E2CE8:
	movs r3, #0
	ldr r0, [r2, #0x10]
	cmp r0, r5
	bhs _080E2CF2
	movs r3, #1
_080E2CF2:
	cmp r3, #0
	bne _080E2CFC
	adds r4, r2, #0
	ldr r2, [r4, #8]
	b _080E2CFE
_080E2CFC:
	ldr r2, [r2, #0xc]
_080E2CFE:
	cmp r2, #0
	bne _080E2CE8
_080E2D02:
	ldr r3, [r1, #4]
	cmp r4, r3
	beq _080E2D18
	movs r2, #0
	ldr r1, [r7]
	ldr r0, [r4, #0x10]
	cmp r1, r0
	bhs _080E2D14
	movs r2, #1
_080E2D14:
	cmp r2, #0
	beq _080E2D1A
_080E2D18:
	adds r4, r3, #0
_080E2D1A:
	mov r0, ip
	ldr r1, [r0, #4]
	eors r1, r4
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _080E2D36
	ldr r1, [r4, #0x14]
	mov r0, sl
	adds r0, #0x14
	bl sub_80074C0
	adds r4, r0, #0
	b _080E2D3A
_080E2D36:
	movs r4, #1
	rsbs r4, r4, #0
_080E2D3A:
	cmp r4, #0
	blt _080E2D98
	mov r1, r8
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _080E2DB4 @ =0xFFFFFF00
	ldr r3, [sp]
	ands r3, r1
	orrs r3, r0
	ldr r0, _080E2DB8 @ =0x000001FF
	ands r6, r0
	lsls r1, r6, #0x10
	ldr r0, _080E2DBC @ =0xFE00FFFF
	ands r3, r0
	orrs r3, r1
	str r3, [sp]
	mov r1, sb
	lsls r0, r1, #0x16
	lsrs r0, r0, #0x16
	ldr r1, _080E2DC0 @ =0xFFFFFC00
	mov r5, sp
	ldr r2, [sp, #4]
	ands r2, r1
	orrs r2, r0
	lsls r0, r4, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #0xc
	ldr r1, _080E2DC4 @ =0xFFFF0FFF
	ands r2, r1
	orrs r2, r0
	str r2, [sp, #4]
	ldr r0, [sp, #0x10]
	ldrb r2, [r0]
	cmp r2, #0x7f
	bhi _080E2D98
	lsls r0, r2, #3
	adds r0, #4
	ldr r1, [sp, #0x10]
	adds r0, r1, r0
	str r3, [r0]
	ldrh r1, [r5, #4]
	strh r1, [r0, #4]
	adds r0, r2, #1
	ldr r1, [sp, #0x10]
	strb r0, [r1]
_080E2D98:
	ldr r3, [sp, #0x24]
	ldr r0, [sp, #0x20]
	cmp r3, r0
	beq _080E2DA2
	b _080E2BE4
_080E2DA2:
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080E2DB4: .4byte 0xFFFFFF00
_080E2DB8: .4byte 0x000001FF
_080E2DBC: .4byte 0xFE00FFFF
_080E2DC0: .4byte 0xFFFFFC00
_080E2DC4: .4byte 0xFFFF0FFF

	thumb_func_start sub_80E2DC8
sub_80E2DC8: @ 0x080E2DC8
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	bl sub_8007874
	adds r4, r6, #4
	movs r5, #0
	str r5, [r4, #4]
	movs r0, #0x18
	bl sub_80D01F8
	cmp r0, #0
	bne _080E2DE8
	movs r0, #0x18
	bl sub_80D3BC0
_080E2DE8:
	str r0, [r4, #4]
	str r5, [r4, #8]
	str r5, [r4, #0xc]
	strb r5, [r0]
	str r5, [r0, #4]
	ldr r0, [r4, #4]
	str r0, [r0, #8]
	ldr r0, [r4, #4]
	str r0, [r0, #0xc]
	adds r0, r6, #0
	adds r0, #0x14
	bl sub_8007128
	adds r4, r6, #0
	adds r4, #0x18
	str r5, [r4, #4]
	movs r0, #0x18
	bl sub_80D01F8
	cmp r0, #0
	bne _080E2E18
	movs r0, #0x18
	bl sub_80D3BC0
_080E2E18:
	str r0, [r4, #4]
	str r5, [r4, #8]
	str r5, [r4, #0xc]
	strb r5, [r0]
	str r5, [r0, #4]
	ldr r0, [r4, #4]
	str r0, [r0, #8]
	ldr r0, [r4, #4]
	str r0, [r0, #0xc]
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
_080E2E34:
	.byte 0x30, 0xB5, 0x04, 0x1C, 0x0D, 0x1C, 0x0A, 0x48, 0xE0, 0x60, 0xA1, 0x68
	.byte 0x00, 0x29, 0x07, 0xD0, 0x08, 0x4A, 0x88, 0x18, 0x00, 0x68, 0x82, 0x68, 0x08, 0x1C, 0x03, 0x21
	.byte 0xF0, 0xF7, 0x60, 0xFD, 0x20, 0x1C, 0x29, 0x1C, 0x25, 0xF7, 0x30, 0xFC, 0x30, 0xBC, 0x01, 0xBC
	.byte 0x00, 0x47, 0x00, 0x00, 0x28, 0x5A, 0x0E, 0x08, 0xB4, 0x05, 0x00, 0x00, 0x00, 0xB5, 0x25, 0xF7
	.byte 0x25, 0xFC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00

	thumb_func_start sub_80E2E78
sub_80E2E78: @ 0x080E2E78
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r4, r1, #0
	cmp r4, #0
	beq _080E2E9C
_080E2E82:
	ldr r1, [r4, #0xc]
	adds r0, r6, #0
	bl sub_80E2E78
	ldr r5, [r4, #8]
	cmp r4, #0
	beq _080E2E96
	adds r0, r4, #0
	bl sub_80D0260
_080E2E96:
	adds r4, r5, #0
	cmp r4, #0
	bne _080E2E82
_080E2E9C:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E2EA4
sub_80E2EA4: @ 0x080E2EA4
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r6, r1, #0
	ldr r4, [sp, #0x14]
	adds r5, r3, #0
	ldr r0, [r6, #4]
	cmp r5, r0
	beq _080E2EDE
	ldr r0, [sp, #0x18]
	cmp r0, #0
	bne _080E2F1E
	cmp r2, #0
	bne _080E2EDE
	adds r2, r5, #0
	adds r2, #0x10
	movs r3, #0
	ldrb r1, [r4]
	ldrb r0, [r5, #0x10]
	cmp r1, r0
	blo _080E2ED8
	cmp r0, r1
	blo _080E2EDA
	ldrb r0, [r4, #1]
	ldrb r2, [r2, #1]
	cmp r0, r2
	bhs _080E2EDA
_080E2ED8:
	movs r3, #1
_080E2EDA:
	cmp r3, #0
	beq _080E2F1E
_080E2EDE:
	movs r0, #0x18
	bl sub_80D01F8
	adds r1, r0, #0
	cmp r1, #0
	bne _080E2EF2
	movs r0, #0x18
	bl sub_80D3BC0
	adds r1, r0, #0
_080E2EF2:
	adds r2, r1, #0
	adds r2, #0x10
	cmp r2, #0
	beq _080E2F02
	ldr r0, [r4]
	str r0, [r1, #0x10]
	ldrb r0, [r4, #4]
	strb r0, [r2, #4]
_080E2F02:
	adds r4, r1, #0
	str r4, [r5, #8]
	ldr r1, [r6, #4]
	cmp r5, r1
	bne _080E2F14
	str r4, [r5, #4]
	ldr r0, [r6, #4]
	str r4, [r0, #0xc]
	b _080E2F50
_080E2F14:
	ldr r0, [r1, #8]
	cmp r5, r0
	bne _080E2F50
	str r4, [r1, #8]
	b _080E2F50
_080E2F1E:
	movs r0, #0x18
	bl sub_80D01F8
	adds r1, r0, #0
	cmp r1, #0
	bne _080E2F32
	movs r0, #0x18
	bl sub_80D3BC0
	adds r1, r0, #0
_080E2F32:
	adds r2, r1, #0
	adds r2, #0x10
	cmp r2, #0
	beq _080E2F42
	ldr r0, [r4]
	str r0, [r1, #0x10]
	ldrb r0, [r4, #4]
	strb r0, [r2, #4]
_080E2F42:
	adds r4, r1, #0
	str r4, [r5, #0xc]
	ldr r1, [r6, #4]
	ldr r0, [r1, #0xc]
	cmp r5, r0
	bne _080E2F50
	str r4, [r1, #0xc]
_080E2F50:
	str r5, [r4, #4]
	movs r0, #0
	str r0, [r4, #8]
	str r0, [r4, #0xc]
	ldr r1, [r6, #4]
	adds r1, #4
	adds r0, r4, #0
	bl sub_80E21E0
	ldr r0, [r6, #8]
	adds r0, #1
	str r0, [r6, #8]
	str r4, [r7]
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80E2F74
sub_80E2F74: @ 0x080E2F74
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x14
	adds r7, r0, #0
	mov r8, r1
	adds r6, r2, #0
	ldr r5, [r1, #4]
	ldr r4, [r5, #4]
	movs r0, #1
	cmp r4, #0
	beq _080E2FBC
	ldrb r2, [r6]
_080E2F90:
	adds r5, r4, #0
	adds r1, r5, #0
	adds r1, #0x10
	movs r3, #0
	ldrb r0, [r5, #0x10]
	cmp r2, r0
	blo _080E2FAA
	cmp r0, r2
	blo _080E2FAC
	ldrb r0, [r6, #1]
	ldrb r1, [r1, #1]
	cmp r0, r1
	bhs _080E2FAC
_080E2FAA:
	movs r3, #1
_080E2FAC:
	adds r0, r3, #0
	cmp r0, #0
	beq _080E2FB6
	ldr r4, [r4, #8]
	b _080E2FB8
_080E2FB6:
	ldr r4, [r4, #0xc]
_080E2FB8:
	cmp r4, #0
	bne _080E2F90
_080E2FBC:
	str r5, [sp, #8]
	cmp r0, #0
	beq _080E2FF6
	mov r1, r8
	ldr r0, [r1, #4]
	ldr r0, [r0, #8]
	str r0, [sp, #0xc]
	movs r1, #0
	cmp r5, r0
	bne _080E2FD2
	movs r1, #1
_080E2FD2:
	cmp r1, #0
	beq _080E2FEE
	str r6, [sp]
	movs r0, #0
	str r0, [sp, #4]
	add r0, sp, #0x10
	mov r1, r8
	adds r2, r4, #0
	adds r3, r5, #0
	bl sub_80E2EA4
	movs r1, #1
	ldr r0, [sp, #0x10]
	b _080E3036
_080E2FEE:
	adds r0, r5, #0
	bl sub_80E2354
	str r0, [sp, #8]
_080E2FF6:
	ldr r0, [sp, #8]
	adds r3, r0, #0
	adds r3, #0x10
	movs r1, #0
	mov sb, r1
	ldrb r2, [r0, #0x10]
	ldrb r1, [r6]
	mov ip, r0
	cmp r2, r1
	blo _080E3016
	cmp r1, r2
	blo _080E301A
	ldrb r0, [r3, #1]
	ldrb r1, [r6, #1]
	cmp r0, r1
	bhs _080E301A
_080E3016:
	movs r0, #1
	mov sb, r0
_080E301A:
	mov r0, sb
	cmp r0, #0
	beq _080E303C
	str r6, [sp]
	movs r0, #0
	str r0, [sp, #4]
	add r0, sp, #0xc
	mov r1, r8
	adds r2, r4, #0
	adds r3, r5, #0
	bl sub_80E2EA4
	movs r1, #1
	ldr r0, [sp, #0xc]
_080E3036:
	str r0, [r7]
	strb r1, [r7, #4]
	b _080E3042
_080E303C:
	mov r1, ip
	str r1, [r7]
	strb r0, [r7, #4]
_080E3042:
	adds r0, r7, #0
	add sp, #0x14
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80E3054
sub_80E3054: @ 0x080E3054
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	adds r7, r0, #0
	adds r6, r1, #0
	mov sl, r2
	adds r4, r3, #0
	ldr r1, [r6, #4]
	ldr r2, [r2]
	ldr r0, [r1, #8]
	cmp r2, r0
	bne _080E314C
	ldr r0, [r6, #8]
	cmp r0, #0
	bne _080E3086
	add r0, sp, #8
	adds r1, r6, #0
	adds r2, r4, #0
	bl sub_80E2F74
	ldr r0, [sp, #8]
	b _080E32D2
_080E3086:
	movs r0, #0x10
	adds r0, r0, r2
	mov ip, r0
	movs r1, #0
	mov sb, r1
	ldrb r0, [r4]
	adds r3, r0, #0
	ldrb r1, [r2, #0x10]
	adds r5, r2, #0
	mov r8, r0
	cmp r3, r1
	blo _080E30AC
	cmp r1, r3
	blo _080E30B0
	ldrb r0, [r4, #1]
	mov r2, ip
	ldrb r2, [r2, #1]
	cmp r0, r2
	bhs _080E30B0
_080E30AC:
	movs r0, #1
	mov sb, r0
_080E30B0:
	mov r1, sb
	cmp r1, #0
	beq _080E30C4
	str r4, [sp]
	movs r0, #0
	str r0, [sp, #4]
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r5, #0
	b _080E32A2
_080E30C4:
	adds r3, r5, #0
	adds r3, #0x10
	movs r1, #0
	ldrb r2, [r5, #0x10]
	mov r0, r8
	cmp r2, r0
	blo _080E30DE
	cmp r0, r2
	blo _080E30E0
	ldrb r0, [r3, #1]
	ldrb r2, [r4, #1]
	cmp r0, r2
	bhs _080E30E0
_080E30DE:
	movs r1, #1
_080E30E0:
	cmp r1, #0
	bne _080E30E8
	str r5, [r7]
	b _080E32D4
_080E30E8:
	str r5, [sp, #8]
	adds r0, r5, #0
	bl sub_80E2B28
	adds r2, r0, #0
	str r2, [sp, #8]
	ldr r0, [r6, #4]
	cmp r2, r0
	bne _080E3104
	mov r0, sl
	ldr r3, [r0]
	str r4, [sp]
	str r3, [sp, #4]
	b _080E317E
_080E3104:
	adds r3, r2, #0
	adds r3, #0x10
	movs r1, #0
	mov r8, r1
	ldrb r1, [r4]
	ldrb r0, [r2, #0x10]
	adds r5, r2, #0
	cmp r1, r0
	blo _080E3122
	cmp r0, r1
	blo _080E3126
	ldrb r0, [r4, #1]
	ldrb r3, [r3, #1]
	cmp r0, r3
	bhs _080E3126
_080E3122:
	movs r2, #1
	mov r8, r2
_080E3126:
	mov r0, r8
	cmp r0, #0
	bne _080E312E
	b _080E32C6
_080E312E:
	mov r1, sl
	ldr r3, [r1]
	ldr r0, [r3, #0xc]
	cmp r0, #0
	bne _080E313E
	str r4, [sp]
	str r3, [sp, #4]
	b _080E317E
_080E313E:
	str r4, [sp]
	movs r0, #0
	str r0, [sp, #4]
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r5, #0
	b _080E32A2
_080E314C:
	cmp r2, r1
	bne _080E3198
	ldr r0, [r2, #0xc]
	adds r2, r0, #0
	adds r2, #0x10
	movs r3, #0
	ldrb r0, [r0, #0x10]
	ldrb r1, [r4]
	cmp r0, r1
	blo _080E316C
	cmp r1, r0
	blo _080E316E
	ldrb r0, [r2, #1]
	ldrb r2, [r4, #1]
	cmp r0, r2
	bhs _080E316E
_080E316C:
	movs r3, #1
_080E316E:
	cmp r3, #0
	beq _080E318A
	ldr r0, [r6, #4]
	ldr r3, [r0, #0xc]
	str r4, [sp]
	mov r1, sl
	ldr r0, [r1]
	str r0, [sp, #4]
_080E317E:
	adds r0, r7, #0
	adds r1, r6, #0
	movs r2, #0
	bl sub_80E2EA4
	b _080E32D4
_080E318A:
	add r0, sp, #8
	adds r1, r6, #0
	adds r2, r4, #0
	bl sub_80E2F74
	ldr r0, [sp, #8]
	b _080E32D2
_080E3198:
	str r2, [sp, #8]
	adds r0, r2, #0
	bl sub_80E2354
	str r0, [sp, #8]
	mov r2, sl
	ldr r0, [r2]
	adds r2, r0, #0
	adds r2, #0x10
	movs r3, #0
	ldrb r1, [r4]
	ldrb r0, [r0, #0x10]
	cmp r1, r0
	blo _080E31C0
	cmp r0, r1
	blo _080E31C2
	ldrb r0, [r4, #1]
	ldrb r2, [r2, #1]
	cmp r0, r2
	bhs _080E31C2
_080E31C0:
	movs r3, #1
_080E31C2:
	mov sb, r3
	cmp r3, #0
	beq _080E31FE
	ldr r0, [sp, #8]
	adds r3, r0, #0
	adds r3, #0x10
	movs r1, #0
	mov r8, r1
	ldrb r2, [r0, #0x10]
	ldrb r1, [r4]
	adds r5, r0, #0
	cmp r2, r1
	blo _080E31E8
	cmp r1, r2
	blo _080E31EC
	ldrb r0, [r3, #1]
	ldrb r2, [r4, #1]
	cmp r0, r2
	bhs _080E31EC
_080E31E8:
	movs r0, #1
	mov r8, r0
_080E31EC:
	mov r1, r8
	cmp r1, #0
	beq _080E31FE
	ldr r0, [r5, #0xc]
	cmp r0, #0
	beq _080E3298
	mov r2, sl
	ldr r3, [r2]
	b _080E32AA
_080E31FE:
	mov r1, sl
	ldr r0, [r1]
	str r0, [sp, #0xc]
	bl sub_80E2B28
	str r0, [sp, #0xc]
	movs r0, #1
	mov r1, sb
	eors r1, r0
	mov r2, sb
	cmp r2, #0
	bne _080E32BC
	mov r1, sl
	ldr r0, [r1]
	movs r2, #0x10
	adds r2, r2, r0
	mov ip, r2
	movs r2, #0
	mov r1, sp
	strb r2, [r1, #0x18]
	ldrb r1, [r4]
	ldrb r3, [r0, #0x10]
	adds r2, r1, #0
	adds r5, r0, #0
	mov r8, r1
	cmp r3, r2
	blo _080E3242
	cmp r2, r3
	blo _080E3248
	mov r1, ip
	ldrb r0, [r1, #1]
	ldrb r2, [r4, #1]
	cmp r0, r2
	bhs _080E3248
_080E3242:
	movs r1, #1
	mov r0, sp
	strb r1, [r0, #0x18]
_080E3248:
	mov r2, sp
	ldrb r2, [r2, #0x18]
	adds r1, r2, #0
	mov r0, sb
	cmp r0, #0
	bne _080E32BC
	cmp r1, #0
	beq _080E32BC
	ldr r0, [r6, #4]
	ldr r3, [sp, #0xc]
	cmp r3, r0
	beq _080E3292
	movs r2, #0x10
	adds r2, r2, r3
	mov ip, r2
	movs r2, #0
	mov r0, sp
	strb r2, [r0, #0x1c]
	mov r0, r8
	ldrb r2, [r3, #0x10]
	cmp r0, r2
	blo _080E3284
	cmp r2, r0
	blo _080E328A
	ldrb r0, [r4, #1]
	mov r8, r0
	mov r2, ip
	ldrb r2, [r2, #1]
	cmp r8, r2
	bhs _080E328A
_080E3284:
	movs r2, #1
	mov r0, sp
	strb r2, [r0, #0x1c]
_080E328A:
	mov r0, sp
	ldrb r0, [r0, #0x1c]
	cmp r0, #0
	beq _080E32BC
_080E3292:
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080E32AA
_080E3298:
	str r4, [sp]
	str r5, [sp, #4]
	adds r0, r7, #0
	adds r1, r6, #0
	movs r2, #0
_080E32A2:
	adds r3, r5, #0
	bl sub_80E2EA4
	b _080E32D4
_080E32AA:
	str r4, [sp]
	movs r0, #0
	str r0, [sp, #4]
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r3, #0
	bl sub_80E2EA4
	b _080E32D4
_080E32BC:
	cmp sb, r1
	bne _080E32C6
	mov r1, sl
	ldr r0, [r1]
	b _080E32D2
_080E32C6:
	add r0, sp, #0x10
	adds r1, r6, #0
	adds r2, r4, #0
	bl sub_80E2F74
	ldr r0, [sp, #0x10]
_080E32D2:
	str r0, [r7]
_080E32D4:
	adds r0, r7, #0
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080E32E8:
	.byte 0xF0, 0xB5, 0x47, 0x46, 0x80, 0xB4, 0x05, 0x1C
	.byte 0x88, 0x46, 0xEE, 0x20, 0x40, 0x00, 0x2C, 0x18, 0xA0, 0x68, 0x00, 0x28, 0x0C, 0xD0, 0x60, 0x68
	.byte 0x41, 0x68, 0x20, 0x1C, 0xFF, 0xF7, 0xB8, 0xFD, 0x60, 0x68, 0x80, 0x60, 0x60, 0x68, 0x00, 0x21
	.byte 0x41, 0x60, 0x60, 0x68, 0xC0, 0x60, 0xA1, 0x60, 0x60, 0x68, 0x00, 0x28, 0x01, 0xD0, 0xEC, 0xF7
	.byte 0x9F, 0xFF, 0xE6, 0x21, 0x49, 0x00, 0x68, 0x18, 0x42, 0x68, 0x01, 0x68, 0x2C, 0x1C, 0x20, 0x34
	.byte 0x2E, 0x1C, 0x1C, 0x36, 0x2F, 0x1C, 0x18, 0x37, 0x91, 0x42, 0x02, 0xD0, 0x1C, 0x31, 0x91, 0x42
	.byte 0xFC, 0xD1, 0x00, 0x68, 0x00, 0x28, 0x01, 0xD0, 0xEC, 0xF7, 0x8A, 0xFF, 0xCE, 0x20, 0x40, 0x00
	.byte 0x29, 0x18, 0x10, 0x48, 0x08, 0x60, 0xA8, 0x62, 0x20, 0x1C, 0x02, 0x21, 0x92, 0xF7, 0xB8, 0xF9
	.byte 0x30, 0x1C, 0x02, 0x21, 0x59, 0xF7, 0x1C, 0xFA, 0x38, 0x1C, 0x02, 0x21, 0x6D, 0xF7, 0xCE, 0xFC
	.byte 0xE9, 0x68, 0x00, 0x29, 0x05, 0xD0, 0x08, 0x68, 0x82, 0x68, 0x08, 0x1C, 0x03, 0x21, 0xF0, 0xF7
	.byte 0xC9, 0xFA, 0x28, 0x1C, 0x41, 0x46, 0x25, 0xF7, 0x99, 0xF9, 0x08, 0xBC, 0x98, 0x46, 0xF0, 0xBC
	.byte 0x01, 0xBC, 0x00, 0x47, 0x28, 0x5A, 0x0E, 0x08

	thumb_func_start sub_80E3398
sub_80E3398: @ 0x080E3398
	push {r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r7, r2, #0
	subs r1, r1, r6
	asrs r3, r1, #2
_080E33A2:
	cmp r3, #0
	ble _080E33C8
	asrs r2, r3, #1
	lsls r0, r2, #2
	adds r4, r6, r0
	movs r5, #0
	ldr r1, [r4]
	ldr r0, [r7]
	cmp r1, r0
	bhs _080E33B8
	movs r5, #1
_080E33B8:
	cmp r5, #0
	beq _080E33C4
	adds r6, r4, #4
	subs r0, r3, r2
	subs r3, r0, #1
	b _080E33A2
_080E33C4:
	adds r3, r2, #0
	b _080E33A2
_080E33C8:
	adds r0, r6, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
_080E33D0:
	.byte 0x70, 0xB5, 0x05, 0x1C, 0x0E, 0x1C, 0xA6, 0x21, 0x09, 0x01, 0x68, 0x18, 0x00, 0x68, 0x00, 0x28
	.byte 0x01, 0xD0, 0xEC, 0xF7, 0x3D, 0xFF, 0x26, 0x4A, 0xAC, 0x18, 0x61, 0x68, 0x20, 0x1C, 0x23, 0xF7
	.byte 0xF7, 0xFF, 0x20, 0x1C, 0x02, 0x21, 0x23, 0xF7, 0xC5, 0xFE, 0x83, 0x20, 0x00, 0x01, 0x2C, 0x18
	.byte 0x61, 0x68, 0x20, 0x1C, 0x24, 0xF7, 0x10, 0xFC, 0x20, 0x1C, 0x02, 0x21, 0x24, 0xF7, 0xEC, 0xFA
	.byte 0x1C, 0x49, 0x6C, 0x18, 0x61, 0x68, 0x20, 0x1C, 0x23, 0xF7, 0xE2, 0xFF, 0x20, 0x1C, 0x02, 0x21
	.byte 0x23, 0xF7, 0xB0, 0xFE, 0x82, 0x22, 0x12, 0x01, 0xAC, 0x18, 0x61, 0x68, 0x20, 0x1C, 0x24, 0xF7
	.byte 0xFB, 0xFB, 0x20, 0x1C, 0x02, 0x21, 0x24, 0xF7, 0xD7, 0xFA, 0x13, 0x48, 0x2C, 0x18, 0x61, 0x68
	.byte 0x20, 0x1C, 0x23, 0xF7, 0xCD, 0xFF, 0x20, 0x1C, 0x02, 0x21, 0x23, 0xF7, 0x9B, 0xFE, 0x81, 0x21
	.byte 0x09, 0x01, 0x6C, 0x18, 0x61, 0x68, 0x20, 0x1C, 0x24, 0xF7, 0xE6, 0xFB, 0x20, 0x1C, 0x02, 0x21
	.byte 0x24, 0xF7, 0xC2, 0xFA, 0x09, 0x4A, 0xA8, 0x18, 0x09, 0x49, 0x01, 0x60, 0x30, 0x3A, 0xA8, 0x18
	.byte 0x01, 0x60, 0x28, 0x1C, 0x31, 0x1C, 0x25, 0xF7, 0x21, 0xF9, 0x70, 0xBC, 0x01, 0xBC, 0x00, 0x47
	.byte 0x38, 0x08, 0x00, 0x00, 0x28, 0x08, 0x00, 0x00, 0x18, 0x08, 0x00, 0x00, 0x44, 0x07, 0x00, 0x00
	.byte 0x28, 0x5A, 0x0E, 0x08

	thumb_func_start sub_80E3494
sub_80E3494: @ 0x080E3494
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	movs r5, #0
	str r5, [r4, #4]
	str r0, [sp, #4]
	movs r0, #0xc
	bl sub_80005D4
	add r1, sp, #4
	ldr r2, [r4, #8]
	ldrb r3, [r4, #0xc]
	bl sub_8092570
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [r1]
	str r0, [r6]
	ldr r1, [sp]
	cmp r1, #0
	beq _080E34D2
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E34D2:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_80E34DC
sub_80E34DC: @ 0x080E34DC
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080E34F4
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E34F4:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_800080C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E3504
sub_80E3504: @ 0x080E3504
	push {r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r7, r1, #0
	adds r0, #0x94
	ldr r0, [r0]
	cmp r0, #0
	beq _080E3518
	movs r1, #3
	bl sub_80CE3DC
_080E3518:
	adds r0, r6, #0
	adds r0, #0x90
	ldr r5, [r0]
	cmp r5, #0
	beq _080E3552
	adds r4, r5, #0
	adds r4, #0x74
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	ldr r0, _080E35D8 @ =gUnknown_080E5A28
	str r0, [r5, #4]
	adds r0, r5, #0
	bl sub_8000608
_080E3552:
	adds r0, r6, #0
	adds r0, #0x8c
	ldr r5, [r0]
	cmp r5, #0
	beq _080E358C
	ldr r0, _080E35D8 @ =gUnknown_080E5A28
	str r0, [r5, #0x24]
	adds r4, r5, #0
	adds r4, #0x1c
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	adds r0, r5, #0
	bl sub_8000608
_080E358C:
	adds r0, r6, #0
	adds r0, #0x80
	movs r1, #2
	bl sub_8050D0C
	ldr r1, [r6, #0x7c]
	cmp r1, #0
	beq _080E35AE
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E35AE:
	ldr r1, [r6, #0x78]
	cmp r1, #0
	beq _080E35C6
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E35C6:
	ldr r0, _080E35D8 @ =gUnknown_080E5A28
	str r0, [r6, #0x10]
	adds r0, r6, #0
	adds r1, r7, #0
	bl sub_80086BC
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080E35D8: .4byte gUnknown_080E5A28

	thumb_func_start sub_80E35DC
sub_80E35DC: @ 0x080E35DC
	push {lr}
	subs r0, #8
	bl sub_8093308
	pop {r0}
	bx r0

	thumb_func_start sub_80E35E8
sub_80E35E8: @ 0x080E35E8
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0xe4
	lsls r0, r0, #1
	adds r4, r4, r0
	ldr r1, _080E360C @ =gUnknown_081004E0
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8050DC8
	adds r0, r4, #0
	movs r1, #0x39
	bl sub_8050E50
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E360C: .4byte gUnknown_081004E0

	thumb_func_start sub_80E3610
sub_80E3610: @ 0x080E3610
	push {lr}
	subs r0, #8
	bl sub_80088CC
	movs r1, #2
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	rsbs r0, r0, #0
	lsrs r0, r0, #0x1f
	pop {r1}
	bx r1

	thumb_func_start sub_80E3628
sub_80E3628: @ 0x080E3628
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0xe4
	lsls r0, r0, #1
	adds r4, r4, r0
	ldr r1, _080E364C @ =gUnknown_08100524
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8050DC8
	adds r0, r4, #0
	movs r1, #0x38
	bl sub_8050E50
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E364C: .4byte gUnknown_08100524

	thumb_func_start sub_80E3650
sub_80E3650: @ 0x080E3650
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0xe4
	lsls r0, r0, #1
	adds r4, r4, r0
	ldr r1, _080E3674 @ =gUnknown_08100540
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8050DC8
	adds r0, r4, #0
	movs r1, #0x38
	bl sub_8050E50
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E3674: .4byte gUnknown_08100540

	thumb_func_start sub_80E3678
sub_80E3678: @ 0x080E3678
	push {r4, lr}
	adds r2, r0, #0
	movs r1, #0xf6
	lsls r1, r1, #2
	adds r0, r2, r1
	movs r1, #0
	str r1, [r0]
	movs r3, #0xf7
	lsls r3, r3, #2
	adds r0, r2, r3
	str r1, [r0]
	movs r0, #0xe4
	lsls r0, r0, #1
	adds r4, r2, r0
	ldr r1, _080E36B0 @ =gUnknown_08100558
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8050DC8
	adds r0, r4, #0
	movs r1, #0x3a
	bl sub_8050E50
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E36B0: .4byte gUnknown_08100558

	thumb_func_start sub_80E36B4
sub_80E36B4: @ 0x080E36B4
	push {r4, r5, r6, lr}
	sub sp, #0xc
	movs r6, #0
	movs r1, #0xf7
	lsls r1, r1, #2
	adds r4, r0, r1
	ldr r1, [r4]
	cmp r1, #0
	beq _080E36CC
	cmp r1, #1
	beq _080E3700
	b _080E3726
_080E36CC:
	movs r1, #0xe4
	lsls r1, r1, #1
	adds r5, r0, r1
	adds r0, r5, #0
	bl sub_8050D34
	cmp r0, #3
	bne _080E3726
	movs r0, #1
	str r0, [r4]
	ldr r1, _080E36F4 @ =gUnknown_08100588
	ldr r2, _080E36F8 @ =gUnknown_0810058C
	ldr r3, _080E36FC @ =gUnknown_08100590
	str r6, [sp]
	str r6, [sp, #4]
	str r6, [sp, #8]
	adds r0, r5, #0
	bl sub_8050E30
	b _080E3726
	.align 2, 0
_080E36F4: .4byte gUnknown_08100588
_080E36F8: .4byte gUnknown_0810058C
_080E36FC: .4byte gUnknown_08100590
_080E3700:
	movs r1, #0xe4
	lsls r1, r1, #1
	adds r4, r0, r1
	adds r0, r4, #0
	bl sub_8050D34
	cmp r0, #3
	bne _080E3726
	adds r0, r4, #0
	bl sub_8050DF0
	cmp r0, #1
	beq _080E3720
	cmp r0, #2
	beq _080E3724
	b _080E3726
_080E3720:
	movs r6, #2
	b _080E3726
_080E3724:
	movs r6, #3
_080E3726:
	adds r0, r6, #0
	add sp, #0xc
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_80E3730
sub_80E3730: @ 0x080E3730
	bx lr
	.align 2, 0

	thumb_func_start sub_80E3734
sub_80E3734: @ 0x080E3734
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0xe4
	lsls r0, r0, #1
	adds r4, r4, r0
	ldr r1, _080E3758 @ =gUnknown_08100594
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8050DC8
	adds r0, r4, #0
	movs r1, #0x38
	bl sub_8050E50
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E3758: .4byte gUnknown_08100594

	thumb_func_start sub_80E375C
sub_80E375C: @ 0x080E375C
	push {lr}
	subs r0, #8
	bl sub_80088CC
	movs r1, #2
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	rsbs r0, r0, #0
	lsrs r0, r0, #0x1f
	pop {r1}
	bx r1

	thumb_func_start sub_80E3774
sub_80E3774: @ 0x080E3774
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0xe4
	lsls r0, r0, #1
	adds r4, r4, r0
	ldr r1, _080E3794 @ =gUnknown_081005D8
	adds r0, r4, #0
	bl sub_8050D8C
	adds r0, r4, #0
	movs r1, #0x38
	bl sub_8050E50
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E3794: .4byte gUnknown_081005D8
_080E3798:
	.byte 0x70, 0x47, 0x00, 0x00

	thumb_func_start sub_80E379C
sub_80E379C: @ 0x080E379C
	push {r4, r5, lr}
	adds r5, r0, #0
	movs r1, #0xf6
	lsls r1, r1, #2
	adds r0, r5, r1
	movs r1, #0
	str r1, [r0]
	movs r2, #0xf7
	lsls r2, r2, #2
	adds r0, r5, r2
	str r1, [r0]
	movs r0, #0xe4
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, _080E37D8 @ =gUnknown_081005EC
	adds r0, r4, #0
	bl sub_8050D8C
	adds r0, r4, #0
	movs r1, #0x3a
	bl sub_8050E50
	movs r2, #0xea
	lsls r2, r2, #1
	adds r1, r5, r2
	movs r0, #4
	str r0, [r1]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E37D8: .4byte gUnknown_081005EC

	thumb_func_start sub_80E37DC
sub_80E37DC: @ 0x080E37DC
	push {r4, lr}
	sub sp, #0x10
	adds r1, r0, #0
	movs r4, #0
	movs r0, #0xf7
	lsls r0, r0, #2
	adds r2, r1, r0
	ldr r0, [r2]
	cmp r0, #0
	beq _080E37F6
	cmp r0, #1
	beq _080E3828
	b _080E384E
_080E37F6:
	movs r3, #0xea
	lsls r3, r3, #1
	adds r0, r1, r3
	ldr r0, [r0]
	cmp r0, #3
	bne _080E384E
	movs r0, #1
	str r0, [r2]
	movs r2, #0xe4
	lsls r2, r2, #1
	adds r0, r1, r2
	ldr r1, _080E3820 @ =gUnknown_0810058C
	ldr r2, _080E3824 @ =gUnknown_08100590
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	str r4, [sp, #0xc]
	movs r3, #0
	bl sub_8050E0C
	b _080E384E
	.align 2, 0
_080E3820: .4byte gUnknown_0810058C
_080E3824: .4byte gUnknown_08100590
_080E3828:
	movs r3, #0xea
	lsls r3, r3, #1
	adds r0, r1, r3
	ldr r0, [r0]
	cmp r0, #3
	bne _080E384E
	movs r2, #0xe4
	lsls r2, r2, #1
	adds r0, r1, r2
	bl sub_8050DF0
	cmp r0, #1
	beq _080E3848
	cmp r0, #2
	beq _080E384C
	b _080E384E
_080E3848:
	movs r4, #2
	b _080E384E
_080E384C:
	movs r4, #3
_080E384E:
	adds r0, r4, #0
	add sp, #0x10
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_80E3858
sub_80E3858: @ 0x080E3858
	bx lr
	.align 2, 0

	thumb_func_start sub_80E385C
sub_80E385C: @ 0x080E385C
	push {lr}
	subs r0, #8
	bl sub_80088C4
	pop {r1}
	bx r1

	thumb_func_start sub_80E3868
sub_80E3868: @ 0x080E3868
	push {lr}
	subs r0, #8
	bl sub_80088CC
	pop {r1}
	bx r1

	thumb_func_start sub_80E3874
sub_80E3874: @ 0x080E3874
	push {lr}
	adds r2, r0, #0
	movs r1, #0xdc
	lsls r1, r1, #1
	adds r0, r2, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E3896
	adds r1, #3
	adds r0, r2, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E3892
	movs r0, #0
	b _080E38AA
_080E3892:
	movs r0, #1
	b _080E38AA
_080E3896:
	ldr r0, [r2]
	ldr r1, [r0, #0x4c]
	adds r0, r2, #0
	bl sub_80D3910
	movs r1, #0
	cmp r0, #0
	bne _080E38A8
	movs r1, #1
_080E38A8:
	adds r0, r1, #0
_080E38AA:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80E38B0
sub_80E38B0: @ 0x080E38B0
	push {lr}
	adds r1, r0, #0
	movs r2, #0xdc
	lsls r2, r2, #1
	adds r0, r1, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E38C8
	adds r2, #2
	adds r0, r1, r2
	ldrb r0, [r0]
	b _080E38DC
_080E38C8:
	ldr r0, [r1, #0x14]
	ldr r2, [r0, #4]
	cmp r2, #0
	beq _080E38DA
	ldr r0, [r1, #0x18]
	cmp r2, r0
	beq _080E38DA
	movs r0, #1
	b _080E38DC
_080E38DA:
	movs r0, #0
_080E38DC:
	pop {r1}
	bx r1

	thumb_func_start sub_80E38E0
sub_80E38E0: @ 0x080E38E0
	push {lr}
	adds r2, r0, #0
	movs r1, #0xdc
	lsls r1, r1, #1
	adds r0, r2, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E38F8
	adds r1, #1
	adds r0, r2, r1
	ldrb r0, [r0]
	b _080E390C
_080E38F8:
	ldr r0, [r2]
	ldr r1, [r0, #0x4c]
	adds r0, r2, #0
	bl sub_80D3910
	cmp r0, #0
	beq _080E390A
	movs r0, #0
	b _080E390C
_080E390A:
	movs r0, #1
_080E390C:
	pop {r1}
	bx r1

	thumb_func_start sub_80E3910
sub_80E3910: @ 0x080E3910
	movs r0, #1
	bx lr

	thumb_func_start sub_80E3914
sub_80E3914: @ 0x080E3914
	push {lr}
	bl sub_80D0340
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E3920
sub_80E3920: @ 0x080E3920
	push {lr}
	bl sub_80D02F0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E392C
sub_80E392C: @ 0x080E392C
	push {lr}
	bl sub_80D035C
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E3938
sub_80E3938: @ 0x080E3938
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #0xdc
	lsls r1, r1, #1
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E397A
	ldr r0, [r4]
	subs r1, #0xb4
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r4, #0
	bl sub_80D3910
	lsrs r0, r0, #8
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	bne _080E3986
	ldr r0, [r4]
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r4, #0
	bl sub_80D3910
	lsrs r0, r0, #8
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	bne _080E398A
_080E397A:
	bl sub_80D06D0
	cmp r0, #0
	beq _080E3986
	cmp r0, #0xb
	bne _080E398A
_080E3986:
	movs r0, #0
	b _080E398C
_080E398A:
	movs r0, #1
_080E398C:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80E3994
sub_80E3994: @ 0x080E3994
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #0xdc
	lsls r1, r1, #1
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E39D6
	ldr r0, [r4]
	subs r1, #0xb0
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r4, #0
	bl sub_80D3910
	lsrs r0, r0, #8
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	bne _080E39DE
	ldr r0, [r4]
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r4, #0
	bl sub_80D3910
	lsrs r0, r0, #8
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	bne _080E39DE
_080E39D6:
	bl sub_80D06D0
	cmp r0, #0xb
	beq _080E39E2
_080E39DE:
	movs r0, #0
	b _080E39E4
_080E39E2:
	movs r0, #1
_080E39E4:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80E39EC
sub_80E39EC: @ 0x080E39EC
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #0xdc
	lsls r1, r1, #1
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E3A32
	ldr r0, [r4]
	subs r1, #0xb0
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r4, #0
	bl sub_80D3910
	lsrs r0, r0, #8
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	bne _080E3A2E
	ldr r0, [r4]
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r4, #0
	bl sub_80D3910
	lsrs r0, r0, #8
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	beq _080E3A32
_080E3A2E:
	movs r0, #1
	b _080E3A3E
_080E3A32:
	bl sub_80D06B4
	adds r1, r0, #0
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r0, r0, #0x1f
_080E3A3E:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_80E3A44
sub_80E3A44: @ 0x080E3A44
	push {lr}
	bl sub_80D06A8
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E3A50
sub_80E3A50: @ 0x080E3A50
	push {lr}
	bl sub_80D0678
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80E3A5C
sub_80E3A5C: @ 0x080E3A5C
	push {lr}
	adds r0, r1, #0
	lsls r1, r2, #0x18
	lsrs r1, r1, #0x18
	bl sub_80D0644
	pop {r0}
	bx r0

	thumb_func_start sub_80E3A6C
sub_80E3A6C: @ 0x080E3A6C
	push {lr}
	adds r0, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	ldr r3, [sp, #4]
	bl sub_80D0558
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E3A80
sub_80E3A80: @ 0x080E3A80
	push {lr}
	movs r0, #0
	bl sub_80D0454
	pop {r0}
	bx r0

	thumb_func_start sub_80E3A8C
sub_80E3A8C: @ 0x080E3A8C
	push {lr}
	adds r0, r1, #0
	adds r1, r2, #0
	bl sub_80D0444
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E3A9C
sub_80E3A9C: @ 0x080E3A9C
	push {r4, lr}
	adds r3, r0, #0
	cmp r1, #4
	bhi _080E3B58
	lsls r0, r1, #2
	ldr r1, _080E3AB0 @ =_080E3AB4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080E3AB0: .4byte _080E3AB4
_080E3AB4: @ jump table
	.4byte _080E3AC8 @ case 0
	.4byte _080E3AD4 @ case 1
	.4byte _080E3AE8 @ case 2
	.4byte _080E3B10 @ case 3
	.4byte _080E3B38 @ case 4
_080E3AC8:
	movs r0, #0xdc
	lsls r0, r0, #1
	adds r1, r3, r0
	movs r0, #0
	strb r0, [r1]
	b _080E3B58
_080E3AD4:
	movs r1, #0xdc
	lsls r1, r1, #1
	adds r0, r3, r1
	movs r2, #0
	movs r1, #1
	strb r1, [r0]
	ldr r4, _080E3AE4 @ =0x000001B9
	b _080E3B54
	.align 2, 0
_080E3AE4: .4byte 0x000001B9
_080E3AE8:
	movs r1, #0xdc
	lsls r1, r1, #1
	adds r0, r3, r1
	movs r2, #0
	movs r1, #1
	strb r1, [r0]
	ldr r4, _080E3B08 @ =0x000001B9
	adds r0, r3, r4
	strb r1, [r0]
	adds r4, #1
	adds r0, r3, r4
	strb r1, [r0]
	ldr r1, _080E3B0C @ =0x000001BB
	adds r0, r3, r1
	b _080E3B56
	.align 2, 0
_080E3B08: .4byte 0x000001B9
_080E3B0C: .4byte 0x000001BB
_080E3B10:
	movs r2, #0xdc
	lsls r2, r2, #1
	adds r0, r3, r2
	movs r2, #0
	movs r1, #1
	strb r1, [r0]
	ldr r4, _080E3B30 @ =0x000001B9
	adds r0, r3, r4
	strb r1, [r0]
	adds r4, #1
	adds r0, r3, r4
	strb r2, [r0]
	ldr r2, _080E3B34 @ =0x000001BB
	adds r0, r3, r2
	strb r1, [r0]
	b _080E3B58
	.align 2, 0
_080E3B30: .4byte 0x000001B9
_080E3B34: .4byte 0x000001BB
_080E3B38:
	movs r4, #0xdc
	lsls r4, r4, #1
	adds r0, r3, r4
	movs r2, #0
	movs r1, #1
	strb r1, [r0]
	adds r4, #1
	adds r0, r3, r4
	strb r1, [r0]
	movs r1, #0xdd
	lsls r1, r1, #1
	adds r0, r3, r1
	strb r2, [r0]
	adds r4, #2
_080E3B54:
	adds r0, r3, r4
_080E3B56:
	strb r2, [r0]
_080E3B58:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E3B60
sub_80E3B60: @ 0x080E3B60
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _080E3B7C @ =gUnknown_080E7F0C
	str r0, [r4]
	bl sub_80D02EC
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_8094268
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E3B7C: .4byte gUnknown_080E7F0C

	thumb_func_start sub_80E3B80
sub_80E3B80: @ 0x080E3B80
	push {r4, r5, r6, lr}
	sub sp, #0x28
	adds r6, r0, #0
	cmp r2, #0xf1
	beq _080E3BB0
	cmp r2, #0xf1
	bgt _080E3B94
	cmp r2, #0xf0
	beq _080E3B9A
	b _080E3C22
_080E3B94:
	cmp r2, #0xff
	beq _080E3BC8
	b _080E3C22
_080E3B9A:
	ldrb r0, [r1, #6]
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r0, _080E3BAC @ =gUnknown_08100AD2
	adds r5, r1, r0
	adds r0, r5, #0
	b _080E3BF6
	.align 2, 0
_080E3BAC: .4byte gUnknown_08100AD2
_080E3BB0:
	ldrb r0, [r1, #7]
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r0, _080E3BC4 @ =gUnknown_08100BD7
	adds r5, r1, r0
	adds r0, r5, #0
	b _080E3BF6
	.align 2, 0
_080E3BC4: .4byte gUnknown_08100BD7
_080E3BC8:
	ldrh r0, [r1, #4]
	cmp r0, #0xab
	bhi _080E3BE2
	add r4, sp, #0x20
	adds r1, r0, #0
	subs r1, #1
	adds r0, r4, #0
	bl sub_800DCA8
	adds r0, r4, #0
	bl sub_800DCB8
	b _080E3BF4
_080E3BE2:
	add r4, sp, #0x24
	ldrh r1, [r1, #4]
	subs r1, #0xac
	adds r0, r4, #0
	bl sub_800DF50
	adds r0, r4, #0
	bl sub_800DF58
_080E3BF4:
	adds r5, r0, #0
_080E3BF6:
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, #0x1f
	bls _080E3C02
	movs r4, #0x1f
_080E3C02:
	mov r0, sp
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_80D3994
	mov r0, sp
	adds r1, r0, r4
	movs r0, #0
	strb r0, [r1]
	movs r0, #1
	strb r0, [r6]
	adds r0, r6, #4
	mov r1, sp
	bl sub_80D3B28
	b _080E3C30
_080E3C22:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	strb r0, [r6]
	adds r0, r6, #4
	bl sub_80D3B28
_080E3C30:
	adds r0, r6, #0
	add sp, #0x28
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80E3C3C
sub_80E3C3C: @ 0x080E3C3C
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	ldr r0, _080E3D88 @ =0x000033D8
	adds r1, r5, r0
	ldr r0, _080E3D8C @ =gUnknown_080E76F8
	str r0, [r1]
	movs r1, #0xca
	lsls r1, r1, #2
	adds r4, r5, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r2, #0xc8
	lsls r2, r2, #2
	adds r4, r5, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r0, #0xc6
	lsls r0, r0, #2
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r1, #0xc4
	lsls r1, r1, #2
	adds r4, r5, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r2, #0xc2
	lsls r2, r2, #2
	adds r4, r5, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r0, #0xc0
	lsls r0, r0, #2
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r1, #0xbe
	lsls r1, r1, #2
	adds r4, r5, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r2, #0xbc
	lsls r2, r2, #2
	adds r4, r5, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r0, #0xba
	lsls r0, r0, #2
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r1, #0xb8
	lsls r1, r1, #2
	adds r4, r5, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r2, #0x94
	lsls r2, r2, #1
	adds r0, r5, r2
	ldr r4, _080E3D90 @ =gUnknown_080E5A28
	str r4, [r0]
	adds r0, r5, #0
	adds r0, #0xf8
	str r4, [r0]
	subs r0, #0x30
	str r4, [r0]
	subs r0, #0x30
	str r4, [r0]
	subs r0, #0x18
	movs r1, #2
	bl sub_8050D0C
	ldr r1, [r5, #0x7c]
	cmp r1, #0
	beq _080E3D5E
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E3D5E:
	ldr r1, [r5, #0x78]
	cmp r1, #0
	beq _080E3D76
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E3D76:
	str r4, [r5, #0x10]
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_80086BC
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080E3D88: .4byte 0x000033D8
_080E3D8C: .4byte gUnknown_080E76F8
_080E3D90: .4byte gUnknown_080E5A28

	thumb_func_start sub_80E3D94
sub_80E3D94: @ 0x080E3D94
	push {lr}
	adds r2, r0, #0
	ldr r0, _080E3DB0 @ =gUnknown_080E76F8
	str r0, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080E3DAA
	adds r0, r2, #0
	bl sub_8000608
_080E3DAA:
	pop {r0}
	bx r0
	.align 2, 0
_080E3DB0: .4byte gUnknown_080E76F8

	thumb_func_start sub_80E3DB4
sub_80E3DB4: @ 0x080E3DB4
	push {r4, r5, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	adds r3, r0, #0
	subs r0, r5, r3
	asrs r2, r0, #3
	cmp r2, #0
	ble _080E3DEC
	ldrh r1, [r4]
_080E3DC6:
	ldrh r0, [r3]
	cmp r0, r1
	beq _080E3E1C
	adds r3, #2
	ldrh r0, [r3]
	cmp r0, r1
	beq _080E3E1C
	adds r3, #2
	ldrh r0, [r3]
	cmp r0, r1
	beq _080E3E1C
	adds r3, #2
	ldrh r0, [r3]
	cmp r0, r1
	beq _080E3E1C
	adds r3, #2
	subs r2, #1
	cmp r2, #0
	bgt _080E3DC6
_080E3DEC:
	subs r0, r5, r3
	asrs r0, r0, #1
	cmp r0, #1
	beq _080E3E14
	cmp r0, #1
	ble _080E3E20
	cmp r0, #2
	beq _080E3E0A
	cmp r0, #3
	bne _080E3E20
	ldrh r0, [r3]
	ldrh r1, [r4]
	cmp r0, r1
	beq _080E3E1C
	adds r3, #2
_080E3E0A:
	ldrh r0, [r3]
	ldrh r1, [r4]
	cmp r0, r1
	beq _080E3E1C
	adds r3, #2
_080E3E14:
	ldrh r0, [r3]
	ldrh r4, [r4]
	cmp r0, r4
	bne _080E3E20
_080E3E1C:
	adds r0, r3, #0
	b _080E3E22
_080E3E20:
	adds r0, r5, #0
_080E3E22:
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_80E3E28
sub_80E3E28: @ 0x080E3E28
	push {r4, r5, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	adds r3, r0, #0
	subs r0, r5, r3
	asrs r2, r0, #3
	cmp r2, #0
	ble _080E3E60
	ldrh r1, [r4]
_080E3E3A:
	ldrh r0, [r3]
	cmp r0, r1
	beq _080E3E90
	adds r3, #2
	ldrh r0, [r3]
	cmp r0, r1
	beq _080E3E90
	adds r3, #2
	ldrh r0, [r3]
	cmp r0, r1
	beq _080E3E90
	adds r3, #2
	ldrh r0, [r3]
	cmp r0, r1
	beq _080E3E90
	adds r3, #2
	subs r2, #1
	cmp r2, #0
	bgt _080E3E3A
_080E3E60:
	subs r0, r5, r3
	asrs r0, r0, #1
	cmp r0, #1
	beq _080E3E88
	cmp r0, #1
	ble _080E3E94
	cmp r0, #2
	beq _080E3E7E
	cmp r0, #3
	bne _080E3E94
	ldrh r0, [r3]
	ldrh r1, [r4]
	cmp r0, r1
	beq _080E3E90
	adds r3, #2
_080E3E7E:
	ldrh r0, [r3]
	ldrh r1, [r4]
	cmp r0, r1
	beq _080E3E90
	adds r3, #2
_080E3E88:
	ldrh r0, [r3]
	ldrh r4, [r4]
	cmp r0, r4
	bne _080E3E94
_080E3E90:
	adds r0, r3, #0
	b _080E3E96
_080E3E94:
	adds r0, r5, #0
_080E3E96:
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_80E3E9C
sub_80E3E9C: @ 0x080E3E9C
	push {r4, r5, r6, r7, lr}
	adds r7, r1, #0
	adds r6, r2, #0
	adds r4, r0, #0
	subs r0, r7, r4
	asrs r5, r0, #5
	cmp r5, #0
	ble _080E3EF2
_080E3EAC:
	adds r0, r4, #0
	adds r1, r6, #0
	bl sub_809E8E4
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080E3F34
	adds r4, #8
	adds r0, r4, #0
	adds r1, r6, #0
	bl sub_809E8E4
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080E3F34
	adds r4, #8
	adds r0, r4, #0
	adds r1, r6, #0
	bl sub_809E8E4
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080E3F34
	adds r4, #8
	adds r0, r4, #0
	adds r1, r6, #0
	bl sub_809E8E4
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080E3F34
	adds r4, #8
	subs r5, #1
	cmp r5, #0
	bgt _080E3EAC
_080E3EF2:
	subs r0, r7, r4
	asrs r0, r0, #3
	cmp r0, #1
	beq _080E3F26
	cmp r0, #1
	ble _080E3F38
	cmp r0, #2
	beq _080E3F16
	cmp r0, #3
	bne _080E3F38
	adds r0, r4, #0
	adds r1, r6, #0
	bl sub_809E8E4
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080E3F34
	adds r4, #8
_080E3F16:
	adds r0, r4, #0
	adds r1, r6, #0
	bl sub_809E8E4
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080E3F34
	adds r4, #8
_080E3F26:
	adds r0, r4, #0
	adds r1, r6, #0
	bl sub_809E8E4
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080E3F38
_080E3F34:
	adds r0, r4, #0
	b _080E3F3A
_080E3F38:
	adds r0, r7, #0
_080E3F3A:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_80E3F40
sub_80E3F40: @ 0x080E3F40
	push {r4, r5, r6, r7, lr}
	sub sp, #0x40
	adds r6, r0, #0
	adds r3, r1, #0
	cmp r2, #0xf1
	beq _080E4014
	cmp r2, #0xf1
	bgt _080E3F56
	cmp r2, #0xf0
	beq _080E3F5E
	b _080E4086
_080E3F56:
	cmp r2, #0xf2
	bne _080E3F5C
	b _080E4056
_080E3F5C:
	b _080E4086
_080E3F5E:
	movs r5, #5
	ldrsb r5, [r3, r5]
	cmp r5, #1
	beq _080E3FAC
	cmp r5, #1
	bgt _080E3F70
	cmp r5, #0
	beq _080E3F7A
	b _080E4086
_080E3F70:
	cmp r5, #2
	beq _080E3FD8
	cmp r5, #3
	beq _080E3FE0
	b _080E4086
_080E3F7A:
	ldr r7, _080E3FA8 @ =gUnknown_08104938
	adds r0, r7, #0
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, #0x1f
	bls _080E3F8A
	movs r4, #0x1f
_080E3F8A:
	mov r0, sp
	adds r1, r7, #0
	adds r2, r4, #0
	bl sub_80D3994
	mov r1, sp
	adds r0, r1, r4
	strb r5, [r0]
	movs r0, #1
	strb r0, [r6]
	adds r0, r6, #4
	bl sub_80D3B28
	b _080E4094
	.align 2, 0
_080E3FA8: .4byte gUnknown_08104938
_080E3FAC:
	ldr r7, _080E3FD4 @ =gUnknown_08104940
	adds r0, r7, #0
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, #0x1f
	bls _080E3FBC
	movs r4, #0x1f
_080E3FBC:
	mov r0, sp
	adds r1, r7, #0
	adds r2, r4, #0
	bl sub_80D3994
	mov r1, sp
	adds r0, r1, r4
	movs r1, #0
	strb r1, [r0]
	strb r5, [r6]
	b _080E4006
	.align 2, 0
_080E3FD4: .4byte gUnknown_08104940
_080E3FD8:
	ldr r5, _080E3FDC @ =gUnknown_08104948
	b _080E3FE2
	.align 2, 0
_080E3FDC: .4byte gUnknown_08104948
_080E3FE0:
	ldr r5, _080E4010 @ =gUnknown_08104950
_080E3FE2:
	adds r0, r5, #0
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, #0x1f
	bls _080E3FF0
	movs r4, #0x1f
_080E3FF0:
	mov r0, sp
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_80D3994
	mov r0, sp
	adds r1, r0, r4
	movs r0, #0
	strb r0, [r1]
	movs r0, #1
	strb r0, [r6]
_080E4006:
	adds r0, r6, #4
	mov r1, sp
	bl sub_80D3B28
	b _080E4094
	.align 2, 0
_080E4010: .4byte gUnknown_08104950
_080E4014:
	movs r0, #4
	ldrsb r0, [r3, r0]
	cmp r0, #9
	bgt _080E4034
	mov r1, sp
	movs r0, #0x81
	strb r0, [r1]
	movs r0, #0x40
	strb r0, [r1, #1]
	movs r0, #4
	ldrsb r0, [r3, r0]
	adds r1, #2
	movs r2, #0
	bl sub_804EC84
	b _080E4040
_080E4034:
	movs r0, #4
	ldrsb r0, [r3, r0]
	mov r1, sp
	movs r2, #0
	bl sub_804EC84
_080E4040:
	add r5, sp, #0x20
	mov r0, sp
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, #0x1f
	bls _080E4050
	movs r4, #0x1f
_080E4050:
	adds r0, r5, #0
	mov r1, sp
	b _080E406C
_080E4056:
	add r5, sp, #8
	ldr r7, [r3, #8]
	adds r0, r7, #0
	bl sub_80D3B78
	adds r4, r0, #0
	cmp r4, #0x1f
	bls _080E4068
	movs r4, #0x1f
_080E4068:
	adds r0, r5, #0
	adds r1, r7, #0
_080E406C:
	adds r2, r4, #0
	bl sub_80D3994
	adds r1, r5, r4
	movs r0, #0
	strb r0, [r1]
	movs r0, #1
	strb r0, [r6]
	adds r0, r6, #4
	adds r1, r5, #0
	bl sub_80D3B28
	b _080E4094
_080E4086:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	strb r0, [r6]
	adds r0, r6, #4
	bl sub_80D3B28
_080E4094:
	adds r0, r6, #0
	add sp, #0x40
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80E40A0
sub_80E40A0: @ 0x080E40A0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	movs r0, #0x87
	lsls r0, r0, #2
	adds r1, r5, r0
	ldr r0, _080E4188 @ =gUnknown_080E76F8
	str r0, [r1]
	movs r0, #0xd6
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r0, #0xd2
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r0, #0xce
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r0, #0xca
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r0, #0xc6
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r0, #0xc2
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r0, #0xbe
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r0, #0xba
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	adds r1, r5, #0
	adds r1, #0x80
	ldr r0, _080E418C @ =gUnknown_080E5A28
	str r0, [r1]
	str r0, [r5, #0x50]
	str r0, [r5, #0x20]
	ldr r0, [r5, #0x10]
	cmp r0, #0
	beq _080E4178
	movs r1, #3
	bl sub_8050D0C
_080E4178:
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_80086BC
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080E4188: .4byte gUnknown_080E76F8
_080E418C: .4byte gUnknown_080E5A28

	thumb_func_start sub_80E4190
sub_80E4190: @ 0x080E4190
	push {lr}
	adds r2, r0, #0
	ldr r0, _080E41AC @ =gUnknown_080E76F8
	str r0, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080E41A6
	adds r0, r2, #0
	bl sub_8000608
_080E41A6:
	pop {r0}
	bx r0
	.align 2, 0
_080E41AC: .4byte gUnknown_080E76F8

	thumb_func_start sub_80E41B0
sub_80E41B0: @ 0x080E41B0
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _080E41C8
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E41C8:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080E41DA
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E41DA:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_80007EC
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80E41E8
sub_80E41E8: @ 0x080E41E8
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080E4200
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E4200:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_80007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E4210
sub_80E4210: @ 0x080E4210
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080E4228
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E4228:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_80007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E4238
sub_80E4238: @ 0x080E4238
	push {lr}
	bl sub_80098AC
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E4244
sub_80E4244: @ 0x080E4244
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r6, r1, #0
	ldr r4, [sp, #0x14]
	adds r5, r3, #0
	ldr r0, [r6, #4]
	cmp r5, r0
	beq _080E426E
	ldr r0, [sp, #0x18]
	cmp r0, #0
	bne _080E42AE
	cmp r2, #0
	bne _080E426E
	movs r2, #0
	ldr r1, [r4]
	ldr r0, [r5, #0x10]
	cmp r1, r0
	bge _080E426A
	movs r2, #1
_080E426A:
	cmp r2, #0
	beq _080E42AE
_080E426E:
	movs r0, #0x18
	bl sub_80D01F8
	adds r2, r0, #0
	cmp r2, #0
	bne _080E4282
	movs r0, #0x18
	bl sub_80D3BC0
	adds r2, r0, #0
_080E4282:
	adds r1, r2, #0
	adds r1, #0x10
	cmp r1, #0
	beq _080E4292
	ldr r0, [r4]
	str r0, [r2, #0x10]
	ldr r0, [r4, #4]
	str r0, [r1, #4]
_080E4292:
	adds r4, r2, #0
	str r4, [r5, #8]
	ldr r1, [r6, #4]
	cmp r5, r1
	bne _080E42A4
	str r4, [r5, #4]
	ldr r0, [r6, #4]
	str r4, [r0, #0xc]
	b _080E42E0
_080E42A4:
	ldr r0, [r1, #8]
	cmp r5, r0
	bne _080E42E0
	str r4, [r1, #8]
	b _080E42E0
_080E42AE:
	movs r0, #0x18
	bl sub_80D01F8
	adds r2, r0, #0
	cmp r2, #0
	bne _080E42C2
	movs r0, #0x18
	bl sub_80D3BC0
	adds r2, r0, #0
_080E42C2:
	adds r1, r2, #0
	adds r1, #0x10
	cmp r1, #0
	beq _080E42D2
	ldr r0, [r4]
	str r0, [r2, #0x10]
	ldr r0, [r4, #4]
	str r0, [r1, #4]
_080E42D2:
	adds r4, r2, #0
	str r4, [r5, #0xc]
	ldr r1, [r6, #4]
	ldr r0, [r1, #0xc]
	cmp r5, r0
	bne _080E42E0
	str r4, [r1, #0xc]
_080E42E0:
	str r5, [r4, #4]
	movs r0, #0
	str r0, [r4, #8]
	str r0, [r4, #0xc]
	ldr r1, [r6, #4]
	adds r1, #4
	adds r0, r4, #0
	bl sub_80E21E0
	ldr r0, [r6, #8]
	adds r0, #1
	str r0, [r6, #8]
	str r4, [r7]
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80E4304
sub_80E4304: @ 0x080E4304
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x14
	adds r6, r0, #0
	mov r8, r1
	adds r7, r2, #0
	ldr r4, [r1, #4]
	ldr r5, [r4, #4]
	movs r0, #1
	cmp r5, #0
	beq _080E433A
	ldr r2, [r7]
_080E431E:
	adds r4, r5, #0
	movs r1, #0
	ldr r0, [r4, #0x10]
	cmp r2, r0
	bge _080E432A
	movs r1, #1
_080E432A:
	adds r0, r1, #0
	cmp r0, #0
	beq _080E4334
	ldr r5, [r4, #8]
	b _080E4336
_080E4334:
	ldr r5, [r4, #0xc]
_080E4336:
	cmp r5, #0
	bne _080E431E
_080E433A:
	str r4, [sp, #8]
	cmp r0, #0
	beq _080E4374
	mov r1, r8
	ldr r0, [r1, #4]
	ldr r0, [r0, #8]
	str r0, [sp, #0xc]
	movs r1, #0
	cmp r4, r0
	bne _080E4350
	movs r1, #1
_080E4350:
	cmp r1, #0
	beq _080E436C
	str r7, [sp]
	movs r0, #0
	str r0, [sp, #4]
	add r0, sp, #0x10
	mov r1, r8
	adds r2, r5, #0
	adds r3, r4, #0
	bl sub_80E4244
	movs r1, #1
	ldr r0, [sp, #0x10]
	b _080E439E
_080E436C:
	adds r0, r4, #0
	bl sub_80E2354
	str r0, [sp, #8]
_080E4374:
	ldr r2, [sp, #8]
	movs r3, #0
	ldr r1, [r2, #0x10]
	ldr r0, [r7]
	cmp r1, r0
	bge _080E4382
	movs r3, #1
_080E4382:
	adds r0, r3, #0
	cmp r0, #0
	beq _080E43A4
	str r7, [sp]
	movs r0, #0
	str r0, [sp, #4]
	add r0, sp, #0xc
	mov r1, r8
	adds r2, r5, #0
	adds r3, r4, #0
	bl sub_80E4244
	movs r1, #1
	ldr r0, [sp, #0xc]
_080E439E:
	str r0, [r6]
	strb r1, [r6, #4]
	b _080E43A8
_080E43A4:
	str r2, [r6]
	strb r0, [r6, #4]
_080E43A8:
	adds r0, r6, #0
	add sp, #0x14
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80E43B8
sub_80E43B8: @ 0x080E43B8
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r4, r5, #0
	adds r4, #0xa4
	ldr r0, [r4, #8]
	cmp r0, #0
	beq _080E43E2
	ldr r0, [r4, #4]
	ldr r1, [r0, #4]
	adds r0, r4, #0
	bl sub_80DC57C
	ldr r0, [r4, #4]
	str r0, [r0, #8]
	ldr r0, [r4, #4]
	movs r1, #0
	str r1, [r0, #4]
	ldr r0, [r4, #4]
	str r0, [r0, #0xc]
	str r1, [r4, #8]
_080E43E2:
	ldr r0, [r4, #4]
	cmp r0, #0
	beq _080E43EC
	bl sub_80D0260
_080E43EC:
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_80A4B6C
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E43FC
sub_80E43FC: @ 0x080E43FC
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r6, r0, #0
	adds r4, r6, #0
	adds r4, #8
	movs r5, #0
	str r5, [r4, #4]
	movs r0, #0x18
	bl sub_80D01F8
	cmp r0, #0
	bne _080E441A
	movs r0, #0x18
	bl sub_80D3BC0
_080E441A:
	str r0, [r4, #4]
	str r5, [r4, #8]
	str r5, [r4, #0xc]
	strb r5, [r0]
	str r5, [r0, #4]
	ldr r0, [r4, #4]
	str r0, [r0, #8]
	ldr r0, [r4, #4]
	str r0, [r0, #0xc]
	adds r0, r6, #0
	add sp, #8
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80E4438
sub_80E4438: @ 0x080E4438
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	mov r8, r0
	mov ip, r1
	ldrb r0, [r1]
	mov r1, r8
	strb r0, [r1]
	mov r5, ip
	ldrb r0, [r5, #1]
	strb r0, [r1, #1]
	mov r3, r8
	adds r3, #4
	movs r4, #1
	mov r2, ip
	adds r2, #4
	movs r6, #1
	rsbs r6, r6, #0
	mov sb, r6
_080E4460:
	adds r1, r3, #0
	adds r0, r2, #0
	ldm r0!, {r5, r6, r7}
	stm r1!, {r5, r6, r7}
	ldm r0!, {r5, r6, r7}
	stm r1!, {r5, r6, r7}
	ldm r0!, {r5, r7}
	stm r1!, {r5, r7}
	adds r3, #0x20
	adds r2, #0x20
	subs r4, #1
	cmp r4, sb
	bne _080E4460
	mov r4, r8
	adds r4, #0x44
	movs r6, #1
	mov r5, ip
	adds r5, #0x44
_080E4484:
	cmp r5, r4
	beq _080E449A
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	ldr r1, [r5, #4]
	adds r0, r4, #0
	bl sub_8007CD8
	str r0, [r4, #4]
_080E449A:
	adds r4, #8
	adds r5, #8
	subs r6, #1
	movs r0, #1
	rsbs r0, r0, #0
	cmp r6, r0
	bne _080E4484
	mov r0, r8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80E44B8
sub_80E44B8: @ 0x080E44B8
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r5, #4
	movs r1, #2
	bl sub_80AC85C
	ldr r0, _080E44E0 @ =gUnknown_080E61A0
	str r0, [r5]
	movs r0, #1
	ands r0, r4
	cmp r0, #0
	beq _080E44D8
	adds r0, r5, #0
	bl sub_8000608
_080E44D8:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E44E0: .4byte gUnknown_080E61A0

	thumb_func_start sub_80E44E4
sub_80E44E4: @ 0x080E44E4
	push {r4, lr}
	sub sp, #0x10
	adds r4, r0, #0
	movs r0, #0x8c
	bl sub_80005D4
	movs r1, #1
	str r1, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	add r2, sp, #0xc
	strb r1, [r2]
	adds r1, r4, #0
	movs r2, #5
	movs r3, #0x1b
	bl sub_80324BC
	add sp, #0x10
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_80E4510
sub_80E4510: @ 0x080E4510
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _080E4540 @ =gUnknown_080E6250
	str r0, [r4, #0x14]
	ldr r1, [r4, #0x10]
	cmp r1, #0
	beq _080E452C
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E452C:
	movs r0, #1
	ands r0, r5
	cmp r0, #0
	beq _080E453A
	adds r0, r4, #0
	bl sub_8000608
_080E453A:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E4540: .4byte gUnknown_080E6250

	thumb_func_start sub_80E4544
sub_80E4544: @ 0x080E4544
	push {lr}
	adds r2, r0, #0
	ldr r0, _080E4560 @ =gUnknown_080E61A0
	str r0, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080E455A
	adds r0, r2, #0
	bl sub_8000608
_080E455A:
	pop {r0}
	bx r0
	.align 2, 0
_080E4560: .4byte gUnknown_080E61A0

	thumb_func_start sub_80E4564
sub_80E4564: @ 0x080E4564
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r7, r1, #0
	ldr r1, _080E4818 @ =0x00000888
	adds r0, r5, r1
	movs r1, #2
	bl sub_80E4860
	ldr r1, _080E481C @ =0x0000082C
	adds r0, r5, r1
	movs r1, #2
	bl sub_80098AC
	movs r1, #0x82
	lsls r1, r1, #4
	adds r0, r5, r1
	movs r1, #2
	bl sub_80098AC
	movs r1, #0xfd
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E4820 @ =0x000007E4
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0xf8
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E4824 @ =0x000007BC
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0xe1
	lsls r1, r1, #3
	adds r0, r5, r1
	cmp r0, #0
	beq _080E45DA
	adds r1, #0x14
	adds r4, r5, r1
	cmp r0, r4
	beq _080E45DA
	movs r0, #0xe1
	lsls r0, r0, #3
	adds r6, r5, r0
_080E45CE:
	subs r4, #4
	ldr r0, [r4]
	bl sub_8000608
	cmp r6, r4
	bne _080E45CE
_080E45DA:
	ldr r1, _080E4828 @ =0x000006F4
	adds r0, r5, r1
	cmp r0, #0
	beq _080E45FA
	adds r1, #0x14
	adds r4, r5, r1
	cmp r0, r4
	beq _080E45FA
	ldr r0, _080E4828 @ =0x000006F4
	adds r6, r5, r0
_080E45EE:
	subs r4, #4
	ldr r0, [r4]
	bl sub_8000608
	cmp r6, r4
	bne _080E45EE
_080E45FA:
	movs r1, #0xdc
	lsls r1, r1, #3
	adds r0, r5, r1
	cmp r0, #0
	beq _080E461E
	adds r1, #0x14
	adds r4, r5, r1
	cmp r0, r4
	beq _080E461E
	movs r0, #0xdc
	lsls r0, r0, #3
	adds r6, r5, r0
_080E4612:
	subs r4, #4
	ldr r0, [r4]
	bl sub_8000608
	cmp r6, r4
	bne _080E4612
_080E461E:
	ldr r1, _080E482C @ =0x0000062C
	adds r0, r5, r1
	cmp r0, #0
	beq _080E463E
	adds r1, #0x14
	adds r4, r5, r1
	cmp r0, r4
	beq _080E463E
	ldr r0, _080E482C @ =0x0000062C
	adds r6, r5, r0
_080E4632:
	subs r4, #4
	ldr r0, [r4]
	bl sub_8000608
	cmp r6, r4
	bne _080E4632
_080E463E:
	movs r1, #0xc3
	lsls r1, r1, #3
	adds r0, r5, r1
	cmp r0, #0
	beq _080E4662
	adds r1, #0x14
	adds r4, r5, r1
	cmp r0, r4
	beq _080E4662
	movs r0, #0xc3
	lsls r0, r0, #3
	adds r6, r5, r0
_080E4656:
	subs r4, #4
	ldr r0, [r4]
	bl sub_8000608
	cmp r6, r4
	bne _080E4656
_080E4662:
	ldr r1, _080E4830 @ =0x00000564
	adds r0, r5, r1
	cmp r0, #0
	beq _080E4682
	adds r1, #0x14
	adds r4, r5, r1
	cmp r0, r4
	beq _080E4682
	ldr r0, _080E4830 @ =0x00000564
	adds r6, r5, r0
_080E4676:
	subs r4, #4
	ldr r0, [r4]
	bl sub_8000608
	cmp r6, r4
	bne _080E4676
_080E4682:
	movs r1, #0xaa
	lsls r1, r1, #3
	adds r0, r5, r1
	cmp r0, #0
	beq _080E46A6
	adds r1, #0x14
	adds r4, r5, r1
	cmp r0, r4
	beq _080E46A6
	movs r0, #0xaa
	lsls r0, r0, #3
	adds r6, r5, r0
_080E469A:
	subs r4, #4
	ldr r0, [r4]
	bl sub_8000608
	cmp r6, r4
	bne _080E469A
_080E46A6:
	ldr r1, _080E4834 @ =0x0000052C
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0xa5
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E4838 @ =0x00000504
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0xa0
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E483C @ =0x000004DC
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0x9b
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E4840 @ =0x000004B4
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0x96
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E4844 @ =0x0000048C
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0x91
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E4848 @ =0x00000464
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0x8c
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E484C @ =0x0000043C
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E4740
	ldr r0, [r1, #8]
	ldr r2, [r0, #0xc]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E4740:
	movs r1, #0x87
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E4758
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E4758:
	ldr r1, _080E4850 @ =0x00000434
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E476E
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E476E:
	movs r1, #0x86
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E4786
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E4786:
	ldr r1, _080E4854 @ =0x0000042C
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E479C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E479C:
	movs r1, #0x85
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E47B4
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E47B4:
	ldr r1, _080E4858 @ =0x00000424
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E47CA
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E47CA:
	movs r1, #0x84
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E47E2
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E47E2:
	ldr r1, _080E485C @ =0x0000041C
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E47F8
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E47F8:
	movs r1, #0x83
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _080E480A
	movs r1, #3
	bl sub_8050D0C
_080E480A:
	adds r0, r5, #0
	adds r1, r7, #0
	bl sub_80086BC
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080E4818: .4byte 0x00000888
_080E481C: .4byte 0x0000082C
_080E4820: .4byte 0x000007E4
_080E4824: .4byte 0x000007BC
_080E4828: .4byte 0x000006F4
_080E482C: .4byte 0x0000062C
_080E4830: .4byte 0x00000564
_080E4834: .4byte 0x0000052C
_080E4838: .4byte 0x00000504
_080E483C: .4byte 0x000004DC
_080E4840: .4byte 0x000004B4
_080E4844: .4byte 0x0000048C
_080E4848: .4byte 0x00000464
_080E484C: .4byte 0x0000043C
_080E4850: .4byte 0x00000434
_080E4854: .4byte 0x0000042C
_080E4858: .4byte 0x00000424
_080E485C: .4byte 0x0000041C

	thumb_func_start sub_80E4860
sub_80E4860: @ 0x080E4860
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r5, r1, #0
	adds r4, r6, #0
	adds r4, #0x50
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	ldr r1, [r6, #4]
	adds r0, r6, #0
	bl sub_8007C28
	adds r0, r6, #0
	movs r1, #2
	bl sub_80079E8
	movs r0, #1
	ands r0, r5
	cmp r0, #0
	beq _080E493A
	adds r0, r6, #0
	bl sub_8000608
_080E493A:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_80E4940
sub_80E4940: @ 0x080E4940
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r7, r1, #0
	ldr r1, _080E4C70 @ =0x00000AEC
	adds r0, r5, r1
	cmp r0, #0
	beq _080E4966
	adds r1, #0x28
	adds r4, r5, r1
	cmp r0, r4
	beq _080E4966
	ldr r0, _080E4C70 @ =0x00000AEC
	adds r6, r5, r0
_080E495A:
	subs r4, #4
	ldr r0, [r4]
	bl sub_8000608
	cmp r6, r4
	bne _080E495A
_080E4966:
	ldr r1, _080E4C74 @ =0x00000AC8
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E4C78 @ =0x00000AA4
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0xa8
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E4C7C @ =0x00000A7C
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E4C80 @ =0x00000A34
	adds r0, r5, r1
	cmp r0, #0
	beq _080E49B0
	adds r1, #8
	adds r4, r5, r1
	cmp r0, r4
	beq _080E49B0
	ldr r0, _080E4C80 @ =0x00000A34
	adds r6, r5, r0
_080E49A4:
	subs r4, #4
	ldr r0, [r4]
	bl sub_8000608
	cmp r6, r4
	bne _080E49A4
_080E49B0:
	movs r1, #0xa3
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E4C84 @ =0x000009E8
	adds r0, r5, r1
	cmp r0, #0
	beq _080E49DC
	adds r1, #8
	adds r4, r5, r1
	cmp r0, r4
	beq _080E49DC
	ldr r0, _080E4C84 @ =0x000009E8
	adds r6, r5, r0
_080E49D0:
	subs r4, #4
	ldr r0, [r4]
	bl sub_8000608
	cmp r6, r4
	bne _080E49D0
_080E49DC:
	ldr r1, _080E4C88 @ =0x000009E4
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0x9c
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E4C8C @ =0x000009BC
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E4C90 @ =0x00000998
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E4C94 @ =0x00000994
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0x97
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E4C98 @ =0x0000096C
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E4C9C @ =0x00000924
	adds r0, r5, r1
	cmp r0, #0
	beq _080E4A46
	adds r1, #8
	adds r4, r5, r1
	cmp r0, r4
	beq _080E4A46
	ldr r0, _080E4C9C @ =0x00000924
	adds r6, r5, r0
_080E4A3A:
	subs r4, #4
	ldr r0, [r4]
	bl sub_8000608
	cmp r6, r4
	bne _080E4A3A
_080E4A46:
	ldr r1, _080E4CA0 @ =0x0000091C
	adds r0, r5, r1
	cmp r0, #0
	beq _080E4A66
	adds r1, #8
	adds r4, r5, r1
	cmp r0, r4
	beq _080E4A66
	ldr r0, _080E4CA0 @ =0x0000091C
	adds r6, r5, r0
_080E4A5A:
	subs r4, #4
	ldr r0, [r4]
	bl sub_8000608
	cmp r6, r4
	bne _080E4A5A
_080E4A66:
	ldr r1, _080E4CA4 @ =0x000008F8
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E4CA8 @ =0x000008F4
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0x8d
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E4CAC @ =0x000008CC
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E4CB0 @ =0x00000884
	adds r0, r5, r1
	cmp r0, #0
	beq _080E4AB0
	adds r1, #8
	adds r4, r5, r1
	cmp r0, r4
	beq _080E4AB0
	ldr r0, _080E4CB0 @ =0x00000884
	adds r6, r5, r0
_080E4AA4:
	subs r4, #4
	ldr r0, [r4]
	bl sub_8000608
	cmp r6, r4
	bne _080E4AA4
_080E4AB0:
	ldr r1, _080E4CB4 @ =0x0000087C
	adds r0, r5, r1
	cmp r0, #0
	beq _080E4AD0
	adds r1, #8
	adds r4, r5, r1
	cmp r0, r4
	beq _080E4AD0
	ldr r0, _080E4CB4 @ =0x0000087C
	adds r6, r5, r0
_080E4AC4:
	subs r4, #4
	ldr r0, [r4]
	bl sub_8000608
	cmp r6, r4
	bne _080E4AC4
_080E4AD0:
	movs r1, #0xf9
	lsls r1, r1, #3
	adds r0, r5, r1
	cmp r0, #0
	beq _080E4AF4
	adds r1, #0x14
	adds r4, r5, r1
	cmp r0, r4
	beq _080E4AF4
	movs r0, #0xf9
	lsls r0, r0, #3
	adds r6, r5, r0
_080E4AE8:
	subs r4, #4
	ldr r0, [r4]
	bl sub_8000608
	cmp r6, r4
	bne _080E4AE8
_080E4AF4:
	ldr r1, _080E4CB8 @ =0x000007B4
	adds r0, r5, r1
	cmp r0, #0
	beq _080E4B14
	adds r1, #0x14
	adds r4, r5, r1
	cmp r0, r4
	beq _080E4B14
	ldr r0, _080E4CB8 @ =0x000007B4
	adds r6, r5, r0
_080E4B08:
	subs r4, #4
	ldr r0, [r4]
	bl sub_8000608
	cmp r6, r4
	bne _080E4B08
_080E4B14:
	ldr r1, _080E4CBC @ =0x000007AC
	adds r0, r5, r1
	cmp r0, #0
	beq _080E4B34
	adds r1, #8
	adds r4, r5, r1
	cmp r0, r4
	beq _080E4B34
	ldr r0, _080E4CBC @ =0x000007AC
	adds r6, r5, r0
_080E4B28:
	subs r4, #4
	ldr r0, [r4]
	bl sub_8000608
	cmp r6, r4
	bne _080E4B28
_080E4B34:
	ldr r1, _080E4CC0 @ =0x000007A4
	adds r0, r5, r1
	cmp r0, #0
	beq _080E4B54
	adds r1, #8
	adds r4, r5, r1
	cmp r0, r4
	beq _080E4B54
	ldr r0, _080E4CC0 @ =0x000007A4
	adds r6, r5, r0
_080E4B48:
	subs r4, #4
	ldr r0, [r4]
	bl sub_8000608
	cmp r6, r4
	bne _080E4B48
_080E4B54:
	movs r1, #0xf4
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E4B6C
	ldr r0, [r1, #8]
	ldr r2, [r0, #0xc]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E4B6C:
	ldr r1, _080E4CC4 @ =0x0000079C
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E4B82
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E4B82:
	movs r1, #0xf3
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E4B9A
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E4B9A:
	ldr r1, _080E4CC8 @ =0x00000794
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E4BB0
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E4BB0:
	movs r1, #0xf2
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E4BC8
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E4BC8:
	ldr r1, _080E4CCC @ =0x0000078C
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E4BDE
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E4BDE:
	movs r1, #0xf1
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E4BF6
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E4BF6:
	ldr r1, _080E4CD0 @ =0x00000784
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E4C0C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E4C0C:
	movs r1, #0xf0
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E4C24
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E4C24:
	ldr r0, _080E4CD4 @ =0x0000077C
	adds r4, r5, r0
	ldr r1, [r4]
	cmp r1, #0
	beq _080E4C3A
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E4C3A:
	ldr r1, _080E4CD8 @ =0x0000073C
	adds r0, r5, r1
	cmp r0, #0
	beq _080E4C5E
	cmp r0, r4
	beq _080E4C5E
	adds r6, r0, #0
_080E4C48:
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	cmp r6, r4
	bne _080E4C48
_080E4C5E:
	ldr r1, _080E4CDC @ =0x0000072C
	adds r0, r5, r1
	cmp r0, #0
	beq _080E4CFC
	adds r1, #0x10
	adds r4, r5, r1
	cmp r0, r4
	b _080E4CE0
	.align 2, 0
_080E4C70: .4byte 0x00000AEC
_080E4C74: .4byte 0x00000AC8
_080E4C78: .4byte 0x00000AA4
_080E4C7C: .4byte 0x00000A7C
_080E4C80: .4byte 0x00000A34
_080E4C84: .4byte 0x000009E8
_080E4C88: .4byte 0x000009E4
_080E4C8C: .4byte 0x000009BC
_080E4C90: .4byte 0x00000998
_080E4C94: .4byte 0x00000994
_080E4C98: .4byte 0x0000096C
_080E4C9C: .4byte 0x00000924
_080E4CA0: .4byte 0x0000091C
_080E4CA4: .4byte 0x000008F8
_080E4CA8: .4byte 0x000008F4
_080E4CAC: .4byte 0x000008CC
_080E4CB0: .4byte 0x00000884
_080E4CB4: .4byte 0x0000087C
_080E4CB8: .4byte 0x000007B4
_080E4CBC: .4byte 0x000007AC
_080E4CC0: .4byte 0x000007A4
_080E4CC4: .4byte 0x0000079C
_080E4CC8: .4byte 0x00000794
_080E4CCC: .4byte 0x0000078C
_080E4CD0: .4byte 0x00000784
_080E4CD4: .4byte 0x0000077C
_080E4CD8: .4byte 0x0000073C
_080E4CDC: .4byte 0x0000072C
_080E4CE0:
	beq _080E4CFC
	ldr r0, _080E4D44 @ =0x0000072C
	adds r6, r5, r0
_080E4CE6:
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	cmp r6, r4
	bne _080E4CE6
_080E4CFC:
	ldr r1, _080E4D48 @ =0x00000724
	adds r4, r5, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	ldr r0, _080E4D4C @ =0x0000071C
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r1, #0xe3
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _080E4D36
	movs r1, #3
	bl sub_8050D0C
_080E4D36:
	adds r0, r5, #0
	adds r1, r7, #0
	bl sub_80086BC
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080E4D44: .4byte 0x0000072C
_080E4D48: .4byte 0x00000724
_080E4D4C: .4byte 0x0000071C

	thumb_func_start sub_80E4D50
sub_80E4D50: @ 0x080E4D50
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	movs r1, #0xb6
	lsls r1, r1, #3
	adds r0, r4, r1
	movs r1, #2
	bl sub_80E4F34
	ldr r1, _080E4F00 @ =0x00000594
	adds r0, r4, r1
	movs r1, #2
	bl sub_80098AC
	movs r1, #0xb1
	lsls r1, r1, #3
	adds r0, r4, r1
	movs r1, #2
	bl sub_80098AC
	ldr r1, _080E4F04 @ =0x00000554
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0xaa
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E4F08 @ =0x0000052C
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0xa5
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E4F0C @ =0x00000504
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0xa0
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E4F10 @ =0x000004DC
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0x9b
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E4F14 @ =0x000004B4
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0x96
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E4F18 @ =0x0000048C
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0x91
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E4F1C @ =0x00000464
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0x8c
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E4F20 @ =0x0000043C
	adds r0, r4, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E4E28
	ldr r0, [r1, #8]
	ldr r2, [r0, #0xc]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E4E28:
	movs r1, #0x87
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E4E40
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E4E40:
	ldr r1, _080E4F24 @ =0x00000434
	adds r0, r4, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E4E56
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E4E56:
	movs r1, #0x86
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E4E6E
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E4E6E:
	ldr r1, _080E4F28 @ =0x0000042C
	adds r0, r4, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E4E84
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E4E84:
	movs r1, #0x85
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E4E9C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E4E9C:
	ldr r1, _080E4F2C @ =0x00000424
	adds r0, r4, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E4EB2
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E4EB2:
	movs r1, #0x84
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E4ECA
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E4ECA:
	ldr r1, _080E4F30 @ =0x0000041C
	adds r0, r4, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E4EE0
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E4EE0:
	movs r1, #0x83
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _080E4EF2
	movs r1, #3
	bl sub_8050D0C
_080E4EF2:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_80086BC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E4F00: .4byte 0x00000594
_080E4F04: .4byte 0x00000554
_080E4F08: .4byte 0x0000052C
_080E4F0C: .4byte 0x00000504
_080E4F10: .4byte 0x000004DC
_080E4F14: .4byte 0x000004B4
_080E4F18: .4byte 0x0000048C
_080E4F1C: .4byte 0x00000464
_080E4F20: .4byte 0x0000043C
_080E4F24: .4byte 0x00000434
_080E4F28: .4byte 0x0000042C
_080E4F2C: .4byte 0x00000424
_080E4F30: .4byte 0x0000041C

	thumb_func_start sub_80E4F34
sub_80E4F34: @ 0x080E4F34
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r5, r1, #0
	adds r4, r6, #0
	adds r4, #0x40
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	ldr r1, [r6, #4]
	adds r0, r6, #0
	bl sub_8007C28
	adds r0, r6, #0
	movs r1, #2
	bl sub_80079E8
	movs r0, #1
	ands r0, r5
	cmp r0, #0
	beq _080E4FEA
	adds r0, r6, #0
	bl sub_8000608
_080E4FEA:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_80E4FF0
sub_80E4FF0: @ 0x080E4FF0
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r7, r1, #0
	ldr r1, _080E5250 @ =0x0000083C
	adds r0, r5, r1
	movs r1, #2
	bl sub_80E5324
	movs r1, #0x83
	lsls r1, r1, #4
	adds r0, r5, r1
	movs r1, #2
	bl sub_80098AC
	ldr r1, _080E5254 @ =0x00000824
	adds r0, r5, r1
	movs r1, #2
	bl sub_80098AC
	ldr r1, _080E5258 @ =0x000007EC
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0xfd
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E525C @ =0x000007C4
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0xf8
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E5260 @ =0x0000079C
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0xf3
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E5264 @ =0x00000754
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0xea
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E5268 @ =0x0000072C
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0xe5
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E526C @ =0x000006A4
	adds r0, r5, r1
	cmp r0, #0
	beq _080E50A4
	adds r1, #0x64
	adds r4, r5, r1
	cmp r0, r4
	beq _080E50A4
	ldr r0, _080E526C @ =0x000006A4
	adds r6, r5, r0
_080E5098:
	subs r4, #4
	ldr r0, [r4]
	bl sub_8000608
	cmp r6, r4
	bne _080E5098
_080E50A4:
	movs r1, #0xd4
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E5270 @ =0x0000061C
	adds r0, r5, r1
	cmp r0, #0
	beq _080E50D0
	adds r1, #0x64
	adds r4, r5, r1
	cmp r0, r4
	beq _080E50D0
	ldr r0, _080E5270 @ =0x0000061C
	adds r6, r5, r0
_080E50C4:
	subs r4, #4
	ldr r0, [r4]
	bl sub_8000608
	cmp r6, r4
	bne _080E50C4
_080E50D0:
	movs r1, #0xc3
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E5274 @ =0x000005F4
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E5278 @ =0x000005CC
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0xb9
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E527C @ =0x000005A4
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0xb4
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E5280 @ =0x0000057C
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0xaf
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E5284 @ =0x00000554
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	movs r1, #0xaa
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8000608
	ldr r1, _080E5288 @ =0x00000544
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E5160
	ldr r0, [r1, #8]
	ldr r2, [r0, #0xc]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E5160:
	movs r1, #0xa8
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E5178
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E5178:
	ldr r1, _080E528C @ =0x0000053C
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E518E
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E518E:
	movs r1, #0xa7
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E51A6
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E51A6:
	ldr r1, _080E5290 @ =0x00000534
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E51BC
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E51BC:
	movs r1, #0xa6
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E51D4
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E51D4:
	ldr r1, _080E5294 @ =0x0000052C
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E51EA
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E51EA:
	movs r1, #0xa5
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E5202
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E5202:
	ldr r1, _080E5298 @ =0x00000524
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E5218
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E5218:
	movs r1, #0xa4
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080E5230
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E5230:
	ldr r1, _080E529C @ =0x0000051C
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _080E5240
	movs r1, #3
	bl sub_8050D0C
_080E5240:
	adds r0, r5, #0
	adds r1, r7, #0
	bl sub_80086BC
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080E5250: .4byte 0x0000083C
_080E5254: .4byte 0x00000824
_080E5258: .4byte 0x000007EC
_080E525C: .4byte 0x000007C4
_080E5260: .4byte 0x0000079C
_080E5264: .4byte 0x00000754
_080E5268: .4byte 0x0000072C
_080E526C: .4byte 0x000006A4
_080E5270: .4byte 0x0000061C
_080E5274: .4byte 0x000005F4
_080E5278: .4byte 0x000005CC
_080E527C: .4byte 0x000005A4
_080E5280: .4byte 0x0000057C
_080E5284: .4byte 0x00000554
_080E5288: .4byte 0x00000544
_080E528C: .4byte 0x0000053C
_080E5290: .4byte 0x00000534
_080E5294: .4byte 0x0000052C
_080E5298: .4byte 0x00000524
_080E529C: .4byte 0x0000051C

	thumb_func_start sub_80E52A0
sub_80E52A0: @ 0x080E52A0
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	bl sub_8007874
	movs r5, #0
	str r5, [r6, #4]
	adds r4, r6, #0
	adds r4, #8
	adds r0, r4, #0
	bl sub_8007874
	str r5, [r4, #4]
	adds r4, #8
	adds r0, r4, #0
	bl sub_8007874
	str r5, [r4, #4]
	adds r4, #8
	adds r0, r4, #0
	bl sub_8007874
	str r5, [r4, #4]
	adds r4, #8
	adds r0, r4, #0
	bl sub_8007874
	str r5, [r4, #4]
	adds r4, #8
	adds r0, r4, #0
	bl sub_8007874
	str r5, [r4, #4]
	adds r4, #8
	adds r0, r4, #0
	bl sub_8007874
	str r5, [r4, #4]
	adds r4, #8
	adds r0, r4, #0
	bl sub_8007874
	str r5, [r4, #4]
	adds r4, #8
	adds r0, r4, #0
	bl sub_8007874
	str r5, [r4, #4]
	adds r4, #8
	adds r0, r4, #0
	bl sub_8007874
	str r5, [r4, #4]
	adds r4, #8
	adds r0, r4, #0
	bl sub_8007874
	str r5, [r4, #4]
	adds r4, #8
	adds r0, r4, #0
	bl sub_8007874
	str r5, [r4, #4]
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_80E5324
sub_80E5324: @ 0x080E5324
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r5, r1, #0
	adds r4, r6, #0
	adds r4, #0x58
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	ldr r1, [r6, #4]
	adds r0, r6, #0
	bl sub_8007C28
	adds r0, r6, #0
	movs r1, #2
	bl sub_80079E8
	movs r0, #1
	ands r0, r5
	cmp r0, #0
	beq _080E5410
	adds r0, r6, #0
	bl sub_8000608
_080E5410:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E5418
sub_80E5418: @ 0x080E5418
	push {lr}
	ldr r0, _080E5428 @ =gUnknown_03000414
	ldr r0, [r0]
	ldr r0, [r0]
	bl sub_80CA6F4
	pop {r0}
	bx r0
	.align 2, 0
_080E5428: .4byte gUnknown_03000414

	thumb_func_start sub_80E542C
sub_80E542C: @ 0x080E542C
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r0, _080E5468 @ =gUnknown_080E857C
	str r0, [r5, #0x14]
	ldr r0, [r1]
	str r0, [r5]
	movs r4, #4
	movs r0, #4
	bl sub_8000528
	ands r4, r0
	strh r4, [r5, #4]
	ldr r0, _080E546C @ =gUnknown_03000414
	ldr r1, [r0]
	str r5, [r0]
	str r1, [r5, #8]
	ldr r0, _080E5470 @ =gUnknown_080E8588
	str r0, [r5, #0xc]
	ldr r1, _080E5474 @ =sub_80E5418
	movs r0, #2
	bl sub_80D100C
	str r0, [r5, #0x10]
	movs r0, #4
	bl sub_800050C
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080E5468: .4byte gUnknown_080E857C
_080E546C: .4byte gUnknown_03000414
_080E5470: .4byte gUnknown_080E8588
_080E5474: .4byte sub_80E5418

	thumb_func_start sub_80E5478
sub_80E5478: @ 0x080E5478
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _080E54B8 @ =gUnknown_080E857C
	str r0, [r4, #0x14]
	movs r0, #4
	bl sub_8000528
	ldr r1, [r4, #0x10]
	movs r0, #2
	bl sub_80D100C
	ldr r0, _080E54BC @ =gUnknown_080E8594
	str r0, [r4, #0xc]
	ldr r1, _080E54C0 @ =gUnknown_03000414
	ldr r0, [r4, #8]
	str r0, [r1]
	ldrh r0, [r4, #4]
	cmp r0, #0
	beq _080E54A4
	bl sub_80004F4
_080E54A4:
	movs r0, #1
	ands r0, r5
	cmp r0, #0
	beq _080E54B2
	adds r0, r4, #0
	bl sub_8000608
_080E54B2:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E54B8: .4byte gUnknown_080E857C
_080E54BC: .4byte gUnknown_080E8594
_080E54C0: .4byte gUnknown_03000414

	thumb_func_start sub_80E54C4
sub_80E54C4: @ 0x080E54C4
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r4, r1, #0
	cmp r4, #0
	beq _080E54E8
_080E54CE:
	ldr r1, [r4, #0xc]
	adds r0, r6, #0
	bl sub_80E54C4
	ldr r5, [r4, #8]
	cmp r4, #0
	beq _080E54E2
	adds r0, r4, #0
	bl sub_80D0260
_080E54E2:
	adds r4, r5, #0
	cmp r4, #0
	bne _080E54CE
_080E54E8:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E54F0
sub_80E54F0: @ 0x080E54F0
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r6, r1, #0
	ldr r4, [sp, #0x14]
	adds r5, r3, #0
	ldr r0, [r6, #4]
	cmp r5, r0
	beq _080E551A
	ldr r0, [sp, #0x18]
	cmp r0, #0
	bne _080E555A
	cmp r2, #0
	bne _080E551A
	movs r2, #0
	ldr r1, [r4]
	ldr r0, [r5, #0x10]
	cmp r1, r0
	bhs _080E5516
	movs r2, #1
_080E5516:
	cmp r2, #0
	beq _080E555A
_080E551A:
	movs r0, #0x18
	bl sub_80D01F8
	adds r2, r0, #0
	cmp r2, #0
	bne _080E552E
	movs r0, #0x18
	bl sub_80D3BC0
	adds r2, r0, #0
_080E552E:
	adds r1, r2, #0
	adds r1, #0x10
	cmp r1, #0
	beq _080E553E
	ldr r0, [r4]
	str r0, [r2, #0x10]
	ldr r0, [r4, #4]
	str r0, [r1, #4]
_080E553E:
	adds r4, r2, #0
	str r4, [r5, #8]
	ldr r1, [r6, #4]
	cmp r5, r1
	bne _080E5550
	str r4, [r5, #4]
	ldr r0, [r6, #4]
	str r4, [r0, #0xc]
	b _080E558C
_080E5550:
	ldr r0, [r1, #8]
	cmp r5, r0
	bne _080E558C
	str r4, [r1, #8]
	b _080E558C
_080E555A:
	movs r0, #0x18
	bl sub_80D01F8
	adds r2, r0, #0
	cmp r2, #0
	bne _080E556E
	movs r0, #0x18
	bl sub_80D3BC0
	adds r2, r0, #0
_080E556E:
	adds r1, r2, #0
	adds r1, #0x10
	cmp r1, #0
	beq _080E557E
	ldr r0, [r4]
	str r0, [r2, #0x10]
	ldr r0, [r4, #4]
	str r0, [r1, #4]
_080E557E:
	adds r4, r2, #0
	str r4, [r5, #0xc]
	ldr r1, [r6, #4]
	ldr r0, [r1, #0xc]
	cmp r5, r0
	bne _080E558C
	str r4, [r1, #0xc]
_080E558C:
	str r5, [r4, #4]
	movs r0, #0
	str r0, [r4, #8]
	str r0, [r4, #0xc]
	ldr r1, [r6, #4]
	adds r1, #4
	adds r0, r4, #0
	bl sub_80E21E0
	ldr r0, [r6, #8]
	adds r0, #1
	str r0, [r6, #8]
	str r4, [r7]
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80E55B0
sub_80E55B0: @ 0x080E55B0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x14
	adds r6, r0, #0
	mov r8, r1
	adds r7, r2, #0
	ldr r4, [r1, #4]
	ldr r5, [r4, #4]
	movs r0, #1
	cmp r5, #0
	beq _080E55E6
	ldr r2, [r7]
_080E55CA:
	adds r4, r5, #0
	movs r1, #0
	ldr r0, [r4, #0x10]
	cmp r2, r0
	bhs _080E55D6
	movs r1, #1
_080E55D6:
	adds r0, r1, #0
	cmp r0, #0
	beq _080E55E0
	ldr r5, [r4, #8]
	b _080E55E2
_080E55E0:
	ldr r5, [r4, #0xc]
_080E55E2:
	cmp r5, #0
	bne _080E55CA
_080E55E6:
	str r4, [sp, #8]
	cmp r0, #0
	beq _080E5620
	mov r1, r8
	ldr r0, [r1, #4]
	ldr r0, [r0, #8]
	str r0, [sp, #0xc]
	movs r1, #0
	cmp r4, r0
	bne _080E55FC
	movs r1, #1
_080E55FC:
	cmp r1, #0
	beq _080E5618
	str r7, [sp]
	movs r0, #0
	str r0, [sp, #4]
	add r0, sp, #0x10
	mov r1, r8
	adds r2, r5, #0
	adds r3, r4, #0
	bl sub_80E54F0
	movs r1, #1
	ldr r0, [sp, #0x10]
	b _080E564A
_080E5618:
	adds r0, r4, #0
	bl sub_80E2354
	str r0, [sp, #8]
_080E5620:
	ldr r2, [sp, #8]
	movs r3, #0
	ldr r1, [r2, #0x10]
	ldr r0, [r7]
	cmp r1, r0
	bhs _080E562E
	movs r3, #1
_080E562E:
	adds r0, r3, #0
	cmp r0, #0
	beq _080E5650
	str r7, [sp]
	movs r0, #0
	str r0, [sp, #4]
	add r0, sp, #0xc
	mov r1, r8
	adds r2, r5, #0
	adds r3, r4, #0
	bl sub_80E54F0
	movs r1, #1
	ldr r0, [sp, #0xc]
_080E564A:
	str r0, [r6]
	strb r1, [r6, #4]
	b _080E5654
_080E5650:
	str r2, [r6]
	strb r0, [r6, #4]
_080E5654:
	adds r0, r6, #0
	add sp, #0x14
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80E5664
sub_80E5664: @ 0x080E5664
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x18
	adds r7, r0, #0
	adds r6, r1, #0
	mov r8, r2
	adds r4, r3, #0
	ldr r1, [r6, #4]
	ldr r2, [r2]
	ldr r0, [r1, #8]
	cmp r2, r0
	bne _080E56F4
	ldr r0, [r6, #8]
	cmp r0, #0
	bne _080E5694
	add r0, sp, #8
	adds r1, r6, #0
	adds r2, r4, #0
	bl sub_80E55B0
	ldr r0, [sp, #8]
	b _080E5808
_080E5694:
	movs r0, #0
	ldr r1, [r2, #0x10]
	adds r3, r2, #0
	ldr r2, [r4]
	cmp r2, r1
	bhs _080E56A2
	movs r0, #1
_080E56A2:
	mov sb, r0
	cmp r0, #0
	bne _080E5768
	movs r0, #0
	cmp r1, r2
	bhs _080E56B0
	movs r0, #1
_080E56B0:
	cmp r0, #0
	bne _080E56B8
	str r3, [r7]
	b _080E580A
_080E56B8:
	str r3, [sp, #8]
	adds r0, r3, #0
	bl sub_80E2B28
	adds r2, r0, #0
	str r2, [sp, #8]
	ldr r0, [r6, #4]
	cmp r2, r0
	bne _080E56D0
	mov r0, r8
	ldr r3, [r0]
	b _080E57CE
_080E56D0:
	movs r3, #0
	ldr r1, [r4]
	ldr r0, [r2, #0x10]
	adds r5, r2, #0
	cmp r1, r0
	bhs _080E56DE
	movs r3, #1
_080E56DE:
	cmp r3, #0
	bne _080E56E4
	b _080E57FC
_080E56E4:
	mov r1, r8
	ldr r3, [r1]
	ldr r0, [r3, #0xc]
	cmp r0, #0
	beq _080E57CE
	str r4, [sp]
	mov r0, sb
	b _080E57E2
_080E56F4:
	cmp r2, r1
	bne _080E571E
	ldr r3, [r2, #0xc]
	movs r5, #0
	ldr r1, [r3, #0x10]
	ldr r0, [r4]
	cmp r1, r0
	bhs _080E5706
	movs r5, #1
_080E5706:
	cmp r5, #0
	beq _080E5710
	str r4, [sp]
	str r2, [sp, #4]
	b _080E57D2
_080E5710:
	add r0, sp, #8
	adds r1, r6, #0
	adds r2, r4, #0
	bl sub_80E55B0
	ldr r0, [sp, #8]
	b _080E5808
_080E571E:
	str r2, [sp, #8]
	adds r0, r2, #0
	bl sub_80E2354
	adds r2, r0, #0
	str r2, [sp, #8]
	mov r1, r8
	ldr r3, [r1]
	movs r5, #0
	ldr r1, [r4]
	ldr r0, [r3, #0x10]
	cmp r1, r0
	bhs _080E573A
	movs r5, #1
_080E573A:
	mov sb, r5
	cmp r5, #0
	beq _080E577A
	movs r0, #0
	mov ip, r0
	ldr r0, [r2, #0x10]
	adds r5, r2, #0
	cmp r0, r1
	bhs _080E5750
	movs r1, #1
	mov ip, r1
_080E5750:
	mov r0, ip
	cmp r0, #0
	beq _080E577A
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080E5768
	str r4, [sp]
	str r5, [sp, #4]
	adds r0, r7, #0
	adds r1, r6, #0
	movs r2, #0
	b _080E57EA
_080E5768:
	str r4, [sp]
	movs r0, #0
	str r0, [sp, #4]
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r3, #0
	bl sub_80E54F0
	b _080E580A
_080E577A:
	mov r1, r8
	ldr r0, [r1]
	str r0, [sp, #0xc]
	bl sub_80E2B28
	mov ip, r0
	str r0, [sp, #0xc]
	movs r0, #1
	mov r1, sb
	eors r1, r0
	mov r0, sb
	cmp r0, #0
	bne _080E57F2
	mov r1, r8
	ldr r0, [r1]
	movs r5, #0
	ldr r1, [r0, #0x10]
	adds r3, r0, #0
	ldr r2, [r4]
	cmp r1, r2
	bhs _080E57A6
	movs r5, #1
_080E57A6:
	adds r1, r5, #0
	cmp r1, #0
	beq _080E57F2
	ldr r0, [r6, #4]
	mov r5, ip
	cmp r5, r0
	beq _080E57C8
	movs r0, #0
	mov ip, r0
	ldr r0, [r5, #0x10]
	cmp r2, r0
	bhs _080E57C2
	movs r0, #1
	mov ip, r0
_080E57C2:
	mov r0, ip
	cmp r0, #0
	beq _080E57F2
_080E57C8:
	ldr r0, [r3, #0xc]
	cmp r0, #0
	bne _080E57DE
_080E57CE:
	str r4, [sp]
	str r3, [sp, #4]
_080E57D2:
	adds r0, r7, #0
	adds r1, r6, #0
	movs r2, #0
	bl sub_80E54F0
	b _080E580A
_080E57DE:
	str r4, [sp]
	movs r0, #0
_080E57E2:
	str r0, [sp, #4]
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r5, #0
_080E57EA:
	adds r3, r5, #0
	bl sub_80E54F0
	b _080E580A
_080E57F2:
	cmp sb, r1
	bne _080E57FC
	mov r1, r8
	ldr r0, [r1]
	b _080E5808
_080E57FC:
	add r0, sp, #0x10
	adds r1, r6, #0
	adds r2, r4, #0
	bl sub_80E55B0
	ldr r0, [sp, #0x10]
_080E5808:
	str r0, [r7]
_080E580A:
	adds r0, r7, #0
	add sp, #0x18
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80E581C
sub_80E581C: @ 0x080E581C
	push {lr}
	adds r3, r0, #0
	ldr r0, _080E583C @ =gUnknown_080E8594
	str r0, [r3, #4]
	ldr r2, _080E5840 @ =gUnknown_03000414
	ldr r0, [r3]
	str r0, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080E5838
	adds r0, r3, #0
	bl sub_8000608
_080E5838:
	pop {r0}
	bx r0
	.align 2, 0
_080E583C: .4byte gUnknown_080E8594
_080E5840: .4byte gUnknown_03000414

	thumb_func_start sub_80E5844
sub_80E5844: @ 0x080E5844
	push {lr}
	adds r3, r0, #0
	ldr r0, _080E5864 @ =gUnknown_080E8594
	str r0, [r3, #4]
	ldr r2, _080E5868 @ =gUnknown_03000414
	ldr r0, [r3]
	str r0, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080E5860
	adds r0, r3, #0
	bl sub_8000608
_080E5860:
	pop {r0}
	bx r0
	.align 2, 0
_080E5864: .4byte gUnknown_080E8594
_080E5868: .4byte gUnknown_03000414

	thumb_func_start sub_80E586C
sub_80E586C: @ 0x080E586C
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5, #4]
	ldr r4, [r0]
	cmp r4, r0
	beq _080E588A
_080E5878:
	adds r0, r4, #0
	ldr r4, [r4]
	cmp r0, #0
	beq _080E5884
	bl sub_80D0260
_080E5884:
	ldr r0, [r5, #4]
	cmp r4, r0
	bne _080E5878
_080E588A:
	ldr r0, [r5, #4]
	str r0, [r0]
	str r0, [r0, #4]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80E5898
sub_80E5898: @ 0x080E5898
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	mov r8, r1
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r5, r0
	ldr r0, _080E5968 @ =gUnknown_080E85AC
	str r0, [r1]
	movs r1, #0xbb
	lsls r1, r1, #2
	adds r0, r5, r1
	cmp r0, #0
	beq _080E58DA
	adds r1, #0x40
	adds r4, r5, r1
	cmp r0, r4
	beq _080E58DA
	movs r0, #0xbb
	lsls r0, r0, #2
	adds r6, r5, r0
_080E58C4:
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	cmp r6, r4
	bne _080E58C4
_080E58DA:
	movs r1, #0xab
	lsls r1, r1, #2
	adds r0, r5, r1
	subs r1, #0x94
	adds r7, r5, r1
	cmp r0, #0
	beq _080E590C
	adds r1, #0xd4
	adds r4, r5, r1
	cmp r0, r4
	beq _080E590C
	movs r0, #0xab
	lsls r0, r0, #2
	adds r6, r5, r0
_080E58F6:
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	cmp r6, r4
	bne _080E58F6
_080E590C:
	movs r1, #0xa9
	lsls r1, r1, #2
	adds r4, r5, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_80073E0
	adds r0, r4, #0
	movs r1, #2
	bl sub_8007184
	movs r0, #0xa7
	lsls r0, r0, #2
	adds r4, r5, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl sub_8007C28
	adds r0, r4, #0
	movs r1, #2
	bl sub_80079E8
	movs r1, #0x85
	lsls r1, r1, #2
	adds r2, r5, r1
	ldr r1, [r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r2, r0
	adds r0, r7, #0
	cmp r0, r2
	beq _080E5956
_080E5950:
	adds r0, #0xc
	cmp r0, r2
	bne _080E5950
_080E5956:
	adds r0, r5, #0
	mov r1, r8
	bl sub_80CADF0
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080E5968: .4byte gUnknown_080E85AC

	thumb_func_start sub_80E596C
sub_80E596C: @ 0x080E596C
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	adds r0, #0x80
	movs r1, #2
	bl sub_8050D0C
	ldr r1, [r4, #0x7c]
	cmp r1, #0
	beq _080E5992
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E5992:
	ldr r1, [r4, #0x78]
	cmp r1, #0
	beq _080E59AA
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl sub_80D3914
_080E59AA:
	ldr r0, _080E59BC @ =gUnknown_080E5A28
	str r0, [r4, #0x10]
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_80086BC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E59BC: .4byte gUnknown_080E5A28

	thumb_func_start sub_80E59C0
sub_80E59C0: @ 0x080E59C0
	push {lr}
	bl sub_80A4B6C
	pop {r0}
	bx r0
.align 2, 0
